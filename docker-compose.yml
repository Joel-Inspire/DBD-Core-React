version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api-gateway

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://pvx_user:${DB_PASSWORD}@postgres:5432/pvx_db
      - PVX_PROCESSOR_URL=http://pvx-processor:3001
    depends_on:
      postgres:
        condition: service_healthy
      pvx-processor:
        condition: service_started

  pvx-processor:
    build:
      context: ./services/pvx-processor
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://pvx_user:${DB_PASSWORD}@postgres:5432/pvx_db
    volumes:
      - pvx-data:/app/data
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pvx_db
      - POSTGRES_USER=pvx_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pvx_user -d pvx_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  pvx-data:

networks:
  default:
    driver: bridge
