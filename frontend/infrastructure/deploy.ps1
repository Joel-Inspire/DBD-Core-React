# Deploy-AzureInfrastructure.ps1
param(
    [Parameter(Mandatory=$true)]
    [string]$ResourceGroupName = "dbd-frontend-rg",

    [Parameter(Mandatory=$true)]
    [string]$Location = "eastus",

    [Parameter(Mandatory=$true)]
    [string]$AppName = "dbd-frontend",

    [Parameter(Mandatory=$true)]
    [string]$TenantId,

    [Parameter(Mandatory=$true)]
    [string]$SubscriptionId,

    [Parameter(Mandatory=$false)]
    [string]$Environment = "production"
)

# Login to Azure
Write-Host "Logging into Azure..."
az login --tenant $TenantId
az account set --subscription $SubscriptionId

# Create or update resource group
Write-Host "Creating/Updating Resource Group..."
az group create `
    --name $ResourceGroupName `
    --location $Location `
    --tags `
        environment=$Environment `
        project="demandbridge-dbd" `
        component="frontend"

# Deploy Bicep template
Write-Host "Deploying Infrastructure..."
$deploymentName = "dbd-frontend-$((Get-Date).ToString('yyyyMMdd-HHmmss'))"

az deployment group create `
    --name $deploymentName `
    --resource-group $ResourceGroupName `
    --template-file "./main.bicep" `
    --parameters `
        appName=$AppName `
        location=$Location `
        tags="{'environment':'$Environment','project':'demandbridge-dbd','component':'frontend'}"

# Get deployment outputs
Write-Host "Getting Deployment Outputs..."
$outputs = az deployment group show `
    --name $deploymentName `
    --resource-group $ResourceGroupName `
    --query "properties.outputs" `
    --output json | ConvertFrom-Json

# Create .env.production file from outputs
$envContent = @"
# Generated by deploy.ps1 on $(Get-Date)
VITE_API_URL=https://$($outputs.staticWebAppHostname.value)
VITE_CDN_URL=https://$($outputs.cdnEndpointHostname.value)
VITE_APPLICATIONINSIGHTS_CONNECTION_STRING=$($outputs.appInsightsConnectionString.value)

# Legacy PVX System Integration
VITE_PVX_IMPORT_ENABLED=true
VITE_PVX_FILE_EXTENSIONS=.pxprg
VITE_LEGACY_MODULES=tf2g,tf2w,tf2z

# Data Type Migration Settings
VITE_CHAR_TO_VARCHAR_ENABLED=true
VITE_NUMBER_TO_DECIMAL_ENABLED=true
VITE_DATE_TO_TIMESTAMP_ENABLED=true
VITE_DEFAULT_NUMERIC_PRECISION=14
VITE_DEFAULT_NUMERIC_SCALE=3

# Module Configuration
VITE_AP_MODULES=AP0_Div,AP2_Term,AP3_VendCatg,AP4_Vend,AP5_VendStatus,AP8_VendMsg,AP9_VendStats,APA_InvoiceEntManChk
VITE_AR_MODULES=AR1_Cust,AR2_Terms,AR5_SlsTax,AR6_OpenInvoice,ARA_SlspersonStats,ARB_InvoiceEntHdr

# Database Migration Features
VITE_ROW_LEVEL_SECURITY_ENABLED=true
VITE_FULL_TEXT_SEARCH_ENABLED=true
VITE_AUDIT_TRIGGERS_ENABLED=true
VITE_UUID_PRIMARY_KEYS_ENABLED=true
VITE_FOREIGN_KEY_CONSTRAINTS_ENABLED=true

# Azure Configuration
VITE_AZURE_TENANT_ID=$TenantId

# Security Settings
VITE_AUTH_ENABLED=true
VITE_REQUIRE_SSL=true
VITE_CORS_ALLOWED_ORIGINS=https://*.$($outputs.staticWebAppHostname.value)

# Monitoring Settings
VITE_LOG_LEVEL=info
VITE_ENABLE_PERFORMANCE_MONITORING=true
VITE_ENABLE_ERROR_REPORTING=true
VITE_ENABLE_AUDIT_LOGGING=true
"@

# Save .env.production file
$envContent | Out-File -FilePath "../.env.production" -Encoding UTF8

Write-Host "`nDeployment Complete!`n"
Write-Host "Static Web App URL: https://$($outputs.staticWebAppHostname.value)"
Write-Host "CDN Endpoint: https://$($outputs.cdnEndpointHostname.value)"
Write-Host "Application Insights Connection String: $($outputs.appInsightsConnectionString.value)"

Write-Host "`nNext Steps:"
Write-Host "1. Configure your custom domain in the Azure Portal"
Write-Host "2. Set up Azure AD authentication"
Write-Host "3. Configure your GitHub repository for CI/CD"
Write-Host "4. Review and update the generated .env.production file"
