0010 REM "Calculate costs <QS2DAG>
0020 SETESC 9300; SETERR 9000
0040 REM "Copyright 1988 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0060 REM "Estimate costs and fill in cost buckets A(19)-A(23)
0061 REM "R() is running costs, F() is flat costs, F0 is flat charge
0070 REM "If R0$="*" then recompute column I and leave, If R1$<>"*" rebuild full R() and F() arrays and F0
0071 REM "F1 is selling price
0380 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8],H[9],H[10],H[11],H[12]
0390 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12],J[13],J[14],J[15],J[16],J[17],J[18],J[19],J[20],J[21],J[22],J[23],J[24],J[25]
0600 IF R0$<>"*" THEN GOTO 0800
0610 IF R1$<>"*" THEN GOSUB 1000
0620 GOSUB 2100
0680 R0$=""
0690 IF R2$<>"" THEN RUN R2$ ELSE GOTO 9900
0800 REM "Recalc all costs
0810 GOSUB 1000
0820 GOSUB 2000
0830 GOTO 9900
1000 REM "Init
1005 DIM R[25],F[25],J[25]; F0=0,F1=0,R1$=""
1010 IF H$(1,20)<>G$(1,20) THEN FIND (Z[8],KEY=G$(11,20),DOM=1011)IOL=0380
1018 REM "Set H1 to index of highest break
1019 H1=1
1020 IF H1=12 THEN GOTO 1021 ELSE IF H[H1+1]<>0 THEN H1=H1+1; GOTO 1020
1100 REM 
1105 IF E0$="" THEN GOTO 1181
1110 FOR I1=1 TO LEN(E0$) STEP 3
1120 READ (Z[9],KEY=G$(11,20)+E0$(I1,3),DOM=1180)IOL=0390
1125 ON POS(J$(64,1)="OFR") GOTO 1180,1130,1140,1150
1130 REM "One time
1135 F0=F0+J[12],F1=F1+J[25]; GOTO 1180
1140 REM "Flat charges
1145 F0=F0+J[12],F1=F1+J[25]; FOR I0=1 TO H1; F[I0]=F[I0]+J[I0-1],F[I0+13]=F[I0+13]+J[I0+12]; NEXT I0
1146 GOTO 1180
1150 REM "Running charges
1155 F0=F0+J[12],F1=F1+J[25]; FOR I0=1 TO H1; R[I0]=R[I0]+J[I0-1],R[I0+13]=R[I0+13]+J[I0+12]; NEXT I0
1156 GOTO 1180
1180 NEXT I1
1200 REM "Convert to proper U/M if necessary
1290 R1$="*"
1295 RETURN 
2000 REM "Figure costs for selling breaks
2010 FOR I=2 TO 6; GOSUB 2100; NEXT I
2090 RETURN 
2100 REM "Given selling break A(I) compute cost
2105 H2=2
2110 IF H2=H1+1 THEN H2=H1; GOTO 2120
2115 IF A[I]<H[H2] THEN H2=H2-1; GOTO 2120 ELSE H2=H2+1; GOTO 2110
2120 A[I+17]=F0+F[H2]+A[I]/U0*R[H2]/U1
2122 A[I+10]=F1+F[H2+13]+A[I]/U0*R[H2+13]/U1
2124 IF A[I]=0 OR S0=0 THEN A[I+17]=0,A[I+10]=0; GOTO 2130
2125 A[I+17]=A[I+17]*S1/(A[I]/S0)
2128 A[I+10]=A[I+10]*S1/(A[I]/S0)
2130 IF A[I+5]<>0 THEN GOSUB 7600
2140 RETURN 
7600 REM "Refigure unit price based on desired g.p.
7605 PRECISION 14
7610 T9=1-A[I+5]/100
7611 IF T9=0 THEN T9=99.99
7619 PRECISION 2
7620 A[I+10]=A[I+17]/T9
7640 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,"QS2DAF",Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 REM "PROG FLOW
9710 IF U1$="" THEN REMOVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9725 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9730 RUN U1$(1,6)
9800 REM "EXIT PROGRAM
9810 IF U0$>"" THEN GOTO 9700
9900 REM "END PROGRAM
9950 RUN "QS2DAB"
9999 END 
