0010 REM " Kit Production Update <KT2UAA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 10/03/12 - 10.585277 - tma - SSP# 258156
0037 REM "258156-Program exception in Kit Production                         
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0045 IF %GUI THEN GOTO NXT
0090 BEGIN 
0095 NXT:
0100 SETERR 9000
0110 X0$="KT2UAA",X1$="Kit Production Update"
0120 DIM Z0$(80,"-")
0130 DIM PAD$(80)
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0315 IOLIST ICF$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0320 IOLIST B$,B[0],B[1],B[2],B[3]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20]
0331 IOLIST C$,C[0],STR(C[1]),STR(C[2]),C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15],D[16],D[17]
0341 IOLIST D$,STR(D[0]),D[1],STR(D[2]),D[3],STR(D[4]),D[5],STR(D[6]),D[7],STR(D[8]),D[9],STR(D[10]),D[11],STR(D[12]),STR(D[13]),D[14],D[15],D[16],D[17]
0350 IOLIST E$,E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],E[8],E[9],E[10],E[11],E[12]
0360 IOLIST F$,F[0],F[1],F[2],F[3],F[4],F[5],F[6],F[7],F[8],F[9],F[10],F[11],F[12],F[13],F[14],F[15],F[16],F[17],F[18],F[19],F[20],F[21],F[22],F[23],F[24],F[25],F[26],F[27],F[28],F[29],F[30],F[31],F[32],F[33],F[34],F[35],F[36],F[37],F[38],F[39],F[40]
0390 IOLIST J$,J[0],J[1]
0400 IOLIST P$,P[0],P[1]
0405 IOLIST K$,K[0],K[1],K[2],K[3],K[4],K[5],K[6],K[7],K[8],K[9],K[10]
0410 IOLIST S$,S[0],S[1],S[2],S[3],S[4],S[5]
0420 IOLIST S0$
0440 IOLIST G1$,G2$,G[0]
0450 IOLIST POG$,POG[0],POG[1]
0500 REM "FILES
0505 Z=NUM(X3$(60,3)); DIM Z[Z]
0510 Z$="01L KT1...  02O KT2...  03O IC1...  04O IC2...  05O ICF...  06O IC0...  09O IC8... 10O IC6...   11O IC9...  13O ZZPARM  14O POG...  15O ICO...  " ! SSP#234932
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0521,9900
0525 DIM M6[1]; CALL "IC2PRE",X3$,Z[13],"",M6{ALL},"",0,"",0
0550 REM "Read in stat info"
0560 READ (Z[13],KEY="STATI/C")S5$
0585 RT$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT$
0600 REM "Read parameters
0610 DIM P[8],P0$(90),P1$(32)
0640 FIND (Z[13],KEY=X3$(9,3)+"I/C")P2$
0650 FIND (Z[13],KEY=X3$(9,3)+"KIT")KITPARM$
0730 DIM A[12],B[3],C[20],D[17],E[12],F[40]
0800 REM "CHECK FOR ROOM?
0805 PRINT @(12,22),"Determining file information...",
0810 DIM X[Z,1],X$(0)
0815 FOR X=1 TO Z
0820 CALL "ZZINFO",X,0,X3$,A,B,0,0,0,0,0,""; X[X-1,0]=A,X[X-1,1]=B
0825 NEXT X
0830 PRINT @(0,22),'CL',
0835 IF X[Z[1]-1,0]=0 THEN CALL "ZZPROM","4",X3$,S3,"There is no data to update. Press <Return>:","","",0; GOTO 9900
0905 V0$=X3$(1,6)+X3$(40,3)+DAY+STR(TIM*100:"0000")+X3$(178,6)
0970 CALL "ZZPROM","9",X3$,S3,"","","",0; ON S3 GOTO 0971,9900
0975 PRINT @(0,12),'CL',
0990 READ (Z[1],KEY="",DOM=0991)V$
1000 REM "READ Finished Goods Lot Record
1020 READ (Z[1],END=5000)IOL=0310
1022 IF A[4]=0 THEN GOTO 1000
1025 READ (Z[6],KEY=A$(1,20),DOM=1000)IOL=0360
1030 PRINT @(7,12),A$(1,10)," ",A$(11,10)," ",A$(21,4),
1040 GOSUB 2000
1050 GOSUB 2300
1060 GOSUB 2600
1070 GOSUB 2050
1100 REM "Retrieve Components
1120 READ (Z[2],KEY=A$(1,32),DOM=1121)
1140 READ (Z[2],END=1900)IOL=0320
1150 IF MID(B$,1,32)<>A$(1,32) THEN GOTO 1900
1160 READ (Z[6],KEY=B$(33,20),DOM=1140)IOL=0360
1170 GOSUB 2800
1180 GOSUB 2900
1200 GOSUB 4000
1300 IF F$(112,1)="Y" THEN GOSUB 4100
1490 GOTO 1140
1900 REM 
1950 GOTO 1000
2000 REM "Finished Good Receiving - Create Lot in ICF - write with 310 iolist
2010 ICF$=A$,ICF$(196,6)=V$(13,6) ! SSP#234781
2015 IF F$(112,1)<>"Y" THEN GOTO 2040
2020 WRITE (Z[5],KEY=ICF$(1,32),DOM=2021)IOL=0315; GOTO 2035 ! SSP#234932
2030 ICF_KEY$=ICF$(1,32); CALL "IC2LCC",X3$,X4$,Z[5],31,2,ICF_LAST_ONE$,ICF_KEY$ ! SSP#258156
2031 ICF$(1,32)=ICF_KEY$; GOTO 2020 ! SS#258156
2035 CALL "IC2LAH",X3$,X4$,ICF$,A{ALL},V$(1,6),"KT","R",V$(19,6),Z[15] ! SSP#234932
2040 RETURN 
2050 REM "Finished Good - Update Inventory Tranasction - C$ set in 2300
2060 B[0]=-Q,B[1]=-A[0]
2070 GOSUB 4000
2090 RETURN 
2300 REM "Finished Good - Receive Inventory by Location File
2310 IF A$(125,4)="    " THEN Q=A[4]*A[3] ELSE Q=A[4]*A[2]*A[3]
2315 CALL "FM2EXT",Z[13],1,F$(124,4),F[15],Q,A1,A[0],M6[1]
2320 DIM C$(58),C[20]
2325 C$(1)=A$(1,24)
2330 EXTRACT (Z[3],KEY=C$(1,24),DOM=2331)IOL=0330
2335 IF KITPARM$(13,1)<>"Y" THEN GOTO 2350; REM "SKIP UPDATE TO POG BASED ON PARAMETER - SSP# 129223 
2340 IF C[3]+C[4]-C[5]+C[6]-C[7]>0 THEN GOTO 2350
2345 IF Q=0 THEN GOTO 2350
2348 IF Q>0 THEN GOSUB 3000
2350 REM "Adjust receipts
2355 C[4]=C[4]+Q
2360 REM "Last active date & cost
2365 C$(47,6)=A$(25,6); C[1]=A1
2370 REM "Average cost
2379 REM "Remember to subtract rec quant. off, it was added to C(4) at 2355
2380 B0=C[3]+C[4]-C[5]+C[6]-Q
2385 REM "If balance <0 avg cost=rec now cost,skip calc
2390 IF B0<=0 THEN C[2]=A1; GOTO 2430
2400 REM "Calc average cost
2410 CALL "FM2EXT",Z[13],0,F$(124,4),F[15],B0,C[2],B1,0
2420 IF B1>0 THEN CALL "FM2EXT",Z[13],1,F$(124,4),F[15],B0+Q,B3,B1+A[0],M6[1]; C[2]=B3 ELSE C[2]=A1
2430 WRITE (Z[3],KEY=C$(1,24))IOL=0331
2432 IF RT$>"" THEN IF RT$(7,1)="H" THEN CUST$=C$(1,10); CALL "RT2WOC",ERR=2433,X3$,X4$,CUST$,"IC1...","U",C$(1,24)
2440 WRITE (Z[10],KEY=C$(21,4)+F$(61,3)+C$(1,20))
2450 CALL "IC2AVG",X3$,X4$,C$(1,20),""
2490 RETURN 
2600 REM "Update Supplier Price List
2610 IF POS(" "<>A$(68,10))=0 THEN GOTO 2690
2620 DIM D$(65),D[17]
2625 D$(1)=C$(1,20)+A$(68,14)
2630 EXTRACT (Z[4],KEY=D$(1,34),DOM=2631)IOL=0340; GOTO 2650
2635 D$(55,4)=F$(124,4),D[14]=F[15]
2660 REM "Last purchased date & cost
2662 CALL "FM2EXT",Z[13],1,D$(55,4),D[14],Q,B3,A[0],M6[1]; D[13]=B3
2665 D$(59,6)=A$(25,6)
2670 WRITE (Z[4],KEY=D$(1,34))IOL=0341
2690 RETURN 
2800 REM "Component Out - Update warehouse location data (IC1)
2810 DIM C$(58),C[20]
2812 Q$=B$(53,4)
2815 C$(1,20)=B$(33,20),C$(21,4)=Q$
2820 EXTRACT (Z[3],KEY=C$(1,24),DOM=2821)IOL=0330
2830 C[6]=C[6]-B[0],C[13]=C[13]-B[0]
2860 WRITE (Z[3],KEY=C$(1,24))IOL=0331
2862 IF RT$>"" THEN IF RT$(7,1)="H" THEN CUST$=C$(1,10); CALL "RT2WOC",ERR=2863,X3$,X4$,CUST$,"IC1...","U",C$(1,24)
2864 REM "SKIP - But leave it if needed later
2865 GOTO 2890
2870 EXTRACT RECORD (Z[6],KEY=C$(1,20),DOM=2890)I$
2872 IF RT$>"" THEN IF RT$(7,1)="H" THEN CUST$=C$(1,10); CALL "RT2WOC",ERR=2873,X3$,X4$,CUST$,"IC0...","U",C$(1,20)
2875 IF A$(25,6)>I$(96,6) THEN A$(25,6)=V$(19,6)
2880 WRITE RECORD (Z[6],KEY=C$(1,20))I$
2890 RETURN 
2900 REM "Component Out - Statistics data
2905 F0=Z[11],S9$=S5$
2910 REM LET Q1$=C$(1,20)+Q$+A$(1,4),Q1=NUM(A$(5,2))
2920 REM LET Q0$="S",Q0=B(4); GOSUB 07000
2925 Q1$=C$(1,20)+Q$+V$(1,4),Q1=NUM(V$(5,2))
2930 Q0=B[0]; IF KITPARM$(12,1)="Y" THEN Q0$="K" ELSE Q0$="U"
2940 GOSUB 7000
2945 REM LET Q1$=C$(1,20)+Q$+A$(1,4),Q1=NUM(A$(5,2))
2950 REM LET Q0$="P",Q0=B(4)-B(5)
2955 REM GOSUB 07000
2995 RETURN 
3000 REM " Write out POG record - SSP# 129223
3010 DIM POG$(66),POG[1]
3020 POG$(1)=A$(21,4)+A$(1,20)+A$(25,6)
3030 POG$(34)=V0$(20,6)+PAD$(1,12)+A$(68,14)
3040 POG[0]=A[4],POG[1]=A[0]
3050 WRITE (Z[14],KEY=POG$(1,33),DOM=3070)IOL=0450
3060 GOTO 3099
3070 REM "got the DOM - increment sequence # and try again
3080 POG$(31,3)=STR(NUM(POG$(31,3))+1:"000")
3090 GOTO 3050
3099 RETURN 
4000 REM "Update I/C detail transactions
4002 J1$="Kit RR:"+A$(33,8)
4005 DIM J$(73),J[2]
4010 J$(1,20)=C$(1,20),J$(21,4)=C$(21,4),J$(25,4)=V$(1,4),J$(29,2)=V$(5,2),J$(31,6)=A$(25,6),J$(39,1)="K",J$(40,10)="",J$(50,15)=J1$,J$(65,2)="KT",J$(67,6)=V$(13,6),J[0]=-B[0],J[1]=-B[1]
4025 WRITE (Z[9],KEY=J$(1,38),DOM=4026)IOL=0390; GOTO 4040
4030 IC8_KEY$=J$(1,38); CALL "IC2LCC",X3$,X4$,Z[9],37,2,IC8_LAST_ONE$,IC8_KEY$; J$(1,38)=IC8_KEY$
4031 REM "K=FND(J$(37,2)),J$(37,2)=FNC$(K+1); GOTO 4025
4035 GOTO 4025
4040 RETURN 
4100 REM "Component Out - Remove Lots
4110 READ (Z[5],KEY=C$(1,24),DOM=4111)
4120 READ (Z[5],END=4190)IOL=0350
4130 IF C$(1,24)<>E$(1,24) THEN GOTO 4190
4140 IF E$(110,11)<>"KT"+A$(234,8)+" " THEN GOTO 4120
4145 GOSUB UPDATE_IC1 ! SSP 208675
4148 STORAGE=E[11],FINANCE=E[12]; GOSUB UPDATE_STORAGE ! SSP#235773
4150 REMOVE (Z[5],KEY=E$(1,32),DOM=4151)
4155 CALL "IC2LAH",X3$,X4$,E$,E{ALL},V$(1,6),"KT","O",V$(19,6),Z[15] ! SSP#234932
4180 GOTO 4120
4190 RETURN 
5000 REM "END OF UPDATE
5010 IF X3$(145,1)<>"1" THEN GOSUB 7600; REM "Run thru ICF once more and remove any committed with KT.  No longer doing this if BATCH processing, WO158198
5100 REM "Post General Ledger Effects
5110 Z$="04C IC2...  05C ICF...  09C IC8...  10C IC6...  11C IC9...  05O FM0...  09O ARV...  10O FMP...  11O GL6...  "
5120 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 5121,9900
5130 DIM R[1],G$(12,"0")
5140 READ (Z[2],KEY="sum",DOM=5141)
5150 READ (Z[2],END=5900)R$,R[0],R[1]
5155 IF R$(1,3)<>"sum" THEN GOTO 5900
5160 FIND (Z[10],KEY="T"+R$(9,3),DOM=5190)R1$
5170 FIND (Z[9],KEY=R1$(24,9),DOM=5190)R2$
5180 G$=R2$(118,12)
5185 IF R$(5,4)=DIM(4) THEN G$=R2$(226,12) ! SSP 208675
5190 IF P2$(39,1)<>"Y" THEN GOTO 5250
5195 REM "Modify G/L Inventory Accct based upon Whse Loc Record
5200 DIM X$(15); X$(1,1)="D",X$(12,4)=R$(5,4); FIND (Z[5],KEY=X$,DOM=5250)X$
5210 G$(NUM(P2$(40,2)),NUM(P2$(42,1)))=X$(214,NUM(P2$(42,1)))
5250 REM POST GL6
5260 DIM G1$(46),G[1]
5270 G1$(1,1)="A",G1$(2,2)=FNV$(V$(1,4)),G1$(4,2)=V$(5,2)
5280 G1$(6,2)="KT",G1$(8,6)=V$(13,6),G1$(14,12)=G$,G1$(28,6)=V$(19,6),G1$(34,2)="IC"
5290 G2$="Whse: "+R$(5,4)+" P/C: "+R$(9,3)
5300 DIM G[1]; READ (Z[11],KEY=G1$(1,27),DOM=5301)IOL=0440
5310 G[0]=G[0]+R[1]
5320 IF G[0]=0 THEN REMOVE (Z[11],KEY=G1$(1,27),DOM=5321) ELSE WRITE (Z[11],KEY=G1$(1,27))IOL=0440
5340 GOTO 5150
5900 REM "CLEAR FILES
5905 PRINT @(0,12),'CE',
5910 CALL "ZZPROM","U7",X3$,0,"","","",10
5920 Q$=STR(Z[1]:"00")+STR(Z[2]:"00"); CALL "ZZINTZ",X3$,"B",0,Q$
5930 GOSUB 6700
5940 PRINT 'CF'
5950 REM 
5990 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 CALL "ZZPROM","U9",X3$,0,"","","",4
6025 CALL "ZZPROM","U8",X3$,0,"","","",7
6030 PRINT V0$(22,4),".",V0$(26,2),
6165 PRINT (0,ERR=6066)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6225 GOSUB 6450
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6490 RETURN 
6600 REM "RESTART LOGIG
6610 REM WRITE (Z(1),IND=I1) V0$,K0$,K1$,K0,K1
6690 RETURN 
6700 REM "Increment Audit Control No.
6705 F9=Z[13]
6710 A2$=X3$(146,6)+"  000100",A0$=X3$(9,3)+"AUDIT",A1$=""; EXTRACT (F9,KEY=A0$,DOM=6716)A0$,A1$
6715 A0=POS(A2$(1,6)=A1$,14); IF A0=0 THEN A1$=A1$+A2$; GOTO 6715 ELSE A2=NUM(A1$(A0+8,4))+1,A2$(9,4)=STR(A2:"0000"),A1$(A0,14)=A2$
6720 WRITE (F9,KEY=A0$)A0$,A1$
6740 RETURN 
7000 REM "Update stats q0$ in period q1 with data q0
7005 IF Q0=0 THEN GOTO 7090
7010 DIM K[14]; P9$=Q1$+Q0$
7020 GOSUB 7100
7040 K[Q1]=K[Q1]+Q0
7060 GOSUB 7150
7090 RETURN 
7100 REM "Read stats (Packed/Unpacked)
7105 Q=POS(Q0$=S9$(49),17); IF Q=0 THEN EXITTO 7090 ELSE M0$=S9$(Q+48,17)
7110 CALL "ZZPACK",X3$,"E",M0$(3,2),"",0,0,K{ALL},F0,Q0$,Q1$,S9$
7135 GOTO 7190
7150 REM "Write stats
7160 CALL "ZZPACK",X3$,"W",M0$(3,2),"",0,0,K{ALL},F0,Q0$,Q1$,S9$
7190 RETURN 
7500 REM "CUSTOM PROGRAMMING ROUTINES
7600 REM "Some customers were experiencing lots not being removed, we will run through ICF and remove any lots with KT in 110,2.  Since this update does not use batch processing, it is safe to assume when running this update all KT committeds should be removed.  Only doing this if not using BATCH processing, WO158198
7605 PRINT @(0,12),'CE',@(20,12),"Final run through for lots committed to kits",
7610 READ (Z[5],KEY="",DOM=7611)
7615 K$=KEY(Z[5],END=7690); READ (Z[5],KEY=K$)IOL=0350
7620 PRINT @(25,14),K$,
7630 IF E$(110,2)="KT" THEN REMOVE (Z[5],KEY=K$)
7640 GOTO 7615
7690 RETURN 
8920 DEF FNV$(Z9$)=CHR(INT(NUM(Z9$)/10)-125)+STR(MOD(NUM(Z9$),10))
8930 DEF FNC$(C)=CHR(32+INT((C+32)/95))+CHR(32+MOD(C,95))
8935 DEF FND(Z9$)=(ASC(Z9$(1,1))-32)*95+ASC(Z9$(2,1))-32
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9045 REM 
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOSUB 6600; GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 IF %GUI THEN EXIT 
9920 SETERR 9950
9930 Q1$=A1$; EXIT 
9950 RUN "ZMENU"
9999 END 
10000 UPDATE_IC1:! SSP 208675
10010 ! 
10020 IF E$(125,4)=DIM(4) THEN QTY=E[4]*E[3] ELSE QTY=E[4]*E[2]*E[3]
10030 EXTRACT (Z[3],KEY=E$(1,24))C$,C{ALL}
10040 C[7]=C[7]-QTY
10050 WRITE (Z[3],KEY=E$(1,24))C$,C{ALL}
10060 RETURN 
11000 UPDATE_STORAGE:! SSP#235773
11010 READ (Z[5],KEY=ICF$(1,32),DOM=*RETURN)IOL=0315
11020 A[11]=A[11]+STORAGE,A[12]=A[12]+FINANCE,STORAGE=0,FINANCE=0
11030 WRITE (Z[5],KEY=ICF$(1,32))IOL=0315
11090 RETURN 
56000 ! "208675-Kit Module - Allow processing of items not in inventory     
56001 REM "234932-Keep a lot transaction file also 234781  update audit number to lot record
56002 REM "258156-Program exception in Kit Production                          Sequence counter exceeded 99 
