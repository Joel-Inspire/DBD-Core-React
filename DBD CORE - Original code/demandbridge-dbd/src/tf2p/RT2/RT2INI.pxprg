0010 REM "<RT2INI> Remote T/M Initialize Remote
0020 SETESC 9170; SETERR 9000
0035 REM "4.1 - 12/24/97 - 11.26 - kmc - SSP# 057163
0040 REM "Copyright 1997 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="RT2INI",X1$="Initialize Remote Date for Remote T/M"
0120 DIM Z0$(80,"-"),NULLS$(512,$00$)
0130 K0=20,K1=1
0135 C9=-1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9345
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=*NEXT)
0295 DIM Z0$(80,X3$(235,1)); Z0$=ESC+"BG"+Z0$+ESC+"EG"
0300 REM "IOLISTS
0310 IOLIST A$
0320 IOLIST B$
0330 IOLIST C$
0340 IOLIST D$
0360 RT6_IOLIST:IOLIST RT6$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O RT0...  02O AR3... 03O ZZE... 04O RT3... 06O RT6... 13O ZZPARM"+"  "; REM "Slots 11 & 12 reserved for temp use by program
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO *NEXT,9330
0525 J5$=FID(Z[3]); J5$=J5$(4,6)
0600 REM "
0605 GOSUB BAR_GRAPH_SETUP
0610 GOSUB 6000
0612 IF LEN(Q1$)>=4 THEN A$=Q1$(1,4); GOTO 0625
0615 DIM A$(4)
0620 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,36,10,1,4,C0,"","{1"+X$,"","RT"+"2INI00","RT0","RT2MAA",""; IF ABS(C0)>4 THEN PRINT @(0,3),'CE',; GOSUB 6000; PRINT @(36,10),A$(1,4),; C0=ABS(C0)-5; ON C0 GOTO 0620,0621
0623 IF ABS(C0)=4 THEN GOTO 9330
0625 READ (Z[1],KEY=A$(1,4),DOM=0620)IOL=0310
0630 FIND (Z[2],KEY=A$(1,4),DOM=*NEXT)IOL=0320
0632 PRINT @(36,10),MID(A$,1,4),@(42,10),MID(B$,5,35),
0690 IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO *NEXT,9330
0700 REM "Set the salesperson's package seq # to 00 so the next package created will have the 00 extension
0710 A$(53,2)="00"
0720 WRITE (Z[1],KEY=A$(1,4))IOL=0310
0900 REM "Initialize
0905 GOSUB CLEAR_OLD_DATA
0910 PRINT @(10,17),"Building Initial Package:",
0920 COMMAND_COUNT=0; GOSUB BAR_GRAPH_UPDATE
1000 REM "BEGIN MAIN PROCESS
1010 PRINT @(10,14),"Now Processing: ",
1020 IF POS(" "<>A$(5,3))=0 THEN J$="Operator code is blank!"; CALL "ZZPROM",".4",X3$,Z,J$,"","",0; GOTO 9330
1030 GOSUB CREATE_AUTH_FILE
1100 GET_COMMAND:
1101 READ (Z[4],END=DONE_WITH_COMMANDS)IOL=0340; REM READ RT3
1110 COMMAND_COUNT=COMMAND_COUNT+1; IF MOD(COMMAND_COUNT,T0)=1 THEN GOSUB BAR_GRAPH_UPDATE
1120 ON (POS(D$(7,4)="MESSPROGDATAMAKE",4)-1)/4 GOTO DO_MESS,DO_PROG,DO_DATA,DO_MAKE,END_OF_COMMAND
1130 DO_MESS:
1140 M$=FNS$(D$(11,30))
1150 GOSUB WRITE_MESSAGE_REC
1195 GOTO END_OF_COMMAND
1200 DO_PROG:
1210 F9$=FNS$(D$(11,30)); IF LEN(F9$)>8 THEN F9$=F9$(1,8)
1220 GOSUB PACK_PROGRAM
1230 GOTO END_OF_COMMAND
1240 DO_DATA:
1250 TEMP$=FNS$(D$(11,30))
1260 REM "Check for key restrictions, if none then go ahead
1270 BAR_POS=POS("|"=TEMP$)
1271 IF BAR_POS=0 THEN {
1272 F9$=TEMP$,T9$=""; GOTO 1290
1273  } ELSE {
1274 F9$=TEMP$(1,BAR_POS-1),T9$=TEMP$(BAR_POS+1)
1275 TOKEN$="{O}",REP$=A$(5,3),TARGET$=T9$; GOSUB REPLACE_TOKENS; T9$=TARGET$
1276 TOKEN$="{S}",REP$=A$(1,4),TARGET$=T9$; GOSUB REPLACE_TOKENS
1277 TOKEN$="{C}",REP$=X3$(9,3); GOSUB REPLACE_TOKENS; T9$=TARGET$
1278  }
1280 IF POS("..."=F9$)<>0 THEN F9$(POS("..."=F9$),3)=X3$(9,3)
1290 GOSUB LOAD_RT1_WITH_RECS
1300 GOTO END_OF_COMMAND
1310 DO_MAKE:
1320 F9$=FNS$(D$(11,30))
1330 IF POS("..."=F9$)<>0 THEN F9$(POS("..."=F9$),3)=X3$(9,3)
1340 GOSUB CREATE_MISSING_FILE
1350 GOTO END_OF_COMMAND
1850 END_OF_COMMAND:GOTO GET_COMMAND
1900 DONE_WITH_COMMANDS:
1901 GOSUB CLEAR_BAR_GRAPH
1905 REM "Now get all ZP4 records for this salesperson also get ZP0 records
1910 FOR A_INDEX=80 TO 96 STEP 4
1920 IF POS(" "<>A$(A_INDEX,4))<>0 THEN {
1921 LIST_CODE$=A$(A_INDEX,4)
1930 GOSUB SET_OPTIONS
1940 F9$="ZP4"+X3$(9,3),T9$=A$(A_INDEX,4)
1950 GOSUB LOAD_RT1_WITH_RECS
1960 F9$="ZP0"+X3$(9,3),T9$=A$(A_INDEX,4)
1970 GOSUB LOAD_RT1_WITH_RECS
1980  }
1990 NEXT A_INDEX
1995 GOTO END_OF_PROCESS
2000 LOAD_RT1_WITH_RECS:
2001 REM "Given file F9$, open file and put all records
2002 REM into RT1 file
2010 REM "Must match target T9$, if T9$<>""
2020 GOSUB OPEN_F9_ON_11
2030 GOSUB OPEN_MASTER_FILE_LIST
2040 DIM C$(70); FIND (Z[3],KEY=F9$(1,3)+"   ",DOM=*NEXT)IOL=0330
2050 IF MID(F9$,1,6)="ZZPARM" THEN C$(7,39)="System Parameters"; PRINT @(26,14),"ZZPARM ",C$(7,39), ELSE PRINT @(26,14),F9$(1,3)+" "+C$(7,39),
2060 GOSUB CREATE_MISSING_FILE
2070 REM "Extract, because we may have the full key
2071 EXTRACT (Z[11],KEY=T9$,DOM=2080); GOTO 2080
2080 K9$=KEY(Z[11],END=END_LOAD_RT1_WITH_RECS)
2090 IF T9$<>"" AND MID(K9$,1,LEN(T9$))<>T9$ THEN {
2100 GOTO END_LOAD_RT1_WITH_RECS
2110  } ELSE {
2120 READ RECORD (Z[11],KEY=K9$,DOM=2080)A9$
2130 IF MID(F9$,1,3)="ZP4" AND SP_ONLY$="Y" AND MID(A$,1,4)<>MID(A9$,359,4) THEN GOTO 2080
2131  } }
2140 GOSUB REMOVE_BINARY_CHARS
2150 CALL "RT2WOR",X3$,X4$,A$(1,4),F9$,"U",K9$,A9$,0,A{ALL}
2160 GOSUB DISPLAY_ACTIVITY_INDICATOR
2170 IF POS(F9$(1,3)="ZP4ZP5ZP8",3)<>0 THEN GOSUB ZP4_ZP5_ZP8
2180 GOTO 2080
2190 END_LOAD_RT1_WITH_RECS:RETURN 
2200 PRINT @(10,12),C3:"###,##0","   ",J3$," ",D$(7,39)
2210 PACK_PROGRAM:
2220 PRINT @(26,14),'CL',F9$,
2230 REM "Write record to create a Text Type file to copy into
2240 GOSUB CREATE_MISSING_FILE
2250 REM "Write out record to send the program
2260 CALL "RT2WOR",X3$,X4$,A$(1,4),F9$,"B","","",0,A{ALL}
2270 RETURN 
5000 END_OF_PROCESS:
5010 PRINT @(0,12),'CL',@(0,14),'CL',@(0,15),'CL',@(0,16),'CL',
5015 TOTAL_COMMANDS=COMMAND_COUNT; GOSUB BAR_GRAPH_UPDATE
5020 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5040 GOTO 9330
5050 ! 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(10,10),"Get data for salesperson:",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 ! 
7500 REMOVE_BINARY_CHARS:
7501 REM "Remove nulls and last seperator from read record string A9$
7505 IF LEN(A9$)=0 THEN {
7510 GOTO 7545
7520  } ELSE {
7530 A9$=FNN$(A9$)
7540 IF A9$(1,LEN(A9$))=$8A$ THEN A9$=A9$(1,LEN(A9$)-1)
7541  }
7545 END_REMOVE_BINARY_CHARS:RETURN 
7546 ! 
7550 OPEN_MASTER_FILE_LIST:
7555 J6$=FID(Z[3],ERR=7575)
7560 REM "Uses J5$, set in line 525
7565 IF MID(J6$,4,6)<>J5$ THEN CLOSE (Z[3]); GOTO 7575
7570 GOTO 7595; REM "If here then file is open on ZZE
7575 OPEN (Z[3])J5$; REM "If here the file is closed, so open it up
7595 END_OPEN_MASTER_FILE_LIST:RETURN 
7596 ! 
7600 INIT_ACTIVITY_INDICATOR:
7605 C9=0,L9=50; PRINT @(10,16),'CL',
7645 END_INIT_ACTIVITY_INDICATOR:RETURN 
7646 ! 
7650 DISPLAY_ACTIVITY_INDICATOR:
7655 C9=C9+1
7660 IF MOD(C9,5)=1 THEN C8=INT(C9/5)
7665 IF C8=L9+1 THEN {
7670 PRINT @(10,16),'CL',
7675 C9=0
7680  } ELSE {
7685 PRINT @(10+C8,16),".", }
7690 END_DISPLAY_ACTIVITY_INDICATOR:RETURN 
7691 ! 
7700 ZP4_ZP5_ZP8:
7701 REM "Handle files ZP8, ZP4, & ZP5
7705 ON INT(POS(F9$(1,3)="ZP4ZP5ZP8",3)+2/3) GOTO END_ZP4_ZP5_ZP8,7710,7740,7760,END_ZP4_ZP5_ZP8
7710 REM "ZP4
7711 REM "ZPA
7716 J9$=A9$(1,4)+A9$(419,20)+A9$(5,6)
7718 CALL "RT2WOR",X3$,X4$,A$(1,4),"ZPA"+F9$(4),"U",J9$,"",0,A{ALL}
7720 IF POS(X3$(9,3)="060",3)<>0 THEN J9$=A9$(200,12)+A9$(1,10) ELSE J9$=A9$(200,10)+A9$(1,10)
7725 REM "ZPB
7726 CALL "RT2WOR",X3$,X4$,A$(1,4),"ZPD"+F9$(4),"U",J9$,"",0,A{ALL}
7730 REM "ZPE
7731 J9$=A9$(203,7)+A9$(200,3)+A9$(1,10)
7732 CALL "RT2WOR",X3$,X4$,A$(1,4),"ZPE"+F9$(4),"U",J9$,"",0,A{ALL}
7735 GOTO END_ZP4_ZP5_ZP8
7740 REM "ZP5
7745 CALL "ZZDATE",X3$,"","G10101",A9$(11,6),D0,1,0,0,0,0,0,"","",""; J9$=A9$(1,10)+STR(100000-D0:"00000")+A9$(11,7)
7750 CALL "RT2WOR",X3$,X4$,A$(1,4),"ZPB"+F9$(4),"U",J9$,"",0,A{ALL}; REM "ZPB
7755 GOTO END_ZP4_ZP5_ZP8
7760 REM "ZP8
7765 GOTO END_ZP4_ZP5_ZP8
7770 END_ZP4_ZP5_ZP8:RETURN 
7780 ! 
7800 CREATE_MISSING_FILE:
7801 REM "Write out record to create file if not found
7810 IF POS("..."=F9$)<>0 THEN F9$(POS("..."=F9$),3)=X3$(9,3)
7820 DISK_NO$=""; CLOSE (14); OPEN (14,ERR=7850)F9$
7821 FID_14$=FIN(14,"PATHNAME")
7822 CLOSE (14)
7823 HWDPOS=POS(HWD=FID_14$); NAMEPOS=POS(F9$=FID_14$,-1)
7826 IF NAMEPOS>0 THEN FID_14$=MID(FID_14$,1,NAMEPOS-1)
7827 DISK_NO$=SUB(FID_14$,DLM,"\")
7828 IF HWDPOS>0 THEN FID_14$=MID(FID_14$,HWDPOS+LEN(HWD)+1)
7829 DISK_NO$=SUB(FID_14$,DLM,"\")
7830 REM fid_14$=FID(14); CLOSE (14); disk_no$=STR(DEC(fid_14$(20,1)))
7840 CALL "RT2WOR",X3$,X4$,A$(1,4),F9$,"C",DISK_NO$,"",0,A{ALL}
7845 END_CREATE_MISSING_FILE:RETURN 
7846 ! 
7850 WRITE_MESSAGE_REC:
7855 PRINT @(10,12),M$,
7860 CALL "RT2WOR",X3$,X4$,A$(1,4),"","M",M$,"",0,A{ALL}
7895 END_WRITE_MESSAGE_REC:RETURN 
7896 ! 
7900 REPLACE_TOKENS:REM "If TOKEN$ is in TARGET$, then replace with REP$
7905 TOKEN_POS=POS(TOKEN$=TARGET$); IF TOKEN_POS=0 THEN GOTO 7945
7910 IF TOKEN_POS=1 THEN TARGET$=REP$+TARGET$(LEN(TOKEN$)+1) ELSE IF TOKEN_POS=LEN(TARGET$)-LEN(TOKEN$)+1 THEN TARGET$=TARGET$(1,TOKEN_POS-1)+REP$ ELSE TARGET$=TARGET$(1,TOKEN_POS-1)+REP$+TARGET$(TOKEN_POS+LEN(TOKEN$))
7945 END_REPLACE_TOKENS:RETURN 
7950 ! 
8000 OPEN_F9_ON_11:
8001 REM "OPEN file f9$, save name in H9$, so can close later
8005 CLOSE (Z[11],ERR=8006)
8010 FILE_NAME$=F9$,INDEX=11; GOSUB 9240; F9$=FILE_NAME$
8020 GOSUB INIT_ACTIVITY_INDICATOR
8045 RETURN 
8050 ! 
8100 BAR_GRAPH_SETUP:
8110 REM CALL "ZZINFO",z[4],t9,x3$,total_commands,t0,k,b,d,s0,s1,f$
8111 TOTAL_COMMANDS=NUM(FIN(Z[4],"RECORDS_USED"))
8115 PRINT @(10,20),"There are "+STR(TOTAL_COMMANDS)+" records to process."
8130 T0=INT(TOTAL_COMMANDS*.02); IF T0<=1 THEN T0=2
8145 END_BAR_GRAPH_SETUP:RETURN 
8150 BAR_GRAPH_UPDATE:REM Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 i"+"s init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,TOTAL_COMMANDS,COMMAND_COUNT
8195 END_BAR_GRAPH_UPDATE:RETURN 
8196 ! 
8200 CREATE_AUTH_FILE:REM " Create authorization file for remote
8205 SP_NAME$=MID(A$,1,4)
8210 CALL "RT2NPC;BUILD_TF0",SP_NAME$,RESULT
8215 F_NAME$="TF"+%LIC_COMP$; GOSUB MOVE_FILES
8220 F_NAME$="*conv.tbd"+DLM+"tffunction.def"; GOSUB MOVE_FILES
8221 F_NAME$="*conv.tbd"+DLM+"function.def"; GOSUB MOVE_FILES
8230 F_NAME$="START_UP"; GOSUB MOVE_FILES
8235 F_NAME$="ZZ2PID"; GOSUB MOVE_FILES
8245 F_NAME$="ZZ2FNC"; GOSUB MOVE_FILES
8246 F_NAME$="ZZBARG"; GOSUB MOVE_FILES
8255 F_NAME$="ZZINIT"; GOSUB MOVE_FILES
8265 F_NAME$="ZZEXPF"; GOSUB MOVE_FILES
8280 F_NAME$="ZZERRM"; GOSUB MOVE_FILES
8290 F_NAME$="ZZFLES"; GOSUB MOVE_FILES
8301 F_NAME$="RT2BEG"; GOSUB MOVE_FILES
8310 F_NAME$="RT2PIN"; GOSUB MOVE_FILES
8320 F_NAME$="RT2PRM"; GOSUB MOVE_FILES
8330 F_NAME$="RT2LST"; GOSUB MOVE_FILES
8340 F_NAME$="RT2WOR"; GOSUB MOVE_FILES
8350 F_NAME$="RT2NSQ"; GOSUB MOVE_FILES
8351 F_NAME$="FIDNUM"; GOSUB MOVE_FILES
8360 RETURN 
8370 ! 
8380 CLEAR_OLD_DATA:REM "Remove old data if found
8390 Z$="05O RT1... "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 8395,8470
8400 PRINT @(10,17),"Clearing data from RT1...",
8410 READ (Z[5],KEY=A$(1,4),DOM=8420)
8420 KEY5$=KEY(Z[5],END=8450)
8430 IF KEY5$(1,4)<>A$(1,4) THEN GOTO 8450 ELSE REMOVE (Z[5],KEY=KEY5$,DOM=8420)
8440 GOTO 8420
8450 PRINT @(10,17),'CE',
8460 Z$="05C RT1... "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO *NEXT
8470 END_CLEAR_OLD_DATA:RETURN 
8480 ! 
8490 SET_OPTIONS:REM "Set Options from RT6
8500 DIM RT6$(124); FIND (Z[6],KEY=LIST_CODE$+A$(1,4),DOM=8505)IOL=RT6_IOLIST
8510 IF RT6$(23,1)="Y" THEN SP_ONLY$="Y" ELSE SP_ONLY$="N"
8520 F9$="RT6",T9$=LIST_CODE$+A$(1,4); GOSUB LOAD_RT1_WITH_RECS; REM "Send this record to remote
8530 END_SET_OPTIONS:RETURN 
8540 ! 
8550 CLEAR_BAR_GRAPH:
8560 PRINT @(1,19),'CL',@(1,19),'CL',
8570 RETURN 
8580 ! 
8590 MOVE_FILES:
8600 CALL "RT2NPC;COPY_INSTALL_FILES",F_NAME$,SP_NAME$,RESULT
8610 IF RESULT THEN MSGBOX "Critical File Transfer Failed, FILE: "+F_NAME$,"ATTENTION"
8620 RETURN 
8630 ! 
8640 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
8650 DEF FNN$(Z9$)=Z9$(1,POS(NULLS$=Z9$+NULLS$)-1)
9000 REM "ERROR PROCESSING
9010 IF ERR=69 THEN GOTO 9210
9020 Y5=ERR,Y6=TCB(5)
9030 SETERR 9040; Y8$=LST(PGM(Y6))
9040 SETERR 9000
9050 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9060 REM 
9070 ON Y7 GOTO 9090,9140,9325,9100,9130
9080 REM 
9090 RETRY 
9100 SETERR 9120
9110 EXECUTE Y7$
9120 SETERR 9000; RETRY 
9130 SETERR 0000; RETRY 
9140 REM " TRANSFER CONTROL
9150 GOTO 0990
9160 GOTO 9325
9170 SETESC 9200
9180 SETERR 9200
9190 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9200 SETERR 9000; RETURN 
9210 REM "CTRL LOGIC
9220 SETERR 9000; GOSUB 6400
9230 ON C9 GOTO 1125,2160
9240 REM "FILES - Use instead of ZZFLES
9250 Z[INDEX]=UNT
9260 IF LEN(FILE_NAME$)<>3 OR FILE_NAME$="ZY2" THEN GOTO 9300
9270 OPEN (Z[INDEX],ERR=9310)FILE_NAME$+X3$(9,3)
9280 FILE_NAME$=FILE_NAME$+X3$(9,3)
9290 GOTO 9320
9300 IF POS("..."=FILE_NAME$)<>0 THEN FILE_NAME$(POS("..."=FILE_NAME$),3)=X3$(9,3)
9310 OPEN (Z[INDEX])FILE_NAME$
9320 RETURN 
9330 REM "END PROGRAM
9340 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9350 SETERR 9360; Q1$=A1$; EXIT 
9360 SETESC 9200
9370 RUN "ZMENU"
9380 END 
