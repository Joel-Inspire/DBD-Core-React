0010 REM "Get next RT1 sequence number <RT2NSQ>
0015 REM "Prog Type: IP-3.1.2   
0020 SETESC 9300; SETERR 9000
0035 REM "3.9 - 12/08/95 - 16.15 - kmc
0040 REM "Copyright 1995 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0070 REM "S$ is salesperson number
0071 REM "N$ is returned next number
0075 REM "N$ is calculated by first looking at RT0 for that salesperson to find the number, then incrementing & writing back. If S$ is 'ALL' then the 'ALL' record is used. IF the record cant' be found, or when we test the record and find it is already on file, then we will use PKY to find the highest in the file, increment by 1 for N$, then increment by 1 and store in RT0
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,S$,N$
0100 SETERR 9000
0110 X0$="RT2NSQ",X1$="Get Next RT1 Seq Number"
0300 REM "IOLISTS
0310 IOLIST A$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 FILE_NAME$="RT0",INDEX=1; GOSUB 9750
0511 FILE_NAME$="RT1",INDEX=2; GOSUB 9750
0512 FILE_NAME$="ZZPARM",INDEX=13; GOSUB 9750
1000 REM "Extract Record from RTO
1010 DIM A$(75)
1015 A$(1,4)=S$
1020 EXTRACT (Z[1],KEY=A$(1,4),DOM=1021)IOL=0310
1025 N$=A$(48,5),X$=N$
1026 FOR I=1 TO LEN(N$)
1027 IF N$(I,1)=" " THEN N$(I,1)="0"
1028 NEXT I
1050 REM "Check key to see if in RT1 already
1055 DIM J$(9); J$(1)=S$,J$(5,5)=N$
1060 FIND (Z[2],KEY=J$,DOM=1070); GOTO 2000
1070 X$=N$; GOSUB 7500; REM "Get next seq #
1075 A$(48,5)=X$; WRITE (Z[1],KEY=A$(1,4))IOL=0310
1095 GOTO 9900
2000 REM "Found duplicate, so get highest key in use, increment by 1 for N$ and then increment by 1 to store in file.
2010 DIM J$(9); J$(1)=S$,J$(5,5)=$FFFFFFFFFF$
2020 READ (Z[2],KEY=J$,DOM=2021)
2025 DIM K$(9); K$=KEP(Z[2],END=2026)
2030 IF K$(1,LEN(S$))<>S$ THEN K$(5,5)="00000"
2050 REM "Now increment for N$
2060 X$=K$(5,5); GOSUB 7500; N$=X$
2070 REM "Now to write out
2080 X$=N$; GOSUB 7500
2090 A$(48,5)=X$; WRITE (Z[1],KEY=A$(1,4))IOL=0310
2095 GOTO 9900
7500 REM "Increment X$
7505 FOR I=1 TO LEN(X$)
7506 IF X$(I,1)=" " THEN X$(I,1)="0"
7507 NEXT I
7508 IF LEN(X$)<5 THEN X$="0"+X$; GOTO 7508
7510 I=LEN(X$); REM "Initialize to least sig digit
7515 C=0; IF X$(I,1)="Z" THEN X$(I,1)="0",C=1 ELSE IF X$(I,1)="9" THEN X$(I,1)="A" ELSE X$(I,1)=CHR(ASC(X$(I,1))+1)
7520 I=I-1; IF I>0 AND C=1 THEN GOTO 7515
7545 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9740 RETURN 
9750 REM "FILES - Use instead of ZZFLES
9755 Z[INDEX]=UNT
9760 IF LEN(FILE_NAME$)<>3 THEN GOTO 9780
9765 OPEN (Z[INDEX],ERR=9780)FILE_NAME$+X3$(9,3); GOTO 9781
9780 OPEN (Z[INDEX])FILE_NAME$
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9910 CLOSE (Z[1]); CLOSE (Z[2]); CLOSE (Z[13])
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
