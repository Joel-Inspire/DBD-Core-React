0010 REM "<RS2OAA> Restocking Gateway Outgoing File
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 03/24/21 - 13.632898 - dmm - SSP# 307338
0037 REM "307338-DBSPT-113793; Restocking GW FTP password change             
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="RS2OAA",X1$="Restocking Gateway Outgoing File"
0120 DIM Z0$(80,"-")
0130 K0=12,K1=1
0135 C9=-1
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0250 X2=2
0285 L0$="RS0   "
0290 K9$="RS2OAA",K9=LEN(K9$)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$(1,LEN(A$))
0320 FM4_IOLIST:IOLIST FM4$,OBSOLETE$,FM4[0],FM4[1],FM4[2],FM4[3],FM4[4],FM4[5],FM4[6],FM4[7],FM4[8],FM4[9],FM4[10],FM4[11],FM4[12],FM4[13],FM4[14],FM4[15]
0330 FM0_IOLIST:IOLIST FM0$
0340 RS5_IOLIST:IOLIST RS5$,RS5[0]
0490 IOLIST R0$,W$,W[0],W[1],W[2],W[3],W[4]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0509 REM "Slot 10 will be used for temp file opened in 8000's
0510 Z$="01X ZZS... 02O FM4... 03O FM0...  04O AR1...  05O FM1...  06O RS5... 13O ZZPARM  "
0515 Z$=Z$+"07O ZZP...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 DIM GRS$(1024); READ (Z[13],KEY=X3$(9,3)+"GRS",DOM=*NEXT)GRS$(1) ! WO286437
0535 DEPT$=GRS$(7,1); IF DEPT$=DIM(1) THEN DEPT$="R" ! WO286437, R=Receiving Dept (default-original version), C=Customer Location
0600 REM "
0605 DIM A$(65+K9),RS5$(22),RS5[1]
0610 A$(1,LEN(K9$))=K9$
0615 A$(65+K9,1)="1",C9=0
0620 READ (Z[1],KEY=A$(1,12+K9),DOM=0621)A$
0625 T9$="123456789",T0=NUM(A$(65+K9,1)),T9$=T9$(1,LEN(L0$)/6)
0630 T0$=L0$((T0-1)*6+1,6),T0$="ZZX"+T0$(1,3)
0640 ADDR T0$,ERR=0641
0650 GOSUB 6000
1000 REM "
1010 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1030 DIM W[4],IM0$(331)
1035 DIM A$(92)
1045 A$(1,0+K9)=K9$+A1$
1060 PRINT 'CF',
1070 GOSUB 6450
1100 REM "KEY SEQ
1105 IF X2=3 THEN GOTO 1500
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9800
1140 ON X0 GOTO 1200,1500
1200 REM "Selection Code
1210 CALL "ZZENTR","SXUX",A{ALL},A$,X4$,X3$,11,3+V0,1+K9,12,C0,"","{1"+X$,K9$,"RS2OAA00","ZZS","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1210,1211
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1240 GOTO 1120
1500 REM "
1505 Z9=-1
1510 A1$=K9$+A$(LEN(K9$)+1,12),A$(1,LEN(K9$))=K9$
1520 READ (Z[1],KEY=A1$,DOM=1600)IOL=0310,IOL=0490
1525 Z9=0
1530 IF A$(65+K9,1)<>STR(T0) THEN GOSUB 6900
1540 REM FIND (z[2],KEY=a$(73,10),DOM=1541)IOL=IM0_IOLIST
1590 GOTO 1700
1600 REM "
1605 A$(65+K9,1)=STR(T0)
1610 IF POS(" "<>A1$(7))=0 THEN GOSUB 6450; GOTO 1650
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 GOTO 1000
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1820 CALL "ZZPROM","3",X3$,Z,"","","V",X0
1825 ON Z+1 GOTO 1850,1830,1850,1830,1830,1830,7100,6500,1000,4900
1830 IF Z=2 THEN GOSUB 6700; GOTO 1800
1835 GOSUB 7000
1840 ON Z GOTO 5000,1850,1000,9800,1000,6500
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 EXTRACT (Z[1],ERR=7200,KEY=A1$,DOM=1870)IOL=0310,IOL=0490
1865 C9=1
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2040 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2040 ON X0 GOTO 2100,2150,2200,2250,2300,2400,2350,1800
2100 REM "Report Sub-Title
2110 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,38,3+V0,13+K9,40,C0,"","{3"+X$,"","RS2OAA02","","",""
2140 GOTO 2020
2150 REM "Options
2160 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,11,4+V0,53+K9,12,C0,"","{3"+X$,"","RS2OAA04","","",""
2170 IF POS(" "<>A$(59,12))=0 THEN PRINT @(11,4),"( Normal )",
2190 GOTO 2020
2200 REM "Report Sequence
2205 T$=A$(65+K9,1); IF LEN(L0$)=6 THEN GOTO 2240
2210 CALL "ZZENTR","ZRU",A{ALL},A$,X4$,X3$,38,4+V0,65+K9,1,C0,"","{3"+X$,"","RS2OAA06","","",""
2225 IF T$<>A$(65+K9,1) THEN GOSUB 6900
2240 GOTO 2020
2255 IF C0<>2 THEN L9=0
2260 CALL T0$,ERR=2261,X3$,X4$,Y0$,W$,W{ALL},0,C0,L9
2270 IF ABS(C0)>4 THEN GOSUB 6400; GOTO 2260
2290 GOTO 2020
2300 REM "Customer Code
2310 CALL "ZZENTR","AXUX",A{ALL},A$,X4$,X3$,28,8,66+K9,10,C0,"A/R","{3"+X$,"","RS2OAA04","AR1","AR2MAB",""; IF C0=6 THEN GOSUB 6400; C0=1
2315 DIM AR1$(599); FIND (Z[4],KEY=A$(66+K9,10),DOM=2310)AR1$
2330 PRINT @(42,8),AR1$(11,35),
2340 GOTO 2020
2350 REM "
2360 REM "CALL "ZZENTR","SZU",A[ALL],A$,X4$,X3$,38,10,73,10,C0,"","{3"+X$,"","RS2OAA06","IM0","IM2MAA",""; IF ABS(C0)>4 THEN GOSUB 06400; ON C0 GOTO 02360,02361
2390 GOTO 2020
2400 REM "CE ID of blank for all
2405 X$="Enter up to 10 CE ID's for this customer, leave blank to build all files"
2410 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,28,9,76+K9,10,C0,"","{3"+X$,"","RS2OAA05","","",""
2440 GOTO 2020
4910 IF R0$>"" THEN R0$(1,7)="IT",R0$(8,1)="N" ELSE DIM R0$(30); R0$(1,7)="IT",R0$(8,1)="N",R0$(8,9)="NNN    66"; GOSUB 6700
5000 REM "Write Print Data
5003 REM "No report to run, will build outgoing files only, we can skip this routine
5005 GOTO 7500
5010 IF R0$="" THEN CALL "ZZRPTO",X3$,X4$,Y0$,R0$,R{ALL},4,C0,X0
5020 T1$=L0$((T0-1)*6+1,6),K$=X3$(1,8)
5025 IF R0$(1,1)<>"Q" THEN GOTO 5040 ELSE Z$="07C         07O ZZQ     ",K9$="",K$=DAY,K$=K$(7,2)+K$(1,2)+K$(4,2),K$=R0$(2,6)+X3$(162,1)+R0$(17,1)+K$+STR(TIM*100:"0000")+" "+A$(1,6)+X3$(9,3)+X3$(40,3); IF R0$(2,1)="U" THEN K$(1,2)=X3$(172,2)
5030 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 5031,9900
5035 ON POS(R0$(1,1)="IQS") GOTO 5090,5040,5065,5080
5040 IF R0$(8,1)="G" THEN GOSUB 5100
5045 WRITE (Z[7],KEY=K$)X3$,X4$,T1$,R0$,W$,IOL=0310; GOTO 5080
5070 WRITE (Z[7],KEY=K$(1,19),DOM=5075)K$,X3$,X4$,T1$,R0$,W$,IOL=0310; GOTO 5090
5075 K$(19,1)=CHR(ASC(K$(19,1))+1); GOTO 5070
5080 IF R0$(8,1)="G" THEN GOSUB 5150
5090 GOTO 9900
5100 REM "GHOST TASK
5110 CALL "ZZGHST",X3$,"?","",G0$,X0
5120 IF X0<>0 THEN CALL "ZZPROM","G1",X3$,S3,"","","",0; ON S3 GOTO 5110,1800
5130 K$(1,LEN(G0$))=G0$; WRITE (Z[13],KEY=K$(1,8))K$+X3$(LEN(K$)+1),X4$
5140 RETURN 
5150 REM "START GHOST
5160 START 30,ERR=5170,K9$,G0$
5165 K9$=""; RETURN 
5170 Q$="+ ( !"+STR(ERR)+")"; CALL "ZZPROM","G2",X3$,S3,Q$,"","",0
5180 EXITTO 1800
5190 RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6010 GOSUB 6600
6020 CALL T0$,ERR=6021,X3$,X4$,Y0$,W$,W{ALL},2,0,L0
6060 PRINT 
6065 PRINT @(13,8),"Customer Code:",
6066 PRINT @(4,9),"CE ID or blank for all:",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6220 PRINT @(38,3+V0),A$(13+K9,40),@(11,4+V0),A$(53+K9,12),@(38,4+V0),A$(65+K9,1),
6225 IF POS(" "<>A$(59,12))=0 THEN PRINT @(11,4),"( Normal )", ELSE PRINT @(11,4),A$(59,12),
6230 IF K=1 THEN RETURN ELSE CALL T0$,ERR=6231,X3$,X4$,Y0$,W$,W{ALL},1,0,L0
6305 CALL "ZZDISP","A",A$(66+K9,10),"A/R",X3$,"","",28,8,X4$
6310 PRINT @(28,9),A$(76+K9,10),
6313 DIM AR1$(599); FIND (Z[4],KEY=A$(66+K9,10),DOM=6314)AR1$
6315 PRINT @(42,8),AR1$(11,35),
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6460 PRINT @(11,3+V0),A$(1+K9,12),
6485 IF POS(" "<>A$(7,12))=0 THEN PRINT @(11,3),"(Standard)" ELSE PRINT @(11,3),A$(7,12),
6490 RETURN 
6500 REM "DELETE
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6620 PRINT @(0,3+V0),"Selection:",@(25,3+V0),"Description:",@(2,4+V0),"Options:",@(28,4+V0),"Sequence:",@(0,5+V0),Z0$,
6630 PRINT 
6690 RETURN 
6700 REM "ADD ENTRY
6705 IF Z9=0 THEN GOTO 6790
6710 WRITE (Z[1],KEY=A1$)IOL=0310,IOL=0490
6790 Z9=2; RETURN 
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=1140)
6820 A$(1,LEN(A1$))=A1$
6825 IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 1140
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6870 GOTO 6895
6890 GOTO 1515
6900 REM "
6902 V9$="1103  3803  1104  3804  "
6905 IF T0$<>"" THEN DROP T0$,ERR=6906; GOTO 6905
6910 T0=NUM(A$(65+K9,1))
6915 T0$=L0$((T0-1)*6+1,6),T0$="ZZX"+T0$(1,3)
6920 IF Z9<>0 THEN W$=""
6925 ADDR T0$,ERR=6926
6930 GOSUB 6400
6940 RETURN 
7000 REM "UPDATE
7005 S3=0
7010 S3=0; IF Z9=1 THEN CALL "ZZPROM","R1",X3$,S3,"","","",0 ELSE IF Z9<0 THEN CALL "ZZPROM","R2",X3$,S3,"","","",0
7020 IF Z9<0 THEN CALL "ZZPROM","Y",X3$,S3,"Do you wish to update this New selection? (Yes, No):","","",0
7080 IF S3=0 THEN GOSUB 6700
7090 RETURN 
7100 REM "OPTIONS
7110 PRINT @(0,3),'CE',
7120 CALL "ZZRPTO",X3$,X4$,Y0$,R0$,R{ALL},4,C0,X0
7125 PRINT @(0,3),'CE',
7130 GOSUB 6400
7140 Z9=1
7190 GOTO 1800
7400 REM "Audit already run
7410 FIND (Z[1],KEY="",DOM=7490)V0$,K0$
7420 IF K0$>"" THEN CALL "ZZPROM","4",X3$,S3,"The update has already been initiated","","",0; GOTO 9900
7430 EXTRACT (Z[1],KEY="",ERR=9800)
7440 Q$="Audit report "+V0$(22,4)+"."+V0$(26,2)+" has already been printed for this data entry."
7445 CALL "ZZPROM","5",X3$,S3,Q$,"","",0; ON S3 GOTO 7446,9800
7450 REMOVE (Z[1],KEY="")
7490 RETURN 
7500 REM "Do main processing here
7505 ALT_CUST$=AR1$(411,6); REM "Alternate customer code
7506 IF POS(" "<>ALT_CUST$)=0 THEN CALL "ZZPROM",".4",X3$,S3,"This customer does NOT have an alternate cust code setup!","","",0; GOTO 1800
7507 IF STP(A$(76+K9,10),3," ")="" THEN ALL$="Y" ELSE ALL$="N"; REM "Process all files for this customer
7508 GOSUB 8100; REM "Remove old files for this customer from occ_out
7510 GOSUB 8000; REM "Create and open tmp file, will cycle thru FM4, write into tmp file, when done with this customer create and write to individual files (A,B,C...), then move those file to correct DIRectory
7515 READ (Z[2],KEY=A$(66+K9,10),DOM=7516)
7520 DIM FM4$(215),FM4[15]; READ (Z[2],END=7580)IOL=FM4_IOLIST
7525 IF FM4$(1,10)<>A$(66+K9,10) THEN GOTO 7580
7527 IF FM4$(27,1)<>"R" THEN GOTO 7520; REM "There could be FM4 records that are not OCC for an OCC location
7530 DIM FM0$(522); FIND (Z[3],KEY="C"+A$(66+K9,10)+FM4$(21,4))IOL=FM0_IOLIST
7535 IF FM0$(375,1)=" " THEN GOTO 7520; REM "This location is not GRS
7540 IF ALL$<>"Y" THEN IF POS(FM0$(375,1)=A$(76+K9,10))=0 THEN GOTO 7520; REM "We are not processing this file for this customer
7542 DIM DEPT_CODE$(10); IF DEPT$="R" THEN DEPT_CODE$=FM0$(382,10) ELSE IF DEPT$="C" THEN DEPT_CODE$(1,9)=FM0$(214,9) ! WO286437
7545 PRINT @(10,12),"Creating temporary sort record: ",FM0$(375,1),"  ",ALT_CUST$,"  ",DEPT_CODE$,"  ",FM4$(11,10),'CL', ! WO286437 replace FM0$(382,10) with DEPT_CODE$
7555 WRITE (Z[10],KEY=FM0$(375,1)+ALT_CUST$+DEPT_CODE$+FM4$(101,8)+FM4$(11,10)) ! WO286437 replace FM0$(382,10) with DEPT_CODE$
7560 GOTO 7520
7580 GOSUB 8200; REM "Sort file built now create individual files
7585 CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
7590 GOTO 9900
8000 REM "Create and open tmp file
8010 TMP_FILE$="Outgoing GRS",Z=0
8015 CALL "ZZ2SRT",X3$,X4$,Z[13],Z[2],35,TMP_FILE$,Z,"NN"
8020 IF Z=2 THEN GOTO 9920
8025 Z$="10O "+TMP_FILE$
8030 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 8031,9900
8095 RETURN 
8100 REM "Look in occ_out DIRectory and move old files for this customer to archive DIRectory
8110 SYS_CALL$="mv /usr/lib/pvx/occ_out/TW"+ALT_CUST$(1,1)+ALT_CUST$(3,2)+"* /usr/lib/pvx/occ_archive > /dev/null"
8120 SYS_CALL=SYS(SYS_CALL$)
8145 RETURN 
8200 REM "Create and write to individual files, move to proper DIRectory
8203 TF2D$=%DATAPATH$
8205 READ (Z[10],KEY="",DOM=8206)
8207 FILE_ID$=""
8210 SORT_REC$=KEY(Z[10],END=8280)
8215 IF SORT_REC$(1,1)<>FILE_ID$ THEN GOSUB 8300; REM "New file ID
8219 PRINT @(0,22),'CL',
8220 PRINT @(10,12),"Writing file: ",GRS_FILE$,"  Record: ",SORT_REC$(8,10),"  ",SORT_REC$(18,8),"  ",SORT_REC$(26,10),'CL',
8225 DIM GRS_REC$(70)
8230 GRS_REC$(1,6)=ALT_CUST$,GRS_REC$(7,10)=SORT_REC$(8,10); REM "Alt cust code, department
8235 GRS_REC$(17,8)=SORT_REC$(18,8); REM "Shelf
8240 DIM FM1$(448); FIND (Z[5],KEY=A$(66+K9,10)+SORT_REC$(26,10))FM1$
8245 GRS_REC$(25,10)=SORT_REC$(26,10) ! SSP248771 - They no longer want the CIC to write to the count file IF STP(FM1$(350,10),3," ")="" THEN GRS_REC$(25,10)=SORT_REC$(26,10) ELSE GRS_REC$(25,10)=FM1$(350,10); REM "Use CIC if there is one
8250 GRS_REC$(35,30)=FM1$(42,30); REM "Item description
8255 DIM ISSUE_UNIT$(21); FIND (Z[13],KEY="U/M"+FM1$(100,4))ISSUE_UNIT$
8260 GRS_REC$(65,1)=ISSUE_UNIT$(8,1); REM "1st char of U/M description
8265 GRS_REC$(66,5)="00000"; REM "Count will go here on way back in
8270 PRINT (32500)GRS_REC$
8272 REC_COUNT=REC_COUNT+1; REM "Will be used to write number of records to RS5
8275 READ (Z[10],END=8280); GOTO 8210
8280 END$="Y"; GOSUB 8300; GOSUB 8400; REM "End of sort file, move last file, then transfer files to Novell Server
8295 RETURN 
8300 REM "Move previous file, create new file if not at end
8310 IF FILE_ID$="" THEN GOTO 8350; REM "First file
8315 CLOSE (32500)
8320 INVOKE "mv -f "+TF2D$+"/"+GRS_FILE$+" /usr/lib/pvx/occ_out/"+GRS_FILE$+" > /dev/null"
8325 RS5$=A$(66+K9,10)+RS5_FILE$+X3$(21,6),RS5[0]=REC_COUNT; WRITE (Z[6],KEY=RS5$(1,16))IOL=RS5_IOLIST; REM "Write out record count to RS5 file
8330 IF END$="Y" THEN GOTO 8395; REM "Last file
8350 REM "Create file and open
8355 FILE_ID$=SORT_REC$(1,1); REM "New file ID
8357 RS5_FILE$="TW"+ALT_CUST$(1,1)+ALT_CUST$(3,2)+FILE_ID$
8360 GRS_FILE$=RS5_FILE$+".ASC"
8365 ERASE GRS_FILE$,ERR=8366
8370 SERIAL GRS_FILE$,0,0
8375 OPEN LOCK (32500,OPT="TEXT")GRS_FILE$
8380 REC_COUNT=0; REM "Will be used to write number of records to RS5
8395 RETURN 
8400 REM "Transfer files for this customer to the Novell Server
8410 IF X3$(9,3)="500" THEN GOTO *RETURN ! WO286437 no need for transfer for our testing MACHINE$="tftech",LOGIN$="root",PASSWORD$="",REMOTE_DIR$="/usr/dmm/dmmporting",LOCAL_DIR$="/usr/lib/pvx/occ_out"
8420 IF X3$(9,3)="449" THEN MACHINE$="thesourcinggroup.files.com",LOGIN$="occ2",PASSWORD$="T\$G_dbD_2021",REMOTE_DIR$="/twdata/twis/occ/pcplus",LOCAL_DIR$="/usr/lib/pvx/occ_out" ! SSP307221-DBSPT-72255 change machine from twis2 SSP307320-DBSPT-107347, password was tfocc SSP307338-DBSPT-113793 password was T$GdbD20
8430 SYS_CALL2$="echo -e "+QUO+"machine "+MACHINE$+"\nlogin "+LOGIN$+"\npassword "+PASSWORD$+"\nmacdef init\ncd "+REMOTE_DIR$+"\nlcd "+LOCAL_DIR$+"\npwd\nprompt\nmput TW"+ALT_CUST$(1,1)+ALT_CUST$(3,2)+"*\nquit\n\n"+QUO+" > $HOME/.netrc;chmod 600 $HOME/.netrc"
8435 INVOKE SYS_CALL2$
8440 SYS_CALL3$="umask 0;ftp "+MACHINE$+" >/dev/null 2>&1;rm -f $HOME/.netrc"
8445 INVOKE SYS_CALL3$
8495 RETURN 
8910 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
8999 ESCAPE 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9800 REM "
9820 K9$="ZMENU"
9850 J9$="ABORT"
9900 REM "END PROGRAM
9905 IF T0$<>"" THEN DROP T0$,ERR=9906; GOTO 9905
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9911 IF J9$="ABORT" THEN GOTO 9920
9916 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9917 ERASE TMP_FILE$,ERR=9918
9918 IF Z=1 THEN GOTO 9921
9920 IF K9$>"" THEN IF K9$="RS2OAA" THEN RUN "ZMENU" ELSE RUN K9$
9925 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 BEGIN ; SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM "286437-Restocking GW; use customer location code not receiving dept
56002 REM "307221-DBSPT-72255; Restocking Gateway, change FTP machine name.   
56004 REM "307320-DBSPT-107347;Change password in Restocking GW for 449       
56006 REM "307338-DBSPT-113793; Restocking GW FTP password change             
