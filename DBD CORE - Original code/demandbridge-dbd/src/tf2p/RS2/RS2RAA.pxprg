0010 REM "<RS2RAA> Restocking Gateway Report
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 02/09/22 - 8.593497 - dmm - SSP# 307392
0037 REM "307392-DBD-247;DBSPT-134643;GRS;Ignore FM1 First Alternate U/M     
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 9000
0095 PRECISION 14; T2=TIM; PRECISION 2
0110 X0$="RS2RAA",X1$="Restocking Gateway Report"
0120 DIM A$(60),A[20],C$(448),C[31],D$(400),D[15],E[15],S$(20),J[20]
0140 Z0$="##0-",Z1$="###,##0-"
0150 L0=50; REM "RS1 records s/b 50 long for version 1.00,will adjust at 8029 if another version
0210 T=1,T0=1,T1=1
0220 W3=127
0225 W=999
0230 DIM T1$(W3,"-"),T2$(W3,"="),T3$(W3,"*"),Y5$(W3),Y6$(W3),W[4]
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0260 CALL "ZZRPTP",X3$,X0$,X1$,V9$,V0,Q0$,Q1$,Q2$,Q3$,Q4$,Q5$,Q6$
0300 REM "I/O lists
0305 REM "IOLIST FOR RSL - Restocking Gateway File
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0325 REM "IOLIST FOR FM1 - Customer Job Master
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20],C[21],C[22],C[23],C[24],C[25],C[26],C[27],C[28],C[29],C[30],C[31]
0335 REM "IOLIST FOR AR1 - Customer Masterfile
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15]
0345 REM "IOLIST FOR FM4 - F/M Item location data
0350 IOLIST E$,E9$,E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],E[8],E[9],E[10],E[11],E[12],E[13],E[14],E[15]
0355 REM "IOLIST FOR TEMP CS0--Header portion used for call to FM2RTO
0360 IOLIST F$,F[0],F[1]
0365 REM "IOLIST FOR TEMP CS2--Lines portion used for call to FM2RTO
0370 IOLIST G$,G[0],G[1]
0375 REM "IOLIST FOR ZZPARM--Unit of measure
0380 IOLIST UM$,UM[0],UM[1]
0395 REM "IOLIST FOR IC1--Inventory by location
0400 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12],J[13],J[14],J[15],J[16],J[17],J[18],J[19],J[20]
0405 REM "IOLIST FOR FM0--Ship-to location master
0410 IOLIST K$
0420 IOLIST X3$,X4$,V1$,V3$,V2$,IOL=0425
0425 IOLIST V$,V[0],V[1]
0500 REM "Files
0505 DIM Z[NUM(X3$(60,3))]; GOSUB 7400
0510 Y$="01X RSL...  03O FM1...  04O AR1...  05O FM4...  09O FMP...  10O IC1...  11O FM0...  "; IF V1$(1,3)<>Y$(5,3) THEN Y$=Y$+"02X "+V1$+"  "
0515 IF V$(76,1)="Y" THEN GOSUB 8700
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
0550 READ (Z[13],KEY=X3$(9,3)+"FMS")F9$
0585 RT_PARM$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT_PARM$
0800 REM "Alternate Sort Info & total dim"
0810 DIM U[10,2],U0$(10),Y[5,1]
0820 CALL "ZZRSEQ",X3$,X0$,V1$,U,U0,U1,U{ALL},Y{ALL},T0,V0,U0$,T5$,U5$,S9$,X9; ON X9 GOTO 0821,9920
0825 IF V0>1 THEN GOSUB 6950
0830 U0$(1,1)="0"; IF V$(75,1)="Y" THEN U0$(4,1)="1"
0850 DIM T[T0,T1]; U5$(1,20)=Q4$
0860 REM "Using RS1 file, create RSL records
0865 GOTO 7900
0890 REM "Open Printer
0895 CALL "ZZPRIN",X0$,X3$,Y0$,V3$,Z{ALL},W8$,W9$,W0,W9,W2,W3,W4; ON W4 GOTO 0896,9920
0925 DIM K$(100)
0950 REM " Position read"
0970 DIM V4$(U); U9=1; FOR X=1 TO U0; V4$(U[X,0],U[X,1])=V2$(U9,U[X,1]); U9=U9+2*U[X,1]; NEXT X
0985 V4$(U,1)=CHR(ASC(V4$(U,1))-1)
0990 READ (U1,KEY=V4$,DOM=0991)
1000 REM "Read next record and check range
1005 U$=KEY(U1,END=5000)
1010 FOR X=1 TO U0; U2=U[X,0],U3=U[X,0]*2-1,U4=U[X,1]
1020 IF U$(U2,U4)<V2$(U3,U4) THEN READ (U1); EXITTO 1000
1030 IF U$(U2,U4)>V2$(U3+U4,U4) THEN IF U=1 THEN EXITTO 5000 ELSE READ (U1); EXITTO 1000
1040 NEXT X
1100 REM "Get record"
1110 U9$=U$; IF U1=Z[1] THEN GOTO 1150 ELSE U$="",X=0
1120 IF Y[X,0]>0 THEN U$=U$+U9$(Y[X,0],Y[X,1]),X=X+1; GOTO 1120
1130 READ (U1)
1150 EXTRACT (Z[1],KEY=U$,DOM=1000)IOL=0310; REM "Was READ, changed to EXTRACT since we write back out in 1850's now
1200 REM "Reporting criteria
1210 IF POS("N"=V$(59,12))>0 THEN IF A[7]<=0 THEN GOTO 1850; REM "Option to only print those with minimum needed >0, still need to mark them as printed so they will be removed from the RSL file after the auto req portion
1250 REM 
1260 IF K$(1,15)<>"C"+A$(2,10)+A$(12,4) THEN READ (Z[11],KEY="C"+A$(2,10)+A$(12,4),DOM=1261)IOL=0410
1310 GOSUB 7600
1330 READ (Z[3],DOM=1331,KEY=A$(2,10)+A$(16,10))IOL=0330
1350 REM "UNITS
1355 C0$="    ",C0=C[0]
1360 ! DBD-247-DBSPT-134643-SSO307392 Ignore FM1 First Alternate U/M IF C$(238,4)<>S$(1,4) THEN C0$=C$(238,4),C0=C[25]
1365 IF C0$=S$(1,4) THEN IF C$(100,4)<>"M   " THEN C0$=C$(100,4),C0=C[4] ELSE C0$="CASE",C0=C[0]
1400 REM "Subtotals"
1410 IF U2$="" THEN GOTO 1490 ELSE FOR T=1 TO U0; IF U9$(U[T,0],U[T,1])<>U2$(U[T,0],U[T,1]) THEN EXITTO 1420 ELSE NEXT T; GOTO 1480
1425 GOSUB 3100
1490 T=0,U2$=U9$
1510 IF W+3>W0 OR W7>0 THEN GOSUB 6000
1520 Y5$(1)=A$(16,10)
1522 Q$=""; IF A$(26,1)="1" THEN Q$="Date" ELSE IF A$(26,1)="2" THEN Q$="Qty " ELSE IF A$(26,1)="3" THEN Q$="Days" ELSE IF A$(26,1)="4" THEN Q$="Fixed"
1525 Y5$(13)=A$(12,4),Y5$(19)=Q$,Y5$(29)=STR(A[4]:Z0$),Y5$(36)=STR(A[5]:Z1$)
1528 Y5$(45)=FND$(A$(32,6)),Y5$(58)=FND$(A$(39,6))
1530 Z2$=Z1$; IF POS("F"=F9$(18,8))>0 THEN IF A[6]<100 AND FPT(A[6])<>0 THEN Z2$="####.00-"
1531 A0=A[0]-A[1]+A[2]
1532 IF A[7]>0 THEN X$=STR(A[7]:Z2$) ELSE X$=Z1$,X$(1)="",X$(LEN(X$)-1,2)="??",A[5]=0
1533 Y5$(72)=STR(A[6]:Z2$),Y5$(80)=STR(A[0]:Z2$)
1536 Y5$(93)=STR(A[3]:"###0"),Y5$(99)=X$
1537 Q=0; IF C0>0 THEN Q=A[7]/C0; Y5$(110)=C0$+"/"+STR(C0)
1538 IF Q>0 THEN Y5$(120)=STR(Q:"###.00") ELSE IF A$(26,1)<>"0" THEN Y5$(120)="______"
1540 GOSUB 7300
1545 Y5$(1)=C$(42,40)
1548 IF A[11]<>0 OR A[12]<>0 THEN Y5$(29)=STR(A[11]:Z0$),Y5$(36)=STR(A[12]:Z1$)+"  <Restock pt"
1550 IF A[8]<>0 THEN Y5$(63)="On hand at "+"D"+A$(45,4)+" "+STR(A[8]:Z1$)
1555 IF A[2]<>0 THEN Y5$(100)="Open reqs: "+STR(A[2]:Z1$)
1560 IF A[0]=99 OR A[0]=999 OR A[0]=9999 OR A[0]=99999 THEN Y5$(96)="Item not counted"
1600 REM "If this location has auto requisitions the do them here
1610 IF A$(1,1)="R" AND POS("R"=K$(367,8))=0 OR (A$(1,1)="S" AND POS("W"=K$(367,8))=0) THEN GOTO 1650
1620 REM "round amount needed into N
1625 Q0=INT(Q+.555)
1630 IF Q0<=0 THEN GOTO 1650
1635 IF V$(76,1)="Y" THEN GOSUB 8600
1640 J$="Automatic Req amount: "+FNS$(STR(Q0:"#,###"))
1645 Y5$(96)=J$; GOSUB 7300
1648 IF FROM$="Y" THEN CALL "ZZDISP","AX",G$(29,10),"A/R",X3$,X$,"",0,0,X4$; Y5$(1)="From Customer: "+X$; FROM$="N"
1650 GOSUB 7300
1810 GOSUB 7300
1850 REM "Mark this RSL record as printed
1860 A$(49,1)="Y"; WRITE (Z[1],KEY=A$(1,25))IOL=0310; REM "Printed?
1900 REM "Accumulate Totals"
1990 T[T0,0]=T[T0,0]+1
1995 GOTO 1000
3000 REM "Subtotaling Routines"
3050 REM "Add to T$ for total title, T & T5 should be set
3060 IF T7$(1,1)=" " THEN RETURN 
3070 IF T7$(1,1)<>"S" THEN CALL "ZZDISP",T7$(1,1)+"X",T6$,T7$(2,3),X3$,T6$,"",0,0,X4$
3080 IF T$="" THEN T$=T6$ ELSE T$=T$+" "+T6$
3090 RETURN 
3100 REM "Subtotal Logic
3110 FOR T=U0 TO T STEP -1
3130 T$=FNS$(U5$(T*20+1,20)),T6$=U2$(U[T,0],U[T,1]),T7$=T5$(T*4+1,4); GOSUB 3050; IF POS(U0$(T+1,1)="23")>0 THEN GOSUB 7000 ELSE GOSUB 7100
3150 IF POS(U0$(T+1,1)="13")>0 THEN W7=999
3180 NEXT T
3195 RETURN 
3280 RETURN 
3380 RETURN 
3480 RETURN 
5000 REM "End of Print
5020 IF W8=0 THEN GOTO 5290
5030 T0$="END"
5050 T=0; GOSUB 3100
5060 REM "GOSUB 7500 TO CLEAR FILE
5200 REM "
5290 GOTO 9900
5300 REM "If here process reqs
5303 IF V3$(2,1)="T" THEN GOTO 5900; REM "If viewing, erase tmp files and get out
5305 Q$="Do you wish to update all of the automatic requisitions?"
5310 CALL "ZZPROM",".Y",X3$,S3,Q$,"","",0; ON S3 GOTO 5311,5900
5313 GOSUB 5500; REM "Set options and create files for call to FM2RTO for checklist and exception report
5315 Y$="03C FM1...  04C AR1...  05C FM4...  09C FMP...  10C IC1...  11C FM0...  "; IF V1$(1,3)<>Y$(5,3) THEN Y$=Y$+"02C "+V1$+"  "
5317 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
5318 CALL "ZZINFO",Z[6],T9,X3$,T5,T6,K,B,D,S0,S1,F$; C7=0,T6=INT(T5*.02); IF T6<=1 THEN T6=2
5319 PRINT @(10,18),"There are "+STR(T5)+" records to process",
5320 READ (Z[6],KEY="",DOM=5321)
5325 READ (Z[6],END=5395)IOL=0360
5327 C7=C7+1; IF MOD(C7,T6)=1 THEN GOSUB 7700
5345 REM "Added OPTION$ to call to FM2RTO,WO#84245,4/18/97
5350 CALL "FM2RTO",X3$,X4$,0,F$,F{ALL},F0$,F1$,OPTION$
5390 GOTO 5325
5395 C7=T5; GOSUB 7700
5396 GOSUB 7500; REM "Clear RSL printed records for this range
5397 GOTO 5900
5500 REM "Set options and create file for call to FM2RTO
5505 OPTION$="C"; REM "Means write out RS2 file to be used for checklist,ssp#84245
5510 RS2_FILE$="RS2"+FID(0)
5515 ERASE RS2_FILE$,ERR=5516; GOTO 5515
5520 DIRECT RS2_FILE$,14,0,128,0,0
5530 OPTION$=OPTION$+"E"; REM "Means write out RS3 file to be used for exception report, and also no backorders on auto reqs, ssp#84245
5535 RS3_FILE$="RS3"+FID(0)
5540 ERASE RS3_FILE$,ERR=5541; GOTO 5540
5545 DIRECT RS3_FILE$,24,0,128,0,0
5555 OPTION$=OPTION$+"W"; REM "Means if customer specific item and not enough found in sent in/default warehouse, then check the other warehouse (same physical warehouse), ssp#84694, 5/5/97
5560 Y4$="RS2CAA"; REM "Run Restocking Gateway Checklist Report
5565 OPTION$=OPTION$+"R"; REM "Means set FS1(181,1) to an R for auto req type, will be used in invoice entry to default the ship date to the next business day after the order date, ssp#85281
5595 RETURN 
5890 ESCAPE 
5900 REM "Remove work files
5910 CLOSE (Z[6],ERR=5911)
5911 CLOSE (Z[7],ERR=5912)
5920 ERASE F0$,ERR=5921
5925 ERASE F1$,ERR=5926
5995 GOTO 9916
6000 REM "Page header
6010 IF A$(1,1)="R" THEN W0$="Customer Specific Items" ELSE W0$="Stock Items"
6012 W0$=W0$+" - "+FNS$(D$(11,35))+D0$
6015 W7=0
6040 CALL "ZZHEAD",X0$,X1$,X2$,X3$,W0$,W1$,W2$,W9$,W3,W,W9,W8,W0,W5,W2,W8$,W5$; IF T0$="END" THEN GOTO 6090 ELSE ON W5 GOTO 6041,9910
6060 GOSUB 6100
6070 GOSUB 7300
6090 RETURN 
6100 REM "
6115 Y5$(25)="+--- Restocking Points ------+"
6120 GOSUB 7300
6125 Y5$(26)="In days",Y5$(46)="Manual",Y5$(59)="Last count",Y5$(72)="Avg Mo.",Y5$(80)="Qty on",Y5$(89)="Days supply",Y5$(103)="Min."
6126 Y5$(110)="Case",Y5$(120)="Qty"
6130 GOSUB 7300
6135 Y5$(3)="Item",Y5$(13)="Locn  Reason",Y5$(26)="Supply",Y5$(35)="Quantity",Y5$(48)="Date",Y5$(61)="Date",Y5$(73)="Usage",Y5$(83)="Hand",Y5$(91)="On-hand",Y5$(100)="Needed"
6136 Y5$(110)="Pack",Y5$(120)="Req'd"
6140 GOSUB 7300
6195 IF FID(W9)=FID(0) THEN PRINT 'SF',
6199 RETURN 
6900 REM "SORT
6955 IF S9$="X" THEN GOTO 6990 ELSE S0=Z[1],S1=Z[2]
6970 CALL "ZZSORT",X3$,"",V1$,S9$,"","",0,0,0,S0,S1,S9; ON S9 GOTO 6971,9920
6990 RETURN 
7000 REM "Totals logic
7001 IF T=T0 THEN IF T[T0,0]<2 THEN GOSUB 7300; GOTO 7100
7002 IF T=0 THEN GOTO 7100
7005 IF W+3>W0 THEN GOSUB 6000
7010 Y5$(1)=T3$(1,T0+1-T)+" "
7015 IF T$<>"" THEN Y5$(T0+2-T)=T$+" "+Q2$+" ("+STR(T[T,0]:"0")+"):"
7090 IF T0$="END" THEN IF T=0 THEN GOSUB 7200; GOTO 7190
7095 GOSUB 7300
7100 REM "Accumulate sub totals
7110 IF T=0 THEN GOTO 7190
7120 FOR X=0 TO T1
7130 T[T-1,X]=T[T-1,X]+T[T,X],T[T,X]=0
7140 NEXT X
7190 RETURN 
7200 REM "Elapsed time routine"
7205 GOSUB 7300; Y5$(1)=Q1$+": "+STR(T[0,0]); GOSUB 7300
7210 PRECISION 14; T2=TIM-T2
7220 T4$=STR(INT(T2):"##0")
7230 T3=INT(FPT(T2)*3600)
7240 T3=T3/60
7250 T4$=T4$+":"+STR(T3:"00")
7260 Y5$(1)=Q3$+": "+T4$; GOSUB 7300
7280 PRECISION 2
7290 RETURN 
7300 REM "Output line Y5$ to output device
7310 IF POS("V"=W8$)>0 THEN CALL "ZZVIEW",X3$,0,0,W3,W9,W,W9$,Y5$; GOTO 7390
7320 W=W+1; IF POS(" "<>Y5$)=0 THEN PRINT (W9)"" ELSE PRINT (W9)Y5$; Y5$(1)=""
7390 IF W>=W0 THEN GOSUB 6000
7395 RETURN 
7400 REM "Read report selection parameters"
7410 Z$="12O ZZP     13O ZZPARM  "
7420 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 7421,9900
7430 Y3$=X3$(1,6),Y4$=X3$(178,7)
7435 DIM V[1]
7450 READ (Z[12],KEY=X3$(1,8),DOM=7451)IOL=0420
7455 IF V$(73,1)="Y" THEN W1$="On hand reduced by estimated usage"
7460 IF V3$(72,1)="Y" THEN Q$="All items" ELSE Q$="Only Below Restock items"
7465 IF W1$="" THEN W1$=Q$ ELSE W1$=W1$+" - "+Q$
7480 X3$(178,7)=Y4$,V0=NUM(V$(71,1)),W3$=V$(19,POS("   "=V$(19,40)+"  ")-1)
7485 FOR U1=1 TO LEN(V1$); IF V1$(U1,1)=" " THEN V1$(U1,1)="."; NEXT U1 ELSE NEXT U1
7490 RETURN 
7500 REM "Clear printed records from RSL file for this range
7505 IF V3$(2,1)="T" THEN GOTO 7590
7510 REM "LET Q$="DO YOU WISH TO CLEAR THE RESTOCKING FILE?"
7520 REM "CALL "ZZPROM",".Y",X3$,S3,Q$,"","",0; ON S3 GOTO 07521,07590
7523 PRINT @(0,13),'CE',
7525 READ (Z[1],KEY=V4$,DOM=7526)
7530 U$=KEY(Z[1],END=7590); EXTRACT (Z[1])IOL=0310
7535 FOR X=1 TO U0; U2=U[X,0],U3=U[X,0]*2-1,U4=U[X,1]
7540 IF U$(U2,U4)<V2$(U3,U4) THEN READ (U1,END=7590); EXITTO 7530
7545 IF U$(U2,U4)>V2$(U3+U4,U4) THEN IF X=1 THEN EXITTO 7590 ELSE READ (U1,END=7590); EXITTO 7530
7550 NEXT X
7555 REM "IF A$(32,5)="      " THEN GOTO 07580 ELSE EXTRACT (Z[5],KEY=U$(2,10)+U$(16,10)+U$(12,4),DOM=07580) IOL=00350
7560 REM "IF E$(32,6)<=A$(32,6) THEN LET E$(32,6)=""; WRITE (Z[5],KEY=E$(1,24)) IOL=00350; IF RT_PARM$<>"" THEN LET CUST$=E$(1,10); CALL "RT2WOC",ERR=07561,X3$,X4$,CUST$,"FM4...","U",E$(1,24)
7582 PRINT @(10,15),"Removing record: ",A$(2,10),"  ",A$(12,4),"  ",A$(16,10),'CL',
7583 IF A$(49,1)="Y" THEN REMOVE (Z[1],KEY=U$) ELSE READ (Z[1])
7585 GOTO 7530
7590 PRINT @(0,13),'CE',
7595 RETURN 
7600 REM "Customer Change
7610 IF D$>"" THEN IF D$(1,10)=A$(2,10) THEN GOTO 7640
7620 DIM D$(LEN(D$)); FIND (Z[4],DOM=1341,KEY=A$(2,10))IOL=0340
7630 CALL "ZZDISP","AX",D$(1,10),"A/R",X3$,D0$,"",0,0,X4$
7635 D0$=" ("+D0$+")"
7645 RETURN 
7650 REM "Close RS1 file & rename to RS4 for archiving, erase an existing RS4 file if same name
7655 Y$="08CU"+RS1_FILE$+" "
7660 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
7665 RS4_FILE$=RS1_FILE$; IF RS4_FILE$ LIKE "[Rr][Ss]1*" THEN RS4_FILE$(1,3)="RS4" ELSE GOTO 7695
7675 ERASE RS4_FILE$,ERR=*PROCEED; RENAME DIR_PATH$+DLM+RS1_FILE$ TO DIR_PATH$+DLM+RS4_FILE$
7695 GOTO 7920
7700 REM "Print bar graph
7710 CALL "ZZBARG",X3$,"HG",19,10,50,T7,T5,C7
7745 RETURN 
7750 REM "End of file
7754 IF LEN(REC_COUNT$)<=0 THEN GOTO 7795
7755 FOR X=1 TO LEN(REC_COUNT$)-2 STEP 3
7756 S0$="GRS|STAT|"+FN%CDS$+"|"+X3$(40,3)+"|"+X3$(9,3)+"|"+FID(0)+"|"+RS1_FILE$+"|"+REC_COUNT$(X,3)+"|"+STR(REC_COUNT[(X+2)/3]:"0000")
7757 S2$="echo "+QUO+S0$+QUO+" >> "+HWD+DLM+"GW_LOG"
7758 INVOKE S2$
7759 NEXT X
7795 GOTO 7650
7800 BAD_RECORD:REM "Write message to GRS_LOG, couldn't process this record
7805 BAD_REC_COUNT=BAD_REC_COUNT+1
7810 MESSAGE$="File: "+RS1_FILE$+" Reason: "+REASON$
7820 BAD_REC$=RS1$(1,3)+"|"+RS1$(4,3)+"|"+RS1$(7,10)+"|"+RS1$(17,4)+"|"+RS1$(21,10)+"|"+RS1$(31,6)+"|"+RS1$(37,4)+"|"+RS1$(41,5)+"|"+RS1$(46,5)
7830 SYS_CALL$="echo "+QUO+MESSAGE$+QUO+" >> "+HWD+DLM+"GRS_LOG"
7835 INVOKE SYS_CALL$
7840 SYS_CALL$="echo "+QUO+BAD_REC$+QUO+" >> "+HWD+DLM+"GRS_LOG"
7845 INVOKE SYS_CALL$
7890 BAD_RECORD_END:RETURN 
7900 REM "Import RS1 files if any
7910 CALL "ZZ2BLS","D0:RS1*","S",FILES$
7915 IF X3$(77,1)="U" THEN CALL "ZZ2BLS","D0:rs1*","S",LOWER_FILES$; FILES$=FILES$+LOWER_FILES$
7917 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
7918 PRINT @(0,13),'CE',
7920 P=POS(":"=FILES$); IF P=0 THEN GOTO 8550
7925 RS1_FILE$=FILES$(P+1); P1=POS(":"=RS1_FILE$); IF P1>0 THEN FILES$=RS1_FILE$(P1-2),RS1_FILE$=RS1_FILE$(1,P1-3) ELSE FILES$=""
7930 Y$="08CU 08O "+RS1_FILE$+" "
7935 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1; ON Z0 GOTO 7936,8550
7940 CLOSE (Z[8]); OPEN LOCK (Z[8],OPT="TEXT")RS1_FILE$; REM "Open for reading raw file
7950 PRINT @(15,15),"Processing: "+RS1_FILE$,
7955 T5=0
7965 DIR_PATH$=%DATAPATH$
7970 FULL_PATH$=DIR_PATH$+DLM+RS1_FILE$
7975 ! CLOSE (14); OPEN (14)"< cat "+FULL_PATH$+" | wc -l"; READ (14)NUM_REC$
7980 ! T5=NUM(NUM_REC$,ERR=7990)
7981 CALL "ZZ2FNC;SerialRecCnt",Z[8],T5
7985 PRINT @(10,18),"There are "+STR(T5)+" GRS records to process"
7990 C7=0,T6=INT(T5*.02); IF T6<=1 THEN T6=2
8000 REM "Using RS1 File, create RSL records
8005 RS1$="",REC_COUNT$=""; DIM REC_COUNT[50]
8010 READ (Z[8],END=7750)RS1$; C7=C7+1,COUNT=COUNT+1,NOT_COUNTED$=""
8015 P=POS(RS1$(1,3)=REC_COUNT$,3); IF P=0 THEN REC_COUNT$=REC_COUNT$+RS1$(1,3); GOTO 8015; REM "Used to write to GW_LOG
8020 P1=(P+2)/3; REC_COUNT[P1]=REC_COUNT[P1]+1
8025 IF MOD(C7,T6)=1 THEN GOSUB 7700
8029 REM "If version<>1.00 then adjust L0 here, L0 set at 150 to 50
8030 IF LEN(RS1$)<L0 THEN I9$=RS1$; DIM RS1$(L0); RS1$(1)=I9$,REASON$="Record is short"; GOSUB BAD_RECORD; GOTO 8010; REM "Short record, don't process
8035 IF D$(1,10)<>RS1$(7,10) THEN DIM D$(599),D[15]; READ (Z[4],KEY=RS1$(7,10),DOM=8036)IOL=0340; GOTO 8040 ELSE GOTO 8040
8036 REASON$="Invalid customer code"; GOSUB BAD_RECORD; GOTO 8010; REM "Got the DOM, no such customer in AR1, do not process
8040 DIM C$(448),C[31]; READ (Z[3],KEY=RS1$(7,10)+RS1$(21,10),DOM=8041)IOL=0330; GOTO 8045
8041 REASON$="Item code is not valid"; GOSUB BAD_RECORD; GOTO 8010
8045 IF C$(108,1)<>"Y" THEN REASON$="Not a Forms Management Item"; GOSUB BAD_RECORD; GOTO 8010
8050 IF POS(RS1$(7,10)=S9$)<>2 THEN DIM S9$(300); READ (Z[9],KEY="D"+RS1$(7,10))S9$(1)
8055 DIM S8$(522); FIND (Z[11],KEY="C"+RS1$(7,10)+RS1$(17,4),DOM=8056)S8$; GOTO 8060
8056 REASON$="No FM0 record found"; GOSUB BAD_RECORD; GOTO 8010
8060 C0$="9001"; IF S8$(284,4)<>S$(1,4) THEN C0$=S8$(284,4) ELSE IF S9$(238,4)<>S$(1,4) THEN C0$=S9$(238,4)
8070 DIM E$(215),E[15]; READ (Z[5],KEY=RS1$(7,10)+RS1$(21,10)+RS1$(17,4),DOM=8071)IOL=0350; GOTO 8075
8071 REASON$="No FM4 record found"; GOSUB BAD_RECORD; GOTO 8010
8075 IF E$(28,4)<>S$(1,4) THEN C0$=E$(28,4)
8080 IF POS(E$(27,1)="RF")=0 THEN REASON$="Restocking report status on FM4 record is blank"; GOSUB BAD_RECORD; GOTO 8010
8085 IF E$(27,1)="F" THEN GOSUB 8450
8090 IF E[10]<>0 THEN E[0]=E[10]
8095 IF E[0]<0 THEN E[0]=0
8100 REM "Q0 IS QTY AT LOCATION (RAW), Q1=USAGE SINCE LAST COUNT/SHIP BASED ON AVG
8105 IF STP(RS1$(41,5),3," ")="" THEN RS1$(41,5)=STR(C[4]:"00000",ERR=8106); GOTO 8110
8106 REASON$="Invalid quantity per sell unit of measure on FM1 record"; GOSUB BAD_RECORD; GOTO 8010
8110 DIM UM$(21),UM[2]; FIND (Z[13],KEY="U/M"+RS1$(37,4),DOM=8111)IOL=0380; GOTO 8115
8111 REASON$="Invalid unit of measure"; GOSUB BAD_RECORD; GOTO 8010
8115 COUNT_IN_UNITS=NUM(RS1$(46,5),ERR=8116); GOTO 8120
8116 REASON$="Invalid count amount"; GOSUB BAD_RECORD; GOTO 8010
8120 Q1=0,Q2=0,Q3=0
8125 IF COUNT_IN_UNITS=99 OR COUNT_IN_UNITS=999 OR COUNT_IN_UNITS=9999 OR COUNT_IN_UNITS=99999 THEN Q0=COUNT_IN_UNITS,NOT_COUNTED$="Y"; GOTO 8300; REM "This means not counted
8130 IF UM$(20,1)="Y" THEN IF UM[0]<>0 THEN QTY_PER_UM=UM[0]; GOTO 8135 ELSE QTY_PER_UM=UM[1]; GOTO 8135 END_IF ELSE QTY_PER_UM=NUM(RS1$(41,5),ERR=8131); GOTO 8135
8131 REASON$="Invalid quantity per unit of measure"; GOSUB BAD_RECORD; GOTO 8010
8135 IF UM$(20,1)<>"Y" THEN Q0=COUNT_IN_UNITS*QTY_PER_UM ELSE IF UM[1]<>0 THEN Q0=COUNT_IN_UNITS*UM[1] ELSE Q0=COUNT_IN_UNITS
8137 GOTO 8141; REM "For this report we will use the count only
8138 IF V$(73,1)<>"Y" THEN GOTO 8141; REM "Estimate usage since last count
8139 Q$=X3$(21,6); CALL "YDYSBT",X3$,E$(75,6),Q$,Q; IF Q<0 THEN Q=0
8140 Q1=E[0]*Q/30; IF POS("F"=F9$(18,8))=0 THEN Q1=INT(Q1)
8141 REM "Calculate days supply on hand
8142 DIM Q[20]; Q4=0,Q$="C"+E$(21,4); CALL "FM2UZR",X3$,E$(1,20),Q$,0,0,0,0,Q4,0,Q{ALL},A$(2,10) ! SSP175399, pass in customer code to make sure if orders are found they are for this customer
8145 IF E[0]<>0 THEN Q2=30*(Q0-Q1+Q4)/E[0]
8150 REM "REASON FOR REPLENISHMENT Q3 (0=NONE, 1=DATE, 2=QTY, 3=DAYS SUPPLY)
8152 IF E$(27,1)="F" THEN IF R9$>"" THEN Q3=4; GOTO 8200 ELSE GOTO 8200
8155 Q3=0; IF E$(32,6)<>S$(1,6) THEN IF E$(32,6)<X3$(21,6) THEN Q3=1; GOTO 8200
8160 IF E[2]<>0 THEN IF E[2]>=Q0-Q1+Q4 THEN Q3=2; GOTO 8200
8165 IF E[1]<>0 THEN IF E[1]>=Q2 THEN Q3=3; GOTO 8200
8200 REM "
8210 REM "IF V$(72,1)<>"Y" THEN IF Q3=0 THEN GOTO 08050,We want all records to write out, this report will be the only record of the count
8220 REM 
8230 GOSUB 8500
8300 REM "WRITE RSL RECORD
8310 DIM A$(60),A[20]
8315 A$(1,1)="R"; IF C$(105,1)="Y" THEN A$(1,1)="S"
8320 A$(2,10)=E$(1,10),A$(12,4)=E$(21,4),A$(16,10)=E$(11,10)
8325 A$(26,1)=STR(Q3:"0"),A$(32,6)=E$(32,6),A$(38,1)=E$(26,1),A$(39,6)=RS1$(31,6),A$(45,4)=C0$; IF POS(X3$(9,3)="101",3)>0 THEN IF C1$>"" THEN IF V$(74,1)<>"1" THEN A$(45,4)=C1$(1,4)
8330 A[0]=Q0,A[1]=Q1,A[2]=Q4,A[3]=Q2
8335 A[4]=E[1],A[5]=E[2],A[6]=E[0]; IF A[6]=0 THEN A[6]=E[10]
8338 IF NOT_COUNTED$="Y" THEN A[7]=0; GOTO 8350
8340 Q5=0; IF Q3=2 THEN Q5=A[5] ELSE IF Q3=3 THEN Q5=INT(A[4]*A[6]/30)
8342 GOSUB 8400
8345 IF E$(27,1)="F" THEN A[7]=Q5-A[2] ELSE A[7]=Q5-(A[0]-A[1]+A[2])
8346 IF E$(27,1)="F" THEN A[7]=Q5 ELSE A[7]=Q5-(A[0]-A[1])
8350 A[8]=Q7
8380 WRITE (Z[1],KEY=A$(1,25))IOL=0310
8385 GOTO 8010
8395 C7=T5; GOSUB 7700
8397 RETURN 
8400 REM "Get qty required based on Maximums
8405 Q5=0,Q=E[1]; Z0=Q; IF E[12]<>0 THEN Z0=E[12]
8410 Z1=E[2]; IF E[13]>0 THEN Z1=E[13]
8415 IF Z0>0 THEN Z0=INT(Z0*E[0])/30
8420 Q5=Z1; IF Q5<Z0 THEN Q5=Z0
8425 A[11]=E[12],A[12]=E[13]
8445 RETURN 
8450 REM "Fixed Interval Release
8452 R9$="",R9=-1
8455 IF E$(95,6)>=X3$(21,6) THEN GOTO 8490 ELSE IF E$(95,6)=S$(1,6) THEN R9$=X3$(21,6),R9=E[13]; GOTO 8490
8460 X$="",Q=E[15]; CALL "ZZDATE",X3$,"",E$(95,6),X$,Q,0,0,0,0,0,0,"","",""
8465 IF X$<=X3$(21,6) THEN R9$=X$; GOTO 8490
8495 RETURN 
8500 REM "GET ON HAND IN WAREHOUSE = Q7
8505 Q7=0,C1$="",Q$="0"; IF S9$(134,1)<>"1" THEN Q$="9"
8507 IF STP(C$(185,10),3," ")="" OR C$(185,10)=E$(1,10) THEN IC1_ITEM$=E$(1,20) ELSE IC1_ITEM$=C$(185,10)+E$(11,10)
8510 READ (Z[10],KEY=IC1_ITEM$+Q$,DOM=8511)
8515 REM READ (Z(10),KEY=E$(1,20)+C0$,DOM=08545) IOL=00400; LET Q7=J(3)+J(4)-J(5)+J(6)-J(7); GOTO 08545
8520 READ (Z[10],END=8545)IOL=0400; IF J$(1,20)<>IC1_ITEM$ THEN GOTO 8545
8525 READ (Z[11],KEY="D"+S$(1,10)+J$(21,4))IOL=0410; IF K$(234,1)="Y" THEN GOTO 8520
8529 REM "IF SELECTION SCREEN OPTION FOR ONLY SUPPLY LOCATION O/H
8530 IF V$(74,1)="Y" THEN IF J$(22,3)<>C0$(2,3) THEN GOTO 8520
8535 Q7=Q7+J[3]+J[4]-J[5]+J[6]-J[7],C1$=C1$+J$(21,4)
8540 GOTO 8520
8545 RETURN 
8550 REM "End of RS1 files
8555 END_MESSAGE$=FN%CDS$+", "+STR(COUNT:"0000")+" records processed"
8560 SYS_CALL$="echo "+QUO+END_MESSAGE$+QUO+" >> "+HWD+DLM+"GRS_LOG"
8565 INVOKE SYS_CALL$
8570 IF BAD_REC_COUNT<>0 THEN END_MESSAGE$=STR(BAD_REC_COUNT:"0000")+" records were not processed"; SYS_CALL$="echo "+QUO+END_MESSAGE$+QUO+" >> "+HWD+DLM+"GRS_LOG"; INVOKE SYS_CALL$
8575 PRINT @(0,15),'CE',
8580 GOTO 0866; REM "All done creating RSL records, ready for report
8600 REM "Put a line into a requisition, if the req header does not exist, call 8800 to create it.
8603 DIM G$(114),G[1]
8604 IF A$(2,14)<>MID(F$,1,14) THEN GOSUB 8800
8605 IF HAVE_HEADER$="Y" THEN READ (Z[7],KEY=F$(1,24)+$FF$,DOM=8606) ELSE GOTO 8608
8606 KEY$=KEP(Z[7],END=8607); G0=NUM(KEY$(25,3),ERR=8607)+1; GOTO 8609
8608 G0=G0+1
8609 IF G0>999 THEN ESCAPE 
8610 G$(1,24)=F$(1,24),G$(25,3)=STR(G0:"000")
8612 IF STP(C$(185,10),3," ")="" OR C$(185,10)=A$(2,10) THEN FROM_CUST$=A$(2,10) ELSE FROM_CUST$=C$(185,10),FROM$="Y"
8615 IF A$(1,1)="R" THEN G$(28,11)="C"+FROM_CUST$ ELSE G$(28,11)="I"
8620 G$(39,10)=A$(16,10),G$(49,9)=K$(236,9)
8622 G$(58,9)=C$(341,9),G$(67,40)=C$(42,40)
8624 G$(107,4)=C0$
8626 G[1]=C0
8628 DIM M$(20); FIND (Z[13],KEY="U/M"+C0$,DOM=8629)M$
8629 IF M$(20,1)<>"Y" THEN G[0]=Q0 ELSE G[0]=A[7]
8632 G$(111,4)=A$(45,4) ! SSP211307, default warehouse
8633 IF (V$(87,1)="C" AND POS(" "<>G$(29,10))>0) OR V$(87,1)="Y" THEN WHSE$=""; CALL "FM2OLW",X3$,X4$,G$(29,20),WHSE$; G$(111,4)=WHSE$
8635 WRITE (Z[7],KEY=G$(1,27))IOL=0370
8645 RETURN 
8700 REM "Open temporary CS0 and CS2 files to use in add reqs
8705 F0$="[192]{0}Restocking Req. Workfile"
8710 CALL "ZZ2SRT",X3$,X4$,Z[13],-10,24,F0$,F1,"NN"
8715 IF F1=2 THEN GOTO 9900
8716 IF LEN(F0$)<8 THEN F0$=F0$+S$(1,8-LEN(F0$))
8718 Y$=Y$+"06O "+F0$+" "
8720 F1$="[128]{1}Restocking Req. Lines Workfile"
8725 CALL "ZZ2SRT",X3$,X4$,Z[13],-100,27,F1$,F1,"NN"
8730 IF F1=2 THEN GOTO 9900
8735 IF LEN(F1$)<8 THEN F1$=F1$+S$(1,8-LEN(F0$))
8740 Y$=Y$+"07O "+F1$+" "
8745 RETURN 
8800 REM "Create a requisition header and set F3$ to "Y" to indicate that it needs to be written out.
8802 HAVE_HEADER$=""; READ (Z[6],KEY=A$(2,14),DOM=8803)
8803 READ (Z[6],END=8804)IOL=0360; IF F$(1,14)=A$(2,14) THEN HAVE_HEADER$="Y"; GOTO 8845
8804 F0=F0+1,G0=0
8805 DIM F$(137),F[1]
8806 REM "Create req number from current date and time and F0
8807 F3$=DAY,F3$=F3$(7,2)+F3$(1,2)+F3$(4,2)+STR(F0:"0000")
8808 IF POS(" "<>V$(77,10))>0 THEN F3$=V$(77,10); REM "Use customer P/O if one
8810 F$(1,14)=A$(2,14)
8812 F$(15,10)=F3$,F$(25,3)="NNN"
8814 F$(33,6)=X3$(21,6),F$(39,30)=K$(160,20)
8816 F$(69,15)=K$(306,15),F$(84,6)=X3$(21,6)
8818 F$(98,3)=X3$(40,3),F$(101,13)=DAY+STR(TIM:"00.00")
8820 F$(122,16)=F$(98,16)
8825 IF POS(" "<>V$(88,6))>0 THEN F$(33,6)=V$(88,6); REM "Order date,WO85281
8835 WRITE (Z[6],KEY=F$(1,24))IOL=0360
8845 RETURN 
8850 REM "Write out an existing requisition,if one is waiting (F3$="Y") and clear F3$
8852 IF F3$<>"Y" THEN GOTO 8895
8855 PRINT "Writing out header for req ",F$(15,10),; INPUT *
8890 F3$="",G0=0
8895 RETURN 
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNB$(Z9$)=X3$(214-6*NUM(Z9$),1)
8940 DEF FNS$(Z$)=Z$(1,POS("        "=Z$+"        ")-1)
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 1000
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 IF Y5=68 THEN RETRY ELSE ON C9 GOTO 1140,2040
9900 REM "End program
9905 IF POS("V"=W8$)>0 THEN GOSUB 6000
9910 CALL "ZZERPT",X3$,X4$,X0$,Y3$,Y4$,W9,W2,W5,W,W0,W8,T3,V3$
9915 IF V$(76,1)="Y" AND F0>0 THEN GOTO 5300
9920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 IF Y4$<>"" THEN RUN Y4$,ERR=9931
9940 RUN "ZMENU"
9999 END 
56000 REM "211307-Inventory item not pulling thru the Restocking Gateway (GRS
56002 REM "307392-DBD-247;DBSPT-134643;GRS;Ignore FM1 First Alternate U/M     
