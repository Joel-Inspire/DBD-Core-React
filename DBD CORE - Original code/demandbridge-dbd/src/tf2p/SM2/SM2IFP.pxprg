0010 REM "<SM2IFP> CIG PO Based Freight
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 06/16/17 - 22.230277 - crg - SSP# 291110
0037 REM "291110-Modify SM files three character BOX_NUMBER to sequence using
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0120 DIM Z0$(80,"-"),S0$(40),SM4[12]
0130 K0=20,K1=1
0245 ! IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15] ! WO244750, expand SM0
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9]
0370 IOLIST SM4$,SM4[0],SM4[1],SM4[2],SM4[3],SM4[4],SM4[5],SM4[6],SM4[7],SM4[8],SM4[9],SM4[10],SM4[11],SM4[12],SM4[13],SM4[14],SM4[15] ! WO244750, expand SM4
0390 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21]
0399 ! 
0500 INIT:
0505 X0$="SM2IFP",X1$="CIG Inbound Freight Processing",X0=-1
0510 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0512 DIM ZC[NUM(X3$(60,3))]
0515 ZC$="01O SMI... 02O FS1... 03O SMI... 04O SM3... 05O FS3... 06O FS2... 07O SM4... 08O SM5... 09O SM6... 13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,ZC$,ZC{ALL},Z0,Z1; IF Z0>0 THEN GOSUB WRAPUP; GOTO *RETURN
0540 DIM A$(700),A[15]
0546 DIM C[9]
0547 DIM SH_PARM$(250); FIND (ZC[13],KEY=X3$(9,3)+"S/H",DOM=*NEXT)SH_PARM$(1) ! WO252271
0550 RETURN 
0599 ! 
0900 WRAPUP:
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0920 SET_PARAM 'KR'=_SV_KR
0930 CMD_STR$="E"
0950 RETURN 
0999 ! 
2099 ! 
2100 SMI_REMOVE:
2105 ! Routine called from SM2RAA - CIG Journal to remove SMI records that are associated with invalid order number or type "B" order
2110 ENTER REMOVE$,DREMOVE$ ! WO 259463
2115 IF REMOVE$="" AND DREMOVE$="" THEN EXIT ! WO 259463 
2120 GOSUB INIT
2130 PRINT @(0,18),'CE',@(25,18),"Removing Invalid Freight Records",
2135 T1=0; GOSUB 8100; GOSUB 8150
2140 IF REMOVE$="" THEN GOTO REMOVE_DUPS
2145 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
2150 READ (ZC[1],KEY=REMOVE$(1,8),KNO=0,DOM=*NEXT)
2155 KEY_1$=KEY(ZC[1],END=2165); READ (ZC[1],KEY=KEY_1$)IOL=0310
2158 IF KEY_1$(1,8)<>REMOVE$(1,8) THEN GOTO 2165
2160 IKY$=KEY_1$; GOSUB UPDATE_SM4
2165 IF LEN(REMOVE$)>8 THEN REMOVE$=REMOVE$(9) ELSE REMOVE$=""
2170 GOTO 2140
2190 REMOVE_DUPS:
2200 IF DREMOVE$="" THEN GOTO SMI_REMOVE_EXIT
2205 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
2220 KD$=MID(DREMOVE$,1,16)
2225 FIND (ZC[1],KEY=KD$,DOM=2240)IOL=0310
2230 IKY$=KD$; GOSUB UPDATE_SM4
2240 IF LEN(DREMOVE$)>16 THEN DREMOVE$=DREMOVE$(17) ELSE DREMOVE$=""
2260 GOTO REMOVE_DUPS
2275 SMI_REMOVE_EXIT:
2280 C=T; GOSUB 8150
2290 GOSUB WRAPUP
2295 EXIT 
2299 ! 
2300 VENDOR_MAP:
2305 ! This routine will try to map the INBOUND SHIPPER ID to a valid DB VENDOR
2310 ENTER IM_CHL,SHIP_ID$,IM_VENDOR$
2315 SHIP_ID$=PAD(SHIP_ID$,30),IM_VENDOR$=DIM(10)
2320 DIM ISHA$(191); FIND (IM_CHL,KEY=SHIP_ID$,DOM=2390)ISHA$
2330 IF MID(ISHA$,31,1)<>"V" THEN GOTO 2390
2340 IM_VENDOR$=ISHA$(32,10) ! Return DB Vendor number
2395 EXIT 
2399 ! 
2500 UPD_NOTEPAD:
2505 ! Called from SM2UCA to update a note pad entry for B type orderS
2510 ENTER ORDNUMS$
2512 M$="##,###.00-"
2515 DIM A$(700),A[15]
2518 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
2519 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
2520 IF LEN(ORDNUMS$)<8 THEN GOTO NOTEPAD_END ELSE NNR=LEN(ORDNUMS$)/8
2530 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
2550 NCHL=UNT; OPEN (NCHL,ERR=NOTEPAD_END)"FMN"+%C$
2560 NSCHL=UNT; OPEN (NSCHL,ERR=NOTEPAD_END)"SMI"+%C$
2600 FOR NN=1 TO NNR
2610 BORD$=ORDNUMS$((NN*8)-7,8)
2620 READ (NSCHL,KEY=BORD$+"",DOM=*NEXT)
2625 ORD_FRT=0,FIRST_LN=0
2630 NEXT_NSMI:
2640 KN$=KEY(NSCHL,END=NOTEPAD_WRITE); READ (NSCHL,KEY=KN$)IOL=0310
2650 IF KN$(1,8)<>BORD$ THEN GOTO NOTEPAD_WRITE
2655 ! F X3$(69,1)<>"Y" THEN Y5$(13)=FND$(B$(20,6)) ELSE CALL "ZZDISP","DX",B$(20,6),"   ",X3$,X$,"",0,0,X4$; Y5$(13)=X$
2660 IF FIRST_LN=0 THEN FIRST_LN=1; SHIP_DT$=FND$(A$(15,6)),SHIP_TIME$=FNT$(A$(21,4)),TRACK_NUM$=A$(383,60) ! SSP 257952
2670 IF A[3]<>0 THEN ORD_FRT+=A[3]
2680 GOTO NEXT_NSMI
2690 NOTEPAD_WRITE:
2695 IF ORD_FRT=0 THEN GOTO NP_LOOP
2700 DIM NFMN$(508); FIND (NCHL,KEY=BORD$,DOM=*NEXT)NFMN$; GOTO FMN_LINE
2710 NFMN$(1,8)=BORD$
2720 FMN_LINE:
2725 NPSTR$="Frt: "+SHIP_DT$+" - "+STP(STR(ORD_FRT:M$),3)+" - "+TRACK_NUM$
2726 ! PSTR$="Inbound Freight: "+SHIP_DT$+" - "+STR(ORD_FRT:M$)+" - "+TRACK_NUM$
2730 FOR X=9 TO 459 STEP 50; IF NFMN$(X,50)=DIM(50) THEN NFMN$(X,50)=NPSTR$; BREAK ELSE NEXT X
2740 WRITE (NCHL,KEY=BORD$)NFMN$
2800 NP_LOOP:
2810 NEXT NN
2900 NOTEPAD_END:
2910 CLOSE (NCHL,ERR=*NEXT)
2920 CLOSE (NSCHL,ERR=*NEXT)
2990 EXIT 
2999 ! 
3000 UPDATE_FREIGHT:! REM "Update Order Header with Freight Amount
3010 DIM B[13],B$(350)
3020 EXTRACT (ZC[2],KEY=A$(1,8),DOM=3950)IOL=0320
3030 IF POS(B$(54,1)="BS")>0 THEN GOTO 3950
3050 B[8]=B[8]+A[3]
3060 ARB_FRT=ARB_FRT+A[3]
3070 WRITE (ZC[2],KEY=A$(1,8))IOL=0320
3100 A$(100,1)="Y",A$(101,8)=INV_NUM$; REM "Invoiced? and Invoice number
3110 ! SM4$=A$,SM4$(328,10)=DIM(10) ! SSP#221059
3115 UPDATE_SM4:
3120 SM4$=A$; DIM SM4[15]; FOR III=0 TO 15; SM4[III]=A[III]; NEXT III ! WO244750, expand SM4
3130 ! F SM4$(10,1)="D" THEN GOTO 7865
3140 CALL "SM2SM4",ERR=*NEXT,X3$,X4$,SM4$,SM4{ALL}
3160 WRITE (ZC[7],KEY=SM4$(1,13)+SM4$(124,3),DOM=3170)IOL=0370; GOTO 3180
3170 SM4$(124,3)=FN%INCR$(SM4$(124,3)); GOTO 3160 ! 291110
3180 REMOVE (ZC[3],KEY=IKY$,ERR=*NEXT); GOTO 3950
3950 RETURN 
3999 ! 
5000 PROCESS_SMI:
5005 ! This routine is called from AR2EAD/ARGEAD. It will check for valid order number, vendor code per invoice line. If found, freight will be accumulated to be updated to FS1 and SMI will be moved to SM4.
5010 ENTER INV_NUM$,ORDER_NUM$,ARB_FRT,FS1_FRT$
5015 GOSUB INIT
5020 ST_KEY$=INV_NUM$+ORDER_NUM$
5030 ARB_FRT=0,FS1_FRT$=""
5110 READ (ZC[5],KEY=ST_KEY$,DOM=5120)
5120 K$=KEY(ZC[5],END=5300); READ (ZC[5])IOL=0330
5130 IF K$(1,LEN(ST_KEY$))<>ST_KEY$ THEN GOTO 5300
5140 DIM FS2$(204),FS2[21]; FIND (ZC[6],KEY=K$(9,11),DOM=5120)IOL=0390
5170 IF FS2$(18,1)="Y" AND K$(20,1)=" " AND C[3]=0 THEN GOTO 5120
5180 ! IF FS2$(9,1)=" " THEN GOTO 5120 ! SSP 246651
5190 VEND_CODE$=FS2$(94,10)
5200 LINE_FRT=0
5220 READ (ZC[1],KEY=ORDER_NUM$+"",DOM=*NEXT)
5230 NEXT_SMI:
5240 IKY$=KEY(ZC[1],END=5120); READ (ZC[1],KEY=IKY$)IOL=0310
5250 IF IKY$(1,8)<>ORDER_NUM$ THEN GOTO 5120
5252 IF MID(A$,443,1)="Y" THEN GOTO NEXT_SMI ! WO 259463 Ignore if a  duplicate SMI record
5255 IF MID(A$,382,1)="Y" THEN GOTO UPDATE_FRT ELSE IF FS2$(9,1)=" " THEN GOTO 5120 ! SSP 246651
5257 IF SH_PARM$(228,1)="Y" THEN GOTO UPDATE_FRT ! WO252271, Bypass vendor matching when invoicing PO lines
5260 IF MID(A$,342,10)<>VEND_CODE$ AND STP(MID(A$,342,10),2)<>"" THEN GOTO NEXT_SMI
5270 UPDATE_FRT:
5280 IF A[3]<>0 THEN GOSUB UPDATE_FREIGHT
5290 GOTO NEXT_SMI
5300 IF ARB_FRT=0 THEN GOTO 5590
5350 FS1_FRT$=""; FIND (ZC[2],KEY=ORDER_NUM$,DOM=*NEXT)IOL=0320; FS1_FRT$=STR(B[8]+B[10])
5590 GOSUB WRAPUP
5595 EXIT 
5599 ! 
8100 REM "Initialize for Bargraph
8120 T=INT(LEN(REMOVE$)/8); REM "Numberof records
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8199 ! 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10099 ! *****************************************************
56000 ! Program changes starting 01/26/06
56010 REM "189841-Add CIG Plus parm to never create AR invoice
56015 REM "192582-Working on 189102 (Solion/Printegra XML) and found problem
56016 REM "220920-Freight Tracking is posting UPS detail to releases,         
56018 REM "244750-Inbound Freight processing in the Customer Invoicing Gateway
56019 REM "246651-Additional to WO244750 - CIG Inbound Freight Processing     
56020 REM "252271-Inbound Freight; Bypass vendor match when invoicing PO lines
56021 REM "257952-Need larger tracking number field to replace 20 character   
56022 REM "259463-Inbound Freight; Add logic to first check for dup tracking  
56023 REM "291110-Modify SM files three character BOX_NUMBER to sequence using
