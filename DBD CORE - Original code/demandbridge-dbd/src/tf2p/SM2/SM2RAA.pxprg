0010 REM "<SM2RAA> Customer Invoicing Gateway Journal"
0035 REM "5.7 - 03/21/15 - 20.601111 - jvv - SSP# 276062
0037 REM "276062-CIG Journal; parameter to output MULTIPLE WAREHOUSES message
0040 REM "Copyright 2015 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "If V0$(80,1)='Y', the report is printed in order by INDing thru the file:wq
0090 CLEAR ; SETERR 9000
0095 PRECISION 14; T2=TIM; PRECISION 2
0105 SETERR 9000; SETESC 9300
0110 X0$="SM2RAA",X1$="Customer Invoicing Gateway Journal"
0120 DIM A$(700),A[15],B$(40),C$(54),C[3],D$(37),D[2],S0$(20),M$(20),M[1],LAST_ORDER_NUM$(8),AS5_LAST_ORDER_NUM$(8),L5_LAST_ORDER_NUM$(8) ! WP244750, WO257561, WO259427
0140 Z0$="#,###.00-",Z1$="#,###,##0-",Z2$="##,###,##0.00-"
0150 DEF FNQ$(Z8,Z9$)=STR(Z8:Z9$(1,POS(".00"=STR(Z8:Z9$)+".00")-1))
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
0175 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0210 T=1,T0=1,T1=1
0220 W3=130
0225 W=999
0230 DIM T1$(W3,"-"),T2$(W3,"="),T3$(W3,"*"),Y5$(W3),Y6$(W3)
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,"",-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "I/O lists
0305 REM "IOLIST FOR AR1 - Customer Masterfile
0310 IOLIST A$(1),A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15] ! WO244750, expand SM0
0320 FS1_IOLIST:IOLIST FS1$
0330 AR1_IOLIST:IOLIST AR1$
0340 FS2_IOLIST:IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24]
0350 PO3_IOLIST:IOLIST PO3$,PO3[0],PO3[1],PO3[2]
0360 IOLIST CHECK_FS2$,CHECK_FS2[0],CHECK_FS2[1],CHECK_FS2[2],CHECK_FS2[3],CHECK_FS2[4],CHECK_FS2[5],CHECK_FS2[6],CHECK_FS2[7],CHECK_FS2[8],CHECK_FS2[9],CHECK_FS2[10],CHECK_FS2[11],CHECK_FS2[12],CHECK_FS2[13],CHECK_FS2[14],CHECK_FS2[15],CHECK_FS2[16],CHECK_FS2[17],CHECK_FS2[18],CHECK_FS2[19],CHECK_FS2[20],CHECK_FS2[21],CHECK_FS2[22],CHECK_FS2[23],CHECK_FS2[24],CHECK_FS2[25],CHECK_FS2[26],CHECK_FS2[27],CHECK_FS2[28],CHECK_FS2[29] ! WO259427
0420 IOLIST X3$,X4$,V1$,V3$,V2$,V0$
0500 REM "Files
0505 DIM Z[NUM(X3$(60,3))]; GOSUB 7400
0510 Y$="01O SM0... 02O FS1... 03O AR1... 04O FS2... 05O PO3... 06O SM4... 07O FMN...  08O AS5...  13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
0525 DIM SH_PARM$(300); READ (Z[13],KEY=X3$(9,3)+"S/H",DOM=*NEXT)SH_PARM$ ! SSP206259
0540 IFP$=""; IF MID(SH_PARM$,227,1)="Y" THEN IFP$="Y" ! WO 224750
0550 GP_LOWER_THAN=NUM(V0$(105,6),ERR=*NEXT) ! WO259427
0555 GP_HIGHER_THAN=NUM(V0$(111,6),ERR=*NEXT) ! WO259427
0600 REM "Initialize REMOVE$
0610 REMOVE$=""
0700 REM "Open Printer
0720 CALL "ZZPRIN",X0$,X3$,Y0$,V3$,Z{ALL},W0$,W1$,W0,W9,W2,W3,W4; ON W4 GOTO 0721,9920
0723 IF %HAS_IMAGE_LIB THEN {! [SSP-200047]-if Image Library is installed.
0725 HLD_X3$=X3$(178,6) ! [SSP-200047]-backup the audit control number
0727 X3$(178,6)=PAD(%X3$(174,4),6) ! [SSP-200047]-copy the batch number to audit control number
0730 CALL "ILGAUD",ERR=*NEXT,X3$,X4$,"RF" ! [SSP-200047]-open the pdf file
0735 X3$(178,6)=HLD_X3$ ! [SSP-200047]-restore the audit control number
0737  }
0750 REM "Build 856 file using SMO file
0800 REM "Alternate Sort Info & total dim"
0805 DIM U0$(4)
0810 ON V0 GOTO 0820,0820,0830,0840
0820 DIM U[4]; V1=9,V2=3,V3=1,V4=1,T0=4,T1=4,U=14,U0=4,U[0]=0,U[1]=9,U[2]=3,U[3]=1,U[4]=1,U0$="     ",T5$="                "; GOTO 0850
0850 DIM T[T0,T1]
0860 V5=V1+1,V6=V5+V2,V7=V6+V3
0895 ! CALL "ZZPRIN",X0$,X3$,Y0$,V3$,Z{ALL},W8$,W9$,W0,W9,W2,W3,W4; ON W4 GOTO 0896,9920!SSP#224962 - Also calls ZZPRIN on line 720
0900 REM " Position read"
0905 REM "set key file to read from"
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"00O "+V1$+"  ",Z{ALL},Z0,0; IF Z0>0 THEN GOTO 9900 ELSE U1=Z[0]
0930 IF LEN(V2$)>=U*2 THEN GOTO 0965
0934 REM "create default 'all' range key
0935 DIM V2$(U*2),V4$(U,"~"); U3=1
0940 FOR U9=1 TO U0; U3=U3+U[U9-1]+U[U9-1]
0950 V2$(U3+U[U9],U[U9])=V4$(1,U[U9])
0955 NEXT U9
0964 REM "Get starting key from range key
0965 DIM V4$(U); U3=1,U4=1
0970 FOR U9=1 TO U0; U3=U3+U[U9-1]+U[U9-1],U4=U4+U[U9-1]
0975 V4$(U4,U[U9])=V2$(U3,U[U9])
0980 NEXT U9
0985 V4$(U,1)=CHR(ASC(V4$(U,1))-1)
0990 IF V0$(80,1)="Y" THEN READ_KNO=2; READ (U1,KEY="",KNO=READ_KNO,DOM=*NEXT) ELSE READ_KNO=0; READ (U1,KEY=V4$,KNO=READ_KNO,DOM=*NEXT,ERR=*NEXT)
1000 REM "Read next record
1005 U$=KEY(U1,KNO=READ_KNO,END=5000)
1006 IF V0$(80,1)="Y" THEN U$=MID(U$,5) ! If in order printed, strip off record number
1008 REM "check key against range info"
1009 U3=1,U2=1
1010 FOR U9=1 TO U0; U2=U2+U[U9-1],U3=U3+U[U9-1]+U[U9-1]
1020 IF U$(U2,U[U9])>=V2$(U3,U[U9]) THEN GOTO 1030 ELSE EXTRACT (U1,KEY=U$(1,U2-1)+V2$(U3,U[U9]),DOM=1021)
1025 EXITTO 1000
1030 IF U$(U2,U[U9])<=V2$(U3+U[U9],U[U9]) THEN GOTO 1040 ELSE READ (U1,KEY=U$(1,U2-1)+$FF$,DOM=1032)
1035 EXITTO 1000
1040 NEXT U9
1100 REM "Get record"
1110 U9$=U$
1120 ON V0 GOTO 1150,1150,1130,1140
1130 READ (Z[1],KEY=U$(5,10),DOM=1000)IOL=0310
1135 READ (U1)
1140 GOTO 1160
1150 READ (Z[1],KEY=U$,KNO=0,DOM=1000)IOL=0310 ! U$ is set to main key by now, so always use kno 0
1300 REM "Read other data
1400 REM "Subtotals"
1415 GOSUB 3100
1490 T=0
1500 REM "Print Data
1502 FIND (Z[2],KEY=A$(1,8),DOM=1503); GOTO 1505
1503 A$(100,1)="O"; REMOVE$=REMOVE$+A$(1,8); REM "If order not here then show as invoiced anyway
1505 IF A$(100,1)<>"Y" AND STP(A$(101,8),3," ")="" THEN GOTO 1506 ELSE REMOVE$=REMOVE$+A$(1,8); REM "If the order has been invoiced, then add it to the list to be removed
1506 IF MID(SH_PARM$,224,1)="Y" AND A$(99,1)="Y" THEN REMOVE$=REMOVE$+A$(1,8) ! SSP206259, if parameter set to not create invoice if all lines have PO code, and SM0 set to not bill (99,1=Y) then add this order to list to remove SM0 during clear process SSP 219220 added mid
1510 IF W+3>W0 THEN GOSUB 6000
1520 CALL "ZZDISP","AX",A$(1,9),"P/O",X3$,X$,"",0,0,X4$; Y5$(1)=X$
1525 Y5$(14)=A$(10,3); REM "P/O line number
1530 Y5$(20)=A$(13,1); REM "Ship to code
1535 REM LET Y5$(23)=A$(14,1); REM "Sequence code
1540 Y5$(25)=STR(A[0]:Z1$); REM "Quantity
1545 Y5$(36)=STR(A[1]:Z0$); REM "Actual Weight
1547 Y5$(46)=STR(A[2]:Z0$); REM "Shipping Weight
1550 Y5$(56)=STR(A[3]:Z0$); REM "Cost
1555 IF A$(97,1)="Y" THEN Y5$(66)="Y" ELSE Y5$(66)="N"; REM "Order updated?
1560 IF A$(98,1)="Y" THEN Y5$(71)="Y" ELSE Y5$(71)="N"; REM "P/O Received?
1563 IF A$(99,1)="Y" THEN Y5$(76)="Y" ELSE Y5$(76)="N"; REM "Don't Bill
1565 Y5$(80)=FND$(A$(15,6)); REM "Shipped on Date
1567 Y5$(91)=A$(31,6); REM "Carrier Id
1571 Y5$(125)=A$(85,8); REM "5 digit zip
1595 GOSUB 7300
1600 REM "line 2
1610 Y5$(1)="Tracking #: "+STP(MID(A$,383,60),2); REM "Tracking number SSP257952
1660 Y5$(80)=FNT$(A$(21,4)); REM "Shipped on, time
1662 Y5$(91)=A$(37,12); REM "Carrier name
1664 Y5$(104)=A$(69,16); REM "Pickup number
1666 Y5$(125)=A$(94,3); REM "zone
1695 GOSUB 7300
1700 REM "Line 3
1703 IF LEN(A$)<111 THEN A$=A$+S0$
1704 GOSUB GET_SHIP_VIA_CODE; IF SVC$<>DIM(1) THEN Y5$(50)="Ship Via: "+SVC$ ! WO259427, print ship via code from general shipping record
1705 Y5$(65)="Invoiced:"; REM "invoiced heading
1710 IF A$(100,1)="Y" THEN Y5$(76)="Y" ELSE IF A$(100,1)="O" THEN Y5$(76)="O" ELSE Y5$(76)="N"; REM "Invoiced?
1715 CALL "ZZDISP","AX",A$(101,8),"AR6",X3$,X$,"",0,0,X4$; Y5$(80)=X$; REM "Invoice number invoiced on
1720 IF POS(" "<>A$(109,3))<>0 THEN Y5$(91)="Packer: "+A$(109,3)
1730 IF STP(A$(266,10),1)<>"" THEN Y5$(104)="Vendor Invoice: "+A$(266,10)
1745 GOSUB 7300
1746 REM "IF THERE IS A COMMENT, PRINT IT ON LINE FOUR
1747 IF A$(194,40)=DIM(40) THEN GOTO 1750 ! WO259427, was goto 1800, changed to 1750
1748 Y5$(80)=A$(194,40); GOSUB 7300
1750 ! WO259427, possible line 5 if rpt parms set
1752 IF GP_LOWER_THAN<=0 AND GP_HIGHER_THAN<=0 AND V0$(117,1)<>"Y" AND V0$(119,1)<>"Y" THEN GOTO 1760 ! WO259427, if nothing set of these new ones then go on WO 276062
1753 IF A$(1,8)=L5_LAST_ORDER_NUM$ THEN GOTO 1760 ELSE L5_LAST_ORDER_NUM$=A$(1,8) ! Only output for first instance of order number
1754 IF V0$(117,1)="Y" THEN GOSUB GET_WHSE_CODES ! WO259427
1755 IF GP_LOWER_THAN>0 OR GP_HIGHER_THAN>0 THEN GOSUB CHECK_GP_WARN ! WO259427
1756 IF V0$(119,1)="Y" THEN PRT_MSG=1; GOSUB GET_WHSE_CODES; PRT_MSG=0 ! WO276062
1758 GOSUB 7300 ! Print line 5
1760 ! 
1800 REM "Print order notepad if report parm set
1810 IF MID(V0$,97,1)<>"Y" THEN GOTO 1850
1812 IF A$(1,8)=LAST_ORDER_NUM$ THEN GOTO 1850 ELSE LAST_ORDER_NUM$=A$(1,8)
1815 DIM FMN$(509); FIND (Z[7],KEY=A$(1,8),DOM=1850)FMN$
1820 IF W+10>W0 THEN GOSUB 6000
1823 FIRST_FMN$="Y"
1825 FOR X=9 TO 459 STEP 50
1830 IF FMN$(X,50)=DIM(50) THEN GOTO 1840
1833 IF FIRST_FMN$="Y" THEN Y5$(5)="Order notepad:",FIRST_FMN$="N"
1835 Y5$(20)=FMN$(X,50); GOSUB 7300
1840 NEXT X
1850 ! Print Customer Invoice Entry Message - WO257561
1852 IF MID(V0$,104,1)<>"Y" THEN GOTO 1875
1854 IF A$(1,8)=AS5_LAST_ORDER_NUM$ THEN GOTO 1875 ELSE AS5_LAST_ORDER_NUM$=A$(1,8)
1856 DIM AS5_FS1$(100); FIND (Z[2],KEY=A$(1,8),DOM=1875)AS5_FS1$(1); DIM AS5$(1000); FIND (Z[8],KEY=AS5_FS1$(6,10),DOM=1875)AS5$(1) ! Get customer code from order header, if found then read AS5 for this customer
1858 IF AS5$(11,180)=DIM(180) THEN GOTO 1875 ! this cust doesn't have invoice entry message
1860 IF W+3>W0 THEN GOSUB 6000
1862 FIRST_AS5$="Y"
1864 FOR X=11 TO 131 STEP 60
1866 IF AS5$(X,60)=DIM(60) THEN GOTO 1872
1868 IF FIRST_AS5$="Y" THEN Y5$(5)="Inv Ent Msg:",FIRST_AS5$="N"
1870 Y5$(18)=AS5$(X,60); GOSUB 7300
1872 NEXT X
1875 ! 
1900 REM "Accumulate Totals"
1990 T[T0,0]=T[T0,0]+1,T[T0,1]=T[T0,1]+A[0],T[T0,2]=T[T0,2]+A[1]
1991 T[T0,3]=T[T0,3]+A[2],T[T0,4]=T[T0,4]+A[3]
1995 GOTO 1000
3000 REM "Subtotaling Routines"
3050 REM "Add to T$ for total title, T & T5 should be set
3055 T7$=T5$(T*4-3,4)
3060 IF T7$(1,1)=" " THEN RETURN 
3070 IF T7$(1,1)<>"S" THEN CALL "ZZDISP",T7$(1,1)+"X",T6$,T7$(2,3),X3$,T6$,"",0,0,X4$
3080 IF T$="" THEN T$=T6$ ELSE T$=T$+" "+T6$
3090 RETURN 
3100 REM "High order break
3110 IF V1=0 THEN RETURN ELSE IF U1$=U9$(1,V1) THEN GOSUB 3200; RETURN 
3120 GOSUB 3220
3130 IF U1$="" THEN GOTO 3160
3150 T=1,T$=U5$,T6$=U1$; GOSUB 3050; GOSUB 7000
3155 IF V0$(79,1)="Y" THEN GOSUB PRINT_ORDER_SUMMARY
3160 U1$=U9$(1,V1)
3185 IF U0$(1,1)="Y" THEN GOSUB 6000
3190 RETURN 
3200 REM "Second highest order break"
3210 IF V2=0 THEN RETURN ELSE IF U2$=U9$(V5,V2) THEN GOSUB 3300; RETURN 
3220 GOSUB 3320
3230 IF U2$="" THEN GOTO 3260
3250 T=2,T$=U6$,T6$=U2$; GOSUB 3050; GOSUB 7000
3260 U2$=U9$(V5,V2)
3285 IF U0$(2,1)="Y" THEN GOSUB 6000
3290 RETURN 
3310 IF V3=0 THEN RETURN ELSE IF U3$=U9$(V6,V3) THEN GOSUB 3400; RETURN 
3320 GOSUB 3420
3330 IF U3$="" THEN GOTO 3360
3350 T=3,T$=U7$,T6$=U3$; GOSUB 3050; GOSUB 7000
3360 U3$=U9$(V6,V3)
3380 RETURN 
3385 IF U0$(3,1)="Y" THEN GOSUB 6000
3390 RETURN 
3410 IF V4=0 THEN RETURN ELSE IF U4$=U9$(V7,V4) THEN RETURN 
3430 IF U4$="" THEN GOTO 3460
3450 T=4,T$=U8$,T6$=U3$; GOSUB 3050; GOSUB 7000
3460 U4$=U9$(V7,V4)
3480 RETURN 
3485 IF U0$(4,1)="Y" THEN GOSUB 6000
3490 RETURN 
4000 PRINT_ORDER_SUMMARY:REM "Print summary of sales order if applicable
4005 IF U1$(9,1)<>" " THEN GOTO 4095; REM "if P/O THEN SKIP IT
4010 DIM FS1$(85); FIND (Z[2],KEY=U1$(1,8),DOM=4095)IOL=FS1_IOLIST
4015 DIM AR1$(297); FIND (Z[3],KEY=FS1$(6,10),DOM=4016)IOL=AR1_IOLIST
4020 Y5$(3)="Order Summary:"; GOSUB 7300
4025 CALL "ZZDISP","AX",U1$(1,9),"P/O",X3$,X$,"",0,0,X4$; Y5$(3)=X$
4027 Y5$(15)=FND$(FS1$(16,6))
4028 CALL "ZZDISP","AX",FS1$(6,10),"A/R",X3$,X$,"",0,0,X4$; Y5$(27)=X$+" "+AR1$(11,35); IF FS1$(28,15)<>DIM(15) THEN Y5$(63+LEN(X$))="CUST PO: "+FS1$(28,15); REM "202080
4030 GOSUB 7300
4050 GOSUB PRINT_LINE_SUMMARY
4095 PRINT_ORDER_SUMMARY_END:RETURN 
4100 PRINT_LINE_SUMMARY:REM "Print line detail
4105 DIM FS2$(228),FS2[24]; READ (Z[4],KEY=U1$(1,8),DOM=4106)
4110 READ (Z[4],END=4180)IOL=FS2_IOLIST; IF FS2$(147,8)<>U1$(1,8) THEN GOTO 4180
4115 Y5$(6)=FS2$(6,3); IF FS2$(155,1)="M" THEN Y5$(25)=FS2$(50,40); GOSUB 7300; GOTO 4175
4120 IF FS2$(155,1)=" " THEN Y5$(11)=FS2$(19,10) ELSE IF POS(FS2$(155,1)="IC")<>0 THEN CALL "ZZDISP","AX",FS2$(19,10),"ICE",X3$,X$,"",0,0,X4$; Y5$(11)=FS2$(155,1)+"-"+X$ ELSE Y5$(11)=FS2$(155,1)+"-"+FS2$(19,10)
4125 Y5$(25)=FS2$(50,40)
4145 GOSUB 7300
4150 GOSUB PRINT_SHIP_TO
4170 GOSUB 7300
4175 GOTO 4110
4195 PRINT_LINE_SUMMARY_END:RETURN 
4200 PRINT_SHIP_TO:REM "Print shipping info, starting on current line
4204 DIM PO3$(260),PO3[2]
4205 IF FS2$(18,1)<>"Y" THEN GOTO 4265; REM "Goto general shipto. SSP260698/WO259427, was IF FS2$(18,1)="N", changed to <>"Y", can never count on Y/N type being "N", can sometimes be blank
4210 READ (Z[5],KEY=FS2$(147,8)+" "+FS2$(6,3)+" ",DOM=4211)
4215 DIM PO3$(300),PO3[2]; READ (Z[5],END=4260)IOL=PO3_IOLIST; IF PO3$(166,9)+PO3$(7,3)<>FS2$(147,8)+" "+FS2$(6,3) THEN GOTO 4260
4240 GOSUB PRINT_PO3
4255 GOTO 4215
4260 GOTO 4295
4265 REM "Print non-special ships
4270 READ (Z[5],KEY=FS2$(147,8)+DIM(5),DOM=4290)IOL=PO3_IOLIST
4275 GOSUB PRINT_PO3
4295 PRINT_SHIP_TO_END:RETURN 
4300 PRINT_PO3:REM " PRint a po3 record
4305 TO$=""; IF STP(PO3$(12,4),3," ")="" THEN TO$=STP(PO3$(46,30),1) ELSE TO$=STP(PO3$(225,35),1) END_IF ; IF STP(PO3$(106,16),3," ")="" THEN GOTO 4306 ELSE IF LEN(T0$)>0 THEN TO$=TO$+"-" END_IF ; TO$=TO$+STP(PO3$(106,16),1)+","+PO3$(122,2)
4310 Y5$(11)="TO: "+TO$
4315 IF FS2$(124,4)<>M$(4,4) THEN DIM M$(20),M[1]; READ (Z[13],KEY="U/M"+FS2$(124,4),DOM=4316)M$,M[0],M[1]
4320 IF M$(20,1)<>"Y" THEN J=FS2[5],J0=FS2[5] ELSE J=M[1]; IF M[0]<>0 THEN J0=M[0] ELSE J0=M[1]
4335 IF J=0 THEN AMT=0 ELSE IF STP(PO3$(7,3),3," ")="" THEN AMT=FS2[0]/J ELSE AMT=(PO3[0]-PO3[2])/J
4340 Y5$(65)=FNQ$(AMT,Z2$)+" "+STP(FS2$(124,4),1)+"/"+STP(STR(J0:"###,###"),0)
4390 GOSUB 7300
4395 PRINT_PO3_END:RETURN 
4399 ! 
4400 GET_SHIP_VIA_CODE:! WO259427
4405 SVC$=DIM(1)
4410 DIM GEN_SHIP$(430)
4415 FIND (Z[5],KEY=A$(1,8)+DIM(5),DOM=*RETURN)GEN_SHIP$(1)
4420 SVC$=GEN_SHIP$(150,1)
4445 RETURN 
4449 ! 
4500 GET_WHSE_CODES:! WO259427, create list of up to 5 whse codes for this order, WHSE_CODES$ will be 4 char whse code plus space plus whse code etc.
4505 WHSE_CODES$=""; DIM CHECK_FS2$(356),CHECK_FS2[29]
4510 READ (Z[4],KEY=A$(1,8),DOM=*NEXT)
4515 NEXT_FS21: CHECK_FS2_KEY$=KEY(Z[4],END=FS2_DONE1); IF CHECK_FS2_KEY$(1,8)<>A$(1,8) THEN GOTO FS2_DONE1
4520 READ (Z[4],KEY=CHECK_FS2_KEY$)IOL=0360
4525 IF (NOT(PRT_MSG) AND CHECK_FS2[7]<=0) THEN GOTO NEXT_FS21 ELSE IF POS(CHECK_FS2$(155,1)="IC")=0 THEN GOTO NEXT_FS21 ! If no unbilled shipments or if not an I or C type go get the next one SSP 276062
4530 IF CHECK_FS2$(10,4)="DS  " OR CHECK_FS2$(10,4)=DIM(4) THEN GOTO NEXT_FS21
4535 IF POS(CHECK_FS2$(10,4)+DIM(1)=WHSE_CODES$,5)>0 THEN GOTO NEXT_FS21 ELSE WHSE_CODES$+=CHECK_FS2$(10,4)+DIM(1)
4540 IF LEN(WHSE_CODES$)=25 THEN GOTO FS2_DONE1 ! Only supports up to 5 whse codes
4560 GOTO NEXT_FS21
4580 FS2_DONE1:
4582 IF PRT_MSG THEN IF LEN(WHSE_CODES$)>5 THEN Y5$(102)="***MULTIPLE WAREHOUSE***"; END_IF ; RETURN ! WO 276062"
4585 IF WHSE_CODES$>"" THEN Y5$(5)="Whse Codes: "+WHSE_CODES$
4595 RETURN 
4599 ! 
4600 CHECK_GP_WARN:! WO259427, read order lines and if any have GP% lower or higher then parm(s) says then set GP_WARN_MSG$
4605 GP_WARN_MSG$=""; DIM CHECK_FS2$(356),CHECK_FS2[29]
4610 READ (Z[4],KEY=A$(1,8),DOM=*NEXT)
4615 NEXT_FS22: CHECK_FS2_KEY$=KEY(Z[4],END=FS2_DONE2); IF CHECK_FS2_KEY$(1,8)<>A$(1,8) THEN GOTO FS2_DONE2
4620 READ (Z[4],KEY=CHECK_FS2_KEY$)IOL=0360
4625 IF POS(CHECK_FS2$(155,1)="IC")=0 THEN GOTO NEXT_FS22 ELSE IF CHECK_FS2$(10,1)="9" THEN GOTO NEXT_FS22 ! Only check order lines that are I or C types, if warehouse starts with 9 then don't look at these either.
4630 EXT_SELL=CHECK_FS2[6],EXT_COST=CHECK_FS2[3],GP=EXT_SELL-EXT_COST
4635 IF EXT_SELL=0 THEN GP_PERCENT=0 ELSE GP_PERCENT=GP*100/EXT_SELL
4640 IF (GP_LOWER_THAN<>0 AND GP_PERCENT<GP_LOWER_THAN) OR (GP_HIGHER_THAN<>0 AND GP_PERCENT>GP_HIGHER_THAN) THEN GP_WARN_MSG$="WARNING! CHECK GP% FOR THIS ORDER!"; GOTO FS2_DONE2
4660 GOTO NEXT_FS22
4680 FS2_DONE2:
4685 IF GP_WARN_MSG$>"" THEN Y5$(45)=GP_WARN_MSG$
4695 RETURN 
4699 ! 
5000 REM "End of Print
5020 IF W8=0 THEN GOTO 5290
5030 T0$="END"
5040 IF V1>0 THEN GOSUB 3120
5045 GOSUB 7300
5050 T=0,T$="Report"; GOSUB 7000
5200 REM "
5290 GOTO 9900
6000 REM "Page header
6035 IF T0$="END" THEN W0$=""
6040 CALL "ZZHEAD",X0$,X1$,X2$,X3$,W0$,W1$,W2$,W9$,W3,W,W9,W8,W0,W5,W2,W8$,W5$; IF T0$="END" THEN GOTO 6060 ELSE ON W5 GOTO 6041,9910
6045 ON W5 GOTO 6046,9900
6060 GOSUB 6100
6090 RETURN 
6100 REM "
6105 Y5$(1)="---- Order -----"
6110 Y5$(19)="Shipto"
6115 Y5$(56)="- Updated -"
6120 Y5$(36)="----- Weight ------"
6125 Y5$(64)="Ord"
6126 Y5$(69)="P/O"
6127 Y5$(74)="Dont"
6128 Y5$(80)="Shipped on"
6130 Y5$(91)="Carrier"
6134 Y5$(122)="Zip code/"
6145 GOSUB 7300
6150 Y5$(1)="Number",Y5$(13)="Line",Y5$(19)=" Code"
6155 Y5$(26)="Quantity"
6157 Y5$(38)="Actual"
6158 Y5$(47)="Shipped"
6160 Y5$(59)="Cost"
6165 Y5$(64)="Updt"
6166 Y5$(69)="Recd"
6167 Y5$(74)="Bill"
6168 Y5$(80)="Date/time"
6170 Y5$(91)="Id/Name"
6172 Y5$(104)="Pickup number"
6174 Y5$(125)="Zone"
6190 GOSUB 7300; GOSUB 7300
6195 RETURN 
6199 RETURN 
7000 REM "Totals logic
7001 IF T>0 THEN GOTO 7100
7002 IF W+3>W0 THEN GOSUB 6000
7005 Y5$(36)=T1$(1,LEN(Z0$)),Y5$(46)=T1$(1,LEN(Z0$)),Y5$(56)=T1$(1,LEN(Z0$))
7009 GOSUB 7300
7010 Y5$(1)=T3$(1,T0+1-T)+" "
7015 IF T$<>"" THEN Y5$(T0+2-T)=T$+" Total ("+STR(T[T,0]:"0")+"):"
7040 Y5$(36)=STR(T[T,2]:Z0$),Y5$(46)=STR(T[T,3]:Z0$),Y5$(56)=STR(T[T,4]:Z0$)
7050 GOSUB 7300
7090 IF T0$="END" THEN IF T=0 THEN GOSUB 7200; GOTO 7190
7095 GOSUB 7300
7100 REM "Accumulate sub totals
7110 IF T=0 THEN GOTO 7190
7120 FOR X=0 TO T1
7130 T[T-1,X]=T[T-1,X]+T[T,X],T[T,X]=0
7140 NEXT X
7190 RETURN 
7200 REM "Elapsed time routine"
7205 GOSUB 7300; Y5$(1)="Number of items printed: "+STR(T[0,0]); GOSUB 7300
7210 PRECISION 14; T2=TIM-T2
7220 IF INT(T2)>0 THEN T4$=STR(INT(T2))+" Hours " ELSE T4$=""
7230 T3=INT(FPT(T2)*3600)
7240 T3=T3/60
7250 T4$=T4$+STR(T3:"##.##")+" Minutes"
7260 Y5$(1)="Elapsed time: "+T4$; GOSUB 7300
7280 PRECISION 2
7290 RETURN 
7300 REM "Output line Y5$ to output device
7310 IF POS("V"=W8$)>0 THEN CALL "ZZVIEW",X3$,0,0,W3,W9,W,W9$,Y5$; GOTO 7390
7320 W=W+1 ! [SSP-200047]
7330 IF POS(" "<>Y5$)=0 THEN {! [SSP-200047]
7332 PRINT (W9)"" ! [SSP-200047]
7334  } ELSE {! [SSP-200047]
7336 PRINT (W9)Y5$ ! [SSP-200047]
7338 IF %IL_PDF THEN PRINT (%IL_PDF,ERR=*NEXT)Y5$ ! [SSP-200047]-print the data to the pdf
7340 Y5$(1)="" ! [SSP-200047]
7342  } ! [SSP-200047]
7390 IF W>=W0 THEN GOSUB 6000
7395 RETURN 
7400 REM "Read report selection parameters"
7410 Z$="12O ZZP     "
7420 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 7421,9900
7430 Y3$=X3$(1,6),Y4$=X3$(178,7)
7450 READ (Z[12],KEY=X3$(1,8),DOM=7451)IOL=0420
7460 W0$="Operator code: "+X3$(40,3)+"    Batch number: "+V0$(81,5) ! SSP#272787
7480 X3$(178,7)=Y4$,V0=NUM(V0$(71,1)),W3$=V0$(19,POS("   "=V0$(19,40)+"  ")-1)
7485 FOR U1=1 TO LEN(V1$); IF V1$(U1,1)=" " THEN V1$(U1,1)="."; NEXT U1 ELSE NEXT U1
7490 RETURN 
7550 REM "Added stmts:
7575 REM "Deleted stmts:
7600 REM "Print final address line
7610 CALL "ZZDISP","AX",A$(134,9),"ZIP",X3$,X$,"",0,0,X4$
7615 Y5$(12)=FNS$(A$(116,16))+", "+A$(132,2)+"   "+X$
7640 RETURN 
7700 REM "PRINT SHIP-TO ADDRESS
7705 F1$="C"+A$(1,10),F2$="Y"
7710 READ (Z[6],KEY=F1$,DOM=7711)
7720 READ (Z[6],END=7790)IOL=0360
7730 IF F1$<>F$(1,11) THEN GOTO 7790
7740 A$(1)=""; A$(1,4)=F$(12,4),A$(11,35)=F$(16,35),A$(56,163)=F$(51,163)
7750 GOSUB 1500
7760 GOTO 7720
7790 F2$=""; RETURN 
7800 CLEAR_FILE:REM "Clear the SM0 file by removing invoiced records.
7801 REM "The string REMOVE$ contains 8 character order numbers. At least one record in SM0 for the indicated order number had an invoice number in the SM0 record indicating that the order had been invoiced, so all records in SM0 beginning with that record will be removed. We are foregoing an additional check whereby we could read the SM0 record and verify the Invoiced? flag was y, because all records of an order should be invoiced at once.
7802 REM "Copy records to SM4 for posterity
7804 PRINT @(0,18),'CE',@(25,18),"Removing Invoiced Records",
7805 T1=0; GOSUB 8100; GOSUB 8150
7810 IF REMOVE$="" THEN GOTO 7830
7812 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
7815 READ (Z[1],KEY=REMOVE$(1,8),KNO=0,DOM=7816)
7820 KEY_1$=KEY(Z[1],END=7825); IF KEY_1$(1,8)<>REMOVE$(1,8) THEN GOTO 7825
7822 REMOVE (Z[1],KEY=KEY_1$,DOM=7820); GOTO 7820
7825 IF LEN(REMOVE$)>8 THEN REMOVE$=REMOVE$(9) ELSE REMOVE$=""
7827 GOTO 7810
7830 C=T; GOSUB 8150 ! WO244750
7840 IF IREMOVE$="" AND DREMOVE$="" THEN GOTO *NEXT ELSE CALL "SM2IFP; SMI_REMOVE",IREMOVE$,DREMOVE$ ! WO244750 WO259463
7845 CLEAR_FILE_END:RETURN 
8100 REM "Initialize for Bargraph
8120 T=INT(LEN(REMOVE$)/8); REM "Numberof records
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 1000
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9900 REM "End program
9905 IF POS("V"=W8$)>0 THEN GOSUB 6000
9910 CALL "ZZERPT",X3$,X4$,X0$,Y3$,Y4$,W9,W2,W5,W,W0,W8,T3,V3$
9912 IF IFP$="Y" THEN IW8=0,IREMOVE$="",DREMOVE$=""; CALL "SM2RAB",IW8,IREMOVE$,DREMOVE$; IF IW8>0 THEN GOTO 9914 ! WP 244750 WO259463
9913 IF W8=0 THEN GOTO 9920
9914 IF %GUI=0 THEN CALL "ZZPROM",".Y",X3$,Z,"Clear all entries?","","",0 ELSE MSGBOX "Clear all entries",MSG("CONFIRMING"),"?,YESNO",ANS$; IF ANS$="YES" THEN Z=0 ELSE Z=1 ! SSP 198682
9915 IF Z=0 THEN IF REMOVE$<>"" OR IREMOVE$<>"" OR DREMOVE$<>"" THEN GOSUB CLEAR_FILE ! WP244750 WO259463
9920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9925 IF %GUI THEN EXIT 
9930 IF Y4$<>"" THEN RUN Y4$,ERR=9931
9940 RUN "ZMENU"
9999 END 
56000 ! "198682-Got a new release and stuck in the customer invoicing       
56001 ! "       gateway. Not getting the question to clear"
56002 REM "SSP 195127 add new field for Harvey shipping standard cost  
56005 REM "206259-CIG, print shop orders, no release lines, SMGUAA creates
56006 REM "200047-Need to add CIG journal to Image Library.                   
56007 REM "219220-Program Exception 047,SM2RAA-1506        
56008 REM "224962-Buyer ordered item, which is in stock, but received msg that
56010 REM "244750-Inbound Freight processing in the Customer Invoicing Gateway
56011 REM "257952-Need larger tracking number field to replace 20 character   
56012 REM "257561-Output Customer Invoice Entry Message on CIG and CIGP Jrnls.
56014 REM "259427-Ship Via Code, Check GP% Message, Warehouse List, output on 
56015 REM "259463-Inbound Freight; Add logic to first check for dup tracking  
56016 REM "272787-What is the batch number referencing in the Customer        
56017 REM "276062-CIG Journal; parameter to output MULTIPLE WAREHOUSES message
