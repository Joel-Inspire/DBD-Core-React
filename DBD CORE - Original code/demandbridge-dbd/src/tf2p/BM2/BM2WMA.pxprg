0010 REM "Bill of Materials Waste Posting <BM2WMA>
0020 SETESC 9300; SETERR 9000
0035 REM "4.4 - 04/06/99 - 16.63 - wmz - SSP# 106449
0040 REM "Copyright 1999 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "Q0$= U means update cost to order line
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$,TOTAL_COST,TOTAL_SP_COST
0110 X0$="BM2WMA",X1$="Bill of Materials Waste Posting",K9$="",K9=0
0120 DIM Z0$(80,"-"),S0$(40),S2$(40,".")
0130 K0=11,K1=2
0135 C9=-1,TOTAL_COST=0,TOTAL_SP_COST=0
0150 COLOR_CODE$="ABCDEFGHIJKLMNPQRSTUVWXYZ1234567890cdefhinprxyz"
0152 COLOR_NAME$="CLEAR WHITE BLACK RED   DK.BLULT.BLUNA.BLUDK.GRNLT.GRNFR.GRNGRANITIVORY YELLOWMOD.YLORANGETEAL  FROSTYMAROONGREY  BROWN GOLD  SILVERPURPLEPINK  CREAM NAT'RLMATCH ASSORTR/W/B R/W   W/BLUEMULTI W/GRN BEIGE BLUE  BLACK NEONRDDKBLUEBLGRNTGRNGNTNEONGRNEONYLNEONORFROSTYPKGRNTHOTPNKNEONPK"
0160 V8$="000207102699"
0200 REM "
0235 IF Q1$<>"" THEN X2=1
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0290 IOLIST Y[0],Y[1],Y[2],Y[3],Y[4]
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST BM1$,BM1[0],BM1[1],BM1[2]
0315 IOLIST A0$(1),A0[0],A0[1],A0[2],A0[3],A0[4],A0[5],A0[6],A0[7],A0[8],A0[9],A0[10],A0[11],A0[12],A0[13],A0[14],A0[15],A0[16],A0[17],A0[18],A0[19],A0[20],A0[21],A0[22],A0[23],A0[24],A0[25],A0[26],A0[27],A0[28],A0[29]
0325 IOLIST B0$,B0[0],B0[1],B0[2],B0[3],B0[4],B0[5],B0[6],B0[7],B0[8],B0[9],B0[10],B0[11],B0[12],B0[13]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15]
0335 IOLIST C0$,C0[0],C0[1],C0[2],C0[3],C0[4],C0[5],C0[6],C0[7],C0[8],C0[9],C0[10],C0[11],C0[12],C0[13],C0[14],C0[15]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15],D[16],D[17],D[18],D[19],D[20],D[21],D[22],D[23],D[24],D[25],D[26],D[27],D[28],D[29],D[30],D[31],D[32],D[33],D[34],D[35],D[36],D[37],D[38],D[39],D[40]
0360 IOLIST F$,F[0],F[1],F[2]
0365 IOLIST BM0$,BM0[0],BM0[1]
0370 IOLIST IC1$,IC1[0],IC1[1],IC1[2],IC1[3],IC1[4],IC1[5],IC1[6],IC1[7],IC1[8],IC1[9],IC1[10],IC1[11],IC1[12],IC1[13],IC1[14],IC1[15],IC1[16],IC1[17],IC1[18],IC1[19],IC1[20]
0380 IOLIST ICA$,ICA[0],ICA[1]
0390 IOLIST A9,ICB$,ICB[0],ICB[1],ICB[2],ICB[3],ICB[4]
0391 IOLIST A8,ICB1$,ICB1[0],ICB1[1],ICB1[2],ICB1[3],ICB1[4]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X BM1...  02X FS1...  03O AR1...  04O IC0...  05O FS2...  06O BM0...  07O IC1... 08O ICA...  09O ICB...  11O FTA... 12O FT3... 13O ZZPARM  15O FT4... "
0511 REM "Reserve Z[16] for temp file
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0530 F=Z[9]; FIND (Z[13],KEY=X3$(9,3)+"I/C")ICPARM$
0585 GB$=""; FIND (Z[13],KEY=X3$(9,3)+"G/B",DOM=0586)GB$
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
0605 IF Q1$="" THEN GOTO 0620; REM "If Q1$ provided, check if it is a BOM line, if not then exit
0610 DIM A0$(228),A0[29]; READ (Z[5],KEY=Q1$,DOM=9900)IOL=0315; IF POS(A0$(155,1)="IC")=0 THEN GOTO 9900
0612 READ (Z[6],KEY=A0$(161,10)+A0$(19,10),DOM=0613)
0614 BM0_KEY$=KEY(Z[6],END=9900); IF BM0_KEY$(1,20)<>A0$(161,10)+A0$(19,10) THEN GOTO 9900
0615 PRINT @(0,3),'CE',; REM "If here we need to clear the screen before proceeding
0625 FIND (Z[13],KEY=X3$(9,3)+"F/M")P4$
0640 L9$="001"
0660 DIM M6[1]; M6$="###,###.00-",M6[0]=621,M6[1]=2,M6=2
0680 GOSUB 6000
0800 REM 
0810 GOSUB 8950
1000 REM "
1010 Y8=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1015 DIM V7$(27); V7$(1,1)="1",V7$(2,1)="1",V7$(3,1)="1",V7$(8,1)="1",V7$(9,1)="1",V7$(27,1)="1"
1030 DIM B$(359),B[7],C$(400),C[15],D$(128),D[40],E$(224),F$(128),F[2],C0$(400),C0[15],B0$(200),B0[13],I$(259),I[3],K[6],G[20],H$(61),H[3],H8$(20),IC1$(58),IC1[20],Y[4]
1032 F3$="",D9=1,HIGHLIGHT=0,ONE_LINE$=""
1033 DIM A0$(228),A0[29]
1035 DIM A$(144),A[13]
1039 REM "This sets lot flag on line until lots set by item; see line 8325 also
1045 A$(1,LEN(A1$))=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1250,1300,1500
1200 REM "Requisition number
1204 IF Q1$>"" THEN A$(1,11)=Q1$,A1$=Q1$; GOSUB 6460
1205 IF LEN(A1$)>0 THEN A$(1,8)=A1$(1,8); GOTO 1220
1210 CALL "ZZENTR","AXUX",A{ALL},A$,X4$,X3$,12,3,1,8,C0,"O/P","{1"+X$,"","BM2WMA00","FS1","FS2DAA",""; IF C0>4 THEN GOSUB 6400; C0=1; ON C0 GOTO 1210,1211
1212 IF INT(ABS(C0))=3 THEN C0=-ABS(C0); READ (Z[1],KEY=A$(1,8),DOM=1213)
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9700,6970
1220 IF V9<>-2 THEN READ (Z[2],KEY=A$(1,8),DOM=1221)IOL=0325; FS1_FILE=Z[2],FS2_FILE=Z[5],BM1_FILE=Z[1]; GOTO 1225
1221 READ (Z[12],KEY=A$(1,8),DOM=1222)IOL=0325; FS1_FILE=Z[12],FS2_FILE=Z[15],BM1_FILE=Z[11]; GOTO 1225
1223 DIM B0$(400),B0[13]; B0$(118,8)=A$(1,8),FS1_FILE=0,FS2_FILE=0,BM1_FILE=0; CALL "ZZPROM","Y",X3$,Z,"This order is not on file, post waste anyway?","","",X0; ON Z GOTO 1224,1210
1225 K9$=A$(1,8)
1230 GOSUB 7500; GOSUB 7550
1240 GOTO 1120
1250 REM "Line number
1253 IF LEN(Q1$)>=11 THEN A$(9,3)=Q1$(9,3); GOTO 1270
1254 IF ONE_LINE$<>"" THEN A$(9,3)=ONE_LINE$; PRINT @(12,4),A$(9,3); GOTO 1270
1255 A$(9,3)=L9$
1257 Q$=A$(1,8),X$="Use LOOKUP to display lines"
1260 CALL "ZZENTR","ZUX",A{ALL},A$,X4$,X3$,12,4,9,3,C0,"","{2"+X$,Q$,"BM2WMA02",STR(FIRST_LINE:"00")+"FS2A","",""; IF C0=6 THEN GOSUB 6400; C0=1
1261 IF ABS(C0)=2 THEN GOTO 1290; REM IF ABS(C0)=2 AND LEN(A1$)>0 THEN LET A1$=A1$(1,0)
1265 IF INT(ABS(C0))=3 THEN GOTO 6800 ELSE IF ABS(C0)=4 THEN GOTO 9600
1269 REM "Due to FS6 seq counter"
1270 IF A$(9,3)<"001" OR A$(9,3)>"206" THEN GOTO 1260
1275 IF FS2_FILE=0 THEN DIM A0$(228),A0[29]; A0$(6,3)=ONE_LINE$,A0$(124,4)="EACH",A0$(155,1)="I"; A0[5]=1 ELSE FIND (FS2_FILE,KEY=A$(1,11),DOM=1260)IOL=0315; IF POS(A0$(155,1)="IC")=0 THEN GOTO 1260
1276 GOSUB 7800; D9$=F$; GOSUB 8700
1278 IF FS2_FILE=0 THEN GOTO 1283
1279 REM "Make sure it is a BOM line
1280 READ (Z[6],KEY=A0$(161,10)+A0$(19,10),DOM=1281)
1281 BM0_KEY$=KEY(Z[6],END=1282); IF BM0_KEY$(1,20)=A0$(161,10)+A0$(19,10) THEN GOTO 1283
1282 CALL "ZZPROM",".4",X3$,Z,"This line does not have a bill of materials item on it.","","V",X0; GOTO 1260
1289 L9$=STR(NUM(A$(9,3))+1:"000")
1290 GOTO 1120
1300 REM "Item code if not on file order
1305 IF FS1_FILE<>0 THEN GOTO 1120
1307 J$=A0$(161,10); REM "If customer specific needed, add entry of 161,10 at normal order customer display position
1310 CALL "ZZENTR","AUX",A0{ALL},A0$,X4$,X3$,12,5,19,10,C0,"ICE","{2"+X$,J$,"BM2WMA03","IC0","",""; IF C0=6 THEN GOSUB 6400; C0=1
1311 IF ABS(C0)=2 THEN GOTO 1340 ELSE IF INT(ABS(C0))=3 THEN GOTO 6800 ELSE IF ABS(C0)=4 THEN GOTO 9900
1320 FIND (Z[4],KEY=A0$(161,10)+A0$(19,10),DOM=1310)IOL=0340; A0$(50,40)=D$(21,40),A0$(124,4)=D$(120,4),A0[5]=D[14]; REM "Load description, U/M etc
1325 GOSUB 7800; D9$=F$; GOSUB 8700
1329 REM "Make sure it is a BOM line
1330 READ (Z[6],KEY=A0$(161,10)+A0$(19,10),DOM=1331)
1331 BM0_KEY$=KEY(Z[6],END=1332); IF BM0_KEY$(1,20)=A0$(161,10)+A0$(19,10) THEN GOTO 1333
1332 CALL "ZZPROM",".4",X3$,Z,"This line does not have a bill of materials item on it.","","V",X0; GOTO 1310
1333 Z$="16C TMP"+FID(0)+" "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
1334 ERASE "TMP"+FID(0),ERR=1335
1335 KTMP$="[64]Temporary Bill of Materials"
1336 CALL "ZZ2SRT",X3$,X4$,Z[13],-99,14,KTMP$,0,"NN"
1337 IF LEN(KTMP$)<8 THEN KTMP$=KTMP$+" "; GOTO 1337
1338 Z$="16O "+KTMP$; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; BM1_FILE=Z[16]
1340 GOTO 1120
1500 REM "
1505 Z9=-1,C9=0,A2$="",A3$="",A4$="",A5$=""
1510 A1$=A$(1,11)
1511 PRINT @(0,9),'CE',@(20,15),"Loading bill of materials:  ",
1515 REM "Check BM1, if no lines, then default from BM0 record
1520 READ (BM1_FILE,KEY=A1$,DOM=1521)
1521 BM1_KEY$=KEY(BM1_FILE,END=1522); IF BM1_KEY$(1,11)=A1$ THEN GOTO 1530
1522 REM "No records, so create BM1 records from BM0 records
1523 DIM BM1$(34),BM1[2]; BM1$(1,11)=A1$(1,11)
1524 READ (Z[6],KEY=A0$(161,10)+A0$(19,10),DOM=1525)
1525 DIM BM0$(44),BM0[1]; READ (Z[6],END=1530)IOL=0365; IF BM0$(1,20)<>A0$(161,10)+A0$(19,10) THEN GOTO 1530
1527 BM1$(12,3)=STR(NUM(BM1$(12,3))+1:"000"),BM1$(15,20)=BM0$(24,20),BM1[0]=BM0[0]*A0[0]
1528 WRITE (BM1_FILE,KEY=BM1$(1,14))IOL=0310
1529 GOTO 1525
1530 REM "By here, we have BM1$ records, so setup & load arrays to use
1535 INDEX=0,TOTAL_RECORDS=0; GOSUB 4100; DIM BM1$(44),BM1[2]
1539 READ (BM1_FILE,KEY=A1$,DOM=1540)
1540 READ (BM1_FILE,END=1550)IOL=0310; IF BM1$(1,11)<>A1$ THEN GOTO 1550
1543 PRINT @(47,15),NUM(BM1$(12,3),ERR=1544):"##0",
1545 ITEM_KEY$=BM1$(15,20),INDEX=INDEX+1,ITEM_INDEX=INDEX; GOSUB 4150; REM "Don't set RM_QTY to B[1],so all quantities are 0
1549 GOTO 1540
1550 TOTAL_RECORDS=INDEX
1555 START_INDEX=1; GOSUB 8800
1590 GOTO 3000
2000 REM "Enter data for assortments
2010 C0=0,X0=-1,X1=1
2020 SETERR 9000; X$="",Q$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF INT(C0)=3 THEN C0=1; GOTO 2025 ELSE IF C0>3 OR X0<0 THEN GOTO 2050
2040 ON X0 GOTO 2100,2150,2050
2050 REM "display adjustments, & remaining, setup for next entry
2055 GOSUB 4200
2080 IF ABS(C0)<4 THEN X0=0; GOTO 2040
2090 IF REMAINING<>0 THEN CALL "ZZPROM",".4",X3$,Z,"The total of the assortments do not add up to the quantity for this item","","",0; X0=0; GOTO 2040
2091 GOSUB 4400
2095 RETURN 
2100 REM "New Color
2105 COLOR_POS=15,COLOR_LINE=18,COLOR_ITEM$=ITEM$[HIGHLIGHT]
2106 PRINT @(COLOR_POS,COLOR_LINE),DIM(10),
2110 GOSUB 4300
2111 IF ABS(C0)=4 THEN GOTO 2050
2115 PRINT @(COLOR_POS,COLOR_LINE),PAD(NEW_CODE$+"-"+NEW_NAME$,10),
2120 P=POS(NEW_CODE$=ASSORT$); IF P=0 THEN ASSORT$=ASSORT$+NEW_CODE$,ASSORT_INDEX=LEN(ASSORT$),ASSORT_QTY[ASSORT_INDEX]=0 ELSE ASSORT_INDEX=P
2140 GOTO 2020
2150 REM "Quantity
2155 QTY_POS=30,QTY_LINE=18,QUANTITY=ASSORT_QTY[ASSORT_INDEX]
2157 PRINT @(QTY_POS,QTY_LINE),QUANTITY:QTY_MASK$,
2160 GOSUB 4350
2165 ASSORT_QTY[ASSORT_INDEX]=QUANTITY
2190 GOTO 2020
3000 REM "Highlight lines and work on them
3010 HIGHLIGHT=P_START; GOSUB 8600
3015 TINDEX=1; AUTO_MODE=1
3020 GOSUB 3450
3025 IF ABS(C0)=4 THEN GOTO 3045 ELSE IF ABS(C0)<=1 OR ABS(C0)=3.1 THEN GOSUB 3350; TINDEX=TINDEX+1; GOTO 3040 ELSE IF ABS(C0)=2 OR ABS(C0)=3.2 THEN GOSUB 3400; TINDEX=TINDEX-1; GOTO 3040
3040 IF TINDEX<1 OR TINDEX>TOTAL_RECORDS THEN GOTO 3045 ELSE GOTO 3020
3045 AUTO_MODE=0
3050 CALL "ZZPROM","6 BM2ENT",X3$,Z,"","","V",X0
3055 ON Z+1 GOTO 3100,3150,3200,3250,3300,3350,3400,3450,3500,3550
3100 REM "line selected is in X0
3110 GOSUB 8630
3112 IF X0<=0 THEN HIGHLIGHT=1 ELSE IF X0>TOTAL_RECORDS THEN HIGHLIGHT=TOTAL_RECORDS ELSE HIGHLIGHT=X0
3113 IF HIGHLIGHT<P_START THEN IF HIGHLIGHT-(LAST_LINE-FIRST_LINE)>1 THEN START_INDEX=HIGHLIGHT-(LAST_LINE-FIRST_LINE) ELSE START_INDEX=1 END_IF ; GOSUB 8800 ELSE IF HIGHLIGHT>P_END THEN IF HIGHLIGHT+(LAST_LINE-FIRST_LINE)<=TOTAL_RECORDS THEN START_INDEX=HIGHLIGHT ELSE START_INDEX=TOTAL_RECORDS-(LAST_LINE-FIRST_LINE) END_IF ; GOSUB 8800 ELSE GOSUB 8600; REM " If on same page,just highlight new line
3145 GOTO 3050
3150 REM "Color change
3155 COLOR_LINE=HIGHLIGHT-P_START+FIRST_LINE,COLOR_POS=15,COLOR_ITEM$=ITEM$[HIGHLIGHT]
3160 GOSUB 4300
3168 READ (Z[4],KEY=COLOR_ITEM$,DOM=3169)IOL=0340; ITEM_INDEX=HIGHLIGHT,ITEM_KEY$=COLOR_ITEM$,RM_QTY=QTY[HIGHLIGHT]; GOSUB 4150; GOTO 3170
3190 GOSUB 8600
3195 GOTO 3050
3200 REM "Exit
3205 CALL "ZZPROM",".Y",X3$,Z,"Update this waste posting?","","",0; ON Z GOTO 3206,3245
3220 GOSUB 8000
3245 GOSUB 4100; PRINT @(0,FIRST_LINE),'CE',; IF Q1$<>"" THEN GOTO 9900 ELSE A1$=""; GOTO 1000
3250 REM "Assortment
3251 REM "Get all lines that have the base_item$ from the lines, default assort arrays, enter qtys then reconstruct the items array if needed.
3255 PRINT @(0,16),'CE',@(0,16),Z0$,@(35,16),"Assortment",; P_LINE=17,P_INDEX=HIGHLIGHT,P_HIGH=1; GOSUB 8850
3260 MAX_ASSORT=50,ASSORT_INDEX=0,ASSORT$="",TOTAL_ASSORTMENT_QTY=0; DIM ASSORT_QTY[MAX_ASSORT]
3261 REM "Use highlighted ITEM$ to set BASE_ITEM$ and default 1st color
3262 IN_ITEM$=ITEM$[HIGHLIGHT]; GOSUB 4450; BASE_ITEM$=IT_ITEM$
3265 FOR IV=1 TO TOTAL_RECORDS
3266 IN_ITEM$=ITEM$[IV]; GOSUB 4450; REM "Get IT_ITEM$ and IT_COLOR$
3267 IF IT_ITEM$=BASE_ITEM$ THEN TOTAL_ASSORTMENT_QTY=TOTAL_ASSORTMENT_QTY+QTY[IV],P=POS(IT_COLOR$=ASSORT$); IF P<>0 THEN ASSORT_QTY[P]=ASSORT_QTY[P]+QTY[IV] ELSE ASSORT$=ASSORT$+IT_COLOR$,ASSORT_INDEX=LEN(ASSORT$),ASSORT_QTY[ASSORT_INDEX]=QTY[IV]
3270 NEXT IV
3271 ASSORT_INDEX=LEN(ASSORT$)
3275 GOSUB 4200
3280 GOSUB 2000
3295 GOTO 3050
3300 REM "Item Change
3305 DIM Q$(10)
3306 C9=1,TMP$=ITEM$[HIGHLIGHT],TMP_LINE=HIGHLIGHT-P_START+FIRST_LINE
3310 CALL "ZZENTR","AXUF",A{ALL},TMP$,X4$,X3$,4,TMP_LINE,1,10,C0,"ICE","{3"+X$,Q$,"BM2WMA05",STR(FIRST_LINE:"00")+"IC0","IC2MAB",""; IF C0=6 THEN GOSUB 8800; C0=1
3311 IF ABS(C0)>1 THEN GOTO 3340
3312 READ (Z[4],KEY=Q$+TMP$,DOM=3310)IOL=0340; ITEM_INDEX=HIGHLIGHT; ITEM_KEY$=Q$+TMP$,RM_QTY=QTY[HIGHLIGHT]; GOSUB 4150
3340 GOSUB 8600
3345 GOTO 3050
3350 REM "Down Arrow
3355 IF HIGHLIGHT<P_END THEN GOSUB 8630; HIGHLIGHT=HIGHLIGHT+1; GOSUB 8600 ELSE IF HIGHLIGHT<TOTAL_RECORDS THEN HIGHLIGHT=HIGHLIGHT+1; IF HIGHLIGHT+(LAST_LINE-FIRST_LINE)<=TOTAL_RECORDS THEN START_INDEX=HIGHLIGHT ELSE START_INDEX=TOTAL_RECORDS-(LAST_LINE-FIRST_LINE) END_IF ; GOSUB 8800
3395 IF AUTO_MODE THEN RETURN ELSE GOTO 3050
3400 REM "up Arrow
3410 IF HIGHLIGHT>P_START THEN GOSUB 8630; HIGHLIGHT=HIGHLIGHT-1; GOSUB 8600 ELSE IF HIGHLIGHT>1 THEN HIGHLIGHT=HIGHLIGHT-1; IF HIGHLIGHT-(LAST_LINE-FIRST_LINE)>1 THEN START_INDEX=HIGHLIGHT-(LAST_LINE-FIRST_LINE) ELSE START_INDEX=1 END_IF ; GOSUB 8800
3445 IF AUTO_MODE THEN RETURN ELSE GOTO 3050
3450 REM "Quantity change
3455 QTY_POS=67,QTY_LINE=HIGHLIGHT-P_START+FIRST_LINE,QUANTITY=QTY[HIGHLIGHT]
3460 GOSUB 4350
3465 QTY[HIGHLIGHT]=QUANTITY
3485 GOSUB 8600
3490 IF AUTO_MODE THEN RETURN ELSE GOTO 3050
3500 REM "Delete selected line
3504 REM "If deleting last record, then this special logic will do
3505 IF HIGHLIGHT=TOTAL_RECORDS THEN CLEAR_INDEX=HIGHLIGHT; GOSUB 4000; TOTAL_RECORDS=TOTAL_RECORDS-1; IF HIGHLIGHT>1 THEN HIGHLIGHT=HIGHLIGHT-1 END_IF ; START_INDEX=P_START; GOSUB 8800; GOTO 3545
3510 FOR II=HIGHLIGHT TO TOTAL_RECORDS
3512 TARGET_INDEX=II,SOURCE_INDEX=II+1; GOSUB 4050
3514 NEXT II
3515 CLEAR_INDEX=TOTAL_RECORDS; GOSUB 4000; TOTAL_RECORDS=TOTAL_RECORDS-1
3520 GOSUB 8800
3545 GOTO 3050
3550 REM "Insert line below current line
3555 NEW_LINE_INDEX=HIGHLIGHT+1
3560 IF HIGHLIGHT<TOTAL_RECORDS THEN FOR III=TOTAL_RECORDS TO HIGHLIGHT+1 STEP -1; SOURCE_INDEX=III,TARGET_INDEX=III+1; GOSUB 4050; NEXT III
3565 CLEAR_INDEX=NEW_LINE_INDEX; GOSUB 4000
3570 ITEM$[NEW_LINE_INDEX]=DIM(10),QTY[NEW_LINE_INDEX]=A0[0],DIVISOR[NEW_LINE_INDEX]=1,UM$[NEW_LINE_INDEX]="EACH"
3575 HIGHLIGHT=NEW_LINE_INDEX,TOTAL_RECORDS=TOTAL_RECORDS+1; IF NEW_LINE_INDEX>=P_END AND P_END>LAST_LINE-FIRST_LINE THEN START_INDEX=START_INDEX+1
3580 GOSUB 8800
3595 GOTO 3300; REM "goto item change to enter item
4000 REM "Clear line at CLEAR_INDEX
4005 ITEM$[CLEAR_INDEX]="",DESC$[CLEAR_INDEX]="",UM$[CLEAR_INDEX]="",QTY[CLEAR_INDEX]=0,COST[CLEAR_INDEX]=0,QTY_PER[CLEAR_INDEX]=0,DIVISOR[CLEAR_INDEX]=0,SP_COST[CLEAR_INDEX]=0
4045 RETURN 
4050 REM "Transfer data from line source_index to line target_index
4055 ITEM$[TARGET_INDEX]=ITEM$[SOURCE_INDEX],DESC$[TARGET_INDEX]=DESC$[SOURCE_INDEX],UM$[TARGET_INDEX]=UM$[SOURCE_INDEX]
4060 QTY[TARGET_INDEX]=QTY[SOURCE_INDEX],COST[TARGET_INDEX]=COST[SOURCE_INDEX],QTY_PER[TARGET_INDEX]=QTY_PER[SOURCE_INDEX],DIVISOR[TARGET_INDEX]=DIVISOR[SOURCE_INDEX],SP_COST[TARGET_INDEX]=SP_COST[SOURCE_INDEX]
4095 RETURN 
4100 REM "Initialize array to MAX_ARRAY values
4105 MAX_ARRAY=40; DIM ITEM$[MAX_ARRAY],DESC$[MAX_ARRAY],UM$[MAX_ARRAY],QTY[MAX_ARRAY],COST[MAX_ARRAY],QTY_PER[MAX_ARRAY],DIVISOR[MAX_ARRAY],SP_COST[MAX_ARRAY]
4110 QTY_MASK$="####,###.00-",INT_QTY_MASK$="#,###,##0-"
4145 RETURN 
4150 REM "Given ITEM_KEY$ and ITEM_INDEX read IC0 and fill in information, RM_QTY is raw material quantity
4155 DIM D$(200); D$(21,40)="*** NOT FOUND ***"; READ (Z[4],KEY=ITEM_KEY$,DOM=4156)IOL=0340
4156 DIM IC1$(59),IC1[20]; IC1[2]=D[18]; FIND (Z[7],KEY=ITEM_KEY$+A0$(10,4),DOM=4157)IOL=0370
4160 ITEM$[ITEM_INDEX]=ITEM_KEY$(11),DESC$[ITEM_INDEX]=D$(21,40),QTY[ITEM_INDEX]=RM_QTY,UM$[ITEM_INDEX]=D$(124,4),COST[ITEM_INDEX]=IC1[2],SP_COST[ITEM_INDEX]=D[20]
4165 IF D[15]<=0 THEN QTY_PER[ITEM_INDEX]=1 ELSE QTY_PER[ITEM_INDEX]=D[15]
4170 DIM F$(22),F[5]; FIND (Z[13],KEY="U/M"+UM$[ITEM_INDEX],DOM=4171)IOL=0360
4172 IF F$(20,1)="Y" OR F$(21,1)="Y" OR D[15]=0 THEN DIVISOR[ITEM_INDEX]=1 ELSE DIVISOR[ITEM_INDEX]=D[15]
4195 RETURN 
4200 REM "Display assort array
4205 PRINT @(0,18),'CE',@(56,18),'SB',"Remaining:",'SF',; REMAINING=TOTAL_ASSORTMENT_QTY,VIEW_INDEX=0,CURR_LINE=19
4209 IF ASSORT$="" THEN GOTO 4245
4210 FOR V=1 TO LEN(ASSORT$)
4211 IF STP(ASSORT$(V),3," ")="" THEN EXITTO 4231 ELSE IF ASSORT_QTY[V]=0 THEN GOTO 4230; REM "if rest blank then skip to end, else if qty = 0 don't show
4212 TMPV=POS(ASSORT$(V,1)=COLOR_CODE$),TMP$=ASSORT$(V,1); IF TMPV<>0 THEN TMP$=TMP$+"-"+STP(COLOR_NAME$((TMPV-1)*6+1,6),1)+"="; IF FPT(ASSORT_QTY[V]/DIVISOR[HIGHLIGHT])=0 THEN TMP_MASK$=INT_QTY_MASK$ ELSE TMP_MASK$=QTY_MASK$ END_IF ; TMP$=TMP$+STP(STR(ASSORT_QTY[V]/DIVISOR[HIGHLIGHT]:TMP_QTY_MASK$),2)
4215 IF VIEW_INDEX+LEN(TMP$)>79 THEN IF LEN(TMP$)<79 THEN CURR_LINE=CURR_LINE+1,VIEW_INDEX=0
4225 IF CURR_LINE<21 THEN PRINT @(VIEW_INDEX,CURR_LINE),TMP$,; VIEW_INDEX=VIEW_INDEX+LEN(TMP$)+1
4229 REMAINING=REMAINING-ASSORT_QTY[V]
4230 NEXT V
4235 PRINT @(67,18),REMAINING/DIVISOR[HIGHLIGHT]:QTY_MASK$,
4245 RETURN 
4300 REM "Enter color, At color_pos, color_line given item color_item$, return color_item$ with corrected color item, new_code$ with code and new_name$ with color name
4305 DIM TMPX$(6),Q$(10); C9=3
4307 X$="Enter 1 character color code or color name (See help for codes)"
4310 DIM TMPX$(6); CALL "ZZENTR","S",A{ALL},TMPX$,X4$,X3$,COLOR_POS,COLOR_LINE,1,6,C0,"",X$,"","BM2WMA09","","",""; IF C0=6 THEN C0=1
4311 TMP$=STP(TMPX$,2); IF TMP$="" THEN C0=4; GOTO 4345
4312 IF LEN(TMP$)>1 THEN TMP=POS(TMP$=COLOR_NAME$,6); IF TMP=0 THEN GOTO 4310 ELSE TMP$=COLOR_CODE$((TMP+5)/6,1)
4315 IF LEN(TMP$)=1 AND POS(TMP$=COLOR_CODE$)=0 THEN GOTO 4310
4317 IN_ITEM$=COLOR_ITEM$; GOSUB 4450; IF TMP$(1,1)>="a" THEN NEW_ITEM$=PAD(IT_ITEM$+"="+CHR(ASC(TMP$(1,1))-32),10) ELSE NEW_ITEM$=PAD(IT_ITEM$+TMP$(1,1),10)
4318 READ (Z[4],KEY=Q$+NEW_ITEM$,DOM=4319)IOL=0340; COLOR_ITEM$=Q$+NEW_ITEM$; GOTO 4340
4319 CALL "ZZPROM",".4",X3$,Z,"This color is not available for this item","","",0; GOTO 4310
4340 NEW_CODE$=TMP$,NEW_NAME$=STP(COLOR_NAME$((POS(NEW_CODE$=COLOR_CODE$)-1)*6+1,6),1)
4345 RETURN 
4350 REM "Enter quantity recv'd and passed back in QUANTITY, at QTY_POS and QTY_LINE
4355 C9=2; DIM TMP[1]; TMP[0]=QUANTITY/DIVISOR[HIGHLIGHT]
4360 CALL "ZZENTR","N.",TMP{ALL},"",X4$,X3$,QTY_POS,QTY_LINE,0,621,C0,QTY_MASK$,"{3"+X$,"","BM2WMA07","","",""; IF C0=6 THEN C0=1
4365 QUANTITY=TMP[0]*DIVISOR[HIGHLIGHT]
4395 RETURN 
4400 REM "Take ASSORT$ and ASSORT_QTY[] and redistribute back to ITEM$[], QTY[], etc
4401 REM "1st run thru ITEM$ and if match found with BASE_ITEM$ then update qty from ASSORT_QTY$ if found (then blank position in ASSORT$ to show it is done),else if not in ASSORT$ then delete it. It is no longer needed
4404 BASE_LEN=LEN(BASE_ITEM$)
4405 FOR J=1 TO TOTAL_RECORDS
4406 IN_ITEM$=ITEM$[J]; GOSUB 4450
4407 IF IT_ITEM$<>BASE_ITEM$ THEN GOTO 4425 ELSE P=POS(IT_COLOR$=ASSORT$); IF P<>0 AND ASSORT_QTY[P]=0 THEN ASSORT$(P,1)=" ",P=0; REM "if assort qty is 0, ignore this one
4408 REM "if P<>0 then this line is in the assortment, update it's qty from the corresponing ASSORT_QTY[] and replace it in ASSORT$ with a blank so we know it has been processed. IF P is 0 then the line is not in the assortment and we can delete the line.
4409 IF P<>0 THEN QTY[J]=ASSORT_QTY[P],ASSORT$(P,1)=" "; GOTO 4425
4410 REM "if here we need to delete line j
4412 IF J=TOTAL_RECORDS THEN CLEAR_INDEX=J; GOSUB 4000; TOTAL_RECORDS=TOTAL_RECORDS-1; IF HIGHLIGHT>TOTAL_RECORDS THEN HIGHLIGHT=TOTAL_RECORDS END_IF ; GOTO 4424; REM " If deleting last record, then this special logic will do
4415 FOR JJ=J TO TOTAL_RECORDS-1; TARGET_INDEX=JJ,SOURCE_INDEX=JJ+1; GOSUB 4050; NEXT JJ
4420 CLEAR_INDEX=TOTAL_RECORDS; GOSUB 4000; TOTAL_RECORDS=TOTAL_RECORDS-1
4424 J=J-1; IF HIGHLIGHT>TOTAL_RECORDS THEN HIGHLIGHT=TOTAL_RECORDS; REM "Adjust J now that 1 less item in list, check highlight
4425 NEXT J
4429 REM "Now process non-blank, non-zero qty ASSORT$ entries to add new lines, under the current highlighted line. We will add in approx same order they entered them.
4430 IF STP(ASSORT$,3," ")="" OR ASSORT$="" THEN GOTO 4440 ELSE BASE_LINE=HIGHLIGHT; REM "None to do, leave, else set baseline for later use
4431 FOR J=1 TO LEN(ASSORT$)
4433 IF ASSORT$(J,1)=" " OR ASSORT_QTY[J]=0 THEN GOTO 4439
4435 NEW_LINE_INDEX=BASE_LINE+1; IF BASE_LINE<TOTAL_RECORDS THEN FOR JJ=TOTAL_RECORDS TO BASE_LINE+1 STEP -1; SOURCE_INDEX=JJ,TARGET_INDEX=JJ+1; GOSUB 4050; NEXT JJ; CLEAR_INDEX=NEW_LINE_INDEX; GOSUB 4000
4437 ITEM_INDEX=NEW_LINE_INDEX; IF ASSORT$(J,1)>="a" THEN ITEM_KEY$=PAD(DIM(10)+BASE_ITEM$+"="+CHR(ASC(ASSORT$(J,1))-32),20) ELSE ITEM_KEY$=PAD(DIM(10)+BASE_ITEM$+ASSORT$(J,1),20) END_IF ; RM_QTY=ASSORT_QTY[J]; GOSUB 4150; TOTAL_RECORDS=TOTAL_RECORDS+1,BASE_LINE=BASE_LINE+1
4439 NEXT J
4440 GOSUB 8800
4445 RETURN 
4450 REM "Given in_item$ return it_color$,it_item$ where it_item$ is base item and it_color$ is color letter or lower case if item ends in =x where x is lower case color
4455 IT_ITEM$="",IT_COLOR$=""
4456 IF IN_ITEM$="" THEN GOTO 4490
4460 IT_POS=POS("="=IN_ITEM$)
4470 IF IT_POS>2 THEN IT_ITEM$=IN_ITEM$(1,IT_POS-1),IT_COLOR$=CHR(ASC(IN_ITEM$(IT_POS+1,1))+32) ELSE IN_ITEM$=STP(IN_ITEM$,1),IT_ITEM$=IN_ITEM$(1,LEN(IN_ITEM$)-1),IT_COLOR$=IN_ITEM$(LEN(IN_ITEM$),1)
4495 RETURN 
5200 REM "Get Next Index
5210 EXTRACT (F,IND=0,ERR=5295)IOL=0290
5215 IF Y[4]=-2 THEN READ (F); WAIT 0; GOTO 5210
5220 Y[4]=-2; WRITE (F,IND=0)IOL=0290
5230 IF Y[1]<1 THEN A9=Y[2],Y[2]=Y[2]+1; GOTO 5260
5255 A9=Y[1]; READ (F,IND=A9)Y[1]
5260 IF Y[0]<Y[3] THEN Y[0]=Y[0]+1,Y[4]=-1 ELSE Y[2]=Y[2]-1; ESCAPE ; REM "File full?
5280 WRITE (F,IND=0)IOL=0290
5290 RETURN 
5800 REM "Alt sort keys
5890 RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(0,3),"Req number:",@(23,3),"Customer:",@(6,4),"Line:",@(23,4),"Quantity:",@(6,5),"Item:",@(0,6),Z0$,
6065 PRINT @(0,7),"Line",@(5,7),"Item",@(22,7),"Description",@(68,7),"Quantity",@(0,8),Z0$,
6090 FIRST_LINE=9,LAST_LINE=19
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6220 PRINT @(5,6),A$(12,1),
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6447 PRINT @(0,13),'CE',; RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6464 CALL "ZZDISP","A   ",A$(1,8),"O/P",X3$,"","",12,3,X4$
6466 GOSUB 7500
6468 PRINT @(12,4),A$(9,3),; GOSUB 8700
6490 RETURN 
6500 REM "DELETE
6501 ESCAPE 
6700 REM "ADD ENTRY
6701 ESCAPE 
7500 REM "Display req customer # and name
7505 IF FS1_FILE=0 THEN C0$(11,35)="Not on file order"; GOTO 7535
7510 FIND (Z[3],KEY=B0$(6,10),DOM=7511)IOL=0335
7530 CALL "ZZDISP","A",B0$(6,10),"A/R",X3$,"","",33,3,X4$
7535 PRINT @(45,3),C0$(11,35),
7537 IF P4$(222,1)="Y" THEN CALL "ZZDISP","AX",C0$(220,9),"ARG",X3$,X$,"",0,0,X4$; X$=X$+"-"+C0$(11,35); PRINT @(45,3),X$(1,35),; X$=""
7540 IF POS(X3$(9,3)="049",3)>0 THEN IF NUM(C0$(398,3),ERR=8598)>0 THEN PRINT @(64,2),"Disc = ",NUM(C0$(398,3)),
7545 RETURN 
7550 REM "Check order, if only 1 line with BOM then default it and skip
7555 ONE_LINE$=""
7556 IF FS2_FILE=0 THEN IF GB$<>"" THEN ONE_LINE$="001"; GOTO 7595 ELSE GOTO 7595
7559 READ (FS2_FILE,KEY=A$(1,8),DOM=7560)
7560 K5$=KEY(FS2_FILE,END=7590); IF K5$(1,8)<>A$(1,8) THEN GOTO 7590
7561 REM "Read line, then see if it is a BOM line, if not go on to next one
7565 READ (FS2_FILE,KEY=K5$,DOM=7560)IOL=0315; IF POS(A0$(155,1)="IC")=0 THEN GOTO 7560
7569 READ (Z[6],KEY=A0$(161,10)+A0$(19,10),DOM=7570)
7570 BM0_KEY$=KEY(Z[6],END=7560); IF BM0_KEY$(1,20)=A0$(161,10)+A0$(19,10) THEN ONE_LINE$=A0$(6,3); GOTO 7590 ELSE GOTO 7560
7595 RETURN 
7800 REM "u/m stuff
7802 D9=1,D8=1; FIND (Z[13],KEY="U/M"+A0$(124,4),DOM=7845)IOL=0360
7810 IF F$(20,1)="Y" THEN IF F[0]<>0 THEN D8=F[0] ELSE D8=F[1]
7813 REM "Set divisor
7815 IF F$(20,1)="Y" OR F$(21,1)="Y" THEN D9=1 ELSE D9=A0[5]
7816 IF D9=0 THEN D9=1
7817 IF D8=0 THEN D8=1
7845 RETURN 
7950 REM "Change to customer specific inventory
8000 REM "Set up an entry in I/C Transaction Entry program"
8010 DIM ICA[1]; LASTLINK=0
8020 FOR I=1 TO TOTAL_RECORDS
8030 IF QTY[I]=0 THEN GOTO 8080
8040 IF ICA[0]=0 THEN GOSUB 8100
8060 GOSUB 8200
8080 NEXT I
8090 RETURN 
8100 REM "Create ICA Header Record
8110 DIM ICA$(56); ICA$(1,6)=ICPARM$(7,6),ICA$(7,6)=A$(3,6)
8120 READ (Z[8],KEY=ICA$(1,12),DOM=8121)IOL=0380; GOTO 8150
8140 ICA$(13,40)="Waste for Item: "+A0$(19,10)
8145 RETURN 
8150 REM "Header Exists - Add to it
8155 DIM ICB[4]; LASTLINK=ICA[0]
8160 READ (Z[9],IND=LASTLINK)IOL=0390
8170 IF A9>0 THEN LASTLINK=A9; GOTO 8160
8190 RETURN 
8200 REM "Create ICB Line Records
8210 DIM ICB$(57),ICB[4],ICB1[4]
8220 ICB$(1,1)="A",ICB$(57,1)="W",ICB$(2,6)=X3$(21,6),ICB$(8,4)=A0$(10,4)
8230 ICB$(36,10)=ITEM$[I],ICB$(46,4)=UM$[I]
8240 ICB[0]=-QTY[I],ICB[1]=COST[I],ICB[2]=QTY_PER[I]
8250 ICB_QTY=ICB[0]; FIND (Z[13],KEY="U/M"+ICB$(46,4),DOM=8251)ICB_UM$,ICB_UM0,ICB_UM1; IF ICB_UM$(20,1)="Y" AND ICB_UM1<>0 THEN ICB_QTY=ICB[0]*ICB_UM1
8260 CALL "FM2EXT",Z[13],0,ICB$(46,4),ICB[2],ICB_QTY,ICB[1],ICB_EXT,2
8270 ICB[3]=ICB_EXT
8300 REM "Write to Link List File
8310 GOSUB 5200
8320 IF ICA[0]=0 THEN ICA[0]=A9; WRITE (Z[8],KEY=ICA$(1,12))IOL=0380 ELSE EXTRACT (Z[9],IND=LASTLINK)IOL=0391; A8=A9; WRITE (Z[9])IOL=0391
8330 LASTLINK=A9,A9=-1
8340 WRITE (Z[9],IND=LASTLINK)IOL=0390
8390 RETURN 
8600 REM "Highlight a line. Hightlight is the line number use p_start and first_line to figure the line to highlight, then call 8850
8610 P_INDEX=HIGHLIGHT,P_LINE=HIGHLIGHT-P_START+FIRST_LINE
8615 P_HIGH=1; GOSUB 8850
8625 RETURN 
8630 REM "Unhighlight a line, Highlight is the line number, use p_start and first_line to figure the line to unhighlight, then call 8850
8635 P_INDEX=HIGHLIGHT,P_LINE=HIGHLIGHT-P_START+FIRST_LINE
8640 P_HIGH=0; GOSUB 8850
8645 RETURN 
8700 REM "Display item information
8705 IF FPT(A0[0]/D9)=0 THEN QTMP$=STP(STR(A0[0]/D9:INT_QTY_MASK$),2) ELSE QTMP$=STP(STR(A0[0]/D9:QTY_MASK$),2)
8710 IF D9$(20,1)="Y" OR D9$(21,1)="Y" THEN QTMP$=QTMP$+"  "+STP(A0$(124,4),2) ELSE QTMP$=QTMP$+"  "+STP(A0$(124,4),2)+"/"+STP(STR(D9:INT_QTY_MASK$),2)
8735 IF FS1_FILE=0 THEN QTMP$=DIM(30)
8740 PRINT @(33,4),QTMP$,@(12,5),STP(A0$(161,10)+A0$(19,10),2)+" - "+STP(A0$(50,40),1),
8745 RETURN 
8800 REM "Given START_INDEX, display 1 page of items
8801 REM "P_start will be first line on page
8804 P_LINE=FIRST_LINE,P_INDEX=START_INDEX,P_START=START_INDEX; PRINT @(0,P_LINE),'CE',; IF TOTAL_RECORDS<1 THEN P_END=P_START; GOTO 8845
8805 IF P_INDEX>TOTAL_RECORDS OR P_LINE>LAST_LINE THEN GOTO 8840
8810 IF HIGHLIGHT>0 THEN IF P_INDEX=HIGHLIGHT THEN P_HIGH=1
8820 GOSUB 8850
8835 P_INDEX=P_INDEX+1,P_LINE=P_LINE+1; GOTO 8805
8840 P_END=P_INDEX-1
8843 IF P_END=TOTAL_RECORDS THEN PRINT @(0,P_LINE),Z0$,@(27,P_LINE)," End of Bill of Materials ",
8845 RETURN 
8850 REM "Given p_line and P_index, display a line, if p_high is 1 highlight the line
8855 P_UM$=STP(UM$[P_INDEX],2); IF QTY_PER[P_INDEX]>1 THEN P_UM$=P_UM$+"/"+STP(STR(QTY_PER[P_INDEX]:"###,###"),2)
8859 IF P_HIGH THEN PRINT @(79,P_LINE),'ER',@(1,P_LINE),'BR',DIM(78), ELSE PRINT @(1,P_LINE),'ER',@(1,P_LINE),DIM(78),
8860 PRINT @(1,P_LINE),P_INDEX:"#0",@(4,P_LINE),ITEM$[P_INDEX],@(22,P_LINE),DESC$[P_INDEX],@(66-LEN(P_UM$),P_LINE),P_UM$,@(67,P_LINE),QTY[P_INDEX]/DIVISOR[P_INDEX]:QTY_MASK$,
8890 IF P_HIGH THEN PRINT @(79,P_LINE),'ER',; P_HIGH=0
8895 RETURN 
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNB$(Z9$)=X3$(214-6*NUM(Z9$),1)
8925 DEF FNS$(Z9$)=Z9$(1,POS("  "=Z9$+"  ")-1)
8930 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
8940 DEF FNQ$(Z,Z9$)=STR(Z:Z9$(1,POS(".00"=STR(Z:Z9$)+".00")-1))
8950 REM "Program flow logic
8960 U0$=X3$(1,6)+"PF"
8970 FIND (Z[13],KEY=U0$,DOM=8990)U0$,U1$
8975 IF U1$="" THEN RETURN 
8980 Q1=NUM(U1$(7,2)),Q1$=U1$(9,Q1),U1$=U1$(Q1+9)
8985 IF U1$(1,6)="AR2EAU" THEN I8$=U1$(9,8) ELSE I8$=""
8990 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; IF C9>0 THEN GOSUB 8800; GOSUB 8600 ELSE GOSUB 6400
9520 ON C9 GOTO 1140,3310,4360,4310
9700 REM "PROG FLOW
9710 IF U1$="" THEN REMOVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9725 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9730 RUN U1$(1,6)
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
