0010 REM "Bill of Materials Availability Check <BM2MAA>
0020 SETESC 9300; SETERR 9000
0035 REM "4.4 - 01/26/99 - 11.51 - kmc - SSP# 105031
0040 REM "Copyright 1999 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0110 X0$="BM2MAA",X1$="Bill of Materials Availability Check",K9$="",K9=0
0120 DIM Z0$(80,"-"),S0$(40),S2$(40,".")
0130 K0=11,K1=2
0135 C9=-1
0140 WHSE$="0001"
0150 COLOR_CODE$="ABCDEFGHIJKLMNPQRSTUVWXYZ1234567890cdefhinprxyz"
0152 COLOR_NAME$="CLEAR WHITE BLACK RED   DK.BLULT.BLUNA.BLUDK.GRNLT.GRNFR.GRNGRANITIVORY YELLOWMOD.YLORANGETEAL  FROSTYMAROONGREY  BROWN GOLD  SILVERPURPLEPINK  CREAM NAT'RLMATCH ASSORTR/W/B R/W   W/BLUEMULTI W/GRN BEIGE BLUE  BLACK NEONRDDKBLUEBLGRNTGRNGNTNEONGRNEONYLNEONORFROSTYPKGRNTHOTPNKNEONPK"
0160 V8$="000207102699"
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST BM0$(1),BM0[0],BM0[1]
0315 IOLIST A0$(1),A0[0],A0[1],A0[2],A0[3],A0[4],A0[5],A0[6],A0[7],A0[8],A0[9],A0[10],A0[11],A0[12],A0[13],A0[14],A0[15],A0[16],A0[17],A0[18],A0[19],A0[20],A0[21],A0[22],A0[23],A0[24],A0[25],A0[26],A0[27],A0[28],A0[29]
0320 IOLIST IC0$
0325 IOLIST B0$,B0[0],B0[1],B0[2],B0[3],B0[4],B0[5],B0[6],B0[7],B0[8],B0[9],B0[10],B0[11],B0[12],B0[13]
0330 IOLIST IC1$,IC1[0],IC1[1],IC1[2],IC1[3],IC1[4],IC1[5],IC1[6],IC1[7],IC1[8],IC1[9],IC1[10],IC1[11],IC1[12],IC1[13],IC1[14],IC1[15],IC1[16],IC1[17],IC1[18],IC1[19],IC1[20]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15],D[16],D[17],D[18],D[19],D[20],D[21],D[22],D[23],D[24],D[25],D[26],D[27],D[28],D[29],D[30],D[31],D[32],D[33],D[34],D[35],D[36],D[37],D[38],D[39],D[40]
0360 IOLIST F$,F[0],F[1],F[2]
0365 IOLIST BM0$,BM0[0],BM0[1]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X BM0... 02O IC0...  03O IC1... 13O ZZPARM  "
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
0605 DIM S5$(255); FIND (Z[13],KEY="osec"+X3$(40,3),DOM=0606)S5$
0680 GOSUB 6000
0800 REM 
0810 GOSUB 8950
1000 REM "
1010 Y8=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1015 DIM V7$(27); V7$(1,1)="1",V7$(2,1)="1",V7$(3,1)="1",V7$(8,1)="1",V7$(9,1)="1",V7$(27,1)="1"
1030 DIM IC0$(112),D[40]
1032 F3$="",D9=1,HIGHLIGHT=0,ONE_LINE$=""
1033 DIM A0$(228),A0[29]
1035 DIM A$(23)
1039 REM "This sets lot flag on line until lots set by item; see line 8325 also
1045 A$(1,LEN(A1$))=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1250,1500
1200 REM "How to ship code
1209 DIM J$(10)
1210 CALL "ZZENTR","AUX",A{ALL},A$,X4$,X3$,15,4,11,10,C0,"ICE","{2"+X$,J$,"BM2MAA02","IC0","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1210,1211
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1220 FIND (Z[2],KEY=A$(1,20),DOM=1210)IOL=0320
1225 GOSUB 7500
1240 GOTO 1120
1500 REM "
1505 Z9=-1
1510 A1$=A$(1,20)
1515 GOSUB 4100
1519 REM "Determine if any records exist, if not ask to add first
1520 READ (Z[1],KEY=A1$,DOM=1521)
1521 KEY1$=KEY(Z[1],END=1600); IF KEY1$(1,20)<>A1$ THEN GOTO 1600
1525 Z9=0
1530 REM "Load Arrays from BM0 file
1531 ITEM_INDEX=0
1532 READ (Z[1],KEY=A1$,DOM=1533)
1535 DIM BM0$(43),BM0[1]; READ (Z[1],END=1580)IOL=0310; IF BM0$(1,20)<>A1$ THEN GOTO 1580
1540 TOTAL_RECORDS=TOTAL_RECORDS+1,ITEM_INDEX=TOTAL_RECORDS,ITEM_KEY$=BM0$(24,20),RM_QTY=BM0[0],ITEM_CODE$="*"; GOSUB 4150; ITEM_CODE$=" "
1542 IN_ITEM$=BM0$(34,10); GOSUB 4450; REM "Set it_item$ to base item number
1544 READ (Z[2],KEY=BM0$(24,10)+IT_ITEM$,DOM=1545)
1545 IC0_KEY$=KEY(Z[2],END=1555); IF IC0_KEY$(1,10+LEN(IT_ITEM$))<>BM0$(24,10)+IT_ITEM$ THEN GOTO 1555 ELSE READ (Z[2])
1550 IF IC0_KEY$<>BM0$(24,20) THEN TOTAL_RECORDS=TOTAL_RECORDS+1,ITEM_INDEX=TOTAL_RECORDS,ITEM_KEY$=IC0_KEY$,RM_QTY=BM0[0]; GOSUB 4150
1554 GOTO 1545
1575 GOTO 1535
1580 REM "End of load logic
1585 START_INDEX=1; GOSUB 8800
1590 GOTO 3000
1600 REM "
1610 GOTO 1000; REM "if not on file just reentr
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 GOTO 1000
1690 NEW_LINE_INDEX=1,START_INDEX=1; GOTO 3565
2000 REM "Enter data for assortments
2010 C0=0,X0=-1,X1=1
2020 SETERR 9000; X$="",Q$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF INT(C0)=3 THEN C0=1; GOTO 2025 ELSE IF C0>3 OR X0<0 THEN GOTO 2050
2040 ON X0 GOTO 2100,2150,2050
2050 REM "display adjustments, & remaining, setup for next entry
2055 GOSUB 4200
2080 IF ABS(C0)<4 THEN X0=0; GOTO 2040
2090 IF REMAINING<>0 THEN CALL "ZZPROM",".4",X3$,Z,"The total of the assortments do not add up to the quantity for this item","","",0; X0=0; GOTO 2040
2091 GOSUB 4400
2095 RETURN 
2100 REM "New Color
2105 COLOR_POS=15,COLOR_LINE=18,COLOR_ITEM$=ITEM$[HIGHLIGHT]
2106 PRINT @(COLOR_POS,COLOR_LINE),DIM(10),
2110 GOSUB 4300
2111 IF ABS(C0)=4 THEN GOTO 2050
2115 PRINT @(COLOR_POS,COLOR_LINE),PAD(NEW_CODE$+"-"+NEW_NAME$,10),
2120 P=POS(NEW_CODE$=ASSORT$); IF P=0 THEN ASSORT$=ASSORT$+NEW_CODE$,ASSORT_INDEX=LEN(ASSORT$),ASSORT_QTY[ASSORT_INDEX]=0 ELSE ASSORT_INDEX=P
2140 GOTO 2020
2150 REM "Quantity
2155 QTY_POS=30,QTY_LINE=18,QUANTITY=ASSORT_QTY[ASSORT_INDEX]
2157 PRINT @(QTY_POS,QTY_LINE),QUANTITY:QTY_MASK$,
2160 GOSUB 4350
2165 ASSORT_QTY[ASSORT_INDEX]=QUANTITY
2190 GOTO 2020
3000 REM "Highlight lines and work on them
3010 HIGHLIGHT=P_START; GOSUB 8600
3050 CALL "ZZPROM","6 BM2CHK",X3$,Z,"","","V",X0
3055 ON Z+1 GOTO 3100,3200,3250,3400,3350,3010
3100 REM "line selected is in X0
3110 GOSUB 8630
3112 IF X0<=0 THEN HIGHLIGHT=1 ELSE IF X0>TOTAL_RECORDS THEN HIGHLIGHT=TOTAL_RECORDS ELSE HIGHLIGHT=X0
3113 IF HIGHLIGHT<P_START THEN IF HIGHLIGHT-(LAST_LINE-FIRST_LINE)>1 THEN START_INDEX=HIGHLIGHT-(LAST_LINE-FIRST_LINE) ELSE START_INDEX=1 END_IF ; GOSUB 8800 ELSE IF HIGHLIGHT>P_END THEN IF HIGHLIGHT+(LAST_LINE-FIRST_LINE)<=TOTAL_RECORDS THEN START_INDEX=HIGHLIGHT ELSE START_INDEX=TOTAL_RECORDS-(LAST_LINE-FIRST_LINE) END_IF ; GOSUB 8800 ELSE GOSUB 8600; REM " If on same page,just highlight new line
3145 GOTO 3050
3200 REM "Exit
3210 PRINT @(0,FIRST_LINE),'CE',
3245 IF Q1$<>"" THEN GOTO 9900 ELSE A1$=""; GOTO 1000
3250 REM "Item detail
3254 PRINT @(0,3),'CE',
3255 CALL "IC2MAC",X3$,X4$,"",DIM(10)+ITEM$[HIGHLIGHT]+WHSE$
3260 GOSUB 6400; GOSUB 8800
3295 GOTO 3050
3350 REM "Down Arrow
3355 IF HIGHLIGHT<P_END THEN GOSUB 8630; HIGHLIGHT=HIGHLIGHT+1; GOSUB 8600 ELSE IF HIGHLIGHT<TOTAL_RECORDS THEN HIGHLIGHT=HIGHLIGHT+1; IF HIGHLIGHT+(LAST_LINE-FIRST_LINE)<=TOTAL_RECORDS THEN START_INDEX=HIGHLIGHT ELSE START_INDEX=TOTAL_RECORDS-(LAST_LINE-FIRST_LINE) END_IF ; GOSUB 8800
3395 GOTO 3050
3400 REM "up Arrow
3410 IF HIGHLIGHT>P_START THEN GOSUB 8630; HIGHLIGHT=HIGHLIGHT-1; GOSUB 8600 ELSE IF HIGHLIGHT>1 THEN HIGHLIGHT=HIGHLIGHT-1; IF HIGHLIGHT-(LAST_LINE-FIRST_LINE)>1 THEN START_INDEX=HIGHLIGHT-(LAST_LINE-FIRST_LINE) ELSE START_INDEX=1 END_IF ; GOSUB 8800
3445 GOTO 3050
4000 REM "Clear line at CLEAR_INDEX
4005 ITEM$[CLEAR_INDEX]="",DESC$[CLEAR_INDEX]="",UM$[CLEAR_INDEX]="",QTY[CLEAR_INDEX]=0,COST[CLEAR_INDEX]=0,QTY_PER[CLEAR_INDEX]=0,DIVISOR[CLEAR_INDEX]=0,SP_COST[CLEAR_INDEX]=0
4010 AVAIL[CLEAR_INDEX]=0,ON_PO[CLEAR_INDEX]=0,CODE$[CLEAR_INDEX]=" "
4045 RETURN 
4050 REM "Transfer data from line source_index to line target_index
4055 ITEM$[TARGET_INDEX]=ITEM$[SOURCE_INDEX],DESC$[TARGET_INDEX]=DESC$[SOURCE_INDEX],UM$[TARGET_INDEX]=UM$[SOURCE_INDEX]
4060 QTY[TARGET_INDEX]=QTY[SOURCE_INDEX],COST[TARGET_INDEX]=COST[SOURCE_INDEX],QTY_PER[TARGET_INDEX]=QTY_PER[SOURCE_INDEX],DIVISOR[TARGET_INDEX]=DIVISOR[SOURCE_INDEX],SP_COST[TARGET_INDEX]=SP_COST[SOURCE_INDEX]
4065 AVAIL[TARGET_INDEX]=AVAIL[SOURCE_INDEX],ON_PO[TARGET_INDEX]=AVAIL[SOURCE_INDEX],CODE$[TARGET_INDEX]=CODE$[SOURCE_INDEX]
4095 RETURN 
4100 REM "Initialize array to MAX_ARRAY values
4105 MAX_ARRAY=40; DIM ITEM$[MAX_ARRAY],DESC$[MAX_ARRAY],UM$[MAX_ARRAY],QTY[MAX_ARRAY],COST[MAX_ARRAY],QTY_PER[MAX_ARRAY],DIVISOR[MAX_ARRAY],SP_COST[MAX_ARRAY],AVAIL[MAX_ARRAY],ON_PO[MAX_ARRAY],CODE$[MAX_ARRAY]; TOTAL_RECORDS=0
4107 FOR J=0 TO MAX_ARRAY; DIVISOR[J]=1; NEXT J
4110 QTY_MASK$="####,###-",INT_QTY_MASK$="#,###,##0-"
4145 RETURN 
4150 REM "Given ITEM_KEY$ and ITEM_INDEX read IC0 and fill in information, RM_QTY is raw material quantity, also read IC1 for WHSE$ and fill in AVAIL and ON_PO
4151 REM "ITEM_CODE$ is put into CODE$[]
4155 DIM D$(200); D$(21,40)="*** NOT FOUND ***"; READ (Z[2],KEY=ITEM_KEY$,DOM=4156)IOL=0340
4156 DIM IC1$(59),IC1[20]; READ (Z[3],KEY=ITEM_KEY$+WHSE$,DOM=4157)IOL=0330
4160 ITEM$[ITEM_INDEX]=ITEM_KEY$(11),DESC$[ITEM_INDEX]=D$(21,40),QTY[ITEM_INDEX]=RM_QTY,DIVISOR[ITEM_INDEX]=1
4165 AVAIL[ITEM_INDEX]=IC1[3]+IC1[4]-IC1[5]+IC1[6]-IC1[7],ON_PO[ITEM_INDEX]=IC1[8]
4168 CODE$[ITEM_INDEX]=ITEM_CODE$
4195 RETURN 
4200 REM "Display assort array
4205 PRINT @(0,18),'CE',@(56,18),'SB',"Remaining:",'SF',; REMAINING=TOTAL_ASSORTMENT_QTY,VIEW_INDEX=0,CURR_LINE=19
4209 IF ASSORT$="" THEN GOTO 4245
4210 FOR V=1 TO LEN(ASSORT$)
4211 IF STP(ASSORT$(V),3," ")="" THEN EXITTO 4231 ELSE IF ASSORT_QTY[V]=0 THEN GOTO 4230; REM "if rest blank then skip to end, else if qty = 0 don't show
4212 TMPV=POS(ASSORT$(V,1)=COLOR_CODE$),TMP$=ASSORT$(V,1); IF TMPV<>0 THEN TMP$=TMP$+"-"+STP(COLOR_NAME$((TMPV-1)*6+1,6),1)+"="; IF FPT(ASSORT_QTY[V]/DIVISOR[HIGHLIGHT])=0 THEN TMP_MASK$=INT_QTY_MASK$ ELSE TMP_MASK$=QTY_MASK$ END_IF ; TMP$=TMP$+STP(STR(ASSORT_QTY[V]/DIVISOR[HIGHLIGHT]:TMP_QTY_MASK$),2)
4215 IF VIEW_INDEX+LEN(TMP$)>79 THEN IF LEN(TMP$)<79 THEN CURR_LINE=CURR_LINE+1,VIEW_INDEX=0
4225 IF CURR_LINE<21 THEN PRINT @(VIEW_INDEX,CURR_LINE),TMP$,; VIEW_INDEX=VIEW_INDEX+LEN(TMP$)+1
4229 REMAINING=REMAINING-ASSORT_QTY[V]
4230 NEXT V
4235 PRINT @(67,18),REMAINING/DIVISOR[HIGHLIGHT]:QTY_MASK$,
4245 RETURN 
4300 REM "Enter color, At color_pos, color_line given item color_item$, return new_color_item$ with corrected color item, new_code$ with code and new_name$ with color name
4305 DIM TMPX$(6),Q$(10); C9=3
4307 X$="Enter 1 character color code or color name (See help for codes)"
4310 CALL "ZZENTR","S",A{ALL},TMPX$,X4$,X3$,COLOR_POS,COLOR_LINE,1,6,C0,"",X$,"","BM2MAA09","","",""; IF C0=6 THEN C0=1
4311 TMP$=STP(TMPX$,2); IF TMP$="" THEN IF ABS(C0)=4 THEN GOTO 4345 ELSE GOTO 4340
4312 IF LEN(TMP$)>1 THEN TMP=POS(TMP$=COLOR_NAME$,6); IF TMP=0 THEN GOTO 4310 ELSE TMP$=COLOR_CODE$((TMP+5)/6,1)
4315 IF LEN(TMP$)=1 AND POS(TMP$=COLOR_CODE$)=0 THEN GOTO 4310
4316 NEW_ITEM$=STP(COLOR_ITEM$,1); IF LEN(NEW_ITEM$)>1 THEN NEW_ITEM$=PAD(NEW_ITEM$(1,LEN(NEW_ITEM$)-1)+TMP$(1,1),10)
4318 READ (Z[2],KEY=Q$+NEW_ITEM$,DOM=4319)IOL=0340; COLOR_ITEM$=Q$+NEW_ITEM$; GOTO 4340
4319 CALL "ZZPROM",".4",X3$,Z,"This color is not available for this item","","",0; GOTO 4310
4340 NEW_CODE$=TMP$,NEW_NAME$=STP(COLOR_NAME$((POS(NEW_CODE$=COLOR_CODE$)-1)*6+1,6),1)
4345 RETURN 
4350 REM "Enter quantity recv'd and passed back in QUANTITY, at QTY_POS and QTY_LINE
4355 C9=2; DIM TMP[1]; TMP[0]=QUANTITY/DIVISOR[HIGHLIGHT]
4360 CALL "ZZENTR","N.",TMP{ALL},"",X4$,X3$,QTY_POS,QTY_LINE,0,601,C0,QTY_MASK$,"{3"+X$,"","BM2MAA07","","",""; IF C0=6 THEN C0=1
4365 QUANTITY=TMP[0]*DIVISOR[HIGHLIGHT]
4395 RETURN 
4400 REM "Take ASSORT$ and ASSORT_QTY[] and redistribute back to ITEM$[], QTY[], etc
4401 REM "1st run thru ITEM$ and if match found with BASE_ITEM$ then update qty from ASSORT_QTY$ if found (then blank position in ASSORT$ to show it is done),else if not in ASSORT$ then delete it. It is no longer needed
4404 BASE_LEN=LEN(BASE_ITEM$)
4405 FOR J=1 TO TOTAL_RECORDS
4407 IF LEN(STP(ITEM$[J],1))<>BASE_LEN+1 THEN GOTO 4425 ELSE IF ITEM$[J](1,BASE_LEN)<>BASE_ITEM$ THEN GOTO 4425 ELSE P=POS(ITEM$[J](BASE_LEN+1,1)=ASSORT$); IF P<>0 AND ASSORT_QTY[P]=0 THEN ASSORT$(P,1)=" ",P=0; REM "if assort qty is 0, ignore this one
4408 REM "if P<>0 then this line is in the assortment, update it's qty from the corresponing ASSORT_QTY[] and replace it in ASSORT$ with a blank so we know it has been processed. IF P is 0 then the line is not in the assortment and we can delete the line.
4409 IF P<>0 THEN QTY[J]=ASSORT_QTY[P],ASSORT$(P,1)=" "; GOTO 4425
4410 REM "if here we need to delete line j
4412 IF J=TOTAL_RECORDS THEN CLEAR_INDEX=J; GOSUB 4000; TOTAL_RECORDS=TOTAL_RECORDS-1; IF HIGHLIGHT>TOTAL_RECORDS THEN HIGHLIGHT=TOTAL_RECORDS END_IF ; GOTO 4424; REM " If deleting last record, then this special logic will do
4415 FOR JJ=J TO TOTAL_RECORDS-1; TARGET_INDEX=JJ,SOURCE_INDEX=JJ+1; GOSUB 4050; NEXT JJ
4420 CLEAR_INDEX=TOTAL_RECORDS; GOSUB 4000; TOTAL_RECORDS=TOTAL_RECORDS-1
4424 J=J-1; IF HIGHLIGHT>TOTAL_RECORDS THEN HIGHLIGHT=TOTAL_RECORDS; REM "Adjust J now that 1 less item in list, check highlight
4425 NEXT J
4429 REM "Now process non-blank, non-zero qty ASSORT$ entries to add new lines, under the current highlighted line. We will add in approx same order they entered them.
4430 IF STP(ASSORT$,3," ")="" OR ASSORT$="" THEN GOTO 4440 ELSE BASE_LINE=HIGHLIGHT; REM "None to do, leave, else set baseline for later use
4431 FOR J=1 TO LEN(ASSORT$)
4433 IF ASSORT$(J,1)=" " OR ASSORT_QTY[J]=0 THEN GOTO 4439
4435 NEW_LINE_INDEX=BASE_LINE+1; IF BASE_LINE<TOTAL_RECORDS THEN FOR JJ=TOTAL_RECORDS TO BASE_LINE+1 STEP -1; SOURCE_INDEX=JJ,TARGET_INDEX=JJ+1; GOSUB 4050; NEXT JJ; CLEAR_INDEX=NEW_LINE_INDEX; GOSUB 4000
4437 ITEM_INDEX=NEW_LINE_INDEX,ITEM_KEY$=PAD(DIM(10)+BASE_ITEM$+ASSORT$(J,1),20),RM_QTY=ASSORT_QTY[J]; GOSUB 4150; TOTAL_RECORDS=TOTAL_RECORDS+1,BASE_LINE=BASE_LINE+1
4439 NEXT J
4440 GOSUB 8800
4445 RETURN 
4450 REM "Given in_item$ return it_color$,it_item$ where it_item$ is base item and it_color$ is color letter or lower case if item ends in =x where x is lower case color
4455 IT_ITEM$="",IT_COLOR$=""
4456 IF IN_ITEM$="" THEN GOTO 4490
4460 IT_POS=POS("="=IN_ITEM$)
4470 IF IT_POS>2 THEN IT_ITEM$=IN_ITEM$(1,IT_POS-1),IT_COLOR$=CHR(ASC(IN_ITEM$(IT_POS+1,1))+32) ELSE IN_ITEM$=STP(IN_ITEM$,1),IT_ITEM$=IN_ITEM$(1,LEN(IN_ITEM$)-1),IT_COLOR$=IN_ITEM$(LEN(IN_ITEM$),1)
4495 RETURN 
5800 REM "Alt sort keys
5890 RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(0,4),"Finished Good:",@(0,5),Z0$,
6063 PRINT @(4,6),"* marks BOM items, others are alternates",@(60,6),"Available",
6065 PRINT @(0,7),"Line",@(6,7),"Item",@(17,7),"Description",@(61,7),"In Stock",@(71,7)," On P/O ",@(0,8),Z0$,
6090 FIRST_LINE=9,LAST_LINE=19
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6220 PRINT @(5,6),A$(12,1),
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6447 PRINT @(0,13),'CE',; RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6460 PRINT @(15,4),A$(11,10),
6490 RETURN 
6500 REM "DELETE
6501 ESCAPE 
6505 IF B0$(1,1)<>" " AND S5$(54,1)="Y" THEN CALL "ZZPROM",".4",X3$,0,"Access Denied!  Packing List previously printed. May not be deleted.","","",0; GOTO 1820
6509 CALL "FM2ODZ",X3$,-2,A0$,A0{ALL},B0$
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6540 L9$=STR(NUM(A$(9,3)):"000")
6590 IF LEN(A1$)>=11 THEN A1$=A1$(1,8)+STR(NUM(A1$(9,3))-1:"000") ELSE A1$=""
6591 GOTO 1630
6700 REM "ADD ENTRY
6701 ESCAPE 
6702 IF C9=0 THEN GOTO 6790
6704 IF A$(12,1)="C" THEN DIM F1[31]; READ (Z[11],KEY=B0$(6,10)+A$(23,10),DOM=6705)IOL=0410; IF F1[31]>0 THEN IF A[1]>F1[31] THEN CALL "ZZPROM","X0BM2MAA",X3$,Z,"","","",0; ON Z GOTO 6500,6705
6706 IF P4$(240,1)="Y" THEN IF A$(12,1)="C" THEN Q$=A$(13,20)+B$(108,5); CALL "FS2DAH",X3$,Q$,A[1],I; ON I GOTO 6500,6707
6709 IF I8$>"" THEN B0$=B0$+"~"+I8$; CALL "FM2ODZ",X3$,1,A0$,A0{ALL},B0$
6710 WRITE (Z[1],KEY=A1$)IOL=0316
6790 C9=0; IF Z=6 OR K1=0 THEN GOTO 9700 ELSE IF Z<4 THEN GOTO 1000 ELSE C0=-(3.1+(Z-4)/10); GOTO 6800
7500 REM "Get IC0 record and display description
7510 IF A$(1,20)<>IC0$(1,20) THEN DIM IC0$(LEN(IC0$)); FIND (Z[2],KEY=IC0$(1,20),DOM=7511)IOL=0320
7540 PRINT @(30,4),IC0$(21,40),
7545 RETURN 
7550 REM "Check order, if only 1 line with BOM then default it and skip
7555 ONE_LINE$=""
7559 READ (Z[5],KEY=A$(1,8),DOM=7560)
7560 K5$=KEY(Z[5],END=7590); IF K5$(1,8)<>A$(1,8) THEN GOTO 7590
7561 REM "Read line, then see if it is a BOM line, if not go on to next one
7565 READ (Z[5],KEY=K5$,DOM=7560)IOL=0315; IF POS(A0$(155,1)="IC")=0 THEN GOTO 7560
7569 READ (Z[6],KEY=A0$(161,10)+A0$(19,10),DOM=7570)
7570 BM0_KEY$=KEY(Z[6],END=7560); IF BM0_KEY$(1,20)=A0$(161,10)+A0$(19,10) THEN ONE_LINE$=A0$(6,3); GOTO 7590 ELSE GOTO 7560
7595 RETURN 
7800 REM "u/m stuff
7802 D9=1,D8=1; FIND (Z[13],KEY="U/M"+A0$(124,4),DOM=7845)IOL=0360
7810 IF F$(20,1)="Y" THEN IF F[0]<>0 THEN D8=F[0] ELSE D8=F[1]
7813 REM "Set divisor
7815 IF F$(20,1)="Y" OR F$(21,1)="Y" THEN D9=1 ELSE D9=A0[5]
7816 IF D9=0 THEN D9=1
7817 IF D8=0 THEN D8=1
7845 RETURN 
7950 REM "Change to customer specific inventory
8600 REM "Highlight a line. Hightlight is the line number use p_start and first_line to figure the line to highlight, then call 8850
8610 P_INDEX=HIGHLIGHT,P_LINE=HIGHLIGHT-P_START+FIRST_LINE
8615 P_HIGH=1; GOSUB 8850
8625 RETURN 
8630 REM "Unhighlight a line, Highlight is the line number, use p_start and first_line to figure the line to unhighlight, then call 8850
8635 P_INDEX=HIGHLIGHT,P_LINE=HIGHLIGHT-P_START+FIRST_LINE
8640 P_HIGH=0; GOSUB 8850
8645 RETURN 
8700 REM "Display item information
8745 RETURN 
8800 REM "Given START_INDEX, display 1 page of items
8801 REM "P_start will be first line on page
8804 P_LINE=FIRST_LINE,P_INDEX=START_INDEX,P_START=START_INDEX; PRINT @(0,P_LINE),'CE',; IF TOTAL_RECORDS<1 THEN P_END=P_START; GOTO 8845
8805 IF P_INDEX>TOTAL_RECORDS OR P_LINE>LAST_LINE THEN GOTO 8840
8810 IF HIGHLIGHT>0 THEN IF P_INDEX=HIGHLIGHT THEN P_HIGH=1
8820 GOSUB 8850
8835 P_INDEX=P_INDEX+1,P_LINE=P_LINE+1; GOTO 8805
8840 P_END=P_INDEX-1
8843 IF P_END=TOTAL_RECORDS THEN PRINT @(0,P_LINE),Z0$,@(27,P_LINE)," End of Bill of Materials ",
8845 RETURN 
8850 REM "Given p_line and P_index, display a line, if p_high is 1 highlight the line
8859 IF P_HIGH THEN PRINT @(79,P_LINE),'ER',@(1,P_LINE),'BR',DIM(78), ELSE PRINT @(1,P_LINE),'ER',@(1,P_LINE),DIM(78),
8860 PRINT @(1,P_LINE),P_INDEX:"#0",@(4,P_LINE),CODE$[P_INDEX],@(5,P_LINE),ITEM$[P_INDEX],@(17,P_LINE),DESC$[P_INDEX],@(60,P_LINE),AVAIL[P_INDEX]/DIVISOR[P_INDEX]:QTY_MASK$,@(70,P_LINE),ON_PO[P_INDEX]/DIVISOR[P_INDEX]:QTY_MASK$,
8890 IF P_HIGH THEN PRINT @(79,P_LINE),'ER',; P_HIGH=0
8895 RETURN 
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNB$(Z9$)=X3$(214-6*NUM(Z9$),1)
8925 DEF FNS$(Z9$)=Z9$(1,POS("  "=Z9$+"  ")-1)
8930 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
8940 DEF FNQ$(Z,Z9$)=STR(Z:Z9$(1,POS(".00"=STR(Z:Z9$)+".00")-1))
8950 REM "Program flow logic
8960 U0$=X3$(1,6)+"PF"
8970 FIND (Z[13],KEY=U0$,DOM=8990)U0$,U1$
8975 IF U1$="" THEN RETURN 
8980 Q1=NUM(U1$(7,2)),Q1$=U1$(9,Q1),U1$=U1$(Q1+9)
8985 IF U1$(1,6)="AR2EAU" THEN I8$=U1$(9,8) ELSE I8$=""
8990 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9011 ESCAPE 
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; IF C9>0 THEN GOSUB 8800; GOSUB 8600 ELSE GOSUB 6400
9520 ON C9 GOTO 1140,3310,4360,4310
9700 REM "PROG FLOW
9710 IF U1$="" THEN REMOVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9725 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9730 RUN U1$(1,6)
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
