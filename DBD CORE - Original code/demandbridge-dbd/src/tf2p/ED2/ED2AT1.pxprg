0010 REM "<ED2AT1> EDI ASCII Text Format 1 - 546/Meijer
0020 SETESC 9300; SETERR 9000
0035 REM "5.1 - 05/24/02 - 14.583333 - lms - SSP# 149419
0040 REM "Copyright 2002 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="ED2AT1",X1$="EDI Text Format 1"
0120 DIM Z0$(80,"-"),FILE$[150]
0130 K0=20,K1=1
0135 C9=-1
0170 IF POS("MS"=UCS(SYS)) THEN ISWIN=1 ELSE ISWIN=0
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0250 REM "Validate Company
0255 IF POS(X3$(9,3)="500546",3)=0 THEN GOTO 9920
0295 DIM Z0$(80,X3$(235,1)); Z0$=ESC+"BG"+Z0$+ESC+"EG"
0300 REM "Iolists
0310 IOLIST A$; REM "EM1
0420 IOLIST I$
0500 REM "Files
0505 DIM Z[NUM(X3$(60,3))]
0508 REM "Slot 1 used for 850 EDI file opened in 1000's
0509 REM "Slot 2 used for text file(s) created in 700's for ascii 850 Meijer
0510 Z$="03O EM1...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "
0610 GOSUB 6000
0620 PARM$=X3$(9,3)+"E/M"
0640 IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 0641,9900
0700 REM "Create Text File for 850
0705 NAME_1$="MI",EXT_1=0
0800 REM "Set Prefix
0820 DIR_IN$=""+HWD+DLM+"meijer_in"+DLM
0830 DIR_OUT$=""+HWD+DLM+"meijer_out"+DLM
0845 DIR_DATA$=%DATAPATH$
0900 REM "Read ZZPARM file for directory and hex codes
0910 DIM I$(384); READ (Z[13],KEY=PARM$,DOM=0911)IOL=0420
0915 ELEMENT_SEPARATOR$=ATH("2A"),SEGMENT_TERMINATOR$=ATH("5E"); REM "Setup for original values:  * and ^ respectively
0920 IF I$(309,2)<>"  " THEN ELEMENT_SEPARATOR$=ATH(I$(309,2))
0930 SEGMENT_TERMINATOR$="*"; REM "For Meijer File
1000 REM "Get list of 850 files to process
1005 I=-1,J=0
1010 IF X3$(77,10)="D" THEN TYPE$="dir " ELSE TYPE$="ls "
1012 DIR$="< "+TYPE$+DIR_IN$+"*.*"
1015 CLOSE (14); OPEN (14)DIR$
1016 SLOT=UNT
1020 READ (14,END=1031)AT$
1025 IF POS("not found"=AT$)<>0 OR POS("not exist"=AT$)<>0 THEN CALL "ZZPROM:,:.4",X3$,0,"There are no files to process","","",0; GOTO 9900
1030 FILE$[I+1]=AT$(1,LEN(AT$)); I=I+1; GOTO 1020
1060 CLOSE (SLOT); OPEN LOCK (SLOT,OPT="TEXT",ERR=5000)FILE$[J]; REM "Open fo"+      "r reading raw file
1065 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
1075 IF Q1$<>"G" THEN PRINT @(15,15),'CE',"Processing: "+FILE$[J]
1080 IF Q1$<>"G" THEN GOSUB 8100; GOSUB 8150
1100 REM "Process the file
1105 C=0,SEGMENT$=""
1110 READ (SLOT,END=1900)SEGMENT$
1115 IF LEN(SEGMENT$)=0 THEN GOTO 1110
1120 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1130 GOSUB BUILD_ARRAY
1140 ELEMENT$[1]=PAD(ELEMENT$[1],3)
1145 ON INT((POS(ELEMENT$[1]="ISAGS ST BEGPO1SDQSE ",3)+2)/3) GOSUB DONT_NEED,EL_ISA,EL_GS,EL_ST,EL_BEG,EL_PO1,EL_SDQ,EL_SE
1150 GOTO 1110
1200 BUILD_ARRAY:REM "Break segment into it's elements, [0] is unaltered s"+      "egment, [1] & so on are the elements
1201 REM "Assume < 50 elements for now
1205 DIM ELEMENT$[50]; ELEMENT$[0]=SEGMENT$,EL_INDEX=0
1220 P=POS(ELEMENT_SEPARATOR$=SEGMENT$),EL_INDEX=EL_INDEX+1
1225 IF P=0 THEN IF SEGMENT$(LEN(SEGMENT$),1)=SEGMENT_TERMINATOR$ THEN SEGMENT$=SEGMENT$(1,LEN(SEGMENT$)-1) END_IF ; ELEMENT$[EL_INDEX]=SEGMENT$; GOTO BUILD_ARRAY_END; REM "We have all the"+      " elements for this segment
1230 IF P=1 THEN ELEMENT$[EL_INDEX]=" ",SEGMENT$=SEGMENT$(P+1); GOTO 1220; REM "Blank element, set to one blank space
1235 ELEMENT$[EL_INDEX]=SEGMENT$(1,P-1),SEGMENT$=SEGMENT$(P+1); GOTO 1220
1295 BUILD_ARRAY_END:RETURN 
1600 GOTO 1110
1900 REM "End of file
1930 REM "Remove the file
1931 CLOSE (SLOT,ERR=1932)
1935 ERASE FILE$[J],ERR=1936
1985 J=J+1
1995 GOTO 1060
2000 DONT_NEED:REM "Don't need this segment, go get another one
2045 DONT_NEED_END:RETURN 
2050 EL_ISA:REM "ISA element
2095 EL_ISA_END:RETURN 
2100 EL_GS:REM "GS element, we need functional identifier code
2105 IF ELEMENT$[2]<>"PO" THEN S$="File: "+F1$+" contains a non PO transaction, need to check archive"; S1$="echo "+QUO+S$+QUO+" >> "+HWD+DLM+"MEI_LOG"; INVOKE S1$; EXITTO 1950
2145 EL_GS_END:RETURN 
2150 EL_ST:REM "Need transaction set identifier code
2160 IF ELEMENT$[2]<>"850" THEN S$="File: "+F1$+" contains a non 850 transaction, need to check archive"; S1$="echo "+QUO+S$+QUO+" >> "+HWD+DLM+"MEI_LOG"; INVOKE S1$; EXITTO 1950
2195 EL_ST_END:RETURN 
2200 EL_BEG:REM "Begin of 850; Write Header - ssp# 131122
2205 TXT_HEADER$="",TXT_LINE$="",TXT_END$=""
2210 LINE_COUNT=0
2225 PO_NUM$=PAD(FN%CVT4$(ELEMENT$[4]),15)
2230 TXT_HEADER$="**BEGIN"+FN%NTD$(CDN,"MM/DD/YYYY")+STR(EXT_1:"000")+PO_NUM$
2235 GOSUB 4000
2240 PRINT (40)TXT_HEADER$
2245 EL_BEG_END:RETURN 
2500 EL_PO1:REM "PO Lines - Get UPC number - ssp# 131122
2510 DIM UPC_ITEM$(12)
2520 UPC_ITEM$=PAD(FN%CVT4$(ELEMENT$[8]),12)
2595 EL_PO1_END:RETURN 
2800 EL_SDQ:REM "Destination Quantites - ssp# 131122
2810 DIM STORE$(20),STORE_QTY$(15)
2815 FOR LOOP=4 TO 22 STEP 2
2820 IF FN%CVT4$(STP(ELEMENT$[LOOP],1))="" THEN EXITTO 2895
2830 STORE$=PAD(FN%CVT4$(ELEMENT$[LOOP]),20)
2835 IF ELEMENT$[LOOP+1]="" THEN ELEMENT$[LOOP+1]="" ELSE ELEMENT$[LOOP+1]=STP(ELEMENT$[LOOP+1],3,$2A$)
2840 STORE_QTY$=STR(NUM(FN%CVT4$(ELEMENT$[LOOP+1]),ERR=2841):"##############0")
2850 TXT_LINE$=UPC_ITEM$+STORE$+STORE_QTY$
2860 PRINT (40)TXT_LINE$
2870 LINE_COUNT=LINE_COUNT+1
2875 NEXT LOOP
2895 EL_SDQ_END:RETURN 
2900 EL_SE:REM "Interchange Control Trailer, End of 850 - ssp# 131122
2910 TXT_END$="**END"+STR(LINE_COUNT:"##############0")
2920 PRINT (40)TXT_END$
2930 CLOSE (40)
2940 REM "Move the file
2945 RENAME DIR_IN$+TEXT$ TO DIR_OUT$+TEXT$+".txt"
2995 EL_SE_END:RETURN 
4000 REM "Create Text File for each 850
4010 PRECISION 8; DATE_STAMP$=FN%NTD$(CDN,"MMDDHHMISS"); PRECISION 2
4015 REM "LET TEXT$=NAME_1$+DATE_STAMP$; REM "SSP# 131689
4016 TEXT$=NAME_1$+STP(PO_NUM$,1); REM "SSP# 131689
4020 SERIAL DIR_IN$+TEXT$,0,0,ERR=4030; GOTO 4031
4030 REM "WAIT 1; GOTO 04000; REM "SSP# 131689
4040 EXT_1=EXT+1
4050 OPEN LOCK (40,OPT="TEXT")DIR_IN$+TEXT$; REM "Re-open with text file
4099 RETURN 
5000 REM "End of Job
5015 C=T; GOSUB 8150
5040 GOTO 9900
6000 REM "Background
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(0,4),"Translating Incoming 850s to ASCII Text File"
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
7500 REM "Convert date q$ into q0$
7501 REM "Q$ in YYYYMMDD format or YYMMDD
7505 Q0$=""
7506 IF STP(Q$,3," ")="" THEN GOTO 7545
7510 IF LEN(Q$)=8 THEN GOTO 7520 ELSE IF LEN(Q$)=6 THEN D1$=STR(NUM(Q$(1,2)):"00") ELSE GOTO 7545
7515 IF D1$<"50" THEN Q$="20"+Q$ ELSE Q$="19"+Q$
7520 Q0$=CHR(NUM(Q$(1,3),ERR=7521)-125)+Q$(4,1)+Q$(5,2)+Q$(7,2)
7545 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report everyT0 number of records) this is typically 2% of total;This also prints a message (@8115),so adjust accordingly
8105 T=0
8110 CLOSE (41); OPEN (41)"< cat "+FILE$[J]+" | wc -l"; READ (41)NUM_REC$
8115 T=NUM(NUM_REC$,ERR=8130)
8120 PRINT @(0,7),"There are "+STR(T)+" records to process"
8125 CLOSE (41)
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8135 T1=0
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhereelse)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "Error Processing
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM "Transfer Control
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "Ctrl Logic
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "End Program
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
