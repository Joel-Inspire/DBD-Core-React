0010 REM "<ED2PAY> EDI Payment/Remittance Advice Import
0020 SETESC 9300; SETERR 9000
0035 REM "5.0 - 03/06/02 - 9.846944 - dmm - SSP# 146801
0040 REM "Copyright 2002 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="ED2PAY",X1$="EDI Payment/Remittance Advice Import"
0120 DIM Z0$(80,"-"),FILE$[150]
0130 K0=20,K1=1
0135 C9=-1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "Iolists
0310 IOLIST EM1$; REM "EM1
0320 IOLIST B$
0420 IOLIST I$
0500 REM "Files
0505 DIM Z[NUM(X3$(60,3))]
0509 REM "Slot 1 used for ED0 file opened in 1000's, slot 2 used for text file created in 700's to write to
0510 Z$="03O EM1...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "
0610 GOSUB 6000
0620 PARM$=X3$(9,3)+"E/M"
0640 REM "IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"PROCEED?","","",0; ON Z GOTO 00641,09900
0700 NAME_1$="PA1.",EXT_1=1
0705 TEXT$=NAME_1$+STR(EXT_1:"000")
0710 SERIAL TEXT$,0,0,ERR=0711; GOTO 0712; REM "Create text file to write to
0711 EXT_1=EXT_1+1; GOTO 0705
0720 Z$="02CU 02O "+TEXT$+" "
0730 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0731,9900
0740 CLOSE (Z[2]); OPEN LOCK (Z[2],OPT="TEXT")TEXT$; REM "Re-open as a text file
0800 REM "Set Prefix
0900 REM "Read ZZPARM file for DIRectory
0910 READ (Z[13],KEY=PARM$,DOM=0911)IOL=0420
0915 ELEMENT_SEPARATOR$=ATH("2A"),SEGMENT_TERMINATOR$=ATH("5E"); REM "Setup for original values:  * and ^ respectively
0920 IF I$(309,2)<>"  " THEN ELEMENT_SEPARATOR$=ATH(I$(309,2))
0925 IF I$(311,2)<>"  " THEN SEGMENT_TERMINATOR$=ATH(I$(311,2))
1000 REM "Get list of .exp files to process
1005 I=-1,J=0
1010 IMPORT_PATH$=STP(I$(182,30),1)
1015 SELECT AT$ FROM IMPORT_PATH$
1030 IF AT$<>"." AND AT$<>".." THEN FILE$[I+1]=IMPORT_PATH$+AT$; I=I+1
1035 NEXT RECORD 
1036 SLOT=UNT
1060 CLOSE (SLOT); OPEN LOCK (SLOT,OPT="TEXT",ERR=5000)FILE$[J]; REM "Open for reading raw file
1065 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
1075 IF Q1$<>"G" THEN PRINT @(15,15),'CE',"Processing: "+FILE$[J]
1080 IF Q1$<>"G" THEN GOSUB 8100; GOSUB 8150
1100 REM "Process the file
1105 C=0,SEGMENT$=""
1110 READ (SLOT,END=1900)SEGMENT$
1120 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1130 GOSUB BUILD_ARRAY
1140 ELEMENT$[1]=PAD(ELEMENT$[1],3)
1145 ON INT((POS(ELEMENT$[1]="ISAGS ST BPRCURFOBN1 REFDTMTD5RMRSE ",3)+2)/3) GOSUB DONT_NEED,EL_ISA,EL_GS,EL_ST,EL_BPR,EL_CUR,EL_FOB,EL_N1,EL_REF,EL_DTM,EL_TD5,EL_RMR,EL_SE
1150 GOTO 1110
1200 BUILD_ARRAY:REM "Break segment into it's elements, [0] is unaltered segment, [1] & so on are the elements
1201 REM "Assume < 50 elements for now
1205 DIM ELEMENT$[50]; ELEMENT$[0]=SEGMENT$,EL_INDEX=0
1220 P=POS(ELEMENT_SEPARATOR$=SEGMENT$),EL_INDEX=EL_INDEX+1
1225 IF P=0 THEN IF SEGMENT$(LEN(SEGMENT$),1)=SEGMENT_TERMINATOR$ THEN SEGMENT$=SEGMENT$(1,LEN(SEGMENT$)-1) END_IF ; ELEMENT$[EL_INDEX]=SEGMENT$; GOTO BUILD_ARRAY_END; REM "We have all the elements for this segment
1230 IF P=1 THEN ELEMENT$[EL_INDEX]=" ",SEGMENT$=SEGMENT$(P+1); GOTO 1220; REM "Blank element, set to one blank space
1235 ELEMENT$[EL_INDEX]=SEGMENT$(1,P-1),SEGMENT$=SEGMENT$(P+1); GOTO 1220
1295 BUILD_ARRAY_END:RETURN 
1600 GOTO 1110
1900 REM "End of file
1930 REM "Remove the file
1935 ERASE FILE$[J],ERR=1936
1985 J=J+1
1995 GOTO 1060
2000 DONT_NEED:REM "Don't need this segment, go get another one
2045 DONT_NEED_END:RETURN 
2050 EL_ISA:REM "ISA element, we need trading partner ID
2052 DIM SOURCE$(3),VER$(3),FISCAL_YEAR$(4),ACCT_PER$(2),BANK_CODE$(3),DEP_NUM$(1),CUST$(10)
2053 DIM DT_PAID$(6),CUST_NUM$(10),PAY_NUM$(6),INV_NUM$(8),PAYER_NAME$(35),TTL_PAID$(8),PAY_METH$(3),DT_CREAT$(6),INV_PAID$(8),INV_DESC$(35)
2055 DIM SENDER$(15); SENDER$=ELEMENT$[7],CO1_HEADER$="",CO1_LINE$="",CO1_REC$=""
2060 DIM EM1$(255); FIND (Z[3],KEY=SENDER$,DOM=2061)IOL=0310
2065 SOURCE$="EDI",VER$="101"
2070 IF POS(" "<>EM1$(51,10))>0 THEN CUST$=EM1$(51,10) ELSE CUST$=SENDER$(1,10)
2080 CUST$=PAD(CUST$,10,"0")
2095 EL_ISA_END:RETURN 
2100 EL_GS:REM "GS element, we need functional identifier code
2105 IF ELEMENT$[2]<>"RA" THEN S$="File: "+F1$+" contains a non RA transaction, need to check archive"; S1$="echo "+QUO+S$+QUO+" >> "+HWD+DLM+"EDI_LOG"; INVOKE S1$; EXITTO 1950
2145 EL_GS_END:RETURN 
2150 EL_ST:REM "Need transaction set identifier code
2160 IF ELEMENT$[2]<>"820" THEN S$="File: "+F1$+" contains a non 820 transaction, need to check archive"; S1$="echo "+QUO+S$+QUO+" >> "+HWD+DLM+"EDI_LOG"; INVOKE S1$; EXITTO 1950
2195 EL_ST_END:RETURN 
2200 EL_BPR:REM "Begin Segment for Payment/Order Remittance Advice
2210 TRANS_CODE$=PAD(FN%CVT4$(ELEMENT$[2]),2); REM "Check for 'I'code = Remittance Info only
2215 PAY_AMT$=PAD(FN%CVT4$(ELEMENT$[3]),18); FORMAT_AMT$=PAY_AMT$; GOSUB 3000; PAY_AMT$=FORMAT_AMT$
2220 CR_DB_FLAG$=PAD(FN%CVT4$(ELEMENT$[4]),1)
2225 CUST_ALT$=PAD(FN%CVT4$(ELEMENT$[11]),10,"0"); REM "Check Originating Company Identifier
2230 DT_PAID$=PAD(FN%CVT4$(ELEMENT$[17]),8); REM "Check len of 8
2245 EL_BPR_END:RETURN 
2250 EL_FOB:REM "Not Used; Open for new
2295 EL_FOB_END:RETURN 
2300 EL_N1:REM "We need payer so only keep the N1 with the PR entity identifier code
2310 IF ELEMENT$[2]<>"PR" THEN GOTO EL_N1_END
2315 PAYER_NAME$=PAD(FN%CVT4$(ELEMENT$[3]),60)
2345 EL_N1_END:RETURN 
2350 EL_DTM:REM "Date/Time reference, we only need the 097 one which is the creation date
2360 IF ELEMENT$[2]<>"097" THEN GOTO EL_DTM_END
2365 DT_CREAT$=PAD(FN%CVT4$(ELEMENT$[3]),8); REM "Check len of 8
2395 EL_DTM_END:RETURN 
2400 EL_TD5:REM "Not Used; Open for new
2445 EL_TD5_END:RETURN 
2450 EL_CUR:REM "Currency Code
2495 EL_CUR_END:RETURN 
2500 EL_RMR:REM "These are the Cash Lines
2510 REM "IF ELEMENT$[2]<>"IV" THEN GOTO EL_RMR_END
2511 IF ELEMENT$[2]<>"CK" THEN GOTO EL_RMR_END
2515 REM "IF ELEMENT$[3] = "AJ" THEN   if blank paying open item else adj amount is in element[4]
2520 DIM INV_NUM$(8),INV_TTL$(12),INV_DISC$(12),INV_FRT$(12),INV_STAX$(12),INV_PAID$(12),GL_ADJ$(12),GL_ACCT$(12)
2525 INV_NUM$=PAD(FN%CVT4$(ELEMENT$[3]),8)
2530 INV_PAID$=PAD(FN%CVT4$(ELEMENT$[5]),10); FORMAT_AMT$=INV_PAID$; GOSUB 3000; INV_PAID$=FORMAT_AMT$
2535 INV_TTL$=PAD(FN%CVT4$(ELEMENT$[6]),10); FORMAT_AMT$=INV_TTL$; GOSUB 3000; INV_TTL$=FORMAT_AMT$
2540 INV_DISC$=PAD(FN%CVT4$(ELEMENT$[7]),10); FORMAT_AMT$=INV_DISC$; GOSUB 3000; INV_DISC$=FORMAT_AMT$
2550 CO1_LINE$=INV_NUM$+INV_TTL$+INV_DISC$+INV_FRT$+INV_STAX$+INV_PAID$+GL_ADJ$+GL_ACCT$
2595 EL_RMR_END:RETURN 
2600 EL_SE:REM "Interchange Control Trailer, we are done with this one
2610 CO1_HEADER$=FISCAL_YEAR$+ACCT_PER$+BANK_CODE$+DEP_NUM$+CUST$+PAY_NUM$
2620 CO1_REC$=CO1_HEADER$+CO1_LINE$
2630 PRINT (Z[2])CO1_REC$
2680 REM "***** Acknowledgement? ***** IF EM1$(72,1)="Y" THEN CALL "ED2POA",X3$,X4$,SOURCE$,VER$,SENDER$,CUST$,LOC$,ORD_BY$,REQ$,ATTN$,DT_REQ$,DT_ORD$,VIACODE$,VIADESC$,HOWCODE$,INSIDE$,WITH$,ADDR1$,ADDR2$,CITY$,STATE$,ZIP$,MARKFOR$,SALESTAX$,TAXABLE$,HEADWHSE$,SHIPNAME$,FO1_LINE$
2690 CO1_LINE$=""
2695 EL_SE_END:RETURN 
2700 EL_REF:REM "Need to get transaction number
2710 IF ELEMENT$[2]<>"CK" THEN GOTO 2750; REM " or TN transaction number
2715 PAY_NUM$=PAD(FN%CVT4$(ELEMENT$[3]),6)
2750 EL_REF_END:RETURN 
3000 REM "Format Numbers
3010 RAW_NUM=NUM(FORMAT_AMT$)
3020 FORMAT_AMT$=STR(RAW_NUM:"########.00-")
3040 RETURN 
5000 REM "EOJ
5001 XFD$=FN%XFD$(Z[2],0),TOT_REC=DEC(XFD$(38,4))
5003 CLOSE (Z[2])
5004 IF TOT_REC=0 THEN ERASE TEXT$; GOTO 5012
5005 NAME_2$="CR1.",EXT_2=1
5007 GOR$=NAME_2$+STR(EXT_2:"000")
5010 RENAME TEXT$,GOR$,ERR=5011; GOTO 5012; REM "Rename the ED1 file we wrote to, to an CR1 file to be used in the Cash Receipts Gateway
5011 EXT_2=EXT_2+1; GOTO 5007
5015 C=T; GOSUB 8150
5020 REM "IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"PROCESS COMPLETE!!","","",0
5040 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(0,4),"Translating Incoming EDI Payment Order/Remittance Advice"
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 T=0; CALL "ZZ2FNC;SERIALRECCNT",SLOT,T
8115 PRINT @(0,7),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "Error processing
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM "Transfer Control
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "Ctrl Logic
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "End Program
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9945 EXIT 
9950 RUN "ZMENU"
9999 END 
