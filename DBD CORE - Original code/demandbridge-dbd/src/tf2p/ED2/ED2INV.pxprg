0010 REM "<ED2INV> EDI Invoices
0020 SETESC 9300; SETERR 9000
0035 REM "5.2 - 03/02/04 - 10.901944 - lms - SSP# 167214
0040 REM "Copyright 2004 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="ED2INV",X1$="EDI Invoices"
0120 DIM Z0$(80,"-"),FILE$[10],A$(689),A[30],TMP$[30],Z2$(6," "),H$(230),H[29],L$(145),L[20]
0130 K0=20,K1=1,HLS=1,ST_COUNT=1,LINES=0,ORDER=1
0135 C9=-1,X$="810",C=0
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0200 REM "
0240 REM "CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 09920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15],A[16],A[17],A[18],A[19],A[20],A[21],A[22],A[23],A[24],A[25],A[26],A[27],A[28],A[29],A[30]
0320 IOLIST L$,L1$,L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12],L[13],L[14],L[15],L[16],L[17],L[18],L[19],L[20]
0330 IOLIST B$; REM "EM1
0340 IOLIST C$; REM "EMA
0350 IOLIST D$; REM "EMB
0360 IOLIST F$; REM "PO1
0370 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8],H[9],H[10],H[11],H[12],H[13],H[14],H[15],H[16],H[17],H[18],H[19],H[20],H[21],H[22],H[23],H[24],H[25],H[26],H[27],H[28],H[29]
0380 IOLIST G$; REM "EMD
0420 IOLIST I$; REM "ZZPARM
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O ARB...  02O ART...  03O EM1...  04O EMA... 05O EMB...  06O SM4...  07O FS2...  08O EMD...  09O EM8...  10O AR1...  12O EM2... 13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0560 REM "CALL "ZZPRIN",X0$,X3$,Y0$,V3$,Z[ALL],W0$,W1$,W0,W9,W2,W3,W4; ON W4 GOTO 00561,09920
0580 DEVICE=32408
0600 REM "
0620 PARM$=X3$(9,3)+"E/M"
0900 REM "Read ZZPARM file for DIRectory
0910 READ (Z[13],KEY=PARM$,DOM=9900)IOL=0420
0950 GOSUB 8600
0990 READ (Z[11],KEY="",DOM=0991)
1000 REM "READ FROM ARB FILE
1010 KT$=KEY(Z[11],END=5000)
1020 READ (Z[11],KEY=KT$)
1030 FIND (Z[1],KEY=KT$(11,14),DOM=1010)IOL=0310
1130 GOSUB 7500; IF FOUND_TPI$<>"Y" THEN GOTO 1010; REM "CHECK TO BUILD 810 FILE
2000 REM "Build 810 file
2010 GOSUB 2400; REM "Setup Channel for printing
2020 GOSUB 2500; REM "ISA Segment
2030 GOSUB 2600; REM "GS Segment
2040 GOSUB 2700; REM "ST Segment
2050 GOSUB 2800; REM "BIG Segment
2060 GOSUB 3500; REM "REF Segment
2070 GOSUB 3300; REM "N1 Segment
2080 GOSUB 3100; REM "N3 Segment
2090 GOSUB 3200; REM "N4 Segment
2100 GOSUB 3800; REM "ITD Segment
2110 GOSUB 2900; REM "DTM Segment
2120 GOSUB 3700; REM "FOB Segment
2130 GOSUB 7200; REM "IT1 Segment
2150 GOSUB 3000; REM "TDS Segment
2160 GOSUB 4000; REM "CAD Segment
2165 SEGMENT$="ITA-2"; GOSUB 3600; REM "ITA Segment for the entire order
2170 GOSUB 3900; REM "ISS Segment
2300 GOSUB 4500; REM "CTT - Transaction Totals
2310 GOSUB 4600; REM "SE - Transaction Set Trailer
2315 GOSUB 4900; REM "Read next record from file
2320 GOSUB 4700; REM "GE - Functional Group Trailer
2330 GOSUB 4800; REM "IEA - Interchange Trailer
2340 GOTO 5000
2400 REM "Set the channel up for printing
2410 FILE_NAME$=STR(NUM(A$(7,8)):"0000000000")+".out"
2415 PRINTER_CFG$=STP(I$(152,30),1)+FILE_NAME$
2420 DEV_CHANNEL=DEVICE,DEVICE_NAME$=I$(212,2); REM "FID(DEVICE)
2425 REM "Determine correct channel to close
2427 DEVICE_NAME$="P7"
2430 CLOSE (DEV_CHANNEL); OPEN (DEV_CHANNEL,OPT=PRINTER_CFG$)DEVICE_NAME$
2490 RETURN 
2500 REM "Build ISA Segment
2505 SEGMENT$="ISA  ",OUT$="ISA"+B$(120,1)
2507 GOSUB 7000; REM "GET NUMBER OF ELEMENTS FOR SEGMENT
2510 GOSUB 7100; REM "BREAK RECORD INTO STRING ARRAY
2515 IF D$(19,1)<>"Y" THEN GOTO 2595
2520 FOR I=1 TO NUM(G$(9,3))
2575 IF I=6 THEN TMP$[I]=TMP$[I]+Z2$ ELSE IF I=8 THEN TMP$[I]=TMP$[I]+Z2$
2580 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
2585 OUT$=OUT$+TMP$[I]+B$(120,1)
2590 NEXT I
2591 OUT$=OUT$(1,LEN(OUT$)-1)
2592 PRINT (DEV_CHANNEL)OUT$
2595 RETURN 
2600 REM "Build GS Segment
2610 SEGMENT$="GS   ",OUT$="GS"+B$(120,1)
2615 GOSUB 7000; REM "GET NUMBER OF ELEMENTS FOR SEGMENT
2620 GOSUB 7100; REM "BREAK RECORD INTO STRING ARRAY
2630 IF D$(19,1)<>"Y" THEN GOTO 2695
2660 FOR I=1 TO NUM(G$(9,3))
2670 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
2680 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
2690 NEXT I
2691 OUT$=OUT$(1,LEN(OUT$)-1)
2692 PRINT (DEV_CHANNEL)OUT$
2695 RETURN 
2700 REM "Build ST Segment
2710 SEGMENT$="ST   ",OUT$="ST"+B$(120,1)
2715 GOSUB 7000; REM "GET NUMBER OF ELEMENTS FOR SEGMENT
2720 GOSUB 7100; REM "BREAK RECORD INTO STRING ARRAY
2730 IF D$(19,1)<>"Y" THEN GOTO 2795
2760 FOR I=1 TO NUM(G$(9,3))
2770 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
2775 IF I=2 THEN TMP$[I]=STR(ST_COUNT:"000000000")
2780 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
2790 NEXT I
2791 OUT$=OUT$(1,LEN(OUT$)-1)
2792 PRINT (DEV_CHANNEL)OUT$
2793 GOSUB 7800
2795 RETURN 
2800 REM "Build BIG Segment
2810 SEGMENT$="BIG  ",OUT$="BIG"+B$(120,1)
2815 GOSUB 7000; REM "GET NUMBER OF ELEMENTS FOR SEGMENT
2820 GOSUB 7100; REM "BREAK RECORD INTO STRING ARRAY
2830 IF D$(19,1)<>"Y" THEN GOTO 2895
2860 FOR I=1 TO NUM(G$(9,3))
2865 IF I=1 THEN TMP$[I]=FNE$(A$(86,6)) ELSE IF I=2 THEN TMP$[I]=A$(7,8) ELSE IF I=4 THEN TMP$[I]=A$(100,15)
2870 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
2880 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
2890 NEXT I
2891 OUT$=OUT$(1,LEN(OUT$)-1)
2892 PRINT (DEV_CHANNEL)OUT$
2893 GOSUB 7800
2895 RETURN 
2900 REM "Build DTM Segment
2910 SEGMENT$="DTM  ",OUT$="DTM"+B$(120,1)
2915 GOSUB 7000; REM "GET NUMBER OF ELEMENTS FOR SEGMENT
2920 GOSUB 7100; REM "BREAK RECORD INTO STRING ARRAY
2930 IF D$(19,1)<>"Y" THEN GOTO 2995
2960 FOR I=1 TO NUM(G$(9,3))
2965 IF I=2 THEN Z9$=A$(180,6); TMP$[I]=FNE$(Z9$); REM "Convert shipped on date to 'YYMMDD'
2970 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
2980 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
2990 NEXT I
2991 OUT$=OUT$(1,LEN(OUT$)-1)
2992 PRINT (DEV_CHANNEL)OUT$
2993 GOSUB 7800
2995 RETURN 
3000 REM "TDS Segment
3010 SEGMENT$="TDS  ",OUT$="TDS"+B$(120,1)
3015 GOSUB 7000; REM "GET NUMBER OF ELEMENTS FOR SEGMENT
3020 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3030 IF D$(19,1)<>"Y" THEN GOTO 3095
3060 FOR I=1 TO NUM(G$(9,3))
3065 IF I=1 OR I=2 THEN TMP$[I]=STR(A[9]) ELSE IF I=3 THEN TMP$[I]=STR(A[1]-A[10]) ELSE IF I=4 THEN TMP$[I]=STR(A[10])
3067 TMP$[I]=CVS(TMP$[I],16)
3070 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
3075 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3080 NEXT I
3085 OUT$=OUT$(1,LEN(OUT$)-1)
3090 PRINT (DEV_CHANNEL)OUT$
3093 GOSUB 7800
3095 RETURN 
3100 REM "Build N3 Segment
3105 SEGMENT$="N3   ",OUT$="N3"+B$(120,1)
3110 GOSUB 7000; REM "GET NUMBER OF ELEMENTS FOR SEGMENT
3120 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3130 IF D$(19,1)<>"Y" THEN GOTO 3190
3160 FOR I=1 TO NUM(G$(9,3))
3170 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
3175 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3180 NEXT I
3182 OUT$=OUT$(1,LEN(OUT$)-1)
3185 PRINT (DEV_CHANNEL)OUT$
3187 GOSUB 7800
3190 RETURN 
3200 REM "Build N4 Segment
3210 SEGMENT$="N4   ",OUT$="N4"+B$(120,1)
3220 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
3230 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3240 IF D$(19,1)<>"Y" THEN GOTO 3290
3250 FOR I=1 TO NUM(G$(9,3))
3260 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
3270 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3275 NEXT I
3277 OUT$=OUT$(1,LEN(OUT$)-1)
3280 PRINT (DEV_CHANNEL)OUT$
3285 GOSUB 7800
3290 RETURN 
3300 REM "Build N1 Segment
3310 SEGMENT$="N1   ",OUT$="N1"+B$(120,1)
3320 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
3330 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3340 IF D$(19,1)<>"Y" THEN GOTO 3390
3350 FOR I=1 TO NUM(G$(9,3))
3360 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
3370 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3375 NEXT I
3377 OUT$=OUT$(1,LEN(OUT$)-1)
3380 PRINT (DEV_CHANNEL)OUT$
3385 GOSUB 7800
3390 RETURN 
3400 REM "Build IT1 Segment
3410 SEGMENT$="IT1  ",OUT$="IT1"+B$(120,1)
3420 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
3430 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3440 IF D$(19,1)<>"Y" THEN GOTO 3490
3450 FOR I=1 TO NUM(G$(9,3))
3460 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
3465 IF I=2 THEN TMP$[I]=STR(L[1]) ELSE IF I=3 THEN GOSUB 7400 ELSE IF I=4 THEN TMP$[I]=STR(L[2]) ELSE IF I=7 THEN TMP$[I]=L1$(65,10) ELSE IF I=9 THEN TMP$[I]=L1$(65,10)
3470 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3475 NEXT I
3477 OUT$=OUT$(1,LEN(OUT$)-1)
3480 PRINT (DEV_CHANNEL)OUT$
3485 GOSUB 7800
3487 SHIPPED=SHIPPED+A[1],LINES=LINES+1
3490 RETURN 
3500 REM "Build REF Segment
3510 SEGMENT$="REF  ",OUT$="REF"+B$(120,1)
3520 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
3530 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3540 IF D$(19,1)<>"Y" THEN GOTO 3590
3550 FOR I=1 TO NUM(G$(9,3))
3555 IF I=2 THEN TMP$[I]=A$(187,4)
3560 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
3570 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3575 NEXT I
3577 OUT$=OUT$(1,LEN(OUT$)-1)
3580 PRINT (DEV_CHANNEL)OUT$
3585 GOSUB 7800
3590 RETURN 
3600 REM "Build ITA Segment
3620 OUT$="ITA"+B$(120,1)
3625 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
3630 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3640 IF D$(19,1)<>"Y" THEN GOTO 3690
3650 FOR I=1 TO NUM(G$(9,3))
3660 IF I=6 THEN TMP$[I]=STR(L[2]) ELSE IF I=7 THEN TMP$[I]=CVS(STR(L[4]),16)
3670 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3675 NEXT I
3677 OUT$=OUT$(1,LEN(OUT$)-1)
3680 PRINT (DEV_CHANNEL)OUT$
3685 GOSUB 7800
3690 RETURN 
3700 REM "Build FOB Segment
3710 SEGMENT$="FOB  ",OUT$="FOB"+B$(120,1)
3720 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
3730 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3740 IF D$(19,1)<>"Y" THEN GOTO 3790
3750 FOR I=1 TO NUM(G$(9,3))
3770 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3775 NEXT I
3777 OUT$=OUT$(1,LEN(OUT$)-1)
3780 PRINT (DEV_CHANNEL)OUT$
3785 GOSUB 7800
3790 RETURN 
3800 REM "Build ITD Segment
3810 SEGMENT$="ITD  ",OUT$="ITD"+B$(120,1)
3820 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
3830 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3840 IF D$(19,1)<>"Y" THEN GOTO 3890
3845 DT$=FND$(A$(122,6)); DT$=DT$(9,2)+DT$(1,2)+DT$(4,2)
3846 DT1$=FND$(A$(116,6)); DT1$=DT1$(9,2)+DT1$(1,2)+DT1$(4,2)
3850 FOR I=1 TO NUM(G$(9,3))
3860 IF I=3 THEN TMP$[I]=DT$ ELSE IF I=6 THEN TMP$[I]=DT1$
3870 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3875 NEXT I
3877 OUT$=OUT$(1,LEN(OUT$)-1)
3880 PRINT (DEV_CHANNEL)OUT$
3885 GOSUB 7800
3890 RETURN 
3900 REM "Build ISS Segment
3910 SEGMENT$="ISS  ",OUT$="ISS"+B$(120,1)
3920 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
3930 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
3940 IF D$(19,1)<>"Y" THEN GOTO 3990
3950 FOR I=1 TO NUM(G$(9,3))
3955 IF I=1 THEN TMP$[I]=STR(SHIPPED) ELSE IF I=3 THEN TMP$[I]=STR(WEIGHT)
3960 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
3970 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
3975 NEXT I
3977 OUT$=OUT$(1,LEN(OUT$)-1)
3980 PRINT (DEV_CHANNEL)OUT$
3985 GOSUB 7800
3990 RETURN 
4000 REM "Build CAD Segment
4010 SEGMENT$="CAD  ",OUT$="CAD"+B$(120,1)
4020 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
4030 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
4040 IF D$(19,1)<>"Y" THEN GOTO 4090
4050 FOR I=1 TO NUM(G$(9,3))
4060 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
4065 IF I=8 THEN TMP$[I]=SM0$
4070 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
4075 NEXT I
4077 OUT$=OUT$(1,LEN(OUT$)-1)
4080 PRINT (DEV_CHANNEL)OUT$
4085 GOSUB 7800
4090 RETURN 
4500 REM "Build CTT Segment
4510 SEGMENT$="CTT  ",OUT$="CTT"+B$(120,1)
4520 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
4530 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
4550 FOR I=1 TO NUM(G$(9,3))
4560 IF I=1 THEN TMP$[I]=STR(LINES:"000000")
4570 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
4575 NEXT I
4577 OUT$=OUT$(1,LEN(OUT$)-1)
4580 PRINT (DEV_CHANNEL)OUT$
4585 GOSUB 7800
4590 RETURN 
4600 REM "Build SE Segment
4610 SEGMENT$="SE   ",OUT$="SE"+B$(120,1)
4620 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
4630 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
4640 GOSUB 7800
4650 FOR I=1 TO NUM(G$(9,3))
4655 IF I=1 THEN TMP$[I]=STR(C)
4660 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
4665 IF I=2 THEN TMP$[I]=STR(ST_COUNT:"000000000")
4670 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
4675 NEXT I
4677 OUT$=OUT$(1,LEN(OUT$)-1)
4680 PRINT (DEV_CHANNEL)OUT$
4685 ST_COUNT=ST_COUNT+1
4690 RETURN 
4700 REM "Build GE Segment
4710 SEGMENT$="GE   ",OUT$="GE"+B$(120,1)
4720 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
4730 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
4750 FOR I=1 TO NUM(G$(9,3))
4760 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
4762 IF I=1 THEN TMP$[I]=STR(ORDER:"000000")
4765 IF I=2 THEN TMP$[I]=STR(NUM(TMP$[I]))
4770 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
4775 NEXT I
4777 OUT$=OUT$(1,LEN(OUT$)-1)
4780 PRINT (DEV_CHANNEL)OUT$
4790 RETURN 
4800 REM "Build IEA Segment
4810 SEGMENT$="IEA  ",OUT$="IEA"+B$(120,1)
4820 GOSUB 7000; REM "GET NUMBER OF RECORDS FOR SEGMENT
4830 GOSUB 7100; REM "BREAK RECORD DOWN INTO STRING ARRAY
4850 FOR I=1 TO NUM(G$(9,3))
4860 IF TMP$[I](1,1)="{" THEN CALL "EM2CVT",X3$,X4$,TMP$[I],VALUE$; TMP$[I]=VALUE$
4870 OUT$=OUT$+TMP$[I]+B$(120,1); REM "ACTUAL EDI FILE TO USE
4875 NEXT I
4877 OUT$=OUT$(1,LEN(OUT$)-1)
4880 PRINT (DEV_CHANNEL)OUT$
4890 RETURN 
4900 REM "Read next record and set counters back to zero
4910 KT$=KEY(Z[11],END=2320)
4920 READ (Z[11],KEY=KT$)
4925 FIND (Z[3],KEY=KT$(1,10)+"     ",DOM=4910)IOL=0330
4950 IF B$(73,1)<>"Y" THEN GOTO 4910
4955 FIND (Z[1],KEY=KT$(11,14),DOM=4910)IOL=0310
4960 HLS=1,C=0,LINES=0,ORDER=ORDER+1
4970 GOTO 2040
5000 REM "EOJ
5040 GOTO 9900
7000 REM "GET NUMBER OF ELEMENTS FOR SEGMENT
7010 READ (Z[8],KEY="810"+SEGMENT$+"zzz",DOM=7011)
7020 K$=KEP(Z[8])
7030 READ (Z[8],KEY=K$)IOL=0380
7090 RETURN 
7105 DIM TMP$[20]
7110 READ (Z[5],KEY=A$(15,10)+X$+SEGMENT$,DOM=7190)IOL=0350
7120 IF D$(19,1)<>"Y" THEN GOTO 7190
7130 TMP$=D$(20)
7140 FOR I=1 TO LEN(TMP$)
7150 IF LEN(TMP$)=0 THEN EXITTO 7190
7160 TMP$[I]=TMP$(1,POS("*"=TMP$)-1)
7170 TMP$=TMP$(POS("*"=TMP$)+1)
7180 NEXT I
7190 RETURN 
7200 REM "Build IT1, ITA Segments
7202 KT=A[20]
7205 IF KT<=0 THEN GOTO 7290 ELSE READ (Z[2],IND=KT,END=7290)IOL=0320
7210 IF NUM(L$)=0 THEN GOTO 7390 ELSE KT=NUM(L$)
7250 GOSUB 3400; REM "IT1 Segment
7255 SEGMENT$="ITA  "; GOSUB 3600; REM "ITA Segment
7260 GOTO 7205
7290 RETURN 
7400 REM "Find U/M
7410 DIM UM$(20); UM$(5,15)=L1$(50,4); READ (Z[9],KEY=L1$(50,4),DOM=7411)UM$
7415 TMP$[I]=STP(UM$(5,15),1)
7450 RETURN 
7500 REM "Read in B$ as Trading Partner ID, search those for the customer in the KT$ record. Pick the 1st one with recv inv = Y, if found, FOUND_TPI$="Y", B$ is the record, else FOUND_TPI$="N", B$ undefined
7505 FOUND_TPI$="N"; DIM B$(255)
7510 READ (Z[12],KEY=A$(15,10),DOM=7511)
7515 KEY_12$=KEY(Z[12],END=7535); IF KEY_12$(1,10)<>A$(15,10) THEN GOTO 7535 ELSE READ (Z[12])
7520 READ (Z[3],KEY=KEY_12$(11),DOM=7530)IOL=0330
7525 IF B$(73,1)="Y" THEN FOUND_TPI$="Y"; GOTO 7535
7530 GOTO 7515
7545 RETURN 
7800 REM "Keep track of number of segements used
7810 C=C+1
7850 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 CALL "ZZINFO",Z[1],T9,X3$,T,T0,K,B,D,S0,S1,F1$
8115 REM "PRINT @(0,7),"THERE ARE "+STR(T)+" RECORDS TO PROCESS"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8600 REM "Create Sort
8610 Y$="EDI Invoices"
8620 CALL "ZZ2SRT",X3$,X4$,Z[13],Z[1],24,Y$,K1,"NN"
8630 Y$="11O "+Y$; GOSUB 9750; U1=Z[11]
8640 READ (Z[1],KEY="",DOM=8641)
8650 READ (Z[1],END=8690)IOL=0310
8675 PRINT @(10,23),A$(15,10)+"-"+A$(1,14)
8680 WRITE (Z[11],KEY=A$(15,10)+A$(1,14)); GOTO 8650
8690 RETURN 
8910 DEF FNE$(Z9$)=STR((ASC(Z9$(1,1))-65)*10+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"##")+Z9$(3,2)+Z9$(5,2)
8920 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9750 REM "OPEN FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
9770 RETURN 
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9945 EXIT 
9950 RUN "ZMENU"
9999 END 
