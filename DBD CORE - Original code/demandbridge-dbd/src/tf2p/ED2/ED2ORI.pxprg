0010 REM "<ED2ORI> EDI Order Inquiry Import
0020 SETESC 9300; SETERR 9000
0035 REM "5.3 - 11/08/04 - 14.596388 - jme - SSP# 177423
0040 REM "Copyright 2004 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 IF %GUI=0 THEN SETERR 9000
0110 X0$="ED2ORI",X1$="EDI Order Inquiry Import"
0120 DIM Z0$(80,"-"),FILE$[150]
0130 K0=20,K1=1
0135 C9=-1
0200 REM "
0240 IF %GUI=0 THEN CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9900
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$; REM "EM1
0320 IOLIST B$
0420 IOLIST I$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0509 REM "Slot 1 used for ED0 file opened in 1000's, slot 2 used for text file created in 700's to write to
0510 Z$="03O EM1...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "
0610 IF %GUI=0 THEN GOSUB 6000
0620 PARM$=X3$(9,3)+"E/M"
0640 REM "IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"PROCEED?","","",0; ON Z GOTO 00641,09900
0715 NAME_1$="OR1.",EXT_1=1
0720 TEXT$=NAME_1$+STR(EXT_1:"000")
0730 SERIAL TEXT$,0,0,ERR=0731; GOTO 0751
0740 REM "Create a text file to write to
0750 EXT_1=EXT_1+1; GOTO 0720
0760 Z$="04CU 04O "+TEXT$+" "
0770 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0771,9900
0780 CLOSE (Z[4]); OPEN LOCK (Z[4],OPT="TEXT")TEXT$; REM "REOPEN AS A TEXT FILE
0800 REM "Set Prefix
0900 REM "Read ZPARM file DIR DIRectory
0910 READ (Z[13],KEY=PARM$)IOL=0420
0915 ELEMENT_SEPARATOR$=ATH("2A"),SEGMENT_TERMINATOR$=ATH("5E"); REM "Setup for original values:  * and ^ respectively
0920 IF I$(309,2)<>"  " THEN ELEMENT_SEPARATOR$=ATH(I$(309,2))
0925 IF I$(311,2)<>"  " THEN SEGMENT_TERMINATOR$=ATH(I$(311,2))
1000 REM "Get list of files to process
1005 I=-1,J=0
1010 IMPORT_PATH$=STP(I$(182,30),1)
1015 SELECT A$ FROM IMPORT_PATH$
1030 IF A$<>"." AND A$<>".." THEN FILE$[I+1]=STP(I$(182,30),1)+A$; I=I+1
1035 NEXT RECORD 
1060 CLOSE (5); OPEN LOCK (5,OPT="TEXT",ERR=5000)FILE$[J]; REM "Open for reading raw file
1065 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
1080 GOSUB 8100; GOSUB 8150
1100 REM "Process the file
1105 C=0,SEGMENT$=""
1110 READ (5,END=1900)SEGMENT$
1120 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1130 GOSUB 1200; REM "Break segment into elements
1140 ELEMENT$[1]=PAD(ELEMENT$[1],3)
1145 ON INT((POS(ELEMENT$[1]="ISAGS ST BSIHL PRFDTMREFN1 REFPERLINCTTSE GE IEA",3)+2)/3) GOSUB DONT_NEED,EL_ISA,EL_GS,EL_ST,EL_BSI,EL_HL,EL_PRF,EL_DTM,DONT_NEED,EL_N1,DONT_NEED,EL_PER,EL_LIN,DONT_NEED,DONT_NEED,DONT_NEED,EL_IEA
1150 GOTO 1110
1200 REM "Break segment into it's elements
1201 REM "Assume < 50 elements for now
1205 DIM ELEMENT$[50]; ELEMENT$[0]=SEGMENT$,EL_INDEX=0
1220 P=POS(ELEMENT_SEPARATOR$=SEGMENT$),EL_INDEX=EL_INDEX+1
1225 IF P=0 THEN IF SEGMENT$(LEN(SEGMENT$),1)=SEGMENT_TERMINATOR$ THEN SEGMENT$=SEGMENT$(1,LEN(SEGMENT$)-1) END_IF ; ELEMENT$[EL_INDEX]=SEGMENT$; GOTO BUILD_ARRAY_END; REM "We have all the elements for this segment
1230 IF P=1 THEN ELEMENT$[EL_INDEX]=" ",SEGMENT$=SEGMENT$(P+1); GOTO 1220; REM "Blank element, set to one blank space
1235 ELEMENT$[EL_INDEX]=SEGMENT$(1,P-1),SEGMENT$=SEGMENT$(P+1); GOTO 1220
1295 BUILD_ARRAY_END:RETURN 
1600 GOTO 1110
1900 REM "End of file
1910 CLOSE (5)
1930 REM "Remove the file
1935 ERASE FILE$[J]
1980 J=J+1
1990 GOTO 1060
2000 DONT_NEED:REM "Don't need this segment, go get another one
2045 DONT_NEED_END:RETURN 
2050 EL_ISA:REM "ISA element, we need trading partner ID
2052 DIM SOURCE$(3),VER$(3),CUST$(10),LOC$(4),ORD_BY$(20),REQ$(15),ATTN$(30),DT_REQ$(6),VIACODE$(1),VIADESC$(15),HOWCODE$(1),INSIDE$(15),WITH$(15),ADDR1$(30),ADDR2$(30),CITY$(16),STATE$(2),ZIP$(9),MARKFOR$(35),SALESTAX$(10),TAXABLE$(1),HEADWHSE$(4),SHIPNAME$(35)
2055 DIM SENDER$(15); SENDER$=ELEMENT$[7],FO1_HEADER$="",FO1_LINE$="",FO1_REC$=""
2060 DIM A$(72); FIND (Z[3],KEY=SENDER$,DOM=2061)IOL=0310
2065 SOURCE$="EDI",VER$="101"
2070 IF POS(" "<>A$(51,10))>0 THEN CUST$=A$(51,10) ELSE CUST$=MID(SENDER$,1,10)
2095 EL_ISA_END:RETURN 
2100 EL_GS:REM "GS element, we need functional identifier code
2105 IF ELEMENT$[2]<>"RS" THEN S$="File: "+F1$+" contains a non RS transaction, need to check archive"; S1$="echo "+QUO+S$+QUO+" >> "+HWD+DLM+"EDI_LOG"; INVOKE S1$; EXITTO 1950
2135 IF Q1$<>"" AND %GUI=0 THEN PRINT @(15,15),'CE',"Processing: "+FILE$[J],
2145 EL_GS_END:RETURN 
2150 EL_ST:REM "Need transaction set identifier code
2160 IF ELEMENT$[2]<>"869" THEN S$="File: "+F1$+" contains a non 869 transaction, need to check archive"; S1$="echo "+QUO+S$+QUO+" >> "+HWD+DLM+"EDI_LOG"; INVOKE S1$; EXITTO 1950
2195 EL_ST_END:RETURN 
2200 EL_BSI:REM "
2202 DIM BSI$[50]
2203 FOR I=1 TO 50; BSI$[I]=ELEMENT$[I]; NEXT I
2205 REM "PAD(CVT(ELEMENT$[4],4),15)
2245 EL_BEG_END:RETURN 
2250 EL_HL:REM "Hierarchical Level
2253 DIM HL$[50]
2255 FOR I=1 TO 50; HL$[I]=ELEMENT$[I]; NEXT I
2260 REM "LET HL$=ELEMENT$[0]
2295 EL_HL_END:RETURN 
2300 EL_N1:REM "We need to know who request was item so only keep the N1 with the BY entity identifier code
2310 IF ELEMENT$[2]<>"BY" THEN GOTO EL_N1_END
2320 LOC$=PAD(FN%CVT4$(ELEMENT$[5]),15)
2325 SHIPNAME$=PAD(FN%CVT4$(ELEMENT$[3]),35)
2330 REM "READ (2,END=01900) SEGMENT$; GOSUB BUILD_ARRAY; LET ELEMENT$[1]=PAD(ELEMENT$[1],3)
2335 REM "IF ELEMENT$[1]="N2 " THEN LET ATTN$=PAD(CVT(ELEMENT$[2],4),30); GOTO 02330
2337 REM "IF ELEMENT$[1]="N3 " THEN LET ADDR1$=PAD(CVT(ELEMENT$[2],4),30), ADDR2$=PAD(CVT(ELEMENT$[3],4),30); GOTO 02330
2340 REM "IF ELEMENT$[1]="N4 " THEN LET CITY$=PAD(CVT(ELEMENT$[2],4),16), STATE$=PAD(CVT(ELEMENT$[3],4),2), ZIP$=PAD(CVT(ELEMENT$[4],4),9); GOTO EL_N1_END
2342 REM "EXITTO 01145
2345 EL_N1_END:RETURN 
2350 EL_DTM:REM "Date/Time reference, we only need the 002 one which is the delivery requested date
2360 IF ELEMENT$[2]="002" THEN DT_REQ$=PAD(FN%CVT4$(ELEMENT$[3]),6)
2395 EL_DTM_END:RETURN 
2400 EL_TD5:REM "Carrier Details, we need the ship via description
2410 VIADESC$=PAD(ELEMENT$[4],15)
2445 EL_TD5_END:RETURN 
2450 EL_TAX:REM "Tax Reference
2460 SALESTAX$=PAD(ELEMENT$[2],10)
2470 IF PAD(FN%CVT4$(ELEMENT$[13]),1)="1" THEN TAXABLE$="N"
2495 EL_TAX_END:RETURN 
2500 EL_LIN:REM "These are the PO lines
2510 DIM FIRSTTEN$(10),ITEM$(10),WHSE$(4),UM$(4),QTYPER$(6),QUANTITY$(7)
2515 QUANTITY$=PAD(FN%CVT4$(ELEMENT$[3]),7)
2520 ITEM$=PAD(FN%CVT4$(ELEMENT$[8]),10)
2550 FO1_LINE$=FO1_LINE$+FIRSTTEN$+ITEM$+WHSE$+UM$+QTYPER$+QUANTITY$
2595 EL_LIN_END:RETURN 
2600 EL_IEA:REM "Interchange Control Trailer, we are done with this one
2610 REM "LET FO1_HEADER$=SOURCE$+VER$+CUST$+LOC$+ORD_BY$+REQ$+ATTN$+DT_REQ$+VIACODE$+VIADESC$+HOWCODE$+INSIDE$+WITH$+ADDR1$+ADDR2$+CITY$+STATE$+ZIP$+MARKFOR$+SALESTAX$+TAXABLE$+HEADWHSE$+SHIPNAME$
2630 CALL "ED2ORR",X3$,X4$,LOC$,SHIPNAME$,BSI${ALL},HL${ALL},PER${ALL},PRF${ALL}; REM "WRITE (Z[4]) LOC$+$0D0A$+SHIPNAME$+$0D0A$+REQ$+$0D0A$+HL$+$0D0A$+PER$+$0D0A$+PRF$
2695 EL_IEA_END:RETURN 
2700 EL_PRF:REM "Purchase Order Ref
2710 DIM PRF$[50]
2720 FOR I=1 TO 50; PRF$[I]=ELEMENT$[I]; NEXT I
2750 EL_PRF_END:RETURN 
2800 EL_PER:REM "Administrative Communications Contact
2810 DIM PER$[50]
2820 FOR I=1 TO 50; PER$[I]=ELEMENT$[I]; NEXT I
2850 EL_PER_END:RETURN 
5000 REM "EOJ
5010 C=T; GOSUB 8150
5040 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(0,4),"Translating Incoming EDI Order Inquiry Records"
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 T=0; CALL "ZZ2FNC;SERIALRECCNT",5,T
8115 IF %GUI=0 THEN PRINT @(0,7),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
