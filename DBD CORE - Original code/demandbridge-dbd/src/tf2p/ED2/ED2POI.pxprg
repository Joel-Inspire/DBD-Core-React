0010 REM "<ED2POI> EDI Purchase Order Import
0020 SETESC 9300; SETERR 9000
0035 REM "5.4 - 08/26/05 - 13.046944 - lms - SSP# 187044
0040 REM "Copyright 2005 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 IF %GUI=0 THEN SETERR 9000
0110 X0$="ED2POI",X1$="EDI Purchase Order Import"
0120 DIM Z0$(80,"-"),FILE$[150]
0130 K0=20,K1=1
0135 C9=-1
0200 REM "
0240 IF %GUI=0 THEN CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$; REM "EM1
0320 IOLIST B$
0420 IOLIST I$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0509 REM "Slot 1 used for ED0 file opened in 1000's, slot 2 used for text file created in 700's to write to
0510 Z$="03O EM1...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "
0610 IF %GUI=0 THEN GOSUB 6000
0620 PARM$=X3$(9,3)+"E/M"
0640 REM "IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"PROCEED?","","",0; ON Z GOTO 00641,09900
0700 NAME_1$="ED1.",EXT_1=1
0705 TEXT$=NAME_1$+STR(EXT_1:"000")
0710 SERIAL TEXT$,0,0,ERR=0711; GOTO 0712; REM "Create text file to write to
0711 EXT_1=EXT_1+1; GOTO 0705
0720 Z$="02CU 02O "+TEXT$+" "
0730 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0731,9900
0740 CLOSE (Z[2]); OPEN LOCK (Z[2],OPT="TEXT")TEXT$; REM "Re-open as a text file
0750 CHANNEL=244; OPEN (CHANNEL,BSZ=2048)"*MEMORY*"
0800 REM "Set Prefix
0900 REM "Read ZZPARM file for DIRectory and hex codes
0910 DIM I$(384); READ (Z[13],KEY=PARM$,DOM=0911)IOL=0420
0915 ELEMENT_SEPARATOR$=ATH("2A"),SEGMENT_TERMINATOR$=ATH("5E"); REM "Setup for original values:  * and ^ respectively
0920 IF I$(309,2)<>"  " THEN ELEMENT_SEPARATOR$=ATH(I$(309,2))
0925 IF I$(311,2)<>"  " THEN SEGMENT_TERMINATOR$=ATH(I$(311,2))
1000 REM "Get list of .exp files to process
1005 I=-1,J=0
1010 IMPORT_PATH$=STP(I$(182,30),1)
1015 SELECT AT$ FROM IMPORT_PATH$
1030 IF AT$<>"." AND AT$<>".." THEN FILE$[I+1]=IMPORT_PATH$+AT$; I=I+1
1035 NEXT RECORD 
1036 SLOT=UNT
1060 CLOSE (SLOT); OPEN LOCK (SLOT,OPT="TEXT",ERR=5000)FILE$[J]; REM "Open for reading raw file
1065 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
1075 IF Q1$<>"" AND %GUI=0 THEN PRINT @(15,15),'CE',"Processing: "+FILE$[J]
1080 GOSUB 8100; GOSUB 8150
1100 REM "Process the file
1105 C=0,SEGMENT$=""
1110 READ (SLOT,END=1900)SEGMENT$
1120 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1130 GOSUB BUILD_ARRAY
1140 ELEMENT$[1]=PAD(ELEMENT$[1],3)
1145 ON INT((POS(ELEMENT$[1]="ISAGS ST BEGTAXFOBN1 REFDTMTD5PO1SE PIDSDQ",3)+2)/3) GOSUB DONT_NEED,EL_ISA,EL_GS,EL_ST,EL_BEG,EL_TAX,EL_FOB,EL_N1,EL_REF,EL_DTM,EL_TD5,EL_PO1,EL_SE,EL_PID,EL_SDQ; REM " SSP# 137232 FOR COMPANY 84  - 163637 SDQ
1150 GOTO 1110
1200 BUILD_ARRAY:REM "Break segment into it's elements, [0] is unaltered segment, [1] & so on are the elements
1201 REM "Assume < 50 elements for now
1205 DIM ELEMENT$[50]; ELEMENT$[0]=SEGMENT$,EL_INDEX=0
1220 P=POS(ELEMENT_SEPARATOR$=SEGMENT$),EL_INDEX=EL_INDEX+1
1225 IF P=0 THEN IF SEGMENT$(LEN(SEGMENT$),1)=SEGMENT_TERMINATOR$ THEN SEGMENT$=SEGMENT$(1,LEN(SEGMENT$)-1) END_IF ; SEGMENT$=STP(SEGMENT$,3,"~"); ELEMENT$[EL_INDEX]=SEGMENT$; GOTO BUILD_ARRAY_END; REM "We have all the elements for this segment
1230 IF P=1 THEN ELEMENT$[EL_INDEX]=" ",SEGMENT$=SEGMENT$(P+1); GOTO 1220; REM "Blank element, set to one blank space
1235 ELEMENT$[EL_INDEX]=SEGMENT$(1,P-1),SEGMENT$=SEGMENT$(P+1); GOTO 1220
1295 BUILD_ARRAY_END:RETURN 
1600 GOTO 1110
1900 REM "End of file
1930 REM "Remove the file
1931 CLOSE (SLOT,ERR=1932)
1935 ERASE FILE$[J],ERR=1936
1985 J=J+1
1995 GOTO 1060
2000 DONT_NEED:REM "Don't need this segment, go get another one
2045 DONT_NEED_END:RETURN 
2050 EL_ISA:REM "ISA element, we need trading partner ID
2052 DIM SOURCE$(3),VER$(3),CUST$(10),LOC$(4),ORD_BY$(20),REQ$(15),ATTN$(30),DT_REQ$(6),DT_ORD$(8),VIACODE$(1),VIADESC$(15),HOWCODE$(1),INSIDE$(15),WITH$(15),ADDR1$(30),ADDR2$(30),CITY$(16),STATE$(2),ZIP$(9),MARKFOR$(35),SALESTAX$(10),TAXABLE$(1),HEADWHSE$(4),SHIPNAME$(35)
2055 DIM SENDER$(15); SENDER$(1)=ELEMENT$[7],FO1_HEADER$="",FO1_LINE$="",FO1_REC$=""
2056 DEFAULT_WHSE$="",DEFAULT_PRINT$=""; REM p SSP 182509
2060 DIM A$(255); FIND (Z[3],KEY=SENDER$,DOM=2061)IOL=0310
2062 DEFAULT_WHSE$=A$(178,4),DEFAULT_PRINT$=A$(182,5); REM " SSP 182509
2065 SOURCE$="EDI",VER$="201"; IF I$(306,3)<>"   " THEN VER$=I$(306,3); REM "WO119820, allow use of versions other than 101
2070 IF POS(" "<>A$(51,10))>0 THEN CUST$=A$(51,10) ELSE CUST$=SENDER$(1,10)
2095 EL_ISA_END:RETURN 
2100 EL_GS:REM "GS element, we need functional identifier code
2105 IF ELEMENT$[2]<>"PO" THEN S$="File: "+F1$+" contains a non PO transaction, need to check archive"; S1$="echo "+QUO+S$+QUO+" >> "+HWD+DLM+"EDI_LOG"; INVOKE S1$; EXITTO 1950
2145 EL_GS_END:RETURN 
2150 EL_ST:REM "Need transaction set identifier code
2160 IF ELEMENT$[2]<>"850" THEN S$="File: "+F1$+" contains a non 850 transaction, need to check archive"; S1$="echo "+QUO+S$+QUO+" >> "+HWD+DLM+"EDI_LOG"; INVOKE S1$; EXITTO 1950
2195 EL_ST_END:RETURN 
2200 EL_BEG:REM "
2205 REQ$=PAD(FN%CVT4$(ELEMENT$[4]),15),DT_ORD$=ELEMENT$[6]
2210 IF A$(173,1)="Y" THEN REQ$=PAD(FN%CVT4$(ELEMENT$[5]),15); REM "SSP#132027
2245 EL_BEG_END:RETURN 
2250 EL_FOB:REM "Shipping info, not used at this time
2295 EL_FOB_END:RETURN 
2300 EL_N1:REM "We need ship-to so only keep the N1 with the ST entity identifier code
2310 IF X3$(9,3)="084" THEN GOSUB 3000; REM SSP#108890 
2315 IF ELEMENT$[2]<>"ST" THEN GOTO EL_N1_END
2319 LOC$=PAD(FN%CVT4$(ELEMENT$[5]),4)
2320 LOC$=STR(NUM(LOC$(1,4),ERR=*NEXT):"0000"); REM "ref# 170701
2321 IF A$(154,1)="L" THEN ORIGINAL$=CUST$+PAD(FN%CVT4$(ELEMENT$[5]),9); CALL "ED2F01",X3$,X4$,OPTION$,ORIGINAL$,LOC$,"",RETURN_CODE; REM "SSP112587     
2322 IF A$(154,1)="R" THEN CALL "FM2DPB",X3$,X4$,CUST$,PAD(FN%CVT4$(ELEMENT$[5]),20),LOC$,""; REM "SSP112587  - SSP127811
2325 SHIPNAME$=PAD(FN%CVT4$(ELEMENT$[3]),35)
2330 READ (SLOT,END=1900)SEGMENT$; GOSUB BUILD_ARRAY; ELEMENT$[1]=PAD(ELEMENT$[1],3)
2335 IF ELEMENT$[1]="N2 " THEN ATTN$=PAD(FN%CVT4$(ELEMENT$[2]),30); GOTO 2330
2337 IF ELEMENT$[1]="N3 " THEN ADDR1$=PAD(FN%CVT4$(ELEMENT$[2]),30),ADDR2$=PAD(FN%CVT4$(ELEMENT$[3]),30); GOTO 2330
2340 IF ELEMENT$[1]="N4 " THEN CITY$=PAD(FN%CVT4$(ELEMENT$[2]),16),STATE$=PAD(FN%CVT4$(ELEMENT$[3]),2),ZIP$=PAD(FN%CVT4$(ELEMENT$[4]),9); GOTO EL_N1_END
2342 EXITTO 1145
2345 EL_N1_END:RETURN 
2350 EL_DTM:REM "Date/Time reference, we only need the 002 one which is the delivery requested date
2355 ELEMENT$[3]=STP(ELEMENT$[3],3,"*")
2360 IF ELEMENT$[2]="002" THEN Q$=FN%CVT4$(ELEMENT$[3]); GOSUB 7500; DT_REQ$=Q0$
2395 EL_DTM_END:RETURN 
2400 EL_TD5:REM "Carrier Details, we need the ship via description
2410 VIADESC$=PAD(FN%CVT4$(ELEMENT$[4]),15)
2445 EL_TD5_END:RETURN 
2450 EL_TAX:REM "Tax Reference
2455 GOTO EL_TAX_END; REM "SSP112587, take this out for now
2460 SALESTAX$=PAD(FN%CVT4$(ELEMENT$[2]),10)
2470 IF PAD(FN%CVT4$(ELEMENT$[13]),1)="1" THEN TAXABLE$="N"
2495 EL_TAX_END:RETURN 
2500 EL_PO1:REM "These are the PO lines
2505 IF A$(175,1)="U" THEN CONV=8 ELSE CONV=10; REM " SSP# 163637  
2510 DIM FIRSTTEN$(10),ITEM$(10),WHSE$(4),UM$(4),QTYPER$(6),QUANTITY$(7)
2515 QUANTITY$=PAD(FN%CVT4$(ELEMENT$[3]),7)
2520 ITEM$=PAD(FN%CVT4$(ELEMENT$[CONV]),20); UOM$=ELEMENT$[4]; REM u/m causing issues, it will default from the IC0 record in GOR, 112587
2525 IF ITEM$=DIM(20) THEN ITEM$=PAD(FN%CVT4$(ELEMENT$[CONV]),20); UOM$=ELEMENT$[4]; REM , u/m causing issues, it will default from the IC0 record in GOR, 112587
2527 IF POS("M"=UOM$)<>0 AND UOM$<>"RM" AND A$(174,1)<>"Y" THEN QUANTITY$=STR(NUM(QUANTITY$)*1000); QUANTITY$=PAD(FN%CVT4$(QUANTITY$),7)
2530 ORIGINAL$=CUST$+ITEM$
2540 CALL "ED2CIC",X3$,X4$,OPTION$,ORIGINAL$,FORMATTED$,"",RETURN_CODE
2550 ITEM$=FORMATTED$(11,10)
2551 IF A$(177,1)="Y" THEN GOTO 2595
2552 IF WHSE$=DIM(4) AND DEFAULT_WHSE$<>DIM(4) THEN WHSE$=DEFAULT_WHSE$; REM " SSP 182509
2555 CURRENT_LINE$=""; CURRENT_LINE$=FIRSTTEN$+ITEM$+WHSE$+UM$+QTYPER$+QUANTITY$
2556 IF WHSE$=DIM(4) AND DEFAULT_WHSE$<>DIM(4) THEN WHSE$=DEFAULT_WHSE$; REM " SSP 182509
2560 FO1_LINE$=FO1_LINE$+FIRSTTEN$+ITEM$+WHSE$+UM$+QTYPER$+QUANTITY$
2570 IF VER$="200" THEN DIM EXTRA$(50); EXTRA$=PAD(FN%CVT4$(ELEMENT$[5]),50),FO1_LINE$=FO1_LINE$+EXTRA$; REM "WO119820, unit price to print on GOR journal
2571 IF VER$="201" THEN DIM EXTRA$(55); EXTRA$=PAD(FN%CVT4$(ELEMENT$[5]),50)+DEFAULT_PRINT$,FO1_LINE$=FO1_LINE$+EXTRA$; REM "WO119820, unit price to print on GOR journal
2595 EL_PO1_END:RETURN 
2600 EL_SE:REM "Interchange Control Trailer, we are done with this one
2601 IF A$(177,1)="Y" THEN GOTO 2695
2605 IF LEN(DT_REQ$)=0 THEN DIM DT_REQ$(6)
2610 FO1_HEADER$=SOURCE$+VER$+CUST$+LOC$+ORD_BY$+REQ$+ATTN$+DT_REQ$+VIACODE$+VIADESC$+HOWCODE$+INSIDE$+WITH$+ADDR1$+ADDR2$+CITY$+STATE$+ZIP$+MARKFOR$+SALESTAX$+TAXABLE$+HEADWHSE$+SHIPNAME$
2611 IF VER$="201" THEN DIM EXTRA_HEAD$(40); FO1_HEADER$=FO1_HEADER$+EXTRA_HEAD$
2620 FO1_REC$=FO1_HEADER$+FO1_LINE$
2630 PRINT (Z[2])FO1_REC$
2635 FO1_LINE$=""
2680 IF A$(72,1)="Y" THEN CALL "ED2POA",X3$,X4$,SOURCE$,VER$,SENDER$,CUST$,LOC$,ORD_BY$,REQ$,ATTN$,DT_REQ$,DT_ORD$,VIACODE$,VIADESC$,HOWCODE$,INSIDE$,WITH$,ADDR1$,ADDR2$,CITY$,STATE$,ZIP$,MARKFOR$,SALESTAX$,TAXABLE$,HEADWHSE$,SHIPNAME$,FO1_LINE$
2690 IF CLEAR_FO1 THEN FO1_LINE$=""
2695 EL_SE_END:RETURN 
2700 EL_REF:REM "NEED TO GET SHIP-TO FOR AUTOZONE
2710 IF ELEMENT$[2]<>"ST" THEN GOTO 2750
2720 LOC$=PAD(FN%CVT4$(ELEMENT$[3]),4)
2750 EL_REF_END:RETURN 
2800 EL_PID:REM " WHEN CHANGE IN PID - MAKE NEW RELEASE COMPANY 84 ONLY; REM "SSP# 137232
2810 IF X3$(9,3)<>"084" THEN RETURN 
2850 IF LEN(ELEMENT$[5])=3 AND POS(ELEMENT$[5]="732749750754789790791792793794795796797798",3)=0 THEN HOLD_PID$="NONE"; RETURN 
2860 IF LEN(ELEMENT$[5])<3 OR LEN(ELEMENT$[5])>4 THEN HOLD_PID$="NONE"; RETURN 
2870 IF HOLD_PID$<>"" AND HOLD_PID$<>ELEMENT$[5] THEN CLEAR_FO1=1; HOLD_FO1$=FO1_LINE$; FO1_LINE$=FO1_LINE$(1,LEN(FO1_LINE$)-91); GOSUB EL_SE; HOLD_PID$="",CLEAR_FO1=0,FO1_LINE$=HOLD_FO1$(LEN(HOLD_FO1$)-90,91); HOLD_FO1$=""
2875 ATTN$=PAD("DEPT "+ELEMENT$[5],30)
2880 HOLD_PID$=ELEMENT$[5]; CLEAR_FO1=0
2895 EL_PID_END:RETURN ; REM " SSP# 137232 
3000 REM "Override Customer Code with 4th segment of N1 record; SSP#108980
3010 CUST_OVR$=FN%CVT4$(ELEMENT$[4])
3015 IF CUST_OVR$<>"" THEN CUST$=PAD(CUST_OVR$,10,"0")
3040 RETURN 
4000 EL_SDQ:REM 'Process SDQ segments     
4010 IF A$(177,1)<>"Y" THEN GOTO 4299
4011 REM "CHANNEL=244; OPEN (CHANNEL,BSZ=2048)"*MEMORY*"
4015 FOR I=5 TO 23 STEP 2
4016 IF ELEMENT$[I]="" THEN EXITTO 4299
4017 STAR=0
4020 STAR=POS("*"=ELEMENT$[I]); IF STAR<>0 THEN ELEMENT$[I]=ELEMENT$[I](1,STAR-1)
4035 QUANTITY$=PAD(FN%CVT4$(ELEMENT$[I]),7); QUANTITY$=STP(QUANTITY$,3,"*")
4038 IF QUANTITY$="" THEN EXITTO 4200
4039 IF POS("M"=UOM$)<>0 AND UOM$<>"RM" AND A$(174,1)<>"Y" THEN QUANTITY$=STR(NUM(QUANTITY$)*1000); QUANTITY$=PAD(FN%CVT4$(QUANTITY$),7)
4040 IF WHSE$=DIM(4) AND DEFAULT_WHSE$<>DIM(4) THEN WHSE$=DEFAULT_WHSE$; REM " SSP 182509
4041 FO1_LINE$=""; FO1_LINE$=FIRSTTEN$+ITEM$+WHSE$+UM$+QTYPER$+QUANTITY$
4042 IF VER$="200" THEN DIM EXTRA$(50); EXTRA$=PAD(FN%CVT4$(ELEMENT$[5]),50),FO1_LINE$=FO1_LINE$+EXTRA$; REM "WO119820, unit price to print on GOR journal
4043 IF VER$="201" THEN DIM EXTRA$(50); EXTRA$=EXTRA$+DEFAULT_PRINT$,FO1_LINE$=FO1_LINE$+EXTRA$; REM "WO119820, unit price to print on GOR journal
4044 LOC$=PAD(FN%CVT4$(ELEMENT$[I-1]),4)
4045 LOC$=STR(NUM(LOC$(1,4)):"0000")
4050 IF LEN(DT_REQ$)=0 THEN DIM DT_REQ$(6)
4051 IF HEADWHSE$=DIM(4) AND DEFAULT_WHSE$<>DIM(4) THEN HEADWHSE$=DEFAULT_WHSE$; REM "SSP 182509
4052 FO1_HEADER$=""; FO1_HEADER$=SOURCE$+VER$+CUST$+LOC$+ORD_BY$+REQ$+ATTN$+DT_REQ$+VIACODE$+VIADESC$+HOWCODE$+INSIDE$+WITH$+ADDR1$+ADDR2$+CITY$+STATE$+ZIP$+MARKFOR$+SALESTAX$+TAXABLE$+HEADWHSE$+SHIPNAME$
4053 IF VER$="201" THEN DIM EXTRA_HEADER$(40); FO1_HEADER$=FO1_HEADER$+EXTRA_HEADER$
4054 READ (CHANNEL,KEY=LOC$,DOM=4056)TEMP$; GOTO 4060
4059 FO1_REC$=FO1_HEADER$+FO1_LINE$; WRITE (CHANNEL,KEY=LOC$)FO1_REC$; GOTO 4065
4060 WRITE (CHANNEL,KEY=LOC$)TEMP$+FO1_LINE$
4065 IF A$(72,1)="Y" THEN CALL "ED2POA",X3$,X4$,SOURCE$,VER$,SENDER$,CUST$,LOC$,ORD_BY$,REQ$,ATTN$,DT_REQ$,DT_ORD$,VIACODE$,VIADESC$,HOWCODE$,INSIDE$,WITH$,ADDR1$,ADDR2$,CITY$,STATE$,ZIP$,MARKFOR$,SALESTAX$,TAXABLE$,HEADWHSE$,SHIPNAME$,FO1_LINE$
4066 FO1_LINE$=""
4200 NEXT I
4299 EL_SDQ_END:RETURN ; REM SSP# 163637                                       
5000 IF A$(177,1)="Y" THEN GOSUB 6200; REM "EOJ
5001 TOT_REC=0; CALL "ZZ2FNC;SERIALRECCNT",Z[2],TOT_REC
5002 REM "XFD$=FN%XFD$(Z[2],0),TOT_REC=DEC(XFD$(38,4))
5003 CLOSE (Z[2],ERR=5004)
5004 IF TOT_REC=0 THEN ERASE TEXT$; GOTO 5012
5005 NAME_2$="FO1.",EXT_2=1
5007 GOR$=NAME_2$+STR(EXT_2:"000")
5010 RENAME TEXT$,GOR$,ERR=5011; GOTO 5012; REM "Rename the ED1 file we wrote to, to an FO1 file to be used in the Order Requisition Gateway
5011 EXT_2=EXT_2+1; GOTO 5007
5015 C=T; GOSUB 8150
5020 REM "IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"PROCESS COMPLETE!!","","",0
5040 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(0,4),"Translating Incoming EDI Purchase Order Records"
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "READ THE MEMORY FILE
6210 READ (CHANNEL,KEY="",DOM=*NEXT)
6215 K$=KEY(CHANNEL,END=6290)
6216 READ (CHANNEL,KEY=K$)MEMORY$
6220 PRINT (Z[2])MEMORY$
6230 GOTO 6215
6290 CLOSE (CHANNEL)
6299 RETURN 
7500 REM "Convert date q$ into q0$
7501 REM "Q$ in YYYYMMDD format or YYMMDD
7505 Q0$=""
7506 IF STP(Q$,3," ")="" THEN GOTO 7545
7510 IF LEN(Q$)=8 THEN GOTO 7520 ELSE IF LEN(Q$)=6 THEN D1$=STR(NUM(Q$(1,2)):"00") ELSE GOTO 7545
7515 IF D1$<"50" THEN Q$="20"+Q$ ELSE Q$="19"+Q$
7520 Q0$=CHR(NUM(Q$(1,3),ERR=7521)-125)+Q$(4,1)+Q$(5,2)+Q$(7,2)
7545 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 T=0; CALL "ZZ2FNC;SERIALRECCNT",SLOT,T
8115 IF %GUI=0 THEN PRINT @(0,7),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 REM CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9945 EXIT 
9950 RUN "ZMENU"
9999 END 
