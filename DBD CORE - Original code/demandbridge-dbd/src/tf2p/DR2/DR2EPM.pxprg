0010 REM "Data Replication Configuration <DR2EPM>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 05/06/10 - 14.304444 - crg - SSP# 237322
0037 REM "237322-Install MySQL database                                      
0040 REM "Copyright 2010 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "This utility is intended for use in setting up a predefined set of
0051 REM "TopForm files for replication to an external target database
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0105 SAVE_XI=PRM('XI')
0110 X0$="DR2EPM",X1$="Data Replication Initialization"
0120 DIM Z0$(80,"-"),Z1$(40)
0130 K0=20,K1=1
0135 C9=-1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=ESC+"BG"+Z0$+ESC+"EG"
0300 REM "IOLISTS
0310 IOLIST A$
0320 IOLIST B$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O DR0...  02O DR1...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 DDF=HFN; OPEN (DDF,ERR=9900)"providex.ddf"
0600 REM "
0610 GOSUB 6000
0620 DIM A$(30),A[1]; X$="Leave blank for all defined tables"
0630 CALL "ZZENTR","SUX",A{ALL},A$,X4$,X3$,24,7,1,20,C0,"","{1"+"Enter replication target code",K9$,"DR2EPM00","DR0","",""; IF C0=6 THEN GOSUB 6400; C0=1
0632 DIM DR0$(234); IF STP(A$)<>"" THEN FIND (Z[1],KEY=A$(1,20),DOM=0630)DR0$; PRINT @(45,7),DR0$(21,30),
0640 CALL "ZZENTR","ZX",A{ALL},A$,X4$,X3$,24,8,21,2,C0,"","{1"+"Enter sequence number",A$(21,2),"DR2EPM02","","",""; IF C0=6 THEN GOSUB 6400; C0=1
0650 CALL "ZZENTR","SZ",A{ALL},A$,X4$,X3$,24,9,23,3,C0,"","{1"+"Enter data rep queue code",A$(23,3),"DR2EPM04","","",""; IF C0=6 THEN GOSUB 6400; C0=1
0655 IF MEMCHN<>0 THEN CLOSE (MEMCHN,ERR=*PROCEED); MEMCHN=0 ! 237322
0656 CALL "ZZGFLS",MEMCHN; IF MEMCHN=0 THEN MSGBOX "Error: Files could not be selected!"; GOTO 9900 ! 237322
0660 GOSUB 8100
0670 IF Q1$="" THEN CALL "ZZPROM","0",X3$,Z,"Proceed?","","",0; ON Z GOTO 0680,9900,0620
0900 ! init
0950 GOSUB 8150
0960 READ (MEMCHN,KEY="",DOM=*NEXT) ! 237322 Reset to beginning of file list
0970 ! 
1000 REM "BEGIN MAIN PROCESS
1010 DIM DR1$(502)
1011 FKEY$=KEY(MEMCHN,END=5000); READ (MEMCHN,KEY=FKEY$)LOGICAL_FILE$ ! 237322
1020 C=C+1; SEQ_NUMBER=SEQ_NUMBER+1; IF MOD(C,T0)=1 THEN GOSUB 8150 ! 237322
1021 PRINT @(26,12),Z1$,@(26,12),SEQ_NUMBER,"  ",LOGICAL_FILE$,
1025 PHY_FILE$=UCS(MID(LOGICAL_FILE$,1,3))
1030 DR1$(1,8)=PAD(PHY_FILE$+%C$,8)
1040 DR1$(9,2)=A$(21,2)
1050 DR1$(11,30)=""+LOGICAL_FILE$
1060 DR1$(41,20)=DR0$(1,20)
1070 GOSUB SETUP_DATAPATH
1080 DR1$(301,1)="Y"
1090 DR1$(346,1)="Y" ! Enable logging
1100 DR1$(347,1)=DR0$(181,1)
1101 DR1$(348,3)=A$(23,3)
1110 DR1$(351,1)="N"
1120 WRITE (Z[2],KEY=DR1$(1,10),DOM=DR1_EXISTS)DR1$
1130 IF DR1$(301,1)="Y" THEN {
1140 IO_PROG$=STP(DR0$(171,10))
1150 OPT$=DR1$(351,1)
1160 CALL "DR2PFX",X3$,X4$,STP(DR1$(314,32))+"|"+STP(DR1$(1,10),1),STP(DR1$(61,120)),IO_PROG$,OPT$
1170  }
1600 GOTO 1000
1601 ! 
1610 DR1_EXISTS:
1620 MSGBOX "DR1 entry exists: "+LOGICAL_FILE$
1630 GOTO 1000
1640 ! 
5000 REM "EOJ
5010 C=T; GOSUB 8150
5020 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5040 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(10,4),"This utility sets up DB Distributor tables ",
6022 PRINT @(10,5),"for data replication.",
6025 PRINT @(9,7),PAD("Target code :",14,0),
6030 PRINT @(9,8),PAD("Sequence # :",14,0),
6040 PRINT @(9,9),PAD("Que code :",14,0),
6165 PRINT (0,ERR=6166)'SF',
6170 PRINT @(24,7),MID(A$,1,20),@(24,8),MID(A$,21,2),@(24,9),MID(A$,23,3),
6190 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6445 RETURN 
7500 FILE_OPEN_ERR:! Error opening file
7505 FOE=ERR
7510 CALL "ZZPROM",".4",X3$,Z,"Error "+STR(FOE)+" occurred on file "+STP(DR1$(1,10))+"!","","",0
7545 GOTO 1600
7549 ! 
7550 SETUP_DATAPATH:! Get datapath from Target and replace tokens
7560 DR1$(61,120)=DR0$(51,60) ! if changed then default to model
7565 DR1$(61,120)=SUB(DR1$(61,120),"&TF",STP(DR1$(1,8))) ! &TF replaced with file name
7570 GOSUB SET_DD_NAME; DR1$(61,120)=SUB(DR1$(61,120),"&DD",STP(DR1$(314,32))) ! &DD replaced with data dictionary name
7595 SD_DONE:RETURN 
7599 ! 
7600 SET_DD_NAME:! Set the data dictionary name from the file name
7605 TMP$=PHY_FILE$
7615 READ (DDF,KNO=1,KEY=TMP$,DOM=*NEXT)
7620 TMPKEY$=KEY(DDF,KNO=1,END=SDN_DONE); READ (DDF,KEY=TMPKEY$,KNO=1)DDFNAME$; IF MID(TMPKEY$,1,3)<>TMP$ THEN GOTO SDN_DONE ! 212004
7625 DR1$(314,32)=DDFNAME$ ! 212004
7640 SDN_DONE:! done
7645 RETURN 
7649 ! 
7950 ! 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 T=NUM(FIN(MEMCHN,"NUMREC")),T0=2 ! CALL "ZZINFO",Z[1],T9,X3$,T,T0,K,B,D,S0,S1,F$
8115 ! PRINT @(0,7),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8200 ! bar for file
8210 CALL "ZZINFO",DR,DT9,X3$,DT,DT0,DK,DB,DD,DS0,DS1,DF$
8212 DC=0
8215 PRINT @(10,9),'CL',STP(DF$)+" - There are "+STR(DT)+" records to process"
8230 DT0=INT(DT*.02); IF DT0<=1 THEN DT0=2
8245 RETURN 
8250 ! 
8255 CALL "ZZBARG",X3$,"HG",12,10,50,DT1,DT,DC
8295 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9515 GOTO 0640
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9905 SET_PARAM 'XI'=SAVE_XI
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 CLOSE (DDF)
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56001 REM "211691-Create a data rep utility to setup DR1 records for EPM.
56002 REM "209252-Modify Data Rep to allow output to multiple database
56003 REM "212004-DataRep on ver 7 refers to table names in all caps
56004 REM "216089-DB Enterprise-AS7,XPD tables added to EPM datarep file set
56005 REM "219746-Add FM4_FormLoc table to DBE list of datarep files          
56006 REM "229418-DBE enhancement requires replication of XPT table.          
