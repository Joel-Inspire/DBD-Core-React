0010 REM "Data Replication Check Replication <DR2UT0>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 02/22/23 - 11.391288 - crg - SSP# 307251
0037 REM "307251-Enhancements                                              
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0105 INIT:
0110 X0$="DR2UT0",X1$="Data Replication Check Replication"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0140 IF %GUI THEN X0=-1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0280 FOR I=1 TO 12; MONTH_STR$+=UCS(DTE(JUL(2000,I,1):"%Ms")); NEXT I ! Build string of month names for date manipulation
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$
0320 IOLIST B$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01OSDR1...  02O DR0...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0595 IF %GUI THEN RETURN 
0600 REM "
0603 GOSUB 6000
0610 DIM A$(30),A[1]; X$="Enter target name. Leave blank for all defined targets."
0611 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,24,7,1,20,C0,"","{3"+X$,"","","DR0","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO *SAME,*NEXT
0612 TARGET$=""; IF STP(A$(1,20))="" THEN PRINT @(24,7),'CL',"All Targets",; %DR_TARGET_SPECIFIC$="" ELSE TARGET$=A$(1,20); PRINT @(24,7),TARGET$,; %DR_TARGET_SPECIFIC$=A$(1,20) ! DBD-350
0613 DIM DR0$(500)
0614 IF STP(A$(1,20))<>"" THEN FIND (Z[2],KEY=A$(1,20),DOM=0611)DR0$; PRINT @(36,7),DR0$(21,30),
0615 PRINT @(36,7),DR0$(21,30),
0616 X$="Enter table name, eg: AR1500. Leave blank for all defined tables."
0618 CALL "ZZENTR","SUX",A{ALL},A$,X4$,X3$,24,8,21,8,C0,"","{1"+X$,K9$,"DR2INI00","DR1","",""; IF C0=6 THEN GOSUB 6400; C0=1
0619 TABLE$=""; IF STP(A$(21,10))="" THEN PRINT @(24,8),'CL',"All Tables", ELSE TABLE$=A$(21,8); PRINT @(24,8),TABLE$,
0621 DIM DR1$(500)
0623 IF STP(A$(21,10))<>"" THEN READ (Z[1],KEY=A$(21,8),DOM=*PROCEED); A$(21,10)=KEY(Z[1],END=0001); FIND (Z[1],KEY=A$(21,10),DOM=0001)DR1$; PRINT @(36,8),DR1$(11,30),
0625 PRINT @(36,8),DR1$(11,30),
0630 ! Enable Read Only mode? Off by default
0631 X$="N - Replicated tables will be corrected, Y - No changes made"
0632 DIM TMP$(1),TMP[1]; CALL "ZZENTR","Y",TMP{ALL},TMP$,X4$,X3$,24,9,1,1,C0,"","{3"+X$,"","","","",""
0633 IF MID(TMP$,1,1)="Y" THEN READ_ONLY=1 ELSE READ_ONLY=0
0640 IF Q1$="" THEN CALL "ZZPROM","0",X3$,Z,"Proceed?","","",0; ON Z GOTO *NEXT,9900,0600
0700 PROCEED:
0900 ! init
0905 LOG_OPTIONS$="A"; CALL "ZZ2LOG;OPEN_LOG",ERR=*NEXT,X3$,X4$,FN%GET_BASENAME$(PGN)+"."+FID(0)+".log",LOG_OPTIONS$,LOG_CHANNEL
0907 GOSUB 8100
0910 IF STP(A$)<>"" THEN T0=1,T=1
0950 GOSUB 8150
0990 READ (Z[1],KEY="",DOM=*NEXT)
0995 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"=== Start ===",%LOG_INFO
0996 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"Target|"+TBL(NUL(A$(1,20)),TARGET$,"All Targets")+"|",%LOG_INFO
0997 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"Table |"+TBL(NUL(A$(21,10)),TABLE$,"All Tables")+"|",%LOG_INFO
0999 ! 
1000 REM "BEGIN MAIN PROCESS
1005 DR1_KEY$=KEY(Z[1],END=5000); READ (Z[1],END=5000)DR1$
1010 IF STP(A$(1,20))<>"" THEN IF DR1$(41,20)<>A$(1,20) THEN GOTO 1000 ! If replicating specific target, skip current table if no match on target
1015 IF STP(A$(21,10))<>"" THEN IF DR1$(1,8)<>A$(21,8) THEN GOTO 1000 ! If replicating specific table, skip current table if no match on table
1020 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1025 IF DR1$(301,1)<>"Y" THEN GOTO 1000 ! Skip table, not being replicated currently
1100 ! Process file
1105 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"Processing file|"+STP(DR1$(41,20),2)+"|"+STP(DR1$(1,8),2)+"|"+DR1$(9,2)+"|",%LOG_INFO
1110 GOSUB GET_INFO_FOR_DR1 ! TF_CHAN opened
1150 GOSUB SETUP_TEMP_SORT ! TEMP_REP_CHAN opened
1190 GOSUB GET_REMOTE_FILE_KEYS
1200 GOSUB DO_PASS_1
1210 GOSUB DO_PASS_2
1230 GOSUB WRAPUP_DR1
1950 GOTO 1000
1999 ! 
2150 REMOVE_CURR_REC:! remove extra record from replicated data
2165 EXTRA_REP_RECS+=1; IF MOD(EXTRA_REP_RECS,1000)=0 THEN PRINT @(21,13),"Removed: "+STR(EXTRA_REP_RECS:"##,###,##0")
2167 TF_KEY$=TRCK$; GOSUB FIX_TF_KEY
2170 IF NOT(READ_ONLY) THEN REMOVE (REP_CHAN,KEY=TF_KEY$,ERR=*NEXT)
2195 RETURN 
2199 ! 
2500 REM "Get info on local file and remote table
2510 GET_INFO_FOR_DR1:
2520 ! Find Target model, Local name, Remote name, Key size, Key col list
2530 FIND (Z[2],KEY=DR1$(41,20),DOM=ERR_INVALID_TARGET)DR0$
2540 DR_MODEL$=STP(MID(DR0$,51,120),2),DB_TYPE$=MID(DR0$,181,1)
2550 LOCAL_NAME$=STP(MID(DR1$,1,8),2)
2560 REMOTE_NAME$=""; IF POS("&TF"=DR_MODEL$) THEN REMOTE_NAME$=LOCAL_NAME$ ELSE IF POS("&DD"=DR_MODEL$) THEN REMOTE_NAME$=STP(MID(DR1$,314,32),2)
2570 IF NUL(REMOTE_NAME$) THEN GOTO ERR_INVALID_MODEL
2575 LOGICAL_NAME$=STP(MID(DR1$,314,32),2)
2580 DR_MODEL$=SUB(SUB(DR_MODEL$,"&DD",""),"&TF","") ! Strip off &TF, &DD from target model
2590 REM "Get key size and key cols list
2600 KEY_SIZE=0; KEY_COL_LIST$=""; KEY_DATATYPE$=""
2602 SEQ_NUM_ASCII_FIX=0; IF POS(MID(DR1$,1,3)="ASJFS6",3) THEN SEQ_NUM_ASCII_FIX=1
2610 DB=NEW("*dict/database",ERR=ERR_LOCALFILE)
2615 DB'SETDATABASE("")
2620 ! KEY_COL_LIST$=DB'GETKEYCOLUMNLIST$(UCS(LOGICAL_NAME$)) ! Get list of key columns - "CUST_DIV"+SEP+"CUST_CODE"+SEP...
2621 OPEN (HFN,OPT="NONULLS=P",ERR=ERR_TBLOPEN)"DR_"+STP(DR1$(1,8),2)+"_"+DR1$(9,2); REP_CHAN=LFO
2625 ! KEY_COL_LIST$=STP(SUB(KEY_COL_LIST$,SEP,","),2,",") ! Returns "CUST_DIV,CUST_CODE"...
2626 KEY_COL_LIST$=FNOPT$(REP_CHAN,"KEY=","",ERR=ERR_TBLOPEN); CLOSE (REP_CHAN); REP_CHAN=0
2630 COL_CNT=DB'GETKEYCOLUMNCOUNT(UCS(LOGICAL_NAME$))
2635 DB'SETRECORDNO(1)
2640 FOR C=1 TO COL_CNT
2642 COL=DB'GETKEYCOLUMNINFO(UCS(LOGICAL_NAME$),C)
2644 IF COL<>0 THEN IF COL'CLASS$="DATE-KKMMDD" THEN KEY_DATATYPE$+="DATE  ," ELSE KEY_DATATYPE$+="STRING,"
2646 NEXT C
2650 DROP OBJECT DB
2660 IF TF_CHAN THEN CLOSE (TF_CHAN); TF_CHAN=0
2670 OPEN (HFN,ERR=ERR_LOCALFILE)LOCAL_NAME$; TF_CHAN=LFO
2680 KEY_SIZE=NUM(FIN(TF_CHAN,"KEY_SIZE"),ERR=ERR_LOCALFILE)
2690 IF KEY_SIZE=0 OR NUL(KEY_COL_LIST$) THEN GOTO ERR_LOCALFILE
2695 RETURN 
2699 ! 
3000 REM "Setup temporary sort file for remote key data
3010 SETUP_TEMP_SORT:
3020 TMP_SORTFILE$="TMP_DR2UT0_"+DTE(0:"%Y%Mz%Dz")+STR(TIM*100:"0000")+STR(RND*1000:"0000")
3030 ERASE TMP_SORTFILE$,ERR=*PROCEED; SORT TMP_SORTFILE$,KEY_SIZE,ERR=ERR_TEMP_SORTFILE
3040 IF TEMP_REP_CHAN THEN CLOSE (TEMP_REP_CHAN); TEMP_REP_CHAN=0
3050 OPEN (HFN,ERR=ERR_TEMP_SORTFILE)TMP_SORTFILE$; TEMP_REP_CHAN=LFO
3090 RETURN 
3099 ! 
3400 REM "Extract remote table key information into temporary sort file
3410 GET_REMOTE_FILE_KEYS:
3420 OPEN (HFN,OPT="DATEFMT=YYYY-MM-DD",ERR=ERR_DBOPEN)DR_MODEL$; DB_CHAN=LFO
3430 REMOTE_RECS=0
3435 SELECT_STMT$="SELECT "+KEY_COL_LIST$+" FROM "+REMOTE_NAME$+" ORDER BY "+KEY_COL_LIST$; IF SEQ_NUM_ASCII_FIX THEN SELECT_STMT$=SUB(SELECT_STMT$,"SEQ_NUM","ASCII(SEQ_NUM)")
3440 WRITE RECORD (DB_CHAN,ERR=ERR_SELECT)SELECT_STMT$
3450 GRFK_NEXT_KEY:
3460 READ RECORD (DB_CHAN,END=GRFK_DONE)RK$
3465 GOSUB FIX_REMOTE_KEY
3470 WRITE (TEMP_REP_CHAN,KEY=STP(RK$,3,SEP),ERR=GRFK_NEXT_KEY)
3480 REMOTE_RECS++
3485 IF MOD(REMOTE_RECS,1000)=0 THEN PRINT @(19,12),"Retrieved: "+STR(REMOTE_RECS:"##,###,##0"),
3490 GOTO GRFK_NEXT_KEY
3500 GRFK_DONE:
3505 PRINT @(19,12),"Retrieved: "+STR(REMOTE_RECS:"##,###,##0"), ! Total retrieved record count
3510 CLOSE (DB_CHAN); DB_CHAN=0
3545 RETURN 
3549 ! 
3700 ! Check if remote key exists in local file - stale rec check
3705 DO_PASS_1:
3708 OPEN (HFN,OPT="NONULLS=P",ERR=ERR_TBLOPEN)"DR_"+STP(DR1$(1,8),2)+"_"+DR1$(9,2); REP_CHAN=LFO
3710 EXTRA_REP_RECS=0
3712 READ (TEMP_REP_CHAN,KEY="",DOM=*NEXT)
3715 NEXT_KEY_PASS_1:
3720 TRCK$=KEY(TEMP_REP_CHAN,END=DONE_PASS_1); READ (TEMP_REP_CHAN,KEY=TRCK$)
3725 FIND (TF_CHAN,KEY=TRCK$,DOM=*NEXT); GOTO NEXT_KEY_PASS_1
3730 GOSUB REMOVE_CURR_REC
3735 GOTO NEXT_KEY_PASS_1
3740 DONE_PASS_1:
3741 PRINT @(21,13),"Removed: "+STR(EXTRA_REP_RECS:"##,###,##0") ! Total removed records count
3742 CLOSE (REP_CHAN); REP_CHAN=0
3745 RETURN 
3749 ! 
3800 ! Check if local key exists in remote file - new rec check
3805 DO_PASS_2:
3810 TF_RECS_SENT=0
3812 READ (TF_CHAN,KEY="",DOM=*NEXT)
3815 NEXT_KEY_PASS_2:
3820 TFLCLK$=KEY(TF_CHAN,END=DONE_PASS_2)
3822 READ RECORD (TF_CHAN,KEY=TFLCLK$)TF_DATA$
3825 FIND (TEMP_REP_CHAN,KEY=TFLCLK$,DOM=*NEXT); GOTO NEXT_KEY_PASS_2
3830 IF NOT(READ_ONLY) THEN WRITE RECORD (TF_CHAN,KEY=TFLCLK$,BSY=NEXT_KEY_PASS_2)TF_DATA$
3835 TF_RECS_SENT++; IF MOD(TF_RECS_SENT,1000)=0 THEN PRINT @(24,14),"Sent: "+STR(TF_RECS_SENT:"##,###,##0"),
3840 GOTO NEXT_KEY_PASS_2
3842 DONE_PASS_2:
3844 PRINT @(24,14),"Sent: "+STR(TF_RECS_SENT:"##,###,##0"), ! Total sent records count
3845 RETURN 
3849 ! 
4900 WRAPUP_DR1:
4920 CLOSE (TF_CHAN),(TEMP_REP_CHAN)
4925 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"Retrieved|"+STR(REMOTE_RECS)+"|",%LOG_INFO ! Total retrieved record count
4926 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"Removed|"+STR(EXTRA_REP_RECS)+"|",%LOG_INFO ! Total removed records count
4927 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"Sent|"+STR(TF_RECS_SENT)+"|",%LOG_INFO ! Total sent records count
4940 ERASE TMP_SORTFILE$
4945 RETURN 
4999 ! 
5000 REM "EOJ
5010 C=T; GOSUB 8150
5020 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5025 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"=== End ===",%LOG_INFO
5030 CALL "ZZ2LOG;CLOSE_LOG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL
5035 IF %GUI THEN RETURN 
5040 GOTO 9900
5049 ! 
5200 ! ^100 DR_GET_DATETIME given: Date in either format(MM/DD/YYYY), TopForm YYMMDD format or "" for bogus date, Time in TIM format hour.fractional part of hour RETURN a number representing the Julian day.partial part of the day
5205 DEF FNDR_GET_DATETIME(LOCAL DATE_IN$, LOCAL TIME_IN)
5210 LOCAL RET_VAL,CURR_P
5215 ! default ret_val to Jan 1, 1800 to cover any errors, if DATE_IN$ is 6 long assume TopForm format, if 10 long then assume MM/DD/YYYY format, if 8 long assume MM/DD/YY format
5220 RET_VAL=JUL(1800,1,1),DATE_ERR=1
5225 IF LEN(DATE_IN$)=6 THEN {! TopForm date format
5230 RET_VAL=JUL((ASC(DATE_IN$(1,1),ERR=*NEXT)+125)*10+NUM(DATE_IN$(2,1),ERR=*NEXT),NUM(DATE_IN$(3,2),ERR=*NEXT),NUM(DATE_IN$(5,2),ERR=*NEXT),ERR=*NEXT); DATE_ERR=0
5235  } ELSE {
5240 IF LEN(DATE_IN$)=8 OR LEN(DATE_IN$)=10 THEN {! In MM/DD/YY or MM/DD/YYYY format
5245 RET_VAL=JUL(NUM(DATE_IN$(7),ERR=*NEXT),NUM(DATE_IN$(1,2),ERR=*NEXT),NUM(DATE_IN$(4,2),ERR=*NEXT),ERR=*NEXT); DATE_ERR=0
5250  }
5255  }
5260 ! Add time NOTE: if date before 1/1/1970 then it will be negative, so subtract time
5265 CURR_P=PRC; PRECISION 14; IF TIME_IN=0 OR TIME_IN>=24 THEN RET_VAL=RET_VAL+SGN(RET_VAL)*(TIM/24) ELSE RET_VAL=RET_VAL+SGN(RET_VAL)*(TIME_IN/24) END_IF ; PRECISION CURR_P
5270 RETURN RET_VAL
5275 END DEF ! DR_GET_DATETIME
5299 ! 
5300 ! ^100 DR_FMT_TFDATE$ given: TF format date, ""=current date, return stringusing DATE_FORMAT$ where DATE_FORMAT$ follows DTE date format mask --- note should use date only, time not given
5305 DEF FNDR_FMT_TFDATE$(LOCAL TFDATE$, LOCAL DATE_FORMAT$)
5310 LOCAL RET_VAL$
5315 RET_VAL$=FN%PRINT_DATETIME$(FNDR_GET_DATETIME(TFDATE$,0),DATE_FORMAT$)
5320 RETURN RET_VAL$
5325 END DEF ! DR_FMT_TFDATE$
5349 ! 
6000 REM "BACKGROUND
6001 IF %GUI THEN RETURN 
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(10,4),"This Utility verifies the replicated data for a ", ! SSP#231269
6022 PRINT @(10,5),"table setup in the Data Replication Module", ! ssp#231269
6025 PRINT @(9,7),"  Target name:",@(24,7),'CL',
6030 PRINT @(9,8),"   Table name:",@(24,8),'CL',
6035 PRINT @(1,9),"Enable Read-only mode?",@(24,9),'CL',
6165 PRINT (0,ERR=6166)'SF',
6170 PRINT @(24,7),TARGET$,
6180 PRINT @(24,8),TABLE$,
6190 RETURN 
6199 ! 
6400 REM "WHOLE SCREEN
6401 IF %GUI THEN RETURN 
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6445 RETURN 
6449 ! 
7500 ERR_INVALID_TARGET:
7515 CALL "ZZPROM",".4",X3$,Z,"Target "+DR1$(41,20)+" could not be found!","","",0
7530 EXITTO 1000
7545 ! 
7560 ERR_INVALID_MODEL:
7575 CALL "ZZPROM",".4",X3$,Z,"Target "+DR1$(41,20)+" has incorrect model definition!","","",0
7590 EXITTO 1000
7605 ! 
7620 ERR_LOCALFILE:
7635 CALL "ZZPROM",".4",X3$,Z,"Error looking up info for file "+LOCAL_NAME$+"!","","",0
7650 EXITTO 1000
7665 ! 
7680 ERR_TEMP_SORTFILE:
7695 CALL "ZZPROM",".4",X3$,Z,"Error setting up temp sort file "+TMP_SORTFILE$+"!","","",0
7710 EXITTO 1000
7725 ! 
7740 ERR_DBOPEN:
7755 CALL "ZZPROM",".4",X3$,Z,"Error opening channel to remote database!","","",0
7770 EXITTO 1000
7785 ! 
7790 ERR_TBLOPEN:
7795 CALL "ZZPROM",".4",X3$,Z,"Error opening channel to remote table!","","",0
7800 EXITTO 1000
7805 ! 
7810 ERR_SELECT:
7815 CALL "ZZPROM",".4",X3$,Z,"Error retrieving key data from remote table!","","",0
7830 EXITTO 1000
7835 ! 
7845 ! 
8100 REM "Initialize progress bar
8110 CALL "ZZINFO",Z[1],T9,X3$,T,T0,K,B,D,S0,S1,F$
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Update progress bar
8155 IF %GUI THEN CALL "ZZBARG",X3$,"HG",17,3,50,T1,T,C ELSE CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8199 ! 
8300 REM "Fix the dates in TF Key
8305 FIX_TF_KEY:
8310 ORIG_TF_KEY$=TF_KEY$; DSTR$=FNOPT$(REP_CHAN,"TFDATE=","",ERR=FK_DONE)
8315 WHILE DSTR$<>""
8320 DPOS=NUM(MID(DSTR$,1,4),ERR=NEXT_KEY_DPOS)
8325 IF DPOS+5>LEN(TF_KEY$) THEN BREAK
8330 IF POS(DR1$(347,1)="M ")<>0 THEN IF STP(MID(TF_KEY$,DPOS,6))="" THEN TF_KEY$=MID(TF_KEY$,1,DPOS-1)+DIM(10)+MID(TF_KEY$,DPOS+6) ELSE TF_KEY$=MID(TF_KEY$,1,DPOS-1)+UCS(FNDR_FMT_TFDATE$(MID(TF_KEY$,DPOS,6),"%Y-%Mz-%Dz"))+MID(TF_KEY$,DPOS+6); IF DATE_ERR THEN ERR_MSG$="DATE FORMAT ERROR["+MID(A_OUT$,DPOS,10)+"]"
8335 IF DR1$(347,1)="O" THEN IF STP(MID(TF_KEY$,DPOS,6))="" THEN TF_KEY$=MID(TF_KEY$,1,DPOS-1)+DIM(9)+MID(TF_KEY$,DPOS+6) ELSE TF_KEY$=MID(TF_KEY$,1,DPOS-1)+UCS(FNDR_FMT_TFDATE$(MID(TF_KEY$,DPOS,6),"%Dz-%Ms-%Yz"))+MID(TF_KEY$,DPOS+6); IF DATE_ERR THEN ERR_MSG$="DATE FORMAT ERROR["+MID(A_OUT$,DPOS,9)+"]" ! Oracle style date "DD-MM-YY"
8340 NEXT_KEY_DPOS: DSTR$=MID(DSTR$,5)
8345 WEND 
8390 FK_DONE:
8395 RETURN 
8399 ! 
8400 REM "Fix the dates in remote Key
8405 FIX_REMOTE_KEY:
8410 POS_DATE=0,FIX_RK$="",ORIG_RK$=RK$
8420 POS_DATE=POS("DATE"=KEY_DATATYPE$); IF POS_DATE=0 THEN GOTO 8491
8430 ! Find date segment in the key
8440 POS_DATE_START=INT(POS_DATE/7); POS_DATE_END=POS_DATE_START+1
8450 POS_DATE_START=POS(SEP=RK$,1,POS_DATE_START)+1
8460 POS_DATE_END=POS(SEP=RK$,1,POS_DATE_END)
8470 T$=MID(RK$,POS_DATE_START,POS_DATE_END-POS_DATE_START)
8475 ON POS(DB_TYPE$="OM ") GOTO *ESCAPE,8481,8481,8481
8481 ! Oracle, MySQL, SQL Server dates - "YYYY-MM-DD [..optional..]"
8482 TCHR=NUM(T$(1,3))-125; T$=CHR(TCHR)+T$(4,1)+T$(6,2)+T$(9,2)
8483 GOTO 8490
8490 RK$=MID(RK$,1,POS_DATE_START-1)+T$+MID(RK$,POS_DATE_END)
8491 IF SEQ_NUM_ASCII_FIX THEN AFPOS2=POS(SEP=RK$,-1,2),AFPOS1=POS(SEP=RK$,-1,1); RK$=RK$(1,AFPOS2)+CHR(NUM(MID(RK$,AFPOS2+1,AFPOS1-AFPOS2-1)))
8495 RETURN 
8499 ! 
8500 ! Get option - Slightly different from other implementations
8505 DEF FNOPT$(LOCAL FILE_CHAN, LOCAL O$, LOCAL D$)
8510 LOCAL X$,O
8515 X$=FIN(FILE_CHAN,"FILENAME"); O=POS(";"=X$); IF O=0 THEN X$="" ELSE X$=X$(O)
8520 X$=X$+";"+OPT(FILE_CHAN)+";"
8525 O=POS(UCS(O$)=UCS(X$))
8530 IF O=0 THEN RETURN D$
8535 X$=X$(O+LEN(O$))
8540 RETURN X$(1,POS(";"=X$)-1)
8545 END DEF
8549 ! 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9515 GOTO 0600
9520 ON C9 GOTO 9900,9900
9900 REM "END PROGRAM
9905 END_PROG:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 %DR_TARGET_SPECIFIC$="" ! DBD-350
9920 IF %GUI THEN RETURN 
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56001 REM "307251-DBD-350 Restrict the resync to specific target if applicable
56002 REM "307251-Enhancements                                              
