0010 REM "<PE2UAA> EC Item Gateway
0020 SETESC 9300; SETERR 9000
0035 REM "5.6 - 05/04/09 - 9.528333 - crg - SSP# 229553
0037 REM "229553-EC Item gateway: Validating for Size, Color and Other codes 
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0095 PRECISION 14; T2=TIM; PRECISION 2
0100 SETERR 9000
0101 INIT:
0110 X0$="PE2UAA",X1$="EC Item Gateway"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0136 DIM BLANK$(20)
0140 L0=750; REM "PE1 Record length for version 1.00
0141 COMMA$="N"
0142 IF MID(Q0$,1,1)="[" AND MID(Q0$,3,1)="]" THEN GOSUB SET_OPTIONS; Q0$(1)=Q0$(4) ! Options present, process them
0144 IF LEN(Q0$)>=L0 THEN SINGLE_RECORD=1,SINGLE_RECORD_DONE=0; REM "If q0$ is single record, then switch to single record mode
0145 M0$="000"
0150 COUNT=0; REM "Req count to send back to ghost task
0160 BAD_REC_COUNT=0; REM "Count of records not processed, see 7800's
0170 NEW_COUNT=0; REM "Count of new records set up, see 7900's
0180 UPDATE_COUNT=0; REM "Count of records updated
0200 REM "
0205 X0=-1
0210 HAS_GPE_GATEWAY=FN%HAS_MODULE("PE"); HAS_PROMO=FN%HAS_MODULE("PP"); HAS_WEBEC=FN%HAS_MODULE("EC")
0220 IF NOT(HAS_GPE_GATEWAY) OR NOT(HAS_WEBEC) THEN GOTO 9900
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920 ! SSP#145202
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0250 T=1,T0=1,T1=1
0260 W3=125
0275 W=999,W8=0
0280 DIM T1$(W3,"-"),T2$(W3,"="),T3$(W3,"*"),Y5$(W3),Y6$(W3)
0285 DIM T[T0,T1]
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST ECR$
0320 IOLIST PP3$
0410 IOLIST X3$,X4$,V1$,V3$,V2$,V0$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]; GOSUB 7400
0509 REM "Slot 1 used for import file opened in 1000's
0510 Z$="02O ECR... 03O PP3... 04O FM1... 05O FMP... 06O IC0... 07O PP0... 08O PP1... 09O PP2... 10O ED0... 11O ECG... 12O EDH... 13O ZZPARM 15O EDC... 16O ECS... 17O EC6... 18O EDA... 19O ECH... "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0550 REM "Open Printer
0570 CALL "ZZPRIN",X0$,X3$,Y0$,V3$,Z{ALL},W0$,W1$,W0,W9,W2,W3,W4; ON W4 GOTO 0575,9910
0600 REM "
0605 GOSUB 6000
0609 DIM GPE_PARM$(13); FIND (Z[13],KEY=X3$(9,3)+"GPE",DOM=*NEXT)GPE_PARM$
0610 DIM ECPARM$(1000); FIND (Z[13],KEY=X3$(9,3)+"E/C")ECPARM$
0615 MULTI_WHSE$=ECPARM$(708,1)
0617 COMMA$=V0$(72,1)
0700 REM "Create if necessary and open log files, used to be system calls using echo but needed change to support NT systems, SSP147476
0710 _GW=HFN; OPEN LOCK (_GW,ERR=*NEXT)HWD+DLM+"GW_LOG"; GOTO 0720
0715 IF ERR=12 THEN SERIAL HWD+DLM+"GW_LOG"; GOTO 0710 ELSE _GW=0
0720 _GPE=HFN; OPEN LOCK (_GPE,ERR=*NEXT)HWD+DLM+"GPE_LOG"; GOTO 0730
0725 IF ERR=12 THEN SERIAL HWD+DLM+"GPE_LOG"; GOTO 0720 ELSE _GPE=0
1000 REM "Get list of PE1 files to process
1005 IF SINGLE_RECORD THEN GOTO 1100
1010 CALL "ZZ2BLS","D0:PE1*","S",F$
1012 IF X3$(77,1)="U" THEN CALL "ZZ2BLS","D0:pe1*","S",F_LOWER$; F$=F$+F_LOWER$
1015 P=POS(":"=F$); IF P=0 THEN GOTO 5000
1020 F1$=F$(P+1); P1=POS(":"=F1$); IF P1>0 THEN F$=F1$(P1-2),F1$=F1$(1,P1-3) ELSE F$=""
1050 Z$="01CU 01O "+F1$+" "
1055 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 1056,1995
1060 CLOSE (Z[1]); OPEN LOCK (Z[1],OPT="TEXT")F1$; REM "Open for reading raw file
1065 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
1076 Y5$="Processing input file: "+F1$; GOSUB PRINT_LINE; Y5$=T1$; GOSUB PRINT_LINE
1099 ! 
1100 REM "Process the file
1105 I9=0,PE1$="",REC_COUNT$="",O1=6,NEW_REC=0,UPD_REC=0; DIM REC_COUNT[50]; REM "O1=Offset into PE1 record, to match ECR
1109 IF SINGLE_RECORD=0 THEN GOTO 1111 ELSE IF SINGLE_RECORD_DONE THEN GOTO 9900 ELSE PE1$=Q0$,L2=0,S1$="0",SINGLE_RECORD_DONE=1; GOTO 1150
1111 READ (Z[1],END=7750)PE1$; I9=I9+1,COUNT=COUNT+1,L2=0,O1=6,S1$="0",NEW_REC=0,UPD_REC=0; REM "S1$ is status code
1119 P=POS(MID(PE1$,1,3)=REC_COUNT$,3); IF P=0 THEN REC_COUNT$=REC_COUNT$+MID(PE1$,1,3); GOTO 1119
1120 P1=(P+2)/3; REC_COUNT[P1]=REC_COUNT[P1]+1
1142 IF COMMA$="Y" THEN GOSUB 6300; PE1$=RETURN$
1143 Y5$(1)=STR(COUNT:"####0")+"."
1145 IF LEN(PE1$)<L0 THEN I9$=PE1$; DIM PE1$(L0); PE1$(1)=I9$,REASON$="Record is short, only "+STR(LEN(RETURN$))+", should be "+STR(L0); GOSUB BAD_RECORD; GOTO 1109; REM "Short record, don't process
1150 IF NUL(MID(PE1$,O1+1,20)) THEN REASON$="Item code is blank"; GOSUB BAD_RECORD; GOTO 1109
1151 GOSUB VALIDATE_ITEM_CODE; IF ITEM_OK$<>"Y" THEN GOTO ERR_NO_ITEM
1152 DIM ECS$(1000); IF NOT(NUL(PE1$(O1+1,10))) THEN FIND (Z[16],KEY=PE1$(O1+1,10),DOM=ERR_NO_ECS)ECS$
1160 DIM ECR$(1000); EXTRACT (Z[2],KEY=PE1$(O1+1,20),DOM=1161)IOL=0310; GOSUB UPDATE_RECORD; GOTO 1109; REM "Existing item, update information
1165 GOSUB NEW_RECORD; GOTO 1109; REM "Not found, create new item
1170 ERR_NO_ITEM: REASON$="Not an existing item, please setup item first"; GOSUB BAD_RECORD; GOTO 1109
1180 ERR_NO_ECS: REASON$="Not an EC customer, no ECS record found"; GOSUB BAD_RECORD; GOTO 1109
1199 ! 
1900 REM "End of file
1901 REM "Close & Rename to PE4 for archiving. Erase an existing PE4 file, if same name
1905 Z$="01CU"+F1$+" "
1906 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
1910 F2$=F1$; IF F2$ LIKE "[Pp][Ee]1*" THEN F2$(1,3)="PE4" ELSE GOTO 1995
1919 REM "Get disk DIRectory of data files
1925 DATAPATH$=%DATAPATH$
1930 REM "Move the file
1935 ERASE DATAPATH$+DLM+F2$,ERR=*PROCEED
1936 RENAME DATAPATH$+DLM+F1$ TO DATAPATH$+DLM+F2$
1995 GOTO 1015
1999 ! 
2000 NEW_RECORD:REM "Create new record
2010 REASON$="New EC Item parameters",NEW_REC=1
2015 REM "Default ECR fields here
2020 ECR$(253,1)=ECPARM$(559,1) ! Default price source for item - C,I
2025 IF NOT(NUL(ECS$(515,21))) THEN ECR$(304,21)=ECS$(515,21) ! Set default whse group from cust params
2080 GOSUB ALL_FIELDS; NEW_COUNT=NEW_COUNT+1
2098 NEW_RECORD_END:RETURN 
2099 ! 
3000 UPDATE_RECORD:REM "Update an existing record
3010 REASON$="Update EC Item parameters",UPD_REC=1
3080 GOSUB ALL_FIELDS; UPDATE_COUNT=UPDATE_COUNT+1
3098 UPDATE_RECORD_END:RETURN 
3099 ! 
3700 ALL_FIELDS:REM "Set remaining fields if not blank for both new and updated items
3745 IF NOT(NUL(PE1$(O1+1,20))) THEN ECR$(1,20)=PE1$(O1+1,20); REM "ECR.CUST_DIV + ECR.CUST_CODE + ECR.ITEM_CODE
3760 IF NOT(NUL(PE1$(O1+21,10))) THEN ECR$(21,10)=PE1$(O1+21,10); CSTART=21; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.DEF_CATEGORY
3765 IF NOT(NUL(PE1$(O1+31,30))) THEN ECR$(31,30)=PE1$(O1+31,30); REM "ECR.IMAGE_FILE_NAME_1
3770 IF NOT(NUL(PE1$(O1+61,30))) THEN ECR$(61,30)=PE1$(O1+61,30); REM "ECR.IMAGE_FILE_NAME_2
3775 IF NOT(NUL(PE1$(O1+91,30))) THEN ECR$(91,30)=PE1$(O1+91,30); REM "ECR.IMAGE_FILE_NAME_3
3780 IF NOT(NUL(PE1$(O1+121,30))) THEN ECR$(121,30)=PE1$(O1+121,30); REM "ECR.IMAGE_FILE_NAME_4
3785 IF NOT(NUL(PE1$(O1+151,30))) THEN ECR$(151,30)=PE1$(O1+151,30); REM "ECR.IMAGE_FILE_NAME_5
3790 O1-=6 ! IF NOT(NUL(PE1$(O1+181,6))) THEN ECR$(181,6)=PE1$(O1+181,6); REM "ECR.DISP_DATE_IN_CATALOG, NOT USED
3795 O1-=6 ! IF NOT(NUL(PE1$(O1+187,6))) THEN ECR$(187,6)=PE1$(O1+187,6); REM "ECR.EXP_DATE_IN_CATALOG, NOT USED
3800 IF NOT(NUL(PE1$(O1+193,10))) THEN ECR$(193,10)=PE1$(O1+193,10); CSTART=193; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_2
3805 IF NOT(NUL(PE1$(O1+203,10))) THEN ECR$(203,10)=PE1$(O1+203,10); CSTART=203; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_3
3810 IF NOT(NUL(PE1$(O1+213,10))) THEN ECR$(213,10)=PE1$(O1+213,10); CSTART=213; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_4
3815 IF NOT(NUL(PE1$(O1+223,10))) THEN ECR$(223,10)=PE1$(O1+223,10); CSTART=223; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_5
3820 IF NOT(NUL(PE1$(O1+233,2))) THEN ECR$(233,2)=PE1$(O1+233,2); REM "ECR.SECURE_CODES_1
3825 IF NOT(NUL(PE1$(O1+235,2))) THEN ECR$(235,2)=PE1$(O1+235,2); REM "ECR.SECURE_CODES_2
3830 IF NOT(NUL(PE1$(O1+237,2))) THEN ECR$(237,2)=PE1$(O1+237,2); REM "ECR.SECURE_CODES_3
3835 IF NOT(NUL(PE1$(O1+239,2))) THEN ECR$(239,2)=PE1$(O1+239,2); REM "ECR.SECURE_CODES_4
3840 IF NOT(NUL(PE1$(O1+241,2))) THEN ECR$(241,2)=PE1$(O1+241,2); REM "ECR.SECURE_CODES_5
3845 IF NOT(NUL(PE1$(O1+243,10))) THEN ECR$(243,10)=PE1$(O1+243,10); GOSUB VALIDATE_3P_ID; IF OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.PARTY_ID_3RD
3850 IF NOT(NUL(PE1$(O1+253,1))) THEN IF POS(PE1$(O1+253,1)="CI")<>0 THEN ECR$(253,1)=PE1$(O1+253,1); REM "ECR.PRICE_SOURCE
3853 O1-=1 ! ECR.ECR_UNUSED_1, unused field
3855 IF NOT(NUL(PE1$(O1+255,1))) THEN ECR$(255,1)=FNY$(PE1$(O1+255,1)); REM "ECR.CREATE_PO_WHEN_ORDER
3860 O1-=48 ! IF NOT(NUL(PE1$(O1+256,48))) THEN ECR$(256,48)=PE1$(O1+256,48); REM "ECR.ITEM_WHSE_LIST, List will be generated using next field by system
3865 IF NOT(NUL(PE1$(O1+304,21))) THEN ECR$(304,21)=PE1$(O1+304,21); GOSUB VALIDATE_WHSE_GROUP; IF WHSE_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.WAREHOUSE_GROUP
3870 IF NOT(NUL(PE1$(O1+325,10))) THEN ECR$(325,10)=PE1$(O1+325,10); CSTART=325; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_6
3875 IF NOT(NUL(PE1$(O1+335,10))) THEN ECR$(335,10)=PE1$(O1+335,10); CSTART=335; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_7
3880 IF NOT(NUL(PE1$(O1+345,10))) THEN ECR$(345,10)=PE1$(O1+345,10); CSTART=345; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_8
3885 IF NOT(NUL(PE1$(O1+355,10))) THEN ECR$(355,10)=PE1$(O1+355,10); CSTART=355; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_9
3890 IF NOT(NUL(PE1$(O1+365,10))) THEN ECR$(365,10)=PE1$(O1+365,10); CSTART=365; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_10
3895 IF NOT(NUL(PE1$(O1+375,10))) THEN ECR$(375,10)=PE1$(O1+375,10); CSTART=375; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_11
3900 IF NOT(NUL(PE1$(O1+385,10))) THEN ECR$(385,10)=PE1$(O1+385,10); CSTART=385; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_12
3905 IF NOT(NUL(PE1$(O1+395,10))) THEN ECR$(395,10)=PE1$(O1+395,10); CSTART=395; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_13
3910 IF NOT(NUL(PE1$(O1+405,10))) THEN ECR$(405,10)=PE1$(O1+405,10); CSTART=405; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_14
3915 IF NOT(NUL(PE1$(O1+415,10))) THEN ECR$(415,10)=PE1$(O1+415,10); CSTART=415; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_15
3920 IF NOT(NUL(PE1$(O1+425,10))) THEN ECR$(425,10)=PE1$(O1+425,10); CSTART=425; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_16
3925 IF NOT(NUL(PE1$(O1+435,10))) THEN ECR$(435,10)=PE1$(O1+435,10); CSTART=435; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_17
3930 IF NOT(NUL(PE1$(O1+445,10))) THEN ECR$(445,10)=PE1$(O1+445,10); CSTART=445; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_18
3935 IF NOT(NUL(PE1$(O1+455,10))) THEN ECR$(455,10)=PE1$(O1+455,10); CSTART=455; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_19
3940 IF NOT(NUL(PE1$(O1+465,10))) THEN ECR$(465,10)=PE1$(O1+465,10); CSTART=465; GOSUB VALIDATE_CATEGORY; IF CAT_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.CATEGORY_20
3945 IF NOT(NUL(PE1$(O1+475,3))) THEN ECR$(475,3)=PE1$(O1+475,3); ISCSTART=475; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_1
3950 IF NOT(NUL(PE1$(O1+478,3))) THEN ECR$(478,3)=PE1$(O1+478,3); ISCSTART=478; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_2
3955 IF NOT(NUL(PE1$(O1+481,3))) THEN ECR$(481,3)=PE1$(O1+481,3); ISCSTART=481; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_3
3960 IF NOT(NUL(PE1$(O1+484,3))) THEN ECR$(484,3)=PE1$(O1+484,3); ISCSTART=484; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_4
3965 IF NOT(NUL(PE1$(O1+487,3))) THEN ECR$(487,3)=PE1$(O1+487,3); ISCSTART=487; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_5
3970 IF NOT(NUL(PE1$(O1+490,3))) THEN ECR$(490,3)=PE1$(O1+490,3); ISCSTART=490; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_6
3975 IF NOT(NUL(PE1$(O1+493,3))) THEN ECR$(493,3)=PE1$(O1+493,3); ISCSTART=493; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_7
3980 IF NOT(NUL(PE1$(O1+496,3))) THEN ECR$(496,3)=PE1$(O1+496,3); ISCSTART=496; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_8
3985 IF NOT(NUL(PE1$(O1+499,3))) THEN ECR$(499,3)=PE1$(O1+499,3); ISCSTART=499; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_9
3990 IF NOT(NUL(PE1$(O1+502,3))) THEN ECR$(502,3)=PE1$(O1+502,3); ISCSTART=502; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_10
3995 IF NOT(NUL(PE1$(O1+505,3))) THEN ECR$(505,3)=PE1$(O1+505,3); ISCSTART=505; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_11
4000 IF NOT(NUL(PE1$(O1+508,3))) THEN ECR$(508,3)=PE1$(O1+508,3); ISCSTART=508; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_12
4005 IF NOT(NUL(PE1$(O1+511,3))) THEN ECR$(511,3)=PE1$(O1+511,3); ISCSTART=511; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_13
4010 IF NOT(NUL(PE1$(O1+514,3))) THEN ECR$(514,3)=PE1$(O1+514,3); ISCSTART=514; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_14
4015 IF NOT(NUL(PE1$(O1+517,3))) THEN ECR$(517,3)=PE1$(O1+517,3); ISCSTART=517; GOSUB VALIDATE_ITEM_SEL_CODE; IF ISC_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.ITEM_SEL_CODE_15
4020 IF NOT(NUL(PE1$(O1+520,8))) THEN ECR$(520,8)=STR(NUM(PE1$(O1+520,8),ERR=*NEXT)); REM "ECR.LOC_MONTH_REQ_MAX
4025 IF NOT(NUL(PE1$(O1+528,1))) THEN IF ECS$(588,1)="Y" THEN ECR$(528,1)=FNY$(PE1$(O1+528,1)); ELSE ECR$(528,1)="N"; REM "ECR.ALLOW_MULT_ORD
4035 IF NOT(NUL(PE1$(O1+529,2))) THEN ECR$(529,2)=PE1$(O1+529,2); CHECK_POCODE$=ECR$(529,2); GOSUB VALIDATE_PO_CODE; IF POCODE_OK$="Y" THEN RANGE=1; GOSUB VALIDATE_PO_RANGE; END_IF ; IF POCODE_OK$<>"Y" OR PORANGE_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.START_PO+ECR.END_PO
4040 IF NOT(NUL(PE1$(O1+531,1))) THEN ECR$(531,1)=FNY$(PE1$(O1+531,1)); GOSUB VALIDATE_PROMO; REM "ECR.PROMO
4045 IF NOT(NUL(PE1$(O1+532,40))) THEN ECR$(532,40)=PE1$(O1+532,40); GOSUB VALIDATE_PROMO; REM "ECR.PROMO_DESC
4050 IF NOT(NUL(PE1$(O1+572,1))) THEN ECR$(572,1)=FNY$(PE1$(O1+572,1)); IF ECR$(576,1)="Y" AND ECR$(572,1)="Y" THEN REASON$+=" Qty breaks only and Show PDF both enabled"; GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.QTY_BREAKS_ONLY
4055 O1-=1 ! IF NOT(NUL(PE1$(O1+573,1))) THEN ECR$(573,1)=PE1$(O1+573,1);  REM "ECR.UNSURE, NOT USED
4065 IF NOT(NUL(PE1$(O1+574,2))) THEN ECR$(574,2)=PE1$(O1+574,2); CHECK_POCODE$=ECR$(574,2); GOSUB VALIDATE_PO_CODE; IF POCODE_OK$="Y" THEN RANGE=2; GOSUB VALIDATE_PO_RANGE; END_IF ; IF POCODE_OK$<>"Y" OR PORANGE_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.START_PO2+ECR.END_PO2
4070 IF NOT(NUL(PE1$(O1+576,1))) THEN ECR$(576,1)=FNY$(PE1$(O1+576,1)); IF ECR$(576,1)="Y" AND ECR$(572,1)="Y" THEN REASON$+=" Qty breaks only and Show PDF both enabled"; GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END; REM "ECR.SHOW_PDF_NO_QTY
4075 IF NOT(NUL(PE1$(O1+577,20))) THEN ECR$(577,20)=PE1$(O1+577,20); REM "ECR.EXT_REF_1
4080 WRITE_PP3=0; IF NOT(HAS_PROMO) OR NUL(PE1$(O1+597,10)) THEN GOTO WRITE_REC
4095 DIM PP3$(126); PP3$(1,30)=ECR$(1,20)+PE1$(O1+597,10); GOSUB VALIDATE_PROMO_ITEM_CODE; IF PROMO_CODE_OK$<>"Y" THEN GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END ELSE WRITE_PP3=1; REM "PP3.PROMO_CODE
4200 WRITE_REC:
4210 WRITE (Z[2],KEY=ECR$(1,20),ERR=ERR_ECR_WRITE)IOL=0310
4215 Y5$(63)="Y"
4220 IF WRITE_PP3 THEN WRITE (Z[3],KEY=PP3$(1,20),ERR=ERR_PP3_WRITE)IOL=0320; WRITE_PP3=0; Y5$(70)="Y"
4270 IF NOT(NUL(PE1$(O1+607,200))) THEN GOSUB WRITE_CATALOG_REC
4280 GOSUB PRINT_LINE
4295 ALL_FIELDS_END:RETURN 
4299 ! 
4310 ERR_ECR_WRITE: REASON$+=", error writing to ECR record, key:"+ECR$(1,20); GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END
4320 ERR_PP3_WRITE: REASON$+=", error writing to PP3 record, key:"+PP3$(1,20); GOSUB BAD_RECORD; EXITTO ALL_FIELDS_END
4399 ! 
4400 REM "Optionally write upto 20 ECH records if the Catalog, Category and Item are provided
4405 WRITE_CATALOG_REC:
4420 IF NOT(NUL(PE1$(O1+607,10))) AND NOT(NUL(ECR$(21,10))) THEN CSTART=O1+607; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+607,10); CATEGORY$=ECR$(21,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4430 IF NOT(NUL(PE1$(O1+617,10))) AND NOT(NUL(ECR$(193,10))) THEN CSTART=O1+617; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+617,10); CATEGORY$=ECR$(193,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4440 IF NOT(NUL(PE1$(O1+627,10))) AND NOT(NUL(ECR$(203,10))) THEN CSTART=O1+627; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+627,10); CATEGORY$=ECR$(203,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4450 IF NOT(NUL(PE1$(O1+637,10))) AND NOT(NUL(ECR$(213,10))) THEN CSTART=O1+637; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+637,10); CATEGORY$=ECR$(213,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4460 IF NOT(NUL(PE1$(O1+647,10))) AND NOT(NUL(ECR$(223,10))) THEN CSTART=O1+647; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+647,10); CATEGORY$=ECR$(223,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4470 IF NOT(NUL(PE1$(O1+657,10))) AND NOT(NUL(ECR$(325,10))) THEN CSTART=O1+657; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+657,10); CATEGORY$=ECR$(325,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4480 IF NOT(NUL(PE1$(O1+667,10))) AND NOT(NUL(ECR$(335,10))) THEN CSTART=O1+667; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+667,10); CATEGORY$=ECR$(335,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4490 IF NOT(NUL(PE1$(O1+677,10))) AND NOT(NUL(ECR$(345,10))) THEN CSTART=O1+677; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+677,10); CATEGORY$=ECR$(345,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4500 IF NOT(NUL(PE1$(O1+687,10))) AND NOT(NUL(ECR$(355,10))) THEN CSTART=O1+687; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+687,10); CATEGORY$=ECR$(355,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4510 IF NOT(NUL(PE1$(O1+697,10))) AND NOT(NUL(ECR$(365,10))) THEN CSTART=O1+697; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+697,10); CATEGORY$=ECR$(365,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4520 IF NOT(NUL(PE1$(O1+707,10))) AND NOT(NUL(ECR$(375,10))) THEN CSTART=O1+707; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+707,10); CATEGORY$=ECR$(375,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4530 IF NOT(NUL(PE1$(O1+717,10))) AND NOT(NUL(ECR$(385,10))) THEN CSTART=O1+717; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+717,10); CATEGORY$=ECR$(385,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4540 IF NOT(NUL(PE1$(O1+727,10))) AND NOT(NUL(ECR$(395,10))) THEN CSTART=O1+727; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+727,10); CATEGORY$=ECR$(395,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4550 IF NOT(NUL(PE1$(O1+737,10))) AND NOT(NUL(ECR$(405,10))) THEN CSTART=O1+737; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+737,10); CATEGORY$=ECR$(405,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4560 IF NOT(NUL(PE1$(O1+747,10))) AND NOT(NUL(ECR$(415,10))) THEN CSTART=O1+747; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+747,10); CATEGORY$=ECR$(415,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4570 IF NOT(NUL(PE1$(O1+757,10))) AND NOT(NUL(ECR$(425,10))) THEN CSTART=O1+757; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+757,10); CATEGORY$=ECR$(425,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4580 IF NOT(NUL(PE1$(O1+767,10))) AND NOT(NUL(ECR$(435,10))) THEN CSTART=O1+767; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+767,10); CATEGORY$=ECR$(435,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4590 IF NOT(NUL(PE1$(O1+777,10))) AND NOT(NUL(ECR$(445,10))) THEN CSTART=O1+777; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+777,10); CATEGORY$=ECR$(445,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4600 IF NOT(NUL(PE1$(O1+787,10))) AND NOT(NUL(ECR$(455,10))) THEN CSTART=O1+787; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+787,10); CATEGORY$=ECR$(455,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4610 IF NOT(NUL(PE1$(O1+797,10))) AND NOT(NUL(ECR$(465,10))) THEN CSTART=O1+797; GOSUB VALIDATE_CATALOG; IF CAT_OK$<>"Y" THEN GOTO *NEXT ELSE CATALOG$=PE1$(O1+797,10); CATEGORY$=ECR$(465,10); CATITEM$=ECR$(1,20); GOSUB WRITE_ECH
4695 RETURN 
4699 ! 
4700 REM "Write ECH record here and set flag to rebuild sorts later
4705 WRITE_ECH:
4708 DIM ECH$(190)
4709 ECH$(1,40)=CATALOG$+CATEGORY$+CATITEM$
4710 ECH$(41,20)=ECR$(1,20)
4711 ECH$(61,40)=ITEM_DESC$
4720 WRITE (Z[19],KEY=ECH$(1,40),ERR=*NEXT)ECH$; ECH_MODIFIED=1; Y5$(77)="Y"
4725 RETURN 
4729 ! 
5000 REM "EOJ
5005 GOSUB PRINT_LINE; Y5$=T1$; GOSUB PRINT_LINE
5010 END_MESSAGE$=FN%CDS$+", "+STR(COUNT:"0000")+" records processed"
5020 GOSUB SYSTEM_CALL
5040 IF NEW_COUNT<>0 THEN END_MESSAGE$=STR(NEW_COUNT:"0000")+" new records were added to file"; GOSUB SYSTEM_CALL
5045 IF UPDATE_COUNT<>0 THEN END_MESSAGE$=STR(UPDATE_COUNT:"0000")+" records were updated"; GOSUB SYSTEM_CALL
5050 IF BAD_REC_COUNT<>0 THEN END_MESSAGE$=STR(BAD_REC_COUNT:"0000")+" records were not processed"; GOSUB SYSTEM_CALL
5060 IF ECH_MODIFIED THEN PROCESS "ECGUT6","../ECG/EC.EN"
5085 MSGBOX "Process complete","F.Y.I.","!,TIM=3" ! CMD_STR$="END"
5090 GOTO 9900
5099 ! 
6000 REM "Page header
6040 CALL "ZZHEAD",X0$,X1$,X2$,X3$,W0$,W1$,W2$,W3$,W3,W,W9,W8,W0,W5,W2,W4$,R6$; ON W5 GOTO 6041,9900
6060 GOSUB 6200
6090 RETURN 
6200 REM "Column titles"
6220 GOSUB PRINT_LINE
6230 DIM Y5$(W3); Y5$(2)="S.No.",Y5$(10)="Customer",Y5$(22)="Item",Y5$(35)="3rd Party Id",Y5$(49)="Promo Code",Y5$(62)="ECR?",Y5$(69)="PP3?",Y5$(76)="ECH?"
6233 GOSUB PRINT_LINE
6291 Y5$=T1$
6292 GOSUB PRINT_LINE
6295 RETURN 
6300 REM "BREAK OUT IF COMMA DELIMITED
6306 DELIM$=","
6310 F_NUM=85,F_LEN$="03031010103030303030101010100202020202100101211010101010101010101010101010100303030303030303030303030303030801010101400101010120101010101010101010101010101010101010101010"
6320 DIM FIELDS[F_NUM]
6330 FOR F_LOOP=1 TO F_NUM
6340 FIELDS[F_LOOP]=NUM(F_LEN$(2*F_LOOP-1,2))
6350 NEXT F_LOOP
6360 CALL "ZZ2DLM","","",PE1$,DELIM$,FIELDS{ALL},"",RETURN$,FIELDS_FOUND
6395 RETURN 
6399 ! 
6500 SYSTEM_CALL:REM "Write out to gateway Log
6520 IF _GPE>0 THEN PRINT (_GPE)END_MESSAGE$
6530 Y5$=END_MESSAGE$; GOSUB PRINT_LINE
6540 SYSTEM_CALL_END:RETURN 
6599 ! 
6600 REM "Validate item code
6605 VALIDATE_ITEM_CODE:
6606 CALL "ZZDISP","AX",PE1$(O1+1,10),"A/R",X3$,X$,"",0,0,X4$; Y5$(10)=X$; REM "Customer Id
6607 Y5$(22)=PE1$(O1+11,10); REM "Item code
6608 ITEM_OK$="Y",ITEM_DESC$=""
6610 FIND (Z[4],KEY=MID(PE1$,O1+1,20),DOM=*NEXT)FM1$; ITEM_DESC$=MID(FM1$,42,40); GOTO *RETURN ! Found item in FM1
6615 FIND (Z[6],KEY=MID(PE1$,O1+1,20),DOM=*NEXT)IC0$; ITEM_DESC$=MID(IC0$,21,40); GOTO *RETURN ! Found item in IC0
6623 ITEM_OK$="N"
6625 RETURN 
6629 ! 
6630 REM "Validate category code
6635 VALIDATE_CATEGORY:
6640 CAT_OK$="Y"; FIND (Z[11],KEY=ECR$(CSTART,10),DOM=*NEXT); RETURN 
6643 CAT_OK$="N"; REASON$+=", invalid category: "+ECR$(CSTART,10)
6645 RETURN 
6649 ! 
6650 REM "Validate item selection code
6655 VALIDATE_ITEM_SEL_CODE:
6660 ISC_OK$="Y"; FIND (Z[12],KEY=ECR$(ISCSTART,3),DOM=*NEXT); RETURN 
6663 ISC_OK$="N"; REASON$+=", invalid item selection code: "+ECR$(ISCSTART,3)
6665 RETURN 
6669 ! 
6670 REM "Validate 3rd party id
6675 VALIDATE_3P_ID:
6677 Y5$(35)=ECR$(243,10)
6680 OK$="Y"; FIND (Z[17],KEY=ECR$(243,10),DOM=*NEXT); RETURN 
6683 OK$="N"; REASON$+=", invalid third-party code: "+ECR$(243,10)
6685 RETURN 
6689 ! 
6690 REM "Validate given PO code - either blank or between 1-9 or A-Z
6691 VALIDATE_PO_CODE:
6692 POCODE_OK$="Y"; IF ECR$(255,1)<>"Y" THEN ECR$(529,2)=DIM(2),ECR$(574,2)=DIM(2); GOTO *RETURN
6693 IF POS(MID(CHECK_POCODE$,1,1)="0123456789ABCDEFGHIJKLMNOPQRSTUVXYZ")<>0 AND POS(MID(CHECK_POCODE$,2,1)="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ")<>0 THEN RETURN 
6694 POCODE_OK$="N"; REASON$+=", invalid po codes: ["+CHECK_POCODE$(1,1)+"-"+CHECK_POCODE$(2,1)+"]"
6695 RETURN 
6699 ! 
6700 REM "Validate two pairs of PO ranges
6705 VALIDATE_PO_RANGE:
6710 PORANGE_OK$="Y"; IF ECR$(255,1)<>"Y" THEN ECR$(529,2)=DIM(2),ECR$(574,2)=DIM(2); GOTO *RETURN
6713 ON RANGE GOTO *RETURN,PO_RNG_1,PO_RNG_2
6715 PO_RNG_1:IF RANGE=1 THEN IF ECR$(530,1)>=ECR$(529,1) THEN GOTO *RETURN
6720 PORANGE_OK$="N"; REASON$+=", invalid po range "+STR(RANGE)+": ["+ECR$(529,1)+"-"+ECR$(530,1)+"]"; GOTO *RETURN
6725 PO_RNG_2:IF RANGE=2 THEN IF ECR$(575,1)>=ECR$(574,1) THEN GOTO ALL_PO_RNG
6730 PORANGE_OK$="N"; REASON$+=", invalid po range "+STR(RANGE)+": ["+ECR$(574,1)+"-"+ECR$(575,1)+"]"; GOTO *RETURN
6735 ALL_PO_RNG:IF RANGE=2 THEN IF (ECR$(574,1)<=ECR$(529,1) AND ECR$(529,1)<=ECR$(575,1)) OR (ECR$(574,1)<=ECR$(530,1) AND ECR$(530,1)<=ECR$(575,1)) OR (ECR$(529,1)<=ECR$(574,1) AND ECR$(574,1)<=ECR$(530,1)) OR (ECR$(529,1)<=ECR$(575,1) AND ECR$(575,1)<=ECR$(530,1)) THEN GOTO *NEXT ELSE GOTO *RETURN
6740 PORANGE_OK$="N"; REASON$+=", invalid po range combos: ["+ECR$(529,1)+"-"+ECR$(530,1)+"],["+ECR$(574,1)+"-"+ECR$(575,1)+"]"; GOTO *RETURN
6745 RETURN 
6749 ! 
6750 REM "Validate E-Logistics whse group, expand whse list
6752 VALIDATE_WHSE_GROUP:
6754 IF MULTI_WHSE$<>"Y" THEN WHSE_OK$="N"; REASON$+=", extended whse group feature not licensed"; GOTO *RETURN
6755 WHSE_OK$="Y"; DIM WHSEGRP$(1000); FIND (Z[15],KEY=ECR$(304,21),DOM=*NEXT)WHSGRP$; GOTO EXPAND_WHSE_GROUP
6758 WHSE_OK$="N"; REASON$+=", invalid whse group code: "+ECR$(304,21); GOTO *RETURN
6760 EXPAND_WHSE_GROUP:
6763 ECR$(256,48)=MID(WHSEGRP$,82,48)
6765 RETURN 
6769 ! 
6770 REM "Validate EC Promo fields for ECR
6771 VALIDATE_PROMO:
6775 PROMO_OK$="Y"; IF NOT(HAS_PROMO) OR ECR$(531,1)<>"Y" THEN ECR$(531,1)="N",ECR$(532,40)=""
6778 RETURN 
6779 ! 
6780 REM "Validate EC Promo item code for PP3
6781 VALIDATE_PROMO_ITEM_CODE:
6782 Y5$(49)=PP3$(21,10)
6783 PROMO_CODE_OK$="Y"
6785 CHECK_ED0: SED0$=MID(PP3$,21,4); IF NOT(NUL(SED0$)) THEN FIND (Z[10],KEY=PAD(SED0$,4),DOM=*NEXT); GOTO CHECK_PP0
6786 PROMO_CODE_OK$="N"; REASON$+=", invalid promo code: "+MID(PP3$,21,10)+" , No such group code: ["+SED0$+"]"; GOTO *RETURN
6789 CHECK_PP0: SPP0$=MID(PP3$,25,2); IF NOT(NUL(SPP0$)) THEN FIND (Z[7],KEY=PAD(SPP0$,2),DOM=*NEXT); END_IF ; GOTO CHECK_PP1 ! SSP 229553
6790 PROMO_CODE_OK$="N"; REASON$+=", invalid promo code: "+MID(PP3$,21,10)+" , No such size code: ["+SPP0$+"]"; GOTO *RETURN
6792 CHECK_PP1: SPP1$=MID(PP3$,27,2); IF NOT(NUL(SPP1$)) THEN FIND (Z[8],KEY=PAD(SPP1$,2),DOM=*NEXT); END_IF ; GOTO CHECK_PP2 ! SSP 229553
6793 PROMO_CODE_OK$="N"; REASON$+=", invalid promo code: "+MID(PP3$,21,10)+" , No such color code: ["+SPP1$+"]"; GOTO *RETURN
6795 CHECK_PP2: SPP2$=MID(PP3$,29,2); IF NOT(NUL(SPP2$)) THEN FIND (Z[9],KEY=PAD(SPP2$,2),DOM=*NEXT); END_IF ; GOTO CHECK_PROMO_CODE_DONE ! SSP 229553
6796 PROMO_CODE_OK$="N"; REASON$+=", invalid promo code: "+MID(PP3$,21,10)+" , No such 'other' code: ["+SPP2$+"]"; GOTO *RETURN
6797 CHECK_PROMO_CODE_DONE:
6798 RETURN 
6799 ! 
6800 VALIDATE_CATALOG:
6805 CAT_OK$="Y"; FIND (Z[18],KEY=PE1$(CSTART,10),DOM=*NEXT); RETURN 
6810 CAT_OK$="N"; REASON$+=", invalid catalog: "+PE1$(CSTART,10)
6815 RETURN 
6819 ! 
7000 REM "Process options from calling program
7005 SET_OPTIONS:
7010 DIM COMMA$(1)
7040 COMMA$=MID(Q0$,2,1) ! Option to indicate input is comma-separated
7045 RETURN 
7049 ! 
7300 PRINT_LINE:REM "Output line Y5$ to output device
7310 W=W+1
7320 IF Y5$=Y6$ THEN PRINT (W9)"" ELSE PRINT (W9)Y5$
7324 DIM Y5$(W3)
7325 IF W>=W0 THEN GOSUB 6000
7330 RETURN 
7400 REM "Read report selection parameters"
7410 Z$="12O ZZP     13O ZZPARM  "
7420 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 7425,9900
7430 Y3$=X3$(1,6),Y4$=X3$(178,7)
7440 READ (Z[12],KEY=X3$(1,8),DOM=7445)IOL=0410
7470 X3$(178,7)=Y4$,V0=NUM(V0$(71,1)),W3$=V0$(19,POS("   "=V0$(19,40)+"  ")-1)
7480 ! FOR U1=1 TO LEN(V1$); IF V1$(U1,1)=" " THEN V1$(U1,1)="."; NEXT U1 ELSE NEXT U1
7490 RETURN 
7500 REM "Convert date Q$ into D0$
7501 REM "Q$ in YYMMDD format
7505 D0$=""
7506 IF STP(Q$,3," ")="" THEN GOTO 7545
7510 IF LEN(Q$)<6 THEN GOTO 7545 ELSE D1$=Q$(1,2)
7515 IF D1$<"50" THEN D1$="20"+D1$ ELSE D1$="19"+D1$
7520 D0$=CHR(NUM(D1$(1,3),ERR=7521)-125)+D1$(4,1)+Q$(3,2)+Q$(5,2)
7545 RETURN 
7599 ! 
7750 REM "End of file
7754 IF LEN(REC_COUNT$)<=0 THEN GOTO 7795
7755 FOR X=1 TO LEN(REC_COUNT$)-2 STEP 3
7756 S$="GPE|STAT|"+FN%CDS$+"|"+X3$(40,3)+"|"+X3$(9,3)+"|"+FID(0)+"|"+F1$+"|"+REC_COUNT$(X,3)+"|"+STR(REC_COUNT[(X+2)/3]:"0000")
7758 IF _GW>0 THEN PRINT (_GW)S$
7759 NEXT X
7795 GOTO 1900
7799 ! 
7800 BAD_RECORD:REM "Write message to GPE_LOG, couldn't process this record
7805 BAD_REC_COUNT=BAD_REC_COUNT+1
7810 MESSAGE$="File: "+F1$+" Reason: "+REASON$
7820 BAD_REC$=PE1$(7,20) ! +PE1$(67,3)+"|"+PE1$(88,10)+"|"+PE1$(126,4)+"|"+PE1$(130,4)+"|"+PE1$(344,10)+"|"+PE1$(538,20)
7835 IF _GPE>0 THEN PRINT (_GPE)MESSAGE$; PRINT (_GPE)BAD_REC$
7840 GOSUB PRINT_LINE; Y5$(10)=BAD_REC$+": "+REASON$; GOSUB PRINT_LINE; GOSUB PRINT_LINE
7890 BAD_RECORD_END:RETURN 
7899 ! 
8910 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"      ")-1)
8920 DEF FNY$(Z9$)=TBL(UCS(Z9$)="Y","N","Y")
9000 REM "ERROR PROCESSING                                                 
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL                                
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC                                       
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9905 CALL "ZZERPT",X3$,X4$,X0$,Y3$,Y4$,W9,W2,W5,W,W0,W8,T3,V3$
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 IF _GW>0 THEN CLOSE (_GW)
9916 IF _GPE>0 THEN CLOSE (_GPE)
9930 ! SETERR 9940; IF POS(Q1$="GD")<>0 THEN Q0$=STR(COUNT) ELSE Q1$=A1$
9935 EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56002 REM "226113-EC Item Gateway
