0010 REM "Franchise Audit Fixer <CM2ARF>
0020 SETESC 9300; SETERR 9000
0035 REM "5.0 - 01/10/02 - 19.121666 - plh - SSP# 142887
0040 REM "Copyright 2002 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="CM2ARF",X1$="Franchise Audit Report Update"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0170 IF POS("MS"=UCS(SYS)) THEN ISWIN=1 ELSE ISWIN=0
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21],B[22],B[23],B[24],B[25],B[26],B[27]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20],C[21],C[22],C[23],C[24],C[25],C[26],C[27]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14]
0350 IOLIST E$,E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],E[8],E[9],E[10],E[11],E[12],E[13],E[14]
0360 IOLIST F$
0370 IOLIST G$,G[0],G[1],G[2],G[3],G[4],G[5],G[6],G[7],G[8],G[9],G[10],G[11],G[12],G[13],G[14],G[15],G[16],G[17],G[18],G[19],G[20],G[21],G[22],G[23],G[24],G[25],G[26],G[27]
0380 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8],H[9],H[10],H[11],H[12],H[13]
0390 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14],I[15],I[16],I[17],I[18],I[19],I[20]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O CMD...  03O API...  05O AR6...  06O ARH...  07O APQ...  08O APD...  09O CM3...  10O APH...  11O ARP...  13O ZZPARM  "
0511 REM "APH is open for use by CM2AAA as a reference.
0512 REM "ARP is open for use by CM2AAA as a reference.
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 READ (Z[13],KEY=X3$(9,3)+"A/P")P0$
0535 READ (Z[13],KEY=X3$(9,3)+"A/R")P1$
0600 REM "
0605 PRINT @(22,6),'SB',"Master Company: ",'SF',X3$(9,3),
0610 GOSUB 6000
0620 IF Q1$="" THEN GOSUB 6800
0640 IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 0641,9900
0900 REM 
0980 READ (Z[1],KEY=J$(1,3),DOM=0981)
0990 C0$="",C1$=""; REM "C0$ is current company number, C1$ is previous company number
0995 C=0; GOSUB 8150
1000 REM "Read thru CMD file, close/open files as needed when company changes
1005 DIM A$(50),A[6]
1010 READ (Z[1],END=5000)IOL=0310
1040 IF A$(1,3)=X3$(9,3) OR A$(1,3)<J$(1,3) THEN GOTO 1000 ELSE IF A$(1,3)>J$(4,3) THEN GOTO 5000
1054 CLOSE (14); OPEN (14,ERR=1000)"AR1"+A$(1,3); CLOSE (14); REM "Check to see if company has data on this system, if not just skip
1070 IF A$(1,3)=C0$ THEN GOTO 1200 ELSE C0$=A$(1,3)
1100 REM "Open files
1105 IF C1$<>"" THEN Z$="02C API"+C1$+"  04C AR6"+C1$+"  " ELSE Z$=""
1110 Z$=Z$+"02O API"+C0$+"  04O AR6"+C0$+"  "
1120 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 1121,1995
1125 C1$=C0$
1150 REM 
1155 PRINT @(0,14),'CL',@(10,14),"Company: ",C0$,
1160 IF MOD(C,T0)=1 THEN GOSUB 8150
1165 C=C+1
1200 REM "Transactions where Original amounts don't match, we put transaction in at master
1205 IF A$(47,1)=" " THEN GOTO 1500
1210 IF A[0]=A[3] AND A$(47,2)="YY" THEN GOTO 1500; REM "Invoice orig amounts match, and invoice is found at both places.
1212 REM "We can handle invoice history now. IF A$(50,1)="Y" THEN GOTO 01500; REM "IF DATA CAME FROM INV HISTORY AT MASTER THEN WE CAN'T FIX.
1215 ON (POS(A$(4,2)="APAR",2)+1)/2 GOTO 1500,1220,1225,1500
1220 GOSUB 2000; GOTO 1300; REM "A/P invoice w/orig amount out of balance
1225 GOSUB 2200; GOTO 1300; REM "A/R invoice w/orig amount out of balance
1500 REM "Transactions where Current amounts don't match, put in transaction to go to remotes; NOTE: adjust the current amount at the master to reflect changes as a result of original amounts be out of balance. The original amount mismatch is being corrected at the same time.
1505 IF A$(47,1)=" " THEN GOTO 1900; REM "If invoice is not at franchise, there is some other problem we can't adjust that here.
1510 IF A[1]=A[4] THEN GOTO 1900; REM "Current amounts match
1512 IF A$(49,1)="Y" THEN GOTO 1900; REM "If data came from RL's invoice history then we can't fix
1515 ON (POS(A$(4,2)="APAR",2)+1)/2 GOTO 1900,1520,1525,1900
1520 GOSUB 2400; GOTO 1600; REM "A/P invoice w/current amount out of balance
1525 GOSUB 2600; GOTO 1600; REM "A/R invoice w/current amount out of balance
1995 GOTO 1000
2000 REM "Create APD record from API record to correct A/P invoice original amount being out.
2005 DIM B$(124),B[27],C$(124),C[27],H$(110),H[13]
2010 READ (Z[2],KEY=A$(6,20),DOM=2095)IOL=0320
2012 READ (Z[3],KEY=A$(6,20),DOM=2013)IOL=0330; REM "Read value at master location
2013 GOSUB 8300
2014 F4$=P0$(7,6); REM "Use current A/P period
2015 H$(1,6)=F4$; REM "FY - Acctg Perid
2020 H$(7)=B$(1),H$(100)=""; REM "Load all fields from invoice # to Applto invoice # from API, then clear the rest of APD
2025 H$(100,11)=B$(114); REM "Salesperson code, Source company code, source company type, alternate currency code
2029 REM "Put differences into APD for processing as A/P invoice adjustments
2030 H[1]=B[2]-C[2],H[2]=B[3]-C[3],H[3]=B[4]-C[4],H[4]=B[5]-C[5],H[5]=B[6]-C[6]; REM "Gross amount into gross amount, special amts 1-4
2035 H[6]=H[1],H[7]=B[7]-C[7],H[8]=B[8]-C[8],H[9]=H[1]; REM "Disc applies to, discount, workman's comp, net invoice amount (= gross amount)
2040 H[12]=B[18]-C[18],H[13]=B[19]-C[19]; REM "gross amt in alternate curr, discount in alt. curr.
2080 WRITE (Z[8],KEY=H$(1,26))IOL=0380
2095 RETURN 
2200 REM "Create CM3 record from AR6 record to correct A/R invoice original amount being out
2205 DIM D$(180),D[14],E$(180),E[14],I$(408),I[20]
2210 READ (Z[4],KEY=A$(6,18),DOM=2295)IOL=0340
2212 READ (Z[5],KEY=A$(6,18),DOM=2213)IOL=0350; REM "Read values at the master lcoation, if the values exist
2214 F4$=P1$(7,6); REM "Use current A/R period
2215 I$(1,6)=F4$,I$(7,8)=D$(11,8),I$(15,10)=D$(1,10); REM "FY AcctPd,invoice number, customer number
2218 I$(60,1)="N",I$(64,1)="P",I$(65,2)=D$(51,2); REM "Cash Sale?, Printed flag, Terms code
2220 I$(67,10)=D$(117,10),I$(77,1)=D$(19,1),I$(78,8)=D$(94,8); REM "Sales tax code, invoice type, Apply to field
2222 I$(86,6)=D$(20,6),I$(92,8)=D$(66,8),I$(100,15)=D$(36,15); REM "Invoice date, Our order number, Customer P/O number
2224 I$(116,12)=D$(54,12),I$(133,20)=D$(74,20); REM "invoice due date, discount due date, salesperson 1-5
2226 I$(153,9)=D$(108,9),I$(162,15)=D$(145,15),I$(178,1)=D$(168,1); REM "Customer category, ship via descpriotion, Multiple sales tax codes?
2228 I$(180,6)=D$(139,6),I$(325,12)=D$(169,12); REM "date shipped, job number
2230 I$(338,3)=A$(1,3),I$(341,1)="1"; REM "Get current source company from A$, it should always be a remote so R/L type = 1
2240 I[1]=D[9]-E[9],I[2]=D[8]-E[8]; REM "Net amount, freight
2242 I[9]=D[2]-E[2],I[10]=D[4]-E[4]; REM "Invoice total, discount amount
2244 I[12]=100; REM "Set commssion % to 100
2246 I[17]=D[12]-E[12]; REM "Costed freight
2280 WRITE (Z[9],KEY=I$(1,14))IOL=0390
2295 RETURN 
2400 REM "Create APH record from API record to mimic a check, then call CM2AAA to get it into the transfer file.
2405 DIM B$(124),B[27],C$(124),C[27],J1$(37),J1[5]
2410 READ (Z[2],KEY=A$(6,20),DOM=2495)IOL=0320
2412 IF A$(50,1)="Y" THEN C$(1)=B$,C[2]=B[2]; GOTO 2416; REM "If from history then leave other values at 0 and just update with 0 balances
2415 READ (Z[3],KEY=A$(6,20),DOM=2495)IOL=0330; REM "Read value at master
2420 J1$(1,3)=C0$,J1$(4,3)=C$(66,3); REM "Source company, Bank code
2425 J1$(7,10)=C$(1,10),J1$(17,1)=C$(82,1),J1$(18,10)=C$(11,10); REM "Vendor code, Special check code, Invoice number
2430 J1$(28,6)="F"+C0$; REM "Check number is F + source company code
2434 IF LEN(C$)<125 THEN C$=C$+" "; GOTO 2434
2435 J1$(34,3)=C$(122,3); REM "Alternate currency code
2440 J1[0]=B[13]-C[13]-(B[2]-C[2]); REM "Balance due, including adjustments that may have been made in 1200's
2443 IF J1[0]=0 THEN GOTO 2495; REM "If final adustment after adding in other affects is 0 the just leave
2445 J1[1]=B[7]-C[7]-(B[11]-C[11]); REM "Discount left
2450 J1[2]=B[18]-C[18],J1[3]=B[19]-C[19]; REM "Alternate gross amount, alternate discount
2470 J0$=J1$+$8A$; FOR I0=0 TO 5; J0$=J0$+STR(J1[I0])+$8A$; NEXT I0
2480 CALL "CM2AAA",X3$,Z[10],3,C0$+J1$(1,27),J0$,K9
2495 RETURN 
2600 REM "Create ARP records and add using CM2AAA to transfer data
2605 DIM D$(180),D[14],E$(180),E[14],K2$(34),K2[6]
2610 READ (Z[4],KEY=A$(6,18),DOM=2695)IOL=0340
2612 READ (Z[5],KEY=A$(6,18),DOM=2613)IOL=0350; GOTO 2614; REM "Read values at the master location as well
2613 E$=D$
2614 CALL "CM2AFY",X3$,X4$,0,P1$(7,6),F4$; REM "Use Current A/R period as period of transaction
2615 K2$(1,6)=F4$,K2$(7,3)="A"; REM "FY/acct pd from greatest, Default Bank code to 'A'
2620 K2$(10,1)="1",K2$(11,10)=E$(1,10); REM "Deposit # is 1, Customer code
2625 K2$(21,6)="F"+E$(13,5); REM "Check ref is 'F' + last five digits of invoice number
2630 K2$(27,8)=E$(11,8); REM "Invoice number
2635 K2[1]=A[1]-A[4]-(A[0]-A[3]); REM "Amount from differences in CMD amounts, allowing for changes in original amounts
2650 REM "write out invoice record, then create a check header and deposit header. We'll assume the duplicate logic will handle the multiple deposit headers ok
2655 J0$=K2$+$8A$; FOR I0=0 TO 6; J0$=J0$+STR(K2[I0])+$8A$; NEXT I0
2660 CALL "CM2AAA",X3$,Z[11],3,C0$+K2$(1,34),J0$,0
2662 DIM K3$(100); CLOSE (14); OPEN (14)"AR1"+X3$(9,3); FIND (14,KEY=K2$(11,10),DOM=2663)K3$
2663 CLOSE (14)
2665 J0$=K2$(1,26)+X3$(21,6)+K3$(11,35)+$8A$; FOR I0=0 TO 2; J0$=J0$+STR(K2[I0])+$8A$; NEXT I0; REM "Check header is same but current date in place of invoice # and only use buckets 0-2. Bucket 1 is check amount
2670 CALL "CM2AAA",X3$,Z[11],3,C0$+K2$(1,26),J0$,0
2675 J0$=K2$(1,10)+X3$(21,6)+X3$(21,6)+$8A$+STR(K2[1])+$8A$+STR(0)+$8A$; REM "Create deposit header with bucket 0 as deposit amount
2680 CALL "CM2AAA",X3$,Z[11],3,C0$+K2$(1,10),J0$,0
2695 RETURN 
5000 REM "EOJ
5005 C=T; GOSUB 8150
5020 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5040 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(10,3),"This utility will create transacations to put the ",@(10,4),"master company and franchies in balance.",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6800 REM "Enter process to use
6806 J$="   "+$7E7E7E$; GOSUB 6850
6810 CALL "ZZENTR","ZU>",A{ALL},J$,X4$,X3$,38,8,1,3,C0,"","","CMP","CM2ARF00","ZZ2CAA","",""; IF ABS(C0)>4 THEN GOSUB 6000; GOSUB 6850; C0=ABS(C0)-5; ON C0 GOTO 6810,6811
6820 CALL "ZZENTR","ZU<",A{ALL},J$,X4$,X3$,38,10,4,3,C0,"","","CMP","CM2ARF02","ZZ2CAA","",""; IF ABS(C0)>4 THEN GOSUB 6000; GOSUB 6850; C0=ABS(C0)-5; ON C0 GOTO 6820,6821
6822 IF ABS(C0)=2 THEN GOTO 6810
6835 GOSUB 6900
6837 M$="There are "+STR(T)+" companies to process, proceed?"
6840 CALL "ZZPROM",".Y",X3$,Z,M$,"","",0; ON Z GOTO 6841,6805
6845 RETURN 
6850 REM "Display companies
6855 PRINT @(0,8),'CE','SB',@(18,8),"Starting Franchise:",@(20,10),"Ending Franchise:",'SF',
6860 CALL "ZZDISP","S>",J$(1,3),"",X3$,"","",38,8,X4$
6865 CALL "ZZDISP","S<",J$(4,3),"",X3$,"","",38,10,X4$
6895 RETURN 
6900 REM "Count the number of franchises to do
6910 T=0
6915 READ (Z[13],KEY="CMP",DOM=6916)
6920 K$=KEY(Z[13],END=6940); IF K$(4,3)<J$(1,3) THEN READ (Z[13]); GOTO 6920 ELSE IF K$(1,3)<>"CMP" OR K$(4,3)>J$(4,3) THEN GOTO 6940
6925 READ (Z[13],KEY=K$)J1$; IF J1$(195,1)="1" THEN T=T+1
6935 GOTO 6920
6940 T0=INT(T*.02); IF T0<=1 THEN T0=2
6945 RETURN 
7000 REM "Copy a file F$ from company code C0$ to company code C1$. If K0 <>0, copy only records whose key from K0 for K1chars matches K0$.
7001 REM "IF S=1 means sort file, S=0 means DIRect file
7003 IF C0$="149" THEN ESCAPE 
7005 CLOSE (10); CLOSE (11)
7006 IF K0=0 THEN GOTO 7100
7010 OPEN (10)F$+C0$
7015 OPEN (11)F$+C1$; CALL "ZZINIT","11"
7016 IF K0=1 THEN READ (10,KEY=K0$,DOM=7017); REM "Preread if checking against highest part of key
7018 PRINT @(20,15),F$+C1$,
7019 C9=0
7020 K$=KEY(10,END=7080)
7023 C9=C9+1; IF MOD(C9,100)=1 THEN PRINT @(27,15),C9:"##,###",
7025 IF S=0 THEN READ RECORD (10,KEY=K$)B$ ELSE READ (10)
7029 REM "If checking key and it is highest part of key(K0=1), then we can leave on the first mismatch
7030 IF K0<>0 THEN IF K$(K0,K1)<>K0$ THEN IF K0=1 THEN GOTO 7080 ELSE GOTO 7020
7040 IF S=0 THEN WRITE RECORD (11,KEY=K$)B$ ELSE WRITE (11,KEY=K$)
7050 GOTO 7020
7095 RETURN 
7100 REM "If take all keys then do unix copy for specified DIRectory
7105 IF ISWIN THEN J$="copy /y "+HWD+DLM+"z.144d"+DLM+"tf2d"+DLM+F$+DLM+F$+"149 "+HWD+DLM+"z.144d"+DLM+"tf2d"+DLM+F$+DLM+F$+C1$; GOTO 7150
7110 J$="cp "+HWD+DLM+"z.144d"+DLM+"tf2d"+DLM+F$+DLM+F$+"149 "+HWD+DLM+"z.144d"+DLM+"tf2d"+DLM+F$+DLM+F$+C1$
7118 PRINT @(20,15),F$+C1$,'CL'
7150 INVOKE J$
7195 RETURN 
7700 REM "Setup A$ and A()
7705 DIM A$(48),A[6]
7710 A$(26,6)=X3$(21,6)
7745 RETURN 
7800 REM "See if record exists and get it if it does exist, mark as from franchise or master, add amounts to proper set of buckets, go thru transactions, add up and place in proper bucket
7801 REM "B0=orig amt, B1=current balance, B2=index to transaction detail, B3=file slot of transaction data (amounts assumed to be in bucket 0).
7805 READ (Z[1],KEY=A$(1,25),DOM=7806)IOL=0310
7820 IF A0$(195,1)=" " THEN A$(48,1)="Y",O=3 ELSE A$(47,1)="Y",O=0; REM "found at master (195,1=" ") or at franchise; set O for offset to buckets
7825 A[0+O]=B0,A[1+O]=B1; REM "update original amount and current amount
7850 REM "Run thru transactions to get transation total, use file slot B3, 1st is at B2
7855 I9=B2,L0=B0; DIM C[1]
7860 IF I9>0 THEN READ (B3,IND=I9)IOL=0330; L0=L0+C[0]; GOTO 7860
7875 A[2+O]=L0
7890 WRITE (Z[1],KEY=A$(1,25))IOL=0310
7895 RETURN 
7900 REM "See if company C5$ has data on system answer in C6$
7905 IF C5$=C7$ THEN C6$=C8$; GOTO 7945; REM "IF already checked this company, just pass the answer along
7910 C7$=C5$,C8$="Y",C6$="Y"
7920 CLOSE (14); OPEN (14,ERR=7921)"AR1"+C5$; GOTO 7945
7921 C8$="N",C6$="N"
7945 RETURN 
8110 CALL "ZZINFO",Z[1],T9,X3$,T,T0,K,B,D,S0,S1,F$
8115 PRINT @(0,7),"There are "+STR(T)+" records to process"
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"H",19,10,50,T1,T,C
8195 RETURN 
8200 REM "Determine # records on file slot F9 return in F8, mod factor in F7
8210 CALL "ZZINFO",F9,J9,X3$,F8,J0,K,B,D,S0,S1,F$
8230 F7=INT(F8*.02); IF F7<=1 THEN F7=2
8235 C2=0,F6=0; REM "C2 is counter, F6 is time (set to 0 to reset)
8245 RETURN 
8300 REM "Add in APQ history effects to API data in c()
8305 DIM G0$(124),G[27]
8310 READ (Z[7],KEY=A$(6,20),DOM=8345)IOL=0370
8320 FOR I9=0 TO 27; C[I9]=C[I9]+G[I9]; NEXT I9
8345 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
