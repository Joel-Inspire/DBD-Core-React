0010 REM "Variable Print Placeholder Setup <VP2MAA>
0015 REM "Prog Type: IP-3.0A
0020 SETESC 9300; SETERR 9000
0030 REM "Produced under licence from Basic Ideas, Inc; Norcross, Ga.
0035 REM "5.0 - 03/07/02 - 16.598611 - kmc - SSP# 146692
0040 REM "Copyright 2002 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000; SETESC 9300
0110 X0$="VP2MAA",X1$="Variable Print Placeholder Setup"
0120 DIM Z0$(80,"-")
0130 K0=4,K1=1
0135 C9=-1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0290 K9$="C",K9=LEN(K9$)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="13O ZZPARM  "
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0525 READ (Z[13],KEY=X3$(9,3)+"V/P",DOM=*NEXT)VP_PARM$; GOTO 0530
0526 CALL "ZZPROM",".4",X3$,Z,"You have not setup the Variable Print Parameters","","",0; GOTO 9900
0600 REM "Open files
0610 Z[1]=UNT; OPEN (Z[1],IOL=*,REC=VP0$,ERR=7500)"[WDX][ODB]"+STP(VP_PARM$(7,50))+";Tbl_Placeholders;KEY=Field"
0620 Z[2]=UNT; OPEN (Z[2],IOL=*,REC=VP0_ID$,ERR=7500)"[WDX][ODB]"+STP(VP_PARM$(7,50))+";Tbl_Placeholders;KEY=Placeholderid"
0630 Z[3]=UNT; OPEN (Z[3],IOL=*,REC=VP1$,ERR=7500)"[WDX][ODB]"+STP(VP_PARM$(7,50))+";Tbl_PlaceholderAttr;KEY=PlaceholderAttrid"
0640 Z[4]=UNT; OPEN (Z[4],ERR=7500)"[WDX][ODB]"+STP(VP_PARM$(7,50))+";Tbl_Placeholders;KEY=Placeholderid" ! for assigning Placeholder ids
0680 GOSUB 6000
0700 REM "constants
0705 FIRST_LINE=7,LAST_LINE=20,MAX_VP1=LAST_LINE-FIRST_LINE+1
0710 DIM EMPTY$:IOL(Z[3])
1000 REM "
1010 Y8=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1035 DIM A$(148)
1045 ! A$(1,LEN(A1$))=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1500
1200 REM "
1210 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,14,3,11,3,C0,"","{1"+X$,K9$,"VP2MAA00","","",""; IF C0=6 THEN GOSUB 6400; C0=1
1212 IF INT(ABS(C0))=3 THEN C0=-ABS(C0); READ (Z[1],KEY=A$(11,3),DOM=1213)
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1240 GOTO 1120
1500 REM "
1505 Z9=-1,C9=0,A2$="",A3$="",A4$="",A5$=""
1510 A1$=A$(11,3)
1520 READ (Z[1],ERR=7200,KEY=A1$,DOM=1600)
1525 A$(1,10)=STR(VP0.PLACEHOLDERID),A$(11,3)=VP0.FIELD$,A$(14,50)=VP0.DESCRIPTION$,A$(64,75)=VP0.EXAMPLE$,A$(139,10)=STR(VP0.SEQ)
1590 GOTO 1700
1600 REM "
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 GOTO 1000
1680 GOSUB 7450
1685 GOSUB 7550; GOSUB 7750
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700,1821
1825 GOTO 6700
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 GOSUB 7400
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 SETERR 9000; X$="",Q$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF INT(C0)=3 THEN GOSUB 7300 ELSE IF C0>3 OR X0<0 THEN GOTO 1800
2038 IF X0<LEN(V7$) THEN V7$(X0+1,1)=""
2039 IF X0>=2 THEN GOSUB 7650; ON EI GOTO 2300,2350,2400,2450
2040 ON X0 GOTO 2100,2150,1800
2100 REM "Description
2110 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,18,3,14,50,C0,"","{3"+X$,"","VP2MAA02","","",""
2140 GOTO 2020
2150 REM "Example
2160 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,18,4,64,50,C0,"","{3"+X$,"","VP2MAA04","","",""
2190 GOTO 2020
2200 REM "Sequence
2205 DIM X[1]; X[0]=NUM(A$(139,10),ERR=*NEXT)
2210 CALL "ZZENTR","N",X{ALL},A$,X4$,X3$,73,4,0,300,C0,"###","{3"+X$,"","VP2MAA06","","",""
2215 A$(139,10)=STR(X[0])
2240 GOTO 2020
2300 REM "Lead Text
2305 E$=PAD(ENTRY.LEADTEXT$,20,1)
2310 CALL "ZZENTR","S",X{ALL},E$,X4$,X3$,1,CURR_E_LINE,1,20,C0,"","{3"+X$,"","VP2MAA08","","",""
2311 ENTRY.LEADTEXT$=STP(E$,1)
2340 GOTO 2020
2350 REM "Field name
2355 E$=PAD(ENTRY.FIELD$,20,1)
2360 CALL "ZZENTR","S",X{ALL},E$,X4$,X3$,25,CURR_E_LINE,1,20,C0,"","{3"+X$,"","VP2MAA09","","",""
2361 ENTRY.FIELD$=STP(E$,1)
2390 GOTO 2020
2400 REM "Text
2405 E$=PAD(ENTRY.TEXT$,20,1)
2410 CALL "ZZENTR","S",X{ALL},E$,X4$,X3$,50,CURR_E_LINE,1,20,C0,"","{3"+X$,"","VP2MAA10","","",""
2411 ENTRY.TEXT$=STP(E$,1)
2440 GOTO 2020
2450 REM "Not Null
2455 IF ENTRY.NOTNULL=0 THEN E$=" " ELSE E$="Y"
2460 CALL "ZZENTR","Y",X{ALL},E$,X4$,X3$,75,CURR_E_LINE,1,1,C0,"","{3"+X$,"","VP2MAA12","","",""
2461 IF E$="Y" THEN ENTRY.NOTNULL=-1 ELSE ENTRY.NOTNULL=0
2490 GOTO 2020
5800 REM "Alt sort keys
5890 RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(1,3),"Placeholder:",@(70,3),"ID:",@(5,4),"Example:",
6070 PRINT @(0,5),Z0$,
6075 PRINT @(1,6),"Lead Text",@(25,6),"Field name",@(50,6),"Text",@(71,6),"Not Null",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6220 PRINT @(18,3),A$(14,50),@(74,3),A$(1,5),@(18,4),A$(64,50)
6225 GOSUB 7550
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6460 PRINT @(14,3),A$(11,3),
6490 RETURN 
6500 REM "DELETE
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6690 RETURN 
6700 REM "ADD ENTRY
6705 IF Z9=0 THEN GOTO 6790 ELSE IF V7$>"" THEN X0=POS(" "<>V7$); IF X0>0 THEN X0=X0-1; GOTO 2038
6708 VP0.PLACEHOLDERID=NUM(A$(1,10)),VP0.FIELD$=A$(11,3),VP0.DESCRIPTION$=A$(14,50),VP0.EXAMPLE$=A$(64,75),VP0.SEQ=NUM(A$(139,10))
6709 IF VP0.PLACEHOLDERID=0 THEN VP0.PLACEHOLDERID=NUM(KEL(Z[2]))+1; A$(1,10)=STR(VP0.PLACEHOLDERID)
6710 WRITE (Z[1],KEY=A1$)
6790 C9=0; IF Z=6 OR K1=0 THEN GOTO 9900 ELSE IF Z<4 THEN GOTO 1000 ELSE C0=-(3.1+(Z-4)/10); GOTO 6800
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 IF A1$="" THEN GOTO 6800 ELSE IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(11,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM "PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 PRINT 'RB',; CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6865 GOTO 1100
6870 GOTO 6895
6890 GOTO 1515
6895 IF A1$="" THEN GOTO 6860 ELSE PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=1100)
6898 ON S9 GOTO 6810,1100
7200 REM "Forced read
7210 IF ERR<>0 THEN GOTO 9000
7220 CALL "ZZREAD",Z[1],A1$,A$,A{ALL},S8; ON S8 GOTO 7221,1630
7230 GOSUB 6200
7240 CALL "ZZPROM","E0",X3$,0,"","","",0; GOTO 7290
7250 CALL "ZZPROM","E0A",X3$,0,"","","",0; GOTO 7290
7290 GOTO 1630
7300 REM 
7310 ON FPT(C0)*10 GOTO 7390,7325,7330,7390
7325 IF V8$="" THEN X0=X0+4; GOTO 7390 ELSE X0=NUM(V8$(POS(STR(X0:"00")<=V8$,2),2)); GOTO 7390
7330 IF V8$="" THEN X0=X0-6; GOTO 7335 ELSE X0=POS(STR(X0-1:"00")<=V8$,2)-2; IF X0<0 THEN X0=0; GOTO 7390 ELSE X0=NUM(V8$(X0,2)); GOTO 7390
7335 IF X0<0 THEN X0=0; GOTO 7390
7390 IF X0>0 THEN X0=X0-0
7395 C0=3; RETURN 
7400 REM "EXTRACT
7410 ! EXTRACT (Z[1],ERR=7200,KEY=A1$,DOM=7440)
7420 C9=1,Z9=1; GOSUB 5800
7440 RETURN 
7450 REM "EXTRACT NEW ENTRY
7460 GOTO 7400 ! WRITE (Z[1],KEY=A1$,DOM=7250); GOTO 7400
7490 RETURN 
7500 REM "Error on open of database
7505 TMP$="Error ["+STR(ERR)+"] on open of DSN ["+STP(VP_PARM$(7,50))+"]"
7510 CALL "ZZPROM",".4",X3$,Z,TMP$,"","",0
7545 GOTO 9900
7550 REM "Load VP1 array with values
7554 CLOSE (VP1_MEM,ERR=*NEXT)
7555 INDEX=0,MAX_REC=0,VP1_INDEX=0,VP1_MEM=UNT; OPEN (VP1_MEM)"*memory*"
7556 ! Initialize array with blank values
7557 FOR II=1 TO MAX_VP1; WRITE (VP1_MEM,KEY=STR(II:"000"))EMPTY$; NEXT II
7559 READ (Z[3],KEY="",DOM=*NEXT)
7560 SELECT *,REC=VP1$ FROM Z[3] WHERE VP1.PLACEHOLDERID=NUM(A$(1,10))
7563 X$=REC(IOL(Z[3]),REC=VP1$)
7565 INDEX=INDEX+1; WRITE (VP1_MEM,KEY=STR(INDEX:"000"))X$
7570 NEXT RECORD 
7571 MAX_VP1_LOADED=INDEX
7574 GOSUB 7600
7599 RETURN 
7600 REM "Display on screen
7605 CURR_LINE=FIRST_LINE
7610 PRINT @(0,FIRST_LINE),'CE',
7615 FOR I=1 TO MAX_VP1
7620 READ (VP1_MEM,KEY=STR(I:"000"),REC=DISP$)IOL=IOL(Z[3])
7625 PRINT @(1,CURR_LINE),DISP.LEADTEXT$,@(25,CURR_LINE),DISP.FIELD$,@(50,CURR_LINE),DISP.TEXT$,@(75,CURR_LINE),TBL(ABS(SGN(DISP.NOT_NULL))," ","Y"),
7630 CURR_LINE=CURR_LINE+1
7635 NEXT I
7649 RETURN 
7650 REM "Based on X0, set EI, read correct record
7655 NEW_VP1_INDEX=INT((X0+2)/4); IF NEW_VP1_INDEX>LAST_LINE-FIRST_LINE+1 THEN EXITTO 1800
7660 IF NEW_VP1_INDEX<>VP1_INDEX THEN WRITE (VP1_MEM,KEY=STR(VP1_INDEX:"000"),REC=ENTRY$)IOL=IOL(Z[3]); GOSUB 7700; READ (VP1_MEM,KEY=STR(NEW_VP1_INDEX:"000"),REC=ENTRY$)IOL=IOL(Z[3]); VP1_INDEX=NEW_VP1_INDEX
7665 EI=MOD((X0+2),4),CURR_E_LINE=VP1_INDEX+FIRST_LINE-1
7699 RETURN 
7700 REM "Check to see if other lines need to move up because this line is all blank
7705 IF VP1_INDEX=0 OR STP(ENTRY.LEADTEXT$+ENTRY.FIELD$+ENTRY.TEXT$)<>"" THEN GOTO 7745
7710 FOR MI=VP1_INDEX TO MAX_VP1-1
7715 READ RECORD (VP1_MEM,KEY=STR(MI+1:"000"))TMP$; WRITE RECORD (VP1_MEM,KEY=STR(MI:"000"))TMP$
7720 NEXT MI
7725 WRITE (VP1_MEM,KEY=STR(MAX_VP1:"000"),REC=EMPTY$)IOL=IOL(Z[3])
7730 IF NEW_VP1_INDEX>VP1_INDEX THEN NEW_VP1_INDEX=NEW_VP1_INDEX-1,X0=X0-4 ! adjust new_vp1_index if moving records down
7740 GOSUB 7600
7749 RETURN 
7750 REM "Assign placeholder id to record
7755 READ (Z[4],KEY=DIM(9,"9"),DOM=*NEXT)
7760 NEXT_ID=1; NEXT_ID=NUM(KEP(Z[4],ERR=*NEXT),ERR=*NEXT)+1
7765 A$(1,10)=STR(NEXT_ID)
7780 PRINT @(74,3),A$(1,5),
7799 RETURN 
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 Y8=2
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
