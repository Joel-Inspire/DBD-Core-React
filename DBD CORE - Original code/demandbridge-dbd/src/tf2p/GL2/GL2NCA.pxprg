0010 REM "Accounting period change processing <GL2NCA>
0035 REM "5.7 - 01/13/16 - 9.800277 - tma - SSP# 281343
0037 REM "281343-Need to add FV7 to GL2NCA utility ALSO 281937 -Error 16 running the Fiscal Year Change program                                          
0040 REM "Copyright 2016 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 9000
0095 PRECISION 14; T2=TIM; PRECISION 2
0105 SETERR 9000; SETESC 9300
0110 X0$="GL2NCA",X1$="Change Fiscal Year"
0120 DIM A$(256),A[19],B$(60),C$(227),C[2],D$(214),J$(46),S$(40),D[15],E[15]
0121 DIM S[10,2]
0140 Z0$="-##0",Z1$="-##,###.00#",Z2$="##,##0",Z3$="-######,##0",Z4$="#,###.00",Z5$="####,###.00"
0210 T=1,T0=1,T1=1
0220 W3=131
0225 W=999
0230 DIM T1$(W3,"-"),T2$(W3,"="),T3$(W3,"*"),Y5$(W3),Y6$(W3),W[4]
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "I/O lists
0330 IOLIST X$,X[0],X[1],X[2],X[3],X[4],X[5],X[6]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14]
0350 IOLIST E$,E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],E[8],E[9],E[10],E[11],E[12],E[13],E[14],E[15]
0360 IOLIST APJ$,APJ[0]; REM 
0370 IOLIST APK$,APK[0],APK[1],APK[2],APK[3],APK[4],APK[5],APK[6],APK[7],APK[8],APK[9],APK[10],APK[11]
0500 REM "Files
0505 DIM Z[NUM(X3$(60,3))]
0510 Y$="01O GL1... 12X ZZE...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
0540 READ (Z[13],KEY=X3$(9,3)+"G/L",DOM=9900)F9$
0550 READ (Z[13],KEY=X3$(9,3)+"G/LYE"+F9$(34,4),DOM=9901)F8$
0555 P9=NUM(F8$(13,2))
0600 REM 
0620 GOSUB 6000
0640 ADDR "ZZPACK",ERR=0641
0700 REM "
0701 REM "ASSUMPTIONS
0702 REM 
0703 REM "THE FYE/AP OCCURS ONLY ONCE IN KEY PORTION
0704 REM 
0705 REM "LENGTH OF YEAR PORTION (2 OR 4) REMAINS CONSISTANT IN BOTH
0706 REM "KEY AND DATA PORTIONS.
0707 REM 
0708 REM "INDEXED FILES HAVE NEXT LINK AS FIRST ELEMENT
1000 REM "GET PARAMETERS
1100 REM "ENTER NUMBER OF PERIODS TO OFFSET
1110 PRINT @(0,5),"Enter the number of periods (+ or minus) to adjust"
1115 PRINT @(0,6),"the accounting data (i.e +2 means move period 4 to period 6)"
1120 CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,70,6,0,200,C0,"-#0","{1"+X$,"","FM2NC000","AR1","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1210,1211
1200 REM "GET FYE RECORD FOR NEW STUFF
1210 P0=12+A[0],F7$=F8$
1220 IF P0>0 AND P0<=P9 THEN GOTO 1250
1225 IF P0>P9 THEN F7$(9,4)=STR(NUM(F7$(9,4))+1:"0000"),P0=P0-P9; FIND (Z[13],KEY=F7$(1,12),DOM=1245)F7$; GOTO 1220
1230 IF P0<1 THEN F7$(9,4)=STR(NUM(F7$(9,4))-1:"0000"),P0=P0+P9; FIND (Z[13],KEY=F7$(1,12),DOM=1245)F7$; GOTO 1220
1231 ESCAPE ; REM "WHAT IN SAM HILL?
1245 CALL "ZZPROM","4",X3$,0,"Cannot find date record for year "+F7$(9,4),"","",0; GOTO 9900
1250 REM "
1255 D1$=F7$(21+(P0-1)*6,6)
1260 PRINT @(12,8),"The current year would then end on ",FND$(D1$)
1275 PRINT @(12,10),"Multiple pass number:",; MULTI_NUM$=" "
1277 CALL "ZZENTR","SRZ",A{ALL},MULTI_NUM$,X4$,X3$,34,10,1,1,C0,"",""," 123","GL2NCA04","","",""
1280 CALL "ZZPROM","Y",X3$,S3,"Do you wish to proceed with this function?","","",0; ON S3 GOTO 1281,9900
1330 PRINT @(20,18),"Enter the password:"
1340 CALL "ZZENTR","SPUF",A{ALL},A$,X4$,X3$,40,18,1,6,C0,"","{1"+X$,"","FM2NC000","AR1","",""; IF ABS(C0)=4 THEN GOTO 9900 ELSE IF C0<>1 OR A$(1,6)<>"MOVEIT" THEN GOTO 9900
1350 PRINT @(0,18),'CE',
1360 Q2$=DAY,Q2$=Q2$(7,2)+Q2$(1,2)+Q2$(4,2); REM "ADDED 09/12/97
1365 Q3$=FND$(D1$),Q3$=Q3$(7,4)+Q3$(1,2)+Q3$(4,2); REM "ADDED 09/12/97
1370 IF NUM(Q2$(1,2))>90 AND NUM(Q2$(1,2))<=99 THEN Q2$="19"+Q2$ ELSE Q2$="20"+Q2$; REM "ADDED 09/12/97
1375 IF Q3$<Q2$ THEN Q4$=STR(NUM(Q3$(1,4))+1) ELSE Q4$=Q3$(1,4); REM "ADDED 09/12/97
1400 REM 
1500 REM 
1520 GOTO 5000
2000 REM "Check files to see if indexed, if not then handle as a direct file,special case for APJ APK AR7 ARO                                            
2010 FILE_NAME$="APJAPKAR7ARO"
2020 FOR FILE_CHK=1 TO LEN(FILE_NAME$) STEP 3
2030 Y$="25O "+FILE_NAME$(FILE_CHK,3)+"... "; GOSUB 9750; GOSUB 2900
2035 NEXT FILE_CHK
2040 IF FLIND_AR$="" THEN GOTO 2070
2045 IF FLIND_AR$="AR7ARO" THEN S[0,0]=1,S[0,1]=40,S[1,0]=0,S[1,1]=28 ELSE IF FLIND_AR$="ARO" THEN S[0,0]=0,S[0,1]=28
2050 F1$="AR6",R[0]=4,R[1]=0,R[2]=127,R[3]=133,F2$=FLIND_AR$; GOSUB 4100
2060 IF POS("AR7"=FLIND_AR$,3)<>0 THEN F1$="AR8",R[0]=4,R[1]=0,R[2]=106,R[3]=118,F2$="AR7",S[0,0]=0,S[0,1]=40; GOSUB 4100
2070 IF FLIND_AP$="" THEN GOTO 2090
2075 IF FLIND_AP$="APJAPK" THEN S[0,0]=0,S[0,1]=37,S[1,0]=1,S[1,1]=28 ELSE IF FLIND_AP$="APK" THEN S[0,0]=1,S[0,1]=28
2080 F1$="API",R[0]=4,R[1]=0,R[2]=94,R[3]=100,F2$=FLIND_AP$; GOSUB 4100
2084 IF FLIND_AP$="APJAPK" THEN S[0,0]=0,S[0,1]=37,S[1,0]=1,S[1,1]=28 ELSE IF FLIND_AP$="APK" THEN S[0,0]=1,S[0,1]=28
2085 F1$="APQ",R[0]=4,R[1]=0,R[2]=94,R[3]=100,F2$=FLIND_AP$; GOSUB 4100
2100 IF FLDIR_AR$="" THEN GOTO 2150
2110 IF FLIND_AR$="" THEN F1$="AR6",R[0]=4,R[1]=0,R[2]=127,R[3]=133; GOSUB 4100
2120 IF POS("AR7"=FLDIR_AR$,3)<>0 THEN F1$="AR7",R[0]=4,R[1]=0,R[2]=40; GOSUB 4100
2130 IF POS("ARO"=FLDIR_AR$,3)<>0 THEN F1$="ARO",R[0]=4,R[1]=0,R[2]=28; GOSUB 4100
2135 IF POS("AR7"=FLDIR_AR$,3)=0 THEN F1$="AR8",R[0]=4,R[1]=0,R[2]=106,R[3]=118,F2$="AR7",S[0,0]=0,S[0,1]=40; GOSUB 4100
2140 IF POS("AR7"=FLDIR_AR$,3)<>0 THEN F1$="AR8",R[0]=4,R[1]=0,R[2]=106,R[3]=118; GOSUB 4100
2150 IF FLDIR_AP$="" THEN GOTO 2190
2160 IF FLIND_AP$="" THEN F1$="API",R[0]=4,R[1]=0,R[2]=94,R[3]=100; GOSUB 4100
2165 IF POS("APJ"=FLDIR_AP$,3)<>0 THEN F1$="APJ",R[0]=4,R[1]=0,R[2]=37; GOSUB 4100
2170 IF POS("APK"=FLDIR_AP$,3)<>0 THEN F1$="APK",R[0]=4,R[1]=0,R[2]=28; GOSUB 4100
2180 IF FLIND_AP$="" THEN F1$="APQ",R[0]=4,R[1]=0,R[2]=94,R[3]=100; GOSUB 4100
2190 RETURN 
2900 REM "Check file Indexed? - 218038 - Simplified check logic
2910 FILE_ID=Z[25] ! Used to be 25
2930 KEY_SZ=0; KEY_SZ=NUM(FIN(FILE_ID,"KEY_SIZE")) ! CALL "ZZINFO",FILE_ID,STATUS,X3$,REC_USED,TOT_REC,KEY_SZ,BYTE,DISC,TYPE,TOT_SEC,FILE_NM$
2940 IF KEY_SZ=0 AND FILE_NAME$(FILE_CHK,2)="AR" THEN FLIND_AR$=FLIND_AR$+FILE_NAME$(FILE_CHK,3) ELSE IF KEY_SZ=0 AND FILE_NAME$(FILE_CHK,2)="AP" THEN FLIND_AP$=FLIND_AP$+FILE_NAME$(FILE_CHK,3) ELSE IF KEY_SZ<>0 AND FILE_NAME$(FILE_CHK,2)="AR" THEN FLDIR_AR$=FLDIR_AR$+FILE_NAME$(FILE_CHK,3) ELSE IF KEY_SZ<>0 AND FILE_NAME$(FILE_CHK,2)="AP" THEN FLDIR_AP$=FLDIR_AP$+FILE_NAME$(FILE_CHK,3)
2990 RETURN 
3100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
3110 CALL "ZZINFO",Z[10],T9,X3$,T_BAR,T0_BAR,K_BAR,B_BAR,D_BAR,S0_BAR,S1_BAR,F_BAR$
3115 PRINT @(20,17),"There are "+STR(T_BAR)+" records to process"
3130 T0_BAR=INT(T_BAR*.02); IF T0_BAR<=1 THEN T0_BAR=2
3135 T1_BAR=0
3145 RETURN 
3150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
3155 CALL "ZZBARG",X3$,"HG",19,10,50,T1_BAR,T_BAR,COUNT
3195 RETURN 
3200 REM "If multi_num$="3" then wait on 1 & 2 to finish
3205 PRINT @(0,18),'CE',"Waiting on Pass 1 & 2 to finish",
3210 READ (Z[13],KEY="GL2NCA1",DOM=3211); WAIT 5; GOTO 3210
3215 READ (Z[13],KEY="GL2NCA2",DOM=3216); WAIT 5; GOTO 3215
3240 PRINT @(0,8),'CE',
3245 RETURN 
4050 F0$="GL2"+FID(0)
4100 REM "PROCESS A FILE
4102 IF MULTI_NUM$<>" " THEN FILE_NUM=FILE_NUM+1; IF MOD(FILE_NUM,3)+1<>NUM(MULTI_NUM$) THEN GOTO 4190
4103 COMMAND$="echo "+MULTI_NUM$+QUO+"|"+QUO+STR(A[0])+QUO+"|"+QUO+F1$+QUO+"|"+QUO+"`date` >> GL2NCA_LOG"; INVOKE COMMAND$
4104 F0$="GL2"+FID(0),COUNT=0
4105 Y$="10O "+F1$+"... "
4110 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1; ON Z0 GOTO 4111,4180
4115 Q$=FID(Z[10]); MX=FN%ERASE(F0$,ERR=4116); GOTO 4115 ! SSP#281937
4116 IF ERR<>12 THEN GOTO 9000
4117 REM IF F4$>"" THEN LET Q$(12,3)=BIN(2*DEC(Q$(12,3)),3)
4118 D0=ASC(Q$(20,1)),D9$=STP(Q$(4,6)+Q$(21,2))
4119 GOSUB 3100
4120 Q$(4,6)=F0$,Q$(1,3)=$000000$,Q$(11,1)=CHR(ASC(Q$(11,1))-4); FILE Q$; D0=ASC(Q$(20,1)) ! 218038
4121 CALL "*conv.tbd/tfdd_updt;Update_Physical",ERR=*NEXT,MID(D9$,1,3),F0$,"DN",EMSG$ ! ssp#281937  
4122 Y$="11O "+F0$+" "
4125 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1; IF Z0<>0 THEN CALL "ZZPROM","4",X3$,0,"Problem opening "+F0$+" file!!!","","",0; GOTO 4125
4130 PRINT @(12,12),"Currently processing:",
4133 DIM E$(50); FIND (Z[12],KEY=F1$+"   ",DOM=4134)E$
4135 PRINT @(34,12),E$(1,3),"-",E$(7,39),
4150 IF F4$="" THEN GOSUB 4200 ELSE GOSUB 7800
4175 PRINT @(0,12),'CE',
4180 Y$="10C "+F1$+"... 11C "+F0$+" "
4182 IF F2$<>"" THEN Y$=Y$+"09C "+F2$+"...  "
4183 GOSUB 9750
4185 MX=FN%RENAME(D9$,F1$+"X") ! SSP#281937 
4186 MX=FN%RENAME(F0$,D9$); CALL "*conv.tbd/tfdd_updt;Update_Physical",ERR=*PROCEED,MID(D9$,1,3),D9$,"D",EMSG$
4187 MX=FN%ERASE(F1$+"X",ERR=*NEXT) ! SSP#281937
4190 REM "CLEAR R() FOR NEXT FILE
4192 DIM R[10],S[4,2]
4193 F2$="",F4$=""
4195 RETURN 
4200 REM "Actual substitution loop
4201 REM "K0$=orig key, K1$=new key, D0$=orig data, D1$=new data, C0$=control data
4205 READ (Z[10],KEY="",DOM=4206)
4210 K0$=KEY(Z[10],END=4290)
4215 IF E$(47,1)="S" THEN D0$=""; READ (Z[10]) ELSE READ RECORD (Z[10],KEY=K0$)D0$
4218 COUNT=COUNT+1; IF MOD(COUNT,T0_BAR)=1 THEN GOSUB 3150; REM PRINT @(18,14),'CE',K0$,
4240 GOSUB 4400
4250 IF D0$>"" THEN WRITE RECORD (Z[11],KEY=K1$)D1$
4255 IF D0$="" THEN WRITE (Z[11],KEY=K1$)
4260 REM PRINT @(18,16),K1$,
4265 IF F2$>"" THEN GOSUB 4600
4285 GOTO 4210
4295 RETURN 
4400 REM "Rebuild K0$ to K1$ and D0$ to D1$ if needed based on C0$
4405 K1$=K0$,D1$=D0$
4409 REM "If no key elements to change, go to data change
4410 IF R[1]=0 THEN GOTO 4450
4415 P0$=K0$(R[1],2+R[0]); GOSUB 4500; K1$(R[1],2+R[0])=P1$
4450 REM "DATA PORTION
4452 IF D0$="" THEN GOTO 4480
4455 FOR I=2 TO 9; IF R[I]=0 THEN EXITTO 4480
4460 P0$=D0$(R[I],2+R[0]); GOSUB 4500; D1$(R[I],2+R[0])=P1$
4465 NEXT I
4495 RETURN 
4500 REM "Given fy/ap P0$, return new FY/AP in P1$
4502 IF P0$(1,LEN(P0$))=S$(1,LEN(P0$)) THEN P1$=P0$; RETURN 
4504 SETERR 4590
4505 Q$=P0$(1,R[0]); IF R[0]=2 THEN Q$=FND$(P0$(1,2)+"0101"),Q$=Q$(7,4)
4510 P1=NUM(Q$),P0=NUM(P0$(R[0]+1,2)),P0=P0-A[0]
4515 IF P0<1 THEN P1=P1-1,P0=P0+P9; GOTO 4515
4520 IF P0>P9 THEN P1=P1+1,P0=P0-P9; GOTO 4520
4525 P1$=STR(P1:"0000")+STR(P0:"00"); IF R[0]=4 THEN GOTO 4580
4530 Q$=P1$(3,2); IF Q$(1,1)="8" THEN Q$(1,1)="I" ELSE IF Q$(1,1)="9" THEN Q$(1,1)="J" ELSE IF Q$(1,1)="0" THEN Q$(1,1)="K" ELSE IF Q$(1,1)="1" THEN Q$(1,1)="L" ELSE IF Q$(1,1)="2" THEN Q$(1,1)="M" ELSE ESCAPE ! 218038 - Added two more decades
4535 P1$=Q$+P1$(5,2)
4590 SETERR 9000; RETURN 
4600 REM "PROCESS INDEXED TRANS FILES FOR EACH RECORD
4601 REM "Y$ IS TO OMIT SELF-LINKING LISTS
4605 DIM X[10]; READ (Z[11],KEY=K1$)IOL=0330
4610 FOR X=1 TO LEN(F2$) STEP 3
4612 L0=INT(X/3),Y$=""
4613 L1=X[S[L0,0]],L2=S[L0,1]; IF L1=0 THEN GOTO 4690
4615 Y$="09O "+F2$(X,3)+"... "; GOSUB 9750
4620 Y$=""
4622 REM "************* WHAT ABOUT FILE PROBLEM ?
4650 REM "PROCESS LINKS IN Z(9) STARTING WITH L1
4651 ! IF POS(X3$(9,3)="118",3)<>0 AND POS(F1$="APQAPI",3)<>0 THEN GOSUB 4700; GOTO 4685
4655 READ RECORD (Z[9],IND=L1)X$
4656 IF POS($00$<>X$)=0 THEN GOTO 4685
4658 REM PRINT @(12,18),"Sub-file: ",L0," index: ",L1:"###,#0",
4660 P=POS($8A$=X$),L3=NUM(X$(1,P-1),ERR=4675),Y$=Y$+BIN(L1,3)
4665 P=P+L2,P0$=X$(P,R[0]+2); GOSUB 4500
4670 X$(P,R[0]+2)=P1$
4675 WRITE RECORD (Z[9],IND=L1)X$
4680 IF L3>0 AND POS(BIN(L3,3)=Y$,3)=0 THEN L1=L3; GOTO 4651
4685 Y$="09C "+F2$(X,3)+"... "; GOSUB 9750
4690 NEXT X
4695 RETURN 
5200 REM "
5205 IF POS(MULTI_NUM$="12")<>0 THEN WRITE (Z[13],KEY="GL2NCA"+MULTI_NUM$)"GL2NCA"+MULTI_NUM$
5210 CALL "ZZPROM",".Y",X3$,Z,"Are you ready to begin this process?","","",0
5220 ON Z GOTO 5221,9900
5230 REM "GOSUB 5400
5250 REM "Set constants for rebuild routine
5290 PRINT @(12,9),"Accounting period Renumbering in Progress",
5300 REM "Begin rebuilding
5301 REM "F1$=FILE, F2$=INDEXED DETAIL FILE
5302 REM "R(0)=LENGTH OF YEAR (2,4), R(1)=KEY POS, R(2)..R(9)= DATA POSITION
5305 DIM R[10]
5309 GOSUB 2000; REM " get indexed/not indexed files out of the way first
5310 F1$="GL2",R[0]=2,R[1]=13,R[2]=13; GOSUB 4100
5311 F1$="GL6",R[0]=2,R[1]=2,R[2]=2; GOSUB 4100
5312 F1$="GL7",R[0]=4,R[1]=1,R[2]=1,R[3]=15; GOSUB 4100
5313 F1$="GL3",R[0]=4,F4$="G/L"; GOSUB 4100
5314 F1$="GL9",R[0]=2,R[1]=1,R[2]=1; GOSUB 4100
5315 F1$="APA",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
5316 F1$="APD",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
5317 REM " see 2000's F1$="API",R[0]=4,R[1]=0,R[2]=94,R[3]=100,F2$="APJAPK",S[0,0]=0,S[0,1]=37,S[1,0]=1,S[1,1]=28; GOSUB 4100
5318 F1$="AP9",F4$="A/P",R[0]=4; GOSUB 4100
5319 F1$="APM",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
5320 F1$="APN",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
5321 REM " see 2000's F1$="APQ",R[0]=4,R[1]=0,R[2]=94,R[3]=100,F2$="APJAPK",S[0,0]=0,S[0,1]=37,S[1,0]=1,S[1,1]=28; GOSUB 4100
5322 F1$="APR",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
5323 F1$="APS",R[0]=4,F4$="APS"; GOSUB 4100
5324 F1$="APT",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
5325 F1$="APY",R[0]=4,R[1]=10,R[2]=0; GOSUB 4100
5330 REM "Bank rec files
5332 F1$="BR0",R[0]=4,R[1]=0,R[2]=61,R[3]=100; GOSUB 4100
5334 F1$="BR1",R[0]=4,R[1]=0,R[2]=10; GOSUB 4100
5336 F1$="BR2",R[0]=4,R[1]=0,R[2]=61,R[3]=100; GOSUB 4100
5349 REM 
5350 GOSUB 8000
5355 IF POS(MULTI_NUM$="12")<>0 THEN REMOVE (Z[13],KEY="GL2NCA"+MULTI_NUM$,DOM=5356)
5356 IF MULTI_NUM$="3" THEN GOSUB 3200
5360 IF MULTI_NUM$=" " OR MULTI_NUM$="3" THEN GOSUB 7500
5365 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
5375 IF MULTI_NUM$=" " OR MULTI_NUM$="3" THEN CALL "GL2UT1",X3$,X4$,"","*",Q4$; REM "To rebuild GL3 balances, open balances saved @ line 7877) ; ADDED Q4$ 09/12/97 FROM 1360-1380 ROUTINE
5380 CALL "ZZPROM","4",X3$,0,"Accounting period change utility completed!!!","","",0
5399 GOTO 9900
5400 REM "Check for things in progress
5401 REM "Temp lock ZZPARM.  Lock on ZM1 will keep em off (5405)
5402 LOCK (Z[13],ERR=5403); UNLOCK (Z[13]); GOTO 5405
5403 PRINT @(0,21),'CL','BB',"Update will not be initiated at this time.  Try again later",'EB',; CALL "ZZPROM",".4",X3$,0,"Activity detected!  All other terminals must be logged off during update.","","",0; GOTO 9900
5405 Y$="01O ARB...  02O IC3...  03O ICA...  04O FM6...  05O PO7...  09L ZM1    "
5410 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1; ON Z0 GOTO 5411,9900
5415 X5=0
5420 F5=1,F5$="Accounts Receivable Invoicing (ARB)"; GOSUB 5500
5425 F5=2,F5$="Inventory Physical Count (IC3)"; GOSUB 5500
5430 F5=3,F5$="Inventory Transaction Entry (ICA)"; GOSUB 5500
5435 F5=4,F5$="Forms Management Physical Count (FM6)"; GOSUB 5500
5440 F5=5,F5$="P/O Receiving (PO7)"; GOSUB 5500
5480 Y$="01C ARB...  02C IC3...  03C ICA...  04C FM6...  05C PO7...  "
5485 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
5490 IF X5<>0 THEN CALL "ZZPROM",".4",X3$,Z,"","","",0; GOTO 9900
5495 RETURN 
5500 REM "See if given file has any records, if yes give message and exit program
5510 READ (Z[F5],KEY="",DOM=5511)
5515 READ (Z[F5],END=5545)
5519 REM "If here then it has records in it
5520 IF X5=0 THEN PRINT @(17,10),"Renumbering cannot proceed until the",@(15,11),"transactions in these files are processed:",; X5=13
5525 PRINT @(18,X5),F5$; X5=X5+1
5545 RETURN 
6000 REM 
6005 PRINT 'CF','SB',
6010 PRINT @(12,3),"Current fiscal year is ",F9$(34,4),
6015 P0=(NUM(F8$(13,2))-1)*6+21,D0$=F8$(P0,6)
6020 PRINT " ending ",FND$(D0$),
6085 PRINT 'SF',
6090 RETURN 
6100 REM "
6110 Y5$(6)="From",Y5$(20)="To"
6120 GOSUB 7300
6199 RETURN 
6900 REM "SORT
6905 IF S9$="X" THEN GOTO 6990 ELSE S0=Z[1],S1=Z[2]
6940 CALL "ZZSORT",X3$,"",V1$,S9$,"","",0,0,0,S0,S1,X9
6990 RETURN 
7500 REM "CHANGE THE FISCAL YEAR RECORDS
7505 PRINT @(0,12),'CE',@(10),"Now processing FYE date records..."
7507 A[0]=-A[0]
7520 READ (Z[13],KEY=X3$(9,3)+"G/LYE",DOM=7521)
7522 READ (Z[13])
7525 K0$=KEY(Z[13],END=7565); READ RECORD (Z[13])D0$; IF MID(K0$,1,8)<>X3$(9,3)+"G/LYE" THEN GOTO 7565
7530 K1$="TMP"+K0$(4),D1$=D0$
7535 R[0]=4,P0$=STR(NUM(D0$(9,4))-1:"0000")+STR(P9:"00"); GOSUB 4500; GOSUB 7600; D1$(15,6)=Q$
7540 FOR X=1 TO P9
7542 PRINT @(10,14),"Year: ",K0$(9,4)," period: ",X:"#0",
7545 P0$=D0$(9,4)+STR(X:"00"); GOSUB 4500; GOSUB 7600; D1$((X-1)*6+21,6)=Q$
7550 NEXT X
7555 WRITE RECORD (Z[13],KEY=K1$)D1$
7556 READ (Z[13],KEY=K0$)
7560 GOTO 7525
7565 REM "WRITE TMP RECORDS BACK
7570 READ (Z[13],KEY="TMPG/LYE",DOM=7571)
7575 K0$=KEY(Z[13],END=7585); READ RECORD (Z[13])D0$; IF MID(K0$,1,8)<>"TMPG/LYE" THEN GOTO 7585
7580 WRITE RECORD (Z[13],KEY=X3$(9,3)+K0$(4))D0$; REMOVE (Z[13],KEY=K0$); GOTO 7575
7595 RETURN 
7599 ESCAPE 
7600 REM "GET PERIOD ENDING DATE FOR P1$(4+2) IN Q$
7610 Q$="      "; FIND (Z[13],KEY=X3$(9,3)+"G/LYE"+P1$(1,4),DOM=7620)X$
7615 Q$=X$((NUM(P1$(5,2))-1)*6+21,6)
7645 RETURN 
7800 REM "PROCESS STATS FILE
7801 REM "F4$=STAT TYPE
7802 R[0]=4,K2$=""
7805 READ (Z[13],KEY="STAT"+F4$,DOM=7900)F4$
7810 READ (Z[10],KEY="",DOM=7811)
7815 K0$=KEY(Z[10],END=7900); READ (Z[10]); K0=LEN(K0$)
7816 COUNT=COUNT+1; IF MOD(COUNT,T0_BAR)=1 THEN GOSUB 3150; REM PRINT @(18,14),'CE',K0$,
7820 Q$=K0$(LEN(K0$)); P=POS(Q$=F4$(49),17),Q0$=F4$(49+P-1,17)
7830 CALL "ZZPACK",X3$,"R",Q0$(3,2),"",P9,0,D{ALL},Z[10],Q$,K0$(1,LEN(K0$)-1),F4$
7850 REM "PROCESS PERIODS
7860 FOR X=1 TO P9; REM IF D[X]=0 THEN GOTO 07890     ***** TEST FIX DXM
7862 REM "PRINT @(22,18),"PERIOD: ",X:"#0",
7865 P0$=K0$(K0-4,4)+STR(X:"00"); GOSUB 4500
7870 K1$=K0$,K1$(K0-4,4)=P1$(1,4)
7871 IF K1$=K2$ THEN GOTO 7880
7875 Q$=K1$(K0,1); DIM E[14]; CALL "ZZPACK",X3$,"R",Q0$(3,2),"",P9,0,E{ALL},Z[11],Q$,K1$(1,K0-1),F4$
7877 E[0]=D[0]; REM "Set opening balance from current opening balance, we will recompute later (in 7900's), but this is necessary to get the opening balance on the first record.
7880 P1=NUM(P1$(5,2)),E[P1]=E[P1]+D[X]
7885 CALL "ZZPACK",X3$,"W",Q0$(3,2),"",P9,0,E{ALL},Z[11],K0$(K0,1),K1$(1,K0-1),F4$; K2$=K1$
7890 NEXT X
7895 GOTO 7815
7995 RETURN 
8050 REM "A/R FILES
8051 REM " see 2000's F1$="AR6",R[0]=4,R[1]=0,R[2]=127,R[3]=133,F2$="AR7ARO",S[0,0]=1,S[0,1]=40,S[1,0]=0,S[1,1]=28; GOSUB 4100
8052 REM " see 2000's F1$="AR8",R[0]=4,R[1]=0,R[2]=106,R[3]=118,F2$="AR7",S[0,0]=0,S[0,1]=40; GOSUB 4100
8053 F1$="AR9",F4$="A/R",R[0]=4; GOSUB 4100
8054 F1$="ARA",F4$="AR3",R[0]=4; GOSUB 4100
8055 F1$="ARL",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8056 F1$="ARM",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8057 F1$="ARX",F4$="ARX",R[0]=4; GOSUB 4100
8058 F1$="ARY",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8059 F1$="AS0",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8060 F1$="AS3",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8061 REM LET F1$="AS4",R(0)=4,R(1)=1,R(2)=1; GOSUB 04100
8062 REM "Was in here twice, (see 8051) REMd out 9/19/94 jsc/lmc
8063 REM "LET F1$="AR6",R(0)=4,R(1)=0,R(2)=127,R(3)=133; GOSUB 04100
8064 F1$="ASF",F4$="ASF",R[0]=4; GOSUB 4100
8065 F1$="AS9",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8100 REM "FORMS MGT FILES
8101 F1$="FMY",R[0]=4,R[1]=0,R[2]=177; GOSUB 4100
8102 F1$="FSK",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8103 F1$="FSL",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8104 REM "LET F1$="FSW", F4$="FM1", R[0]=4; GOSUB 04100; Should not Change FMS year this is customers year NOT company's
8150 REM "I/C FILES
8151 F1$="IC8",R[0]=4,R[1]=25,R[2]=25; GOSUB 4100
8152 F1$="IC9",F4$="I/C",R[0]=4; GOSUB 4100
8153 F1$="PO7",R[0]=4,R[1]=0,R[2]=45; GOSUB 4100
8160 REM "Add new files here - 218038"
8161 F1$="AST",F4$="AST",R[0]=4; GOSUB 4100
8162 F1$="AXN",R[0]=4,R[1]=5,R[2]=5; GOSUB 4100
8163 F1$="AXS",R[0]=4,R[1]=0,R[2]=47; GOSUB 4100
8164 F1$="AZ3",R[0]=4,R[1]=0,R[2]=34; GOSUB 4100
8165 F1$="AZB",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8166 F1$="AZC",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8167 F1$="AZD",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8168 F1$="AZS",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8169 F1$="AZT",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8170 F1$="GLV",R[0]=2,R[1]=1,R[2]=1; GOSUB 4100
8171 F1$="ICO",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100
8172 F1$="SM4",R[0]=4,R[1]=0,R[2]=288; GOSUB 4100
8173 F1$="FV7",R[0]=4,R[1]=1,R[2]=1; GOSUB 4100 ! SSP#281343
8895 RETURN 
8900 REM "Functions
8910 DEF FND$(Z9$)=Z9$(3,2)+"/"+Z9$(5,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8920 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
8950 DEF FNQ$(Z9,Z9$)=STR(Z9:Z9$)
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9041 OP1=FN%FFN("ZZE"); REM "***** TEST IF ZZE IS OPEN ***** ! [205471]-changed FFN() to FN%FFN()
9042 IF OP1=0 THEN OPEN (Z[12])"ZZE"; REM "***** TEST OPEN OF ZZE *****
9043 OP2=FFN("ZZPARM"); REM "***** TEST IF ZZPARM IS OPEN *****
9044 IF OP2=0 THEN OPEN (Z[13])"ZZPARM"; REM "***** TEST OPEN OF ZZPARM *****
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 1000
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9750 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
9780 RETURN 
9900 REM "End program
9910 DROP "ZZPACK",ERR=9911
9920 REM CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z(ALL),0,0
9940 RUN "ZMENU"
9999 END 
56000 REM + Modification History
56002 REM "187374-GL number change - PE 84's after change on GL1 GL3          
56004 REM "205471-Oracle - FFN usage in tf2g progs. to be replaced by FN%FFN  
56005 REM "210301-problem with Fiscal year change utility 
56006 REM "218038-Errors during Fiscal year utility, better error handling
56007 REM "281343-Need to add FV7 to GL2NCA utility                           
56008 REM "281937-Error 16 running the Fiscal Year Change program 
