0010 REM "Manual Check Update <AP2COA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 10/12/17 - 9.3775 - tma - SSP# 295694
0037 REM "295694-Void manual checks setting up APM record short              
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 IF NOT(%GUI) THEN BEGIN 
0100 SETERR 9000
0110 X0$="AP2COA",X1$="Manual Check Update"
0120 DIM Z0$(80,"-")
0130 DIM G$(2)
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4]
0330 IOLIST C8,C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7]
0340 IOLIST D$(1),D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14]
0350 IOLIST E$,E[0],E[1],E[2]
0360 IOLIST F$,F[0],F[1]
0370 IOLIST G$,G[0]
0380 IOLIST H$,H[0],H[1],H[2]
0390 IOLIST I$,I[0],I[1]
0400 IOLIST J$,J[0],J[1]
0410 IOLIST L$(1),L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12],L[13],L[14],L[15],L[16],L[17],L[18],L[19],L[20],L[21],L[22],L[23],L[24],L[25],L[26],L[27]
0420 IOLIST APJ$,APJ[0]
0500 REM "FILES
0505 Z=NUM(X3$(60,3)); DIM Z[Z]
0510 Z$="01L APR...  02L APT...  03O APU...  04O APA...  05O APM...  06O AP4...  07O AP2...  08O APV...  09O APW...  10O APG...  11O API...  12O APQ...  13O ZZPARM  15O APJ...  " ! SSP#226468
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0521,9900
0595 CALL "ZZINFO",Z[15],STATUS,X3$,REC_USED,TOT_REC,KEY_SZ,BYTE,DISC,TYPE,TOT_SEC,FILE_NM$ ! SSP#226468
0600 REM "
0695 CALL "ZZPROM","U6",X3$,0,U9$,"","",0
0730 DIM A$(37),A[2]
0740 DIM B$(69),B[4]
0800 REM "CHECK FOR ROOM?
0805 CALL "ZZPROM","U1",X3$,0,"","","",0
0810 DIM X[Z,1],X$(0)
0815 FOR X=1 TO Z
0820 CALL "ZZINFO",X,0,X3$,A,B,0,0,0,0,0,""; X[X-1,0]=A,X[X-1,1]=B
0825 NEXT X
0830 PRINT @(0,22),'CL',
0835 IF X[Z[1]-1,0]=0 THEN CALL "ZZPROM","U2",X3$,S3,"","","",0; GOTO 9900
0840 GOTO 0900
0880 REM "PROMPT OUT OF ROOM
0885 X$="There is not enough room to update this data. Press <Return>: "
0890 CALL "ZZPROM","U3",X3$,S3,"","","",0; GOTO 9900
0900 REM "RESTART LOGIC
0905 V0$=X3$(1,6)+X3$(40,3)+DAY+STR(TIM*100:"0000")+X3$(178,6); WRITE (Z[1],KEY="",DOM=0906)V0$
0910 EXTRACT (Z[1],KEY="")V0$,K0$,K1$,K0,K1; I1=IND(Z[1])
0915 GOSUB 6000
0920 IF K0$="" THEN READ (Z[1],KEY=K0$); GOTO 0960
0930 EXTRACT (Z[1],KEY=K0$,DOM=0931)IOL=0310
0935 PRINT @(12,12),"Restarting update with record: ",A$(1,4)+"-"+A$(5,2)+"-"+A$(7,3)+"-"+A$(10,1)+"-"+A$(11,10)
0940 CALL "ZZPROM","U5",X3$,0,"","","",14
0970 CALL "ZZPROM","9",X3$,S3,"","","",0; ON S3 GOTO 0971,9900
0975 PRINT @(0,12),'CL',
0990 GOSUB 4000
1000 REM "READ NEXT RECORD
1020 K0$=KEY(Z[1],END=5000)
1030 READ (Z[1],KEY=K0$)IOL=0310
1090 PRINT @(12,12),U9$,A$(1,4)+"-"+A$(5,2)+"-"+A$(7,3)+"-"+A$(10,1)+"-"+A$(11,10)
1095 IF A$(10,1)<>"V" THEN H$="" ! SSP#254517!SSP#255527
1100 REM "
1110 IF A$(10,1)="V" THEN GOSUB 8000; GOTO 1000
1140 READ (Z[2],KEY=A$(1,20),DOM=1141)
1175 DIM F[2],F$(300)
1180 FIND (Z[6],DOM=1181,KEY=A$(21,10))IOL=0360
1190 GOSUB 3000
1200 REM "READ EACH INVOICE RECORD
1210 READ (Z[2],END=1000)IOL=0320
1215 IF B$(1,20)<>A$(1,20) THEN GOSUB 3100; GOTO 1000
1220 GOSUB 3200
1224 REM "if invoice not in open file  check history file and move it
1225 OPFLG=0; FIND (Z[11],KEY=A$(21,10)+B$(21,10),DOM=1226); OPFLG=1; GOTO 1250 ! SSP#203117
1230 DIM L$(160),L[27]
1235 OPFLG=0; FIND (Z[12],KEY=A$(21,10)+B$(21,10),DOM=1250)IOL=0410; OPFLG=1 ! SSP#203117
1240 WRITE (Z[11],KEY=L$(1,20))IOL=0410
1245 REMOVE (Z[12],KEY=A$(21,10)+B$(21,10)); IF KEY_SZ<>0 THEN GOSUB 7000 ! SSP#226468
1250 REM "ACCUM TO CHECK HEADER
1260 H[0]=H[0]+B[1],H[1]=H[1]+B[2]
1270 IF B$(21,2)="PP" AND OPFLG=1 THEN GOTO 1200 ! SSP#203117
1290 IF B$(21,2)<>"PP" AND B[0]<=0 THEN GOTO 1200
1300 REM "TERMS CODE
1310 DIM G[1]
1320 IF G$>"" THEN IF G$(1,2)=B$(37,2) THEN GOTO 1400
1340 IF G$(1,2)<>B$(37,2) THEN G$="  "; READ (Z[7],KEY=B$(37,2),DOM=1341)IOL=0370
1400 REM "Create Invoice Record
1420 DIM D$(146),D[14]
1440 D$(1,6)=B$(1,6),D$(7,10)=A$(21,10),D$(17,18)=B$(21,18)
1442 READ (Z[4],KEY=D$(1,26),DOM=1445)IOL=0340
1445 D$(47,25)=B$(48,25)
1450 D$(72,3)=A$(7,3),D$(75,9)=B$(39,9)
1455 D$(89,1)="I"
1460 D$(100,4)=B$(73,4)
1480 IF D[0]<=0 THEN D[0]=B[0] ELSE IF B[0]>0 THEN GOSUB 4100
1485 D[1]=D[1]+B[4]
1500 REM "Vendor defaults
1520 D$(84,4)=F$(288,4)
1600 REM "
1620 IF G$<>"  " THEN GOSUB 8300
1630 D[7]=D[7]+B[2]
1640 D[9]=D[9]+B[4]
1700 REM "WRITE INVOICE RECORD
1720 WRITE (Z[4],KEY=D$(1,26))IOL=0340
1800 REM "RESTART LOGIC
1810 GOSUB 6600
1950 GOTO 1200
3000 REM "Setup Check Header
3010 IF H$>"" THEN GOSUB 3100
3020 DIM H$(36),H[3]
3030 H$(1,3)=X3$(9,3),H$(4,3)=A$(7,3),H$(7,10)=A$(21,10)
3035 H$(17,1)="0",H$(18,6)=A$(11,6),H$(24,6)=A$(31,6)
3040 H$(30,6)=A$(1,6); GOTO 3050
3045 H$(17,1)=CHR(ASC(H$(17,1))+1)
3050 FIND (Z[8+2*POS("P"=A$(10,1))],KEY=H$(1,17),DOM=3051); GOTO 3045
3060 H[2]=H[2]+A[0]
3090 RETURN 
3100 REM "Write Check Header
3110 IF A$(10,1)="P" THEN GOTO 3190
3120 WRITE (Z[8+2*POS("P"=A$(10,1))],KEY=H$(1,17))IOL=0380; GOTO 3190
3125 H$(17,1)=CHR(ASC(H$(17,1))+1); GOTO 3120
3195 RETURN 
3200 REM "WRITE INVOICE RECORD
3210 DIM I$(34),I[2]
3220 I$(1,17)=H$(1,17),I$(18,10)=B$(21,10),I$(28,6)=A$(11,6)
3230 IF A$(10,1)<>"P" THEN FIND (Z[9+2*POS("P"=A$(10,1))],KEY=I$(1,17),DOM=3231)IOL=0390
3240 I[0]=I[0]+B[1],I[1]=I[1]+B[2]
3245 I[2]=I[0]-I[1]
3280 IF A$(10,1)="P" THEN GOSUB 3300; REMOVE (Z[10],KEY="",DOM=3295); GOTO 3295
3290 WRITE (Z[9+2*POS("P"=A$(10,1))],KEY=I$(1,27))IOL=0390
3295 RETURN 
3300 REM "Write payment selection record
3310 DIM J$(24),J[1]
3315 J$(1,10)=I$(7,10),J$(11,10)=I$(18,10),J$(21,1)=I$(17,1),J$(22,3)=I$(4,3)
3320 FIND (Z[10],KEY=J$(1,20),DOM=3321)IOL=0400
3340 J[0]=J[0]+I[0],J[1]=J[1]+I[1]
3360 WRITE (Z[10],KEY=J$(1,20))IOL=0400
3390 RETURN 
4000 REM "Write Restart Records
4010 WRITE (Z[4],KEY="")V0$
4020 WRITE (Z[8],KEY="")V0$
4090 RETURN 
4100 REM "Link up duplicate invoices G/L dist.
4101 REM "We know D(0)>0 or we wouldn't be here
4110 C8=D[0]
4115 DIM C[7]
4120 IF C8<=0 THEN GOTO 4140
4125 C7=C8
4130 READ (Z[3],IND=C8)IOL=0330
4135 GOTO 4120
4140 REM "C7 points to last invoice,all info is correct because we just read it,
4150 C8=B[0]
4160 WRITE (Z[3],IND=C7)IOL=0330
4190 RETURN 
5000 REM "END OF UPDATE
5010 IF I$>"" THEN GOSUB 3100
5100 REM "
5110 PRINT 'CF',@(12,10),"Files now being cleared.",@(12,12),"Do not Interrupt!!",
5120 Q$=STR(Z[1]:"00")+STR(Z[2]:"00"); CALL "ZZINIT",Q$
5125 PRINT 'CF',
5130 Y4$="AP2DUA"
5210 CALL "ZZPROM","U7",X3$,0,"","","",10
5400 REM 
5450 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 CALL "ZZPROM","U9",X3$,0,"","","",4
6025 CALL "ZZPROM","U8",X3$,0,"","","",7
6030 PRINT V0$(22,4),".",V0$(26,2),
6165 PRINT (0,ERR=6066)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6225 GOSUB 6450
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6490 RETURN 
6600 REM "RESTART LOGIG
6605 RETURN 
6610 WRITE (Z[1],IND=I1)V0$,K0$,K1$,K0,K1
6690 RETURN 
6700 REM "Increment Audit Control No.
6705 F9=Z[13]
6710 A2$=X3$(146,6)+"  000100",A0$=X3$(9,3)+"AUDIT",A1$=""; EXTRACT (F9,KEY=A0$,DOM=6716)A0$,A1$
6715 A0=POS(A2$(1,6)=A1$,14); IF A0=0 THEN A1$=A1$+A2$; GOTO 6715 ELSE A2=NUM(A1$(A0+8,4))+1,A2$(9,4)=STR(A2:"0000"),A1$(A0,14)=A2$
6720 WRITE (F9,KEY=A0$)A0$,A1$
6740 RETURN 
7000 REM "If moving from history to open move AP Transactions too IF not an indexed file!SSP#226468
7005 DIM APJ[1]
7010 READ (Z[15],KEY=A$(21,10)+B$(21,10),DOM=*NEXT)
7020 APJ_KEY$=KEY(Z[15],END=7090); READ (Z[15],KEY=APJ_KEY$)IOL=0420
7030 IF APJ_KEY$(1,20)<>A$(21,10)+B$(21,10) THEN GOTO 7090
7040 IF MID(APJ$,58,1)="H" THEN APJ$(58,1)=" "; WRITE (Z[15],KEY=APJ_KEY$)IOL=0420
7050 GOTO 7020
7090 RETURN 
7500 REM "CUSTOM PROGRAMMING ROUTINES
8000 REM "Put void check into monthly disb file
8005 DIM E$(110),E[2] ! SSP#295694
8010 E$(1,9)=A$(1,9),E$(10,6)=A$(11,6),E$(18,1)=A$(10,1),E$(19,6)=A$(31,6),E$(25,10)=A$(21,10),E$(35,35)="* VOID * VOID * VOID * VOID * VOID ",E$(70,6)=V0$(22,6)
8020 E9=0
8025 E$(16,2)=STR(E9:"00")
8030 WRITE (Z[5],KEY=E$(1,17),DOM=8031)IOL=0350; GOTO 8035
8031 E9=E9+1; GOTO 8025
8040 RETURN 
8300 REM "CALC DUE DATE
8310 CALL "ZZDISC",X3$,G$,0,0,D$(27,6),Q1$,Q2$,0,0
8370 D$(35+K9,6)=Q1$,D$(41+K9,6)=Q2$
8380 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOSUB 6600; GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9950
9935 IF %GUI AND S3 THEN EXIT ! SSP 185501
9940 IF %GUI THEN CALL Y4$ ELSE RUN Y4$
9950 IF %GUI THEN EXIT ELSE RUN "ZMENU"
9999 END 
56000 ! "185501-Program APGCNS in gui Manual Check Audit and Report Update, 
56001 REM "203117-Reversing a PrePayment to a vendor in Manual Check          
56002 REM "226468-We need to reverse an old check so we tested it in our DEV  
56003 REM "295694-Void manual checks setting up APM record short              
