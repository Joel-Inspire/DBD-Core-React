0010 REM "Cash Disbursements Journal Update <AP2CUA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 02/26/24 - 14.414286 - jvv - SSP# 307476
0036 REM "Mod to line 835 to remove control record if files empty
0037 REM "307476-New Positive Pay formats for KS customers                   
0040 REM "Copyright 2024 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 IF %GUI THEN CLEAR ELSE BEGIN 
0100 SETERR 9000
0110 X0$="AP2CUA",X1$="Cash Disbursements Journal Update"
0120 DIM Z0$(80,"-"),H$(200,"0"),BANK_CDE$(3)
0130 DAY_FORMAT READ OLD_FORMAT$; DAY_FORMAT "YYYYMMDD"; DATE$=DAY; DAY_FORMAT OLD_FORMAT$ ! WO166784
0145 GOSUB 8950
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 DEF FNV$(Z9$)=CHR(INT(NUM(Z9$)/10)-125)+STR(MOD(NUM(Z9$),10))
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0280 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0295 DIM Z0$(80,X3$(235,1)); Z0$=ESC+"BG"+Z0$+ESC+"EG"
0300 REM 
0310 IOLIST A$,A[0],A[1],A[2],A[3]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6]
0340 IOLIST D$(1),D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15],D[16],D[17],D[18],D[19],D[20],D[21],D[22],D[23],D[24],D[25],D[26],D[27]
0361 IOLIST D0$
0370 IOLIST G$,G[0],G[1],G[2],G[3]
0380 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8]
0390 IOLIST I$,I0$,I[0]
0400 IOLIST D0$
0410 IOLIST K$
0420 IOLIST L$,L[0],L[1],L[2]
0422 IOLIST L$,L[0],L[1],L[2]
0500 REM "FILES
0505 Z=NUM(X3$(60,3)),F0$="APCAPH",T1$="CD"; DIM Z[Z]
0508 IF X3$(146,6)="AP2CNS" THEN F0$="APVAPW",T1$="MC"
0510 Z$="01L "+F0$(1,3)+"...  02L "+F0$(4,3)+"...  03O AP5...  04O API...  05X APJ...  06ORAPK...  07O APM...  08ORAPN...  09ORAPO...  10O APG...  11O AP4...  12O AP9...  13O ZZPARM  14O ZYB...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0521,9900
0525 CALL "ZZDAPP",X3$,"DALL"
0530 CALL "ZZDAPP",X3$,"!AGL2XUA"
0535 IF X3$(30,1)="M" THEN READ (Z[13],KEY="PFGG/L")F3$
0580 READ (Z[13],KEY=X3$(9,3)+"A/P")F0$
0582 READ (Z[13],KEY=X3$(9,3)+"AP2A",DOM=0583)F1$
0585 READ (Z[13],KEY=X3$(9,3)+"G/L")G0$
0590 IF T1$="CD" THEN READ (Z[13],KEY=X3$(9,3)+"APC"+X3$(174,4),DOM=9600)C0$
0595 READ (Z[13],KEY="STAT"+"A/P")S9$
0600 REM "
0605 T0$=G0$(40,1); IF T0$="C" THEN IF G0$(180,1)="Y" THEN T0$=T0$+"A"
0730 DIM A$(58),A[3]
0740 DIM B$(43),B[5]
0750 PCARD_CHL=0,PCARD_FILE$="",PCARD_TYPE=0 ! WO 251293
0800 REM "CHECK FOR ROOM?
0805 PRINT @(12,22),"Determining file information...",
0810 DIM X[Z,1],X$(0)
0815 FOR X=1 TO Z
0820 CALL "ZZINFO",X,0,X3$,A,B,0,0,0,0,0,""; X[X-1,0]=A,X[X-1,1]=B
0825 NEXT X
0830 PRINT @(0,22),'CL',
0835 IF X[Z[1]-1,0]=0 THEN IF Q2$<>"" THEN GOTO 9900 ELSE CALL "ZZPROM","4",X3$,S3,"There is no data to update.","","",0; REMOVE (Z[13],KEY=X3$(9,3)+"APC"+X3$(174,4),DOM=9900); GOTO 9900
0840 GOTO 0900
0880 REM "PROMPT OUT OF ROOM
0885 X$="There is not enough room to update this data. Press <Return>: "
0890 IF Q2$<>"" THEN GOTO 9900 ELSE CALL "ZZPROM","4",X3$,S3,X$,"","",0; GOTO 9900
0900 REM "RESTART LOGIC
0905 V0$=X3$(1,6)+X3$(40,3)+DAY+STR(TIM*100:"0000")+X3$(178,6); WRITE (Z[1],KEY="",DOM=0906)V0$
0910 EXTRACT (Z[1],KEY="")V0$,K0$,K1$,K0,K1; I1=IND(Z[1])
0915 GOSUB 6000
0920 IF K0$="" THEN READ (Z[1],KEY=K0$); GOTO 0960
0930 EXTRACT (Z[1],KEY=K0$,DOM=0931)IOL=0310
0935 PRINT @(12,12),"Restarting update with record: ",A$(1,3)+"-"+A$(4,3)+"-"+A$(7,10)+"-"+A$(17,1)
0940 PRINT @(12,14),"WARNING: You should contact software support services",@(22,15),"to ensure that no data is lost."
0970 IF T1$<>"MC" AND Q2$="" THEN CALL "ZZPROM","9",X3$,S3,"","","",0; ON S3 GOTO 0971,9900
0975 PRINT @(0,12),'CL',
0980 IF T1$<>"MC" THEN Q$=STR(Z[10]:"00"); CALL "ZZINTZ",X3$,"",0,Q$
0985 Z$="10C APG...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0986,9900
0990 IF T1$<>"MC" THEN C0$(53,1)="4"; WRITE (Z[13],KEY=C0$(1,6))C0$
1000 REM "READ NEXT RECORD
1020 K0$=KEY(Z[1],END=5000)
1030 READ (Z[1],KEY=K0$)IOL=0310
1050 PRINT @(12,12),"Now updating record: ",A$(1,3)+"-"+A$(4,3)+"-"+A$(7,10)+"-"+A$(17,1)
1060 IF A$(4,3)<>BANK_CDE$(1,3) THEN PCARD_TYPE=0,BANK_CDE$=A$(4,3); READ (Z[14],KEY=BANK_CDE$,DOM=*NEXT)BANK_CDE_REC$; IF BANK_CDE_REC$(131,1)="U" THEN TEXT_FILE$=DATE$,PFMT$=MID(BANK_CDE_REC$,148,1),BANK_AC_NUM$=MID(BANK_CDE_REC$,39,12); GOSUB 8400 ELSE IF BANK_CDE_REC$(131,1)="P" THEN PCARD_TYPE=1; GOSUB 8500 ELSE GOTO *NEXT ! WO166784 WO 251293 WO267103 SSP285678
1100 REM "
1120 READ (Z[11],KEY=A$(7,10))IOL=0410; PCV$=K$ ! WO 251293
1130 IF T1$="MC" THEN IF C0$>"" THEN IF C0$(1,6)<>A$(30,6) THEN GOSUB 8100
1140 IF T1$="MC" THEN C0$=A$(30)
1160 P0$=X3$(9,3)+"G/LYE",P9$=C0$(1,6)
1210 GOSUB 2000
1220 GOSUB 2900
1230 GOSUB 3200
1240 P_REV=0; IF PCARD_TYPE AND T1$="MC" AND A[2]<0 THEN P_REV=1; GOSUB 8600; GOTO 1300 ! 251293 Check reversals
1250 IF PCARD_TYPE THEN GOSUB 8700 ! 251293 P-card Check
1300 REM "Get invoice detail
1320 READ (Z[2],KEY=A$(1,17),DOM=1321)
1330 K5$=KEY(Z[2],END=1700); READ (Z[2])IOL=0320; IF B$(1,17)<>A$(1,17) THEN GOTO 1700
1334 IF X3$(330,1)="1" THEN IF B$(28,6)<>A$(18,6) AND POS(" "<>B$(28,6))<>0 THEN GOTO 1330; REM "IF FRANCHISE THEN IF NOT EQUAL TO CHECK # AND NOT BLANK SKIP IT
1335 IF LEN(B$)<42 THEN B$=B$+" "; GOTO 1335
1336 B$(28,6)=A$(18),B$(37,6)=A$(24,6); WRITE (Z[2],KEY=K5$)IOL=0320
1340 GOSUB 2200
1341 REM IF MID(F0$,82,1)="Y" THEN CALL "UPDATP;UPDATE_FROM_AP",X3$,X4$,B$,B{ALL},C0$
1342 IF X3$(30,1)<>"M" OR X3$(330,1)="1" OR D$(121,1)<>"1" THEN GOTO 1360 ELSE Q1$="A",Q0$=F3$(31,12),Q0=B[0]; GOSUB 7900
1343 Q0=-Q0,Q0$=F3$(91,12); GOSUB 7900
1350 CALL "CM2AAA",X3$,Z[2],2,D$(118,3)+K5$,"",K9
1355 CALL "CM2UAC",X3$,"D",B$,B{ALL},D$,"",14
1370 GOSUB 2300
1375 GOSUB 3100
1380 GOSUB 2500; GOSUB 3500
1400 REM 
1410 P0$=X3$(9,3)+"G/LYE",P9$=C0$(1,6)
1415 P0$=P0$+C0$(1,4); READ (Z[13],KEY=P0$)P0$
1420 Q=NUM(P0$(13,2)),Q=15*6-3
1440 Q$=FNV$(P0$(9,4))+P9$(5,2)+T1$+"C"+V0$(22,6)+"AP"+A$(18,6)
1445 T8$=Q$(1,4)
1450 R9$="Ck: "+A$(18,6)+"\ "+FNS$(K$(11,35))+"\ I# "+FNS$(B$(18,10))
1460 IF G0$(40,1)="A" THEN R9$=""
1500 REM "UPDATE LINES
1505 A0=D[1]
1506 A1=0,F$=G$(1,17)+B$(18,10)
1520 CALL "GL2XUA",X3$,X4$,"APK...",40,Q$,R9$,A0,0,2,R0,Z[1],I1,"APO...",F$,A1,Z[5],J$,J[0],A2,0,R1,R2,"","",D$
1530 GOSUB 2550
1550 REM "
1600 REM "
1610 GOSUB 2230
1620 IF PCARD_TYPE AND P_REV THEN IF PCARD_RCHL<>0 THEN CALL "AP2PCP;UPDATE_PCARD_REV_FILE",X3$,X4$,PCARD_RCHL,PCARD_RFILE$,PCARD_UNIT$,B$,B{ALL},PCV$,PC_INVD$,LOG_CHL; GOTO 1640 ! WO251293 
1630 IF PCARD_TYPE THEN IF PCARD_CHL<>0 THEN CALL "AP2PCP;UPDATE_PCARD_FILE",X3$,X4$,PCARD_CHL,PCARD_FILE$,PCARD_OTH${ALL},B$,B{ALL},PCV$,PC_INVD$,LOG_CHL ! PCARD$,PCARD{ALL} ! WO251293 
1690 GOTO 1330
1700 REM "
1800 REM "RESTART LOGIC
1810 GOSUB 6600
1950 GOTO 1000
2000 REM "Update Vendor Status Data
2020 DIM C$(38),C[6]
2025 C$(1,10)=A$(7,10)
2030 EXTRACT (Z[3],KEY=C$(1,10),DOM=2031)IOL=0330
2035 IF A$(24,6)>C$(17,6) THEN C$(17,6)=A$(24,6)
2040 C[0]=C[0]-A[0],Q$=FND$(A$(24,6)); Q$=Q$(7,4)
2045 IF Q$<=F0$(62,4) THEN GOTO 2050 ELSE GOTO 2055
2050 C[2]=C[2]+A[2]; IF A[0]>0 THEN C[3]=C[3]+1 ELSE C[3]=C[3]-1
2051 GOTO 2056
2055 C[4]=C[4]+A[2]; IF A[0]>0 THEN C[5]=C[5]+1 ELSE C[5]=C[5]-1
2070 WRITE (Z[3],KEY=C$(1,10))IOL=0330
2090 RETURN 
2200 REM "Open invoice file
2210 DIM D$(160),D[27]
2215 D$(1,20)=B$(7,10)+B$(18,10)
2220 EXTRACT (Z[4],KEY=D$(1,20),DOM=2221)IOL=0340; PC_INVD$=MID(D$,21,6) ! WO 251293
2225 RETURN 
2230 D[11]=D[11]+B[1],D[12]=D[12]+B[0],D[13]=D[13]-B[0],D[20]=D[20]+B[2],D[21]=D[21]+B[3]
2235 IF D$(100,6)<C0$(1,6) THEN D$(100,6)=C0$(1,6)
2250 REM "Invoice links
2260 D[0]=A2
2280 WRITE (Z[4],KEY=D$(1,20))IOL=0340
2282 IF MID(F0$,82,1)="Y" THEN CALL "UPDATP;UPDATE_FROM_AP",X3$,X4$,B$,B{ALL},C0$
2285 GOSUB 2500
2290 RETURN 
2300 REM "Update invoice G/L detail (Cash basis)
2305 R1=2
2310 PRECISION 14; IF D[13]<>0 THEN R0=B[0]/D[13]
2315 IF D[13]=0 AND D[2]=0 THEN R0=1,R1=1 ELSE IF D[13]=0 THEN R0=B[0]/D[2],R1=1
2320 PRECISION 2
2330 R2=B[0]
2390 RETURN 
2500 REM "Invoice detail to Monthly Disbursements
2505 DIM H[8]
2510 H$=G$(1,17)+D$(11,10)+D$(21,6)+D$(69,9)
2520 H[1]=B[0],H[2]=B[1],H[7]=B[0]-B[1]
2540 RETURN 
2550 REM "Write record
2555 H[0]=A1
2580 WRITE (Z[8],KEY=H$(1,27))IOL=0380
2590 RETURN 
2900 REM "A/P statistical history data
2910 Q1$=A$(7,10)+C0$(1,4),Q1=NUM(C0$(5,2))
2920 Q0$="D",Q0=A[2]; GOSUB 7000
2995 RETURN 
3100 REM "Invoice transaction history
3110 DIM J$(55),J[1]
3120 J$(1,20)=B$(7,10)+B$(18,10),J$(21,15)="Check: "+A$(18,6),J$(36,1)="D",J$(37,6)=P9$,J$(43,6)=V0$(22,6),J$(49,6)=A$(24,6),J[0]=-B[0]
3125 IF T1$="MC" THEN J$(36,1)="M"
3130 A2=D[0]
3190 RETURN 
3200 REM "Monthly disbursement
3210 DIM G$(110),G[3],G1$(76) ! SSP#270628
3215 A2=0
3220 G$(1,6)=C0$(1,6),G$(7,3)=A$(4,3),G$(10,6)=A$(18,6),G0=1
3225 G$(18,1)="C",G$(19,6)=A$(24,6),G$(25,10)=A$(7,10),G$(35,35)=K$(11,35),G$(70,6)=V0$(22,6)
3226 IF T1$<>"MC" THEN G$(76,9)=A$(30,9); REM "File ref no, WO131772
3228 IF T1$="MC" THEN G$(18,1)="M",G0=0 ELSE GOSUB 7600
3230 G[0]=A[0],G[1]=A[1],G[2]=A[0]-A[1]
3240 G$(16,2)=STR(G0:"00"),G0=G0+1
3245 IF STP(TEXT_FILE$,3)>"" AND G$(76,9)=DIM(9) THEN G$(76,9)=TEXT_FILE$ ! WO166784
3250 WRITE (Z[7],KEY=G$(1,17),DOM=3240)IOL=0370
3290 RETURN 
3500 REM "G/L Interface - Cash and accrual
3510 Q$=A$(7,2); IF F0$(20,1)="Y" THEN Q$=D$(69,9)
3515 IF D0$>"" THEN IF D0$(1,LEN(Q$))=Q$ THEN GOTO 3530
3520 DIM D0$(200,"0"); CALL "ZZFLES",X3$,Y1$,Y0$,"10O APX...  ",Z{ALL},Z0,0; READ (Z[10],KEY=Q$,DOM=3521)IOL=0361
3525 CALL "ZZFLES",X3$,Y1$,Y0$,"10C APX...  ",Z{ALL},Z0,0
3530 IF POS("A"=T0$)>0 THEN Q1$="A",Q0$=D0$(33,12),Q0=B[0]; GOSUB 8000
3535 REM "Discounts
3540 Q1$=T0$; IF F0$(15,1)="E" THEN Q0$=D0$(45,12),Q0=-B[1]; GOSUB 8000; GOTO 3570
3545 IF D[13]=0 THEN Q0=D[7]-D[11],Q0$=D0$(45,12); GOSUB 8000
3570 REM "Post Special Amts to G/L
3575 IF F1$="" OR POS("C"=T0$)=0 THEN GOTO 3590
3580 Q1$="C"; FOR X=0 TO 3; Q0$=D0$(X*12+81,12),Q0=D[X+3]*R0
3582 IF R1=2 THEN Q0=D[X+3]-D[X+14],Q0=Q0*R0
3584 IF F1$(24+X*20,1)="Y" THEN GOSUB 8000; R2=R2-Q0,D[14+X]=D[14+X]+Q0,H[X+3]=Q0
3585 NEXT X
3600 REM "CASH ACCOUNT
3605 IF STP(L$,3)="" THEN IF STP(A$(4,3),3)>"" THEN DIM L[2]; READ (Z[14],KEY=A$(4,3),DOM=*NEXT)IOL=0420
3610 IF L$>"" THEN IF L$(1,3)=A$(4,3) THEN LAST_CK$=A$(18,6); GOTO 3640 ELSE GOSUB 3800; LAST_CK$=A$(18,6)
3620 DIM L[2]; READ (Z[14],KEY=A$(4,3))IOL=0420
3640 REM "
3645 B2=B[0]-B[1]
3650 Q0$=L$(69,12),Q0=-B2,Q1$=T0$
3660 GOSUB 8000
3690 RETURN 
3700 REM "
3790 RETURN 
3800 REM "Update last check number used for this bank code
3810 DIM L[2]; EXTRACT (Z[14],KEY=L$(1,3))IOL=0420
3815 L$(93,6)=LAST_CK$
3820 WRITE (Z[14],KEY=L$(1,3))IOL=0420
3845 RETURN 
5000 REM "END OF UPDATE
5015 IF T1$<>"MC" THEN GOSUB 3800; REM "Update bank code with last check number written
5020 IF F0$(69,1)="Y" THEN GOSUB 7800
5050 REM "FLUSH G/L
5060 GOSUB 8100
5100 REM "Update APY sort file
5105 Z$="03C AP5...  03O APY...  "
5110 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 5111,9900
5120 READ (Z[1],KEY="",DOM=5121)
5125 READ (Z[1],END=5150)A$
5130 K$=A$(4,3)+A$(18,6)+C0$(1,6)
5140 WRITE (Z[3],KEY=K$)
5145 GOTO 5125
5150 IF TEXT_CHAN<>0 THEN GOSUB 8435 ! WO166784, write text file of payment info
5160 IF PCARD_CHL<>0 THEN CALL "AP2PCP;END_PCARD_FILE",X3$,X4$,PCARD_CHL,PCARD_FILE$,PCARD_OTH${ALL},LOG_CHL ! WO251293
5200 REM "CLEAR FILES
5210 PRINT 'CF',@(12,10),"Files now being cleared.",@(12,12),"Do not Interrupt!!",
5220 Q$=STR(Z[1]:"00")+STR(Z[2]:"00"); CALL "ZZINTZ",X3$,"B",0,Q$
5225 REMOVE (Z[13],KEY=X3$(9,3)+"APC"+X3$(174,4),DOM=5226)
5230 GOSUB 6700
5240 Z$="01O APG...  "
5245 IF T1$="MC" THEN Z$=Z$+"02O APR...  03C APY...  03O APT...  " ELSE Z$=Z$+"03C APY...  03O APZ...  "
5250 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; IF Z0=1 THEN ESCAPE 
5254 IF T1$="MC" THEN APG_KEY$=KEY(Z[1],END=5255); Q$=STR(Z[2]:"00")+STR(Z[3]:"00"); CALL "ZZINTZ",X3$,"B",0,Q$; IF X3$(145,1)<>"1" THEN GOTO 5256 ELSE IF X3$(145,1)="1" THEN CALL "ZZBATZ",X3$,X4$,"AP2CAA"+X3$(174,4),"P type manual checks"; GOTO 5256; REM "ssp95238
5255 IF T1$="MC" THEN Q$=STR(Z[1]:"00")+STR(Z[2]:"00")+STR(Z[3]:"00"); CALL "ZZINTZ",X3$,"B",0,Q$ ELSE Q$=STR(Z[1]:"00")+STR(Z[3]:"00"); CALL "ZZINTZ",X3$,"B",0,Q$
5290 PRINT 'CF'
5400 REM 
5450 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(12,4),"This program will update information from the",; IF T1$<>"MC" THEN PRINT @(12,5),"Cash Disbursement Journal" ELSE PRINT @(12,5),"Manual Check entry file"
6025 PRINT @(12,7),"These entries were printed on audit report #",V0$(22,4),".",V0$(26,2),
6165 PRINT (0,ERR=6066)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6225 GOSUB 6450
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6490 RETURN 
6600 REM "RESTART LOGIG
6605 GOTO 6690
6610 WRITE (Z[1],IND=I1)V0$,K0$,K1$,K0,K1
6690 RETURN 
6700 REM "Increment Audit Control No.
6705 F9=Z[13]
6710 A2$=X3$(146,6)+"  000100",A0$=X3$(9,3)+"AUDIT",A1$=""; EXTRACT (F9,KEY=A0$,DOM=6716)A0$,A1$
6715 A0=POS(A2$(1,6)=A1$,14); IF A0=0 THEN A1$=A1$+A2$; GOTO 6715 ELSE A2=NUM(A1$(A0+8,4))+1,A2$(9,4)=STR(A2:"0000"),A1$(A0,14)=A2$
6720 WRITE (F9,KEY=A0$)A0$,A1$
6740 RETURN 
7000 REM "Update stats q0$ in period q1 with data q0
7005 IF Q0=0 OR POS(Q0$=F0$(22,10))=0 THEN GOTO 7090
7010 DIM K[14]; REM " P9$=Q1$+Q0$ 169519
7020 GOSUB 7100
7040 K[Q1]=K[Q1]+Q0
7060 GOSUB 7150
7090 RETURN 
7100 REM "Read stats (Packed/Unpacked)
7105 Q=POS(Q0$=S9$(49),17); IF Q=0 THEN EXITTO 7090 ELSE M0$=S9$(Q+48,17)
7110 CALL "ZZPACK",X3$,"E",M0$(3,2),"",0,0,K{ALL},Z[12],Q0$,Q1$,S9$
7135 GOTO 7190
7150 REM "Write stats
7160 CALL "ZZPACK",X3$,"W",M0$(3,2),"",0,0,K{ALL},Z[12],Q0$,Q1$,S9$
7190 RETURN 
7500 REM "CUSTOM PROGRAMMING ROUTINES
7600 REM "Remove void computer printed checks
7610 READ (Z[7],KEY=G$(1,15)+"00",DOM=7640)G1$
7620 IF G1$(18,1)="V" THEN REMOVE (Z[7],KEY=G$(1,15)+"00")
7640 RETURN 
7800 REM "Update Bank Reconciliation
7810 Z$="12C AP9...  12O BR0...  "
7820 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; IF Z0=1 THEN ESCAPE 
7822 DIM SUMMARY$[10],SUMMARY[10]; REM "Arrays for summary records, WO131772
7825 READ (Z[1],KEY="",DOM=7826)
7830 READ (Z[1],END=7890)IOL=0310
7832 READ (Z[14],KEY=A$(4,3))BANK_CODE$
7833 IF BANK_CODE$(127,3)<>"   " THEN A$(4,3)=BANK_CODE$(127,3); REM "Change bank code for bank rec records, WO131772
7834 IF BANK_CODE$(130,1)="Y" THEN GOSUB 8200; GOTO 7830; REM "Create bank rec record in summary, WO131772
7835 READ (Z[11],KEY=A$(7,10))IOL=0410
7840 DIM L$(127),L[2]
7841 L$(106,1)="N",L$(79,1)="N"; IF T1$="MC" THEN L$(106,1)="Y",L$(100,6)=A$(30,6)
7842 IF T1$="CD" THEN L$(100,6)=P9$
7845 L$(1,3)=A$(4,3),L$(4,1)="1",L$(5,9)="000"+A$(18,6),L$(49,6)=A$(24,6),L$(108,10)=A$(7,10)
7860 L[0]=A[2]
7865 L$(14,35)=K$(11,35)
7870 L$(121,1)=A$(17,1)
7875 IF A[2]<0 THEN GOTO CHECK_REV ! SSP#180098
7880 WRITE (Z[12],KEY=L$(1,13)+L$(119,2),DOM=7881)IOL=0422; GOTO 7885
7882 L$(119,2)=STR(NUM(L$(119,2))+1:"00"); IF L$(119,2)>"00" THEN GOTO 7880 ELSE ESCAPE ; REM "MORE than 99 transaction with the same check #!!!!
7885 GOTO 7830
7890 IF HAVE_SUMMARY$="Y" THEN GOSUB 8300
7895 RETURN 
7900 REM "Make posting for RL
7910 P=POS("???"=Q0$); IF P>0 THEN Q0$(P,3)=D$(118,3)
8000 REM "G/L control postings accumulation
8005 REM "Q1$=Methods, q0$=Account number (12), q0=amount
8010 IF T9=0 THEN GOSUB 8190 ELSE IF Q0=0 THEN GOTO 8080
8015 FOR R=1 TO LEN(Q1$)
8020 P=POS(Q1$(R,1)+Q0$=T9$,13); IF P>0 THEN P=INT(P/13),T[P]=T[P]+Q0; GOTO 8050
8025 IF LEN(T9$)<T9*13 THEN T9$=T9$+Q1$(R,1)+Q0$; GOTO 8020
8030 GOSUB 8100; GOTO 8020
8050 NEXT R
8095 RETURN 
8100 REM "FLUSH G/L ACCUM - SUMMARY POST
8105 IF T9$="" THEN GOTO 8190 ELSE CALL "ZZFLES",X3$,Y1$,Y0$,"10O GL6...  ",Z{ALL},Z0,Z1
8110 FOR X=1 TO LEN(T9$) STEP 13
8115 P=INT(X/13)
8120 IF T[P]=0 THEN GOTO 8185
8125 I$=T9$(X,1)+T8$(1,4)+T1$+V0$(22,6)+T9$(X+1,12)+"~~"+X3$(15,6)+"AP"
8130 I0$="A/P Check update"; DIM I[1]
8135 EXTRACT (Z[10],KEY=I$(1,27),DOM=8136)IOL=0390
8140 I[0]=I[0]+T[P]
8145 WRITE (Z[10],KEY=I$(1,27))IOL=0390
8185 NEXT X
8190 CALL "ZZFLES",X3$,Y1$,Y0$,"10C GL6...  ",Z{ALL},Z0,0
8195 T9=14,T9$=""; DIM T[T9]; RETURN 
8200 REM "Accumulate for summary bank rec entry, WO131772
8205 HAVE_SUMMARY$="Y"
8210 P=POS(A$(4,3)=CODE_LIST$,3); IF P=0 THEN CODE_LIST$=CODE_LIST$+A$(4,3),NEW$="Y"; GOTO 8210
8220 P1=(P+2)/3
8225 SUMMARY[P1]=SUMMARY[P1]+A[2]
8230 IF NEW$="Y" THEN GOSUB 8250; NEW$="N"
8245 RETURN 
8250 REM "New bank code, setup string part
8260 DIM BR_STRING$(127)
8265 BR_STRING$(106,1)="N",BR_STRING$(79,1)="N"; IF T1$="MC" THEN BR_STRING$(106,1)="Y",BR_STRING$(100,6)=A$(30,6)
8270 IF T1$="CD" THEN BR_STRING$(100,6)=P9$
8275 BR_STRING$(1,3)=A$(4,3),BR_STRING$(4,1)="1",BR_STRING$(49,6)=A$(24,6),BR_STRING$(121,1)=A$(17,1)
8280 BR_STRING$(14,35)="Summary record, A/C#"+V0$(22,6); IF T1$="MC" THEN BR_STRING$(5,9)="BFREV    " ELSE BR_STRING$(5,9)=C0$(54,9)
8285 SUMMARY$[P1]=BR_STRING$
8295 RETURN 
8300 REM "Write out summary records using arrays, WO131772
8310 FOR X=1 TO 10
8315 IF SUMMARY$[X]="" THEN EXITTO 8395
8330 DIM L$(127),L[2]
8335 L$=SUMMARY$[X],L[0]=SUMMARY[X]
8340 WRITE (Z[12],KEY=L$(1,13)+L$(119,2),DOM=8341)IOL=0422; GOTO 8345
8342 L$(119,2)=STR(NUM(L$(119,2))+1:"00"); IF L$(119,2)>"00" THEN GOTO 8340 ELSE ESCAPE ; REM "More than 99 transactions with this check number
8345 NEXT X
8395 RETURN 
8400 ! WO166784, if bank code parm says so, then create text file of check info, if file exists then open and lock to append records, if doesn't exist, create it then open and lock.  Hard coded path and file name at this time.  File name will be YYYYMMDD.
8402 IF STP(PFMT$,2)="H" THEN TEXT_FILE$=DTE(0:"%Y%Mz%Dz")+"-"+DTE(0:"%Hz%Mz%sz")+"a.csv"; GOTO 8408 ! WO 307476
8405 IF STP(PFMT$,2)<>"" THEN IF POS(PFMT$="DH")<>0 THEN TEXT_FILE$=PFMT$+%C$+"."+TEXT_FILE$ ELSE TEXT_FILE$=PFMT$+TEXT_FILE$ ! WO 267103 WO 304045 SSP 307476
8408 ODIR$="/usr/lib/pvx/"; IF PFMT$="M" THEN ODIR$=ODIR$+"payee_positive_pay/" ELSE ODIR$=ODIR$+"positive/" ! wo 283447, 284621
8410 TEXT_CHAN=HFN; OPEN LOCK (TEXT_CHAN,ERR=*NEXT)ODIR$+TEXT_FILE$; GOTO *RETURN ! wp 283447
8420 IF ERR=12 THEN SERIAL ODIR$+TEXT_FILE$; GOTO 8410 ELSE EXITTO 9000 ! wo 283447
8425 RETURN 
8430 ! 
8435 ! WO166784, Read thru file and write text records
8440 DIM A[3]; READ (Z[1],KEY="",DOM=*NEXT)
8445 READ (Z[1],END=*RETURN)IOL=0310
8450 IF PFMT$="S" THEN GOSUB PAY_FORMAT_S; GOTO 8490 ! WO 267103
8451 IF PFMT$="M" THEN GOSUB PAY_FORMAT_M; GOTO 8490 ! WO 283447
8452 IF PFMT$="D" THEN GOSUB PAY_FORMAT_D; GOTO 8490 ! WO 304045
8453 IF PFMT$="H" THEN GOSUB PAY_FORMAT_H; GOTO 8490 ! WO 307476
8454 DIM TEXT_REC$(80) ! WO 304045
8455 TEXT_REC$(1,1)="C",TEXT_REC$(2,3)="620",TEXT_REC$(5,2)="00",TEXT_REC$(7,10)="0005893925",TEXT_REC$(17,1)=" "
8460 IF POS(A$(17,1)="RV")>0 THEN TEXT_REC$(18,1)="V",TEXT_REC$(19,1)="D" ELSE TEXT_REC$(18,1)="R",TEXT_REC$(19,1)="A"
8465 TEXT_REC$(20,1)=" "
8470 TEXT_REC$(21,10)=DIM(4,"0")+A$(18,6),TEXT_REC$(31,10)=STP(STR(A[0]-A[1]:"00000000.00"),3,".")
8475 Q$=FND$(A$(24,6)),TEXT_REC$(41,6)=Q$(1,2)+Q$(4,2)+Q$(9,2)
8480 DIM AP4$(100); READ (Z[11],KEY=A$(7,10),DOM=*NEXT)AP4$; TEXT_REC$(47,20)=AP4$(11,20)
8485 TEXT_REC$(67,14)=DIM(14)
8487 IF POS(X3$(9,3)="590",3)<>0 THEN TEXT_REC$=TEXT_REC$+$0D$+$0A$ ! SSP204295, add carriage return, line feed
8490 PRINT (TEXT_CHAN)TEXT_REC$; GOTO 8445
8495 RETURN 
8499 ! 
8500 PC_FILE_CREATE:! WO251293, if bank code parm ="P", then call AP2PCP to create .csv file of check info.
8520 IF PCARD_CHL<>0 THEN CALL "AP2PCP;END_PCARD_FILE",X3$,X4$,PCARD_CHL,PCARD_FILE$,PCARD_OTH${ALL},LOG_CHL ! WO251293
8530 PCARD_FILE$=""; CLOSE (PCARD_CHL,ERR=*NEXT) ! WO251293
8535 PCARD_RFILE$=""; CLOSE (PCARD_RCHL,ERR=*NEXT) ! WO251293
8540 PCARD_CHL=0,PCARD_RCHL=0
8550 PCARD_UNIT$=MID(BANK_CDE_REC$,133,4)
8590 RETURN 
8600 REM "Create P-CARD file for check reversals WO251293
8620 IF PCARD_RCHL=0 THEN PCARD_RFILE$=""; CALL "AP2PCP;CREATE_REV_FILE",X3$,X4$,PCARD_RCHL,PCARD_RFILE$,BANK_CDE$,LOG_CHL ! WO251293
8690 RETURN 
8699 ! 
8700 REM "Create P-CARD file  WO 251293
8720 IF PCARD_CHL=0 THEN PCARD_FILE$=""; CALL "AP2PCP;CREATE_FILE",X3$,X4$,PCARD_CHL,PCARD_FILE$,BANK_CDE$,PCARD_OTH${ALL},LOG_CHL ! WO251293
8790 RETURN 
8799 ! 
8800 PAY_FORMAT_S:
8805 DIM TEXT_REC$(140)
8810 TEXT_REC$(1,2)="10",TEXT_REC$(3,13)="0"+BANK_AC_NUM$ ! WO 267103 SSP285678
8820 TEXT_REC$(16,10)=DIM(4,"0")+A$(18,6)
8825 Q$=FND$(A$(24,6)); TEXT_REC$(26,8)=Q$(7,4)+Q$(1,2)+Q$(4,2)
8830 TEXT_REC$(34,11)=STP(STR(A[0]-A[1]:"000000000.00"),3,".")
8840 TEXT_REC$(45,15)=DIM(15)
8845 IF T1$="MC" AND A[2]<0 THEN TEXT_REC$(60,1)="V" ! Check reversals
8850 ! IF POS(A$(17,1)="RV")>0 THEN TEXT_REC$(60,1)="V"
8860 DIM AP4$(100); READ (Z[11],KEY=A$(7,10),DOM=*NEXT)AP4$; TEXT_REC$(61,80)=AP4$(11,35)
8880 RETURN 
8899 ! 
8950 REM "Program flow logic
8960 DIM U0$(6); U0$(1)=FID(0); U0$=U0$+"PF"
8970 CLOSE (14); OPEN (14)"ZZPARM"; FIND (14,KEY=U0$,DOM=8990)U0$,U1$
8980 Q2=NUM(U1$(7,2)),Q2$=U1$(9,Q2),U1$=U1$(Q2+9)
8990 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOSUB 6600; GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9600 REM 
9610 IF Q2$<>"" THEN GOTO 9900 ELSE CALL "ZZPROM","4",X3$,A,"Check processing has not been completed.","","",0; GOTO 9900
9700 REM "PROG FLOW
9710 IF U1$="" THEN REMOVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9725 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9730 IF %GUI THEN CALL U1$(1,6) ELSE RUN U1$(1,6)
9900 REM "END PROGRAM
9905 CALL "ZZDAPP",X3$,"!DGL2XUA"
9906 IF Q2$<>"" THEN GOTO 9700
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 IF TEXT_CHAN<>0 THEN CLOSE (TEXT_CHAN) ! WO166784
9920 CLOSE (PCARD_CHL,ERR=*NEXT)
9925 CLOSE (PCARD_RCHL,ERR=*NEXT)
9950 IF %GUI THEN CALL "ZZDAPP",X3$,"AALL"; EXIT ELSE BEGIN ; CALL "ZZDAPP",X3$,"AALL"; RUN "ZMENU"
9999 END 
10000 CHECK_REV:! If check rev and current period remove BR0 record SSP#180098
10010 READ (Z(12),KEY=L$(1,13),DOM=*NEXT)
10020 DIM BR0[1]; BR0_KEY$=KEY(Z[12],END=7880); READ (Z[12],KEY=BR0_KEY$)BR0_REC$,BR0[0],BR0[1]
10030 IF MID(BR0_KEY$,1,13)=L$(1,13) AND BR0_REC$(100,6)=L$(100,6) AND ABS(BR0[0])=ABS(A[2]) THEN REMOVE (Z[12],KEY=BR0_KEY$); GOTO 7830
10090 GOTO 7880
10100 PAY_FORMAT_M:! WO 283447 
10110 DIM TEXT_REC$(147)
10120 BCD$=BANK_AC_NUM$,TEXT_REC$(1,15)=PAD(BCD$,15,0,"0") ! SSP285678
10125 TEXT_REC$(16,10)=PAD(A$(18,6),10,0,"0") ! check number
10130 TEXT_REC$(26,12)=STP(STR(A[0]-A[1]:"0000000000.00"),3,".")
10135 Q$=FND$(A$(24,6)); TEXT_REC$(38,8)=Q$(7,4)+Q$(1,2)+Q$(4,2)
10140 TEXT_REC$(46,1)=DIM(1); IF T1$="MC" AND A[2]<0 THEN TEXT_REC$(46,1)="V" ! Check reversals
10145 TEXT_REC$(47,1)=DIM(1)
10150 DIM AP4$(426); READ (Z[11],KEY=A$(7,10),DOM=*NEXT)AP4$(1); TEXT_REC$(48,100)=STP(AP4$(11,35),1)+DIM(1)+AP4$(46,30) ! WO285594, add vend addr1 to payee field
10190 RETURN 
10199 ! 
10200 PAY_FORMAT_D:! WO 304045
10210 TEXT_REC$=""
10220 DBCD$=STP(BANK_AC_NUM$,2)
10225 DCHK_NUM$=STP(A$(18,6),2) ! check number
10230 DAMT$=STP(STR(A[0]-A[1]:"000000000.00"),3,".")
10235 Q$=FND$(A$(24,6)); DDT$=Q$(1,2)+Q$(4,2)+Q$(7,4)
10240 DACTION$="IS"; IF T1$="MC" AND A[2]<0 THEN DACTION$="CN" ! Check reversals
10250 DIM AP4$(426); READ (Z[11],KEY=A$(7,10),DOM=*NEXT)AP4$(1); DPAYEE$=STP(AP4$(11,35),1),DPAYEE$=SUB(DPAYEE$,","," ")
10255 DELIM$=","
10260 TEXT_REC$=DBCD$+DELIM$+DCHK_NUM$+DELIM$+DAMT$+DELIM$+DDT$+DELIM$+DACTION$+DELIM$+DPAYEE$+DELIM$
10290 RETURN 
10299 ! 
10300 PAY_FORMAT_H:! WO 307476 Hygrade
10310 TEXT_REC$=""
10320 DBCD$=STP(BANK_AC_NUM$,2)
10325 DCHK_NUM$=STP(A$(18,6),2) ! check number
10330 DAMT$=STP(STR(A[0]-A[1]:"########0.00"),3)
10335 Q$=FND$(A$(24,6)); DDT$=Q$(1,2)+Q$(4,2)+Q$(7,4)
10340 DACTION$="I"; IF T1$="MC" AND A[2]<0 THEN DACTION$="C" ! Check reversals
10350 DIM AP4$(426); READ (Z[11],KEY=A$(7,10),DOM=*NEXT)AP4$(1); DPAYEE$=STP(AP4$(11,35),1),DPAYEE$=SUB(DPAYEE$,","," ")
10355 DELIM$=","
10360 TEXT_REC$=DACTION$+DELIM$+DBCD$+DELIM$+DCHK_NUM$+DELIM$+DDT$+DELIM$+DAMT$+DELIM$+QUO+DPAYEE$+QUO+DELIM$
10390 RETURN 
56000 REM "204295-AP check file output, using positive format (U option), need
56002 REM "251293-Bank Code option for P-Card file generation during CD update
56004 REM "267103-Option for different format for Positive Pay file of check  
56005 REM "283447-New Payment File Format for Payee Positive Pay. Transmit    
56006 REM "284621-Program exception while updating Cash Disbursements journal 
56008 REM "283447-Payee Positive Pay Record Indicator should be blank or V
56010 REM "285678-Payee Positive Pay file missing the bank account number for 
56012 REM "285594-Add the Vendor Address Line 1 to the Vendor Name for Payee  
56013 REM "304045-New Positive Pay format required by Safeguard/Deluxe.       
56014 REM "307476-New Positive Pay formats for KS customers                   
