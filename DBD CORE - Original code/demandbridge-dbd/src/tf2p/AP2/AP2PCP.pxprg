0010 REM "P-Card Update from Cash Disbursements Journal Update - <AP2PCP>
0011 REM "Called from AP2CUA
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 04/26/16 - 9.176111 - dmm - SSP# 284188
0037 REM "284188-P-Card file rejected, address field is 55 max but 00HANDY   
0040 REM "Copyright 2016 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0120 DIM Z0$(80,"-"),H$(200,"0"),BANK_CDE$(3)
0130 DAY_FORMAT READ OLD_FORMAT$; DAY_FORMAT "YYYYMMDD"; DATE$=DAY; DAY_FORMAT OLD_FORMAT$ ! WO166784
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 DEF FNV$(Z9$)=CHR(INT(NUM(Z9$)/10)-125)+STR(MOD(NUM(Z9$),10))
0200 REM "
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0280 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0295 DIM Z0$(80,X3$(235,1)); Z0$=ESC+"BG"+Z0$+ESC+"EG"
0300 REM 
0310 IOLIST A$,A[0],A[1],A[2],A[3]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6]
0340 IOLIST D$(1),D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15],D[16],D[17],D[18],D[19],D[20],D[21],D[22],D[23],D[24],D[25],D[26],D[27]
0361 IOLIST D0$
0370 IOLIST G$,G[0],G[1],G[2],G[3]
0380 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8]
0390 IOLIST I$,I0$,I[0]
0400 IOLIST D0$
0410 IOLIST K$
0420 IOLIST BANK_CDE_REC$,L[0],L[1],L[2]
0422 IOLIST L$,L[0],L[1],L[2]
0499 ! 
0500 INIT:
0540 DTT$=FN%NTD$(CDN,"YYYYMMDD")
0545 FDT$=DTE(JUL(0,0,0):"YYYYMMDD"),FDT$=CHR(NUM(FDT$(1,3))-125)+FDT$(4)
0550 M1$="-0000000.00",M2$="-00000.0000"
0600 DIR$="/usr/lib/pvx/pcard"+DLM
0610 ARCHIVE_DIR$=DIR$+"pcard_archive"+DLM
0620 REV_DIR$="/usr/lib/pvx/pcard/reversals"+DLM
0730 DIM A$(58),A[3]
0740 DIM B$(43),B[5]
0745 DIM BANK_CDE_REC$(150),L[3]
0750 RETURN 
0890 ! 
0900 WRAPUP:
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0920 SET_PARAM 'KR'=_SV_KR
0930 CMD_STR$="E"
0950 RETURN 
0999 ! 
1000 CREATE_FILE:! Initial creation of .csv file
1010 ENTER X3$,X4$,PCARD_CHL,P_FL$,BANK_CODE$,PC_OTH${ALL},LOG_CHANNEL ! 
1020 ! Routine will create new file if does not exist or will lock and append to
1025 GOSUB INIT
1035 DIM PC_OTH$[5]
1038 REM "Intialize logging
1040 LOG_OPTIONS$="A"; CALL "ZZ2LOG;OPEN_LOG",ERR=*NEXT,X3$,X4$,"AP2PCP"+"."+FID(0)+".log",LOG_OPTIONS$,LOG_CHANNEL
1050 B_CHL=HFN; OPEN (B_CHL,ERR=CREATE_FILE_END)"ZYB"+%C$
1060 EXTRACT (B_CHL,KEY=BANK_CODE$,DOM=CREATE_FILE_END)IOL=0420
1070 PC_UNIT$=BANK_CDE_REC$(133,4),PC_SEQ$=MID(BANK_CDE_REC$,145,3),PC_DTE$=MID(BANK_CDE_REC$,137,8)
1080 FCD$=DTE(0:"%Y%Mz%Dz"),FCT$=DTE(0:"%Hz%mz%sz")
1090 IF PC_DTE$<>FCD$ THEN PC_DTE$=FCD$,PC_SEQ$=""
1130 PC_SEQ$=STR(NUM(PC_SEQ$)+1:"000"),BANK_CDE_REC$(145,3)=PC_SEQ$
1140 BANK_CDE_REC$(137,8)=PC_DTE$
1150 WRITE (B_CHL,KEY=BANK_CODE$)IOL=0420
1160 FL1$=STP(BANK_CODE$,2),FL2$=FCD$,FL3$=DTE(0:"%Hz%mz%sz")
1170 FILE_NAME$=FL1$+"_"+FL2$+"_"+FL3$+"_"+PC_SEQ$
1180 P_FL$=DIR$+FILE_NAME$+".csv"
1200 PCARD_CHL=HFN; OPEN LOCK (PCARD_CHL,ERR=*NEXT)P_FL$; GOTO CREATE_FILE_END
1210 IF ERR=12 THEN SERIAL P_FL$; GOTO 1200 ELSE GOTO 1060
1250 CREATE_FILE_END:
1260 CLOSE (B_CHL,ERR=*NEXT)
1265 PC_OTH$[1]=PC_UNIT$,PC_OTH$[2]=PC_SEQ$
1270 IF PCARD_CHL<>0 THEN F_STATUS$="PCARD file: "+P_FL$+" Batch: "+X3$(174,4)+" created" ELSE F_STATUS$="PCARD File creation not successful Batch: "+X3$(174,4)
1280 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"PCARD START|"+F_STATUS$,%LOG_INFO ! 251293
1290 EXIT 
1299 ! 
1400 CREATE_REV_FILE:! Initial creation of reversal .csv file
1410 ENTER X3$,X4$,PCARD_CHL,P_FL$,BANK_CODE$,LOG_CHANNEL ! 
1440 LOG_OPTIONS$="A"; CALL "ZZ2LOG;OPEN_LOG",ERR=*NEXT,X3$,X4$,"AP2PCP_REV"+"."+FID(0)+".log",LOG_OPTIONS$,LOG_CHANNEL
1445 GOSUB INIT
1450 FCD$=DTE(0:"%Y%Mz%Dz"),FCT$=DTE(0:"%Hz%mz%sz")
1460 FL1$=STP(BANK_CODE$,2),FL2$=FCD$,FL3$=DTE(0:"%Hz%mz%sz")
1470 FILE_NAME$=FL1$+"_"+FL2$+"_"+FL3$+"_REV"
1480 P_FL$=REV_DIR$+FILE_NAME$+".csv"
1490 PCARD_CHL=HFN; OPEN LOCK (PCARD_CHL,ERR=*NEXT)P_FL$; GOTO CREATE_REV_FILE_END
1495 IF ERR=12 THEN SERIAL P_FL$; GOTO 1490
1500 CREATE_REV_FILE_END:
1510 IF PCARD_CHL<>0 THEN F_STATUS$="PCARD Check Reversal File: "+P_FL$+" Batch: "+X3$(174,4)+" created" ELSE F_STATUS$="PCARD Check Reversal File creation not successful Batch: "+X3$(174,4)
1520 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"PCARD REVERSAL START|"+F_STATUS$,%LOG_INFO ! 251293
1540 EXIT 
1599 ! 
2000 UPDATE_PCARD_FILE:
2005 ! This routine is called from AP2CUA (Cash Disbursement Update). The .csv file created is based on M&T Bank's File Format E.
2020 ENTER X3$,X4$,PCARD_CHL,P_FL$,PC_OTH${ALL},B$,B{ALL},PCV$,PC_INVD$,LOG_CHANNEL
2030 PC_UNIT$=PC_OTH$[1],PC_SEQ$=PC_OTH$[2]
2040 GOSUB CREATE_REC
2060 TOT_LINES=NUM(PC_OTH$[3]),TOT_LINES+=1,PC_OTH$[3]=STR(TOT_LINES)
2070 TOT_INV=NUM(PC_OTH$[4]),TOT_INV+=(B[0]-B[1]),PC_OTH$[4]=STR(TOT_INV:"#######0.00-") ! SSP 283004
2100 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"PCARD DETAIL| Vendor: "+F_VENDOR$+" Invoice: "+F_INV$+" created",%LOG_INFO ! 252868
2190 EXIT 
2199 ! 
2500 UPDATE_PCARD_REV_FILE:
2505 ! This routine is called from AP2CUA (Cash Disbursement Update). The .csv file created is based on M&T Bank's File Format E.
2510 ENTER X3$,X4$,PCARD_CHL,P_FL$,PCARD_UNIT$,B$,B{ALL},PCV$,PC_INVD$,LOG_CHANNEL
2520 PC_UNIT$=PCARD_UNIT$,PC_SEQ$="REV"
2540 GOSUB CREATE_REC
2550 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"PCARD REVERSAL DETAIL| Vendor: "+F_VENDOR$+" Invoice: "+F_INV$+" created",%LOG_INFO ! 252868
2990 EXIT 
2999 ! 
3000 CREATE_REC:
3005 REC$="",SEP$=","
3007 STRLIST$="*"+SEP+":"+SEP+"\"+SEP+QUO+SEP+","+SEP+"-"+SEP ! build list of special characters to strip from some fields
3010 PCDE$="PUR",CO_ID$=STR(NUM(PC_UNIT$):"0000000")
3020 F_CDATE$=DTE(0:"%Y%Mz%Dz")
3025 F_SEQ$=PC_SEQ$
3030 F_VD$=STP(MID(PCV$,1,10),2),F_VENDOR$=SUB(F_VD$," ","_"); INSTR$=F_VENDOR$; GOSUB STP_FIELD; F_VENDOR$=STP_FIELD$
3040 F_VNAME$=STP(MID(PCV$,11,35),2); INSTR$=F_VNAME$; GOSUB STP_FIELD; F_VNAME$=STP_FIELD$
3050 F_VADD$=STP(MID(PCV$,46,30),2)+" "+STP(MID(PCV$,76,30),2); IF LEN(F_VADD$)>55 THEN F_VADD$=PAD(F_VADD$,55) END_IF ; INSTR$=F_VADD$; GOSUB STP_FIELD; F_VADD$=STP_FIELD$ ! SSP284188, address field max 55 chars
3060 F_VCITY$=STP(MID(PCV$,106,16),2); INSTR$=F_VCITY$; GOSUB STP_FIELD; F_VCITY$=STP_FIELD$
3070 F_VST$=STP(MID(PCV$,122,2),2)
3080 F_ZIP$=STP(MID(PCV$,124,9),2); INSTR$=F_ZIP$; GOSUB STP_FIELD; F_ZIP$=STP_FIELD$
3090 F_CNTRY$="USA"
3100 F_MCC$=""
3110 F_CONTACT$="Accounts Payable Dept" ! STP(MID(PCV$,155,20),2)
3120 F_EMAIL$=""
3130 F_INV$=STP(MID(B$,18,10),2); INSTR$=F_INV$; GOSUB STP_FIELD; F_INV$=STP_FIELD$
3140 F_INV_DATE$=FN%FMT_TFDATE$(PC_INVD$,"YYYYMMDD")
3150 F_PO$=""
3160 F_PO_DATE$=""
3170 F_INV_AMT$=STR((B[0]-B[1]):"##############0.00"),F_INV_AMT$=STP(F_INV_AMT$,2) ! 12/17/12, take - out of mask
3180 IF B[0]<0 THEN F_TTYPE$="C" ELSE F_TTYPE$="D" ! Debit or Credit
3190 F_BUYER$=STR(NUM(PC_UNIT$):"00000000")
3200 F_EOR$="E"
3300 REC$="S"+SEP$+PCDE$+SEP$+CO_ID$+SEP$+F_CDATE$+SEP$+F_SEQ$+SEP$
3310 REC$+=F_VENDOR$+SEP$+F_VNAME$+SEP$+F_VADD$+SEP$+F_VCITY$+SEP$+F_VST$+SEP$+F_ZIP$+SEP$+F_CNTRY$+SEP$
3320 REC$+=F_MCC$+SEP$+F_CONTACT$+SEP$+F_EMAIL$+SEP$+F_INV$+SEP$+F_INV_DATE$+SEP$+F_PO$+SEP$+F_PO_DATE$+SEP$+F_INV_AMT$+SEP$+F_TTYPE$+SEP$+F_BUYER$+SEP$+F_EOR$+SEP$
3350 PRINT (PCARD_CHL)REC$
3490 RETURN 
3999 ! 
4000 END_PCARD_FILE:
4020 ENTER X3$,X4$,PCARD_CHL,P_FL$,PC_OTH${ALL},LOG_CHANNEL
4022 REC$="",SEP$=","
4025 PCDE$="PUR"
4030 PC_UNIT$=PC_OTH$[1],PC_SEQ$=PC_OTH$[2]
4035 CO_ID$=STR(NUM(PC_UNIT$):"0000000")
4040 F_TOT_INV$=STP(PC_OTH$[4],2),F_TOT_RECS$=PC_OTH$[3]
4050 F_AMT_IND$="D",F_EOR$="E"
4060 REC$="T"+SEP$+PCDE$+SEP$+CO_ID$+SEP$+F_TOT_INV$+SEP$+F_AMT_IND$+SEP$+F_TOT_RECS$+SEP$+F_EOR$+SEP$
4070 PRINT (PCARD_CHL)REC$
4078 REM "%ZZ2CMD_DEBUG=1
4080 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,"PCARD EOF |Total Records: "+F_TOT_RECS$+" Total Amount: "+F_TOT_INV$,%LOG_DEBUG ! 252868
4090 EXIT 
4099 ! 
4500 STP_FIELD:! strip special characters from some fields
4510 STP_FIELD$=FN%STP$(INSTR$,STRLIST$,3,SEP)
4540 RETURN 
4545 ! 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9900 REM "END PROGRAM
9902 EXIT 
9905 CALL "ZZDAPP",X3$,"!DGL2XUA"
9906 IF Q2$<>"" THEN GOTO 9700
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 IF TEXT_CHAN<>0 THEN CLOSE (TEXT_CHAN) ! WO166784
9950 IF %GUI THEN CALL "ZZDAPP",X3$,"AALL"; EXIT ELSE BEGIN ; CALL "ZZDAPP",X3$,"AALL"; RUN "ZMENU"
9999 END 
56000 REM "204295-AP check file output, using positive format (U option), need
56002 ! Need to strip some special characters from certain fields
56003 REM "283004-P-Card file error notification for MT Bank.                 
56004 REM "284188-P-Card file rejected, address field is 55 max but 00HANDY   
