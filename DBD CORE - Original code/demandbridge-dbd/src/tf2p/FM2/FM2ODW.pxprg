0010 REM "PO Acknowledgemt Maintenance (from DSSI) <FM2ODW>
0035 REM "5.7 - 04/07/11 - 9.823333 - jvv - SSP# 245709
0037 REM "245709-DSSI; When orders are partially invoiced, need to mark the  
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,C0,A$,A{ALL}
0100 SETERR 9000
0110 X0$="FM2ODW"
0170 FID_0$=FID(0); IF %IN_WEBEC$="Y" OR %IN_BOFILL=1 OR %IN_GUI$="Y" THEN FID_0$(1,1)="G"; REM SSP 187122, SSP 180159
0310 IOLIST FTX$,FTX[0],FTX[1],FTX[2],FTX[3]
0320 IOLIST FTY$,FTY[0],FTY[1],FTY[2],FTY[3],FTY[4],FTY[5],FTY[6],FTY[7],FTY[8]
0350 IOLIST E$,E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],E[8],E[9],E[10],E[11],E[12],E[13],E[14],E[15],E[16],E[17] ! FS2
0370 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13] ! FS1
0500 INIT:
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O FTX...  02O FTY...  03O FS1...  04O FS2...  05OSFTX...  06OSFTY...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0540 DTT$=FN%NTD$(CDN,"YYYYMMDD")
0545 FDT$=DTE(JUL(0,0,0):"YYYYMMDD"),FDT$=CHR(NUM(FDT$(1,3))-125)+FDT$(4)
0550 M1$="-0000000.00",M2$="-00000.0000"
0600 DIR$="/usr/lib/pvx/dssi_po_ack"+DLM
0610 ARCHIVE_DIR$=DIR$+"dssi_po_ack_archive"+DLM
0650 DIM FTX$(1061),FTX[6]
0660 DIM FTY$(285),FTY[8]
0665 DIM A$(125),A[13]
0670 DIM M6[1]
0950 RETURN 
0999 ! 
1000 CREATE_HEADER:! Create a new FTX Master PO record from data passed from EC3WSF
1010 ENTER X3$,X4$,PO_TYPE$,ORD_NUM$,PO_HEADER$,PO_OTHER${ALL}
1012 DIM PO_OTHER$[6]
1015 GOSUB INIT
1020 C_ACK$="A"
1030 NO_MASTER=0; GOSUB CREATE_MASTER_PO; IF NO_MASTER THEN GOTO WRAPUP
1040 FTX_KEY$=MKEY$
1045 FTX$(1,14)=FTX_KEY$,FTX$(15,923)=PO_HEADER$
1055 FTX$(939,1)="N",FTX$(940,1)="N" ! Set default invoicing flags to "N"
1060 FIND (Z[3],KEY=ORD_NUM$,DOM=1180)IOL=0370
1065 CUST_CODE$=A$(6,10)
1068 FL4$=PO_HEADER$(8,4),FL5$=PO_HEADER$(13,3) ! Set for text file name
1070 GOSUB CREATE_FTX_HEADER
1100 PO_OTHER$[1]=FTX_KEY$
1120 PO_OTHER$[2]=TMP_FL$
1125 PO_OTHER$[3]="0",PO_OTHER$[4]="0"
1130 PO_OTHER$[5]=FILE_NAME$
1180 GOSUB WRAPUP
1995 EXIT 
1999 ! 
3000 CREATE_DETAIL:! called from EC3WSF to create master FTY records and initial PO Ack.
3005 ENTER X3$,X4$,PO_TYPE$,ORD_NUM$,ORD_LINE$,PO_DETAIL$,PO_STAT$,PO_OTHER${ALL}
3008 IF PO_OTHER$[1]="" OR PO_OTHER$[2]="" THEN GOTO 3995
3010 GOSUB INIT
3012 C_ACK$=PO_TYPE$
3015 FTY_KEY$=PO_OTHER$[1]+ORD_LINE$
3020 TMP_FL$=PO_OTHER$[2]
3030 FTY$(15,3)=ORD_LINE$
3050 FTY$(18,12)=PO_DETAIL$(1,12)
3055 ITEM_ID$=PO_DETAIL$(13,30)
3060 ITEM_DESC$=PO_DETAIL$(43,80)
3065 EDI_UOM$=PO_DETAIL$(133,2)
3070 CATCH_UOM$=PO_DETAIL$(157,2)
3080 SPEC_INSTR$=PO_DETAIL$(159,30)
3200 ITEM_QTY=NUM(PO_DETAIL$(123,10))
3210 UNIT_PRICE=NUM(PO_DETAIL$(135,11))
3220 CATCH_QTY=NUM(PO_DETAIL$(146,11))
3230 LINE_STAT$=PO_STAT$
3240 FS2KEY$=ORD_NUM$+ORD_LINE$
3245 DIM E$(229),E[17]; FIND (Z[4],KEY=FS2KEY$,DOM=3300)IOL=0350
3250 QTY_IN_EACH=E[0]
3300 PO_TEMP=HFN; OPEN LOCK (PO_TEMP)TMP_FL$
3350 GOSUB WRITE_FTY_DETAIL
3400 GOSUB WRITE_TXT_DETAIL
3410 TOT_LINES=NUM(PO_OTHER$[3]),TOT_LINES+=1,PO_OTHER$[3]=STR(TOT_LINES)
3415 IF PO_STAT$="IR" OR PO_STAT$="ID" THEN GOTO 3500
3420 TOT_PRICE=NUM(PO_OTHER$[4]),TOT_PRICE+=(UNIT_PRICE*ITEM_QTY),PO_OTHER$[4]=STR(TOT_PRICE:"#######0.00")
3500 GOSUB WRAPUP
3995 EXIT 
3999 ! 
4000 CREATE_SUMMARY_AND_FINISH:
4005 ENTER X3$,X4$,PO_TYPE$,ORD_NUM$,PO_OTHER${ALL}
4006 IF PO_OTHER$[1]="" OR PO_OTHER$[2]="" THEN GOTO 4495
4010 GOSUB INIT
4020 FTX_KEY$=PO_OTHER$[1],TMP_FL$=PO_OTHER$[2]
4030 FILE_NAME$=PO_OTHER$[5]
4040 TOT_LINES=NUM(PO_OTHER$[3]),TOT_PRICE=NUM(PO_OTHER$[4])
4045 PO_TEMP=HFN; OPEN LOCK (PO_TEMP)TMP_FL$
4050 GOSUB WRITE_TXT_SUMMARY
4110 FIND (Z[1],KEY=FTX_KEY$,DOM=*RETURN)IOL=0310
4120 FTX[0]=NUM(PO_OTHER$[3])
4125 FTX[1]=NUM(PO_OTHER$[4])
4130 WRITE (Z[1],KEY=FTX_KEY$)IOL=0310
4140 GOSUB ARCHIVE_TXT_FILE
4300 GOSUB WRAPUP
4495 EXIT 
4499 ! 
5000 PO_ACK_UPDATE:
5002 ! This routine is called from FM2ODH when an order has been accessed and exitted from.
5010 ENTER X3$,X4$,PO_TYPE$,ORD_TYPE,ORD_NUM$
5015 ! PO_TYPE - "U"(Update) or "C"(Cancelled)
5016 ! ORD_TYPE - The C0(process type) from FM2ODH
5018 IF POS("OF2UAA"=FN%GET_STACK$)>0 THEN EXIT ! Call to  FM2ODH from OF2UAA to be ignored; !SSP 245262
5020 GOSUB INIT
5050 VALID_MASTER=1; GOSUB FIND_MASTER_PO ! Find valid "A" type Master Header
5060 IF NOT(VALID_MASTER) THEN GOTO WRAPUP ! Do not send PO ack and exit
5070 FTX_KEY$=NEW_KEY$
5072 TOT_LINES=0,TOT_PRICE=0,ITM_SUB=0
5075 C_ACK$=PO_TYPE$ ! Order has been viewed/modified OR Deleted
5080 IF C_ACK$="C" THEN GOSUB ORDER_DELETED; GOTO 5110 ! Order has been manually deleted" 
5100 FIND (Z[3],KEY=ORD_NUM$)IOL=0370
5105 CUST_CODE$=A$(6,10)
5110 GOSUB CREATE_FTX_HEADER ! (#6700)
5115 ! 
5150 FIND_FTY_RECORD:! Read through master FTY records and compare by line number to FS2 order lines.
5160 READ (Z[2],KEY=MKEY$+" ",DOM=*NEXT)
5170 NEXT_FTY: DKEY$=KEY(Z[2],END=PO_ACK_END); IF DKEY$(1,14)<>MKEY$(1,14) THEN GOTO PO_ACK_END
5180 READ (Z[2],KEY=DKEY$)IOL=0320
5185 TOT_LINES=TOT_LINES+1
5190 ITEM_ID$=FTY$(30,10),ITEM_DESC$=FTY$(60,80),EDI_UOM$=FTY$(140,2),LINE_STAT$=FTY$(174,2),ITEM_QTY=FTY[0],UNIT_PRICE=FTY[2],PRIOR_ITEM$=""
5200 DIM E$(229),E[17]
5235 IF FTY$(174,2)="IR" THEN GOTO 5275 ! Rejected line if "Message" created in EC3WSF
5240 IF C_ACK$="C" THEN GOTO LINE_DELETED ! Update Fty detail lines for po cancelled
5250 FS2_KEY$=ORD_NUM$+FTY$(15,3)
5260 FIND (Z[4],KEY=FS2_KEY$,DOM=LINE_DELETED)IOL=0350
5270 GOSUB VALIDATE_ORDER; IF ITM_SUB=1 THEN ITM_SUB=0,LINE_STAT$="IC"
5274 TOT_PRICE+=E[6]
5275 FTY_KEY$=NEW_KEY$+FTY$(15,3)
5280 GOSUB WRITE_FTY_DETAIL
5290 GOSUB WRITE_TXT_DETAIL
5300 GOTO NEXT_FTY
5330 ! 
5340 LINE_DELETED:
5345 IF MID(FTY$,216,1)="Y" OR MID(FTY$,217,1)="Y" THEN LINE_STAT$="IA"; GOTO 5370 ! SSP 245709
5350 LINE_STAT$="ID"
5370 GOTO 5275
5390 ! 
5400 PO_ACK_END:
5410 IF C_ACK$="C" THEN TOT_PRICE=0
5420 GOSUB WRITE_TXT_SUMMARY
5430 FIND (Z[1],KEY=FTX_KEY$)IOL=0310
5435 FTX[0]=TOT_LINES,FTX[1]=TOT_PRICE; WRITE (Z[1],KEY=FTX_KEY$)IOL=0310
5450 GOSUB ARCHIVE_TXT_FILE
5460 GOSUB WRAPUP
5490 EXIT 
5499 ! 
5500 PO_ACK_INVOICE:! Called from AR2DUG to check if final invoice or not
5510 ENTER X3$,X4$,ORD_NUM$,INV_TYPE$ ! INV_TYPE="F" if final invoice or "P"
5520 GOSUB INIT
5530 VALID_MASTER=1,ACK_TYPE$="I"; GOSUB FIND_MASTER_PO; ACK_TYPE$="" ! Find valid "A" type Master Header
5540 IF NOT(VALID_MASTER) THEN GOTO WRAPUP ! Do not send PO ack and exit
5550 IF INV_TYPE$="F" THEN FTX$(938,1)="I",FTX$(940,1)="Y" ELSE FTX$(939,1)="Y",FTX$(940,1)="N" ! Set header status to "I" if order fully invoiced
5560 WRITE (Z[1],KEY=MKEY$)IOL=0310
5580 GOSUB WRAPUP
5590 EXIT 
5599 ! 
5600 ORDER_DELETED:! Set master FTX header to status "C"
5610 FTX$(938,1)="C"
5620 CUST_CODE$=FTX$(941,10)
5630 WRITE (Z[1],KEY=MKEY$)IOL=0310
5650 RETURN 
5699 ! 
6000 WRITE_TXT_HEADER:
6010 DIM TXT_HDR$(97)
6020 TXT_HDR$(1,15)="DPA010H"+PAD(FTX$(22,5),5)+PAD(FTX$(27,3),3)
6030 TXT_HDR$(16,20)=PAD(FTX_KEY$,20),TXT_HDR$(36,8)=DTT$,TXT_HDR$(44,15)=PAD(FTX$(30,15),15),TXT_HDR$(59,8)=FTX$(45,8)
6040 TXT_HDR$(67,1)=C_ACK$
6050 TXT_HDR$(68,30)="SYSTEM"
6080 PRINT (PO_TEMP)TXT_HDR$
6095 RETURN 
6099 ! 
6100 WRITE_TXT_DETAIL:
6110 DIM TXT_DTL$(514)
6120 TXT_DTL$(1,12)="DPA010D"+PAD(FTY$(25,5),5)
6160 TXT_DTL$(13,30)=ITEM_ID$
6165 TXT_DTL$(43,80)=ITEM_DESC$
6170 TXT_DTL$(123,10)=STR(ITEM_QTY:"0000000000")
6175 TXT_DTL$(133,2)=EDI_UOM$
6180 TXT_DTL$(135,11)=STR(UNIT_PRICE:"000000.0000")
6220 TXT_DTL$(274,2)=LINE_STAT$
6235 TXT_DTL$(284,30)=PRIOR_ITEM$
6250 PRINT (PO_TEMP)TXT_DTL$
6290 RETURN 
6299 ! 
6500 WRITE_TXT_SUMMARY:
6510 DIM TXT_SUMM$(25)
6520 TXT_SUMM$(1,7)="DPA010S"
6530 TXT_SUMM$(8,7)=STR(TOT_LINES:"0000000")
6540 TXT_SUMM$(15,11)=STR(TOT_PRICE:"000000.0000")
6550 PRINT (PO_TEMP)TXT_SUMM$
6595 RETURN 
6599 ! 
6700 CREATE_FTX_HEADER:
6710 FL_NOT_CREATED=0; GOSUB CREATE_TXT_FILE; IF FL_NOT_CREATED=1 THEN EXITTO 9900
6720 GOSUB WRITE_FTX_HEADER
6740 GOSUB WRITE_TXT_HEADER
6795 RETURN 
6799 ! 
7000 WRITE_FTX_HEADER:
7010 FTX$(1,14)=FTX_KEY$
7020 FTX$(938,1)=C_ACK$ ! HDR_STATUS
7030 FTX$(941,10)=CUST_CODE$
7060 FTX$(951,6)=FDT$,FTX$(957,4)=DTE(0:"%Hz%mz")
7150 WRITE (Z[5],KEY=FTX_KEY$)IOL=0310
7295 RETURN 
7299 ! 
7300 WRITE_FTY_DETAIL:
7310 FTY$(1,17)=FTY_KEY$
7320 FTY$(30,30)=ITEM_ID$
7325 FTY$(60,80)=ITEM_DESC$
7335 FTY$(140,2)=EDI_UOM$
7355 FTY$(174,2)=LINE_STAT$
7360 FTY$(176,6)=FDT$,FTY$(182,4)=DTE(0:"%Hz%mz")
7370 FTY[0]=ITEM_QTY
7375 FTY[1]=QTY_IN_EACH
7380 FTY[2]=UNIT_PRICE
7450 WRITE (Z[6],KEY=FTY_KEY$)IOL=0320
7495 RETURN 
7499 ! 
7500 CREATE_TXT_FILE:
7510 FL1$="DPA10_",FL2$=DTE(0:"%Y%Mz%Dz"),FL3$=DTE(0:"%Hz%mz%sz")
7520 FL6$=STP(FTX$(30,15),2)
7525 FILE_NAME$=FL1$+FL2$+"_"+FL3$+"_"+FL4$+"_"+FL5$+"_"+FL6$+".txt"
7530 TMP_FL$=DIR$+FILE_NAME$+".tmp"
7535 ERASE TMP_FL$,ERR=*NEXT
7540 SERIAL TMP_FL$,ERR=7560
7550 PO_TEMP=HFN; OPEN LOCK (PO_TEMP)TMP_FL$; GOTO 7570
7560 IF ERR=12 THEN GOTO 7510 ELSE FL_NOT_CREATED=1; GOTO *RETURN
7595 RETURN 
7599 ! 
7600 ARCHIVE_TXT_FILE:
7605 SND_FNAME$=FILE_NAME$
7610 SEND_FL$=DIR$+SND_FNAME$
7630 RENAME TMP_FL$ TO SEND_FL$,ERR=*NEXT; GOTO *RETURN
7640 IF ERR=12 THEN WAIT 1; SND_FNAME$(16,6)=DTE(0:"%Hz%mz%sz"); GOTO 7610 ! SSP 243097
7695 RETURN 
7699 ! 
8000 CREATE_MASTER_PO:
8010 TRANS_NUM=0,SEQ_NUM=1 ! Default Master PO key
8015 TRANS_NUM$=STR(TRANS_NUM:"000"),SEQ_NUM$=STR(SEQ_NUM:"000")
8020 MKEY$=ORD_NUM$+TRANS_NUM$+SEQ_NUM$
8030 FIND (Z[1],KEY=MKEY$,DOM=*RETURN)*
8035 TRANS_NUM+=1; IF TRANS_NUM>999 THEN NO_MASTER=1; GOTO *RETURN ELSE GOTO 8015
8050 RETURN 
8099 ! 
8100 VALIDATE_ORDER:
8110 ITM_SUB=0; IF ITEM_ID$<>E$(19,10) THEN PRIOR_ITEM$=ITEM_ID$,ITEM_ID$=E$(19,10),ITEM_DESC$=E$(50,40),LINE_STAT$="IC",FTY$(30,30)=ITEM_ID$,FTY$(60,80)=ITEM_DESC$,FTY$(186,30)=PRIOR_ITEM$; WRITE (Z[2],KEY=DKEY$)IOL=0320; ITM_SUB=1 ! ITEM CODE_CHANGE
8115 IF EDI_UOM$<>E$(124,2) THEN EDI_UOM$=E$(124,2),LINE_STAT$="IC" ! UOM CHANGE
8128 FS2_QTY=FN%QTY_IN_UM(E[0],EDI_UOM$,E[5])
8130 IF FS2_QTY<>ITEM_QTY THEN ITEM_QTY=FS2_QTY; LINE_STAT$="IC"
8140 IF UNIT_PRICE<>E[4] THEN UNIT_PRICE=E[4],LINE_STAT$="IC"
8145 QTY_IN_EACH=E[0]
8150 IF E[8]<>0 THEN LINE_STAT$="IB"
8195 RETURN 
8199 ! 
8200 FIND_MASTER_PO:! Check FTX for master header rec and create new key based on sequence number
8205 ! A valid master record has a status of "A" and has neither been deleted nor fully invoiced.
8210 M_TRANS=0,M_SEQ=1
8215 NEXT_FTX:
8220 M_TRANS$=STR(M_TRANS:"000"),M_SEQ$=STR(M_SEQ:"000")
8225 M_KEY$=ORD_NUM$+M_TRANS$+M_SEQ$; FIND (Z[1],KEY=M_KEY$,DOM=NEXT_HDR_TRANS)IOL=0310; GOTO 8240
8228 NEXT_HDR_TRANS:
8230 M_TRANS+=1; IF M_TRANS>99 THEN VALID_MASTER=0; GOTO *RETURN ELSE GOTO NEXT_FTX
8240 IF FTX$(938,1)="A" THEN GOTO *NEXT ELSE GOTO NEXT_HDR_TRANS ! Check for Valid A type (Status=C (cancelled) or I(invoiced) will be ignore
8245 MKEY$=M_KEY$,VALID_MASTER=1
8246 FL4$=FTX$(22,4),FL5$=FTX$(27,3) ! Set for text file name
8248 IF ACK_TYPE$="I" THEN GOTO *RETURN
8250 NEXT_HDR_SEQ:
8260 M_SEQ+=1,M_SEQ$=STR(M_SEQ:"000")
8270 NEW_KEY$=ORD_NUM$+M_TRANS$+M_SEQ$
8280 FIND (Z[1],KEY=NEW_KEY$,DOM=8300)*; GOTO NEXT_HDR_SEQ
8300 RETURN 
8399 ! 
8400 PO_ACK_INV_LINE:
8405 ! This routine is called  from AR2DUG when a line is invoiced and fs2 then deleted. The master FTY record for the order line will have the indicators set if a full or partial line invoice  !!! at TIME DELETE FROM FM2ODZ IGNORED
8410 ENTER X3$,DKEY$,DTYPE$
8420 ORD_NUM$=DKEY$(1,8),ORD_LINE$=DKEY$(9,3)
8425 GOSUB INIT
8430 VALID_MASTER=1; GOSUB FIND_MASTER_PO ! Find valid "A" type Master Header
8435 IF NOT(VALID_MASTER) THEN GOTO WRAPUP ! Do not Update any files
8440 FIND (Z[2],KEY=MKEY$+ORD_LINE$,DOM=8490)IOL=0320
8450 IF DTYPE$="I" THEN FTY$(216,1)="Y" ELSE IF DTYPE$="P" THEN FTY$(217,1)="Y" ! LINE INVOICE  FLAGS
8460 WRITE (Z[2],KEY=MKEY$+ORD_LINE$)IOL=0320
8490 GOSUB WRAPUP
8499 EXIT 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9599 ! 
9900 REM "END PROGRAM
9905 WRAPUP:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 CLOSE (PO_TEMP,ERR=*NEXT)
9930 SETERR 9940; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM "233493-Retrieve/process DSSI PO files, create/send DSSI PO Acks.   
56002 REM "243097-See 242269;Testing DSSI orders/PO acknowledgements.  Rec'd  
56004 REM "245709-DSSI; When orders are partially invoiced, need to mark the  
