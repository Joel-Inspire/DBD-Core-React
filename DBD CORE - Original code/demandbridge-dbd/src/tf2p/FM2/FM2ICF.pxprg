0010 REM "Retrieval of lotted inventory information <FM2ICF>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 02/11/10 - 17.608611 - crg - SSP# 236350
0037 REM "236350-Issue with Show highest lot sell price parameter            
0040 REM "Copyright 2010 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "EC_PARM$ and EC${ALL} = Standard EC program call interface parameters, null if OPTIONS$(1,1)<>""W"
0052 REM "ITEM_KEY$ = (1,10)=customer  (11,10)=item
0053 REM "WHSE_LIST$ = string of warehouses to evaluate
0054 REM "UM$ and QTY_PER_UM = Unit of measure and qty per UM, can be null if called from Webec
0055 REM "                     Defaults to EA/1 if not set and this program is not called from Webec
0060 REM "OPTIONS$(1,1) = W - If called from Webec and Blank otherwise
0089 ! 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},ITEM_KEY$,WHSE_LIST$,UM$,QTY_PER_UM,PRICE,FOUND,OPTIONS$
0092 REM "PRINT "FM2ICF - ITEM: ",ITEM_KEY$,"WHSE_LIST: ",WHSE_LIST$,"UM: ",UM$," ",QTY_PER_UM; INPUT *
0100 SETERR 9000
0110 X0$="FM2ICF",X1$="Retrieve lot inventory information"
0300 REM "IOLISTS
0310 IOLIST ICF$,ICF[0],ICF[1],ICF[2],ICF[3],ICF[4],ICF[5],ICF[6],ICF[7],ICF[8],ICF[9],ICF[10],ICF[11],ICF[12]
0320 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0360 IOLIST ECR$
0410 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O ICF...  02O FM1...  03O IC0...  04O ECR...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "
0610 DIM ICF[12]
0620 OPTIONS$=PAD(OPTIONS$,20)
0630 IF OPTIONS$(1,1)="W" THEN GOSUB 7100; GOSUB 7800 ELSE IF NUL(UM$) THEN UM$="EA  ",QTY_PER_UM=1
0695 ! PRINT "FM2ICF - ITEM: ",ITEM_KEY$,"WHSE_LIST: ",WHSE_LIST$,"UM: ",UM$," ",QTY_PER_UM ! INPUT *
0700 REM "
0705 WHSE_INDEX=1,FOUND=0
0799 ! 
0800 REM "
0810 IF BADITEM$="Y" THEN GOTO 5000
0899 ! 
1000 REM "Retrieve and process item lot records
1010 WHILE WHSE_INDEX<=LEN(WHSE_LIST$)/4
1012 ACTIVE_WHSE$=WHSE_LIST$((WHSE_INDEX-1)*4+1,4),ACTIVE_ITEM_KEY$=DIM(11)+ITEM_KEY$+ACTIVE_WHSE$
1014 READ (Z[1],KEY=ACTIVE_ITEM_KEY$,KNO=3,DOM=1015)
1020 ICF_KEY$=KEY(Z[1],END=1500); IF ICF_KEY$(1,LEN(ACTIVE_ITEM_KEY$))<>ACTIVE_ITEM_KEY$ THEN GOTO 1500
1022 READ (Z[1],KEY=ICF_KEY$)IOL=0310
1025 IF NOT(NUL(ICF$(110,11))) OR ICF[5]<=0 THEN GOTO 1020 ! If committed to an order or if lot does not have sell price, skip it
1100 REM "Get sell price relative to a reference Unit of Measure
1110 ICF_SELL_EXT=0,CNV_SELL_UNIT=0
1120 CALL "FM2EXT",Z[13],0,ICF$(129,4),ICF[6],10000,ICF[5],ICF_SELL_EXT,6
1130 CALL "FM2EXT",Z[13],1,PAD(UM$,4),QTY_PER_UM,10000,CNV_SELL_UNIT,ICF_SELL_EXT,6 ! 236350
1135 ! PRINT ICF$(129,4),STR(ICF[6]:"#####0"),STR(ICF[5]:"#########0.00 "),STR(ICF_SELL_EXT:"#########0.00"),UM$,STR(QTY_PER_UM:"#####0"),STR(CNV_SELL_UNIT:"#########0.00")
1210 IF CNV_SELL_UNIT>PRICE THEN FOUND=1,PRICE=CNV_SELL_UNIT
1300 GOTO 1020
1500 WHSE_INDEX=WHSE_INDEX+1
1600 WEND ! Continue looking until highest price found for uncommitted lot or no more warehouses
5000 REM "EOJ
5040 GOTO 9900
5049 ! 
7100 REM "Get item information - copied from EC3PC0
7101 BADITEM$="N",IC0FOUND$="N",STOCK$="N",FLAGGED_STOCK$="N"
7105 IF NUL(ITEM_KEY$(1,10)) THEN STOCK$="Y" ELSE STOCK$="N"
7110 GOSUB SET_READONLY; DIM FM1$(550),FM1[31],IC0$(200),IC0[40]; IF STOCK$="Y" THEN GOTO 7112 ELSE FIND (Z[2],KEY=ITEM_KEY$,DOM=7111)IOL=0320; IF EC$[7](598,1)="Y" THEN FM1(29)=FM1(3) END_IF ; IF FM1$(105,1)="Y" AND EC_PARM$(556,1)="Y" THEN FLAGGED_STOCK$="Y"; GOTO 7112 ELSE GOTO 7112
7111 GOSUB CLEAR_READONLY; BADITEM$="Y"; GOTO 7140
7112 GOSUB CLEAR_READONLY; GOSUB SET_READONLY; FIND (Z[3],KEY=ITEM_KEY$,DOM=7113)IOL=0410; IC0FOUND$="Y"; GOTO 7115; REM "get IC0 record using custom item master key
7113 FIND (Z[3],KEY=DIM(10)+ITEM_KEY$(11,10),DOM=7115)IOL=0410; IC0FOUND$="Y"; REM "get IC0 record using stock setting
7115 GOSUB CLEAR_READONLY; IF STOCK$="Y" AND IC0FOUND$<>"Y" THEN GOTO 7111; REM "bad record since stock item but no IC0 record found
7120 GOSUB SET_READONLY; IF STOCK$="Y" THEN FIND (Z[2],KEY=EC$[2](51,10)+ITEM_KEY$(11,10),DOM=*NEXT)IOL=0320; IF EC$[7](598,1)="Y" THEN FM1[29]=FM1[3] ! If FM1 record setup for this customer, this stock item, read for FM1, may need later for alternate unit info
7121 GOSUB CLEAR_READONLY
7130 GOSUB SET_READONLY; DIM ECR$(1024); FIND (Z[4],KEY=ITEM_KEY$,DOM=7131)IOL=0360; REM "get form webec parms
7131 GOSUB CLEAR_READONLY; IF IC0FOUND$="N" AND ECR$(253,1)="I" THEN ECR$(253,1)="C"; REM "if pricing source set to inventory but no inventory record found then reset to custom item master
7140 RETURN 
7149 ! 
7800 REM "Get active UOM info - Copied from EC3PC0
7810 IF STOCK$<>"Y" THEN ITEM_TYPE$="C" ELSE ITEM_TYPE$="I"
7815 ON POS(ITEM_TYPE$="CI")-1 GOTO 7820,7840
7820 REM "C - items FM1
7830 IF STP(FM1$(238,4),3," ")="" OR FM1[25]=0 THEN UM$=STP(FM1$(100,4),1),PACK=FM1[4],SELLPACK=PACK; GOTO 7860 ELSE UM$=STP(FM1$(238,4),1),PACK=FM1[25],SELLPACK=PACK; GOTO 7860
7840 REM "I - items IC0
7845 IF STOCK$="Y" AND FM1$(105,1)="Y" THEN IF STP(FM1$(238,4),3," ")<>"" AND FM1[25]<>0 THEN UM$=STP(FM1$(238,4),1),PACK=FM1[25],SELLPACK=PACK; GOTO 7860 ! If stock item, but found an FM1 record for this customer and it's marked Stock? Y, then if alternate unit, then use it
7850 UM$=STP(IC0$(120,4),1),PACK=IC0[14],SELLPACK=PACK
7860 IF SELLPACK=0 THEN SELLPACK=1
7865 QTY_PER_UM=SELLPACK
7870 RETURN 
7899 ! 
8500 SET_READONLY:REM "Set the PRM READONLY to on
8510 SAVE_XI=PRM('XI'); SET_PARAM 'XI' ! Ignore exclusive locks, save previous setting
8525 SET_READONLY_END:RETURN 
8530 CLEAR_READONLY:REM "Restore previous setting
8535 SET_PARAM 'XI'=SAVE_XI ! restore previous setting
8545 CLEAR_READONLY_END:RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 ! IF WHO="crg" THEN ESCAPE 
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56001 REM "227556-Create new EC program to determine highest lot sell price,  
56002 REM "236350-Issue with Show highest lot sell price parameter            
