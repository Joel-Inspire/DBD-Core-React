0010 REM "Enhanced Backorder Fill Report <FM2BKA>
0015 REM "Prog Type: OD-2.7     
0035 REM "5.7 - 01/06/14 - 10.133888 - tma - SSP# 267005
0037 REM "267005-Idea Bank: Add prompt on Enhanced Backorder Fill to ignore  
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 9000
0095 PRECISION 14; T2=TIM; PRECISION 2
0100 SETERR 9000; SETESC 9300
0110 X0$="FM2BKA",X1$="Enhanced Backorder Fill Report"
0115 DIM PO3[4] ! [197451]-DIMs needed for PO3
0120 DIM A$(128),A[13],C$(170),C[21],D$(483),D[15],S[5],FS2[29],UM[2],FSH$(402) ! SSP207055
0140 Z0$="###,###.00-",Z1$="##,###,###.00-",Z2$="##,##0-",Z3$="##0-",Z4$="###.00-",Z5$=Z0$(1,LEN(Z0$)-1)+"#"
0210 T=1,T0=1,T1=3; REM " SSP# 143009
0215 W3=120
0225 W=999
0230 DIM T1$(W3,"-"),T2$(W3,"="),T3$(W3,"*"),Y5$(W3),Y6$(W3),W[4]
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,"",-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0260 CALL "ZZRPTP",X3$,X0$,X1$,V9$,V0,Q0$,Q1$,Q2$,Q3$,Q4$,Q5$,Q6$
0270 X1$="Enhanced Backorder Fill Report"
0300 REM "I/O lists
0305 REM "IOLIST FOR FS1 - FD Sales Order Header
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13]
0325 REM "IOLIST FOR FS2 - FD Sales Order Line Entry
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20],C[21]
0335 REM "IOLIST FOR AR1 - Customer Masterfile
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15]
0350 IOLIST S5$,S[0],S[1]
0360 IOLIST F$
0400 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24],FS2[25],FS2[26],FS2[27],FS2[28],FS2[29]
0405 IOLIST FS22$,FS22[0],FS22[1],FS22[2],FS22[3],FS22[4],FS22[5],FS22[6],FS22[7],FS22[8],FS22[9],FS22[10],FS22[11],FS22[12],FS22[13],FS22[14],FS22[15],FS22[16],FS22[17],FS22[18],FS22[19],FS22[20],FS22[21],FS22[22],FS22[23],FS22[24],FS22[25],FS22[26],FS22[27],FS22[28],FS22[29]
0412 IOLIST DFT$,DFT[0],DFT[1],DFT[2],DFT[3]
0420 IOLIST X3$,X4$,V1$,V3$,V2$,IOL=0425
0425 IOLIST V$,V[0],V[1]
0450 IOLIST IC1$,IC1[0],IC1[1],IC1[2],IC1[3],IC1[4],IC1[5],IC1[6],IC1[7],IC1[8],IC1[9],IC1[10],IC1[11],IC1[12],IC1[13],IC1[14],IC1[15],IC1[16],IC1[17],IC1[18],IC1[19],IC1[20]
0460 IOLIST UM$,UM[0],UM[1],UM[2]
0475 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0480 IOLIST FMPS$ ! [197451]-IOLIST for FMPS
0485 IOLIST PO3$,PO3[0],PO3[1],PO3[2],PO3[3] ! [197451]-IOLIST for PO3
0500 REM "Files
0505 DIM Z[NUM(X3$(60,3))]; GOSUB 7400
0510 Y$="01X FS1...  02O FS4...  03O FS2...  04O AR1...  05O AR3...  07O IC1...  09O FMP...  15O FSH...  16O FTO...  18O PO6...  19O IC0...  25OSFS2...  26O PO3...  27OSFS1..."
0520 GOSUB 9750
0575 READ (Z[13],KEY=X3$(9,3)+"I/C")P0$
0576 READ (Z[13],KEY=X3$(9,3)+"F/M")P4$; REM "SSP115965       
0580 SHIP_INTERFACE$=""; FIND (Z[13],KEY=X3$(9,3)+"S/H",DOM=*NEXT)SHIP_INTERFACE$ ! WO240288
0600 READ (Z[13],KEY=X3$(9,3)+"A/R",DOM=9900)P$
0660 DIM M6[1]; M6[1]=2; IF P0$(45,1)>"2" THEN M6[1]=NUM(P0$(45,1)); REM "SSP115965
0700 IF P0$(44,1)="Y" THEN Y$="12O ICF...  "
0710 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
0800 REM "Alternate Sort Info & total dim"
0810 DIM U[10,2],U0$(10),Y[5,1]
0820 CALL "ZZRSEQ",X3$,X0$,V1$,U,U0,U1,U{ALL},Y{ALL},T0,V0,U0$,T5$,U5$,S9$,X9; ON X9 GOTO 0821,9920
0825 IF V0=2 THEN U1=Z[2] ! WO239820
0840 IF V0=2 THEN W0$=W0$+" by Customer/Order" ELSE IF V0=1 THEN W0$=W0$+" by Order" ! WO239820!ssp#251715
0850 DIM T[T0,T1]; U5$(1,20)=Q4$
0890 REM "Open Printer
0895 CALL "ZZPRIN",X0$,X3$,Y0$,V3$,Z{ALL},W0$,W1$,W0,W9,W2,W3,W4; ON W4 GOTO 0896,9920
0950 REM " Position read"
0970 IF V2$="" THEN GOTO 0990 ELSE DIM V4$(U); U9=1; FOR X=1 TO U0; V4$(U[X,0],U[X,1])=V2$(U9,U[X,1]); U9=U9+2*U[X,1]; NEXT X
0985 V4$(U,1)=CHR(ASC(V4$(U,1))-1)
0990 READ (U1,KEY=V4$,DOM=0991)
1000 REM "Read next record and check range
1005 U$=KEY(U1,END=5000); IF V2$="" THEN GOTO 1100
1010 FOR X=1 TO U0
1015 U2=U[X,0],U3=U[X,0]*2-1,U4=U[X,1]
1020 IF U$(U2,U4)<V2$(U3,U4) THEN READ (U1,ERR=8800); EXITTO 1000
1030 IF U$(U2,U4)>V2$(U3+U4,U4) THEN IF X=1 THEN EXITTO 5000 ELSE READ (U1,ERR=8800); EXITTO 1000 ! WO239820
1040 NEXT X
1100 REM "Get record"
1110 U9$=U$; IF V0<2 THEN GOTO 1150 ELSE U$="",X=0
1120 IF V0=2 THEN U$=U9$(11,8) ! WO239820
1130 READ (U1)
1150 READ (Z[1],KEY=U$,ERR=1151,DOM=1000)IOL=0310; GOTO 1152
1151 IF ERR<>0 THEN READ (Z[1],KEY=U$)IOL=0310 ELSE GOSUB SET_READONLY; READ (Z[1],KEY=U$)IOL=0310; GOSUB CLEAR_READONLY
1197 GOSUB 8700; IF NOT_BO$="Y" THEN GOTO 1000; REM "Only process the ones with backorders
1200 REM "Reporting criteria
1340 DIM D$(LEN(D$)); FIND (Z[4],DOM=1341,KEY=A$(6,10))IOL=0340
1345 IF D$(361,1)="Y" AND V$(72,1)<>"Y" THEN GOTO 1000 ! SSP#227639
1350 IF FSH$(1,2)<>A$(118,2) THEN DIM FSH$(402); READ (Z[15],KEY=A$(118,2),DOM=*NEXT)FSH$ ! SSP207055
1400 REM "Subtotals"
1410 IF U2$="" THEN GOTO 1445 ELSE FOR T=1 TO U0; IF U9$(U[T,0],U[T,1])<>U2$(U[T,0],U[T,1]) THEN EXITTO 1420 ELSE NEXT T; GOTO 1480
1425 GOSUB 3100
1430 ! IF V0=2 AND T+1=1 THEN GOTO 1435 ELSE GOTO 1450
1435 ! IF V0=2 THEN GOSUB 6200
1490 T=0,U2$=U9$
1500 ! IF V0=2 AND W+7>W0 THEN GOSUB 6200; GOTO 1511
1510 IF W+7>W0 THEN GOSUB 6000
1515 CALL "ZZDISP","AX",A$(118,8),"O/P",X3$,X$,"",0,0,X4$; Y5$(1)=X$
1520 Y5$(12)=FND$(A$(16,6))
1525 CALL "ZZDISP","AX",A$(6,10),"A/R",X3$,X$,"",0,0,X4$; Y5$(23)=X$
1530 Y5$(35)=D$(11,30)
1700 GOSUB 2800
1710 IF STATUS$<>"" THEN Y5$(76)=STATUS$; GOSUB 7300; STATUS$=""
1810 ! GOSUB 2000  WO239820 - don't see any reason to do this, we are done at this point, and have output Y5$, there isn't anything else to do with this order.  If this doesn't cause an issue during testing, I'm going to remove this line and 2000-2799 before releasing.
1850 STATUS$=""
1900 REM "Accumulate Totals"
1990 T[T0,0]=T[T0,0]+1,T[T0,1]=T[T0,1]+A[6],T[T0,2]=T[T0,2]+A[7],T[T0,3]=T[T0,3]+T9; REM " SSP# 143009
1995 GOTO 1000
2000 REM "Print Keyed Detail
2005 T4=0
2010 READ (Z[3],KEY=A$(118,8),DOM=2011)
2020 W$=KEY(Z[3],END=2700)
2030 IF W$(1,8)<>A$(118,8) THEN GOTO 2700
2035 READ (Z[3],ERR=2036,END=2700)IOL=0330; GOTO 2037
2036 IF ERR<>0 THEN READ (Z[3],END=2700)IOL=0330 ELSE GOSUB SET_READONLY; READ (Z[3])IOL=0330; GOSUB CLEAR_READONLY
2037 IF C$(10,4)=DIM(4) OR C$(10,2)="DS" THEN GOTO 1000
2038 ! IF V$(107,1)="Y" THEN IF POS(C$(6,3)=BO_LINES$)<>0 THEN GOTO 2020
2040 REM "Read Secondary Information"
2050 ! H8$=C$; GOSUB 7750
2200 REM "Print Each Line
2201 GOTO 2020
2205 T4=T4+1
2207 ! IF V0=2 AND W+2>W0 THEN GOSUB 6200; GOTO 2211
2210 IF W+2>W0 THEN GOSUB 6000
2215 Y5$(2)=C$(6,3),Y5$(6)=C$(19,10),Y5$(17)=H9$
2220 C0=C[0]; IF C[18]<>0 THEN C4=C[18] ELSE C4=C[4]
2225 GOSUB 7600
2230 IF C$(9,1)=" " THEN Y5$(67)=" WH:"+C$(10,4) ELSE Y5$(67)=" PO: "+C$(9,1)
2235 IF C$(155,1)="M" THEN GOTO 2400
2240 IF C0<>0 THEN Y5$(76)=FNQ$(C0,Z1$)
2245 IF C4<>0 THEN Y5$(90)="@"+STR(C4:Z5$)
2250 Y5$(103)=FNS$(C$(124,4))+"/"+FNR$(STR(C[5]:Z2$)),Y5$(116)=STR(C[6]:Z1$)
2290 GOSUB 7300
2400 REM "Accumulate Line Totals"
2499 GOTO 2020
2500 REM "Print Line Header
2505 ! IF V0=2 AND W+4>W0 THEN GOSUB 6200; GOTO 2511
2510 IF W+4>W0 THEN GOSUB 6000
2520 GOSUB 7300
2530 Y5$(2)="Ln  Item",Y5$(17)="Description",Y5$(81)="Quantity",Y5$(96)="Price",Y5$(104)="Per",Y5$(120)="Extension"
2535 GOSUB 7300
2690 RETURN 
2700 REM "Line Totals"
2701 IF T4<2 THEN GOSUB 7300; GOTO 2790
2702 ! IF V0=2 AND W+2>W0 THEN GOSUB 6200; GOTO 2704
2703 IF W+2>W0 THEN GOSUB 6000
2780 GOSUB 7300
2795 RETURN 
2800 REM " CHECK FOR AVAILABLE INVENTORY
2810 READ (Z[3],KEY=A$(118,8),DOM=2811)
2815 K5$=KEY(Z[3],END=2999)
2820 IF K5$(1,8)<>A$(118,8) THEN GOTO 2999
2825 READ (Z[3],ERR=2830,END=2999)IOL=0330
2827 IF C$(10,4)=DIM(4) THEN GOTO 2815
2830 REM "IF ERR<>0 THEN READ (Z[3],END=2999)IOL=0330 ELSE GOSUB SET_READONLY; READ (Z[3])IOL=0330; GOSUB CLEAR_READONLY
2840 DIM IC1[20]; READ (Z[7],KEY=C$(161,10)+C$(19,10)+C$(10,4),DOM=2841)IOL=0450; GOTO 2843
2841 IC1_KEY$=KEY(Z[7],END=2999)
2842 READ (Z[7],KEY=IC1_KEY$)IOL=0450
2843 IF IC1$(1,20)<>C$(161,10)+C$(19,10) THEN GOTO 2815
2844 AVAIL=IC1[3]+IC1[4]-IC1[5]+IC1[6]-IC1[7]+IC1[11]
2845 IF AVAIL<C[0] THEN GOTO 2815
2850 DIM IC0[40]; READ (Z[19],KEY=IC1$(1,20),DOM=2851)IOL=0475
2851 IF C[7]>=C[10] THEN GOTO 2815
2853 READ (Z[16],KEY=A$(118,8),DOM=2854)
2854 FTO_KEY$=KEY(Z[16],ERR=2855); IF FTO_KEY$(1,8)<>A$(118,8) THEN GOTO 2855 ELSE STATUS$="In PO Receiving"; GOTO 2999
2857 IF POS(A$(63,1)="YS")<>0 THEN Y5$(76)="*In Invoicing*"; GOSUB 7300; STATUS$=""; GOTO 2999
2858 GOSUB 8300
2859 IF STATUS$<>"" THEN Y5$(76)=STATUS$; GOSUB 7300; STATUS$=""; GOTO 2999
2860 IF V$(73,1)<>"Y" THEN IF A$(128,1)="S" THEN Y5$(76)="Suspended"; GOSUB 7300; GOTO 2999 ! SSP#267005
2986 GOSUB 8350
2999 RETURN 
3000 REM "Subtotaling Routines"
3050 REM "Add to T$ for total title, T & T5 should be set
3060 IF T7$(1,1)=" " THEN RETURN 
3070 IF T7$(1,1)<>"S" THEN CALL "ZZDISP",T7$(1,1)+"X",T6$,T7$(2,3),X3$,T6$,"",0,0,X4$
3080 IF T$="" THEN T$=T6$ ELSE T$=T$+" "+T6$
3090 RETURN 
3100 REM "Subtotal Logic
3110 FOR T=U0 TO T STEP -1
3130 T$=FNS$(U5$(T*20+1,20)),T6$=U2$(U[T,0],U[T,1]),T7$=T5$(T*4+1,4)
3135 GOSUB 3050
3140 IF POS(U0$(T+1,1)="23")>0 THEN GOSUB 7000 ELSE GOSUB 7100
3150 IF POS(U0$(T+1,1)="13")>0 THEN GOSUB 6000
3180 NEXT T
3195 RETURN 
3280 RETURN 
3380 RETURN 
3480 RETURN 
4200 REM "Set unit cost into A(6) from total cost of lots C,SSP115965, copied from FS2DAB
4205 IF FS22$(10,1)="9" THEN GOTO 4245
4210 CALL "FM2EXT",Z[13],1,FS22$(124,4),FS22[5],Q0,U,C,M6[1]
4220 FS22[1]=U
4245 RETURN 
4250 REM "If price changed then ask to use new price, SSP115965, copied from FS2DAB
4253 DONT_MOD$="N"; IF FS22[4]>0 AND P4$(254,1)="Y" THEN DONT_MOD$="Y"; IF FSH$(338,1)="Y" THEN DONT_MOD$="N" ! WO156021, even if P4$(254,1)="Y", if new d ivision parameter is "Y" then allow sell price to update if different. SSP207055
4254 IF FS22[4]>0 THEN IF D$(483,1)="Y" THEN DONT_MOD$="Y" ELSE IF D$(483,1)="N" THEN DONT_MOD$="N" ! WO201896, if new customer parameter(retain b/o sell price) is "Y", DO NOT UPDATE sell price if different
4255 IF S1=0 THEN GOTO 4290
4257 IF FS22$(10,1)="9" AND P4$(259,1)="Y" THEN GOTO 4290; REM "ssp#91464
4260 IF FS22$(124,4)=S1$ AND FS22[5]=S2 THEN IF FS22$(10,1)="9" THEN GOTO 4290 ELSE IF DONT_MOD$<>"Y" THEN FS22[4]=S1; GOTO 4285
4265 FS22$(124,4)=S1$,FS22[5]=S2; IF A$(10,1)<>"9" AND DONT_MOD$<>"Y" THEN FS22[4]=S1,FS22[22]=FS22[4]; REM " SSP#207055                                 
4268 REM "IF EOM0>0 THEN LET A[0]=EOM0, EOM0=0; REM "SSP# 096315 CWJ 5/7/98
4270 CALL "FM2EXT",Z[13],0,FS22$(124,4),FS22[5],FS22[0],FS22[4],E,M6[1]; FS22[6]=E; REM "SSP#207055
4280 GOSUB 7800
4285 GOSUB 7850
4295 RETURN 
4300 REM 
4303 LOTS$="NO"
4305 DIM IC1[20]; READ (Z[7],KEY=FS22$(161,10)+FS22$(19,10)+FS22$(10,4),DOM=4306)IOL=0450; GOTO 4320
4310 IC1_KEY$=KEY(Z[7],END=4399)
4315 READ (Z[7],KEY=IC1_KEY$)IOL=0450
4320 IF IC1$(1,20)<>FS22$(161,10)+FS22$(19,10) THEN GOTO 4399
4325 AVAIL=IC1[3]+IC1[4]-IC1[5]+IC1[6]
4330 IF AVAIL<FS22[0] THEN LOTS$="NO" ELSE LOTS$="YES"
4399 RETURN 
5000 REM "End of Print
5010 IF W0=99999999999999 THEN GOTO 5030; REM " SSP# 143489
5020 IF W8=0 THEN GOTO 5290
5030 T0$="END"
5050 REM "T=0; GOSUB 3100
5200 REM "
5295 GOTO 9900
6000 REM "Page header
6040 CALL "ZZHEAD",X0$,X1$,X2$,X3$,W0$,W1$,W2$,W3$,W3,W,W9,W8,W0,W5,W2,W4$,W5$; ON W5 GOTO 6041,9900
6060 IF F0=0 THEN GOSUB 6100
6090 RETURN 
6100 REM "
6115 Y5$(1)="Order",Y5$(12)="Order",Y5$(23)="Customer",Y5$(35)="Customer",Y5$(76)="Order" ! SSP#251715
6120 GOSUB 7300
6125 Y5$(1)="Number",Y5$(12)="Date",Y5$(23)="Code",Y5$(35)="Name",Y5$(76)="Status" ! SSP#251715
6130 GOSUB 7300; GOSUB 7300
6195 IF FID(W9)=FID(0) THEN PRINT 'SF',
6199 RETURN 
7000 REM "Total logic
7001 ! IF V$(99,1)<>"Y" THEN IF V0=2 AND T=4 THEN GOTO 7100
7003 IF T>0 AND T[T,0]<2 THEN GOSUB 7300; GOTO 7100
7004 ! IF V0=2 AND W+3>W0 THEN GOSUB 6200; IF T=1 THEN W=999; GOTO 7006 ELSE IF T<>1 THEN GOTO 7006
7005 IF W+3>W0 THEN GOSUB 6000
7007 IF P$(13,1)<>"Y" AND (LEN(T$)>=12 AND T$(5,8)="Division") THEN GOTO 7100
7008 IF V0=2 AND T=3 THEN Y5$(76)=T1$(1,LEN(Z1$)),Y5$(91)=T1$(1,LEN(Z0$)),Y5$(103)=T1$(1,LEN(Z0$)),Y5$(116)=T1$(1,LEN(Z4$)); GOSUB 7300
7009 IF T$(1,6)="Report" AND V0=2 THEN GOSUB 6000
7010 Y5$(1)=T3$(1,T0+1-T)+" "
7015 IF T$<>"" THEN Y5$(T0+2-T)=T$+" "+Q2$+" ("+STR(T[T,0]:"0")+"):"
7016 ! IF V$(108,1)="Y" THEN IF V$(99,1)="Y" THEN IF T[T,3]<>0 THEN Y5$(36)="Unbilled Costs: "+STR(T[T,3]:Z1$); REM " SSP# 143009
7020 Y5$(76)=STR(T[T,1]:Z1$),Y5$(91)=STR(T[T,2]:Z0$),Y5$(103)=STR(T[T,1]-T[T,2]:Z0$)
7030 IF T[T,1]<>0 THEN Y5$(116)=STR((T[T,1]-T[T,2])*100/T[T,1]:Z4$)
7040 GOSUB 7300
7090 IF T0$="END" THEN IF T=0 THEN GOSUB 7200; GOTO 7190
7095 GOSUB 7300; GOSUB 7300
7100 REM "Accumulate sub totals
7110 IF T=0 THEN GOTO 7190
7120 FOR X=0 TO T1
7130 T[T-1,X]=T[T-1,X]+T[T,X],T[T,X]=0
7140 NEXT X
7190 RETURN 
7200 REM "Elapsed time routine"
7205 GOSUB 7300; Y5$(1)=Q1$+": "+STR(T[0,0]); GOSUB 7300
7210 PRECISION 14; T2=TIM-T2
7220 T4$=STR(INT(T2):"##0")
7230 T3=INT(FPT(T2)*3600),T4=MOD(T3,60),T3=INT(T3/60)
7240 T3=T3/60
7250 T4$=T4$+":"+STR(T3:"00")+":"+STR(T4:"00")
7260 Y5$(1)=Q3$+": "+T4$; GOSUB 7300
7280 PRECISION 2
7290 RETURN 
7300 REM "Output line Y5$ to output device
7301 IF Y5$(76,1)=DIM(1) THEN RETURN 
7310 W=W+1
7330 IF Y5$=Y6$ THEN PRINT (W9)"" ELSE PRINT (W9)Y5$; DIM Y5$(W3)
7395 RETURN 
7400 REM "Read report selection parameters"
7410 Z$="12O ZZP     13O ZZPARM  "
7420 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 7421,9900
7430 Y3$=X3$(1,6),Y4$=X3$(178,7)
7435 DIM V[1]
7450 READ (Z[12],KEY=X3$(1,8),DOM=7451)IOL=0420
7480 X3$(178,7)=Y4$,V0=NUM(V$(71,1)),W3$=V$(19,POS("   "=V$(19,40)+"   ")-1)
7485 FOR U1=1 TO LEN(V1$)
7487 IF V1$(U1,1)=" " THEN V1$(U1,1)="."
7488 NEXT U1
7490 RETURN 
7500 REM "CUSTOM PROGRAMMING ROUTINES
7525 REM "Modified stmts:
7550 REM "Added stmts:
7575 REM "Deleted stmts:
7600 REM "Convert quantity
7605 DIM S5$(21),S[5]
7610 FIND (Z[13],KEY="U/M"+C$(124,4),DOM=7611)IOL=0350
7620 IF S5$(20,1)<>"Y" THEN S[2]=C[5] ELSE S[2]=S[1]
7630 IF S[2]=0 THEN S[2]=1
7640 C0=C0/S[2]
7690 RETURN 
7750 REM "Build desc from H8$
7760 H9$=FNS$(H8$(32,8)); IF H9$<>"" THEN H9$=H9$+QUO; IF POS(" "<>H8$(40,8))<>0 THEN H9$=H9$+"x"
7770 H9$=H9$+FNS$(H8$(40,8)); IF H9$<>"" THEN IF POS(" "<>H8$(40,8))<>0 THEN H9$=H9$+QUO+" " ELSE H9$=H9$+" "
7775 IF NUM(H8$(48,2))<>0 THEN H9$=H9$+H8$(48,2)+" Ply "
7780 H9$=H9$+FNS$(H8$(50,40)); H8$=""
7790 RETURN 
7800 REM "u/m stuff, SSP115965, copied from FS2DAB
7802 D9=1,D8=1; FIND (Z[13],KEY="U/M"+FS22$(124,4),DOM=7845)IOL=0460
7805 IF UM$(21,1)="Y" THEN FS22[4]=0
7810 IF UM$(20,1)="Y" THEN IF UM[0]<>0 THEN FS22[5]=UM[0],D8=UM[0] ELSE FS22[5]=UM[1],D8=UM[1]
7813 REM "Set divisor
7815 IF UM$(20,1)="Y" OR UM$(21,1)="Y" THEN D9=1 ELSE D9=FS22[5]
7816 IF D9=0 THEN D9=1
7817 IF D8=0 THEN D8=1
7820 REM "IF A$(12,1)="S" AND H$(61,1)="Y" THEN GOTO 07840
7822 IF FS22[12]=0 THEN IF D9=1 THEN FS22[12]=C[19] ELSE FS22[12]=D9
7823 IF RETURN$="Y" THEN RETURN$="N"; RETURN 
7825 C=FS22[5],Q=FS22[0],U=FS22[4],E=FS22[6]
7830 SETERR 7831; IF A0<>C AND Q=0 THEN U0=U; CALL "FM2EXT",Z[13],1,FS22$(124,4),C,A0,U,U0,M6[1]
7832 FS22[4]=U,FS22[6]=E,U=FS22[1],E=FS22[3]
7834 SETERR 7835; IF A0<>C AND Q=0 THEN U0=U; CALL "FM2EXT",Z[13],1,FS22$(124,4),C,A0,U,U0,M6[1] ELSE IF E<>0 THEN CALL "FM2EXT",Z[13],1,FS22$(124,4),C,Q,U,E,M6[1]
7836 FS22[1]=U,FS22[3]=E
7838 SETERR 9000
7839 A0=C
7840 REM "GOSUB 06239
7845 RETURN 
7850 REM "Calculate extension, SSP115965, copied from FS2DAB
7855 IF FS22$(10,1)="9" THEN FS22[6]=0,FS22[3]=0; GOTO 7895 ! SSP207055
7860 FS22[6]=FS22[0]/D9*FS22[4]/D8,FS22[3]=FS22[0]/D9*FS22[1]/D8
7870 REM "GOSUB 06239
7895 RETURN 
7900 REM "Compute carton labels                                              
7903 FIND (Z[9],KEY="T"+FS2$(29,3),DOM=7904)CARTON$
7904 IF CARTON$(22,1)="N" THEN FS2[9]=0; GOTO 7841
7905 Q=FS2[0]; IF FS2[7]<>0 THEN Q=FS2[7]
7910 PRECISION 6
7920 IF FS2[12]>0 THEN FS2[9]=INT((Q+FS2[12]-1)/FS2[12]) ELSE FS2[12]=0
7930 IF FS2[9]<0 THEN FS2[9]=0
7940 PRECISION 2; IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=7941)
7945 RETURN 
8300 REM "We have found at least one order line, and this is lotted inventory ssber of the order lines that have committed lots of this item at this locati
8305 L9$=""
8306 READ (Z[3],KEY=A$(118,8),DOM=8307)
8307 K$=KEY(Z[3],END=8340)
8308 IF K$(1,8)<>A$(118,8) THEN GOTO 8340
8309 READ (Z[3],KEY=K$,ERR=8310,END=8340)IOL=0330
8310 REM "IF ERR<>0 THEN READ (Z[3],END=8340)IOL=0330 ELSE GOSUB SET_READONLY; READ (Z[3])IOL=0330; GOSUB CLEAR_READONLY
8311 IF C$(2,1)<>"Y" THEN GOTO 8307
8314 READ (Z[12],KEY=C$(161,10)+C$(19,10),DOM=8315)
8315 K9$=KEY(Z[12],END=8336)
8320 IF K9$(1,20)<>C$(161,10)+C$(19,10) THEN GOTO 8307
8325 READ (Z[12],KEY=K9$)L8$
8330 IF POS(K$(1,8)=L8$(110,8))<>0 THEN L9$=L9$+L8$(110,11); REM "If the order# lito an order line, add the order line to L9$. We are not looking for duplicabefore the add would increase the processing time here. We may pay more dur the other.
8335 GOTO 8315
8336 GOTO 8307
8340 IF L9$<>"" THEN STATUS$="*Lots Committed"
8345 RETURN 
8350 REM LOTS
8355 P=POS(" "=A$(232,5)); IF P=0 THEN ESCAPE ELSE A$(232+P-1,1)="D"; REM "Will check this in FM2ODZ and if B then won't remove PO6 records when starting
8360 WHSE_LIST$="" ! SSP220015, need to track whse codes for this order
8400 CALL "FM2ODH",X3$,-1,A$,A{ALL}; REM "LOTS
8401 READ (Z[25],KEY=A$(118,8),DOM=8402)
8402 FS2_KEY$=KEY(Z[25],END=8490)
8403 IF FS2_KEY$(1,8)<>A$(118,8) THEN GOTO 8493
8404 DIM FS22[29]; READ (Z[25],KEY=FS2_KEY$)IOL=0405
8405 IF FS22$(9,1)<>DIM(1) THEN GOTO 8402; REM "DON'T DO THIS IF THERE IS A PO SSP208467, this line was REM'd but caused huge problems because lines with a PO code were being processed and bucket 7, unbilled shipments, was being set and the line was appearing as if received.
8406 FOUND=0
8407 IF POS(FS22$(155,1)="MS")>0 THEN IF WHSE_LIST$="" OR FS22$(10,4)=DIM(4) OR POS(FS22$(10,4)=WHSE_LIST$,4)=0 THEN GOTO 8402 ! SSP220015, if message or special charge, see if we are already printing something for that whse
8409 IF FS22$(2,1)<>"Y" THEN Q0=0; GOSUB 4300; IF LOTS$="YES" THEN Q0=FS22[0] END_IF ; IF FS22$(2,1)<>"Y" THEN GOTO 8416; REM " NOT LOTTED!SSP#228218
8411 S1=0,Q0=FS22[0]; CALL "IC2LCA",X3$,X4$,P0$(52,1),0,FS22$(161,10)+FS22$(19,10)+FS22$(10,4)+FS22$(147,8)+FS22$(6,3),Q0,C,F,S1,S1$,S2,S3$,S3,S4
8412 FOUND=Q0
8413 IF Q0<=0 THEN LOTS$="NO"; GOTO 8402; REM "No lots selected
8416 IF Y5$<>DIM(120) AND Q0<>0 THEN STATUS$="*Released"; Y5$(76)=STATUS$; GOSUB 7300; STATUS$=""
8417 A$(242,1)="F"; WRITE (Z[27],KEY=A$(118,8))IOL=0310; REM SSP 211137
8420 EXTRACT (Z[3],KEY=A$(118,8)+FS22$(6,3))IOL=0405
8425 FS22[7]=FS22[7]+Q0,FS22[8]=FS22[0]-FS22[7]; IF FS22[8]<0 THEN FS22[8]=0; REM "Reduce BO/add to shipped
8426 IF P4$(261,1)="Y" AND F<>0 AND IC0$(112,1)="Y" THEN FS22[17]=F; REM "Automatically add lot frei ght
8427 RETURN$="Y"; GOSUB 7800; GOSUB 4200; GOSUB 7850; GOSUB 4250; REM "SSP11596 5, set sell price/cost from lot. SSP207055, line was REMd, lot info was never updating to the order line
8428 REM "GOSUB 7900; REM "recompute carton labels
8429 IF FS22$(10,1)="9" THEN FS22[6]=0,FS22[3]=0,FS22[4]=0
8450 WRITE (Z[3],KEY=A$(118,8)+FS22$(6,3))IOL=0405; GOSUB 10000
8452 IF POS(FS22$(155,1)="ICN")>0 AND FS22$(10,4)<>DIM(4) THEN IF POS(FS22$(10,4)=WHSE_LIST$,4)=0 THEN WHSE_LIST$+=FS22$(10,4) ! SSP220015, if inventory, customer inventory, or non-stock type line, add whse code to list if not there
8455 GOTO 8402
8490 P=POS(" "=A$(232,5)); IF P=0 THEN ESCAPE ELSE A$(232+P-1,1)="D"; REM "Will check this is FM2ODZ and if D is found then we won't set labels or packing list to print                                                           
8493 CALL "FM2ODH",X3$,1,A$,A{ALL}
8495 RETURN 
8500 SET_READONLY:REM "Set the PRM READONLY to on
8510 SET_PARAM 'XI'; REM "Turn Readonly logic on
8525 SET_READONLY_END:RETURN 
8530 CLEAR_READONLY:REM "Clear the PRM READONLY flag to off
8535 SET_PARAM 'XI'=0; REM "Turn off READONLY logic
8545 CLEAR_READONLY_END:RETURN 
8700 REM "Only print if backorder
8705 NOT_BO$="N",BO_LINES$="",PRICE=0,COST=0,STATUS$=""
8710 READ (Z[3],KEY=A$(118,8),DOM=8711)
8715 K$=KEY(Z[3],END=8741)
8720 IF K$(1,8)<>A$(118,8) THEN GOTO 8741
8725 READ (Z[3],ERR=8726,END=8741)IOL=0330; GOTO 8730
8726 IF ERR<>0 THEN READ (Z[3],END=8741)IOL=0330 ELSE GOSUB SET_READONLY; READ (Z[3])IOL=0330; GOSUB CLEAR_READONLY
8737 IF C[8]=0 THEN NOT_BO$="Y" ELSE NOT_BO$="N"
8738 IF NOT_BO$="N" THEN GOTO 8741 ELSE GOTO 8715
8745 RETURN 
8800 REM "err 0 on positioning read
8810 IF ERR<>0 THEN READ (Z[1]) ELSE GOSUB SET_READONLY; READ (Z[1]); GOSUB CLEAR_READONLY
8815 EXITTO 1000
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8940 DEF FNS$(Z$)=Z$(1,POS("   "=Z$+"   ")-1)
8950 DEF FNQ$(Z9,Z9$)=STR(Z9:Z9$(1,POS(".00"=STR(Z9:Z9$)+".00")-1))
8960 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 1000
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 IF Y5=68 THEN RETRY ELSE ON C9 GOTO 1140,2040
9750 REM "Files Routine
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
9770 ON Z0 GOTO 9771,9900
9790 RETURN 
9900 REM "End program
9910 CALL "ZZERPT",X3$,X4$,X0$,Y3$,Y4$,W9,W2,W5,W,W0,W8,T3,V3$
9920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 IF NOT(NUL(Y4$)) THEN RUN Y4$,ERR=9931
9940 IF %GUI THEN EXIT ELSE RUN "ZMENU"
9999 END 
10000 UPDATE_PO6:
10002 W9$=FS22$(10,1)
10010 IF POS(A$(47,1)="RW")>0 OR POS(X3$(9,3)="499568543537539541542",3)>0 OR MID(A$,246,4)="WEB " THEN IF FS22$(10,1)<>"8" OR POS(X3$(9,3)="470474",3)<>0 THEN W9$="0"; REM "SSP138569
10020 IF P4$(285,1)="Y" THEN W9$=FS22$(10,1) ! SSP205005, correct line to match 590's which was correct
10025 REM "IF X3$(9,3)="499" AND A$(1,1)="8" THEN W9$="0"; REM SSP1562
10030 WHSE$=FS22$(12,2)
10035 DIM DFT[4]
10040 READ (Z[9],KEY="D"+MID(A$,6,10),DOM=*NEXT)IOL=0412
10045 IF DFT[3]<>0 THEN WHSE$=STR(DFT[3]:"00")
10050 GOSUB CREATE_PO6_RECORDS ! [197451]-create the PO6 records
10085 REM *** Q$="L"+W9$+FS22$(11,1)+WHSE$+PICK_PRIORITY$+FS22$(147,8)+FS22$(6,3) ! [197451]-no longer needed.
10086 REM *** WRITE (Z[18],KEY=Q$)                                                ! [197451] no longer done here
10099 RETURN 
11000 CREATE_PO6_RECORDS:! [197451]-Added routine
11002 FMP_LFN=Z[9] ! set the FMP LFN
11004 PO3_LFN=Z[26] ! set the PO3 LFN
11006 PO6_LFN=Z[18] ! set the PO6 LFN
11010 ORDER_DIV$=FS22$(147,2) ! set the Order Division from FS2
11012 ORDER_NUM$=FS22$(149,6) ! set the Order Number from FS2
11014 ORDER_LINE_NUM$=FS22$(6,3) ! set the Order Line Number from FS2
11016 PO_CODE$=FS22$(9,1) ! set the PO code from FS2
11018 PRINT_FLAGS$=FS22$(156,5) ! set the print flag from FS2
11019 IF POS("P"=PRINT_FLAGS$)=0 THEN GOTO 11095; REM SSP 213947
11020 SPECIAL_SHIPPING_FLAG$=FS22$(18,1) ! set the special shipping flag from FS2
11022 WHSE_CODE_PKLIST$=FS22$(215,4) ! set the warehouse code packing list from FS2
11030 GOSUB PROCESS_PO6_RECORDS ! generate the PO6 records and write them
11095 RETURN 
11100 WRITE_PO6_RECORD:! [197451]-Added routine
11101 ! This routine will build the PO6 record and write
11102 ! it to the PO6 file.
11110 IF SHIP_INTERFACE$<>"" THEN ORDER$=ORDER_DIV$+ORDER_NUM$; IF ORDER$<>PREV_ORDER$ THEN PREV_ORDER$=ORDER$; GOSUB INCREMENT_FS1_SEQ ! WO240288, if they have the shipping module, we need to update the sequence number is FS1, only one time, not for every line we fill.
11120 PO6_KEY$="" ! clear the key
11122 PO6_KEY$+="L"+W9$+FS22$(11,1) ! append the PO6 type
11124 PO6_KEY$+=WHSE$ ! append the warehouse
11126 PO6_KEY$+=PICK_PRIORITY$ ! append the pick priority
11127 PO6_KEY$+=ORDER_DIV$ ! SSP205005, wasn't writing the division
11128 PO6_KEY$+=ORDER_NUM$ ! append the order number
11130 PO6_KEY$+=ORDER_LINE_NUM$ ! append the order line number
11150 WRITE (PO6_LFN,KEY=PO6_KEY$) ! write the record
11195 RETURN 
11200 READ_SHIP_VIA_CODES:! [197451]-Added routine
11201 ! This routine reads the FMPS file to get the picking
11202 ! priority for the specified ship via code
11210 PICK_PRIORITY$="~~" ! clear the field
11220 FMPS_KEY$="S"+SHIP_VIA_CODE$ ! set the FMPS key
11230 READ (FMP_LFN,KEY=FMPS_KEY$,DOM=11260)IOL=0480 ! read the FMPS record.  SSP226505, DOM was *RETURN which was skipping the write of PO6, changed to go to line 11260
11240 PICK_PRIORITY$=MID(FMPS$,278,2) ! set the pick priority
11250 PICK_PRIORITY$=PAD(PICK_PRIORITY$,2) ! pad the pick priority
11260 GOSUB WRITE_PO6_RECORD ! write the po6 record
11295 RETURN 
11300 PROCESS_PO6_RECORDS:! [197451]-Added routine
11310 IF (SPECIAL_SHIPPING_FLAG$<>"Y") THEN {! no special shipping for the line
11320 TMP_PO3_KEY$=ORDER_DIV$+ORDER_NUM$+"     " ! set the PO3 key
11325  } ELSE {! special shipping
11330 TMP_PO3_KEY$=ORDER_DIV$+ORDER_NUM$+" "+ORDER_LINE_NUM$+" ",PICK_PRIORITY$=DIM(2) ! set the PO3 key SSP#207082
11335  }
11340 READ (PO3_LFN,KEY=TMP_PO3_KEY$,DOM=*NEXT,ERR=9000)IOL=0485; GOTO 11344 ! read the PO3 record SSP#207082                                          
11342 READ (PO3_LFN,END=*RETURN)IOL=0485 ! SSP#207082
11344 IF MID(PO3$,166,9)+MID(PO3$,7,3)<>TMP_PO3_KEY$(1,12) THEN GOTO 11695 ! SSP#207082
11345 SHIP_VIA_CODE$="" ! clear the field
11350 SHIP_VIA_CODE$=PO3$(150,1) ! set the ship via code
11355 GOSUB READ_SHIP_VIA_CODES ! read the FMPS file to get the pick priority
11695 RETURN 
12000 INCREMENT_FS1_SEQ:! WO240288, similar to PO2RFA logic
12005 IF POS("S"=MID(V$,59,12))>0 THEN RETURN ! SSP248053/590, don't increment sequence number field
12010 OPTIONS$="S"
12020 CALL "SH2EXP",ERR=*RETURN,X3$,X4$,ORDER$,OPTIONS$,RET$
12025 READ (Z[1],KEY=ORDER$,DOM=*NEXT)IOL=0310 ! reposition after call if needed
12095 RETURN 
12099 ! 
56000 REM + Modification History
56001 REM "180032-Wireless Warehousing                                        
56002 REM "197451-WMS pick ticket priority by Ship Via priority/              
56005 REM "205005-Enhanced BO fill report not writing the PO6 record correctl
56007 REM "207055-Invoices Pulling Closed PO Sell Price on Back Orders.  ALSO 207082 CHANGES
56009 REM "201896-Would like to know if they can make an OP parameter about   
56010 REM "208467-Invoicing Gateway Pulling Vendor PO Lines 
56011 REM "211123-Requisition charge stopped working 
56012 REM "213947-Enhanced backorder report   
56014 REM "224945-Testing the Enhanced Backorder Fill Report. Item did not    
56016 REM "226505-No PO6 created if blank Ship Via code during BO Fill Report
56018 ! 220015-Message lines printing on PL with no items
56019 REM "227639-Modify Enhanced BackOrder Fill to check for accounts on     
56020 REM "239820-Add sequence 1 Order Number range and sequence 2 Customer
56022 REM "240288-Increment SCALE_SEQ_NUM in order header in Enhanced BO Fill
56024 REM "248053-Since new release, the order header sequence number is      
