0010 REM "<FC2UAA> Import FMS Count Entry Gateway
0020 SETESC 9300; SETERR 9000
0035 REM "5.0 - 02/19/02 - 11.457777 - dmm - SSP# 146139
0040 REM "Copyright 2002 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0094 REM "Copied from FO2UBA--Order req gateway,2/7/97
0095 REM "Called from FO2RAS Q0$="", Q1$="*"
0096 REM "Called from FO2GST Q1$="G"
0100 SETERR 9000
0110 X0$="FC2UAA",X1$="Import FMS Count Entry Gateway"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0140 L0=67; REM "Record should be 67 long, for version 1.00, will adjust at 1140 if another version
0145 M0$="000"
0150 COUNT=0; REM "Req count to send back to ghost task
0160 BAD_REC_COUNT=0; REM "Count of records not processed, see 7800's
0170 NEW_COUNT=0; REM "Count of new FM6 records set up, see 7900's
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST FM6$,FM6[0],FM6[1],FM6[2],FM6[3],FM6[4],FM6[5],FM6[6],FM6[7],FM6[8],FM6[9],FM6[10],FM6[11],FM6[12],FM6[13],FM6[14],FM6[15],FM6[16]
0320 IOLIST FM0$
0330 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0340 IOLIST AR1$,AR1[0],AR1[1],AR1[2],AR1[3],AR1[4],AR1[5],AR1[6],AR1[7],AR1[8],AR1[9],AR1[10],AR1[11],AR1[12],AR1[13],AR1[14],AR1[15]
0350 IOLIST FM8$
0360 IOLIST FM4$,FM4_OBS$,FM4[0],FM4[1],FM4[2],FM4[3],FM4[4],FM4[5],FM4[6],FM4[7],FM4[8],FM4[9],FM4[10],FM4[11],FM4[12],FM4[13],FM4[14],FM4[15]
0370 IOLIST LAST_UM$,LAST_UM[0],LAST_UM[1]
0380 IOLIST COUNT1_UM$,COUNT1_UM[0],COUNT1_UM[1]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0509 REM "Slot 1 used for import file opened in 1000's
0510 Z$="02O FM6... 03O FM0... 04O FM1... 05O AR1... 06O FM8... 07O FMP... 08O FM4... 09O FM7... 13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "
0610 IF Q1$<>"G" THEN GOSUB 6000
0640 IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 0641,9900
1000 REM "Get list of FC1 files to process
1010 CALL "ZZ2BLS","D0:FC1*","S",F$
1012 IF X3$(77,1)="U" THEN CALL "ZZ2BLS","D0:fc1*","S",F_LOWER$; F$=F$+F_LOWER$
1015 P=POS(":"=F$); IF P=0 THEN GOTO 5000
1020 F1$=F$(P+1); P1=POS(":"=F1$); IF P1>0 THEN F$=F1$(P1-2),F1$=F1$(1,P1-3) ELSE F$=""
1050 Z$="01CU 01O "+F1$+" "
1055 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 1056,1995
1060 CLOSE (Z[1]); OPEN LOCK (Z[1],OPT="TEXT")F1$; REM "Open for reading raw file
1065 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
1075 IF Q1$<>"G" THEN PRINT @(15,15),'CE',"Processing: "+F1$,
1080 IF Q1$<>"G" THEN GOSUB 8100; GOSUB 8150
1100 REM "Process the file
1105 I9=0,FC1$="",REC_COUNT$=""; DIM REC_COUNT[50]
1110 READ (Z[1],END=7750)FC1$; I9=I9+1,COUNT=COUNT+1,L2=0,S1$="0"; REM "S1$ is status code
1115 P=POS(FC1$(1,3)=REC_COUNT$,3); IF P=0 THEN REC_COUNT$=REC_COUNT$+FC1$(1,3); GOTO 1115; REM "Used to write to "+hwd+dlm+"GW_LOG
1120 P1=(P+2)/3; REC_COUNT[P1]=REC_COUNT[P1]+1
1125 IF Q1$<>"G" THEN IF MOD(I9,T0)=1 THEN GOSUB 8150
1130 REM PRINT @(0,3),'CE',@(0,4),FC1$; INPUT *
1140 REM "IF FC1$(4,3)="101" THEN LET L0=310; REM "HEADER OF VERSION 1.01 FILE IS 310 LONG
1145 IF LEN(FC1$)<L0 THEN I9$=FC1$; DIM FC1$(L0); FC1$(1)=I9$,REASON$="Record is short"; GOSUB BAD_RECORD; GOTO 1110; REM "Short record, don't process
1160 AR1_KEY$=PAD(STP(FC1$(7,10),1),10,"0"); REM "CUSTOMER NUMBER
1161 REM "LET AR1_KEY$=FC1$(7,10)--needed this for testing with dmm's data
1165 DIM AR1$(599),AR1[15]; READ (Z[5],KEY=AR1_KEY$,DOM=1170)IOL=0340; GOTO 1175
1170 REASON$="Invalid customer code"; GOSUB BAD_RECORD; GOTO 1110; REM "Got the DOM, no such customer code in AR1
1175 READ (Z[7],KEY="D"+AR1_KEY$,DOM=1176)FMP_D$; IF FMP_D$(24,1)="Y" THEN GOTO 1180
1176 REASON$="Not an FMS customer"; GOSUB BAD_RECORD; GOTO 1110
1180 FM8_KEY$=AR1_KEY$+FC1$(17,4),FM0_KEY$="C"+FM8_KEY$; REM "Customer code + location code
1185 DIM FM0$(522); READ (Z[3],KEY=FM0_KEY$,DOM=1186)IOL=0320; GOTO 1190
1186 REASON$="Not a valid location for this customer"; GOSUB BAD_RECORD; GOTO 1110
1190 IF FM0$(223,1)<>"C" THEN REASON$="Not a counted location"; GOSUB BAD_RECORD; GOTO 1110
1195 DIM FM8$(45); READ (Z[6],KEY=FM8_KEY$,DOM=1196)IOL=0350; GOTO 1200
1196 REASON$="Customer cycle not started or no on-demand sheets"; GOSUB BAD_RECORD; GOTO 1110
1200 IF STP(FC1$(48,6),3," ")="" THEN FM8$(21,6)=X3$(21,6) ELSE FM8$(21,6)=FC1$(48,6); REM "Date that count was made
1205 READ (Z[7],KEY="E"+AR1_KEY$+FMP_D$(52,4),DOM=7700)FMP_E$; REM "Check for customer's current fiscal year
1210 IF FM8$(34,1)="C" THEN IF FM8$(27,1)<"2" THEN REASON$="Count sheet printing has not been run"; GOSUB BAD_RECORD; GOTO 1110
1215 IF FM8$(34,1)="C" THEN FM8$(27,1)="3"; WRITE (Z[6],KEY=FM8_KEY$)IOL=0350
1220 READ (Z[7],KEY="d"+FM8_KEY$+FC1$(21,3),DOM=1221)COUNT_STOP$
1225 FM1_KEY$=AR1_KEY$+FC1$(37,10)
1230 DIM FM1$(448),FM1[31]; READ (Z[4],KEY=FM1_KEY$,DOM=1231)IOL=0330; GOTO 1234
1231 REASON$="Item code is not valid"; GOSUB BAD_RECORD; GOTO 1110
1234 IF STP(FC1$(58,5),3," ")="" THEN FC1$(58,5)=STR(FM1[4]:"00000",ERR=1235); GOTO 1236
1235 REASON$="Invalid quantity per unit of measure"; GOSUB BAD_RECORD; GOTO 1110
1236 FM4_KEY$=FM1_KEY$+FC1$(17,4); DIM FM4$(215),FM4[15]; FIND (Z[8],KEY=FM4_KEY$,DOM=1237)IOL=0360
1237 FM6_KEY$=FM8_KEY$+FC1$(21,3)+FC1$(24,13)+FC1$(37,10)+FC1$(47,1)
1240 DIM FM6$(82),FM6[16]; EXTRACT (Z[2],KEY=FM6_KEY$,DOM=7900)IOL=0310
1245 IF FM6$(82,1)="2" THEN REASON$="Issue based item--no count entered"; GOSUB BAD_RECORD; GOTO 1110
1250 FM6$(46,4)=FC1$(54,4); REM "U/M count 1
1255 DIM COUNT1_UM$(21),COUNT1_UM[2]; FIND (Z[13],KEY="U/M"+FM6$(46,4),DOM=1256)IOL=0380; GOTO 1260
1256 REASON$="Invalid unit of measure"; GOSUB BAD_RECORD; GOTO 1110
1260 IF COUNT1_UM$(20,1)="Y" THEN IF COUNT1_UM[0]<>0 THEN FM6[4]=COUNT1_UM[0]; GOTO 1265 ELSE FM6[4]=COUNT1_UM[1]; GOTO 1265 END_IF ELSE FM6[4]=NUM(FC1$(58,5),ERR=1261); GOTO 1265
1261 REASON$="Invalid quantity per unit of measure"; GOSUB BAD_RECORD; GOTO 1110
1265 COUNT_IN_UNITS=NUM(FC1$(63,5),ERR=1266); GOTO 1270
1266 REASON$="Invalid count amount"; GOSUB BAD_RECORD; GOTO 1110
1270 IF COUNT_IN_UNITS=99 OR COUNT_IN_UNITS=999 OR COUNT_IN_UNITS=9999 OR COUNT_IN_UNITS=99999 THEN FM6$(82,1)=" "; GOTO 1280; REM "No count entered
1272 IF COUNT1_UM$(20,1)<>"Y" THEN FM6[3]=COUNT_IN_UNITS*FM6[4] ELSE IF COUNT1_UM[1]<>0 THEN FM6[3]=COUNT_IN_UNITS*COUNT1_UM[1] ELSE FM6[3]=COUNT_IN_UNITS
1275 FM6$(82,1)="1"; REM "Count entered
1280 WRITE (Z[2],KEY=FM6_KEY$)IOL=0310
1285 WRITE (Z[9],KEY=FM6_KEY$(1,14)+FM6_KEY$(31,10)+FM6_KEY$(15,16)+FM6_KEY$(41,1)); REM "Sort file
1295 GOTO 1110
1900 REM "End of file
1901 REM "Close & Rename to FC4 for archiving. Erase an existing FC4 file, if same name
1905 Z$="01CU"+F1$+" "
1906 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
1910 F2$=F1$; IF F2$ LIKE "[Ff][Cc]1*" THEN F2$(1,3)="FC4" ELSE GOTO 1995
1919 REM "Get disk DIRectory of data files
1925 J$=%DATAPATH$
1930 REM "Move the file
1935 ERASE F2$,ERR=*PROCEED; RENAME J$+DLM+F1$ TO J$+DLM+F2$
1995 GOTO 1015
5000 REM "EOJ
5010 END_MESSAGE$=FN%CDS$+", "+STR(COUNT:"0000")+" records processed"
5020 GOSUB SYSTEM_CALL
5040 IF NEW_COUNT<>0 THEN END_MESSAGE$=STR(NEW_COUNT:"0000")+" new records were added to the count"; GOSUB SYSTEM_CALL
5050 IF BAD_REC_COUNT<>0 THEN END_MESSAGE$=STR(BAD_REC_COUNT:"0000")+" records were not processed"; GOSUB SYSTEM_CALL
5070 IF Q1$<>"G" THEN PRINT @(0,15),'CE',
5080 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5090 GOTO 9900
5100 SYSTEM_CALL:REM "Write out to FMS Count Entry Gateway Log
5120 SYS_CALL$="echo "+QUO+END_MESSAGE$+QUO+" >> "+HWD+DLM+"GFC_LOG"
5130 INVOKE SYS_CALL$
5140 SYSTEM_CALL_END:RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(10,5),"Importing FMS Count Entry Gateway Records"
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
7500 REM "Convert date Q$ into D0$
7501 REM "Q$ in YYMMDD format
7505 D0$=""
7506 IF STP(Q$,3," ")="" THEN GOTO 7545
7510 IF LEN(Q$)<6 THEN GOTO 7545 ELSE D1$=Q$(1,2)
7515 IF D1$<"50" THEN D1$="20"+D1$ ELSE D1$="19"+D1$
7520 D0$=CHR(NUM(D1$(1,3),ERR=7521)-125)+D1$(4,1)+Q$(3,2)+Q$(5,2)
7545 RETURN 
7700 REM "Setup customer's current fiscal year, came from dom at 1205
7705 P1$="E"+AR1_KEY$+STR(NUM(FMP_D$(52,4))-1:"0000")
7710 READ (Z[7],KEY=P1$(1,15),DOM=7711)P0$; GOTO 7715
7711 REASON$="Customer calendar not setup"; GOSUB BAD_RECORD; GOTO 1110
7715 FMP_E$=P0$
7717 FMP_E$(12,4)=STR(NUM(FMP_E$(12,4))+1:"0000")
7719 FMP_E$(18,6)=FMP_E$(18+NUM(FMP_E$(16,2))*6,6)
7721 FMP_E$(24)=""
7723 FMP_E$(106)=P0$(106)
7725 P0$=""
7730 CALL "FM2UBZ",X3$,"",FMP_E$,11
7735 WRITE (Z[7],KEY=FMP_E$(1,15),DOM=7736)FMP_E$
7745 GOTO 1206
7750 REM "End of file
7754 IF LEN(REC_COUNT$)<=0 THEN GOTO 7795
7755 FOR X=1 TO LEN(REC_COUNT$)-2 STEP 3
7756 S$="GFC|STAT|"+FN%CDS$+"|"+X3$(40,3)+"|"+X3$(9,3)+"|"+FID(0)+"|"+F1$+"|"+REC_COUNT$(X,3)+"|"+STR(REC_COUNT[(X+2)/3]:"0000")
7757 S2$="echo "+QUO+S$+QUO+" >> "+HWD+DLM+"GW_LOG"
7758 INVOKE S2$
7759 NEXT X
7795 GOTO 1900
7800 BAD_RECORD:REM "Write message to GFC_LOG, couldn't process this record
7805 BAD_REC_COUNT=BAD_REC_COUNT+1
7810 MESSAGE$="File: "+F1$+" Reason: "+REASON$
7820 BAD_REC$=FC1$(1,3)+"|"+FC1$(4,3)+"|"+FC1$(7,10)+"|"+FC1$(17,4)+"|"+FC1$(21,3)+"|"+FC1$(24,13)+"|"+FC1$(37,10)+"|"+FC1$(47,1)+"|"+FC1$(48,6)+"|"+FC1$(54,4)+"|"+FC1$(58,5)+"|"+FC1$(63,5)
7830 SYS_CALL$="echo "+QUO+MESSAGE$+QUO+" >> "+HWD+DLM+"GFC_LOG"
7835 INVOKE SYS_CALL$
7840 SYS_CALL$="echo "+QUO+BAD_REC$+QUO+" >> "+HWD+DLM+"GFC_LOG"
7845 INVOKE SYS_CALL$
7890 BAD_RECORD_END:RETURN 
7900 REM "Write new FM6 record, got the dom at 1240
7905 FM6$(1)=FM6_KEY$
7910 FM6$(42,4)=FM1$(100,4); REM "U/M last physical count
7915 FM6[0]=FM4[3],FM6[1]=FM4[4]
7920 DIM LAST_UM$(21),LAST_UM[2]; FIND (Z[13],KEY="U/M"+FM1$(100,4))IOL=0370
7925 IF LAST_UM$(20,1)<>"Y" THEN FM6[2]=FM1[4]; GOTO 7930
7926 IF LAST_UM[0]<>0 THEN FM6[2]=LAST_UM[0] ELSE FM6[2]=LAST_UM[1]
7930 NEW_COUNT=NEW_COUNT+1
7990 GOTO 1241
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8107 T=0
8113 CALL "ZZ2FNC;SerialRecCnt",Z[1],T
8115 PRINT @(0,7),"There are "+STR(T)+" records to process"
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8135 T1=0
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,I9
8195 RETURN 
8910 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"      ")-1)
9000 REM "ERROR PROCESSING
9001 IF Q1$<>"G" THEN PRINT @(4,15),ERR,"  ",TCB(5); INPUT *
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1150,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; IF Q1$="G" THEN Q0$=STR(COUNT) ELSE Q1$=A1$
9935 EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
