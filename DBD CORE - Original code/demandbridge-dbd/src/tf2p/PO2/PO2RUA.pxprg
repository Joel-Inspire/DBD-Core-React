0010 REM " Purchase Order Receiving Update <PO2RUA>
0035 REM "5.7 - 05/16/22 - 12.960701 - crg - SSP# 307403
0037 REM "307403-DBD-265: AP Invoice and PO Receiving parallel files         
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 IF %GUI THEN CLEAR ELSE BEGIN 
0100 SETERR 9000; SETESC 9300
0110 X0$="PO2RUA",X1$=" Purchase Order Receiving Update"
0120 DIM Z0$(80,"-"),S0$(80),F$(170)
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0250 IF POS(X3$(9,3)="303",3)<>0 THEN UPDATE_FS6=1 ELSE UPDATE_FS6=0; REM "for Workorder #74371
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0320 IOLIST B$(1),B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21],B[22],B[23],B[24],B[25],B[26],B[27],B[28],B[29],B[30],B[31],B[32],B[33],B[34],B[35],B[36],B[37],B[38],B[39],B[40]
0321 IOLIST B$(1),STR(B[0]),B[1],STR(B[2]),B[3],STR(B[4]),B[5],STR(B[6]),B[7],STR(B[8]),B[9],STR(B[10]),B[11],STR(B[12]),STR(B[13]),B[14],B[15],B[16],STR(B[17]),STR(B[18]),B[19],STR(B[20]),B[21],STR(B[22]),B[23],STR(B[24]),B[25],STR(B[26]),B[27],STR(B[28]),B[29],STR(B[30]),B[31],STR(B[32]),B[33],B[34],B[35],B[36],B[37],B[38],B[39],B[40]
0330 IOLIST C$(1),C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20]
0331 IOLIST C$(1),C[0],STR(C[1]),STR(C[2]),C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15],D[16],D[17],D[18],D[19],D[20],D[21],D[22],D[23],D[24],D[25],D[26],D[27],D[28],D[29],D[30] ! WO273055
0341 IOLIST D$,STR(D[0]),D[1],STR(D[2]),D[3],STR(D[4]),D[5],STR(D[6]),D[7],STR(D[8]),D[9],STR(D[10]),D[11],STR(D[12]),STR(D[13]),D[14],D[15],D[16],D[17],D[18],D[19],D[20],D[21],D[22],D[23],D[24],D[25],D[26],D[27],D[28],D[29],D[30] ! WO273055
0350 IOLIST E$
0360 IOLIST F$,F[0],F[1],F[2],F[3],F[4],F[5],F[6],F[7],F[8],F[9],F[10],F[11],F[12],F[13],F[14],F[15],F[16],F[17],F[18],F[19],F[20],F[21],F[22],F[23],F[24],F[25],F[26],F[27]
0361 IOLIST F$,STR(F[0]),F[1],F[2],F[3],F[4],F[5],F[6],F[7],F[8],F[9],F[10],F[11],F[12],F[13],F[14],F[15],F[16],F[17],F[18],F[19],F[20],F[21],F[22],F[23],F[24],F[25],F[26],F[27]
0370 IOLIST G$,G[0],G[1],G[2]
0375 IOLIST GG$,GG[0],GG[1],GG[2]
0380 IOLIST H$,H[0],H[1]
0390 IOLIST L$,L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12]
0400 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12],J[13],J[14],J[15],J[16],J[17]
0410 REM "I$ IOLIST IS FOR FM1"
0420 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14],I[15],I[16],I[17],I[18],I[19],I[20],I[21],I[22],I[23],I[24],I[25],I[26],I[27],I[28],I[29],I[30],I[31]
0425 IOLIST FS1$,FS1[0],FS1[1],FS1[2],FS1[3],FS1[4],FS1[5],FS1[6],FS1[7],FS1[8],FS1[9],FS1[10],FS1[11],FS1[12],FS1[13]
0500 REM "FILES
0505 Z=NUM(X3$(60,3)); DIM Z[Z]
0509 REM "If Z(11) is used in 510 be sure to close it @ 5105
0510 Z$="01L PO7...  02O IC0...  03O IC1...  04O IC2...  05O PO1...  06O PO2...  07O PO3...  08O IC8...  09O FM1...  10O FMZ...  12O IC6...  15OSPO3...  16O FTK...  17O FMV...  18O FTO...  19O FM0...  20O FT8...  21O FS1...  22O FM5...  23O FMP...  24O FMI...  "
0515 Z$=Z$+"13O ZZPARM  "
0516 Z$=Z$+"14O FS6...  " ! moved (and padded) from 518 for SSP# 168612
0517 Z$=Z$+"25O ASJ...  26O FS2...   27O DT0...  28O DT2...  29O DT6...  30S PO2...  " ! SSP# 168612, SSP198612"  
0518 Z$=Z$+"32O SM7...  33O AR1...  " ! WO 270121, WO302939
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0521,9900
0522 FLN_FS1=Z[21],FLN_FS2=Z[26],FLN_PO3=Z[7],FLN_FMP=Z[23],FLN_ASJ=Z[25] ! SSP# 168612
0523 DT0=Z[27],DT2=Z[28],DT6=Z[29],PO2_B=Z[30]
0524 MEM_FL=HFN; OPEN (MEM_FL)"*MEMORY*"
0525 DIM Q[7],M6[1]; CALL "IC2PRE",X3$,Z[13],"",M6{ALL},"",0,"",0
0530 DIM P2$(101); READ (Z[13],KEY=X3$(9,3)+"I/C",DOM=0531)P2$
0540 READ (Z[13],KEY=X3$(9,3)+"F/M")P1$
0550 READ (Z[13],KEY=X3$(9,3)+"A/P")AP_PARMS$; REM SSP 186691
0580 IF POS("G"=FID(0))=1 THEN CALL "ZZREST",X3$,Z[13],Z[1],-1,0,0,V0$,K0$,K1$,K0,K1; GOTO 9900
0585 RT_PARM$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT_PARM$
0600 REM "
0622 ! 
0623 ! SSP# 168612 lines 622-627
0624 ! 
0625 CALL "ZZ2PRP","DR",R$,D$ ! This D$ appears to be a dummy var.
0626 IF R$="Y" THEN HAS_DATA_REP=1 ELSE HAS_DATA_REP=0
0627 ! 
0695 CALL "ZZPROM","U6",X3$,0,U9$,"","",0
0730 DIM A$(130),A[12]
0800 REM "CHECK FOR ROOM?
0805 CALL "ZZPROM","U1",X3$,0,"","","",0
0810 DIM X[Z,1],X$(0)
0815 FOR X=1 TO Z
0820 CALL "ZZINFO",X,0,X3$,A,B,0,0,0,0,0,""; X[X-1,0]=A,X[X-1,1]=B
0825 NEXT X
0830 PRINT @(0,22),'CL',
0835 IF X[Z[1]-1,0]=0 THEN CALL "ZZPROM","U2",X3$,S3,"","","",0; GOTO 9900
0838 IF X[Z[32]-1,0]<>0 THEN CALL "ZZPROM","X0PO2RUA",X3$,S3," Do you still wish to continue?","","",0; ON S3 GOTO 9900,0839 ! WO 270121
0839 PRINT @(0,21),'CL',
0840 GOTO 0900
0880 REM "PROMPT OUT OF ROOM
0890 CALL "ZZPROM","U3",X3$,S3,"","","",0; GOTO 9900
0900 REM "RESTART LOGIC
0905 CALL "ZZREST",X3$,Z[13],Z[1],-1,0,0,V0$,K0$,K1$,K0,K1
0915 GOSUB 6000
0920 IF K0$="" THEN READ (Z[1],KEY=K0$); GOTO 0960
0930 EXTRACT (Z[1],KEY=K0$,DOM=0931)IOL=0310
0935 CALL "ZZPROM","U4",X3$,0,"+ "+A$(1,9)+"-"+A$(10,10)+"-"+A$(20,3)+"-"+A$(23,1),"","",10
0940 CALL "ZZPROM","U5",X3$,0,"","","",14
0969 ! IF %CHAINED_UPDATE_MODE THEN GOTO 0971 ! Do not prompt if in chained update mode - 197952
0970 CALL "ZZPROM","9",X3$,S3,"","","",0; ON S3 GOTO 0971,9900
0975 PRINT @(0,12),'CL',
0980 IF P2$(48,1)="Y" THEN CALL "PO2UBF",X3$,X4$,V0$(20,6); READ (Z[1],KEY="",DOM=0981)
1000 REM "READ NEXT RECORD
1020 K0$=KEY(Z[1],END=5000)
1030 READ (Z[1])IOL=0310
1032 IF A$(20,3)="   " THEN GOTO 1020
1035 IF A$(1,22)<>A9$ THEN GOSUB 4500
1090 PRINT @(7,12),U9$," ",K0$,
1100 REM "
1105 ! 
1106 ! SSP# 168612 lines 1105-1116 (split old line 1110 and insert call)
1107 ! 
1108 ! e$ is read from PO1 in 2900, but not written back to there.
1109 ! 
1110 UPDATE_JOB=0; GOSUB 2900
1111 ! 
1112 ! Update ASJ history file if order is "Bill as Shipped"
1113 ! 
1114 IF E$(351,1)="B" THEN CALL "UPDASJ;NEW_ASJ_FROM_PO7",FLN_ASJ,FLN_FS1,FLN_FS2,FLN_PO3,FLN_FMP,X3$,X4$,RT_PARM$,HAS_DATA_REP,P1$,A$,A[0],BUF_FS1$
1115 ! 
1116 GOSUB 3200; GOSUB 3500
1117 REMOVE (Z[16],KEY=A$(1,8),DOM=1118); REM "WO111482
1118 REMOVE (Z[18],KEY=A$(1,9),DOM=1119); REM "SSP125960
1120 IF P1$(272,1)="Y" THEN CALL "PO2PPL",X3$,X4$,"P",A$; REM "WO94734, Print Packing List if not printed yet
1125 EXTRACT RECORD (Z[21],KEY=A$(1,8),DOM=*NEXT)FS1$; FS1$(386,1)="Y"; WRITE RECORD (Z[21],KEY=A$(1,8))FS1$ ! SSP294679, update new FS1 field PO Receiving Updated
1145 REM "If not distributer location then skip here
1146 DIM AR1$(600); IF F$(91,10)<>DIM(10) THEN FIND (Z[33],KEY=F$(91,10),DOM=*NEXT)AR1$(1) ! WO302939
1147 IF G$(11,1)<>"D" OR (POS(F$(10,1)="CI",1)=0 AND G$(12,1)<>"9") THEN CALL "UPDDT2;TOD_CUST_PO_RECPT",ERR=*NEXT,DT2,MEM_FL,DT0,Z[19],PO2_B,Z[13],A$,E$,F$,G$,X3$,A{ALL},TOD_OUTPUT_TYPE$,F{ALL},AR1$; REM " SSP 204781, WO302939
1150 IF G$(11,1)<>"D" OR (POS(F$(10,1)="CI",1)=0 AND G$(12,1)<>"9") THEN UPDATE_JOB=1; GOSUB 2700; GOSUB 4600; GOTO 1000; REM " SSP 204781
1165 REM "If 9000 location prepare it
1170 IF G$(12,1)="9" THEN GOSUB 4100
1175 IF G$(11,1)="D" THEN CALL "UPDDT2;TOD_CSR_PO_RECPT",ERR=*NEXT,DT2,MEM_FL,DT0,Z[19],PO2_B,Z[13],A$,E$,F$,G$,X3$,A{ALL},TOD_OUTPUT_TYPE$,F{ALL},AR1$ ! WO302939
1176 IF G$(11,1)="D" THEN CALL "UPDDT2;TOD_CUST_PO_RECPT",ERR=*NEXT,DT2,MEM_FL,DT0,Z[19],PO2_B,Z[13],A$,E$,F$,G$,X3$,A{ALL},TOD_OUTPUT_TYPE$,F{ALL},AR1$ ! WO302939
1205 REM "If ' ' shipto code update totals for masterfile; If no special ship use ' ' rec to update inv location else wait for special ships to do so
1206 REM "Assumes that spec. shipto programs make sure that all quantit is dist. on special codes with none left on general
1208 DIM B$(187),B[40]; B$(1)=F$(91,10)+F$(101,10); NOF=0,XP=PRM('XI'); IF G$(11,1)="D" AND F$(91,10)<>DIM(10) AND F$(101,10)<>DIM(10) THEN SET_PARAM 'XI'; NOF=1; READ (Z[2],KEY=F$(91,10)+F$(101,10),DOM=*NEXT)IOL=0320; NOF=0; SET_PARAM 'XI'=XP
1209 IF NOF THEN MSGBOX "ITEM "+F$(91,10)+"-"+F$(101,10)+" IS NOT SET UP IN INVENTORY"; GOTO 1208
1210 IF A$(23,1)=" " OR POS(E$(351,1)="BS")>0 THEN GOSUB 2000; GOSUB 2600; IF F$(14,1)<>"Y" THEN GOSUB 2300; GOSUB 3800; GOTO 1231
1230 IF F$(14,1)="Y" AND A$(23,1)>" " THEN GOSUB 2300; GOSUB 3800
1700 REM 
1800 REM "RESTART LOGIC
1950 GOTO 1000
2000 REM "Update Item Masterfile
2020 DIM B$(187),B[40]
2025 B$(1)=F$(91,10)+F$(101,10)
2030 EXTRACT (Z[2],KEY=F$(91,10)+F$(101,10),DOM=2031)IOL=0320
2045 CALL "FM2EXT",Z[13],1,B$(124,4),B[15],A[0],A1,A[2],M6[1]
2050 REM "Carton attributes
2055 B[19]=F[5]; B[16]=F[18]
2060 REM "Last purchase information
2065 B[17]=A1; B$(102,6)=A$(39,6)
2070 REM "Average cost calculation - moved to 4500 3.1.3
2270 IF A[0]<>0 THEN WRITE (Z[2],KEY=F$(91,10)+F$(101,10))IOL=0321
2272 IF RT_PARM$>"" THEN IF RT_PARM$(7,1)="H" THEN CUST$=F$(91,10); CALL "RT2WOC",ERR=2273,X3$,X4$,CUST$,"IC0...","U",F$(91,20)
2275 IF A[0]=0 THEN READ (Z[2],KEY=F$(91,10)+F$(101,10),DOM=2276); REM "Extract caused error 0 at 4570
2280 IF POS(" "<>F$(91,10))>0 THEN GOSUB 2700
2290 RETURN 
2300 REM "Update Inventory by Location File
2320 DIM C$(58),C[20]
2325 C$(1)=F$(91,10)+F$(101,10)+G$(12,4)
2330 EXTRACT (Z[3],KEY=F$(91,10)+F$(101,10)+G$(12,4),DOM=2331)IOL=0330
2350 REM "Adjust receipts and on p/o amounts
2351 GOSUB 5700; REM "Calculate POAMT1
2355 C[4]=C[4]+A[0]; C[8]=C[8]-POAMT1
2359 REM LET C[4]=C[4]+A[0]; IF F[1]<>0 THEN LET C[8]=C[8]-A[0] ELSE IF F$(14,1)="Y" THEN LET C[8]=C[8]-G[0] ELSE LET C[8]=C[8]-Q[1] ;REM"was old line 2355
2360 REM "Last active date & cost
2365 C$(47,6)=A$(39,6); C[1]=A1
2370 REM "Average cost
2375 IF C[8]<0 THEN C[8]=0; REM "DXM
2379 REM "Remember to subtract rec quant. off, it was added to C(4) at 2355
2380 B0=C[3]+C[4]-C[5]+C[6]-A[0]
2385 REM "If balance <0 avg cost=rec now cost,skip calc
2390 IF B0<=0 THEN C[2]=A1; GOTO 2450
2400 REM "Calc average cost
2410 CALL "FM2EXT",Z[13],0,B$(124,4),B[15],B0,C[2],B1,0
2420 IF B1>0 THEN CALL "FM2EXT",Z[13],1,B$(124,4),B[15],B0+A[0],B3,B1+A[2],M6[1]; C[2]=B3 ELSE C[2]=A1
2570 WRITE (Z[3],KEY=F$(91,10)+F$(101,10)+G$(12,4))IOL=0331
2572 IF RT_PARM$>"" THEN IF RT_PARM$(7,1)="H" THEN CUST$=F$(91,10); CALL "RT2WOC",ERR=2573,X3$,X4$,CUST$,"IC1...","U",F$(91,20)+G$(12,4)
2575 WRITE (Z[12],KEY=C$(21,4)+B$(61,3)+C$(1,20))
2590 RETURN 
2600 REM "Update Supplier Price List
2620 DIM D$(115),D[30] ! WO273055
2625 D$(1)=F$(91,10)+F$(101,10)+E$(7,10)+E$(17,4) ! SSP210233, plant code was missing from string
2630 EXTRACT (Z[4],KEY=F$(91,10)+F$(101,10)+E$(7,14),DOM=2631)IOL=0340; GOTO 2650
2635 D$(55,4)=B$(124,4),D[14]=B[15]
2650 REM "Carton info
2655 D[16]=F[5],D[15]=F[18]
2660 REM "Last purchased date & cost
2662 CALL "FM2EXT",Z[13],1,D$(55,4),D[14],A[0],B3,A[2],M6[1]; D[13]=B3
2665 D$(59,6)=A$(39,6)
2670 IF A[0]<>0 THEN WRITE (Z[4],KEY=F$(91,10)+F$(101,10)+E$(7,14))IOL=0341
2690 RETURN 
2700 REM "Update Item Master
2710 DIM I[31]
2720 EXTRACT (Z[9],KEY=F$(91,20),DOM=2790)IOL=0420
2730 I$(126,6)=E$(192,6),I$(132,8)=A$(1,8),I[16]=F[11]
2740 I$(140,9)=F$(137,9),I$(149,12)=F$(119,12),I$(161,6)=F$(131,6)
2744 REM "Update carton pk and weight
2745 IF UPDATE_JOB<>1 THEN F[0]=B[19],F[18]=B[16]
2750 IF POS(E$(351,1)=" BS")>0 THEN I$(254,1)="1"; REM "181328
2755 IF POS(E$(351,1)=" BS")>0 THEN GOSUB 4700; REM "181328
2770 WRITE (Z[9],KEY=F$(91,20))IOL=0420; IF RT_PARM$<>"" THEN CUST$=F$(91,10); CALL "RT2WOC",ERR=2771,X3$,X4$,CUST$,"FM1...","U",F$(91,20)
2790 IF UPDATE_JOB=1 THEN RETURN 
2800 REM "Remove Custom Item Temporary Comments,SSP105041
2820 READ (Z[17],KEY=F$(91,20),DOM=2821)
2830 READ (Z[17],END=2890)COMMENT$
2840 IF COMMENT$(1,20)<>F$(91,20) THEN GOTO 2890
2850 IF COMMENT$(24,1)="T" THEN REMOVE (Z[17],KEY=COMMENT$(1,23))
2860 GOTO 2830
2890 RETURN 
2900 REM "Update Purchase order header
2920 DIM E$(383)
2925 E$(297,9)=A$(1,9)
2930 EXTRACT (Z[5],KEY=A$(1,9),DOM=2931)IOL=0350
2940 DIM FS1[13]; READ (Z(21),KEY=A$(1,8),DOM=3190)IOL=0425
2941 IF MID(AP_PARMS$,82,1)="Y" THEN CALL "UPDATP;UPDATE_FROM_PO",X3$,X4$,A$,E$; REM SSP 186691
2950 IF FS1$(184,1)<>"Y" THEN GOTO 3190
2960 REPT$=FS1$(185,8)+E$(305,1)
3000 REM "Update repeat order PO header with job number
3010 READ (Z(20),KEY=REPT$,DOM=3050)FT8$
3020 FT8$(230,12)=E$(230,12),FT8$(242,6)=E$(242,6),FT8$(248,12)=E$(248,12),FT8$(260,6)=E$(260,6)
3030 WRITE (Z(20),KEY=REPT$)FT8$
3040 REM "Update current Job number to Repeat if save as repeat
3050 REPT$=E$(297,9); READ (Z(20),KEY=REPT$,DOM=3190)FT8$
3060 FT8$(230,12)=E$(230,12),FT8$(242,6)=E$(242,6),FT8$(248,12)=E$(248,12),FT8$(260,6)=E$(260,6)
3070 WRITE (Z(20),KEY=REPT$)FT8$
3190 RETURN 
3200 REM "Update Purchase order lines
3220 DIM F$(170),F[27]
3225 F$(82,9)=A$(1,9),F$(7,3)=A$(20,3),A9$=A$(1,22)
3230 EXTRACT (Z[6],KEY=A$(1,9)+A$(20,3),DOM=3231)IOL=0360
3235 IF LOC$="" THEN GOSUB 5800; REM IF F$(6,1)="Y" AND LOC$="" THEN GOSUB 05800
3240 IF A$(23,1)<>" " THEN GOTO 3490
3245 IF UPDATE_FS6 OR E$(351,1)="B" THEN GOSUB 4600
3260 Q[0]=F[11],Q[3]=A[3],Q[1]=F[1],Q[4]=Q[3]
3270 REM "LET F[11]=F[6]+Q[3], F[1]=Q[3]
3275 F[1]=Q[3]
3280 WRITE (Z[6],KEY=F$(82,9)+F$(7,3))IOL=0361
3290 IF POS(E$(351,1)="BS")>0 AND A[3]>0 THEN BO=A[3]; CALL "PO2RUC",X3$,"L",F$,BO; REM "SSP125059, update FS2 if backorder amount
3490 RETURN 
3500 REM "Update Shipping Information
3520 DIM G$(224),G[2],GG$(224),GG[2]
3525 IF E$(173,1)="S" THEN G$(166,9)=A$(1,9) ELSE G$(166,9)=A$(1,8)
3530 IF A$(23,1)=" " THEN G$(7,3)="   " ELSE G$(7,3)=A$(20,3)
3535 G$(10,1)=A$(23,1)
3550 EXTRACT (Z[7],KEY=G$(166,9)+G$(7,4),DOM=3790)IOL=0370
3570 IF A[0]=0 THEN GOTO 3790
3600 REM "Update shipped to date
3610 G[2]=G[2]+A[0]
3770 WRITE (Z[7],KEY=G$(166,9)+G$(7,4))IOL=0370
3790 RETURN 
3800 REM "Update Inventory Transaction Detail
3810 IF A[0]=0 OR P2$(35,1)<>"Y" THEN GOTO 4090
3820 DIM H$(72),H[1]
3825 H$(1)=F$(91,10)+F$(101,10)+G$(12,4)+A$(45,6)
3830 H$(31,6)=A$(39,6),H$(39,1)="R",H$(40,10)=E$(7,10),H$(67,6)=V0$(20,6),H$(65,2)="RR"
3835 CALL "ZZDISP","AX",A$(1,9),"P/O",X3$,X$,"",0,0,X4$; H$(50,15)="PO#:"+X$
3840 H[0]=A[0],H[1]=A[2]
4070 WRITE (Z[8],KEY=H$(1,38),DOM=4071)IOL=0380; GOTO 4080
4072 IC8_KEY$=H$(1,38); CALL "IC2LCC",X3$,X4$,Z[8],37,2,IC8_LAST_ONE$,IC8_KEY$; H$(1,38)=IC8_KEY$
4073 REM " G=ASC(H$(38,1)); IF G<255 THEN H$(38,1)=CHR(ASC(H$(38,1))+1) ELSE H$(37,2)=CHR(ASC(H$(37,1))+1)+" "
4075 GOTO 4070
4080 GOSUB 8600
4090 RETURN 
4100 REM "2000 & 2600 updates must be done for Sales Orders since the general shipping was excluded because it cannot be a D9xxx.
4120 GOSUB 2000; GOSUB 2600
4140 RETURN 
4200 REM "Calculate average sales price, S0 set in 4100's
4201 REM "B0 assumed set
4202 REM "NOT CURRENTLY USED 3.1.3
4205 IF B0<=0 OR B[13]=0 THEN B[13]=S0; GOTO 4230
4220 B1=B0*B[13]+A[0]*S0
4225 IF B1<=0 THEN B[13]=S0 ELSE B[13]=B1/(B0+A[0])
4240 RETURN 
4500 REM "Recompute average cost for item
4570 IF F$(10,1)="I" THEN CALL "IC2AVG",X3$,X4$,F$(91,20),""
4580 LOC$=""
4590 RETURN 
4600 REM "For 303, Update FS6 information with received counts into the invoiced buckets of order history, but only for stock p/os
4604 IF E$(173,1)<>"S" AND E$(351,1)<>"B" AND UPDATE_JOB<>1 THEN GOTO 4695
4605 IOLIST FS6$,FS6[0],FS6[1],FS6[2],FS6[3],FS6[4],FS6[5],FS6[6],FS6[7],FS6[8]
4610 DIM FS6$(163),FS6[8] ! ssp 307357
4615 FS6$(1,10)=F$(91,10),FS6$(11,1)="B",FS6$(12,10)=F$(101,10),FS6$(22,8)=F$(82,9),FS6$(30,1)=CHR(NUM(F$(7,3))+48)
4617 IF E$(351,1)="B" AND E$(173,1)="S" THEN FS6$(11,1)="Z"
4620 EXTRACT (Z[14],KNO=0,KEY=FS6$(1,30),DOM=4695)IOL=4605 ! SSP 196448
4625 IF E$(351,1)="B" OR UPDATE_JOB=1 THEN GOTO 4640
4630 IF FS6$(48,6)<X3$(21,6) THEN FS6$(48,6)=X3$(21,6); REM "Invoiced date
4635 FS6[5]=FS6[5]+A[0]
4640 FS6$(69,12)=E$(248,12)
4650 FS6$(113,3)=F$(7,3),FS6$(117,3)="001;!SSP 307357"
4670 WRITE (Z[14],KEY=FS6$(1,30))IOL=4605
4695 RETURN 
4700 REM " REMOVE REORDER NOTICE RECORDS SSP 181328
4705 FIND (Z[23],KEY="D"+F$(91,10),DOM=4720)CUST_DEFLTS$
4710 FM5$="R"+CUST_DEFLTS$(108,1)+F$(91,10)+"    "+F$(101,10)
4715 REMOVE (Z[22],KEY=FM5$,DOM=4720)
4720 REMOVE (Z[24],KEY=F$(91,10)+F$(101,10),DOM=4799)
4799 RETURN 
5000 REM "END OF UPDATE
5010 CALL "UPDDT6;ADD_TO_QUEUE",DT6,MEM_FL,TOD_OUTPUT_TYPE$
5035 IF MID(G$,166,9)+MID(G$,7,3)<>A$(1,9)+A$(20,3) AND Q[4]<>0 THEN GOSUB 4500 ELSE GOSUB 4550
5050 IF P2$(44,1)="Y" THEN GOSUB 8000
5055 IF P1$(280,1)="Y" THEN GOSUB 5900; REM "WO#111482Update inv job cost
5060 CALL "PO2DUM",X3$,X4$ ! 307403-DBD-265
5100 REM "Check and clear P/O's
5105 Z$="02C IC0...  03C IC1...  04C IC2...  08C IC8...  09C FM1...  10C FMZ...  12C IC6...  16C FTK...  02O FS1...  03O FS2...  04O POA...  08O POE...  09O PO4...  10O PO6...  11O PO5...  12O FMN...  16O IC1...  "
5106 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 5107,9900
5120 GOTO 5500
5200 REM "CLEAR FILES
5210 CALL "ZZPROM","U7",X3$,0,"","","",10
5212 Z$="10C PO6...  10O ZY9  "
5214 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 5215,9900
5215 READ (Z[10],KEY=X3$(174,4)+X3$(85,1),DOM=5220)A$
5217 A$(5,9)="AAP2DAA  "; WRITE (Z[10],KEY=A$(1,5))A$
5218 A$(5,9)="BAR2EAA  "; WRITE (Z[10],KEY=A$(1,5))A$
5219 GOSUB 8900
5220 CALL "ZZINTZ",X3$,"B",0,STR(Z[1]:"00")+STR(Z[4]:"00"+STR(Z[32]:"00")) ! WO 270121
5230 GOSUB 6700
5240 PRINT 'CF'
5400 REM 
5450 GOTO 9900
5500 REM "Remove P/O records
5505 IF P1$(297,1)<>"Y" THEN GOTO 5510; REM " SSP# 129955 - CHECK OP FLAG TO SEE IF WE SHOULD UPDATE COSTS
5507 CALL "PO2CST",A$,X3$,X4$,J$,Q1$,CST_FLAG$,"UPDATE",PROGRAM$,A{ALL},J{ALL},EXTRA_NUM2; REM " SSP# 1219955 - CALL TO UPDATE COSTS
5510 READ (Z[1],KEY="",DOM=5511)
5520 K0$=KEY(Z[1],END=5200); READ (Z[1])IOL=0310
5530 GOSUB 2900
5540 PRINT @(7,12),U9$," ",K0$,
5570 A9=0; READ (Z[6],KEY=K0$(1,9),DOM=5571)
5575 DIM F[27]
5580 K1$=KEY(Z[6],END=5650); READ (Z[6])IOL=0360
5590 IF K1$(1,9)<>K0$(1,9) THEN GOTO 5650
5595 REM " IF F$(6,1)="Y" THEN GOSUB 08500; REM "SSP#101833 CWJ 8/10/98 - SEEMS TO BE WORKING WHEN REMMED. WILL LEAVE FOR LATER
5600 IF F$(6,1)="Y" OR F$(10,1)="M" THEN REMOVE (Z[6],KEY=K1$,DOM=5601) ELSE A9=A9+1; GOTO 5640
5605 IF POS(E$(351,1)="BS")>0 THEN IF F$(6,1)="Y" OR F$(10,1)="M" THEN CALL "PO2RUB",X3$,"L",F$
5610 K9$=K0$(1,9)+F$(7,3); IF F$(14,1)<>"Y" THEN K9$=K0$(1,9) ! SSP#268955
5620 GOSUB 8200
5630 IF POS(E$(351,1)="BS")=0 AND (F$(6,1)="Y" OR F$(10,1)="M") THEN EXTRACT RECORD (Z[3],KEY=F$(82,8)+F$(7,3),DOM=5631)X$; X$(219,1)="Y"; WRITE RECORD (Z[3])X$; IF RT_PARM$>"" THEN IF RT_PARM$(7,1)="H" THEN CUST$=X$(1,10); CALL "RT2WOC",ERR=5631,X3$,X4$,CUST$,"IC1...","U",X$(1,24)
5640 GOTO 5580
5650 REM "If no lines left on this P/O, remove P/O header & releated records
5660 IF A9=0 THEN GOSUB 7700
5670 READ (Z[1],KEY=K0$(1,9)+"~",DOM=5671)
5690 GOTO 5520
5700 REM "CALC AMT TO REMOVE FROM (ON PO) 'POAMT1'
5701 REM "F[1]=OPEN QTY, F[6]=RECV PREV, F[11]=REAL QTY ORDERED
5702 REM "F$(6,1)=IS THIS LINE COMPLETE
5703 REM "F$(14,1)=SPECIAL SHIPPING
5704 REM "A[0]=RECV NOW AMT, A[3]=AMT B/O
5705 REM "G[0]=QTY TO SHIP,  G[2]=RECV TO DATE
5706 REM "C[8]=ON PO QTY
5707 REM "Q[1]=OPEN QTY
5710 POAMT1=A[0]; IF A(0)=0 THEN GOTO 5790
5715 IF G[2]=A[0] AND G[0]=0 AND F[6]=A[0] AND A[3]=0 THEN POAMT1=F[11]; GOTO 5790
5720 IF F[6]>F[11] THEN POAMT1=F[11]-(F[6]-A[0])
5725 IF F$(14,1)<>"Y" THEN GOTO 5790 ! SSP#266495
5730 IF G[2]>G[0] THEN POAMT1=G[0]-(G[2]-A[0])
5735 IF F$(6,1)="Y" AND G[2]<G[0] THEN POAMT1=A[0]+(G[0]-G[2]); GOTO 5790
5740 YY=POS(G$(12,4)=LOC$,4)
5745 IF LEN(LOC$)=0 OR YY=0 THEN GOTO 5790
5750 LOC$(YY,4)="",LOC$=STP(LOC$,3)
5790 RETURN 
5800 REM "BUILD LOC$ WITH LOCATIONS FROM PO3 (CH 15)
5810 READ (Z[15],KEY=K0$(1,9)+K0$(20,3),DOM=5811)
5820 KK$=KEY(Z[15],END=5885)
5830 IF KK$(1,12)<>K0$(1,9)+K0$(20,3) THEN GOTO 5885
5840 READ (Z[15],KEY=KK$)AA$
5850 LOC$=LOC$+AA$(12,4)
5880 GOTO 5811
5885 READ (Z[1],KEY=K0$)IOL=0310
5890 RETURN 
5900 REM "Process PO7 records to update Inv Cost info WO# 111482
5905 READ (Z[1],KEY="",DOM=5906)
5910 READ (Z[1],END=5940)IOL=0310; IF STP(A$(20,3),3," ")="" THEN GOTO 5910
5915 IF A$(66,3)<>"   " THEN CALL "FM2ICD",X3$,X4$,"PO2RUA",-1,A$,A{ALL},V0$(20,6); REM "WO111482 Inventory costing, update FTE/FTF records
5935 GOTO 5910
5945 RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 CALL "ZZPROM","U9",X3$,0,"","","",4
6025 CALL "ZZPROM","U8",X3$,0,"+ "+V0$(20,4)+"."+V0$(24,2),"","",7
6165 PRINT (0,ERR=6066)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6225 GOSUB 6450
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6490 RETURN 
6700 REM "Increment Audit Control No.
6705 F9=Z[13]
6710 A2$=X3$(146,6)+"  000100",A0$=X3$(9,3)+"AUDIT",A1$=""; EXTRACT (F9,KEY=A0$,DOM=6716)A0$,A1$
6715 A0=POS(A2$(1,6)=A1$,14); IF A0=0 THEN A1$=A1$+A2$; GOTO 6715 ELSE A2=NUM(A1$(A0+8,4))+1,A2$(9,4)=STR(A2:"0000"),A1$(A0,14)=A2$
6720 WRITE (F9,KEY=A0$)A0$,A1$
6740 RETURN 
7500 REM "CUSTOM PROGRAMMING ROUTINES
7700 REM "Remove P/O information
7705 REMOVE (Z[5],KEY=K0$(1,9),DOM=7706)
7707 IF POS(E$(351,1)="BS")>0 THEN CALL "PO2RUB",X3$,"H",E$
7710 GOSUB 7800
7715 REMOVE (Z[10],KEY="C"+K0$(1,9),DOM=7716)
7720 REMOVE (Z[10],KEY="P"+K0$(1,9),DOM=7721)
7725 REMOVE (Z[9],KEY=E$(7,14)+E$(297,9),DOM=7726)
7740 READ (Z[8],KEY=K0$(1,9),DOM=7741)
7745 C7$=KEY(Z[8],END=7760)
7750 IF C7$(1,9)<>K0$(1,9) THEN GOTO 7760
7755 REMOVE (Z[8],KEY=C7$)
7758 GOTO 7745
7765 IF K0$(9,1)=" " THEN REMOVE (Z[12],KEY=K0$(1,8),DOM=7766); REM "remove notepad for P/O's not attached to a sales order
7790 RETURN 
7800 REM "For Stock P/O's or Custom w/no FS1 record, eliminate General Shipping record from PO3 and while at it go ahead and make sure all PO3 records are gone
7810 K9$=K0$(1,9)
7820 IF E$(173,1)<>"S" THEN K9$(9,1)=" "; FIND (Z[2],KEY=E$(306,8),DOM=7821); GOTO 7890
7830 READ (Z[7],KEY=K9$,DOM=7831)
7840 K7$=KEY(Z[7],END=7890)
7850 IF K7$(1,LEN(K9$))<>K9$ THEN GOTO 7890
7851 READ (Z[7],KEY=K7$)IOL=0375
7860 REMOVE (Z[7],KEY=K7$)
7870 GOTO 7840
7890 RETURN 
8000 REM "Process Lot inventory
8004 REM "P2$(66,1) means keep inventory lot transaction file
8005 IF P2$(66,1)="Y" THEN Z$="08C IC8... 09C FM1... 10C FMZ... 08O POH... 09O ICF... 10O ICO... 30O KTP...  " ELSE Z$="08C IC8...  09C FM1...  08O POH...  09O ICF...  30O KTP...  "
8010 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 8011,9900
8015 PRINT @(0,12),'CE',
8016 DIM L[12]
8018 READ (Z[8],KEY="",DOM=8019)
8020 READ (Z[8],END=8075)IOL=0390
8021 PRINT @(7,12),L$(1,10)," ",L$(11,20)," ",L$(21,4)," ",L$(31,2),
8022 IF P2$(63,1)="Y" AND POS(" "<>L$(100,10))>0 THEN GOSUB 8400
8023 L$(196,6)=V0$(20,6)
8024 FIND (Z(19),KEY="D"+DIM(10)+L$(21,4),DOM=8025)WAREHOUSE$
8025 IF STP(MID(WAREHOUSE$,596,5),3," ")<>"" AND STP(MID(L$,245,5),3," ")="" THEN L$(245,5)=WAREHOUSE$(596,5)
8026 IF L$(110,8)=DIM(8) THEN L$(118,3)=DIM(3) ! clear wms receiving line
8029 IF P2$(66,1)="Y" THEN D9$=A$(39,6); CALL "IC2LAH",X3$,X4$,L$,L{ALL},A$(45,6),"RR","R",D9$,Z[10]; REM "Update Lot Transactions if needed
8030 WRITE (Z[9],KEY=L$(1,32),DOM=8031)IOL=0390; GOSUB CHECK_KIT; GOTO 8050 ! SSP 208675 
8035 KEY$=L$(1,32); CALL "IC2LCC",X3$,X4$,Z[9],31,2,LAST_ONE$,KEY$; L$(1,32)=KEY$
8040 GOTO 8030
8050 GOTO 8020
8080 CALL "ZZINTZ",X3$,"",0,STR(Z[8]:"00")
8085 IF P2$(66,1)="Y" THEN Z$="09C ICF... 10C ICO... 08O IC8... 10O FMZ... " ELSE Z$="09C ICF...  08O IC8...  "
8090 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 8091,9900
8095 RETURN 
8200 REM "Remove PO5 records for this line and, if either a stock p/o or custom p/o where the sales order line is missing -AND- PO3 record when sales order line is missing, if applicable
8201 REM "NOTE: For P/O number, use K9$(1,9) for PO3 and K0$(1,9) for PO5
8210 R1=1; DIM G[3],GG[3]
8220 IF E$(173,1)<>"S" THEN K9$(9,1)=" "; FIND (Z[3],KEY=E$(306,8)+F$(7,3),DOM=8221); R1=0
8240 REM "Eliminate PO5 sorts for special shipping then general for this line -AND- possibly PO3 record
8250 READ (Z[7],KEY=K9$,DOM=8251)
8260 K7$=KEY(Z[7],END=8310); READ (Z[7])IOL=0370
8270 IF K7$(1,LEN(K9$))<>K9$ THEN GOTO 8310
8280 IF G$(11,1)<>"D" THEN G$(12,4)="DS  "
8285 PO3_LINE_NUM$=F$(7,3); IF F$(6,1)="Y" AND A(0)=0 THEN F$(82,9)=F$(82,8)+" "; IF F$(14,1)<>"Y" THEN PO3_LINE_NUM$=DIM(3) ! SSP#268955 !SSP#270691
8290 IF F$(10,1)="I" THEN REMOVE (Z[11],KEY=F$(91,20)+G$(12,4)+K0$(1,9)+PO3_LINE_NUM$+G$(10,1),DOM=8291) ! SSP#270691
8291 IF G[2]<=G[0] OR A(0)=0 AND F$(6,1)="Y" THEN GOSUB 8500 ! SSP#268955
8295 IF R1=1 AND G$(7,3)<>DIM(3) AND G$(7,3)=F$(7,3) THEN REMOVE (Z[7],KEY=K7$,DOM=8296) ELSE READ (Z[7],KEY=K7$,DOM=*NEXT) ! SSP#268955!271240            Added as root /tma 8/29/2014
8300 GOTO 8260
8310 REM "Eliminate PO5 sort if it was based on general ship (ie stock p/o)
8320 DIM G$(259),GG$(259)
8330 FIND (Z[7],KEY=K9$(1,9)+G$(12,4),DOM=8350)IOL=0370
8335 IF G$(11,1)<>"D" THEN G$(12,4)="DS  "
8340 REMOVE (Z[11],KEY=F$(91,20)+G$(12,4)+K9$(1,9)+F$(7,3)+" ",DOM=8341)
8350 RETURN 
8400 REM "Update Bin Location
8420 EXTRACT RECORD (Z[3],KEY=L$(1,24),DOM=8490)X$
8440 X$(35,10)=L$(100,10)
8460 WRITE RECORD (Z[3])X$
8462 IF RT_PARM$>"" THEN IF RT_PARM$(7,1)="H" THEN CUST$=X$(1,10); CALL "RT2WOC",ERR=8463,X3$,X4$,CUST$,"IC1...","U",X$(1,24)
8490 RETURN 
8500 REM "REMOVE ON PO QTY FOR THIS RECORD FROM IC1
8510 READ (Z[7],KEY=F$(82,9)+F$(7,3),DOM=8511)
8512 KK9$=KEY(Z[7],END=8590)
8513 IF KK9$(1,12)<>F$(82,9)+F$(7,3) THEN GOTO 8590
8520 READ (Z[7],KEY=KK9$)IOL=0370
8535 DIM C$(58),C[20]; READ (Z[16],KEY=F$(91,20)+G$(12,4),DOM=8512)IOL=0330
8540 ! IF G[0]-G[2]<=0 THEN GOTO 8512 ! SSP#268955
8545 IF F$(6,1)="Y" AND A(0)=0 AND F$(14,1)<>"Y" THEN C(8)=C(8)-(F(11)-F(6)); GOTO 8551 ! SSP#268955
8550 IF A[3]<>0 THEN C[8]=C[8]-(G[0]-G[2]) ! SSP#275727
8560 WRITE (Z[16],KEY=C$(1,24))IOL=0330
8565 IF F$(6,1)="Y" AND A(0)=0 AND R1=1 AND F$(7,3)<>DIM(3) THEN REMOVE (Z(7),KEY=KK9$,DOM=*NEXT) ! SSP#268955
8570 GOTO 8512
8590 RETURN 
8600 REM "Update FMZ - Customer Inventory Detail Activity
8660 DIM J$(428),J[17]
8680 J$(1,10)=H$(1,10),J$(11,1)="D",J$(12,4)=H$(21,4),J$(16,10)=H$(11,10),J$(26,6)=H$(31,6),J$(32,3)="001"
8700 J$(35,1)="R",J$(36,10)=J$(1,10),J$(46,40)=B$(21,40),J$(113,9)=A$(1,9),J$(137,2)="PO",J$(139,6)=V0$(20,6),J$(166,14)=E$(7,14),J$(180,4)="",J[1]=A[0],J[5]=A[2]
8720 J$(92,5)="",J$(122,15)=E$(328,15),J$(154,1)=B$(112,1) ! SSP#249126
8755 IF P2$(44,1)="Y" AND J$(154,1)="Y" THEN CALL "IC2LUA",X3$,X4$,0,"POH",Z[10],0,J$,"","","",J{ALL},A$(1,9)+A$(20,3)+G$(12,4),1; GOTO 8820 ! SSP#249126
8760 WRITE (Z[10],KEY=J$(1,34),DOM=8761)IOL=0400; GOTO 8790
8780 IF NUM(J$(32,3))<999 THEN J$(32,3)=STR(NUM(J$(32,3))+1:"000"); GOTO 8760 ELSE ESCAPE 
8825 RETURN 
8900 REM "Check for empty Batch files
8920 Z$="11C PO5... 12C FMN...  11O ARB...  12O APD...  "
8925 GOSUB 9750
8927 AR_FILE$="ARBARCARDARJARTFS3ASD",AP_FILE$="APDAPE" ! SSP#266232
8928 READ (Z[11],KEY="",DOM=*NEXT)
8930 K$=KEY(Z[11],END=8931); GOTO 8940
8931 CLOSE (Z[11])
8932 REMOVE (Z[10],KEY=A$(1,4)+"B",DOM=8933)
8934 FOR X=0 TO LEN(AR_FILE$)/3-1; ERASE AR_FILE$(1+X*3,3)+A$(1,4),ERR=8935
8935 NEXT X
8940 READ (Z[12],KEY="",DOM=*NEXT)
8941 K$=KEY(Z[12],END=8942); GOTO 8950
8942 CLOSE (Z[12])
8943 REMOVE (Z[10],KEY=A$(1,4)+"A",DOM=8944)
8944 FOR X=0 TO LEN(AP_FILE$)/3-1; ERASE AP_FILE$(1+X*3,3)+A$(1,4),ERR=8945
8946 NEXT X
8960 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9045 REM 
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 IF Y5=68 THEN RETRY ELSE ON C9 GOTO 1140,2030
9750 REM "OPEN FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 9790,9761
9770 ESCAPE ; GOTO 9760; REM "FILE OPEN PROBLEM
9790 RETURN 
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 CLOSE (MEM_FL)
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 IF NOT(%GUI) THEN BEGIN ; SETESC 9350
9950 IF %GUI THEN EXIT ELSE RUN "ZMENU"
9999 END 
10000 CHECK_KIT:
10010 PO_NUMBER$=L$(41,9); DIM KT2(2)
10020 READ (Z[30],KEY=PO_NUMBER$+"001",DOM=*RETURN)KTP$
10030 _KT2=HFN; OPEN (_KT2,ERR=11000)STP(KTP$(65,7)) ! ssp#234788
10040 READ (_KT2,KEY=KTP$(13,52))KT2$,KT2{ALL}
10050 KT2$(57,9)=DIM(9)
10060 WRITE (_KT2,KEY=KTP$(13,52))KT2$,KT2{ALL}
10070 CLOSE (_KT2)
10080 _KT0=HFN; OPEN (_KT0)"KT0"+%C$
10090 READ (_KT0,KEY=KTP$(13,20)+KTP$(45,20))KT0$,KT2{ALL}
10100 KT0$(55,9)=DIM(9)
10110 WRITE (_KT0,KEY=KTP$(13,20)+KTP$(45,20))KT0$,KT2{ALL}
10120 CLOSE (_KT0)
10130 L$(110,10)="KT"+KTP$(72,8)
10140 WRITE (Z[9],KEY=L$(1,32))IOL=0390
10150 EXTRACT (Z[3],KEY=L$(1,24))IOL=0330
10155 IF L$(125,4)=DIM(4) THEN QTY=L(4)*L(3) ELSE QTY=L(4)*L(2)*L(3)
10160 C[7]=C[7]+QTY
10170 WRITE (Z[3],KEY=L$(1,24))IOL=0330
10200 ! DT2 FILE                                                                
10210 _DT2=HFN; OPEN (_DT2)"DT2"+%C$
10212 _DT6=HFN; OPEN (_DT6)"DT6"+%C$
10215 _IC0=HFN; OPEN (_IC0)"IC0"+%C$; READ (_IC0,KEY=KT0$(21,20),DOM=*NEXT)_IC0$
10218 READ (_IC0,KEY=KT0$(1,20),DOM=*NEXT)_ICK$
10220 DIM DT2$(2861),DT2(4),DT6$(530)
10250 DT2$(36,9)=PO_NUMBER$,DT2$(45,10)=L$(68,10),DT2$(188,20)=KT0$(1,20),DT2$(208,5)=KTP$(68,5)
10260 DT2$(55,10)=L$(1,10),DT2$(65,10)=L$(110,10),DT2$(73,1)="Y"
10270 DT2$(79,4)=KT0$(51,4),DT2$(83,4)=L$(21,4),DT2$(87,1)="Y",DT2$(88,3)="001",DT2$(92,3)="001"
10280 DT2$(95,3)=_IC0$(61,3),DT2$(98,10)=_IC0$(11,10),DT2$(108,40)=_IC0$(21,40),DT2$(148,4)=_IC0$(124,4)
10285 DT2$(213,40)=_ICK$(21,40),DT2$(253,45)=E$(21,35)
10290 DT2(0)=L(0),DT2(1)=L(4),DT2(2)=L(6)
10300 CALL "UPDDT2;TOD_KIT_PO_RECPT",ERR=10900,_DT2,MEM_FL,DT0,Z[13],X3$,DT2$,DT2{ALL},TOD_OUTPUT_TYPE$
10310 CALL "UPDDT6;ADD_TO_QUEUE",_DT6,MEM_FL,TOD_OUTPUT_TYPE$
10900 CLOSE (_DT2),(_DT6),(_IC0)
11000 RETURN 
12000 ! 12000,10 DT2 FILE
12010 _DT2=HFN; OPEN (_DT2)"DT2"+%C$
12020 _DT6=HFN; OPEN (_DT6)"DT6"+%C$
12030 _IC0=HFN; OPEN (_IC0)"IC0"+%C$; READ (_IC0,KEY=KT0$(21,20),DOM=*NEXT)_IC0$
12040 DIM DT2$(2861),DT2(4),DT6$(530)
12050 DT2$(1,20)="KIT_PO_RECPT_NOT",DT6$(11,20)=DT2$(1,20)
12060 DT2$(21,10)="" ! Output Queue
12070 DT2$(31,5)="00001",DT2$(36,9)=PO_NUMBER$,DT2$(45,10)=L$(68,10)
12080 DT2$(55,10)=L$(1,10),DT2$(65,10)=L$(110,10),DT2$(73,1)="Y"
12090 DT2$(79,4)=KT0$(51,4),DT2$(83,4)=L$(21,4),DT2$(87,1)="Y",DT2$(88,3)="001",DT2$(91,1)="Y",DT2$(92,3)="001"
12100 DT2$(95,3)=_IC0$(61,3),DT2$(98,10)=_IC0$(11,10),DT2$(108,40)=_IC0$(21,40),DT2$(148,4)=_IC0$(124,4)
12110 DT2(0)=L(0),DT2(1)=L(4),DT2(2)=L(6)
12120 WRITE (_DT2,KEY=DT2$(1,35))DT2$,DT2{ALL}
12130 WRITE (_DT6,KEY=DT6$(1,10))DT6$
12140 CLOSE (_DT2),(_DT6),(_IC0)
12150 RETURN 
56000 ! Changes since 03/01/2006
56005 REM "190474-Additional Services - Enhance TF to provide for tax codes   
56008 ! "196448-program exception in p/o receiving update                   
56009 ! "05/26/2006
56010 REM "5.5 - 07/19/06 - 9.107777 - bam - SSP# 168612
56011 REM "168612-Need to add Bill as shipped orders to update the ASJ file   
56012 REM "198612-TopForm Output director                                     
56014 REM "200524-Ability to send an email to originator of PO that product   
56016 REM "210233-Found during Oracle conversion testing, IC2 records written
56017 ! "208675-Kit Module - Allow processing of items not in inventory     
56018 REM "234788-Program Exception in PO receiving if you have already        updated the kit batch
56019 REM "197952-Streamline processing by user - Chained journal updates     
56020 REM "266232 - ASD files are not removed for empty batchs
56021 REM "266495 - There is an issue with what happens in the IC1 location record when you have a customer supplied PO that gets
56022 REM "270121-CIG Plus; Additional to WO260723, Batch Enable SM7.         
56023 REM "273055-Expand IC2 for 6 additional cost breaks, allow entry in GUI 
56024 REM "275727-PO Receive an overrun (> amount ordered), complete the PO.  
56026 REM "294679-Repeat order records updated after PO receiving, then an    
56028 REM "302939-Create new CUST_PO_RECPT_NOT report similar to CSR version. 
56029 REM "307357-Update FS6 to allow for more line numbers                   
56030 REM "307403-DBD-265: AP Invoice and PO Receiving parallel files         
