0010 REM " Modify Cost during PO Receiving <PO2CST>
0035 REM "5.7 - 10/09/14 - 10.581388 - dmm - SSP# 271630
0037 REM "271630-10-234581 -po received at cost on order, but ap Vendor inv  
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 REM "BEGIN
0100 SETERR 9000; SETESC 9300
0101 REM " This program is called from PO2MAU with C0$ = "CHECK", from PO2RUA with C0$="UPDATE" and from AR2EAS with C0$ = "FLAG_CHECK"
0104 REM " If C0$="CHECK"and there is NOT an AP Invoice, Set flag "P" in PO2 byte 2,1    - it is possible we will need to adjust the costs
0105 REM " If C0$ = "UPDATE" and there IS an AP Invoice, we need to perform the cost changes
0108 ENTER A$,X3$,X4$,J$,Q1$,CST_FLAG$,C0$,PROGRAM$,A{ALL},J{ALL},EXTRA_NUM2
0110 X0$="PO2CST",X1$=" Cost Update during PO Receiving Update"
0120 DIM Z0$(80,"-"),S0$(80)
0130 DIM BLANK$(80," ")
0300 REM "IOLISTS
0310 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12]
0331 IOLIST C$(1),C[0],STR(C[1]),STR(C[2]),C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20]
0430 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24],FS2[25],FS2[26],FS2[27],FS2[28],FS2[29]
0440 IOLIST ICF$,ICF[0],ICF[1],ICF[2],ICF[3],ICF[4],ICF[5],ICF[6],ICF[7],ICF[8],ICF[9],ICF[10],ICF[11],ICF[12]
0450 IOLIST FS1$,FS1[0],FS1[1],FS1[2],FS1[3],FS1[4],FS1[5],FS1[6],FS1[7],FS1[8],FS1[9],FS1[10],FS1[11],FS1[12],FS1[13]
0460 IOLIST PO3$,PO3[0],PO3[1],PO3[2],PO3[3]
0470 IOLIST PO2$,PO2[0],PO2[1],PO2[2],PO2[3],PO2[4],PO2[5],PO2[6],PO2[7],PO2[8],PO2[9],PO2[10],PO2[11],PO2[12],PO2[13],PO2[14],PO2[15],PO2[16],PO2[17],PO2[18],PO2[19],PO2[20],PO2[21],PO2[22],PO2[23],PO2[24],PO2[25],PO2[26],PO2[27]
0500 REM "FILES
0505 Z=NUM(X3$(60,3)); DIM Z[Z]
0510 Z$="01L PO7...  02O FS1...  03O FS2...  04O PO2...  15OSPO3...  17O ICF... "
0515 Z$=Z$+"13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0521,9900
0525 DIM Q[7],M6[1]; CALL "IC2PRE",X3$,Z[13],"",M6{ALL},"",0,"",0
0530 DIM P2$(101); READ (Z[13],KEY=X3$(9,3)+"I/C",DOM=0531)P2$
0540 READ (Z[13],KEY=X3$(9,3)+"F/M")P1$
0580 IF POS("G"=FID(0))=1 THEN CALL "ZZREST",X3$,Z[13],Z[1],-1,0,0,V0$,K0$,K1$,K0,K1; GOTO 9900
0585 RT_PARM$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT_PARM$
0600 REM "
0650 IF C0$="FLAG_CHECK" THEN GOTO 8000
0730 IF C0$="UPDATE" THEN DIM J[12]
7000 REM "Update Costs - during PO2RUA - read through PO7 and address each order
7005 IF C0$="CHECK" THEN GOTO 7035; REM "Check order and set flag if necessary
7010 READ (Z[1],KEY="",DOM=7011)
7020 READ (Z[1],END=9100)IOL=0310
7025 IF J[1]=J[5] AND J[0]=J[4] THEN GOTO 7020
7030 IF J$(10,10)=BLANK$(1,10) AND C0$="UPDATE" THEN GOTO 7020; REM " SKIP IF THERE'S NOT AN AP INVOICE
7032 IF J$(20,3)=BLANK$(1,3) AND C0$="UPDATE" THEN GOTO 7020; REM " Skip if it's not a detail line
7034 IF J$(9,1)=BLANK$(1,1) AND C0$="UPDATE" THEN GOTO 7020; REM " NO PO - SKIP
7035 IF C0$="UPDATE" AND J$(23,1)<>" " THEN GOTO 7020; REM "SKIP SHIP TO RECORDS
7036 REM " READ FS1
7037 IF POS(PROGRAM$="PO2MAG",6)<>0 THEN GOTO 8500
7040 DIM FS1[13]; READ (Z[2],KEY=J$(1,8),DOM=7020)IOL=0450
7045 IF POS(FS1$(47,1)="RW")>0 AND C0$="CHECK" THEN GOTO 7650; REM " Skip unless blank
7050 IF POS(FS1$(47,1)="RW")>0 AND C0$="UPDATE" THEN GOTO 7020; REM " Ski; unless blank
7060 IF FS1$(54,1)="B" AND C0$="UPDATE" THEN GOTO 7020; REM "Skip if B
7065 IF FS1$(54,1)="B" AND C0$="CHECK" THEN GOTO 7650; REM " Skip if B
7070 REM "READ FS2
7075 DIM FS2[29]; READ (Z[3],KEY=J$(1,8)+J$(20,3),DOM=7020)IOL=0430
7080 IF FS2$(18,1)<>"Y" AND C0$="UPDATE" THEN GOTO 7020
7085 IF FS2$(18,1)<>"Y" AND C0$="CHECK" THEN GOTO 7650
7105 REM "READ PO3
7107 IF C0$="UPDATE" THEN TOT_PO3=0; REM " Total in Lots
7110 READ (Z[15],KEY=J$(1,8)+" "+J$(20,3),DOM=7111)
7115 K15$=KEY(Z[15],END=7116)
7116 IF ERR=2 AND C0$="UPDATE" THEN GOTO 7175 ELSE IF ERR=2 AND C0$="CHECK" THEN GOTO 7650
7120 IF K15$(1,8)+K15$(10,3)<>J$(1,8)+J$(20,3) AND C0$="UPDATE" THEN GOTO 7175
7121 IF K15$(1,8)+K15$(10,3)<>J$(1,8)+J$(20,3) AND C0$="CHECK" THEN GOTO 7650
7125 DIM PO3[3]; READ (Z[15],KEY=K15$)IOL=0460
7140 IF PO3$(7,4)=BLANK$(1,4) THEN GOTO 7115; REM " skip if no location
7150 IF POS(PO3$(11,1)="D")=0 THEN GOTO 7115; REM " Skip if not D
7160 IF PO3$(11,1)="D" AND PO3$(12,1)<>"9" THEN GOTO 7115
7165 REM "LET INVOICE_FACTOR=0, LOT_FACTOR=0, TOT_PO2=0, TOT_PO3=0
7169 REM " IF WE GOT HERE, THE ORDER MET ALL CRITERIA AND WE NEED TO DO SOMETHING
7170 IF FS2[7]=0 AND C0$="UPDATE" THEN GOTO 7020; REM " NO UNBILLED COST SKIP THIS ONE
7171 IF FS2[7]=0 AND C0$="CHECK" THEN GOTO 7650 ELSE IF FS2[7]<>0 AND C0$="CHECK" THEN GOTO 7600; REM "If 0 quantity received don't set flag - if <> 0 set flag based on AP invoice being there or not
7172 IF C0$="UPDATE" AND J[6]=FS2[19] THEN GOTO 7115 ELSE IF C0$="UPDATE" AND J[6]<>FS2[19] THEN TOT_PO3=TOT_PO3+PO3[0]; REM " Accumulate tot in lots
7174 GOTO 7115
7175 REM "IF C0$="UPDATE" AND TOT_PO3=0 AND J[0]=J[4] AND J[1]=J[5] THEN GOTO 07020; REM "NOTHING IN LOTS AND SAME AMOUNT IS BEING RECEIVED
7180 IF J[6]=FS2[19] AND C0$="UPDATE" THEN GOTO 7020; REM "COSTS MATCH, DON'T NEED TO UPDATE
7182 IF J[4]=0 OR FS2[7]=0 THEN INVOICE_FACTOR=1; GOTO 7190
7183 PRECISION 4
7184 REM "LET INVOICE_FACTOR=FS2[7]/J[4]
7185 INVOICE_FACTOR=J[4]/FS2[7]
7190 GOSUB 8900; REM " Read PO2
7192 PRECISION 4
7193 IF TOT_PO2<>0 THEN LOT_FACTOR=TOT_PO3/TOT_PO2
7194 PRECISION 2
7195 IF C0$="CHECK" THEN GOTO 7600
7200 COST_2_DIST=(J[6]-FS2[19]*INVOICE_FACTOR)*LOT_FACTOR
7201 ! SSP271630 IF COST_2_DIST<=0 THEN GOTO 7020
7202 FS2[19]=FS2[19]+COST_2_DIST; FS2[15]=J[5]
7203 REM "LET FS2[1]=A[5]; LET FS2[3]=A[6]
7204 ! SSP271630 IF FS2[19]<>PO2[15] THEN FS2[19]=PO2[15]
7205 REM "Read through lots and accumulate
7210 DIM ICF$(269),ICF[12]; TOTAL_QTY=0
7220 READ (Z[17],KEY=FS2$(161,10)+FS2$(19,10),DOM=7221)
7230 READ (Z[17],END=7300)IOL=0440; IF ICF$(1,20)<>FS2$(161,10)+FS2$(19,10) THEN GOTO 7300 ELSE IF ICF$(41,8)<>J$(1,8) THEN GOTO 7230
7240 REM "IF ICF$(21,1)<>"9" THEN GOTO 07230
7260 REM "ACCUMULATE THE QUANTITIES IN ALL LOTS
7270 IF STP(ICF$(125,4),3," ")="" THEN TOTAL_QTY=TOTAL_QTY+ICF[4]*ICF[3] ELSE TOTAL_QTY=TOTAL_QTY+ICF[4]*ICF[2]*ICF[3]
7280 GOTO 7230
7300 IF TOTAL_QTY=0 THEN GOTO 7499; REM "We don't have any lots left so exit
7320 REM "READ BACK THROUGH A PRORATE COST AMONG LOTS
7330 READ (Z[17],KEY=FS2$(161,10)+FS2$(19,10),DOM=7331)
7340 K17$=KEY(Z[17],END=7400); IF K17$(1,20)<>FS2$(161,10)+FS2$(19,10) THEN GOTO 7400 ELSE EXTRACT (Z[17],KEY=K17$,DOM=7340)IOL=0440; IF ICF$(41,8)<>J$(1,8) THEN READ (Z[17]); GOTO 7340
7350 IF STP(ICF$(125,4),3," ")="" THEN ICF_QTY=ICF[4]*ICF[3] ELSE ICF_QTY=ICF[4]*ICF[2]*ICF[3]
7360 ICF_COST=ICF_QTY*COST_2_DIST/TOTAL_QTY; ICF[0]=ICF[0]+ICF_COST,COST_2_DIST=COST_2_DIST-ICF_COST,TOTAL_QTY=TOTAL_QTY-ICF_QTY
7370 WRITE (Z[17],KEY=K17$)IOL=0440
7380 IF TOTAL_QTY=0 THEN GOTO 7499; REM " We don't have any lots left so get out
7385 GOTO 7340
7400 IF COST_2_DIST<>0 THEN GOTO 7200; REM "Some left, but someone removed an ICF record while we weren't looking - distribute what's left
7500 REM " Update the Order Booking File
7505 REM " If we're not going to update history, write the FS1 record
7506 REM " MUST do the P = before the call or it WON'T WORK!!
7507 REM " -1 backs out Booking Record - change FS2 record and write - +1 checks to see there's a difference and recreates new record
7508 REM " Should end up with three records
7510 REM "IF P1$(298,1)<>"Y" THEN WRITE (Z[3],KEY=A$(1,8)+A$(20,3)) IOL=00430; GOTO 07700
7511 IF P1$(298,1)<>"Y" THEN GOTO 7700
7512 FS2[1]=J[5] ! SSP 239339
7513 CALL "FM2EXT",13,0,FS2$(124,4),FS2[2],FS2[0],FS2[1],E,P9
7515 FS2[3]=E
7516 P=POS(" "=FS1$(232,5)); IF P=0 THEN ESCAPE ELSE FS1$(232+P-1,1)="B"
7525 CALL "FM2ODH",X3$,-1,FS1$,FS1{ALL}
7527 WRITE (Z[3],KEY=J$(1,8)+J$(20,3))IOL=0430
7528 P=POS(" "=FS1$(232,5)); IF P=0 THEN ESCAPE ELSE FS1$(232+P-1,1)="D"
7530 CALL "FM2ODH",X3$,1,FS1$,FS1{ALL}
7537 REM "WRITE (Z[12],KEY=FS1$(118,8)) IOL=00450
7550 IF C0$="UPDATE" THEN GOTO 7020
7600 REM "Set flag in PO2
7640 IF J$(10,10)<>BLANK$(1,10) THEN CST_FLAG$="Y"; GOTO 7680
7645 IF J$(10,10)=BLANK$(1,10) THEN CST_FLAG$="P"; GOTO 7680
7650 REM " DONT' NEED TO SET FLAG
7655 CST_FLAG$=""
7700 IF C0$="CHECK" THEN GOTO 9100
8000 REM "Check to see if flag is in any PO2 Records
8010 IF C0$<>"FLAG_CHECK" THEN GOTO 9100
8020 READ (Z[4],DOM=8021,KEY=A$(297,8))
8030 CST_FLAG$=""
8040 K4$=KEY(Z[4],END=9100)
8045 IF Q1$="" THEN GOTO 9100
8050 IF K4$(1,8)<>Q1$(1,8) THEN GOTO 9100
8060 DIM PO2[27]; READ (Z[4],KEY=K4$)IOL=0470
8070 IF POS(PO2$(2,1)="PY")<>0 THEN CST_FLAG$=PO2$(2,1); GOTO 9100
8080 GOTO 8040
8500 REM "First time through PO2MAG need to read through all lines
8520 DIM FS1[13]; READ (Z[2],KEY=Q1$,DOM=8521,END=7650)IOL=0450
8530 IF POS(MID(FS1$,47,1)="RW")>0 THEN GOTO 7650
8540 IF POS(MID(FS1$,54,1)="B") THEN GOTO 7650
8550 REM " Now read through all the FS2 lines
8560 DIM FS2[29]; READ (Z[3],KEY=Q1$,DOM=8561,END=7650)
8570 K3$=KEY(Z[3],END=7650); REM " SSP# 142398 - HANGING WHEN ENTERING ORDER AND GOING IMMEDIATELY INTO PO RECEIVING
8580 IF K3$(1,8)<>Q1$ THEN GOTO 7650
8590 READ (Z[3],KEY=K3$)IOL=0430
8600 IF FS2$(18,1)<>"Y" THEN GOTO 8570
8610 REM " Now read PO3
8620 READ (Z[15],KEY=FS2$(147,8)+" "+FS2$(6,3),DOM=8621,END=7650)
8630 K15$=KEY(Z[15],END=7650)
8640 IF K15$(1,8)<>Q1$(1,8) THEN GOTO 8570
8650 DIM PO3[3]; READ (Z[15],KEY=K15$)IOL=0460
8660 IF PO3$(7,4)=BLANK$(1,4) THEN GOTO 8630
8670 IF POS(PO3$(11,1)="D")=0 THEN GOTO 8630
8680 IF PO3$(11,1)="D" AND PO3$(12,1)<>"9" THEN GOTO 8630
8690 CST_FLAG$="P"
8700 GOTO 9100
8800 REM "end of routine
8900 REM "Read PO2
8905 TOT_PO2=0
8910 DIM PO2[27]
8920 ! EAD (Z[4],KEY=J$(1,8),DOM=8921)
8930 KK4$=J$(1,9)+J$(20,3) ! SSP 239339 K4$=KEY(Z[4],END=8960)
8940 FIND (Z[4],KEY=KK4$,DOM=*NEXT)IOL=0470 ! SSP 239339
8950 TOT_PO2=PO2[11]
8960 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9045 REM 
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 REM "SETERR 09000; GOSUB 06400
9515 SETERR 9000
9520 IF Y5=68 THEN RETRY ELSE ON C9 GOTO 1140,2040
9750 REM "OPEN FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 9790,9761
9770 ESCAPE ; GOTO 9760; REM "FILE OPEN PROBLEM
9790 RETURN 
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 BEGIN ; SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM "191855-Error 47 in po receiving                                    
56002 REM "239339-Order 10-301472 is showing unbilled cost as $4,700 on the   
