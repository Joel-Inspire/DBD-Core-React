0010 ! QL2ORD - XML Data change file upload from DBD to EQD for QNET customers Open Orders
0035 REM "5.7 - 04/19/22 - 14.340622 - jvv - SSP# 307387
0037 REM "307387-EQLink DBD Bridge to Qnet                                   
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 BEGIN 
0090 CLEAR ; SETERR 0100; ENTER 
0100 SETERR 9000
0102 GOSUB SET_READONLY
0110 X0$="QL2ord",X1$="Open Order XML upload to EQD"
0130 IF NOT(BKG) AND NOT(GUI_MODE) THEN PRINT 'CS',@(0,3),"Utility to Create EQ Link Open Order XML files "
0140 IF (BKG) THEN GOSUB GET_ENVIRONMENT
0163 X0=-1
0164 ! %LOG_LEVEL=-1
0165 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0300 ! IO list
0310 DIM AR1[15],FS1[13],FS2[29],AR5[15]
0315 DIM FMPD$(300),FMPD[6]
0318 DIM IC0[33],FM1[31],IC1[20],P[2]
0320 DIM FMPM$(241),FMPM[11]
0325 ! iolist for customer information
0330 AR1_IOL:IOLIST AR1$,AR1[0],AR1[1],AR1[2],AR1[3],AR1[4],AR1[5],AR1[6],AR1[7],AR1[8],AR1[9],AR1[10],AR1[11],AR1[12],AR1[13],AR1[14],AR1[15]
0335 ! iolist for Order
0340 IOLIST FS1$,FS1[0],FS1[1],FS1[2],FS1[3],FS1[4],FS1[5],FS1[6],FS1[7],FS1[8],FS1[9],FS1[10],FS1[11],FS1[12],FS1[13]
0345 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24],FS2[25],FS2[26],FS2[27],FS2[28],FS2[29]
0350 IOLIST FM0$(1)
0355 FMPD_IOL:IOLIST FMPD$(1),FMPD{ALL}
0360 FMPM_IOL:IOLIST FMPM$(1),FMPM{ALL} ! Freight Markup
0365 IC0_IOL:IOLIST IC0$,IC0{ALL}
0370 FM1_IOL:IOLIST FM1$,FM1{ALL}
0375 IC1_IOL:IOLIST IC1$,IC1{ALL}
0380 FSW_IOL:IOLIST FSW$,FSW{ALL}
0385 FM5_IOL:IOLIST FM5$,FM5{ALL}
0390 FM3_IOL:IOLIST FM3$,FM3{ALL}
0395 FM4_IOL:IOLIST FM4$,FM4{ALL}
0400 DRT_IOL:IOLIST TABLE_NAME$,DATA_KEY$,CHANGE_TYPE$,CHANGE_TS$,OPER_CODE$,FID$
0410 IOLIST MDATA$,MTYPE$,ECUST$,DT1$,DT2$
0420 IF %LOG_LEVEL=%LOG_DEBUG THEN {
0430 LOG_OPTIONS$="A"; CALL "ZZ2LOG;OPEN_LOG",ERR=*NEXT,X3$,X4$,FN%GET_BASENAME$(PGN)+"."+FID(0)+".log",LOG_OPTIONS$,LOG_CHANNEL
0440  }
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1...  02O FM0...  03O IC1...  040 FS1...  05O FM1...  06O FS2...  13O ZZPARM  07O IC0...  08O FMP...  09O PO1...  10O FM5...  11O ASW...  12O FSW...  14O FM3...  15O FM4...  16O AR3...  17O PO3...  18O AR5...  19O KT0...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0565 FM1_CHL=UNT; OPEN (FM1_CHL,IOL=*)"FM1"+%C$
0700 ! Set Variables
0710 XHDG$="EQLINK"
0740 QLPARAM$=""; FIND (Z[13],KEY=%C$+"Q/L",DOM=*NEXT)QLPARAM$
0770 RPLC$="Y" ! All open orders are replaced
0780 IF (BKG) THEN LOG_MSG$="QL2ORD|BKGMODE|"; GOSUB LOG_MSG ELSE LOG_MSG$="QL2ORD|NOT BKGMODE|"; GOSUB LOG_MSG
1000 ! Process open Orders for All Eqlink Customers
1010 GOSUB GET_CUST_LIST
1020 NEWFL=0,HLD_DIV$=DIM(2)
1025 FIRSTOO=0,QFRM$="QORD"
1050 FOR PCNT=1 TO LEN(CUST_LIST$) STEP 10
1060 OCUST$=CUST_LIST$(PCNT,10)
1070 OOCNT=0,KMDIV$=OCUST$(1,2)
1080 SELECT * FROM "FS1"+%C$,KNO=1 WHERE CUST_DIV$+CUST_CODE$=OCUST$
1090 OOCNT=OOCNT+1
1100 NEXT RECORD 
1110 IF OOCNT=0 THEN CONTINUE
1120 CUST$=OCUST$; GOSUB CHECK_EQLINK_CUST; IF NOT(QCUST) THEN CONTINUE
1200 IF KMDIV$<>HLD_DIV$ THEN GOSUB END_ORD_FILE; GOSUB CREATE_ORD_FILE
1250 PERFORM "QL2EQD;OPEN_ORDER_XML"
1270 NEXT PCNT
1275 GHDG$="OPEN_PO_SECTION"; GP=3; PERFORM "QL2EQD;END_GROUP"
1280 PERFORM "QL2EQD;END_XML_FILE"
1290 GOTO 9900
1299 ! 
2099 ! 
3000 GET_CUST_LIST:
3005 CUST_LIST$=""
3010 READ (Z[1],KEY="",DOM=*NEXT)
3020 NEXT_CAT_AR1:
3025 KC$=KEY(Z[1],END=END_GET_LIST); READ (Z[1],KEY=KC$)AR1C$
3030 IF MID(AR1C$,563,1)="Y" THEN GOTO *NEXT ELSE GOTO NEXT_CAT_AR1
3040 CUST_LIST$=CUST_LIST$+KC$
3050 GOTO NEXT_CAT_AR1
3090 END_GET_LIST:RETURN 
3099 ! 
4000 CHECK_EQLINK_CUST:
4010 QCUST=0,ECUST$=""
4015 IF STP(CUST$,2)="" THEN GOTO END_EQLINK_CUST
4020 FIND (Z[1],KEY=CUST$,DOM=END_EQLINK_CUST)IOL=AR1_IOL
4030 IF POS(MID(AR1$,563,1)="YA")=0 THEN GOTO END_EQLINK_CUST
4040 QCUST=1
4050 ECUST$=AR1$(564,6)
4080 END_EQLINK_CUST:
4090 RETURN 
4099 ! 
6100 LOG_MSG:
6120 IF %LOG_LEVEL=%LOG_DEBUG THEN {
6130 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,LOG_CHANNEL,LOG_MSG$,%LOG_DEBUG
6140  }
6145 RETURN 
6199 ! SET_ORDER_FILE:
6599 ! 
7000 CREATE_ORD_FILE:
7005 XFILE$="OpenOrdersOnly"
7008 XDIV$=MID(KMDIV$,1,2)
7010 PERFORM "QL2EQD;CREATE_XML_FILE"
7015 HLD_DIV$=KMDIV$
7030 EXIT_XML_ORD_FILE:
7035 HEADER$="",TF_VALUE$="",CCNT=0,CHDR$="",CDTL$="",SHDR$="",SDTL$="",SCNT=0,ICNT=0,UCNT=0
7040 RETURN 
7049 ! 
7050 END_ORD_FILE:
7055 IF HLD_DIV$=DIM(2) THEN RETURN 
7058 GHDG$="OPEN_PO_SECTION"; GP=3; PERFORM "QL2EQD;END_GROUP"
7060 PERFORM "QL2EQD;END_XML_FILE"
7065 RETURN 
7090 ! 
7190 ! 
7251 FNX:
7252 DEF FNX$(LOCAL X$)
7265 TRANSLATE X$,"&"+$05$+"&amp;"+"<"+$04$+"&lt;"+">"+$04$+"&gt;"+QUO+$06$+"&quot;"+"'"+$06$+"&apos;" ! SSP247374, fix for apostrophe
7270 RETURN X$
7295 END DEF
7299 ! 
7500 REM "Get command line args and set environment
7510 GET_ENVIRONMENT:
7520 REM " ENV_ID= Specify the "TFE" record code used to grab environment for the current session
7530 FOR I=0 TO NAR
7540 TMP$=ARG(I)
7550 IF MSK(UCS(TMP$),"ENV_ID=") THEN ENV_ID$=PAD(MID(TMP$,MSL+1),8); CONTINUE ! Set ENV_ID (required, eg: EC3SRV or OUTDIR)
7555 IF MSK(UCS(TMP$),"LOG_LEVEL=") THEN %LOG_LEVEL=NUM(MID(TMP$,MSL+1)); CONTINUE ! Set LOG_LEVEL global
7560 NEXT I
7570 CLOSE (14); OPEN (14)"ZZPARM"; READ (14,KEY="TFE"+ENV_ID$)X3$,*,X4$; X3$(1,8)=FID(0)+DIM(6),X3$(169,3)=FID(0)
7580 WRITE (14,KEY=X3$(1,8))X3$,"",X4$; %X3$=X3$,%X4$=X4$,%X3_SET=1
7585 CLOSE (14)
7590 RETURN 
7599 ! 
8500 SET_READONLY:REM "Set the PRM READONLY to on
8510 SAVE_XI=PRM('XI'); SET_PARAM 'XI' ! Ignore exclusive locks, save previous setting
8525 SET_READONLY_END:RETURN 
8530 CLEAR_READONLY:REM "Restore previous setting
8535 SET_PARAM 'XI'=SAVE_XI ! restore previous setting
8545 CLEAR_READONLY_END:RETURN 
9000 REM "ERROR PROCESSING
9001 LOG_MSG$="QL2ORD|ERROR BEFORE RELEASE|"; GOSUB LOG_MSG
9005 IF NOT(BKG) THEN ESCAPE 
9900 REM "END PROGRAM
9905 SETERR 9910; GOSUB CLEAR_READONLY
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9912 LOG_MSG$="QL2ORD|BEFORE RELEASE|"; GOSUB LOG_MSG
9915 ! CLOSE (*)
9920 IF BKG THEN RELEASE 
9925 LOG_MSG$="QL2ORD|NONBKG RELEASE|"; GOSUB LOG_MSG
9930 SETERR 9940; Q1$=A1$; RELEASE 
9935 LOG_MSG$="QL2ORD|AFTER RELEASE|"; GOSUB LOG_MSG
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM "307387-EQLink DBD Bridge to Qnet                                   
