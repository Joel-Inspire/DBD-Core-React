0010 REM "Inventory Lot Receiving <IC2LAG>
0015 REM "Prog Type: I -3.0A    
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 01/16/17 - 12.620277 - dmm - SSP# 288437
0037 REM "288437-Ability to enter/override lot number in IC Trans Entry. Appl
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0081 REM "Q1$(1,20)=Item code, Q1$(21,4)=Location  ! SSP245429 jdf
0082 REM "Q0$(1,1)=type, 'A'djustment or 'R'eciept
0083 REM "Q0$(2,11)=Trans#,line index # to commit with
0084 REM "Q0=quantity adjustment, Q1=cost adjustment, Q2 = freight Adjustment
0085 REM CLEAR ; LET Q1$="          0000100   0001",Q0$="A           "; GOTO 00100
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$,Q0,Q1,Q2
0100 SETERR 9000; SETESC 9300
0110 X0$="IC2LAG",X1$="Inventory Lot Setup",K9$="",K9=0
0120 DIM Z0$(80,"-"),S0$(80)
0130 K0=32,K1=5
0135 C9=-1
0140 M0$="###,###.00-",M1$="####,###.00-",M2$="###,##0-",M3$="###,##0-",M4$="#,###,##0-"
0145 IF Q1$="" THEN GOSUB 8950
0150 V8$="00031112202399"
0200 REM "
0235 IF Q1$<>"" THEN X2=-1
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0315 IOLIST A0$,A0[0],A0[1],A0[2],A0[3],A0[4],A0[5],A0[6],A0[7],A0[8],A0[9],A0[10],A0[11],A0[12]
0316 IOLIST B0$,B0[0],B0[1],B0[2],B0[3],B0[4],B0[5],B0[6],B0[7],B0[8],B0[9],B0[10],B0[11],B0[12]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20],C[21],C[22],C[23],C[24],C[25],C[26],C[27],C[28],C[29],C[30]
0340 IOLIST D$
0345 IOLIST D1$
0350 IOLIST E$,E[0],E[1],E[2],E[3]
0360 IOLIST F$
0370 IOLIST G$
0375 IOLIST G5$,G5[0],G5[1]
0400 IOLIST L$,L[0],L[1],L[2]
0410 IOLIST R$,R[0],R[1],R[2],R[3],R[4],R[5],R[6]
0415 IOLIST R0$,R0[0],R0[1],R0[2],R0[3],R0[4],R0[5],R0[6]
0420 IOLIST S9$
0425 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ICF...  02O AR1...  03O IC0...  04O FM0...  05O FS6...  06O PO1...  07O AP4...  08O ICK...  09O FS1...  10O PO2...  12O IC1...  13O ZZPARM  15O AR3...  "
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0559 READ (Z[13],KEY=X3$(9,3)+"F/M",DOM=*NEXT)FM_PARMS$
0560 READ (Z[13],KEY=X3$(9,3)+"I/C",DOM=*NEXT)IC_PARM$
0580 DIM SEC$(255); READ (Z[13],KEY="osec"+X3$(40,3),DOM=0581)SEC$
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
1000 REM "
1010 Y8=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1015 DIM V7$(28); V7$(1,1)="1",V7$(2,1)="1",V7$(5,1)="1",V7$(6,1)="1",V7$(12,1)="1",V7$(13,1)="1",V7$(20,1)="1"
1030 DIM B$(400),B[15],C$(128),C[30],D$(224),E$(168),E[7],F$(259),F[23],G$(310),G[2],S$(50),D1$(200),G5[2]
1031 F0$=""
1032 IF A$>"" THEN A6$=A$,SELLQTY=A[6] ELSE A6$=""
1035 DIM A$(269),A[12]
1036 IF Q1$>"" THEN A$(1,LEN(Q1$))=Q1$; IF F0=0 THEN GOSUB 8000
1037 A$(129,4)=C$(124,4),A[6]=C[15]
1038 S1=S1+1
1039 A$(31,2)=STR(S1:"00"); IF LEN(A1$)>=32 THEN A1$(31,2)=STR(S1:"00")
1040 A$(33,8)=R9$,A$(100,10)=B9$,A$(82,9)=N9$,A$(41,9)=P9$,A$(56,12)=P8$,A$(215,6)=P7$
1041 IF LEN(Q1$)>24 THEN A$(50,6)=Q1$(25,6),A$(68,14)=Q1$(31); GOSUB 5800
1044 GOSUB 6000
1045 A$(1,LEN(A1$))=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1050 IF A6$>"" THEN A$=A6$,A[6]=SELLQTY,SELLQTY=0,A$(31,2)="",A$(121,8)=""; GOSUB 5800
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6211; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0,S9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1250,1300,1350,1400,1500
1200 REM "Customer number
1201 GOSUB 7600; GOTO 1220
1202 REM IF Q1$>"" THEN LET A$(1)=Q1$; GOTO 01220
1205 IF LEN(A1$)>0 THEN A$(1,10)=A1$(1,10); GOTO 1220
1206 IF ABS(C0)<>2 THEN GOTO 1220
1210 CALL "ZZENTR","AXUX",A{ALL},A$,X4$,X3$,18,5,1,10,C0,"A/R","{1"+X$,K9$,"IC2LAG00","AR1","AR2MAB",""; IF C0=6 THEN GOSUB 6400; C0=1
1212 IF INT(ABS(C0))=3 THEN C0=-ABS(C0); READ (Z[1],KEY=A$(1,10),DOM=1213)
1214 IF C0=-1 AND POS(" "<>A$(1,10))=0 THEN GOTO 1220
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1219 IF POS(" "<>A$(1,10))=0 THEN DIM B$(100); GOTO 1225
1220 IF V9<>-2 THEN IF POS(" "<>A$(1,10))=0 THEN GOTO 1240 ELSE FIND (Z[2],KEY=A$(1,10),DOM=1210)IOL=0320
1222 IF Q1$>"" THEN PRINT (0,ERR=1225)'SB',
1223 A$(263,4)=MID(B$,278,4); PRINT @(71,20),A$(263,4),
1225 PRINT @(31,3),B$(11,30),
1226 IF Q1$>"" THEN PRINT (0,ERR=1227)'SF',
1240 GOTO 1120
1250 REM "Item Code  ! SSP245429 jdf
1251 C0=0; GOTO 1270
1252 IF Q1$>"" THEN A$(1)=Q1$; GOSUB 6450; GOTO 1270
1255 IF LEN(A1$)>10 THEN A$(11,10)=A1$(11,10); GOTO 1270
1259 J$=A$(1,10)
1260 CALL "ZZENTR","DUX",A{ALL},A$,X4$,X3$,18,6,11,10,C0,"ICE","{2"+X$,J$,"IC2LAG02","IC0","IC2MAB",""; IF C0=6 THEN GOSUB 6400; C0=1
1261 IF ABS(C0)=2 AND LEN(A1$)>0 THEN A1$=A1$(1,0)
1262 READ (Z[1],KEY=A$(1,20),DOM=1263)
1263 IF ABS(C0)=4 THEN GOTO 9800
1264 IF ABS(INT(C0))=3 THEN GOTO 6800
1265 IF ABS(C0)=2 THEN GOTO 1290
1270 IF V9<>-2 THEN FIND (Z[3],KEY=A$(1,20),DOM=1260)IOL=0330
1274 IF Q1$>"" THEN PRINT (0,ERR=1275)'SB',
1275 PRINT @(31,4),C$(21,40),
1276 IF Q1$>"" THEN PRINT (0,ERR=1277)'SF',
1290 GOTO 1120
1300 REM "Location code
1301 GOTO 1320
1306 Q$=A$(1,20)
1307 IF ABS(C0)<>2 THEN IF POS(" "<>A$(21,4))<>0 THEN GOTO 1320
1310 CALL "ZZENTR","SZUX",A{ALL},A$,X4$,X3$,18,7,21,4,C0,"","{2"+R6$,"","IC2LAG04","IC1","FM2SKA",""; IF C0=6 THEN GOSUB 6400; C0=1
1311 IF ABS(C0)=2 AND LEN(A1$)>10 THEN A1$=A1$(1,10)
1312 READ (Z[1],KEY=A$(1,24),DOM=1313)
1313 IF ABS(C0)=4 THEN GOTO 1340
1320 IF V9<>-2 THEN FIND (Z[4],KEY="D"+S$(1,10)+A$(21,4),DOM=1310)IOL=0340
1325 GOSUB 7550; GOSUB 7700
1330 IF C0>0 THEN S1=1,A$(31,2)="01"
1340 GOTO 1120
1350 REM "Receipt date
1357 Q$=A$(1,24)
1360 CALL "ZZENTR","DUX",A{ALL},A$,X4$,X3$,18,6,25,6,C0,"","{2"+X$,Q$,"IC2LAG06","/IC2FLT","",""; IF C0=6 THEN GOSUB 6400; ON C0 GOTO 1360,1361
1361 IF ABS(C0)=2 AND LEN(A1$)>20 THEN A1$=A1$(1,20)
1362 REM READ (Z(1),KEY=A$(1,30),DOM=01363)
1363 IF Q1$>"" THEN C9=INT(ABS(C0)); IF C9=2 OR C9=3 THEN C0=1; GOTO 1360
1364 IF ABS(C0)=2 THEN GOTO 9900 ELSE IF INT(ABS(C0))=3 THEN GOTO 6800
1390 GOTO 1120
1400 REM "Sequence no
1407 Q$=A$(1,30),A$(110,11)=""
1410 CALL "ZZENTR","SZUX",A{ALL},A$,X4$,X3$,18,7,31,2,C0,"","{2"+X$,Q$,"IC2LAG08","/IC2FLT","",""; IF C0=6 THEN GOSUB 6400; C0=1
1411 IF ABS(C0)=2 AND LEN(A1$)>24 THEN A1$=A1$(1,24)
1412 READ (Z[1],KEY=A$(1,32),DOM=1413)
1415 IF INT(ABS(C0))=3 THEN GOTO 6800 ELSE IF ABS(C0)=4 THEN GOTO 9900
1440 GOTO 1120
1500 REM "
1505 Z9=-1,C9=0,A2$="",A3$="",A4$="",A5$=""
1510 A1$=A$(1,32)
1511 REM "Read ICK first to see if already exists, if not, then get the ICF record. If ICK exist, check order line# to see if committed to this line or not
1513 READ (Z[8],KEY=Q0$(2,11)+A1$,DOM=1520)IOL=0310
1515 IF A$(221,11)<>Q0$(2,11) THEN GOSUB 8250; GOTO 1630
1516 REM "If still here, then we are modifing an existing line so don't read the real record.
1517 GOTO 1525
1520 READ (Z[1],ERR=7200,KEY=A1$,DOM=1600)IOL=0310
1524 IF Q0$(1,1)="R" THEN CALL "ZZPROM",".4",X3$,Z,"This lot already exists, use Adjustments to change the value","","",0; GOTO 1630
1525 Z9=0,V7$=""; GOSUB 5800
1530 IF POS(" "<>A$(110,11))>0 THEN FIND (Z[9],KEY=A$(110,8),DOM=1531)X$; IF X$(63,1)="Y" THEN GOSUB 8250; GOTO 1630
1535 IF POS(" "<>A$(221,11))<>0 AND A$(221,11)<>Q0$(2,11) THEN GOSUB 8250; GOTO 1630
1550 REM "LET S1=NUM(A$(31,2),ERR=01536)
1590 GOTO 1700
1600 REM "
1610 IF Q0$(1,1)="A" THEN GOSUB 7850; IF K$="*" THEN GOTO 1630
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 GOTO 1000
1680 GOSUB 7450
1685 T7=0,T8=0,T9=0
1686 GOSUB 7650 ! WO288437, assign lot number for new lot
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1810 IF A[5]=0 THEN A$(129,4)=DIM(4),A(6)=0; PRINT @(48,12),A[5]:M0$,@(66,12),A$(129,4),@(72,12),A[6]:M2$ ! SSP#229753
1820 CALL "ZZPROM","7",X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700,1821
1825 GOTO 6700
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 GOSUB 7400
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 SETERR 9000; X$="",Q$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF INT(C0)=3 THEN GOSUB 7300 ELSE IF C0>3 OR X0<0 THEN GOTO 1800
2038 IF X0<LEN(V7$) THEN V7$(X0+1,1)=""
2040 ON X0 GOTO 2150,2200,2250,2300,2350,2100,2600,3400,3450,3500,3550,3600,2950,2750,2850,2800,2900,3250,2400,2450,3300,2500,2550,3650,3700,3800,3850,1800
2100 REM "Receiving report
2110 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,18,11,33,8,C0,"","{3"+X$,"","IC2LAG10","PO7","PO2MAC",""; IF C0=6 THEN GOSUB 6400; C0=1
2140 GOTO 2020
2150 REM "P/O Number
2160 CALL "ZZENTR","AU",A{ALL},A$,X4$,X3$,18,9,41,9,C0,"P/O","{3"+X$,"","IC2LAG03","PO1","PO2MAB",""; IF C0=6 THEN GOSUB 6400; C0=1
2190 GOTO 2020
2200 REM "P/O Date
2210 CALL "ZZENTR","D",A{ALL},A$,X4$,X3$,41,9,50,6,C0,"","{3"+X$,"","IC2LAG05","","",""; IF C0=6 THEN GOSUB 6400; C0=1
2240 GOTO 2020
2250 REM "Job number
2260 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,66,9,56,12,C0,"","{3"+X$,"","IC2LAG07","","",""; IF C0=6 THEN GOSUB 6400; C0=1
2290 GOTO 2020
2300 REM "Vendor
2310 CALL "ZZENTR","AU",A{ALL},A$,X4$,X3$,18,10,68,10,C0,"A/P","{3"+X$,"","IC2LAG09","AP4","AP2MAB",""; IF C0=6 THEN GOSUB 6400; C0=1
2320 FIND (Z[7],KEY=A$(68,10),DOM=2310)IOL=0370
2325 GOSUB 7500
2340 GOTO 2020
2350 REM "Plant
2360 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,32,10,78,4,C0,"","{3"+X$,"","IC2LAG11","FM0","",""; IF C0=6 THEN GOSUB 6400; C0=1
2364 IF POS(" "<>A$(78,4))=0 THEN GOTO 2390
2365 FIND (Z[4],KEY="P"+A$(68,10)+A$(78,4),DOM=2360)IOL=0345
2370 GOSUB 7500
2390 GOTO 2020
2400 REM "Starting number
2410 CALL "ZZENTR","R",A{ALL},A$,X4$,X3$,18,18,82,9,C0,"","{3"+X$,"","IC2LAG22","","",""
2415 IF C0>0 THEN GOSUB 8200
2440 GOTO 2020
2450 REM "Ending number
2460 CALL "ZZENTR","R",A{ALL},A$,X4$,X3$,18,19,91,9,C0,"","{3"+X$,"","IC2LAG24","","",""
2490 GOTO 2020
2500 REM "Total cost
2508 X$="Enter total extended cost - F2 key to extend entered cost per M"
2510 CALL "ZZENTR","NF",A{ALL},A$,X4$,X3$,45,18,0,621,C0,M0$,"{3"+X$,"","IC2LAG26","","",""
2515 IF C0<>11 THEN GOTO 2520
2516 IF A$(125,4)="    " THEN N=A[4]*A[3] ELSE N=A[4]*A[2]*A[3]
2517 C0=1; CALL "FM2EXT",Z[13],0,"M   ",1000,N,A[0],E,2
2518 A[0]=E; PRINT @(45,18),A[0]:M0$,
2540 GOTO 2020
2550 REM "Total Freight
2555 IF A$(110,11)<>DIM(11) THEN GOTO 2020 ! SSP#238015         
2560 CALL "ZZENTR","N&",A{ALL},A$,X4$,X3$,45,19,1,621,C0,M0$,"{3"+X$,"","IC2LAG28","","",""
2590 GOTO 2020
2600 REM "Bin Location  ! SSP245429 jdf
2610 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,18,12,100,10,C0,"","{3"+X$,"","IC2LAG30","","",""
2635 IF ABS(C0)<>2 THEN X0=X0+4
2640 GOTO 2020
2650 REM "Order number
2655 GOTO 2020
2660 CALL "ZZENTR","A",A{ALL},A$,X4$,X3$,66,12,110,8,C0,"O/P","{3"+X$,"","IC2LAG32","FS1","FM2ODA",""; IF C0=6 THEN GOSUB 6400; C0=1
2670 IF V9<>-2 THEN FIND (Z[5],KEY=A$(110,8),DOM=2671)IOL=0350
2690 GOTO 2020
2700 REM "Line number on order
2710 CALL "ZZENTR","Z",A{ALL},A$,X4$,X3$,76,12,118,3,C0,"","{3"+X$,"","IC2LAG34","FS2","FM2ODB",""; IF C0=6 THEN GOSUB 6400; C0=1
2720 IF V9<>-2 THEN FIND (Z[8],KEY=A$(118,3),DOM=2721)IOL=0360
2740 GOTO 2020
2750 REM "Primary unit
2754 IF A[4]=0 OR A$(110,11)<>DIM(11) THEN GOTO 2020 ! SSP#238015
2755 J1=1; GOSUB 8500
2760 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,J0,15,121,4,C0,"","{3"+X$,"","IC2LAG36","","",""
2764 FIND (Z[13],KEY="U/M"+A$(121,4),DOM=2760)
2765 IF ABS(C0)>2 THEN J1=-1; GOSUB 8500
2790 GOTO 2020
2800 REM "Packaging unit
2803 IF A[2]=0 THEN GOTO 2840
2804 IF ABS(C0)>1 AND POS(" "<>A$(125,4))=0 THEN GOTO 2840
2805 J1=3; GOSUB 8500
2810 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,J0,15,125,4,C0,"","{3"+X$,"","IC2LAG38","","",""
2814 IF POS(" "<>A$(125,4))<>0 THEN FIND (Z[13],KEY="U/M"+A$(125,4),DOM=2810)
2815 IF A$(125,4)="    " THEN IF A[3]=0 THEN A[3]=A[2],A[2]=0,F0$="*"; J1=-1; GOSUB 8500 ELSE A[2]=0,J1=-1; GOSUB 8500
2816 IF C0>0 THEN GOSUB 8200; GOSUB 8350
2820 IF ABS(C0)>2 THEN J1=-1; GOSUB 8500
2840 GOTO 2020
2850 REM "Units per package
2854 IF A[4]=0 OR A$(110,11)<>DIM(11) THEN GOTO 2020 ! SSP#238015
2855 J1=2; GOSUB 8500
2860 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,J0,15,2,601,C0,M3$,"{3"+X$,"","IC2LAG40","","",""
2864 IF C0>0 AND A[2]=0 THEN A$(125,4)="",J1=-1; GOSUB 8500
2865 IF ABS(C0)>2 THEN J1=-1; GOSUB 8500
2875 IF C0>0 THEN GOSUB 8200; GOSUB 8350
2890 GOTO 2020
2900 REM "Units per primary/package unit
2903 IF A[4]=0 OR A$(110,11)<>DIM(11) THEN GOTO 2020 ! SSP#238015
2904 IF F0$="*" THEN F0$=""; GOTO 2940
2905 J1=4; GOSUB 8500
2910 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,J0,15,3,601,C0,M3$,"{3"+X$,"","IC2LAG42","","",""
2920 J1=-1; GOSUB 8500
2925 IF C0>0 THEN GOSUB 8200; GOSUB 8350
2940 GOTO 2020
2950 REM "Quantity
2955 J1=0; GOSUB 8500
2958 IF A$(110,11)<>DIM(11) THEN GOTO 2965 ! SSP#238015
2960 CALL "ZZENTR","NM&",A{ALL},A$,X4$,X3$,18,15,4,702,C0,M4$,"{3"+X$,"","IC2LAG44","","TPALAA",""; IF C0=6 THEN GOSUB 6400; C0=1
2965 IF ABS(C0)>1 THEN J1=-1; GOSUB 8500
2975 IF C0>0 THEN GOSUB 8200; GOSUB 8350
2990 GOTO 2020
3150 REM "Customer PO
3155 IF Q0$(1,1)<>"R" THEN GOTO 2020
3160 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,46,15,133,15,C0,"","{3"+X$,"","IC2LAG52","","",""
3190 GOTO 2020
3200 REM "Invoice number
3205 GOTO 2020
3210 CALL "ZZENTR","A",A{ALL},A$,X4$,X3$,71,15,148,7,C0,"AR6","{3"+X$,"","IC2LAG54","","",""
3240 GOTO 2020
3250 REM "SHORT CARTON
3260 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,18,16,155,1,C0,"","{3"+X$,"","IC2LAG67","","",""
3290 GOTO 2020
3300 REM "Comments
3310 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,18,20,156,40,C0,"","{3"+X$,"","IC2LAG48","","",""
3340 GOTO 2020
3400 REM "Customer P/O
3410 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,45,11,133,15,C0,"","{3"+X$,"","IC2LAG50","","",""
3440 GOTO 2020
3450 REM "Sales price
3460 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,48,12,5,621,C0,M0$,"{3"+X$,"","IC2LAG52","","",""
3470 REM "IF A[5]=0 THEN LET A$(129,4)="", A[6]=0; PRINT @(66,12),A$(129,4),@(72,12),A[6]:M2$,
3490 GOTO 2020
3500 REM "U/M
3505 IF A[5]=0 THEN GOTO 2020
3510 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,66,12,129,4,C0,"","{3"+X$,"","IC2LAG54","","",""
3514 IF POS(" "<>A$(129,4))=0 AND A[5]=0 THEN GOTO 3540 ! SSP#229753
3515 READ (Z[13],KEY="U/M"+A$(129,4),DOM=3510)IOL=0375
3525 IF G5$(20,1)="Y" THEN IF G5[0]<>0 THEN A[6]=G5[0] ELSE A[6]=G5[1]
3535 PRINT @(72,12),A[6]:M2$,
3540 GOTO 2020
3550 REM "Qty per U/M
3555 IF POS(" "<>A$(129,4))=0 OR G5$(20,1)="Y" THEN GOTO 3590
3560 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,72,12,6,520,C0,M2$,"{3"+X$,"","IC2LAG56","","",""
3570 IF STP(A$(129,4),3)<>"" AND A(6)=0 THEN GOTO 3560 ! SSP#229753
3590 GOTO 2020
3600 REM "Item Rev date
3610 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,18,13,215,6,C0,"","{3"+X$,"","IC2LAG58","","",""
3640 GOTO 2020
3650 REM " FMS Price - ssp# 157344
3652 IF MID(FM_PARMS$,306,1)<>"Y" THEN GOTO 3690
3655 X$="This FMS Price will update to FMZ if entered here"
3660 CALL "ZZENTR","N&",A{ALL},A$,X4$,X3$,69,19,9,621,C0,M0$,"{3"+X$,"","IC2LAG28","","",""
3690 GOTO 2020
3700 REM "Salesperson
3702 IF A$(1,10)=DIM(10) THEN GOTO 3740
3703 A$(263,4)=B$(278,4); PRINT @(71,20),A$(263,4),
3704 IF Q0$(1,1)="R" THEN GOTO 3740
3705 X$="You Must Enter a Valid Salesperson Code"
3707 READ (Z[15],KEY=A$(263,4),DOM=3710)
3708 IF SEC$(94,1)<>"Y" THEN GOTO 3740
3710 CALL "ZZENTR","SZXU",A{ALL},A$,X4$,X3$,71,20,263,4,C0,"","{3"+X$,"","AR2MAB46","AR3","AR2MBB",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 3710,3711
3715 READ (Z[15],KEY=A$(263,4),DOM=3700)
3740 GOTO 2020
3800 REM "Storage Expiration Date"
3802 IF MID(IC_PARM$,64,1)<>"Y" THEN GOTO 2020
3810 X$="Storage Expiration Date"; CALL "ZZENTR","D",A{ALL},A$,X4$,X3$,66,13,250,6,C0,"","{3"+X$,"","IC2LAB76","","",""
3840 GOTO 2020
3850 ! WO288437, lot number
3852 IF SEC$(170,1)<>"Y" THEN GOTO 2020
3860 CALL "ZZENTR","Z",A{ALL},A$,X4$,X3$,70,18,234,8,C0,"","{3"+X$,"","IC2LAG60","","",""
3890 GOTO 2020
3895 ! 
5800 REM "Alt sort keys
5815 FIND (Z[6],KEY=A$(41,9),DOM=5816)IOL=0360
5820 FIND (Z[7],KEY=A$(68,10),DOM=5821)IOL=0370
5825 FIND (Z[4],KEY="P"+A$(68,10)+A$(78,4),DOM=5826)IOL=0345
5840 FIND (Z[13],KEY="U/M"+A$(129,4),DOM=5841)IOL=0375
5890 RETURN 
5900 REM "No lot inventory found
5910 CALL "ZZPROM",".4",X3$,Z,"There is no inventory for this item at this location","","",0
5915 GOTO 9700
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6060 IF Q1$>"" THEN PRINT @(1,3+V0),"Customer number",@(5,4+V0),"  Item Code",@(3,5+V0),"Location code", ELSE PRINT @(1,3+V0),"Customer number:",@(5,4+V0),"  Item Code:",@(3,5+V0),"Location code:", ! SSP245429 jdf
6063 PRINT @(4,6),"Receipt date:",@(1,7),"Sequence number:",@(0,8),Z0$,
6065 PRINT @(6,9+V0),"P/O number:",@(31,9+V0),"P/O date:",@(53,9+V0),"Factory Job:",@(4,10+V0),"Vendor/Plant:",
6075 PRINT @(0,11),"Receiving report:",@(4,12),"Bin Location:",@(32,11),"Customer PO:",@(3,13),"Item Rev date:",; IF MID(IC_PARM$,64,1)="Y" THEN PRINT @(61,13),"SED:" ! SSP245429 jdf
6076 PRINT @(32,12),"Sales price:",@(61,12),"Per:",
6078 PRINT @(8,15),"Quantity:",@(12,16),"Runt?",
6080 PRINT @(1,18),"Starting number:",@(39,18),"Cost:",@(3,19),"Ending number:",@(36,19),"Freight:",@(8,20),"Comments:",
6082 IF MID(FM_PARMS$,306,1)="Y" THEN PRINT @(58,19),"FMS Price:",; REM " ssp# 157344
6083 PRINT @(58,20),"Salesperson:",; REM ssp 186762
6084 IF MID(IC_PARM$,65,1)="Y" THEN PRINT @(58,18),"Lot number:", ! WO288437
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6205 REM "D9 controls returns for displays of pieces of the screen
6210 GOSUB 6450
6212 CALL "ZZDISP","A",A$(41,9),"P/O",X3$,"","",18,9,X4$
6213 PRINT @(41,9),FND$(A$(50,6)),@(66,9),A$(56,12),
6214 CALL "ZZDISP","A",A$(68,10),"A/P",X3$,"","",18,10,X4$
6216 PRINT @(32,10),A$(78,4); GOSUB 7500
6218 IF MID(IC_PARM$,64,1)="Y" THEN PRINT @(66,13),FND$(A$(250,6))
6220 PRINT @(18,11),A$(33,8),@(18,12),A$(100,10),@(45,11),A$(133,15),
6237 IF D9=1 THEN D9=0; RETURN ; REM "P/O stuff
6256 PRINT @(48,12),A[5]:M0$,@(66,12),A$(129,4),@(72,12),A[6]:M2$,@(18,13),A$(215,6),
6280 PRINT @(18,16),A$(155,1),
6292 J1=-1; GOSUB 8500
6293 PRINT @(18,18),A$(82,9),@(45,18),A[0]:M0$,@(18,19),A$(91,9),@(45,19),A[1]:M0$,@(18,20),A$(156,40),
6294 IF MID(FM_PARMS$,306,1)="Y" THEN PRINT @(69,19),A[9]:M0$,; REM " SSP# 157344
6296 PRINT @(71,20),A$(263,4),; REM " SSP 186762
6297 IF MID(IC_PARM$,65,1)="Y" THEN PRINT @(70,18),A$(234,8), ! WO288437
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6462 IF Q1$>"" THEN PRINT (0,ERR=6463)'SB',
6463 CALL "ZZDISP","A   ",A$(1,10),"A/R",X3$,"","",18,3,X4$
6464 PRINT @(31,3),B$(11,30),
6468 CALL "ZZDISP","A   ",A$(11,10),"I/C",X3$,"","",18,4,X4$
6472 PRINT @(31,4),C$(21,40),@(18,5),A$(21,4),
6474 GOSUB 7550
6475 IF Q1$>"" THEN PRINT (0,ERR=6476)'SF',
6476 PRINT @(18,6),FND$(A$(25,6)),@(18,7),A$(31,2),
6490 RETURN 
6500 REM "DELETE
6505 S1=S1-1
6506 REM "Remove from ICK file, uncommit ICF file
6510 REMOVE (Z[8],KEY=Q0$(2,11)+A1$,DOM=6511)
6519 IF Q0$(1,1)="R" THEN GOTO 6525
6520 READ RECORD (Z[1],KEY=A1$,DOM=6525)J$
6522 J$(221,11)=""
6524 WRITE RECORD (Z[1],KEY=A1$)J$
6590 A1$=""; GOTO 1630
6600 REM "ALT KEY DATA READS
6605 FIND (Z[2],KEY=A$(1,10),DOM=6606)IOL=0320
6607 A$(263,4)=B$(278,4); PRINT @(71,20),A$(263,4),
6610 FIND (Z[3],KEY=A$(11,10),DOM=6611)IOL=0330
6615 FIND (Z[4],KEY=A$(21,4),DOM=6616)IOL=0340
6620 FIND (Z[6],KEY=A$(41,9),DOM=6621)IOL=0360
6625 READ (Z[7],KEY=A$(68,10),DOM=6626)IOL=0370
6690 RETURN 
6700 REM "ADD ENTRY
6701 IF Z9=0 THEN GOTO 6790
6707 R9$=A$(33,8),B9$=A$(100,10),P8$=A$(56,12),P9$=A$(41,9),P7$=A$(215,6); IF POS(" "<>A$(91,9))<>0 THEN J0=NUM(A$(91,9),ERR=6709),N9$=STR(J0+1)
6708 IF LEN(N9$)<9 THEN N9$=" "+N9$; GOTO 6708
6709 A$(221,11)=Q0$(2,11); REM "Commit ICK and write out
6710 WRITE (Z[8],KEY=Q0$(2,11)+A1$)IOL=0310
6715 REM "Commit ICF
6716 IF Q0$(1,1)="R" THEN GOTO 6725
6720 READ RECORD (Z[1],KEY=A1$,DOM=6725)J$
6722 J$(221,11)=Q0$(2,11)
6724 WRITE RECORD (Z[1],KEY=A1$)J$
6790 C9=0; IF Z=6 OR K1=0 THEN GOTO 9900 ELSE IF Z<4 THEN GOTO 1000 ELSE C0=-(3.1+(Z-4)/10); GOTO 6800
6800 REM "NEXT ENTRY IN FILE
6802 Z5=Z[1]
6803 K9$=A$(1,24),S9=1
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z5,END=6895)
6820 IF A1$="" THEN GOTO 6800 ELSE IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1510
6850 REM "PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z5,A1$; GOTO 6820
6860 PRINT 'RB',; CALL "ZZKEYL",ERR=6861,Z5,A1$; GOTO 6820
6865 GOTO 1100
6870 GOTO 6895
6890 GOTO 1510
6895 IF A1$="" THEN GOTO 6860 ELSE PRINT 'RB',; READ (Z5,KEY=K9$,DOM=6896)
6898 ON S9 GOTO 6810,1100
7200 REM "Forced read 
7210 IF ERR<>0 THEN GOTO 9000
7220 CALL "ZZREAD",Z[1],A1$,A$,A{ALL},S8; ON S8 GOTO 7221,1630
7230 GOSUB 6200
7240 CALL "ZZPROM","E0",X3$,0,"","","",0; GOTO 7290
7250 CALL "ZZPROM","E0A",X3$,0,"","","",0; GOTO 7290
7290 GOTO 1630
7300 REM 
7310 ON FPT(C0)*10 GOTO 7390,7325,7330,7390
7325 IF V8$="" THEN X0=X0+4; GOTO 7390 ELSE X0=NUM(V8$(POS(STR(X0:"00")<=V8$,2),2)); GOTO 7390
7330 IF V8$="" THEN X0=X0-6; GOTO 7335 ELSE X0=POS(STR(X0-1:"00")<=V8$,2)-2; IF X0<0 THEN X0=0; GOTO 7390 ELSE X0=NUM(V8$(X0,2)); GOTO 7390
7335 IF X0<0 THEN X0=0; GOTO 7390
7390 IF X0>0 THEN X0=X0-0
7395 C0=3; RETURN 
7400 REM "EXTRACT
7410 EXTRACT (Z[8],ERR=7200,KEY=Q0$(2,11)+A1$,DOM=7440)IOL=0310
7420 C9=1,Z9=1; GOSUB 5800
7440 RETURN 
7450 REM "EXTRACT NEW ENTRY
7460 WRITE (Z[8],KEY=Q0$(2,11)+A1$,DOM=7250)IOL=0310; GOTO 7400
7490 RETURN 
7500 REM "Print Vendor/Plant
7505 DIM D1$(200); D1$(16,117)=G$(11,117)
7506 IF POS(" "<>A$(78,4))<>0 THEN FIND (Z[4],KEY="P"+A$(68,14),DOM=7507)IOL=0345
7509 L9$=FNS$(D1$(16,35))
7510 IF POS(" "<>D1$(111,16))<>0 THEN L9$=L9$+" "+FNS$(D1$(111,16))+", "+D1$(127,2)
7512 IF LEN(L9$)>45 THEN L9$=D1$(16,35)
7515 PRINT @(37,10),'CL',L9$,
7545 RETURN 
7550 REM "Print location
7555 L9$=FNS$(D$(16,35))
7560 IF POS(" "<>D$(111,16))<>0 THEN L9$=L9$+" "+FNS$(D$(111,16))+", "+D$(127,2)
7562 IF LEN(L9$)>37 THEN L9$=D$(16,35)
7563 PRINT @(31,5),'CL',
7564 IF Q1$>"" THEN PRINT (0,ERR=7565)'SB',
7565 PRINT @(31,5),L9$,
7566 IF Q1$>"" THEN PRINT (0,ERR=7567)'SF',
7595 RETURN 
7600 REM "Display key parts
7603 IF Q1$>"" THEN PRINT (0,ERR=7604)'SB',
7605 CALL "ZZDISP","A   ",A$(1,10),"A/R",X3$,"","",18,3,X4$
7610 CALL "ZZDISP","A   ",A$(11,10),"I/C",X3$,"","",18,4,X4$
7615 PRINT @(18,5),A$(21,4),
7620 IF Q1$>"" THEN PRINT (0,ERR=7621)'SF',
7645 RETURN 
7650 ! WO 288437, Assign next Lot Number
7655 CALL "UPDICF;GET_NEXT_LOT_NUM",Z[13],X3$,NEXT_NUM$; A$(234,8)=NEXT_NUM$
7680 IF MID(IC_PARM$,65,1)="Y" THEN PRINT @(70,18),A$(234,8),
7690 RETURN 
7700 REM "Default bin Location, if necessary ! SSP245429 jdf
7703 IF POS(" "<>A$(100,10))<>0 THEN GOTO 7745
7705 DIM I9$(50)
7710 FIND (Z[12],KEY=A$(1,24),DOM=7711)IOL=0425
7715 A$(100,10)=I9$(35,10)
7720 PRINT @(18,11),A$(100,10),
7745 RETURN 
7800 REM "Write out new transaction ensuring no duplicates
7801 ESCAPE ; REM "NO LONGER NEEDED
7804 K1=0
7810 WRITE (Z[1],KEY=A1$,DOM=7811)IOL=0310; GOTO 7845
7815 K1=K1+1,A1$(24,2)=FNQ$(K1),A$(31,2)=A1$(24,2)
7820 GOTO 7810
7845 RETURN 
7850 REM "Make sure adjustment is not in the data entry file
7860 READ (Z[8],KEY="",DOM=7861)
7865 K$=KEY(Z[8],END=7890); READ (Z[8])
7870 IF K$(12)=A1$ THEN CALL "ZZPROM",".4",X3$,0,"This lot sequence number has already been used during this data entry session","","",0; K$="*"; GOTO 7890
7880 GOTO 7865
7890 RETURN 
8000 REM " Probalby only needs to go here at end, but doing at beginning since otherwise errors generated.  Used to try and track balances interactively.
8001 REM "Clear T0,T1,T2
8013 DIM I[11],I$(100)
8015 T0=0,T1=0,T2=0
8020 A$(1,24)=Q1$
8023 READ (Z[3],KEY=A$(1,20),DOM=8024)IOL=0330
8024 REM "It is ok if we don't find the IC1 rec, it will be set up in the update
8025 READ (Z[12],KEY=A$(1,24),DOM=8026)IOL=0425
8030 B9$=I$(35,10)
8050 REM "Set T0,T1,T2 from any existing records in the ICK file
8052 DIM A0$(269),A0[12],B0$(269),B0[12]
8055 READ (Z[8],KEY=Q0$(2,11),DOM=8056)
8060 READ (Z[8],END=8080)IOL=0315
8062 IF Q0$(1,1)="A" THEN IF A0$(221,11)+A0$(1,24)=Q0$(2,11)+Q1$(1,24) THEN GOTO 8067
8065 IF A0$(221,11)+A0$(1,24)<>Q0$(2,11)+Q1$(1,24) THEN GOTO 8080
8067 IF A0$(125,4)="    " THEN N0=A0[4]*A0[3] ELSE N0=A0[4]*A0[2]*A0[3]
8069 REM "since this isone record, read ICF record to get original values, compute the difference and add to T0,T1,T2
8070 N1=0; DIM B0[12]; READ (Z[1],KEY=A0$(1,32),DOM=8073)IOL=0316
8072 IF B0$(125,4)="    " THEN N1=B0[4]*B0[3] ELSE N1=B0[4]*B0[2]*B0[3]
8073 T0=T0+(N0-N1),T1=T1+(A0[0]-B0[0]),T2=T2+(A0[1]-B0[1])
8075 GOTO 8060
8085 READ (Z[1],KEY=Q1$(1,24),DOM=8086)
8090 F0=1
8095 RETURN 
8200 REM "Setup ending number based on starting number
8205 IF POS(" "<>A$(82,9))=0 THEN GOTO 8245
8210 J0=NUM(A$(82,9),ERR=8245)
8215 IF A$(125,4)="    " THEN N0=A[4]*A[3] ELSE N0=A[4]*A[2]*A[3]
8220 J0=J0+N0-1
8230 J$=STR(J0)
8235 IF LEN(J$)<9 THEN J$=" "+J$; GOTO 8235
8238 A$(91,9)=J$
8240 PRINT @(18,19),A$(91,9),
8245 RETURN 
8250 REM "A$ lot is committed, give message
8255 IF A$(221,2)="PI" THEN CALL "ZZPROM",".4",X3$,Z,"This is a physical inventory adjustment and cannot be changed.","","",0; GOTO 8271
8260 IF A$(221,2)="TR" THEN CALL "ZZPROM",".4",X3$,Z,"This lot is currently committed to another transaction","","",0; GOTO 8271
8270 CALL "ZZDISP","AX",A$(110,8),"O/P",X3$,M$,"",0,0,X4$; CALL "ZZPROM",".4",X3$,Z,"Sorry, lot is committed to Order# "+M$+" which is currently being invoiced","","",0
8295 RETURN 
8300 ESCAPE 
8350 REM "Calculate cost and freight
8357 IF A$(125,4)="    " THEN N0=A[4]*A[3] ELSE N0=A[4]*A[2]*A[3]
8359 IF T8=0 THEN GOTO 8370
8360 A[0]=T8*N0/T7,A[1]=T9*N0/T7
8370 PRINT @(45,18),A[0]:M0$,@(45,19),A[1]:M0$,
8395 RETURN 
8400 REM "Check if qty, cost, and freight are fully extended
8401 REM "NO LONGER USED!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
8405 X$="",I0=INT(LEN(R5$)/4)
8409 REM "See if any non-zero amounts are left to distribute
8410 FOR I=1 TO I0
8412 IF R5[I]-R4[I]<>0 OR R6[I]<>0 OR R7[I]<>0 THEN EXITTO 8420
8414 NEXT I
8415 RETURN ; REM "if still here then all are zero, we're ok
8420 PRINT @(0,17-I0),'CE',@(0,18-I0),"Location   Remaining:",@(24),"Quantity",@(39),"Cost",@(47),"Freight",
8425 FOR I=1 TO I0
8430 PRINT @(2,18-I0+I),R5$(I*4-3,4),@(23),R5[I]-R4[I]:M4$,@(34),R6[I]:M0$,@(45),R7[I]:M0$,
8435 NEXT I
8440 CALL "ZZPROM",".4",X3$,Z,"There are amounts left to be distributed","","",0
8442 PRINT @(0,18-I0),'CE',; GOSUB 6000
8445 EXITTO 1100
8446 RETURN 
8500 REM "Display Qty and set J0 to xpos of input of field J1
8501 REM "J1 -1=display, 0=qty, 1=primary unit, 2=units/package, 3=package, 4=unit/primary/package
8505 J0$="",J0=0; IF A[4]=0 THEN PRINT @(18,15),'CL',; RETURN 
8510 IF J1=0 THEN J0$=STR(A[4]:M4$) ELSE J0$=FNR$(STR(A[4]:M4$))
8512 IF J1=1 THEN J0=18+LEN(J0$)
8515 IF POS(" "<>A$(121,4))<>0 THEN IF A[4]>1 THEN J0$=J0$+FNS$(A$(121,4))+"s of " ELSE J0$=J0$+FNS$(A$(121,4))+" of "
8517 IF J1=2 THEN J0=18+LEN(J0$); IF A[3]<>0 AND POS(" "<>A$(125,4))=0 THEN J0$=J0$+S0$(1,LEN(M3$))+" of "
8520 IF A[2]<>0 THEN IF J1=2 THEN J0$=J0$+STR(A[2]:M3$) ELSE J0$=J0$+FNR$(STR(A[2]:M3$))
8522 IF J1=3 THEN J0=18+LEN(J0$); IF A[3]<>0 AND POS(" "<>A$(125,4))=0 THEN J0$=J0$+"     of "
8525 IF POS(" "<>A$(125,4))<>0 THEN IF A[2]>1 THEN J0$=J0$+FNS$(A$(125,4))+"s of " ELSE J0$=J0$+FNS$(A$(125,4))+" of "
8527 IF J1=4 THEN J0=18+LEN(J0$)
8530 IF J1<>4 AND A[3]<>0 THEN J0$=J0$+FNR$(STR(A[3]:M3$))
8535 IF A$(125,4)="    " THEN Q=A[4]*A[3] ELSE Q=A[4]*A[2]*A[3]
8540 PRINT @(18,15),J0$,S0$(1,51-LEN(J0$)),Q:M4$,
8545 RETURN 
8600 REM "Setup key E0$ for FS6 read
8605 E0$=F$(179,10)
8606 REM "This is here because L$(10,1) is set to "I" at line 8240 in FM2ODZ, because a D special shipping record was detected.
8607 IF POS(" "<>L$(91,10))<>0 THEN E0$=E0$+"B"; GOTO 8620
8610 ON POS(L$(10,1)="CXINS") GOTO 8620,8611,8612,8613,8614,8615
8611 E0$=E0$+"B"; GOTO 8620
8612 E0$=E0$+"D"; GOTO 8620
8613 E0$=E0$+"F"; GOTO 8620
8614 E0$=E0$+"H"; GOTO 8620
8615 E0$=E0$+"J"; GOTO 8620
8620 E0$=E0$+L$(101,10)+L$(82,8)+CHR(NUM(L$(11,3))+48)
8640 RETURN 
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNB$(Z9$)=X3$(214-6*NUM(Z9$),1)
8925 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
8930 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
8935 DEF FNQ$(Z8)=CHR(32+INT(Z8/95))+CHR(32+MOD(Z8,95))
8949 DEF FNC$(Z9$)=Z9$(1,POS(" "=Z9$+" ")-1)
8950 REM "Program flow logic
8960 DIM U0$(6); U0$(1)=FID(0),U0$=U0$+"PF"; CLOSE (14); OPEN (14)"ZZPARM"
8970 FIND (14,KEY=U0$,DOM=8990)U0$,U1$
8975 IF U1$="" THEN Q1$=""; GOTO 8990
8980 Q1=NUM(U1$(7,2)),Q1$=U1$(9,Q1),U1$=U1$(Q1+9)
8990 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 REM "PROG FLOW
9710 IF U1$="" THEN REMOVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9730 RUN U1$(1,6)
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9902 GOSUB 8000
9904 REM PRINT @(0,20),'CE',"IC2LAG ",T0,T1,T2; INPUT *
9905 Y8=2
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q0=T0,Q1=T1,Q2=T2; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM "245429-Wording changes needed in CHUI. IC2TDA, item number should  
56002 REM "252248-IC/T1 Bin Location field butts up w our bin location entry  
56004 REM "288437-Ability to enter/override lot number in IC Trans Entry. Appl
