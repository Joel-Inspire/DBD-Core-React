0010 REM "I/C Transaction Update <IC2TUA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 02/15/23 - 17.290126 - dmm - SSP# 307430
0037 REM "307430-DBD-333;Add 101 to some of 288's company specfic code       
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR 
0095 IF %GUI THEN PRINT 'CURSOR'(0),
0100 SETERR 9000
0110 X0$="IC2TUA",X1$="I/C Transaction Update"
0120 DIM Z0$(80,"-"),S$(10),PAD$(80); REM "82546
0140 M9$="00000    "
0170 DEF FNV$(Z9$)=CHR(INT(NUM(Z9$)/10)-125)+STR(MOD(NUM(Z9$),10))
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A0
0315 IOLIST GLV$,GLV[0],GLV[1],GLV[2],GLV[3],GLV[4],GLV[5]
0320 IOLIST A1,B$,B[0],B[1],B[2],B[3],B[4]
0329 IOLIST C$,STR(C[0]),C[1],STR(C[2]),C[3],STR(C[4]),C[5],STR(C[6]),C[7],STR(C[8]),C[9],STR(C[10]),C[11],STR(C[12]),STR(C[13]),C[14],C[15],C[16],STR(C[17]),STR(C[18]),C[19],STR(C[20]),C[21],STR(C[22]),C[23],STR(C[24]),C[25],STR(C[26]),C[27],STR(C[28]),C[29],STR(C[30]),C[31],STR(C[32]),C[33],C[34],C[35],C[36],C[37],C[38],C[39],C[40]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20],C[21],C[22],C[23],C[24],C[25],C[26],C[27],C[28],C[29],C[30],C[31],C[32],C[33],C[34],C[35],C[36],C[37],C[38],C[39],C[40]
0331 IOLIST O$,O[0],O[1],O[2],O[3],O[4],O[5],O[6],O[7],O[8],O[9],O[10],O[11],O[12],O[13],O[14],O[15],O[16],O[17],O[18],O[19]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15],D[16],D[17],D[18],D[19],D[20]
0341 IOLIST D$,D[0],STR(D[1]),STR(D[2]),D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13],D[14],D[15],D[16],D[17],D[18],D[19],D[20]
0344 IOLIST M$,M[0],M[1],M[2],M[3],M[4],M[5],M[6],M[7],M[8],M[9],M[10],M[11],M[12],M[13],M[14],M[15],M[16],M[17],M[18],M[19],M[20]
0345 IOLIST M$,M[0],STR(M[1]),STR(M[2]),M[3],M[4],M[5],M[6],M[7],M[8],M[9],M[10],M[11],M[12],M[13],M[14],M[15],M[16],M[17],M[18],M[19],M[20]
0350 IOLIST T$,T[0],T[1]
0380 IOLIST N$,N[0],N[1],N[2],N[3],N[4],N[5],N[6]
0390 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14],I[15],I[16],I[17],I[18],I[19],I[20],I[21],I[22],I[23],I[24],I[25],I[26],I[27],I[28],I[29],I[30] ! WO273055
0395 IOLIST I$,STR(I[0]),I[1],STR(I[2]),I[3],STR(I[4]),I[5],STR(I[6]),I[7],STR(I[8]),I[9],STR(I[10]),I[11],STR(I[12]),STR(I[13]),I[14],I[15],I[16],I[17],I[18],I[19],I[20],I[21],I[22],I[23],I[24],I[25],I[26],I[27],I[28],I[29],I[30] ! WO273055
0400 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12],J[13],J[14],J[15],J[16],J[17]
0410 IOLIST L$,L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12]
0420 IOLIST U$,U0$,U[0]
0430 IOLIST E$,E[0],E[1]
0500 REM "FILES
0505 Z=NUM(X3$(60,3)); DIM Z[Z]
0510 Z$="01L ICA...  02O ICB...  03O IC0...  04O IC1...  05O IC8...  06O GL6...  07ORFMP...  08ORARV...  09ORIC2...  10O POG...  11ORIC6...  12ORFM0...  25O GLV...  "; REM "82546 SSP 172448
0515 Z$=Z$+"13O ZZPARM  14O IC9...  15O DT2...  16O DT6...  17O DT0...  18S FM0... 19O DT3...  20O ICK...  21S ICF...  "
0520 GOSUB 8950; IF Z1>0 THEN GOTO 9900
0524 MEM_FL=HFN; OPEN (MEM_FL)"*MEMORY*"
0525 DT2=Z[15],DT6=Z[16],DT0=Z[17],FM0=Z[18],ZZPARM=Z[13],IC0=Z[3],DT3=Z[19],ICK=Z[20],ICF=Z[21]
0530 READ (Z[13],KEY="STATI/C")S9$
0550 READ (Z[13],KEY=X3$(9,3)+"G/L")G0$
0560 READ (Z[13],KEY=X3$(9,3)+"F/M")PRM$; REM "82546
0580 Q9$="C"; IF G0$(40,1)="A" THEN Q9$="A" ELSE IF G0$(180,1)="Y" THEN Q9$=Q9$+"A"
0585 RT$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT$
0600 REM "
0610 READ (Z[13],KEY=X3$(9,3)+"I/C")P$
0660 DIM M6[1]; CALL "IC2PRE",X3$,Z[13],"",M6{ALL},"",0,"",0
0695 CALL "ZZPROM","U6",X3$,0,U9$,"","",0
0710 IF P$(67,1)<>"Y" THEN GOTO 0730
0720 READ (Z[13],KEY=FID(0)+"DATE")D9$; REM 'RETRIEVE ACCOUNTING DATE IF WAREHOUSE INTERIM TRANSFER PARAMETER HAS BEEN SET FOR USE IN UPDATE
0730 DIM A$(44),A[4]
0800 REM "CHECK FOR ROOM?
0805 CALL "ZZPROM","U1",X3$,0,"","","",0
0810 DIM X[Z,1],X$(0)
0815 FOR X=1 TO Z
0820 CALL "ZZINFO",X,0,X3$,A,B,0,0,0,0,0,""; X[X-1,0]=A,X[X-1,1]=B
0825 NEXT X
0830 PRINT @(0,22),'CL',
0831 IF %GUI THEN GOTO 0900
0835 IF X[Z[1]-1,0]=0 THEN CALL "ZZPROM","U2",X3$,S3,"","","",0; GOTO 9900
0840 GOTO 0900
0880 REM "PROMPT OUT OF ROOM
0890 CALL "ZZPROM","U3",X3$,S3,"","","",0; GOTO 9900
0900 REM "RESTART LOGIC
0905 V0$=X3$(1,6)+X3$(40,3)+DAY+STR(TIM*100:"0000")+X3$(178,6); WRITE (Z[1],KEY="",DOM=0906)V0$
0910 EXTRACT (Z[1],KEY="")V0$,K0$,K1$,K0,K1; I1=IND(Z[1])
0915 GOSUB 6000
0920 IF K0$="" THEN READ (Z[1],KEY=K0$); GOTO 0960
0930 EXTRACT (Z[1],KEY=K0$,DOM=0931)IOL=0310
0935 CALL "ZZPROM","U4",X3$,10,"","","",0; PRINT " ",A$(1,4)+"-"+A$(5,10)+"-"+A$(15,20)+"-"+A$(35,1)
0940 CALL "ZZPROM","U5",X3$,0,"","","",14
0970 CALL "ZZPROM","9",X3$,S3,"","","",0; ON S3 GOTO 0971,9900
0975 PRINT @(0,12),'CL',
0980 DIM L$(223),G$(32),H$(202),L0$(223),P2$(50),P0$(20)
1000 REM "READ NEXT RECORD
1020 K0$=KEY(Z[1],END=5000)
1030 READ (Z[1])IOL=0310; ADJ_REF$=A$(7,6)
1040 PRINT @(7,12),U9$," ",K0$,
1060 IF P$(67,1)="Y" THEN CALL "IC2TDC",X3$,X4$,"D",A$,A0
1100 REM "Read through lines
1110 DIM B$(54),B[4]
1120 IF A0<=0 THEN GOTO 1600
1130 READ (Z[2],IND=A0)IOL=0320
1132 A4=A0,A0=A1; REM "Save current index in A4, then set A0 to next index
1133 REM 'IF INTERIM WHSE TRANSFER PARM SET - SET POSTING DATE = ACCOUNTING DATE RETRIEVED ON LINE 720
1134 IF P$(67,1)="Y" THEN B$(2,6)=D9$(23,6)
1135 IF B[0]=0 AND B[3]=0 THEN GOTO 1120
1140 GOSUB 4000
1150 DIM C$(187),C[40]
1155 C$(1,20)=B$(26,20)
1160 EXTRACT (Z[3],KEY=C$(1,20),DOM=1161)IOL=0330
1170 IF PRM$(258,1)="Y" AND POS(B$(1,1)="RAT")>0 THEN GOSUB 2700; REM "82546
1200 REM 
1210 GOSUB 2000
1220 GOSUB 2500
1230 GOSUB 7600
1590 GOTO 1100
1800 REM "RESTART LOGIC
1810 GOSUB 6600
1950 GOTO 1000
2000 REM "Get, Adjust & write out location record(s)
2001 REM "Get location(s) record adjust active if necc
2010 DIM D$(58),D[20]
2020 D$(1,24)=B$(26,20)+B$(8,4)
2030 READ (Z[4],KEY=D$(1,24),DOM=2031)IOL=0340
2032 IF LEN(D$)=45 THEN D$=D$+"             "
2035 IF POS(B$(1,1)="RAT")<>0 AND B$(2,6)>D$(47,6) THEN D$(47,6)=B$(2,6)
2040 IF B$(1,1)<>"T" THEN GOTO 2090
2050 DIM M$(58),M[20]
2060 M$(1,24)=B$(26,20)+B$(50,4)
2070 READ (Z[4],KEY=M$(1,24),DOM=2071)IOL=0344
2075 IF B$(2,6)>M$(47,6) THEN M$(47,6)=B$(2,6)
2100 REM "Adjust Location values based on trans type
2130 ON POS(B$(1,1)="ARTPC") GOTO 2135,2135,2145,2155,2165,2175,2135
2134 REM "Adjust & unknown
2135 D[6]=D[6]+B[0]
2137 GOSUB 2300; GOSUB 2600
2139 GOSUB 3000
2140 GOTO 2200
2144 REM "Receipts
2145 D[4]=D[4]+B[0]
2146 REM LET D(8)=D(8)-B(0); IF D(8)<0 THEN LET D(8)=0 V3.1.3
2147 GOSUB 2300; GOSUB 2600
2148 GOSUB 2400
2150 GOTO 2200
2154 REM "Transfers
2155 D[6]=D[6]-B[0],M[6]=M[6]+B[0]
2157 GOSUB 3000
2160 GOTO 2200
2164 REM "P/Os
2165 D[8]=D[8]+B[0]; GOTO 2200
2174 REM "Committed
2175 D[7]=D[7]+B[0]; GOTO 2200
2200 REM "Write out records incl sort file IC6
2210 WRITE (Z[4],KEY=D$(1,24))IOL=0341
2211 IF RT$>"" THEN IF RT$(7,1)="H" THEN CUST$=D$(1,10); CALL "RT2WOC",ERR=2212,X3$,X4$,CUST$,"IC1...","U",D$(1,24)
2215 WRITE (Z[11],KEY=D$(21,4)+C$(61,3)+D$(1,20))
2220 IF B$(1,1)<>"T" THEN GOTO 2250
2222 N0=M[3]+M[4]-M[5]+M[6],N1=(N0-B[0])*M[2],N1=N1+B[3]*C[15]; IF N0=0 THEN N0=1
2224 PRECISION M6[1]; M[2]=N1/N0,M[1]=D[2]; PRECISION 2
2225 WRITE (Z[4],KEY=M$(1,24))IOL=0345
2226 IF RT$>"" THEN IF RT$(7,1)="H" THEN CUST$=M$(1,10); CALL "RT2WOC",ERR=2227,X3$,X4$,CUST$,"IC1...","U",M$(1,24)
2230 WRITE (Z[11],KEY=M$(21,4)+C$(61,3)+D$(1,20))
2290 RETURN 
2300 REM "Masterfile stuff, average cost, last cost, & purchased
2304 REM "Adjust cost per unit to fit masterfile units
2305 IF B[1]=0 THEN B1=0 ELSE IF C[15]<>B[2] AND B[2]<>0 AND C[15]<>0 THEN PRECISION M6[1]; B1=B[1]*C[15]/B[2]; PRECISION 2 ELSE B1=B[1]
2310 IF B1<>0 THEN IF B$(1,1)="R" AND B$(2,6)>=C$(102,6) THEN C$(102,6)=B$(2,6),C[17]=B1
2315 IF C[18]*10^M6[1]=B1*10^M6[1] THEN GOTO 2380
2319 N0=0,N1=0; DIM N[6]
2320 READ (Z[4],KEY=C$(1,20),DOM=2321)
2330 READ (Z[4],END=2370)IOL=0380
2340 IF N$(1,20)<>C$(1,20) THEN GOTO 2370
2345 IF N$(21,1)>"8" THEN GOTO 2370
2350 N2=N[3]+N[4]-N[5]+N[6],N0=N0+N2
2355 N1=N1+N2*N[2]
2360 GOTO 2330
2369 REM "Assumes B(2) is ok and B(0) in SKU's
2373 IF C[15]=0 THEN C[15]=1
2374 IF B[2]=0 THEN B[2]=1
2375 N0=N0+B[0],N1=N1+B[3]*C[15]
2376 IF N0=0 THEN GOTO 2380
2378 PRECISION M6[1]; C[18]=N1/N0; PRECISION 2
2380 WRITE (Z[3],KEY=C$(1,20))IOL=0329
2385 IF RT$>"" THEN IF RT$(7,1)="H" THEN CUST$=C$(1,10); CALL "RT2WOC",ERR=2386,X3$,X4$,CUST$,"IC0...","U",C$(1,20)
2390 RETURN 
2400 REM "Update supplier record
2405 DIM I$(115),I[30] ! WO273055
2410 I$(1,34)=B$(26,20)+B$(12,14)
2415 READ (Z[9],KEY=I$(1,34),DOM=2416)IOL=0390; GOTO 2419
2416 I$(55,4)=B$(46,4),I[14]=B[2],I[15]=C[16],I[16]=C[19]
2419 IF B[1]<>0 THEN IF I[14]<>0 AND B[2]<>0 AND I[14]<>B[2] THEN PRECISION M6[1]; B1=B[1]*I[14]/B[2]; PRECISION 2 ELSE B1=B[1]
2420 IF B1<>0 AND B$(2,6)>=I$(59,6) THEN I$(59,6)=B$(2,6),I[13]=B1
2430 WRITE (Z[9],KEY=I$(1,34))IOL=0395
2490 RETURN 
2500 REM "Post to detail transaction file
2505 IF P$(35,1)<>"Y" OR B$(1,1)="C" THEN GOTO 2550
2510 DIM T$(73),T[1]; T9=0
2515 T$(1)=B$(26,20)+B$(8,4),T$(25,6)=A$(1,6),T$(31,6)=B$(2,6),T$(40,10)=B$(12,10)
2520 T$(39,1)=B$(1,1),T$(50,15)=A$(7,6),T$(65,2)="IT",T$(67,6)=V0$(22,6)
2525 IF B$(1,1)="T" THEN T$(50,15)=A$(7,6)+" to: "+B$(50,4),T[0]=-B[0],T[1]=-B[3] ELSE T[0]=B[0],T[1]=B[3]
2530 T$(37,2)=X3$(143,2),K1=FND(X3$(143,2))
2533 IF B$(57,1)="W" THEN T$(39,1)=B$(57,1); GOSUB 6900
2534 IF MID(C$,112,1)="Y" THEN GOSUB TOD_LOTS ELSE GOSUB UPDATE_DT3 ! [SSP-214694]
2535 WRITE (Z[5],KEY=T$(1,38),DOM=2540)IOL=0350; GOTO 2545
2540 IC8_KEY$=T$(1,38); CALL "IC2LCC",X3$,X4$,Z[5],37,2,IC8_LAST_ONE$,IC8_KEY$; T$(1,38)=IC8_KEY$; GOTO 2535
2541 REM " K1=K1+1,T$(37,2)=FNC$(K1); GOTO 2535
2545 X3$(143,2)=FNC$(K1+1)
2550 IF B$(1,1)="T" AND T9=0 THEN T$(50,15)=A$(7,6)+" fr: "+B$(8,4),T$(21,4)=B$(50,4),T[0]=B[0],T[1]=B[3],T9=1; GOTO 2530
2590 RETURN 
2600 REM "Adjust avg cost & last cost of location record
2601 REM "Assumes B1 was set in 2300's before here
2605 IF B1<>0 THEN D[1]=B1; IF D[2]*10^M6[1]=B1*10^M6[1] THEN GOTO 2640
2630 N0=D[3]+D[4]-D[5]+D[6]; IF N0=0 THEN GOTO 2640
2635 PRECISION M6[1]; N1=(N0-B[0])*D[2],N1=N1+B[3]*C[15]
2637 D[2]=N1/N0; PRECISION 2
2640 RETURN 
2700 REM "Check for B/O Fill
2710 DIM D$(58),D[20]
2720 IF B$(1,1)<>"T" THEN READ (Z[4],KEY=B$(26,20)+B$(8,4),DOM=2721)IOL=0340
2725 IF B$(1,1)="T" THEN READ (Z[4],KEY=B$(26,20)+B$(50,4),DOM=2726)IOL=0340
2730 IF D[3]+D[4]-D[5]+D[6]-D[7]>=0 THEN GOTO 2790
2740 IF B[0]=0 AND B[3]=0 THEN GOTO 2790
2780 IF B[0]>0 THEN GOSUB 2800
2790 RETURN 
2800 REM "Write out POG record
2805 DIM E$(66),E[1]
2810 IF B$(1,1)<>"T" THEN E$(1)=B$(8,4)+B$(26,20)+B$(2,6)
2812 IF B$(1,1)="T" THEN E$(1)=B$(50,4)+B$(26,20)+B$(2,6)
2815 E$(31,3)="000"
2820 E$(34)=V0$(20,6)+PAD$(1,12)+B$(12,14)
2825 E[0]=B[0],E[1]=B[3]
2850 WRITE (Z[10],KEY=E$(1,33),DOM=2860)IOL=0430
2855 GOTO 2895
2860 REM "else increment seq # and try again
2865 E$(31,3)=STR(NUM(E$(31,3))+1:"000")
2870 GOTO 2850
2895 RETURN 
3000 REM "Make G/L postings
3005 IF POS("A"=Q9$)=0 OR A0=0 OR (A$(7,1)="*" AND G0$(32,1)<>"Y") THEN GOTO 3090
3007 IF B$(8,1)="9" THEN GOTO 3090
3010 REM "Get product code & sales dist code & location
3015 IF B$(8,4)<>L$(12,4) THEN DIM L$(223); FIND (Z[12],KEY="D"+S$(1,10)+B$(8,4),DOM=3016)L$
3016 IF B$(1,1)="T" AND B$(50,4)<>L0$(12,4) THEN DIM L0$(223); FIND (Z[12],KEY="D"+S$(1,10)+B$(50,4),DOM=3017)L0$
3020 IF C$(61,3)<>G$(2,3) THEN DIM G$(32); FIND (Z[7],KEY="T"+C$(61,3),DOM=3021)G$
3025 IF G$(24,9)=H$(1,9) THEN GOTO 3030 ELSE J8$=FN%FID$(Z[8]); IF J8$(4,3)<>"ARV" THEN Z$="08C FMZ...  08O ARV...  20O FTP...  "; GOSUB 8950 ! [205703]-changed FID() to FN%FID$()
3027 DIM H$(202); FIND (Z[8],KEY=G$(24,9),DOM=3028)H$
3030 REM "I0$=inv acct, I1$=cost of sales acct, B(3) amount to post
3035 I0$=H$(118,12); IF B$(1,1)="T" THEN I1$=H$(118,12) ELSE I1$=H$(166,12)
3040 REM "Assumes B(3) is set properly in entry prog
3050 REM "Add location sub code if necc
3055 IF P$(39,1)<>"Y" THEN GOTO 3070
3060 J0=NUM(P$(40,2),ERR=3070),J1=NUM(P$(42,1),ERR=3070)
3065 I0$(J0,J1)=L$(214,J1),I1$(J0,J1)=I0$(J0,J1); IF B$(1,1)="T" THEN I0$(J0,J1)=L0$(214,J1)
3070 REM "Post G/L
3071 IF B$(1,1)="T" THEN L2$=B$(50,4) ELSE L2$=B$(8,4)
3072 Q0$=I0$,Q0=B[3]; GOSUB 8800
3073 IF G0$(32,1)<>"Y" AND Q0=0 THEN GOTO 3080; REM " SSP# 172448
3074 DIM GLV$(247),GLV[5]; GLV$(1,4)=FNV$(P2$(9,4))+A$(5,2),GLV$(5,6)=U$(28,6),GLV$(33,20)=B$(26,20),GLV$(53,10)=B$(12,10),GLV$(11,1)=U$(1,1),GLV$(12,2)=U$(6,2),GLV$(14,12)=U$(14,12),GLV$(112,6)=V0$(22,6),GLV$(118,6)=X3$(21,6),GLV$(124,1)=B$(1,1),GLV[0]=Q0
3075 IF A$(7,1)="*" THEN GLV$(14,12)=DIM(12)
3076 WRITE_SEQ$=STR(1:"00000")
3077 GLV$(26,5)=WRITE_SEQ$
3078 WRITE (Z[25],KEY=GLV$(1,32),DOM=3079)IOL=0315; GOTO 3080
3079 IF WRITE_SEQ$="99999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"00000"); GOTO 3077
3080 L2$=B$(8,4)
3081 Q0$=I1$,Q0=-B[3]; GOSUB 8800
3082 IF G0$(32,1)<>"Y" AND Q0=0 THEN GOTO 3090
3083 DIM GLV$(247),GLV[5]; GLV$(1,4)=FNV$(P2$(9,4))+A$(5,2),GLV$(5,6)=U$(28,6),GLV$(33,20)=B$(26,20),GLV$(53,10)=B$(12,10),GLV$(11,1)=U$(1,1),GLV$(12,2)=U$(6,2),GLV$(14,12)=U$(14,12),GLV$(112,6)=V0$(22,6),GLV$(118,6)=X3$(21,6),GLV$(124,1)=B$(1,1),GLV[0]=Q0
3084 IF A$(7,1)="*" THEN GLV$(14,12)=DIM(12)
3086 WRITE_SEQ$=STR(1:"00000")
3087 GLV$(26,5)=WRITE_SEQ$
3088 WRITE (Z[25],KEY=GLV$(1,32),DOM=3089)IOL=0315; GOTO 3090
3089 IF WRITE_SEQ$="99999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"00000"); GOTO 3087
3090 RETURN 
4000 REM "Get U/M and convert B(0) to SKU's
4015 DIM P0$(20),P[1]
4020 READ (Z[13],KEY="U/M"+B$(46,4),DOM=4021)P0$,P[0],P[1]
4025 IF P0$(20,1)="Y" THEN P0=P[1] ELSE P0=B[2]
4027 HLD_QTY=B[0] ! [SSP-214694]-save the qty
4030 IF P0<>0 THEN B[0]=B[0]*P0
4045 RETURN 
4200 REM "For adj, Copy ICK records over ICF records & clear order/line#, for rec., Copy ICK records to ICF, reseq. if needed, for transfer, remove ICF records, move records from ICK to ICF, resequence as needed.
4205 Z$="11C IC6...  12C FM0...  11O ICF...  12O ICK...  15O FM0...  "; GOSUB 8950
4206 IF P$(66,1)="Y" THEN Z$="06C GL6...  06O ICO... "; GOSUB 8950
4210 READ (Z[1],KEY="",DOM=4211)
4220 K0$=KEY(Z[1],END=4295)
4230 READ (Z[1])IOL=0310
4235 PRINT @(7,12),U9$," ",K0$,
4240 DIM B$(54),B[4]
4245 IF A0<=0 THEN GOTO 4220
4250 READ (Z[2],IND=A0)IOL=0320
4252 A4=A0,A0=A1; REM "Save current index in A4, then set A0 to next index
4255 IF B$(1,1)="T" THEN GOSUB 4300
4260 GOSUB 4400
4270 GOTO 4240
4295 RETURN 
4300 REM "Remove Matching ICF records for transfers
4304 DIM L[12]
4305 J0$=B$(26,20)+B$(8,4); IF A4>99999 THEN ESCAPE ELSE J1$="TR"+STR(A4:M9$)
4307 REM "GOSUB 8000; REM "REMOVED FOR TESTING CWJ SSP#098705
4310 READ (Z[11],KEY=J0$,DOM=4311)
4315 K$=KEY(Z[11],END=4390)
4320 IF K$(1,LEN(J0$))<>J0$ THEN GOTO 4390
4325 READ (Z[11],KEY=K$)IOL=0410
4329 REM "If this does not belong to this transaction skip it, else remove it also update lot transaction detail file, use type 'O' to indicate "TRANSFER OUT OF INVENTORY"
4335 IF L$(221,11)=J1$ THEN T6$="O"; GOSUB 4500; REMOVE (Z[11],KEY=K$,DOM=4336)
4340 GOTO 4315
4395 RETURN 
4400 REM "Move ICK records to ICF, resequencing as needed
4401 REM "If this is an adjustment, do not resequence, but overwrite. For rec. and transfers, do resequence.
4404 DIM L[12]
4406 L0=0; IF A4>99999 THEN ESCAPE ELSE J1$="TR"+STR(A4:M9$)
4410 READ (Z[12],KEY=J1$,DOM=4415)
4415 K$=KEY(Z[12],END=4495)
4420 IF K$(1,LEN(J1$))<>J1$ THEN GOTO 4495
4425 READ (Z[12],KEY=K$)IOL=0410
4430 IF L$(221,11)<>J1$ THEN GOTO 4415
4432 FIND (Z[15],KEY="D"+DIM(10)+L$(21,4),DOM=4433)WAREHOUSE$
4433 IF B$(1,1)="T" AND STP(MID(WAREHOUSE$,596,5),3," ")<>"" THEN L$(245,5)=WAREHOUSE$(596,5) ELSE IF POS(B$(1,1)="AR",1)<>0 AND STP(MID(WAREHOUSE$,596,5),3," ")<>"" AND STP(MID(L$,245,5),3," ")="" THEN L$(245,5)=WAREHOUSE$(596,5)
4435 REM "It's a match, remove from ICK, add to ICF and resequence
4438 IF B$(1,1)<>"A" THEN GOTO 4440 ELSE FIND (Z[11],KEY=L$(1,32),DOM=*NEXT); GOTO 4440 ! SSP#234781
4439 IF B$(1,1)="A" THEN L$(196,6)=V0$(22,6) ! SSP#234781
4440 REMOVE (Z[12],KEY=K$,DOM=4441)
4441 IF POS(X3$(9,3)="137613618092101288352",3)=0 THEN IF B$(1,1)="T" THEN L$(100,10)="" ! SSP#238786 !SSP#250497!SSP#268852 !SSP#275679 SSP307430-DBD-333-DBSPT-149880
4442 IF L$(234,8)=DIM(8) THEN GOSUB GET_LOT_NUM ! 199244 !SSP#219202
4443 L$(221,11)=""; IF L$(110,2)="TR" THEN L$(110,11)=""; REM "Clear the used field
4444 IF B$(1,1)="A" THEN IF L[4]=0 THEN REMOVE (Z[11],KEY=L$(1,32),DOM=4460); GOTO 4460 ELSE WRITE (Z[11],KEY=L$(1,32))IOL=0410; GOTO 4460
4445 REM " LET L0=L0+1,L$(31,2)=STR(L0:"00") , SSP 137680 
4446 IF POS(B$(1,1)="RT",1)<>0 THEN L$(196,6)=V0$(22,6) ! SSP# 234781
4450 WRITE (Z[11],KEY=L$(1,32),DOM=4451)IOL=0410; GOTO 4460
4455 KEY$=L$(1,32); CALL "IC2LCC",X3$,X4$,Z[11],31,2,LAST_ONE$,KEY$; L$(1,32)=KEY$; GOTO 4450
4460 T6$=B$(1,1); GOSUB 4500; REM "Lot transaction detail
4465 GOTO 4415
4495 RETURN 
4500 REM "Write out transaction to ICO, with transaction type T6$
4501 REM "lot record is in L$, L()
4505 IF P$(66,1)<>"Y" THEN GOTO 4545
4510 P6$=A$(1,6); REM "FY/AP from ICA record
4515 D6$=B$(2,6); REM "Transaction date from ICB record
4520 S6$="IT"
4530 CALL "IC2LAH",X3$,X4$,L$,L{ALL},P6$,S6$,T6$,D6$,Z[6]
4545 RETURN 
5000 REM "END OF UPDATE
5005 CLOSE (ICK,ERR=*NEXT)
5010 IF P$(44,1)="Y" THEN GOSUB 4200
5020 CALL "UPDDT6;ADD_TO_QUEUE",DT6,MEM_FL,TOD_OUTPUT_TYPE$
5100 REM "
5200 REM "CLEAR FILES
5205 PRINT @(0,12),'CE',
5210 CALL "ZZPROM","U7",X3$,0,"","","",10
5212 Z$="07C FMP...  07O ICC...  "; GOSUB 8950
5215 CALL "ZZINTZ",X3$,"B",0,STR(Z[1]:"00")+STR(Z[2]:"00")+STR(Z[7]:"00")
5220 IF P$(44,1)="Y" THEN CALL "ZZINTZ",X3$,"B",0,STR(Z[12]:"00")
5230 GOSUB 6700
5240 PRINT 'CF'
5400 REM 
5450 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 CALL "ZZPROM","U9",X3$,0,"","","",4
6025 CALL "ZZPROM","U8",X3$,0,"","","",7
6030 PRINT V0$(22,4),".",V0$(26,2),
6165 PRINT (0,ERR=6066)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6225 GOSUB 6450
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6490 RETURN 
6600 REM "RESTART LOGIG
6605 RETURN 
6610 WRITE (Z[1],KEY="")V0$,K0$,K1$,K0,K1
6690 RETURN 
6700 REM "Increment Audit Control No.
6705 F9=Z[13]
6710 A2$=X3$(146,6)+"  000100",A0$=X3$(9,3)+"AUDIT",A1$=""; EXTRACT (F9,KEY=A0$,DOM=6716)A0$,A1$
6715 A0=POS(A2$(1,6)=A1$,14); IF A0=0 THEN A1$=A1$+A2$; GOTO 6715 ELSE A2=NUM(A1$(A0+8,4))+1,A2$(9,4)=STR(A2:"0000"),A1$(A0,14)=A2$
6720 WRITE (F9,KEY=A0$)A0$,A1$
6740 RETURN 
6900 REM "Post Stats for Waste
6910 F0=Z[14]
6920 Q1$=T$(1,28),Q1=NUM(T$(29,2))
6930 Q0$="W",Q0=B[0]
6940 GOSUB 7000
6945 RETURN 
7000 REM "Update stats q0$ in period q1 with data q0
7005 IF Q0=0 THEN GOTO 7090
7010 DIM K[14]
7020 GOSUB 7100
7040 K[Q1]=K[Q1]+Q0
7060 GOSUB 7150
7090 RETURN 
7100 REM "Read stats (Packed/Unpacked)
7105 Q=POS(Q0$=S9$(49),17); IF Q=0 THEN EXITTO 7090 ELSE M0$=S9$(Q+48,17)
7110 CALL "ZZPACK",X3$,"E",M0$(3,2),"",0,0,K{ALL},F0,Q0$,Q1$,S9$
7135 GOTO 7190
7150 REM "Write stats
7160 CALL "ZZPACK",X3$,"W",M0$(3,2),"",0,0,K{ALL},F0,Q0$,Q1$,S9$
7190 RETURN 
7500 REM "CUSTOM PROGRAMMING ROUTINES
7600 REM "Update FMZ - Customer Inventory Detail Activity
7610 IF P$(35,1)<>"Y" OR POS(B$(1,1)="ART")=0 THEN RETURN 
7620 J8$=FN%FID$(Z[8]); IF J8$(4,3)<>"FMZ" THEN Z$="08C ARV...  08O FMZ...  20O FTP...  "; GOSUB 8950 ! [205703]-changed FID() to FN%FID$()
7630 GOTO 8000
7650 DIM J$(625),J[17],J9$(0)
7660 J$(1,10)=B$(26,10),J$(11,1)="D",J$(12,4)=B$(8,4),J$(16,10)=B$(36,10),J$(26,6)=B$(2,6),J$(32,3)="001"
7670 J$(35,1)=B$(1,1),J$(36,10)=J$(1,10),J$(46,40)=C$(21,40),J$(113,9)=J$(36,2)+A$(7,6),J$(137,2)="IT",J$(139,6)=V0$(22,6),J$(166,14)=B$(12,14),J$(180,4)=B$(46,4),J[0]=B[2],J[1]=B[0],J[4]=B[1],J[5]=B[3]
7680 IF J$(35,1)="T" THEN J$(92,5)=J$(11,5),J$(11,5)="D"+B$(50,4)
7685 IF J$(35,1)="A" THEN J$(92,5)=J$(11,5)
7700 WRITE (Z[8],KEY=J$(1,34),DOM=7701)IOL=0400; GOTO 7720
7710 IF NUM(J$(32,3))<999 THEN J$(32,3)=STR(NUM(J$(32,3))+1:"000"); GOTO 7700 ELSE ESCAPE ; GOTO 7700
7720 WRITE (Z[20],KEY=J$(1,10)+J$(16,10)+J$(11,5)+J$(26,9),DOM=7721); REM " SSP# 142993
7725 IF J$(35,1)<>"T" OR J9$="Y" THEN GOTO 7740
7730 J9$="Y",J$(92,5)=""; GOTO 7710
7740 RETURN 
8000 REM "Setup FMZ record from B$
8005 DIM C[40],C$(187); FIND (Z[3],KEY=B$(26,20),DOM=8006)IOL=0330
8015 DIM J$(345),J[17],J9$(0)
8020 J$(1,10)=B$(26,10),J$(11,1)="D",J$(12,4)=B$(8,4),J$(16,10)=B$(36,10),J$(26,6)=B$(2,6),J$(32,3)="001"
8022 J1$="TR"+STR(A4:"00000")+"   "+" "
8025 J$(35,1)=B$(1,1),J$(36,10)=J$(1,10),J$(46,40)=C$(21,40),J$(113,9)=J$(36,2)+A$(7,6),J$(137,2)="IT",J$(139,6)=V0$(22,6),J$(154,1)=C$(112,1),J$(166,14)=B$(12,14),J$(180,4)=B$(46,4),J[0]=B[2],J[1]=B[0],J[4]=B[1],J[5]=B[3] ! SSP#249272
8035 IF J$(35,1)="A" THEN J$(92,5)=J$(11,5)
8040 IF J$(35,1)="T" THEN HLD$=J$(11,5),J$(92,5)=J$(11,5),J$(11,5)="D"+B$(50,4)
8050 REM "FMZ
8055 IF J[1]=0 THEN GOTO 8080
8070 IF P$(44,1)="Y" AND J$(154,1)="Y" THEN CALL "IC2LUA",X3$,X4$,0,"ICF",0,0,J$,"","","",J{ALL},J1$,-1; GOTO 8080 ! SSP#249272
8072 WRITE (Z[8],KEY=J$(1,34),DOM=*NEXT)IOL=0400; GOTO 8080 ! SSP#249272
8075 IF NUM(J$(32,3))<999 THEN J$(32,3)=STR(NUM(J$(32,3))+1:"000"); GOTO 8072 ELSE ESCAPE ! SSP#249272
8080 IF J$(35,1)="T" THEN J$(92,5)="D"+B$(50,4),J$(11,5)=HLD$
8085 IF P$(44,1)="Y" AND J$(154,1)="Y" THEN CALL "IC2LUA",X3$,X4$,0,"ICK",0,0,J$,"","","",J{ALL},J1$,1; GOTO 8095
8088 IF J$(35,1)="T" THEN WRITE (Z(8),KEY=J$(1,34),DOM=*NEXT)IOL=0400; GOTO 8095 ELSE GOTO 8095 ! SSP#249272
8090 IF NUM(J$(32,3))<999 THEN J$(32,3)=STR(NUM(J$(32,3))+1:"000"); GOTO 8088 ELSE ESCAPE ! SSP#249272
8095 RETURN 
8800 REM "G/L distribution
8815 IF P2$(9,4)<>A$(1,4) THEN P2$(1,13)=X3$(9,3)+"G/LYE"+A$(1,4); READ (Z[13],KEY=P2$(1,12))P2$
8816 Q=NUM(P2$(13,2)),Q=15+Q*6
8820 U$="A"+FNV$(P2$(9,4))+A$(5,2)+"IT"+V0$(22,6)+Q0$+"  "+B$(2,6)+"IC"
8830 DIM U[1]; U0$="Ref "+A$(7,6)+": "+"Loc: "+L2$+" PC: "+C$(61,3)+" "+G$(5,15)
8835 IF LEN(U0$)>45 THEN U0$=U0$(1,45)
8845 U[0]=Q0
8850 U$(26,2)=X3$(143,2),K1=FND(X3$(143,2))
8855 IF A$(7,1)<>"*" THEN WRITE (Z[6],KEY=U$(1,27),DOM=8860)IOL=0420 END_IF ; GOTO 8865
8860 K1=K1+1,U$(26,2)=FNC$(K1); GOTO 8855
8865 X3$(143,2)=FNC$(K1+1)
8890 RETURN 
8900 REM "Functions
8930 DEF FNC$(C)=CHR(32+INT(C/95))+CHR(32+MOD(C,95))
8935 DEF FND(Z9$)=(ASC(Z9$(1,1))-32)*95+ASC(Z9$(2,1))-32
8950 REM FILE OPENS
8960 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 8990,8961
8990 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9045 REM 
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOSUB 6600; GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 CLOSE (MEM_FL)
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 BEGIN ; SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 GET_LOT_NUM:
10010 CALL "UPDICF;GET_NEXT_LOT_NUM",Z[13],X3$,NEXT_NUM$; L$(234,8)=NEXT_NUM$
10090 RETURN 
10500 TOD_LOTS:
10505 DIM ICK[12]
10510 LOT_REC$="TR"+STR(A4:"00000")
10520 READ (ICK,KEY=LOT_REC$,ERR=*NEXT)
10530 ICK_KEY$=KEY(ICK,END=*RETURN); IF ICK_KEY$(1,7)<>LOT_REC$ THEN GOTO *RETURN
10540 READ (ICK,KEY=ICK_KEY$)ICK$,ICK[0],ICK[1],ICK[2],ICK[3],ICK[4],ICK[5],ICK[6],ICK[7],ICK[8],ICK[9],ICK[10],ICK[11],ICK[12]
10550 CALL "UPDDT3;TOD_CUST_INV_UPD_NOT_LOT",DT3,MEM_FL,DT0,FM0,ZZPARM,IC0,ICF,ICK$,ICK{ALL},X3$,TOD_OUTPUT_TYPE$,ADJ_REF$
10560 GOTO 10530
10590 RETURN 
11000 UPDATE_DT3:! [SSP-214694]-added routine
11030 HLD_T0=T[0] ! save the qty
11035 T[0]=HLD_QTY ! set the qty to the qty by uom
11050 CALL "UPDDT3;TOD_CUST_INV_UPD_NOT",DT3,MEM_FL,DT0,FM0,ZZPARM,IC0,ICF,T$,T{ALL},X3$,TOD_OUTPUT_TYPE$,ADJ_REF$
11060 T[0]=HLD_T0 ! restore the qty
11195 RETURN 
56000 ! changes since 03/01/2006
56005 REM "190474-Additional Services - Enhance TF to provide for tax codes   
56007 REM "199244-Inventory Transaction entry does not write lot serial       
56008 REM "198612-TopForm Output director                                     
56010 REM "203723-PE during T2 batch update, audit 9209.02                    
56012 REM "205703-Oracle - FID and FIB calls, replace with FN%FID$ and FN%FIB$
56014 REM "214694-Inventory Adjustment XML - 830                              
56015 REM "219202-When a Lot record is created as the result of an IC         
56016 REM "234781-Kit production update does not update audit number to       
56017 REM "249272-IC-Transaction receipt does not post record to FMZ if item  
56018 REM "250497-Company specific code to not clear bin loc when inventory istransfered from one loc to another
56019 REM "273055-Expand IC2 for 6 additional cost breaks, allow entry in GUI 
56020 REM "307430-DBD-333;Add 101 to some of 288's company specfic code       
