0010 REM "Pricing Table Calculation <IC2ICF>
0020 REM "Load Q-array with quantity pricing
0035 REM "5.7 - 04/23/12 - 10.849166 - jvv - SSP# 251545
0037 REM "251545-Needs "Pricing Table" feature, specifically the "Discount   
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0100 SETERR 9000
0110 ENTER X3$,F,P1$,U1,U2,U3,P1,C1,C2,C3,Q{ALL}
0120 REM "F=FMP file slot, P1$=item price class + customer price cat+item code, U1=qty/selling unit, U2=qty/inv unit, U3=i/c selling qty/unit, P1=price, C1=average cost, C2=last cost, C3=salesperson cost, Q(0-5)=quantities, Q(6-11)=prices,P1$(1,1)="~"=Q(odd)=qtys,Q(even)=prices
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15],A[16],A[17],A[18],A[19],A[20],A[21],A[22],A[23],A[24]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6]
0340 IOLIST IC$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
1000 DIM A[24],B[6]; X=0
1020 IF P1$(1,1)="~" THEN X=-1; P1$=P1$(2)
1100 FIND (F,KEY="P"+P1$(1,6),DOM=9900)IOL=0310
1120 IF POS(A$(38,1)="MDGSQ")=0 THEN GOTO 9900 ! WO251545
1125 CTYPE$=A$(38,1) ! wp 251545
1130 IF CTYPE$="Q" THEN GOSUB 5000; IF Q_TYPE THEN GOTO 1600 ELSE GOTO *NEXT ! WO251545
1200 FOR I=1 TO 12
1220 I1=I*2-1,I2=I1+1,J1=I-1,J2=J1+6; IF I>6 THEN J1=J1+18,J2=J2+18
1240 IF A[I1]=0 THEN Q[J1]=0,Q[J2]=0; GOTO 1500
1280 Q[J1]=A[I1]
1290 IF A$(45,1)<>"Y" AND A[0]=1 THEN Q[J1]=Q[J1]*U1
1300 ON POS(CTYPE$="MDGS")-1 GOSUB 2000,2100,2200,2400 ! WO 251545
1500 NEXT I
1600 IF X>-1 THEN GOTO 1900
1620 FOR I=0 TO 5
1630 A[I*2+1]=Q[I],A[I*2+2]=Q[I+6],A[I*2+13]=Q[I+24],A[I*2+14]=Q[I+30]
1640 NEXT I
1650 Q[0]=P1; FOR I=1 TO 24; Q[I]=A[I]; NEXT I
1900 X=1
1990 GOTO 9900
2000 REM "Markup
2020 GOSUB 2300
2040 Q[J2]=C+C*A[I2]*.01
2090 RETURN 
2100 REM "Discount
2120 P=P1*U1/U3
2140 Q[J2]=P*(100-A[I2])*.01
2190 RETURN 
2200 REM "Gross Profit
2220 GOSUB 2300
2240 IF A[I2]<100 THEN Q[J2]=C*100/(100-A[I2]) ELSE Q[J1]=0,Q[J2]=0
2290 RETURN 
2300 REM "Which cost?
2310 IF I>1 THEN RETURN 
2320 ON POS(A$(39,1)="ALS")-1 GOTO 2330,2340,2350
2330 C=C1*U1/U2; RETURN 
2340 C=C2*U1/U2; RETURN 
2350 C=C3*U1/U2; RETURN 
2400 REM SELLING PRICE
2410 Q[J2]=A[I2]
2440 RETURN 
5000 ITEM_QTY_BREAK:! WO251545
5008 DIM IC0[40],QB[35]
5010 CHL=UNT,IC0_KEY$=P1$(7,20); OPEN (CHL,ERR=QTY_BREAK_EXIT)"IC0"+%C$
5050 FIND (CHL,KEY=IC0_KEY$,DOM=QTY_BREAK_EXIT)IOL=0340
5090 ! Set QB[ALL] to IC0[ALL] and test for Qty Breaks. If none exist, set the type to "D" for price class else calculate price break amount based on the % in price class table setup.
5100 FOR J=0 TO 5; QB[J]=IC0[J*2+1],QB[J+24]=IC0[J*2+21],QB[J+6]=IC0[J*2+2]*U1/U3,QB[J+30]=IC0[J*2+22]*U1/U3; NEXT J
5140 FOR Z=0 TO 5
5150 IF QB[Z]>0 OR QB[Z+24]>0 THEN Q_TYPE=1; EXITTO 5170
5160 NEXT Z
5170 IF NOT(Q_TYPE) THEN CTYPE$="D"; GOTO QTY_BREAK_EXIT
5180 Q_PERC=A[2]
5220 FOR I=1 TO 12
5230 I1=I*2-1,I2=I1+1,J1=I-1,J2=J1+6; IF I>6 THEN J1=J1+18,J2=J2+18
5240 IF QB[J1]=0 THEN GOTO 5270
5250 P=QB[J2] ! *U1/U2
5260 QB[J2]=P*(100-Q_PERC)*.01
5270 NEXT I
5280 FOR J=0 TO 35; Q[J]=QB[J]; NEXT J
5290 QTY_BREAK_EXIT:
5295 CLOSE (CHL,ERR=*NEXT)
5298 RETURN 
5299 ! 
9000 EXIT ERR
9900 REM 
9910 IF X=1 THEN P1$="  Pricing Table - Item Class: "+P1$(1,3)+" Category: "+P1$(4,3)+" Method: "+A$(38,1)+" "+A$(39,1) ELSE P1$=""
9950 EXIT 
9999 END 
56000 REM "251545-Needs "Pricing Table" feature, specifically the "Discount   
