0010 REM " Physical Count Update <IC2PIU>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 08/06/14 - 9.235 - tma - SSP# 271675
0037 REM "271675-CHUI & GUI - Physical Inventory Update - Last Counted date  
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR 
0100 SETERR 9000
0110 X0$="IC2PIU",X1$=" Physical Count Update"
0120 DIM Z0$(80,"-"),P2$(20),S$(10),Y[6]
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0250 DEF FNC$(C)=CHR(32+INT((C+32)/95))+CHR(32+MOD(C,95))
0260 DEF FND(Z9$)=(ASC(Z9$(1,1))-32)*95+ASC(Z9$(2,1))-32
0270 DEF FNL(Z1,Z2,Z3)=Z1*Z2*(MOD(Z3+1,Z3+2)-SGN(Z3))
0290 IOLIST Y[0],Y[1],Y[2],Y[3],Y[4]
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A0$,A0[0],A0[1],A0[2],A0[3],A0[4],A0[5],A0[6],A0[7],A0[8],A0[9],A0[10],A0[11],A0[12]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21],B[22],B[23],B[24],B[25],B[26],B[27],B[28],B[29],B[30]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20]
0331 IOLIST C$,C[0],STR(C[1]),STR(C[2]),C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20]
0340 IOLIST D$
0350 IOLIST E$
0360 IOLIST F$
0390 IOLIST T$,T[0],T[1]
0400 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12],J[13],J[14]
0410 IOLIST L$,L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12]
0420 IOLIST U1$,U0
0430 IOLIST U2,U2$,U2[0],U2[1],U2[2],U2[3]
0450 DIM A[4],A0[12],B[19],C[10],D$(223),E$(32),F$(202),M$(20),M[1]
0500 REM "FILES
0502 F0$="PI0"+X3$(1,3); CALL "ZZTFLE",X3$,F0$,"ICL...",500,45,43
0505 Z=NUM(X3$(60,3)); DIM Z[Z]
0510 Z$="01L ICL...  02O IC0...  03O IC1...  04O FM0...  05O FMP...  06O ARV...  09O IC8...  10O FMZ...  11O ICF...  18O DT3...  19O DT6...  20O FTP...  21O DT0...  22O FM0...  12O PI0"+X3$(1,3)+"  " ! SSP#254907
0515 Z$=Z$+"13O ZZPARM  "
0517 ! IF X3$(145,1)="1" THEN CALL "ZZBATZ",X3$,X4$,"GL2JAA","Physical Inventory" !SSP#254907        
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0521,9900
0525 DT3=Z[18],DT6=Z[19],DT0=Z[21],ZZPARM=Z[13],FM0=Z[22]
0530 MEM_FL=HFN; OPEN (MEM_FL)"*MEMORY*"
0550 READ (Z[13],KEY=X3$(9,3)+"G/L")G0$
0580 Q9$="C"; IF G0$(40,1)="A" THEN Q9$="A" ELSE IF G0$(180,1)="Y" THEN Q9$=Q9$+"A"
0585 RT$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT$
0600 REM "
0610 FIND (Z[13],KEY=X3$(9,3)+"I/C")P$
0620 FIND (Z[13],KEY=X3$(9,3)+"PII/C")P9$
0695 CALL "ZZPROM","U6",X3$,0,U9$,"","",0
0730 DIM A$(44),A[4]
0800 REM "CHECK FOR ROOM?
0805 CALL "ZZPROM","U1",X3$,0,"","","",0
0810 DIM X[Z,1],X$(0)
0815 FOR X=1 TO Z
0820 CALL "ZZINFO",X,0,X3$,A,B,0,0,0,0,0,""; X[X-1,0]=A,X[X-1,1]=B
0825 NEXT X
0830 PRINT @(0,22),'CL',
0835 IF X[Z[1]-1,0]=0 THEN CALL "ZZPROM","U2",X3$,S3,"","","",0; GOTO 9900
0840 GOTO 0900
0880 REM "PROMPT OUT OF ROOM
0890 CALL "ZZPROM","U3",X3$,S3,"","","",0; GOTO 9900
0900 REM "RESTART LOGIC
0905 V0$=X3$(1,6)+X3$(40,3)+DAY+STR(TIM*100:"0000")+X3$(178,6); WRITE (Z[1],KEY="",DOM=0906)V0$
0910 EXTRACT (Z[1],KEY="")V0$,K0$,K1$,K0,K1; I1=IND(Z[1])
0915 GOSUB 6000
0920 IF K0$="" THEN READ (Z[1],KEY=K0$); GOTO 0960
0930 EXTRACT (Z[1],KEY=K0$,DOM=0931)IOL=0310
0935 CALL "ZZPROM","U4",X3$,10,"","","",0; PRINT " ",A$(1,4)+"-"+A$(5,10)+"-"+A$(15,20)+"-"+A$(35,1)
0940 CALL "ZZPROM","U5",X3$,0,"","","",14
0970 CALL "ZZPROM","9",X3$,S3,"","","",0; ON S3 GOTO 0971,9910 ! SSP#254907
0975 PRINT @(0,12),'CL',
0980 Z$="07O GL7...  08O GL8...  "; IF X3$(145,1)="1" THEN CALL "ZZBATZ",X3$,X4$,"GL2JAA","Physical Inventory" ! SSP#254907
0990 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0991,9900 ! SSP#254907
1000 REM "READ NEXT RECORD
1002 GOSUB 8000
1005 READ (Z[12],END=5000)J5$
1020 READ (Z[1],KEY=J5$)IOL=0310
1022 HLD_QTY=A0[4] ! [SSP-214694]-save the qty
1025 DIM B$(128),B[30]; B$(1,20)=A0$(1,20)
1026 READ (Z[2],KEY=B$(1,20),DOM=1027)IOL=0320
1030 GOSUB 4500
1090 PRINT @(7,12),U9$," ",A$(1,4)," ",A$(5,10)," ",A$(21,10),
1200 GOSUB 2000
1800 REM "RESTART LOGIC
1810 GOSUB 6600
1950 GOTO 1005
2000 REM "Update Inventory Detail Location
2020 DIM C$(58),C[20]
2030 C$(1,24)=A$(15,20)+A$(1,4)
2040 EXTRACT (Z[3],KEY=C$(1,24),DOM=2041)IOL=0330; GOTO 2045
2042 C[1]=A[4],C[2]=A[4]
2045 REM "A0=diff in SKUs, A1=average cost from masterfile
2050 A0=A[2]-A[0],A1=A[4]
2080 REM "Post adj and new bin loc if app
2085 C[6]=C[6]+A0; IF MID(A$,221,1)<>"Y" AND POS(" "<>A$(44,10))<>0 THEN C$(35,10)=A$(44,10)
2086 C$(29,6)=X3$(15,6),C[9]=C[9]+A[2]; IF A0<>0 AND X3$(15,6)>C$(47,6) THEN C$(47,6)=X3$(15,6) ! SSP#271675
2090 WRITE (Z[3],KEY=C$(1,24))IOL=0331
2095 IF RT$>"" THEN IF RT$(7,1)="H" THEN CUST$=C$(1,10); CALL "RT2WOC",ERR=2096,X3$,X4$,CUST$,"IC1...","U",C$(1,24)
2100 REM 
2101 SELL_UM$=A0$(129,4); IF STP(SELL_UM$)="" THEN SELL_UM$=B$(120,4) ! SSP#219717
2102 DIM DT3[4]; READ (Z[13],KEY="U/M"+SELL_UM$)M$,M[0],M[1] ! SSP#214694,SSP#219717
2103 IF M$(20,1)="Y" THEN M0=M[1] ELSE M0=A0[3] ! SSP#214694
2105 HLD_A0=A[0],HLD_A2=A[2] ! [SSP-214694]-save the qty         
2106 REM "A0[4]=HLD_QTY ! [SSP-214694]-set the qty
2107 IF M0<>0 THEN DT3[2]=A[2]/M0,DT3[0]=A[0]/M0 ELSE DT3[2]=A[2],DT3[0]=A[0] ! SSP#214694
2110 ! IF A0$(21,1)="9" THEN CALL "UPDDT3;TOD_CUST_INV_UPD_NOT_PI",ERR=*NEXT,DT3,MEM_FL,DT0,FM0,ZZPARM,A0$,A0{ALL},X3$,TOD_OUTPUT_TYPE$
2111 CALL "UPDDT3;TOD_CUST_INV_UPD_NOT_PI",ERR=*NEXT,DT3,MEM_FL,DT0,FM0,ZZPARM,A0$,DT3{ALL},X3$,TOD_OUTPUT_TYPE$ ! SSP#214694
2120 A[0]=HLD_A0,A[2]=HLD_A2 ! [SSP-214694]-restore the qty      
2190 REM 
2200 REM "Make G/L postings, assume A0 and A1 are set properly
2202 IF POS("A"=Q9$)=0 OR A0=0 THEN GOTO 2390
2205 REM "Get product code & sales dist code & location
2210 IF A$(1,4)<>D$(12,4) THEN DIM D$(223); FIND (Z[4],KEY="D"+S$(1,10)+A$(1,4),DOM=2211)IOL=0340
2215 IF B$(61,3)<>E$(2,3) THEN DIM E$(32); FIND (Z[5],KEY="T"+B$(61,3),DOM=2216)IOL=0350
2220 IF E$(24,9)<>F$(1,9) THEN DIM F$(202); FIND (Z[6],KEY=E$(24,9),DOM=2221)IOL=0360
2249 REM "I0$=inv acct, I1$=Phys inv adj acct, A2=$ amount to post, in the case of lotted items this is the calculated unit cost
2250 I0$=F$(118,12),I1$=F$(166,12); IF A$(54,1)="Y" THEN GOSUB 4600; GOTO 2253 ELSE A2=A0*A1
2251 IF B$(124,4)<>M$(4,4) THEN DIM M$(20),M[1]; READ (Z[13],KEY="U/M"+B$(124,4))M$,M[0],M[1]
2252 IF M$(20,1)="Y" AND M[0]<>0 THEN A2=A2/M[0] ELSE IF B[15]<>0 THEN A2=A2/B[15]
2259 REM "Add location sub code if necc
2260 IF P$(39,1)<>"Y" THEN GOTO 2350
2270 J0=NUM(P$(40,2),ERR=2350),J1=NUM(P$(42,1),ERR=2350)
2280 I0$(J0,J1)=D$(214,J1),I1$(J0,J1)=D$(214,J1)
2350 REM "Post G/L
2355 IF MID(K0$,1,1)="9" THEN GOTO 2400
2360 Q0$=I0$,Q0=A2; GOSUB 8700
2370 Q0$=I1$,Q0=-A2; GOSUB 8700
2400 REM "Post to detail transaction file
2405 IF P$(35,1)<>"Y" OR A0=0 THEN GOTO 2480
2410 DIM T$(73),T[1]
2415 T$(1)=A$(15,20)+A$(1,4),T$(25,6)=P9$(9,6),T$(31,6)=X3$(15,6)
2420 T$(39,1)="A",T$(50,15)="Bin: "+A$(5,10),T$(65,2)="PI",T$(67,6)=V0$(22,6)
2430 T[0]=A0,T[1]=A2
2450 T$(37,2)=X3$(143,2),K1=FND(X3$(143,2))
2455 WRITE (Z[9],KEY=T$(1,38),DOM=2460)IOL=0390; GOTO 2465
2460 IF K1>=10038 AND K1<=10099 THEN K1=K1+100 ELSE IF K1>21240 THEN K1=0; REM "From 10038 10099 cause generation of fld sep in key >21240 error41
2463 K1=K1+1,T$(37,2)=FNC$(K1); GOTO 2455
2465 IF K1>=10038 AND K1<=10099 THEN K1=K1+100 ELSE IF K1>21240 THEN K1=0; REM "From 10038 to 10099 cause generation error of fld sep in key >21240 cause err 41
2469 X3$(143,2)=FNC$(K1+1)
2470 GOSUB 7600
2480 IF A0$(221,1)="Y" THEN GOSUB 3000
2490 RETURN 
3000 REM "Update lotted items based on the variance A0.
3001 REM "IF A0 is positive create a lot and write it out to the lot file.
3002 REM "If A0 is negative commit remove or reduce matching lots until A0 is used up or there are no more matching lots.
3003 REM "If any A0 is left over, create a lot with a negative amount and commit it to PI
3004 REM "A matching lot is not committed to an order, and matches based on the criteria used in the freeze program IC2PIA
3005 DIM L[12]
3007 IF A0<>0 THEN GOSUB 3200
3010 REM "If bin # has changed, update the matching lot records
3015 IF POS(" "<>MID(A0$,247,10))=0 AND MID(L$,121,12)=A0$(121,12) AND L[3]=A0[3] AND L[2]=A0[2] THEN GOTO 3095
3020 READ (Z[11],KEY=A0$(1,30),DOM=3021)
3025 K$=KEY(Z[11],END=3095)
3030 IF K$(1,30)<>A0$(1,30) THEN GOTO 3095
3035 READ (Z[11],KEY=K$)IOL=0410
3040 IF L$(232,2)<>A0$(257,2) THEN GOTO 3025
3045 L0=0,L1=0,L2=0,L3=0
3050 EXTRACT (Z[11],KEY=K$)IOL=0410
3060 IF POS(" "<>A0$(247,10))>0 THEN L$(100,10)=A0$(247,10); REM "Set new bin location
3062 IF POS(" "<>A0$(82,18))>0 THEN L$(82,18)=A0$(82,18) ! IDB#024368
3065 IF L$(121,12)=A0$(121,12) AND L[3]=A0[3] AND L[2]=A0[2] THEN GOTO 3085
3070 L[4]=FNL(L[4],L[3],L[2])/FNL(1,A0[3],A0[2])
3075 L[3]=A0[3],L[2]=A0[2]
3080 GOSUB 3100
3085 WRITE (Z[11])IOL=0410
3090 IF L0<>0 THEN GOSUB 3150
3092 GOTO 3025
3095 RETURN 
3100 REM "prorate fractional L(4) quantity; L2=fract cost, L3=fract frt, L0=fract qty in eaches
3110 IF FPT(L[4])=0 THEN GOTO 3140
3120 L0=FNL(FPT(L[4]),L[3],L[2]),L1=FNL(INT(L[4]),L[3],L[2]),L[4]=INT(L[4]),L2=L[0]*L0/(L0+L1),L[0]=L[0]-L2,L3=L[1]*L2/(L0+L1),L[1]=L[1]-L3
3140 RETURN 
3150 REM "Write fractional lot
3160 L$(221,13)="",L[0]=L2,L[1]=L3,L$(121,12)="CASE",L[2]=0,L[3]=L0,L[4]=1; GOSUB 3625; READ (Z[11],KEY=K$)
3190 RETURN 
3200 REM "Set L0 = A0(4)-A0(8) and L1=A2, and subtract amounts from lots until all of L0 is used up, or we run out of lots. If we run out of lots, then create a lot with a -L0 quantity ( and cost ). Adjust L1 as we go
3202 REM "If L0 is negative commit remove or reduce matching lots until L0 is used up or there are no more matching lots.
3203 REM "If any L0 is left over, create a lot with a negative amount and commit it to PI
3204 REM "A matching lot matches based on the criteria used in the freeze program IC2PIA - LATER, WE NEED TO NOT MATCH ON LOTS COMMITTED TO AN ORDER WHOOSE HEADER INDICATES THAT INVOICING HAS TAKEN PLACE
3205 L0=FNL(A0[4]-A0[8],A0[3],A0[2]),L1=-A2; DIM L$(269),L[12]
3210 READ (Z[11],KEY=A0$(1,30),DOM=3211)
3220 K$=KEY(Z[11],END=3270)
3225 IF K$(1,30)<>A0$(1,30) THEN GOTO 3270
3230 READ (Z[11],KEY=K$,DOM=3220)IOL=0410
3234 REM "If record matches and bin # has changed, update the bin number
3238 REM "Do check for Transaction in progress before matching.
3240 IF POS(" "<>L$(221,11))>0 THEN GOTO 3265
3245 IF L$(232,2)<>A0$(257,2) THEN GOTO 3265
3246 IF L$(110,8)<>DIM(8) THEN GOTO 3265 ! SSP237555, if committed then don't adjust this lot
3248 IF L0<0 THEN GOSUB 3350
3250 IF L0>=FNL(L[4],L[3],L[2]) THEN GOSUB 3300 ELSE GOSUB 3350
3265 IF L0=0 THEN GOTO 3295 ELSE GOTO 3220
3280 IF L0<>0 THEN GOSUB 3600
3295 RETURN 
3300 REM "L0 is greater than or equal to the amount on the lot, so remove the lot and decrement L0 AND L1
3305 L0=L0-FNL(L[4],L[3],L[2]),L1=L1-L[0]
3310 REMOVE (Z[11],KEY=K$)
3345 RETURN 
3350 REM "L0 is less than the amount on the lot, so subtract L0 from the lot amount and rewrite it, set L0 to 0  - with the possible new unit of measure
3351 REM "Adjust cost by L1 and freight by ratio
3352 L[0]=L[0]-L1,L[1]=L[1]*(FNL(L[4],L[3],L[2])-L0)/FNL(L[4],L[3],L[2])
3355 L[4]=(FNL(L[4],L[3],L[2])-L0)/FNL(1,A0[3],A0[2])
3358 L$(121,12)=A0$(121,12),L[3]=A0[3],L[2]=A0[2]
3360 IF POS(" "<>A0$(82,18))>0 THEN L$(82,18)=A0$(82,18) ! IDB#024368
3365 L0=0,L1=0,L2=0,L3=0; GOSUB 3100
3375 WRITE (Z[11],KEY=K$)IOL=0410
3380 IF L0<>0 THEN GOSUB 3150
3385 L0=0,L1=0
3395 RETURN 
3600 REM "Take leftover L0 amount and create a negative lot, that is committed to 'PI', physical inventory"
3605 DIM L$(269),L[12]
3610 L$(1)=A0$(1,240),L$(221)=""; FOR I=0 TO 6; L[I]=A0[I]; NEXT I
3612 REM LET L$(221,2)="PI"
3615 L[4]=(-L0)/FNL(1,L[3],L[2]),L[0]=L1*SGN(L0)
3620 IF A0[1]<>0 AND A0[4]<>0 THEN L[1]=A0[1]*L0/FNL(A0[4],A0[3],A0[2])
3622 IF POS(" "<>A0$(247,10))>0 THEN L$(100,10)=A0$(247,10)
3625 L$(31,2)="00"
3630 WRITE (Z[11],KEY=L$(1,32),DOM=3631)IOL=0410; GOTO 3640
3632 L$(31,2)=STR(NUM(L$(31,2))+1:"00")
3633 GOTO 3630
3640 LOG_MSG$=FN%CDS$+"|"+X3$(40,3)+"|"+L$(1,10)+"|"+L$(11,10)+"|"+L$(21,4)+"|"+L$(25,6)+"|"+L$(31,2)+"|"+STR(L[4]); GOSUB LOG_MESSAGE ! SSP237555
3645 RETURN 
4500 REM "Convert A0$, and A0() into IC3 format record in A$ and A()
4501 REM "A$(54,1)='Y' will mean that this was a lotted itme
4502 REM "For lotted items, A(4) average cost will be Total cost instead
4505 DIM A$(54),A[4]
4510 A$(1)=A0$(21,4)+A0$(100,10)+A0$(1,20)+A0$(121,4)+A0$(223,4)
4511 A$(44,10)=A0$(247,10)
4515 A$(54,1)=A0$(221,1)
4519 REM "Handle non lots here, then goto 4550
4520 IF A0$(221,1)<>"Y" THEN A[0]=A0[4],A[1]=A0[2],A[2]=A0[8]+A0[10]+A0[12],A[3]=A0[2],A[4]=A0[0]; GOTO 4550
4524 REM "Handle lotted quantities here
4529 REM "Based on u/ms that are used, up the qties to eaches for A(0) and A(2), the unit per (A(1) and A(3)) are based on the number of eaches in the primary unit.
4530 IF A0$(125,4)="    " THEN A[0]=A0[4]*A0[3],A[2]=A0[8]*A0[3],A[1]=A0[3],A[3]=A0[3] ELSE A[0]=A0[4]*A0[2]*A0[3],A[2]=A0[8]*A0[2]*A0[3],A[1]=A0[2]*A0[3],A[3]=A0[2]*A0[3]
4533 IF B[15]=0 THEN B[15]=1
4534 REM "A(4) will be the TOTAL cost NOT average cost. The unit cost will be computed in C for use later if we need it
4535 IF A[0]=0 THEN CALL "FM2EXT",Z[13],1,B$(124,4),B[15],A[2],C,A0[0],2 ELSE CALL "FM2EXT",Z[13],1,B$(124,4),B[15],A[0],C,A0[0],2
4540 A[4]=A0[0]
4595 RETURN 
4600 REM "Figure variance $, A2 if lotted item
4605 IF A[0]=0 THEN A5=A0 ELSE A5=A[0]
4607 IF A5=0 THEN A2=0; GOTO 4645
4610 A2=A[4]*A0/A5
4645 RETURN 
4900 REM "END OF LINES
4910 Y[4]=-1; WRITE (F,IND=0)IOL=0290
4920 CALL "ZZEXPF",X3$,X4$,"X"+STR(F),"",G9; IF G9>0 THEN ESCAPE 
4925 EXTRACT (F,IND=0)IOL=0290
4930 Z=NUM(FIN(F,"MAXREC")); Y[3]=Z-1
4935 Y[4]=-2; WRITE (F,IND=0)IOL=0290
4940 GOTO 5215
5000 REM "END OF UPDATE
5005 CALL "UPDDT6;ADD_TO_QUEUE",DT6,MEM_FL,TOD_OUTPUT_TYPE$
5020 GOSUB 8770
5100 REM "CLEAR FILES
5110 CALL "ZZPROM","U7",X3$,0,"","","",10
5115 X3$(174,4)="    "
5120 CALL "ZZINTZ",X3$,"B",0,STR(Z[1]:"00")
5130 GOSUB 6700
5135 PRINT 'CF'
5190 GOTO 9900
5200 REM "GET NEXT INDEX TO FILE IN A9
5205 F=Z[8]
5210 EXTRACT (F,IND=0,ERR=5295)IOL=0290
5212 IF Y[4]=-2 THEN READ (F); GOTO 5270
5215 IF Y[0]>=Y[3] OR Y[2]>=Y[3] THEN GOTO 4900 ELSE Y[4]=-2
5220 WRITE (F,IND=0)IOL=0290
5230 IF Y[1]<1 THEN A9=Y[2],Y[2]=Y[2]+1 ELSE A9=Y[1]; READ (F,IND=A9)Y[1]
5240 Y[0]=Y[0]+1,Y[4]=-1
5250 WRITE (F,IND=0)IOL=0290
5255 U1=0
5260 RETURN 
5270 LOCK (F,ERR=5210); Y[4]=-1; GOTO 5215
5295 IF ERR<>0 THEN GOTO 9000 ELSE RETRY 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 CALL "ZZPROM","U9",X3$,0,"","","",4
6025 CALL "ZZPROM","U8",X3$,0,"","","",7
6030 PRINT V0$(22,4),".",V0$(26,2),
6165 PRINT (0,ERR=6066)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6225 GOSUB 6450
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6490 RETURN 
6600 REM "RESTART LOGIG
6605 RETURN 
6610 WRITE (Z[1],IND=I1)V0$,K0$,K1$,K0,K1
6690 RETURN 
6700 REM "Increment Audit Control No.
6705 F9=Z[13]
6710 A2$=X3$(146,6)+"  000100",A0$=X3$(9,3)+"AUDIT",A1$=""; EXTRACT (F9,KEY=A0$,DOM=6716)A0$,A1$
6715 A0=POS(A2$(1,6)=A1$,14); IF A0=0 THEN A1$=A1$+A2$; GOTO 6715 ELSE A2=NUM(A1$(A0+8,4))+1,A2$(9,4)=STR(A2:"0000"),A1$(A0,14)=A2$
6720 WRITE (F9,KEY=A0$)A0$,A1$
6740 RETURN 
7500 REM "CUSTOM PROGRAMMING ROUTINES
7600 REM "Update FMZ - Customer Inventory Detail Activity
7650 DIM J$(625),J[17],J9$(0)
7660 J$(1,10)=A$(15,10),J$(11,1)="D",J$(12,4)=A$(1,4),J$(16,10)=A$(25,10),J$(26,6)=X3$(15,6),J$(32,3)="001"
7670 J$(35,1)="A",J$(36,10)=J$(1,10),J$(137,2)="PI",J$(139,6)=V0$(22,6),J$(166,14)="",J$(180,4)=B$(124,4),J[0]=B[15],J[1]=A0,J[4]=A1,J[5]=A2,J$(92,5)=J$(11,5),J$(46,40)=B$(21,40)
7673 CALL "FM2EXT",Z[13],1,A0$(129,4),A0[3],A0[6],SELL,A0[5],2; J[0]=A0[6],J[1]=A0,J[4]=SELL
7674 CALL "FM2EXT",Z[13],0,A0$(129,4),A0[3],J[1],SELL,EXT,2; J[5]=EXT
7675 J$(231,9)=A0$(41,9),J$(113,9)="00P/I"
7680 REM "STILL NEED FMS PRICE - OR - SELLING PRICE VALUE NOT COST!
7685 J$(447,6)=A0$(25,6) ! WO220977, lot receipt date
7700 WRITE (Z[10],KEY=J$(1,34),DOM=7701)IOL=0400; GOTO 7720
7710 IF NUM(J$(32,3))<999 THEN J$(32,3)=STR(NUM(J$(32,3))+1:"000"); GOTO 7700 ELSE ESCAPE ; GOTO 7700
7730 WRITE (Z[20],KEY=J$(1,10)+J$(16,10)+J$(11,5)+J$(26,9),DOM=7731); REM " SSP# 142993
7740 RETURN 
7800 LOG_MESSAGE:! SSP237555, create PIU_LOG if doesn't exist, write log message, first one will be that a negative lot was created, could be others in the future, we count on the LOG_MSG$ being provided, will clear after the write
7810 IF LOG_CHAN>0 THEN GOTO WRITE_LOG
7815 LOG_CHAN=HFN
7820 OPEN_LOG:OPEN LOCK (LOG_CHAN,ERR=*NEXT)"PIU_LOG"; GOTO WRITE_LOG
7830 IF ERR=12 THEN SERIAL "PIU_LOG"; GOTO OPEN_LOG
7840 CALL "ZZPROM",".4",X3$,Z,"Unable to open log file. NOTE: Negative lots created in this update.","","",0; GOTO *RETURN
7865 ! 
7870 WRITE_LOG:
7880 PRINT (LOG_CHAN)LOG_MSG$
7885 LOG_MSG$=""
7890 RETURN 
7895 ! 
8000 REM "Sort records into PI0 temp file
8001 REM "Don't add skipped records to the PI0 file
8004 PRINT @(10,12),"NOW SORTING..."
8005 K$=KEY(Z[1],END=8090); READ (Z[1])A$
8006 PRINT @(24,12),'CE',K$,
8008 IF A$(222,1)<>"Y" THEN GOTO 8005
8010 READ (Z[2],KEY=K$(15,20),DOM=8005)B$
8015 K1$=K$(1,4)+B$(61,3)+K$(5)
8020 K2$=K$
8025 DIM C(20); READ (Z[3],KEY=A$(1,24),DOM=*NEXT)IOL=0330; C[9]=0; WRITE (Z[3],KEY=A$(1,24))IOL=0331 ! SSP#271675
8030 WRITE (Z[12],KEY=K1$)K2$
8040 GOTO 8005
8090 PRINT @(0,12),'CE',
8093 READ (Z[12],KEY="",DOM=8094)
8095 RETURN 
8100 REM "Take U$ and U0$ in GL6 format post into GL7 and GL8 format
8101 REM "U0 points to last line done, if 0, no lines have been done and we need to create a GL7 record
8105 IF U0=0 THEN GOSUB 8200
8110 GOSUB 5200; REM "Set A9 to next available line
8115 DIM U2$(82),U2[3]
8119 REM "Attach entry to front of chain
8120 U2=U0
8125 U2$(1,6)=U$(28,6),U2$(7,12)=U$(14,12),U2$(38,45)=U0$
8130 U2[3]=U[0]
8145 WRITE (Z[8],IND=A9)IOL=0430
8149 REM "Point header record to this line,Assumes U1$ set by 8200
8150 EXTRACT (Z[7],KEY=U1$(1,14))IOL=0420
8155 U0=A9
8160 WRITE (Z[7],KEY=U1$(1,14))IOL=0420
8195 RETURN 
8200 REM "Create GL7, U1$ from U$ and T0$ and write it out
8205 DIM U1$(166)
8210 U1$(1,4)=T0$(1,4),U1$(5,2)=U$(4,2),U1$(7,2)=U$(6,2),U1$(9,6)=U$(8,6)
8220 U1$(156,2)=G0$(40,1); IF G0$(40,1)+G0$(180,1)="CY" THEN U1$(156,2)="A"
8225 U1$(160,6)=U$(28,6)
8230 WRITE (Z[7],KEY=U1$(1,14))IOL=0420
8245 RETURN 
8700 REM "G/L control postings accumulation
8710 REM "q0$=G/L account number, q0=amount
8720 IF P9$(9,6)<>T0$ OR A$(1,4)+B$(61,3)<>T1$ THEN GOSUB 8770; T0$=P9$(9,6),T1$=A$(1,4)+B$(61,3),T2$=E$(5,15)
8730 P=POS(Q0$=T9$,12); IF P>0 THEN P=INT(P/12),O[P]=O[P]+Q0; GOTO 8760
8740 IF LEN(T9$)<14*LEN(Q0$) THEN T9$=T9$+Q0$; GOTO 8730
8750 GOSUB 8770; GOTO 8730
8760 RETURN 
8770 REM "FLUSH G/L ACCUM - SUMMARY POST
8780 IF T9$="" THEN GOTO 8880; REM "No postings not to be update are supposed to be in here; i.e. no accrual postings on a cash basis only system
8790 FOR X=1 TO LEN(T9$) STEP 12
8800 P=INT(X/12)
8810 IF O[P]=0 THEN GOTO 8870
8815 IF P2$(9,4)<>T0$(1,4) THEN P2$(1,13)=X3$(9,3)+"G/LYE"+T0$(1,4); READ (Z[13],KEY=P2$(1,12))P2$
8816 Q=NUM(P2$(13,2)),Q=15+Q*6
8820 U$="A"+P2$(Q,2)+T0$(5,2)+"PI"+V0$(22,6)+T9$(X,12)+"  "+X3$(15,6)+"IC"
8830 DIM U[1]; U0$="Loc: "+T1$(1,4)+" PC: "+T1$(5,3)+" "+T2$
8835 IF LEN(U0$)>45 THEN U0$=U0$(1,45)
8845 U[0]=O[P]
8850 GOSUB 8100
8870 NEXT X
8880 T9=14,T9$=""; DIM O[T9]
8890 RETURN 
8900 REM "Check for empty batch files
8910 Z$="01O ZY9     ",GL7$=FN%FID$(Z[7]),GL8$=FN%FID$(Z[8]); IF GL7$(4,3)<>"GL7" OR GL8$(4,3)<>"GL8" THEN GOTO 8990 ! [205703]-changed FID() to FN%FID$()
8915 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 8916,9000
8920 BATCH$=GL7$(7,3)+GL7$(21,1)
8926 X$=FN%FID$(Z[7]) ! [205703]-changed FID() to FN%FID$()
8928 READ (Z[7],KEY="",DOM=8929)
8930 K$=KEY(Z[7],END=8935); GOTO 8990
8940 CALL "ZZINTZ",X3$,"B",0,STR(Z[7]:"00")+STR(Z[8]:"00")
8950 REMOVE (Z[1],KEY=BATCH$+" ",DOM=8951)
8990 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9045 REM 
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOSUB 6600; GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9900 REM "END PROGRAM
9905 IF X3$(145,1)="1" THEN GOSUB 8900
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 IF LOG_CHAN>0 THEN CLOSE (LOG_CHAN) ! SSP237555
9920 SETERR 9940
9925 ERASE "PI0"+X3$(9,3),ERR=9926
9930 Q1$=A1$; EXIT 
9940 BEGIN ; SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 ! Changes since 03/01/2006
56005 REM "190474-Additional Services - Enhance TF to provide for tax codes   
56007 REM "198612-TopForm Output director                                     
56008 REM "198997-Export XML inventory adjustments, physical inventory        
56010 REM "205703-Oracle - FID and FIB calls, replace with FN%FID$ and FN%FIB$
56012 REM "214694-Inventory Adjustment XML - 830                              
56013 REM "219717-Problem in IC2PIU if lot record is not populated with       
56016 REM "220977-Add new field, Lot Receipt Date, to FMZ file, modify updates
56018 REM "271675-CHUI & GUI - Physical Inventory Update - Last Counted date  
56019 REM "024368-Enhancement request to the physical count for lotted items  
