0010 REM "<AR2UUP> Apply Pre-payments to Invoices for Customers
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 05/25/23 - 8.707668 - crg - SSP# 307408
0037 REM "307408-DBD-267;Enhance CR GW and other for Pre-Payments            
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0105 INIT:
0110 X0$="AR2UUP",X1$="Apply Pre-payments to Invoices for Customers"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0140 Q1$="*"
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0200 REM "
0230 X0=-1
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO WRAPUP
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0250 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0253 %NO_NEW_BATCH=0 ! Allow creation of new batches
0255 CALL "ZGBATC",X3$,X4$,"AR2CAA",X9; IF X9=1 THEN CMD_STR$="END"; EXIT 
0259 ! 
0290 IOLIST Y[0],Y[1],Y[2],Y[3],Y[4]
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 AR1_IOLIST:IOLIST AR1$,AR1[0],AR1[1],AR1[2],AR1[3],AR1[4],AR1[5],AR1[6],AR1[7],AR1[8],AR1[9],AR1[10],AR1[11],AR1[12],AR1[13],AR1[14],AR1[15]
0320 DEP_IOLIST:IOLIST DEP$,DEP[0],DEP[1],DEP[2]; REM "ARP Deposit header
0330 CHK_IOLIST:IOLIST CHK$,CHK[0],CHK[1],CHK[2]; REM "ARP Check header
0340 INV_IOLIST:IOLIST INV$,INV[0],INV[1],INV[2],INV[3],INV[4],INV[5],INV[6],INV[7]; REM "ARP Invoice record
0360 AR6_IOLIST:IOLIST AR6$,AR6[0],AR6[1],AR6[2],AR6[3],AR6[4],AR6[5],AR6[6],AR6[7],AR6[8],AR6[9],AR6[10],AR6[11],AR6[12],AR6[13],AR6[14],AR6[15]
0370 INV_GRID_IOLIST:IOLIST C_SEL$:[CHR($8A$)],C_CUST$:[CHR($8A$)],C_CUSTFMT$:[CHR($8A$)],C_PREPAY$:[CHR($8A$)],C_PREPAYAMT$:[CHR($8A$)],C_INVOICE$:[CHR($8A$)],C_INVOICEAMT$:[CHR($8A$)],C_MATCHES$:[CHR($8A$)]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1... 02O AR6... 03O ARP... 04OSARP... 05O ZYB... 06O ZY9  13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO *NEXT,WRAPUP
0530 OPEN (HFN)"*MEMORY*"; INVCHAN=LFO
0590 RETURN 
0599 ! 
0900 MAIN_POST_DISPLAY:
1000 GRID LOAD INV_GRID.CTL,0,0,"" ! clear grid
1005 DIM A$(10); A$(1,10)=MID(ARG_1$,72,10); IF NUL(A$) THEN GOTO WRAPUP
1010 FY$=MID(ARG_1$,72,4),ACCTPD$=MID(ARG_1$,76,2),BANK_CODE$=MID(ARG_1$,78,3),DEPOSIT_NUM$=MID(ARG_1$,81,1)
1020 CUST_START$=MID(ARG_2$,1,10),CUST_END$=MID(ARG_2$,11,10)
1030 INV_START$=MID(ARG_2$,21,8),INV_END$=MID(ARG_2$,29,8)
1040 GOSUB LOAD_RESULTS_GRID
1045 RETURN 
1049 ! 
2000 LOAD_RESULTS_GRID:
2010 GOSUB SEARCH_INVOICE_LIST
2020 GOSUB LOAD_INVOICE_LIST
2045 RETURN 
2049 ! 
8200 DEP_HEADER:REM "Write deposit header ARP record
8210 DIM DEP$(40),DEP[2]
8215 READ (Z[3],KEY=A$(1,10),DOM=8220); IF A$(10,1)="Z" THEN MSGBOX "Too many Deposit Headers in batch!"; GOTO DEP_HEADER_END ELSE IF A$(10,1)="9" THEN A$(10,1)="A"; GOTO 8215 ELSE A$(10,1)=CHR(ASC(A$(10,1))+1); GOTO 8215
8225 DEP$(1,10)=A$(1,10),DEP$(11,6)=X3$(15,6)
8230 WRITE LOCK (Z[3],KEY=DEP$(1,10))IOL=DEP_IOLIST
8295 DEP_HEADER_END:RETURN 
8299 ! 
8400 CHK_HEADER:REM "Create check header ARP record
8410 DIM CHK$(71),CHK[2]
8420 CHK$(1,10)=A$(1,10),CHK$(11,10)=AR1$(1,10),CHK$(21,6)="PREPAY"; REM "Fiscal year/ap, bank code, deposit number, customer code, check reference
8425 CHK$(27,6)=X3$(15,6),CHK$(33,35)=AR1$(11,35); REM "Check date, cust name
8440 WRITE (Z[4],KEY=CHK$(1,26))IOL=CHK_IOLIST
8445 CHK_HEADER_END:RETURN 
8999 ! 
9900 REM "END PROGRAM
9905 WRAPUP:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 CLOSE (INVCHAN)
9990 RETURN 
9999 END 
10000 REM "Event handler - OnSelect
10005 SELECT_INVOICE:
10010 READ DATA FROM INV_GRID.CTL'ROWDATA$ TO IOL=INV_GRID_IOLIST
10020 IF C_SEL$="1" THEN {
10030 WRITE (INVCHAN,KEY=PAD(C_CUST$,10)+PAD(C_PREPAY$,8)+PAD(C_INVOICE$,8),ERR=*NEXT)IOL=INV_GRID_IOLIST
10040  } ELSE {
10050 REMOVE (INVCHAN,KEY=PAD(C_CUST$,10)+PAD(C_PREPAY$,8)+PAD(C_INVOICE$,8),ERR=*NEXT)
10060  }
10095 RETURN 
10099 ! 
10100 LOAD_INVOICE_LIST:
10110 CLEAR_GRID: GRID LOAD INV_GRID.CTL,0,0,""
10115 READ (INVCHAN,KEY="",DOM=*NEXT)
10120 PK$=KEY(INVCHAN,END=10150); READ (INVCHAN,KEY=PK$)IOL=INV_GRID_IOLIST
10130 LOAD_GRID: GRID LOAD INV_GRID.CTL,1,0,"1"+SEP+C_CUST$+SEP+FN%ZZDISP$(C_CUSTFMT$,"A/R")+SEP+FN%ZZDISP$(C_PREPAY$,"AR6")+SEP+STR(C_PREPAYAMT$:"-#,###,###.00")+SEP+FN%ZZDISP$(C_INVOICE$,"AR6")+SEP+STR(C_INVOICEAMT$:"-#,###,###.00")+SEP+C_MATCHES$+SEP
10140 GOTO 10120
10145 RETURN 
10149 ! 
10200 SEARCH_INVOICE_LIST:
10201 OPEN (HFN)"*MEMORY*"; PCHAN=LFO ! Hold prepayments temporarily for search
10202 OPEN (HFN)"*MEMORY*"; ICHAN=LFO ! Hold invoices temporarily for search
10205 I=0; READ (Z[2],KEY=STP(CUST_START$),DOM=*NEXT)
10210 LFL_NEXT: K$=KEY(Z[2],END=PASS1_END); DIM AR6$(181),AR6[15]; READ (Z[2],KEY=K$)IOL=AR6_IOLIST
10211 IF MID(K$,1,10)>=CUST_START$ AND MID(K$,1,10)<=CUST_END$ THEN GOTO *NEXT ELSE GOTO LFL_NEXT ! search within specified customer range only
10212 IF MID(K$,11,8)>=INV_START$ AND MID(K$,11,8)<=INV_END$ THEN GOTO *NEXT ELSE GOTO LFL_NEXT ! search within specified invoice range only
10215 IF AR6$(19,1)="P" AND AR6[3]<>0 AND AR6[5]=0 THEN WRITE (PCHAN,KEY=AR6$(1,18))IOL=AR6_IOLIST ! Must be a prepayment and active balance and must not have cash in progress
10217 IF AR6$(19,1)="I" AND AR6[3]<>0 AND AR6[5]=0 THEN {! Must be an invoice and active balance and must not have cash in progress
10218 WRITE (ICHAN,KEY=AR6$(1,10)+"CUSTPO"+AR6$(36,15))IOL=AR6_IOLIST ! store by cust po number
10219 WRITE (ICHAN,KEY=AR6$(1,10)+"ORDNUM"+AR6$(66,8))IOL=AR6_IOLIST ! store by order number
10220  }
10223 GOTO LFL_NEXT
10225 PASS1_END:
10227 READ (PCHAN,KEY="",ERR=*PROCEED)
10230 PASS2_NEXT:
10231 MATCHES$=""
10232 PCK$=KEY(PCHAN,END=PASS2_END); DIM AR6_PRE$(181),AR6_PRE[15]; READ (PCHAN,KEY=PCK$)AR6_PRE$,AR6_PRE{ALL}
10233 DIM AR6_INV$(181),AR6_INV[15]; FIND (ICHAN,KEY=AR6_PRE$(1,10)+"CUSTPO"+AR6_PRE$(36,15),DOM=*NEXT)AR6_INV$,AR6_INV{ALL}; MATCHES$="Cust PO "+STP(AR6_PRE$(36,15),2); GOTO 10240
10235 DIM AR6_INV$(181),AR6_INV[15]; IF LEN(SUB(STP(AR6_PRE$(36,15),2),"-",""))<=8 THEN FIND (ICHAN,KEY=AR6_PRE$(1,10)+"ORDNUM"+PAD(STP(SUB(AR6_PRE$(36,15),"-",""),2),8),DOM=PASS2_NEXT)AR6_INV$,AR6_INV{ALL}; MATCHES$="Order Number "+STP(AR6_PRE$(36,15),2) ELSE GOTO PASS2_NEXT
10240 I=I+1
10241 C_SEL$="1"
10242 C_CUST$=MID(AR6_INV$,1,10)
10243 C_CUSTFMT$=MID(AR6_INV$,1,10)
10244 C_PREPAY$=MID(AR6_PRE$,11,8)
10245 C_PREPAYAMT$=STR(AR6_PRE[3]:"-.00")
10246 C_INVOICE$=MID(AR6_INV$,11,8)
10247 C_INVOICEAMT$=STR(AR6_INV[3]:"-.00")
10248 C_MATCHES$=MATCHES$
10260 WRITE (INVCHAN,KEY=PAD(C_CUST$,10)+PAD(C_PREPAY$,8)+PAD(C_INVOICE$,8))IOL=INV_GRID_IOLIST
10275 GOTO PASS2_NEXT
10280 PASS2_END:
10285 CLOSE (PCHAN); CLOSE (ICHAN)
10295 RETURN 
10299 ! 
10400 APPLY_INVOICE_PAYMENTS:
10405 READ (INVCHAN,KEY="",DOM=*NEXT)
10407 GOSUB DEP_HEADER
10410 PK$=KEY(INVCHAN,END=10585); READ (INVCHAN,KEY=PK$)IOL=INV_GRID_IOLIST
10420 DIM AR1$(599),AR1[15]; READ (Z[1],KEY=PAD(C_CUST$,10))IOL=AR1_IOLIST
10430 GOSUB CHK_HEADER
10440 DIM AR6_PRE$(181),AR6_PRE[15]; EXTRACT (Z[2],KEY=AR1$(1,10)+PAD(C_PREPAY$,8))AR6_PRE$,AR6_PRE{ALL}
10450 DIM AR6_INV$(181),AR6_INV[15]; EXTRACT (Z[2],KEY=AR1$(1,10)+PAD(C_INVOICE$,8))AR6_INV$,AR6_INV{ALL}
10460 IF ABS(AR6_PRE[3])>ABS(AR6_INV[3]) THEN PAYOFF_AMT_PRE=-(AR6_INV[3]),PAYOFF_AMT_INV=AR6_INV[3] ELSE PAYOFF_AMT_PRE=AR6_PRE[3],PAYOFF_AMT_INV=-(AR6_PRE[3])
10470 ! 
10480 DIM INV$(35),INV[7]
10490 INV$(1,26)=CHK$(1,26),INV$(27,8)=AR6_PRE$(11,8)
10495 READ (Z[4],KEY=INV$(1,34),DOM=*NEXT)IOL=INV_IOLIST
10500 INV[1]+=PAYOFF_AMT_PRE,INV[6]+=PAYOFF_AMT_PRE,AR6_PRE[5]+=PAYOFF_AMT_PRE; REM "Total applied, cash posted
10510 WRITE (Z[4],KEY=INV$(1,34))IOL=INV_IOLIST
10515 WRITE (Z[2],KEY=AR1$(1,10)+PAD(C_PREPAY$,8))AR6_PRE$,AR6_PRE{ALL}
10520 ! 
10530 DIM INV$(35),INV[7]
10540 INV$(1,26)=CHK$(1,26),INV$(27,8)=AR6_INV$(11,8)
10545 READ (Z[4],KEY=INV$(1,34),DOM=*NEXT)IOL=INV_IOLIST
10550 INV[1]+=PAYOFF_AMT_INV,INV[6]+=PAYOFF_AMT_INV,AR6_INV[5]+=PAYOFF_AMT_INV; REM "Total applied, cash posted
10560 WRITE (Z[4],KEY=INV$(1,34))IOL=INV_IOLIST
10565 WRITE (Z[2],KEY=AR1$(1,10)+PAD(C_INVOICE$,8))AR6_INV$,AR6_INV{ALL}
10570 ! 
10580 GOTO 10410
10590 MSGBOX MSG("COMPLETED")+"!",_FYI$,"!,TIM=5"
10591 CMD_STR$="E"
10595 RETURN 
10599 ! 
56000 ! 
56001 REM "307408-DBD-267;Enhance CR GW and other for Pre-Payments            
