0010 REM "Freight Markup Processing from Invoice Summary Screen <AR2FIS>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 06/04/21 - 11.492615 - jvv - SSP# 307357
0037 REM "307357-Update FS6 to allow for more line numbers                   
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! This program replaced AR2FRT, see issues 186705 (GUI) and 187902 (CHUI)
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,AR_PARM$,DONT_PRINT$,INV$,INV{ALL}
0100 SETERR 9000
0110 X0$="AR2FIS",X1$="Frt Markup Processing from Inv Summ Screen"
0200 REM "
0201 OLD_FRT=INV[2] ! !!   
0220 REM IF INV[2]=0 THEN GOTO 9900 ! No Freight to process!
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0290 IOLIST Y[0],Y[1],Y[2],Y[3],Y[4]
0300 REM "IOLISTS
0321 IOLIST R$(1),R[0],R[1],R[2],R[3],R[4],R[5],R[6],R[7],R[8],R[9],R[10],R[11]
0370 IOLIST S$(1),S[0],S[1],S[2],S[3]; REM SSP 187704
0440 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8],H[9],H[10],H[11],H[12],H[13],H[14],H[15]
0450 IOLIST FS6$,FS6[0],FS6[1],FS6[2],FS6[3],FS6[4],FS6[5],FS6[6],FS6[7]
0455 IOLIST FS61$,FS61[0],FS61[1],FS61[2],FS61[3],FS61[4],FS61[5],FS61[6],FS61[7]
0460 IOLIST ATI$,ATI[0],ATI[1],ATI[2],ATI[2] ! SSP 276772
0480 IOLIST LINK,LINE$,LINE[0],LINE[1],LINE[2],LINE[3],LINE[4],LINE[5],LINE[6],LINE[7],LINE[8],LINE[9],LINE[10],LINE[11],LINE[12],LINE[13],LINE[14],LINE[15],LINE[16],LINE[17],LINE[18],LINE[19],LINE[20],LINE[21],LINE[22],LINE[23],LINE[24],LINE[25],LINE[26],LINE[27],LINE[28],LINE[29],LINE[30],LINE[31],LINE[32],LINE[33],LINE[34],LINE[35],LINE[36],LINE[37],LINE[38],LINE[39],LINE[40],LINE[41],LINE[42],LINE[43],LINE[44],LINE[45],LINE[46],LINE[47],LINE[48] ! SSP 249775
0490 IOLIST OLD_LINK,OLD_LINE$,OLD_LINE[0],OLD_LINE[1],OLD_LINE[2],OLD_LINE[3],OLD_LINE[4],OLD_LINE[5],OLD_LINE[6],OLD_LINE[7],OLD_LINE[8],OLD_LINE[9],OLD_LINE[10],OLD_LINE[11],OLD_LINE[12],OLD_LINE[13],OLD_LINE[14],OLD_LINE[15],OLD_LINE[16],OLD_LINE[17],OLD_LINE[18],OLD_LINE[19],OLD_LINE[20],OLD_LINE[21],OLD_LINE[22],OLD_LINE[23],OLD_LINE[24],OLD_LINE[25],OLD_LINE[26],OLD_LINE[27],OLD_LINE[28],OLD_LINE[29],OLD_LINE[30],OLD_LINE[31],OLD_LINE[32],OLD_LINE[33],OLD_LINE[34],OLD_LINE[35],OLD_LINE[36],OLD_LINE[37],OLD_LINE[38],OLD_LINE[39],OLD_LINE[40],OLD_LINE[41],OLD_LINE[42],OLD_LINE[43],OLD_LINE[44],OLD_LINE[45],OLD_LINE[46],OLD_LINE[47],OLD_LINE[48] ! SSP 249775
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 IF %ACTION$="C" THEN Z$="02O FMP... 13O ZZPARM 14O AR4...  15O FS6...  16O FS7... 17O FS8... 18O GRT... 19O ASC... 200 AR5... 25OSFS1...  26O ECS...  27O PO3...  28O AUF...  29O ASQ...  " ELSE Z$="02O FMP... 13O ZZPARM 14O AR4...  15O FS6...  16O FS7... 17O FS8... 18O ART... 19O ASC... 200 AR5... 25OSFS1...  26O ECS...  27O PO3...  28O AUF...  29O ASQ...  "; REM "SSP#203130
0511 AUF=Z[28]
0515 Z$=Z$+"30O AR1...  41O ATI...  " ! WO 260309; !SSP 276772
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0575 FIND (Z[13],KEY=X3$(9,3)+"A/R")ARS$; REM SSP 209765
0585 RT_PARM$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT_PARM$
0600 REM "
0605 DIM Y[4]
0650 READ (Z[13],KEY=X3$(9,3)+"F/M")OP_PARMS$; REM " SSP# 147488
0651 MFF_PARM=0; IF MID(OP_PARMS$,337,1)="Y" THEN MFF_PARM=1 ! SSP 276772
0652 READ (Z[13],KEY=X3$(9,3)+"AR1")AR_PARM$; REM " SSP# 165756
2000 DIM AR1$(510); FIND (Z[30],KEY=INV$(15,10),DOM=*NEXT)AR1$ ! WO260309
2005 DIM R[11],R$(241); Z=0,Q=0; FIND (Z[2],KEY="D"+INV$(15,10),DOM=2006)R$
2006 DFLT_MK=0; IF MID(AR1$,505,1)="Y" THEN DFLT_MK=1; GOSUB 2100; GOTO 2010 ! WO260309
2008 GOSUB 2100; GOSUB GET_WEBEC_MARKUP; GOSUB GET_SHIPVIA_MARKUP ! WO202306, if markup table in shipvia record, it has priority
2010 DIM R$(48); FIND (Z[2],KEY="M"+MARKUP_CODE$,DOM=2099)IOL=0321
2011 IF DONT_PRINT$="DELETE" THEN GOSUB 3000; GOTO 9900; REM SSP TEST
2015 IF INV[2]=0 AND MID(R$,35,1)<>"S" THEN GOTO 9900
2020 IF R$(47,1)<>DIM(1) THEN GOSUB 3500; REM " SSP 167953
2030 IF OK$="NO" THEN GOTO 9900
2035 CALL "UPDFFA;GET_MKUP_BY_FRT",ERR=*NEXT,0,MARKUP_CODE$,INV[2],MKUP; Q=Q+MKUP ! SSP291074 IF MKUP>0 THEN Q=Q+MKUP
2040 IF R[1]=0 THEN GOTO 2060
2050 FOR X=1 TO 5 STEP 2; IF ABS(INV[1])<R[X] THEN Z=SGN(INV[1])*R[X+1]; EXITTO 2051 ELSE NEXT X
2055 IF R$(35,1)="F" THEN Q=Q+INV[2]*Z*.01 ELSE Q=Q+INV[1]*Z*.01
2060 Q=Q+(Q+INV[2])*R[0]*.01; IF INV[2]<>0 AND R[9]<>0 THEN Q=Q+R[9] ! SSP 225881 No freight, no flat amt markup
2061 IF R[11]<>0 AND Q<R[11] AND INV[2]<>0 THEN Q=R[11] ! SSP 225881
2062 IF (%CALL_CIG OR %CALL_CIG_PLUS) AND Q>0 THEN IF R$(34,1)="M" THEN GOTO *NEXT ELSE R$(34,1)="Y" ! auto add if cif. SSP211545, added check for %CALL_CIG_PLUS, which is set in SM2RBS, don't ask any questions. SSP 217965
2063 ! IF NOT(%WMS_PICK) AND %IN_WEBEC$<>"Y" THEN IF R$(34,1)="M" AND Q<>0 AND INV[2]>R[10] THEN GOTO 2066 ! SSP 217965
2064 IF NOT(%WMS_PICK) AND %IN_WEBEC$<>"Y" THEN IF R$(34,1)="M" AND Q>R[10] THEN Q=R[10]; GOTO 2066 ! SSP 217965
2065 IF NOT(%WMS_PICK) AND %IN_WEBEC$<>"Y" THEN IF POS(R$(34,1)="YCM",1)=0 AND Q<>0 OR (R$(34,1)="C" AND Q<>0 AND INV[2]>R[10]) THEN X$="Add "+STR(Q:"$$$.00")+" to freight"; CALL "ZZPROM",".Y",X3$,J6,X$,"","V",X0; ON J6 GOTO 2066,2099 ! SSP 187875 / 201158 217965
2066 INV[2]=INV[2]+Q ! freight markup
2068 IF R$(37,1)="Y" THEN OLDINV_17=INV[17]; INV[17]=INV[17]+INV[2]; NEW_FRT=INV[2],INV[2]=0 ! 37,1= create invoice line
2090 IF R$(36,1)="Y" THEN GOSUB 2200; REM "setup Order history if desired
2091 IF R$(37,1)="Y" THEN GOSUB 2300; REM "setup invoice line for frt
2093 IF HOLDFRT=0 THEN GOTO 9900
2099 GOTO 9900
2100 REM "Get freight markup code to use
2105 IF OP_PARMS$(299,1)<>"Y" THEN GOTO 2120
2110 IF INV$(92,8)<>DIM(8) THEN READ (Z[25],KEY=INV$(92,8),DOM=2120)ORDER$; REM " SSP# 147448
2115 IF INV$(92,8)<>DIM(8) THEN IF ORDER$(244,2)<>"  " THEN MARKUP_CODE$=ORDER$(244,2); IF MARKUP_CODE$<>"  " THEN GOTO *RETURN; REM " SSP# 147448
2120 MARKUP_CODE$="ZZ" ! SSP#225507
2125 IF STP(R$(50,2),3," ")="" AND STP(R$(93,6),3," ")="" THEN MARKUP_CODE$="ZZ"; GOTO *RETURN; REM "Special case, if no codes set default to ZZ
2130 IF R$(50,2)<>"  " THEN MARKUP_CODE$=R$(50,2) ! GOTO 2140; REM "If old code is set then use it always!SSP#225507
2138 REM "Set to R or W type, else use I type code
2140 IF INV$(343,1)="R" AND R$(95,2)<>DIM(2) THEN MARKUP_CODE$=R$(95,2) ELSE IF INV$(343,1)="W" AND R$(97,2)<>DIM(2) THEN MARKUP_CODE$=R$(97,2) ELSE IF POS(INV$(343,1)="RW",1)=0 AND R$(93,2)<>DIM(2) THEN MARKUP_CODE$=R$(93,2) ! SSP#225507
2145 RETURN 
2150 GET_WEBEC_MARKUP:! SSP190305
2155 IF INV$(92,8)<>DIM(8) THEN READ (Z[25],KEY=INV$(92,8),DOM=*RETURN)ORDER$
2160 IF MID(ORDER$,246,4)="WEB " THEN {
2165 XP=PRM('XI'); SET_PARAM 'XI'; READ (Z[26],KEY=ORDER$(6,10),DOM=2180)ECS$
2170 IF MID(ECS$,609,2)<>DIM(2) THEN READ (Z[2],KEY="M"+ECS$(609,2),DOM=*NEXT); MARKUP_CODE$=ECS$(609,2)
2180 SET_PARAM 'XI'=XP
2185  }
2190 RETURN 
2198 ! 
2199 ! 
2200 REM "Create order history line if requested
2205 IF STP(INV$(92,8),3," ")="" THEN GOTO 2295; REM "If no order, don't do anything
2210 DIM FS6$(163),FS6[7] ! ssp 307357
2215 FS6$(1,10)=INV$(15,10),FS6$(11,1)="J",FS6$(12,10)="FREIGHT",FS6$(22,8)=INV$(92,8),FS6$(30,1)="0"; REM "Cust #, special charge code (j), freight, order number, line 0 on the invoice
2217 FS6$(31,3)=R$(43,3),FS6$(34,6)=INV$(86,6); REM "prod code, order date set to inv date
2218 FS6$(40,8)=INV$(7,8),FS6$(48,6)=INV$(86,6); REM "Invoice #, invoice date
2219 FS6$(54,15)=INV$(100,15),FS6$(101,4)="EACH"; REM "cust p/o num, u/m
2220 REM FS6[0]=1,FS6[1]=NEW_FRT,FS6[2]=1; REM "qty, price, qty/u/m
2221 FS6[0]=1,FS6[2]=1; REM "qty, price, qty/u/m
2222 IF R$(46,1)<>"Y" THEN FS6[1]=NEW_FRT,FS6[6]=NEW_FRT ELSE FS6[1]=0,FS6[6]=0; REM "qty, price, qty/u/m (46,1) Create Cost only lines FS6[1] IS UNIT SELL PRICE!SSP#270315
2223 IF R$(36,1)="Y" THEN FS6[4]=OLD_FRT,FS6[7]=OLD_FRT ELSE FS6[4]=0,FS6[7]=0; REM " cost from old_frt (36,1) MAKE ORDER HISTORY RECORD - FS6[4] IS COST!SSP#270315         
2224 FS6$(112,1)="F"; REM FLAG AS FREIGHT MARKUP IN HISTORY FILE
2226 DIM FS61[7]; READ (Z[15],KEY=FS6$(1,30),DOM=2229)IOL=0455
2227 IF OLD_FRT=FS61[4] THEN GOTO 2229
2228 FS6[1]=FS6[1]+FS61[1]; FS6[4]=FS6[4]+FS61[4]; FS6[6]=FS6[6]+FS61[6]; FS6[7]=FS6[7]+FS61[7]
2229 IF R$(46,1)="Y" THEN FS6[1]=0 AND FS6[6]=0
2230 WRITE (Z[15],KEY=FS6$(1,30))IOL=0450; CALL "UPDAUF;UPDATE_LAST_FS6_FRT_LINE",ERR=*NEXT,AUF,FS6$,FS6[1],OLD_FRT; GOTO 2235 ! SSP196272
2232 IF R$(37,1)<>"Y" THEN READ (Z[15],KEY=FS6$(1,30),DOM=2230)TMPFS6$; IF TMPFS6$(40,8)<>INV$(7,8) THEN FS6$(30,1)=CHR(ASC(FS6$(30,1))+1); GOTO 2230 ! SSP175679                                       
2233 LAST_FRT_PRICE=0,LAST_FRT_COST=0; CALL "UPDAUF;GET_LAST_FS6_FRT_LINE",ERR=*NEXT,AUF,FS6$,LAST_FRT_PRICE,LAST_FRT_COST ! SSP196272
2234 EXTRACT (Z[15],KEY=FS6$(1,30),DOM=2230)IOL=0450; FS6[1]=FS6[1]-LAST_FRT_PRICE+NEW_FRT,FS6[4]=FS6[4]-LAST_FRT_COST+OLD_FRT; IF R$(36,1)="Y" THEN FS6[1]=0; WRITE (Z[15],KEY=FS6$(1,30))IOL=0450; CALL "UPDAUF;UPDATE_LAST_FS6_FRT_LINE",ERR=*NEXT,AUF,FS6$,FS6[1],OLD_FRT; REM "if EXISTS then read old record and update price and cost only   SSP196272
2235 IF RT_PARM$<>"" THEN CUST$=FS6$(1,10); CALL "RT2WOC",ERR=2236,X3$,X4$,CUST$,"FS6...","U",FS6$(1,30)
2240 WRITE (Z[16],KEY=FS6$(31,3)+FS6$(11,1)+FS6$(12,10)+FS6$(1,10)+FS6$(22,8)+FS6$(30,1))
2245 WRITE (Z[17],KEY=FS6$(1,10)+FS6$(22,8)+FS6$(11,11)+FS6$(30,1))
2250 WRITE (Z[19],KEY=FS6$(1,10)+FS6$(54,15)+FS6$(11,20))
2295 RETURN 
2300 REM "Create invoice line if commissioned
2301 REM "Create printing line using commission from R$ or INV$ if freight markup is blank
2305 GOSUB 4000; REM " Check to see if frt line already exists - SSP# 131719
2310 DIM LINE$(289),LINE[48] ! SSP 249775
2311 GOSUB SET_TAX; REM READ PO3 AND CHECK TAXABLE
2312 FINDER$=""; FINDER=0; FIND (Z[2],KEY="D"+INV$(15,10),DOM=2314)FINDER$,FINDER; REM " SSP# 132459 - NEW TYPE A FINDERS FEE
2313 IF FINDER$(12,1)<>"A" THEN GOTO 2314 ELSE LINE$(135,1)="A"; REM "SSP# 132459 - NEW TYPE A FINDERS FEE  SSP 225300
2315 IF STP(R$(38,5),3," ")="" THEN GOSUB 2400 ELSE COMM$=R$(38,5)
2316 IF %MSLC THEN IF NOT(FRT_EXIST) THEN GOSUB SET_MULTI_COMM ! (11000)  SSP 225300
2317 DIM PROD$(46); FIND (Z[2],KEY="T"+R$(43,3),DOM=2318)PROD$
2320 LINE$(1,1)="S",LINE$(3,3)=R$(43,3); IF R$(46,1)="Y" THEN LINE$(6,1)="N" ELSE LINE$(6,1)="Y" END_IF ; REM "type = S, product code from frt markup record, print on invoice = "Y" UNLESS cost only line then it is NO
2321 DIM TAX$(180); FIND (Z[20],KEY=INV$(67,10),DOM=2322)TAX$
2322 LINE$(2,1)="Y"; LINE$(7,40)="Freight"; LINE$(54,1)="F"; IF INV$(115,1)="Y" THEN LINE$(54,1)="N" ELSE LINE$(54,1)="F" END_IF ; IF S$(279,1)<>" " THEN LINE$(54,1)=S$(279,1); IF LINE$(54,1)="Y" THEN LINE$(54,1)="F"; REM "IF TAX$(36,1)="N" THEN LINE$(54,1)="N"; REM " costed freight, desc, taxable, If tax exempt Y line = taxable N  (ssp#1312 63) SSP 187704                                                             
2323 IF LINE$(54,1)="F" AND PROD$(23,1)="N" THEN LINE$(54,1)="N"; REM "IF TAX$( 36,1)="N" THEN LINE$(54,1)="N"; REM "costed freight, desc, taxable, If tax  exempt Y line = taxable N  (ssp#131263) SSP 187704                        
2324 LINE$(47,3)="FRT"; REM "Set order line # to FRT to mark this as frt markup line
2325 LINE$(75,9)=PROD$(24,9),LINE$(84,5)=COMM$,LINE$(125,10)=INV$(67,10); REM "sales dist code, commission code, salestax code
2326 LINE$(50,4)="EACH",LINE[6]=1; REM "Set unit of measuer
2328 LINE[0]=1,LINE[1]=1; REM "orderd & shippd = 1
2330 LINE[4]=INV[17]-SPEC_CHG,LINE[5]=OLD_FRT+FRT_COST; IF R$(46,1)="Y" THEN LINE[4]=0,INV[17]=SPEC_CHG ! COST ONLY LINE
2331 INV[1]=INV[1]+INV[17]-OLDINV_17,INV[11]=INV[11]+OLD_FRT ! UPDATE INVOICE TOTAL
2332 IF ARS$(122,1)="Y" THEN FIND (Z[29],KEY=INV$(133,4)+LINE$(3,3),DOM=*NEXT)ASQ$; LINE$(84,5)=ASQ$(8,5); REM SSP 209765
2334 IF MID(AR_PARM$,69,1)="Y" THEN LINE[8]=LINE[5]-LINE[4]; REM "If exclude freight gp from invoice gp then set gp adj to make adjust out gp on this line
2335 IF MFF_PARM THEN GOSUB READ_MFEE; GOTO 2341 ! SSP 276772 DISABLED NOW FOR "A" TYPE 
2340 IF MID(FINDER$,12,1)="A" THEN LINE[8]=(LINE[5]-LINE[4])*FINDER*.01; REM " SSP# 132459
2375 REM "Adjust buckets to reflect costed freight line
2376 GOSUB 8600; REM "Calculate commission
2377 GOSUB HC_MARKUP
2378 INV[18]=INV[18]-OLD_LINE[7]+LINE[7],INV[19]=INV[19]+LINE[9]
2379 REM "GOSUB SET_TAX
2381 REM "Write out line as first line of invoice
2382 IF FRT_EXIST THEN A9=FRT_EXIST; GOTO 2386; REM " SSP# 131719
2385 LINK=INV[20]
2386 DIM DET_IN$(255),DET_IN[8],DET_OUT$(255),DET_OUT[8]
2387 GOSUB 5200; INV[20]=A9; GOTO 2388
2388 WRITE (Z[18],IND=A9)IOL=0480
2390 IF %MSLC THEN IF NOT(FRT_EXIST) THEN CALL "ARGSCM;MODIFY_INVOICE_LINE",CMKEY$,"001","F" ! SSP 225300
2392 GOSUB 6700 ! SSP 307216
2395 RETURN 
2400 REM "Set COMM$ based on normal defaulting
2405 COMM$=INV$(128,5)
2410 C3$="*"+LINE$(1,1)+X3$(9,3)+INV$(128,5); REM "'*'= no p/o code processing
2415 DIM EXTRA[20]; CALL "AR2COM",ERR=2416,"DEFAULT",C3$,C{ALL},Z[13],0,0,"",A{ALL},B{ALL},EXTRA{ALL}
2420 COMM$=C3$
2445 RETURN 
2500 GET_SHIPVIA_MARKUP:! WO202306, has priority as markup table if set in corresponding shipvia record
2505 IF INV$(186,1)=DIM(1) THEN GOTO *RETURN
2510 FIND (Z[2],KEY="S"+INV$(186,1),DOM=*RETURN)FMPS$
2515 IF LEN(FMPS$)>=277 AND FMPS$(276,2)<>DIM(2) THEN MARKUP_CODE$=FMPS$(276,2)
2540 RETURN 
2545 ! 
3000 REM "Delete Frt amounts from FS6 record
3002 IF R$(37,1)<>"Y" THEN GOSUB 3100; RETURN ! SSP175679 
3005 INDEX=INV[20]
3010 DIM LINE$(289),LINE[48]; SPEC_CHG=0; IF INDEX<=0 THEN GOTO 3095 ELSE READ (Z[18],IND=INDEX)IOL=0480; INDEX=LINK; REM "point to next line on list;!SSP 249775
3011 IF MID(LINE$,47,3)<>"FRT" AND MID(LINE$,2,1)="Y" THEN SPEC_CHG=SPEC_CHG+LINE[4]
3012 IF MID(LINE$,47,3)<>"FRT" THEN GOTO 3010; REM "If this is not a marked up frt line then ignore it
3015 DIM FS6$(163),FS6[7]; FS6$(1,10)=INV$(15,10),FS6$(11,1)="J",FS6$(12,10)="FREIGHT",FS6$(22,8)=INV$(92,8),FS6$(30,1)="0"; REM "Cust #, special charge code (j), freight, order number, line 0 on the invoice  ssp307357
3016 IF DONT_PRINT$="DELETE" THEN REMOVE (Z[15],KEY=FS6$(1,30),ERR=*NEXT); GOTO 9900; REM SSP TEST
3040 EXTRACT (Z[15],KEY=FS6$(1,30),DOM=3090)IOL=0450; FS6[1]=FS6[1]-LINE[2],FS6[4]=FS6[4]-LINE[3]; REM "if EXISTS then read record and update price and cost only
3045 IF FS6[1]>0 OR FS6[4]>0 THEN WRITE (Z[15],KEY=FS6$(1,30))IOL=0450; IF RT_PARM$<>"" THEN CUST$=FS6$(1,10); CALL "RT2WOC",ERR=3090,X3$,X4$,CUST$,"FS6...","U",FS6$(1,30) END_IF ; GOTO 3090; REM "If no more frt left then remove record, else write back updated record
3050 REM "If here we need to delete the record
3055 REMOVE (Z[15],KEY=FS6$(1,30),DOM=3056)
3056 IF RT_PARM$<>"" THEN CUST$=FS6$(1,10); CALL "RT2WOC",ERR=3057,X3$,X4$,CUST$,"FS6...","D",FS6$(1,30)
3060 REMOVE (Z[16],KEY=FS6$(31,3)+FS6$(11,1)+FS6$(12,10)+FS6$(1,10)+FS6$(22,8)+FS6$(30,1),DOM=3061)
3062 REMOVE (Z[17],KEY=FS6$(1,10)+FS6$(22,8)+FS6$(11,11)+FS6$(30,1),DOM=3063)
3064 REMOVE (Z[19],KEY=FS6$(1,10)+FS6$(54,15)+FS6$(11,20),DOM=3065)
3090 GOTO 3010
3095 RETURN 
3100 REM remove fs6 record - no art record SSP175679                           
3110 DIM FS6$(163),FS6[7],TMPFS6$(113),TMPFS6[7]; FS6$(1,10)=INV$(15,10),FS6$(11,1)="J",FS6$(12,10)="FREIGHT",FS6$(22,8)=INV$(92,8),FS6$(30,1)="0"; REM "Cust #, special charge code (j), freight, order number, line 0 on the invoice SSP307357                                                             
3115 READ (Z[15],KEY=FS6$(1,29),DOM=3116)
3120 KY15$=KEY(Z[15],END=3190); IF KY15$(1,29)<>FS6$(1,29) THEN GOTO 3190 ELSE READ (Z[15],KEY=KY15$)TMPFS6$; IF TMPFS6$(40,8)<>INV$(7,8) THEN GOTO 3120
3130 FS6$=TMPFS6$
3155 REMOVE (Z[15],KEY=FS6$(1,30),DOM=3156)
3156 IF RT_PARM$<>"" THEN CUST$=FS6$(1,10); CALL "RT2WOC",ERR=3057,X3$,X4$,CUST$,"FS6...","D",FS6$(1,30)
3160 REMOVE (Z[16],KEY=FS6$(31,3)+FS6$(11,1)+FS6$(12,10)+FS6$(1,10)+FS6$(22,8)+FS6$(30,1),DOM=3161)
3162 REMOVE (Z[17],KEY=FS6$(1,10)+FS6$(22,8)+FS6$(11,11)+FS6$(30,1),DOM=3163)
3164 REMOVE (Z[19],KEY=FS6$(1,10)+FS6$(54,15)+FS6$(11,20),DOM=3165)
3190 RETURN 
3200 HC_MARKUP:
3210 DIM H$(33),H[15]; READ (Z[14],KEY=COMM$,DOM=3290)IOL=0440
3220 IF POS(H$(33,1)="123456789")>0 AND POS(LINE$(1,1)="M")=0 THEN CALL "AR2COM",ERR=*NEXT,"HC"+LINE$(84,5),H$,H{ALL},Q,LINE[4],LINE[5]-LINE[8]; LINE[9]=LINE[8]-Q ! SSP#229715      
3230 IF H$(33,1)="F" THEN LINE[9]=LINE[8]-H[0]
3240 IF POS(H$(33,1)=" C")>0 THEN IF POS(X3$(9,3)="603",3)>0 THEN LINE[9]=LINE[8]-((LINE[5]-LINE[8])*100/(100-H[0])-(LINE[5]-LINE[8])) ELSE LINE[9]=LINE[8]-(LINE[5]-LINE[8])*H[0]/100
3290 RETURN 
3500 REM "CHECK FOR SHIP VIA CODE LIST SSP 167953
3505 SHIP_VIA$=INV$(186,1)
3506 REM "IF SHIP_VIA$=DIM(1) THEN GOTO 3550
3510 READ (Z[2],KEY="eV"+R$(47,2),DOM=3599)CODE_SET$
3520 FOR I=0 TO 108 STEP 9
3530 IF POS(CODE_SET$(36+I,1)=SHIP_VIA$,1)<>0 AND SHIP_VIA$<>DIM(1) THEN EXITTO 3560
3540 NEXT I
3550 IF CODE_SET$(35,1)="Y" THEN OK$="NO" ELSE IF CODE_SET$(35,1)="N" THEN OK$=""
3555 GOTO 3599
3560 IF CODE_SET$(35,1)="Y" THEN OK$="" ELSE IF CODE_SET$(35,1)="N" THEN OK$="NO"
3599 RETURN 
4000 REM " Check to see if freight line already exists - SSP# 131719
4005 INDEX=INV[20]; OLD_INDEX=INV[20]; SPEC_CHG=0; FRT_EXIST=0
4011 DIM OLD_LINE$(289),OLD_LINE[48]; IF OLD_INDEX<=0 THEN GOTO 4080 ELSE READ (Z[18],IND=OLD_INDEX)IOL=0490; IF OLD_LINE$(2,1)="Y" AND OLD_LINE$(47,3)<>"FRT" THEN SPEC_CHG=SPEC_CHG+OLD_LINE[4] ! SSP 249775
4012 IF OLD_LINE$(47,3)<>"FRT" THEN OLD_INDEX=OLD_LINK; GOTO 4010; REM "If this is not a marked up frt line then ignore it
4015 FRT_EXIST=OLD_INDEX; LINK=OLD_LINK; OLD_INDEX=OLD_LINK; FRT_COST=OLD_LINE[5]; REM "RETURN 
4020 GOTO 4010
4080 REM "FRT_EXIST=0
4095 RETURN 
5200 REM "GET NEXT INDEX TO FILE IN A9
5210 EXTRACT (Z[18],IND=0,ERR=5295)IOL=0290
5215 IF Y[4]=-2 THEN READ (Z[18]); WAIT 0; GOTO 5210
5220 Y[4]=-2; WRITE (Z[18],IND=0)IOL=0290
5230 IF Y[1]<1 THEN A9=Y[2],Y[2]=Y[2]+1; GOTO 5260
5255 A9=Y[1]; READ (Z[18],IND=A9)Y[1]
5260 IF Y[0]<Y[3] AND Y[2]<=Y[3] THEN Y[0]=Y[0]+1,Y[4]=-1 ELSE Y[2]=Y[2]-1; GOTO 4900
5270 IF U1>0 THEN U1=U1-1,A9$=A9$+BIN(A9,Y9); IF U1>0 THEN GOTO 5230
5280 WRITE (Z[18],IND=0)IOL=0290
5285 IF A0=0 THEN A0=A9
5290 RETURN 
5295 IF ERR<>0 THEN GOTO 9000 ELSE RETRY 
5700 REM "190818-Doing pre-billed invoice and is getting an automatic freight
6700 REM "TYPE A COMMISSIONS BY LINE                                            
6710 FOR SLP=1 TO 5 ! SSP 225300
6715 DCOMM$=COMM_STR$(SLP*5-4,5); IF STP(DCOMM$,2)="" THEN CONTINUE ! SSP 225300
6720 DIM H$(33),H[15]; READ (Z[14],KEY=DCOMM$,DOM=6792)IOL=0440
6765 IF MID(H$,45,1)<>"Y" THEN GOTO 6792; REM "ONLY WRITE IF FLAG SAYS YES
6766 IF H$(32,1)="I" THEN SEQ$="000" ELSE IF H$(32,1)="L" THEN SEQ$="001"
6767 IF H$(32,1)<>"L" THEN GOTO 6792
6768 FOR SLSP=0 TO 4
6769 IF INV[12+SLSP]=0 THEN EXITTO 6792
6770 DIM DET_IN$(146); DET_IN$(1,4)=INV$(133+(SLSP*4),4),DET_IN$(5,6)=INV$(1,6),DET_IN$(11,1)=INV$(77,1),DET_IN$(12,8)=INV$(7,8),DET_IN$(20,3)=SEQ$,DET_IN$(23,5)=LINE$(84,5),DET_IN$(28,1)=LINE$(141+SLSP,1),DET_IN$(29,1)=" ",DET_IN$(30,10)=INV$(15,10),DET_IN$(40,6)=INV$(86,6),DET_IN$(46,8)=STR(A9:"00000000"),F_YEAR$=INV$(1,4),ACCT_PER$=INV$(5,2)
6772 IF H$(31,1)<>"A" THEN %LAST_RATE=0,%BRACKET$=""
6775 DIM DET_IN[7]; DET_IN[0]=(LINE[4]-LINE[5]-LINE[8]+LINE[9])*INV[12+SLSP]/100,DET_IN[1]=LINE[11+SLSP],DET_IN[2]=LINE[16+SLSP],DET_IN[3]=LINE[4]*INV[12+SLSP]/100,DET_IN[4]=LINE[5]*INV[12+SLSP]/100 ! SSP 307216
6776 AMOUNT=0
6780 DIM STAT_IN[14],STAT_OUT[14]
6782 INDEX$=STR(A9:"00000000")
6784 CALL "AR2XAC",X3$,X4$,"D",DET_IN$,DET_IN{ALL},DET_OUT$,DET_OUT{ALL},STAT_IN$,STAT_IN{ALL},STAT_OUT$,STAT_OUT{ALL},F_YEAR$,ACCT_PER$,TRANS_T$,AMOUNT,INDEX$,UNUSED_2$,UNUSED1,UNUSED2
6785 AMOUNT=DET_IN[0]
6786 CALL "AR2XAC",X3$,X4$,"W",DET_IN$,DET_IN{ALL},DET_OUT$,DET_OUT{ALL},STAT_IN$,STAT_IN{ALL},STAT_OUT$,STAT_OUT{ALL},F_YEAR$,ACCT_PER$,TRANS_T$,AMOUNT,INDEX$,AUTO_REQ$,UNUSED1,UNUSED2
6789 %LAST_RATE=0,%BRACKET$=""
6791 NEXT SLSP
6792 NEXT SLP
6799 RETURN 
8600 REM "Calculate commission
8601 GOSUB GET_COMM_CODE ! SSP 225300
8602 FOR SLP=1 TO 5 ! SSP 225300
8603 DCOMM$=COMM_STR$(SLP*5-4,5); IF STP(DCOMM$,2)="" THEN CONTINUE ! SSP 225300
8604 DIM H$(33),H[15]; READ (Z[14],KEY=DCOMM$,DOM=8605)IOL=0440
8605 IF H$(32,1)<>"L" THEN IF NOT(%MSLC) THEN LINE[7]=0; GOTO 8630 ELSE GOTO 8630 ! SSP 225300
8607 IF H$(31,1)="T" THEN Q=0; IF POS(LINE$(1,1)="IC")>0 THEN CALL "FM2EXT",Z[6],0,LINE$(50,4),LINE[6],LINE[1],E9,Q,2 ELSE Q=(LINE[5]-LINE[8])/.6
8611 X$="  "+LINE$(112,4)+"[X3$B]"+X3$+"[X3$E]"+"[A$]"+INV$+"[B$]"+LINE$
8612 IF %MSLC THEN {DIM EXTRA[20]; SC_KEY$="I"+INV$(7,8)+INV$(1,6)+DIM(4)+"99F"; CALL "AR2MCM",X$,H$,H{ALL},Q,LINE[4],LINE[5]-LINE[8],SC_KEY$,SLPM,"",INV{ALL},LINE{ALL},EXTRA{ALL} } ELSE {! ssp 225300
8613 DIM EXTRA[20]; CALL "AR2COM",ERR=8614,X$,H$,H{ALL},Q,LINE[4],LINE[5]-LINE[8],"",INV{ALL},LINE{ALL},EXTRA{ALL} } ! ssp 225300
8615 LINE[7]=Q ! SSP 225300
8616 LINE$(141,5)=%ALL_BRACKET$
8617 DIM DET_IN$(255),DET_IN[8],DET_OUT$(255),DET_OUT[8]
8620 ! GOSUB 6700 ! SSP 225300
8630 IF H$(33,1)="C" THEN LINE[9]=LINE[8]-LINE[5]*H[0]/100,%GP_ADJ_FRT=LINE[8] ELSE LINE[9]=LINE[8] ! SSP#267742 took out INV[18]=0
8635 NEXT SLP ! SSP 225300
8640 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 SET_TAX:
10002 DIM S$(299),S[3]
10003 READ (Z[27],KEY=INV$(92,8)+DIM(5),DOM=*NEXT)IOL=0370
10005 GOTO 10090
10019 IF MID(TAX$,154,3)<>DIM(3) THEN {! VERITAX!
10020 IF MID(TAX$,154,1)="N" THEN INV[3]=INV[1] ELSE IF MID(TAX$,154,1)="Y" THEN INV[3]=INV[1]+INV[2]
10025 IF MID(TAX$,155,1)="N" THEN INV[5]=INV[1] ELSE IF MID(TAX$,155,1)="Y" THEN INV[5]=INV[1]+INV[2]
10030 IF MID(TAX$,156,1)="N" THEN INV[7]=INV[1] ELSE IF MID(TAX$,156,1)="Y" THEN INV[7]=INV[1]+INV[2]
10050  } ELSE {
10060 IF LINE$(54,1)="N" THEN INV[3]=INV[1],INV[5]=INV[1],INV[7]=INV[1] ELSE INV[3]=INV[1]+INV[2],INV[5]=INV[1]+INV[2],INV[7]=INV[1]+INV[2]
10070  }
10090 RETURN 
11000 SET_MULTI_COMM:
11010 REC_TYPE$="I",CM_KEY1$=INV$(7,8),CM_KEY2$=INV$(1,6)+DIM(4),CM_LINE$="99F" ! Set AXS REC FOR Freight as line 99F"!!!
11015 CMKEY$="I"+INV$(7,8)+INV$(1,6)+DIM(4) ! Set AXS REC FOR Freight as line 99F"!!!
11018 OTH_COMM$=""; IF STP(R$(38,5),3," ")<>"" THEN OTH_COMM$=R$(38,5) ! SSP 225300
11030 CALL "ARGSCM;INV_FRT_SETUP ",REC_TYPE$,CM_KEY1$,CM_KEY2$,CM_LINE$,OTH_COMM$ ! SSP 225300
11050 RETURN ! SSP 225300
11070 GET_COMM_CODE:! SSP 225300
11080 COMM_STR$="" ! SSP 22300
11090 IF NOT(%MSLC) THEN DIM COMM_STR$(25); COMM_STR$(1,5)=LINE$(84,5); RETURN 
11110 ! MKEY$="I"+INV$(7,8)+INV$(1,6)+DIM(4)+"99F" ! Set AXS REC FOR Freight as line 99F"!!!
11115 IF FRT_EXIST THEN R_NUM$="001" ELSE R_NUM$="99F" ! SSP 225300
11120 CALL "ARGSCM;GET_INVOICE_COMM",CMKEY$+R_NUM$,COMM_STR$ ! SSP 225300
11150 RETURN ! SSP 225300
12000 READ_MFEE:! SSP 276772
12005 RETURN 
12006 IKY$=INV$(15,10) ! Read ATI for Customer Default "A" type fees
12008 DIM ATI[4],ATI$(200)
12010 READ (Z[41],KEY=IKY$,DOM=*NEXT)
12015 READ_NEXT_ATI:
12020 FF_KEY$=KEY(Z[41],END=END_MFEE); READ (Z[41],KEY=FF_KEY$)IOL=0460
12030 IF FF_KEY$(1,LEN(IKY$))<>IKY$ THEN GOTO END_MFEE
12040 FTYPE$=ATI$(15,1),FVEND$=ATI$(16,10),FRATE=ATI[0]
12050 IF FTYPE$<>"A" THEN GOTO READ_NEXT_ATI
12060 LINE[8]=(LINE[5]-LINE[4])*FRATE*.01; REM " SSP# 276772
12200 GOTO READ_NEXT_ATI
12280 END_MFEE:
12290 RETURN 
12299 ! 
56000 REM "190090-[helpdesk #22316] Auto Freight Mark-up Issue                
56002 REM "190305-Create new Freight Markup Parameter for Webec Customers     
56003 REM "190818-Doing pre-billed invoice and is getting an automatic freight
56004 REM "192240-looking for the ability to markup freight based on the orig 
56005 ! "187875-Frt markup question in AR invoicing.  System is asking      
56006 REM "195516-Did a customer invoicing gateway invoiced freight then      
56008 REM "196272-Question on Freight and how it appears in the order history 
56010 REM "197924-Invoicing Gateway should not ask to add freight             
56011 REM "199591-Buried frt showing with sell
56015 REM "202306-Ship Via code modifications; Open up lowercase letters
56016 REM "203130-Getting error at bottom of credit card page when placing    
56017 REM "209765-At ARS,Sa we have salesperson "(B)" set up to tie commission
56020 REM "211545-Modifications to IMPORT module to support importing of
56022 REM "217965-Modify Freight Markup table with option to enter ceiling amt
56024 REM "225881-Modify the Freight Market Table to have an option to mark   
56025 REM "249775-Changes to sales tax parameters and tax calculations to     
56026 REM "260309-Always use Freight Markup from Customer Default record. Mod 
56027 REM "270315-I need some help balancing my costed freight GL account.    
56028 REM "276772-Multiple Finder's Fees per Customer/Item/Order Line.        
56030 REM "291074-Freight Markup; want to discount freight for freight amount 
56031 REM "307216-Incorrect Commission Calculation on Invoice Total when House
56032 REM "307357-Update FS6 to allow for more line numbers                   
