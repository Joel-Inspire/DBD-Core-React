0010 REM "Calculate Requisition Charge  <AR2SHC>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 10/04/18 - 14.279166 - dmm - SSP# 303394
0037 REM "303394-DBA DBSPT-47844: Purchase Order transmission failed on order
0040 REM "Copyright 2018 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0085 REM "H$=ORDER RECORD FROM FS1
0086 REM "R=NUMBER OF CHARGES RETURNED,R$=LIST OF CHARGE INFO (100 CHARS IN LENGTH), R(ALL)= RETURN VALUES - 11 BUCKETS FOR EACH CHARGE, SAME ORDER & DESCRIPTION AS ART, STARTING IN BUCKET R(0)
0087 REM "THERE IS A MAXIMUM OF 10 CHARGES PER INVOICE
0088 REM "C0$ is control string "I"=invoiceing time, invoice # follows I in c0$use FS3 to Bill now Extension,else "O"=order entry time use B(19) to get bill now extension
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,C0$,H$,R,R$,R{ALL}
0100 SETERR 9000
0110 X0$="AR2SHC",X1$="Calculate Requisition Charge "
0115 DIM R1[7],WH[7] ! SSP 258025
0118 DIM GRP$(21),GRP[10],GRPW[10] ! SSP 242573 SSP 258025
0120 DIM S$(40),A9$(187)
0125 PO3_PCT=1; REM " SSP# 134241
0130 IF C0$="" THEN C0$="O"; REM "If blank assume order entry time
0140 IF C0$(1,1)="I" THEN A9$=C0$(2),C0$=C0$(1,1)+C0$(8,8); REM "Changed 4/6/96 to pass entire A$ string
0300 REM "IOLISTS
0310 IOLIST A$(1),A[0],A[1],A[2],A[3],A[4]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20]
0330 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12],J[13],J[14],J[15],J[16],J[17],J[18],J[19],J[20]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9]
0350 IOLIST PO3$,PO3[0],PO3[1],PO3[2]; REM " SSP# 134241
0360 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19]
0370 IOLIST FTR$,FTR[0],FTR[1],FTR[2],FTR[3],FTR[4],FTR[5],FTR[6],FTR[7],FTR[8],FTR[9],FTR[10],FTR[11],FTR[12],FTR[13],FTR[14],FTR[15],FTR[16],FTR[17],FTR[18],FTR[19],FTR[20],FTR[21]
0380 IOLIST GRP$,GRP1$,GRP[0],GRP[1],GRP[2],GRP[3],GRP[4],GRP[5],GRP[6],GRP[7],GRP[8],GRP[9],GRP[10],GRPW[0],GRPW[1],GRPW[2],GRPW[3],GRPW[4],GRPW[5],GRPW[6],GRPW[7],GRPW[8],GRPW[9],GRPW[10] ! SSP 242573 SSP 258025
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O FMP...  02O FS2...  03O FM1...  04O FS3...  13O ZZPARM  15OSFMP...   16O PO3...  17OSFS2...  25O ASP...  26O FTR...  27O FTZ...  "; REM "SSP# 137868 -SSP# 134241 SSP 242573
0511 IF %ACTION$="C" THEN Z$="01O FMP...  02O FS2...  03O FM1...  04O GS3...  13O ZZPARM  15OSFMP...   16O PO3...  17OSFS2...  25O ASP...  26O FTR... 27O FTZ...  "; REM "SSP# 137868 -SSP# 134241 - % ACTION$ IS GLOBAL USED IN CREDIT CARDS;SSP 242573
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0525 GRP_FL=HFN; OPEN (GRP_FL)"*memory*" ! ssp 242573
0528 FTZ_FL=Z[27] ! SSP 275774 HFN; OPEN (FTZ_FL,ERR=*NEXT)"FTZ"+%C$
0529 ! FTS=HFN; OPEN (FTS)"JVMEM"
0600 REM 
0605 ONLY_CHG=0; REM " SSP# 137868 
0610 DIM R[330]; R$="",R=0,R[0]=0 ! SSP#281203
0645 READ (Z[13],KEY=X3$(9,3)+"F/M")P9$; IF P9$(22,1)="Y" THEN GOTO 9900; REM "Skip if work order system
0650 ASP_RATE=0; READ (Z[25],KEY=H$(285,4),DOM=0651)ASP$; ASP_RATE=NUM(ASP$(36,5)); REM " SSP$ 146930 - ASP IS FOR CREDIT CARDS
0651 GOSUB SET_READONLY; DIM CUST_DEFAULTS$(256); FIND (Z[15],KEY="D"+H$(6,10),DOM=0652)CUST_DEFAULTS$,*,*,*,*,CUST_DEFAULT4; REM " SSP# 151339 SSP303394 add READONLY                                                      
0652 GOSUB CLEAR_READONLY ! SSP303394
1000 REM "Read thru order lines and calculate R1[1],#lines, R1[2],sell extension, and R1[5],# cartons       ,R1[6]=cost extension
1002 COMMAND_LIST$="I",KEY_SIZE=5,NUM_BUCKETS=7,KEY$="",STRING$="",RETURN_CODE=0
1003 DIM B[20],DATAA[7],X[1]; DDMS_FOUND=0 ! 188526
1004 CALL "ZZRCAP",X3$,X4$,COMMAND_LIST$,KEY_SIZE,NUM_BUCKETS,KEY$,STRING$,DATAA{ALL},KEY_LIST$,X${ALL},X{ALL},PRIVATE${ALL},RETURN_CODE
1005 READ (Z[2],KEY=H$(118,8),DOM=1006)
1010 READ (Z[2],END=1090)IOL=0320
1015 KEY_2$=KEC(Z[2],ERR=*NEXT) ! 133604, save key to use instead of data, data can be wrong due to issues in gui at one time
1020 IF B$(147,8)<>H$(118,8) THEN GOTO 1090
1030 IF B$(155,1)="M" THEN GOTO 1010
1035 IF X3$(9,3)="377" AND B$(29,3)="DDM" THEN DDMS_FOUND=1 ! 188526
1040 DIM R1[7],WH[7]; GOSUB 7500; REM "SSP129474, added DIM, we are now using another array for the accumulation of amounts for the whole order, R1 is now just for each line;!SSP 258025
1050 IF ON_INV THEN PC$=PC$+B$(29,3); ON_INV=0; REM "SSP# 137868 
1075 READ (Z[2],KEY=KEY_2$,DOM=1076); REM "SSP#106776 reposition file if needed, 133604 - use key, data can be wrong due to GUI issues at one time
1080 GOTO 1010
1500 REM "Check for auto req charges & do them
1501 REM "R is current charge we are working on, I0=Index to start of string for this req charge, I1=index to first of 10 buckets for each charge, the buckets have the same desc and order as the buckets in the file ART
1502 GOSUB 7600
1505 DIM R0$(119),R0[5],E[10]; REM "E buckets are in same order as ART file, R0$ is set to 100 in length to allow for future growth ;REM  "SSP#134241 ssp 242573 SSP 258025
1510 REM "check for automatic Charges
1512 REM "AT THIS POINT I HAVE THE BO FILL FLAG IN THE HEADER H$(242,1) ; REM "SSP# 137868 
1515 IF R9=1 THEN R9$=H$(6,10) ELSE DIM R9$(10); R9$(1,2)=H$(6,2)
1520 READ (Z[1],KEY="R"+R9$,DOM=1521)
1525 KK$=KEY(Z(1),END=1800); IF MID(KK$,1,1)<>"R" THEN GOTO 1800 ! SSP212958
1530 GOSUB SET_READONLY; READ (Z[1],END=1800)R0$(1),R0[0],R0[1],R0[2],R0[3],R0[4],R0[5]; GOSUB CLEAR_READONLY; REM " read R0$ into 100 length to allow for future growth.  SSP173516, added READONLY logic
1531 NO_VALID_PC=0; IF R0$(97,2)<>"" AND R0$(97,2)<>"  " THEN GOSUB 8000; REM "SSP# 137868 SSP 242573
1532 IF R0$(2,10)<>R9$ THEN GOTO 1800
1533 IF R0[2]=0 AND ASP_RATE<>0 AND R0$(105,2)=H$(87,2) THEN R0[2]=ASP_RATE; REM " SSP# 146930 - ASP RATE IS FOR CREDIT CARDS
1534 IF NO_VALID_PC AND ONLY_CHG=0 THEN GOTO 1530 ELSE IF NO_VALID_PC AND ONLY_CHG THEN GOTO 1800; REM "CHECK FOR VALID PRODUCT CODES SSP# 137868 
1535 IF R0$(99,1)="Y" OR R0$(99,1)="O" AND H$(242,1)<>"F" THEN GOTO 1530; REM "SSP# 137868 
1536 IF R0$(99,1)="O" AND H$(242,1)="F" THEN ONLY_CHG=1; REM "SSP# 137868
1537 IF ONLY_CHG THEN DIM R[330]; R$="",R=0,R[0]=0; REM " SSP# 137868 !SSP#281203
1538 IF LEN(R0$)<>119 THEN J$=R0$; DIM R0$(119); R0$(1)=J$; REM " SSP# 134241 SSP242573
1539 Q$=H$(47,1); IF Q$=" " THEN Q$="I"
1540 IF POS(Q$=R0$(64,5))=0 THEN GOTO 1530
1541 WHSE_IN=0; IF STP(R0$(100,4),1)<>"" THEN GOSUB 7800 REM " SSP# 134241 
1542 IF STP(R0$(100,4),1)<>"" THEN IF WHSE_IN=0 THEN GOTO 1530; REM " SSP# 134241
1543 IF POS(" "<>R0$(86,5))>0 THEN IF POS(A9$(186,1)=R0$(86,5))=0 OR A9$(186,1)=DIM(1) THEN GOTO 1530 ! SSP177993, added check for blank code on invoice
1544 IF R0$(69,1)="Y" THEN IF H$(48,1)="Y" THEN GOTO 1530; REM " skip backorders
1545 IF R0$(105,2)<>DIM(2) AND R0$(105,2)<>H$(87,2) THEN GOTO 1530; REM "skip if terms code doesn't match
1546 GOSUB 8800; GOTO 1551 ! IF R0$(93,4)<>DIM(4) THEN KEY$="W"+R0$(93,4)
1547 IF R0$(92,1)="C" THEN KEY$="C0000" ELSE IF R0$(92,1)="D" THEN KEY$="D0000"
1548 IF STP(R0$(93,4),1)="" AND STP(R0$(92,1),1)="" THEN KEY$="A0000"
1549 DIM DATA[7]; COMMAND_LIST$="G"
1550 CALL "ZZRCAP",X3$,X4$,COMMAND_LIST$,KEY_SIZE,NUM_BUCKETS,KEY$,STRING$,DATAA{ALL},KEY_LIST$,X${ALL},X{ALL},PRIVATE${ALL},RETURN_CODE
1551 IF WHSE_IN AND R0$(62,1)="C" THEN DATAA[6]=TF; END_IF ; IF RETURN_CODE=-1 THEN GOTO 1530 ! SSP221214  jdf
1552 FOR T1=1 TO 7
1553 R1[T1]=DATAA[T1]
1554 NEXT T1
1555 IF R1[4]=0 AND R1[2]<>0 THEN R1[4]=SGN(R1[2]) ELSE IF R1[4]=0 THEN R1[4]=SGN(R1[5]) ! SSP#264395
1558 IF STP(MID(R0$,108,10),2)<>"" THEN RC_CALC=0; GOSUB FIND_REQ_GROUP; IF NOT(RC_CALC) THEN GOTO 1530 ! SSP 242573!SSP#264395
1560 DIM E[10]; E[10]=R0[1]; REM "E buckets in same order as ART, set original sale price from req charge info
1570 IF R0$(104,1)="Y" THEN COST_ADJ=1 ELSE COST_ADJ=0; REM "SSP# 142626
1580 ON POS(R0$(63,1)="RLC") GOTO 1530,1700,1600,1600
1600 REM "Line charge - based on # lines or # cartons
1610 IF NO_WH=1 THEN GOTO 1795
1615 E[0]=R1[1]; IF R0$(84,1)="S" THEN E[0]=R1[3] ELSE IF R0$(84,1)="N" THEN E[0]=R1[1]-R1[3]
1618 IF R0$(63,1)="C" THEN E[0]=R1[5]
1620 IF COST_ADJ THEN E[1]=E[0],E[2]=R0[0],E[4]=E[1]*E[2],E[3]=R0[2],E[5]=E[3]*E[1],E[8]=0 ELSE E[1]=E[0],E[2]=R0[0],E[4]=E[1]*E[2],E[8]=E[1]*R0[2]; REM " SSP# 142626 ssp#199666
1629 IF R0$(91,1)="C" THEN GOTO 1631 ELSE IF R0$(91,1)=" " THEN GOTO 1640
1630 IF (R0$(63,1)="C" OR R0$(63,1)="L") AND R0$(91,1)<>"Y" THEN IF R0[3]<>0 AND ABS(E[4])<ABS(R0[3]) THEN E[4]=R0[3] ELSE IF R0[4]<>0 AND ABS(E[4])>ABS(R0[4]) THEN E[4]=R0[4]; REM "ssp#89595
1635 IF (R0$(63,1)="C" OR R0$(63,1)="L") AND R0$(91,1)="C" AND COST_ADJ THEN IF R0[3]<>0 AND E[5]<R0[3] THEN E[5]=R0[3] ELSE IF R0[4]<>0 AND E[5]>R0[4] THEN E[5]=R0[4]; REM "ssp#142626
1640 GOTO 1739
1700 REM "req charge - per requisition
1702 IF NO_WH=1 THEN GOTO 1795
1703 PO3_PCT=1 ! SSP221214 jdf
1705 WHSE_IN=0; IF STP(R0$(100,4),1)<>"" THEN GOSUB 7800 ! SSP221214 jdf
1710 IF R0$(62,1)="T" THEN GOSUB 7000; IF CHARGE=0 THEN GOTO 1795; REM " SSP# 165840
1720 IF R0$(62,1)="F" AND COST_ADJ THEN E[0]=SGN(R1[4]),E[1]=SGN(R1[4]),E[2]=R0[0],E[4]=E[0]*R0[0],E[6]=SGN(R1[4]),E[8]=0,E[3]=R0[2],E[5]=E[0]*R0[2] ELSE IF R0$(62,1)="F" AND COST_ADJ=0 THEN E[0]=SGN(R1[4]),E[1]=SGN(R1[4]),E[2]=R0[0],E[4]=E[0]*R0[0],E[6]=SGN(R1[4]),E[8]=E[0]*R0[2]; REM " SSP# 142626
1730 IF R0$(62,1)="V" AND COST_ADJ THEN E[0]=R1[7],E[1]=E[0],E[2]=R0[0]/100,E[3]=R0[2]/100,E[4]=E[0]*E[2],E[5]=E[0]*E[3],E[8]=0 ELSE IF R0$(62,1)="V" AND COST_ADJ=0 THEN E[0]=R1[7],E[1]=E[0],E[2]=R0[0]/100,E[4]=E[0]*E[2],E[8]=E[0]*R0[2]/100; REM " SSP# 142626  ! SSP220948 jdf!223696
1734 IF R0$(62,1)="P" AND COST_ADJ THEN E[0]=0,E[1]=0,E[2]=0,E[4]=0,E[3]=0,E[5]=R1[2]*R0[2]/100,E[8]=0,E[5]=E[5]*PO3_PCT ELSE IF R0$(62,1)="P" AND COST_ADJ=0 THEN E[0]=0,E[1]=0,E[2]=0,E[4]=R1[2]*R0[0]/100,E[8]=R1[2]*R0[2]/100,E[4]=E[4]*PO3_PCT,E[8]=E[8]*PO3_PCT
1735 IF R0$(62,1)="C" AND COST_ADJ THEN E[0]=0,E[1]=0,E[2]=0,E[4]=0,E[3]=0,E[5]=R1[6]*R0[2]/100,E[8]=0,E[5]=E[5]*PO3_PCT ELSE IF R0$(62,1)="C" AND COST_ADJ=0 THEN E[0]=0,E[1]=0,E[2]=0,E[4]=R1[6]*R0[0]/100,E[8]=R1[6]*R0[2]/100,E[4]=E[4]*PO3_PCT,E[8]=E[8]*PO3_PCT
1736 IF POS(R0$(62,1)="PC")>0 AND POS(R0$(91,1)="C")>0 AND COST_ADJ THEN IF R0[3]<>0 AND E[5]<R0[3] THEN E[5]=R0[3] ELSE IF POS(R0$(62,1)="PC")>0 AND POS(R0$(91,1)="C")>0 AND R0[4]<>0 AND E[5]>R0[4] THEN E[5]=R0[4]
1737 IF POS(R0$(91,1)="C ")>0 THEN GOTO 1739
1738 IF POS(R0$(62,1)="PC")>0 AND R0$(91,1)<>"Y" THEN IF R0[3]<>0 AND ABS(E[4])<ABS(R0[3]) THEN E[4]=R0[3] ELSE IF R0[4]<>0 AND ABS(E[4])>ABS(R0[4]) THEN E[4]=R0[4]
1739 IF POS(R0$(62,1)="PC")>0 THEN IF ABS(R0[2])=R0[0] THEN E[8]=SGN(R0[2])*E[4]
1740 REM "Add this charge info (R0$) to the list of charges, R$, increment the number of charges R, and add the 11 Buckets E(0)-E(10) To the list of buckets in R()
1745 IF R0$(91,1)="Y" THEN IF R0[3]<>0 AND ABS(E[8])<R0[3] THEN E[8]=SGN(E[8])*R0[3] ELSE IF R0[4]<>0 AND ABS(E[8])>R0[4] THEN E[8]=SGN(E[8])*R0[4]
1746 IF MID(R0$,107,1)="Y" THEN GOSUB PROMPT_OPERATOR; IF SKIP_LINE THEN SKIP_LINE=0; GOTO 1795 ! 188526
1750 R=R+1,R$=R$+R0$(1,100)
1755 I0=(R-1)*11
1760 FOR I=0 TO 10; R[I0+I]=E[I]; NEXT I
1790 IF ONLY_CHG THEN GOTO 1800; REM "SSP# 137868 
1795 GOTO 1530
1800 REM "end of charges
1805 IF PRM('XI') THEN GOSUB CLEAR_READONLY ! SSP173516, if we got the END=1800 at 1530 we need to do the clear READONLY logic
1810 GOTO 9900
3745 IF R0$(91,1)="Y" THEN IF R0[3]<>0 AND ABS(E[8])<R0[3] THEN E[8]=SGN(E[8])*R0[3] ELSE IF R0[4]<>0 AND ABS(E[8])>R0[4] THEN E[8]=SGN(E[8])*R0[4]
5141 WHSE_IN=0; IF STP(R0$(100,4),1)<>"" THEN GOSUB 7800; REM " SSP# 134241
7000 REM "READ TABLE - SSP# 165840
7010 DIM FTR[21]; READ (Z[26],KEY="T"+R0$(2,20),DOM=7099)IOL=0370
7016 IF FTR$(2,10)<>R9$ THEN GOTO 7099
7017 IF R1[2]=0 AND FTR[1]>0 THEN GOTO *RETURN ! SSP188563, if sell is 0 and first break on table is greater than 0 then no charge, leave routine.
7018 IF FTR[19]<>0 AND R1[2]>=FTR[19] THEN CHARGE=FTR[20]; GOTO 7061 ! SSP 219898
7020 FOR I=3 TO 19 STEP 2; REM "FOR I=1 TO 19 STEP 2
7025 IF FTR[I]=0 OR FTR[I]>R1[2] THEN CHARGE=FTR[I-1]; EXITTO 7061
7029 REM "IF FTR[I+1]<>0 AND R1[2]<>0 THEN CHARGE=FTR[I+1]
7030 REM "IF FTR[I]<>0 AND R1[2]>FTR[I] THEN GOTO 7060
7040 REM "IF FTR[I]<>0 THEN CHARGE=FTR[I-1]
7055 REM "EXITTO 7061
7060 NEXT I
7064 IF MID(FTR$,22,1)="Y" THEN E[0]=SGN(R1[4]),E[1]=SGN(R1[4]),E[2]=(R1[2]*CHARGE)/100,E[4]=(R1[2]*CHARGE)/100,E[6]=1; GOTO 7066 ! SSP 219898
7065 E[0]=SGN(R1[4]),E[1]=SGN(R1[4]),E[2]=CHARGE,E[4]=CHARGE,E[6]=1
7070 IF CHARGE=0 THEN E[0]=0,E[1]=0,E[2]=0,E[4]=0,E[6]=0
7099 RETURN 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7500 REM "Read FM1 and set R1[1] # lines, R1[2] sell ext, and R1[5] # cartons
7502 ! F B$(9,1)<>" " THEN GOTO 7570 ! SSP258025 Do not accumulate totals for order lines with a PO code
7505 DIM J[20]
7510 J$=B$(161,10)+B$(19,10); IF B$(9,1)<>" " THEN J$(1,10)=H$(6,10)
7515 GOSUB SET_READONLY ! SSP#258697
7520 READ (Z[3],KEY=J$,DOM=7521)IOL=0330; GOTO 7530
7525 IF J$(1,10)=H$(6,10) THEN GOTO 7540 ELSE J$(1,10)=H$(6,10); GOTO 7520
7530 IF J[4]=0 THEN GOTO 7540 ELSE R1[7]=J[3]*B[7]/J[4]; REM [119511] "Accumulating totals in ZZRCAP
7535 R0=J[3]
7540 GOSUB CLEAR_READONLY ! SSP#258697
7545 GOSUB 7700; R1[2]=T,R1[6]=T1,R1[4]=SGN(B[0]); IF POS(B$(155,1)="IC ")>0 THEN R1[1]=SGN(B[0]); IF LEN(J$)>=105 AND J$(105,1)="S" THEN R1[3]=SGN(B[0]); REM [119511] "Accumulating totals in ZZRCAP !SSP#258697
7555 Q$=B$(147,8)+B$(6,3)
7560 CALL "IC2LOT",X3$,"ICF",J$(1,20),Q$,"","",Q,Q{ALL}
7562 IF Q[4]=0 THEN ITEM$=DIM(10)+J$(11,10); CALL "IC2LOT",X3$,"ICF",ITEM$,Q$,"","",Q,Q{ALL}
7565 R1[5]=Q[4]; REM [119511] "Accumulating totals in ZZRCAP
7566 REM [119511] "Added ZZRCAP to accumulate totals for all whses., cust. whses., distributor whses, and individual whses.
7568 IF B$(9,1)<>" " THEN GOTO *NEXT ELSE IF POS(B$(155,1)="IC ") THEN FOR XX=1 TO 7; WH[XX]=R1[XX]; NEXT XX ! SSP 258025 Totals for inventory lines
7570 FOR TOT=1 TO 7
7575 DATAA[TOT]=R1[TOT]
7576 GRP[TOT]=R1[TOT] ! SSP 242573
7578 NEXT TOT
7581 FOR C1=1 TO 3
7582 IF C1=1 THEN KEY$="A0000"
7583 IF C1=2 THEN KEY$="W"+B$(10,4)
7584 IF C1=3 AND STP(B$(10,4),1)<>"" AND STP(B$(10,4),1)<>"DS" THEN IF B$(10,4)<"9000" THEN KEY$="D0000" ELSE KEY$="C0000" ! SSP#214390
7585 COMMAND_LIST$="A"
7586 CALL "ZZRCAP",X3$,X4$,COMMAND_LIST$,KEY_SIZE,NUM_BUCKETS,KEY$,STRING$,DATAA{ALL},KEY_LIST$,X${ALL},X{ALL},PRIVATE${ALL},RETURN_CODE
7587 NEXT C1
7588 GOSUB WH_LINES
7590 OTYPE$=B$(155,1); IF OTYPE$=" " THEN OTYPE$="C" ! SSP 249317
7592 RJ$=J$; IF POS(OTYPE$="IS")<>0 THEN RJ$(1,10)=DIM(10) ! SSP 250871
7594 GRP_KEY$=KEY_2$; GRP$=OTYPE$+RJ$,GRP1$=B$(10,4); WRITE (GRP_FL,KEY=GRP$+GRP_KEY$)IOL=0380 ! SSP 242573 SSP 249317 SSP 250305 SSP 250871
7595 RETURN 
7600 REM "Set R9 for type of Req charges, by customer or by division
7605 R9=0
7610 READ (Z[1],KEY="R"+H$(6,10),DOM=7611)
7620 K$=KEY(Z[1],END=7621); IF LEN(K$)>10 THEN IF K$(1,11)="R"+H$(6,10) THEN R9=1; GOTO 7645
7625 READ (Z[1],KEY="R"+H$(6,2),DOM=7626)
7630 K$=KEY(Z[1],END=7631); IF LEN(K$)>4 THEN IF K$(1,3)="R"+H$(6,2) AND POS(" "<>K$(4,8))=0 THEN R9=2
7645 RETURN 
7700 REM "Set T to the sell extension, If invoice total the bill now extension from FS3 for this order line, if order entry time, use B(19) the exstension of the unbilled shipments, T1 to bill now cost extension
7705 IF C0$(1,1)="O" THEN T=B[19]; GOTO 7740 ELSE T=0,T1=0,T2=0,T0$=C0$(2,8)+B$(147,8)+B$(6,3); DIM D[9] ! SSP221214 jdf
7710 READ (Z[4],KEY=T0$,DOM=7711)
7719 REM "20,1=blank is the header record, and only ones we want to look at
7720 K$=KEY(Z[4],END=7735); IF K$(1,LEN(T0$))<>T0$ THEN GOTO 7735 ELSE IF K$(20,1)<>" " THEN GOTO 7735 ELSE READ (Z[4],KEY=K$)IOL=0340
7721 ON_INV=1; REM "SSP# 137868 
7725 T=T+D[2]; T1=T1+D[4],TJ=TJ+T1; IF B$(18,1)="Y" THEN T2=T2+D[4],TF=TF+T2 ! SSP221214 jdf
7730 GOTO 7720
7745 RETURN 
7800 REM "Read through PO3 and check warehouse code- SSP# 134241
7802 PO3_QTY=0,PO3_PCT=1,TOTAL=0 ! ssp#206373  ! SSP221214 jdf
7803 IF STP(MID(R0$,108,10),2)<>"" THEN RETURN ! 242573 - Bypass this routine if a group code! SSP 242573
7805 READ (Z[17],KEY=H$(118,8),DOM=7806); REM " SSP# 134241
7810 DIM FS2[19]; READ (Z[17],END=7999)IOL=0360; REM " SSP# 134241
7815 IF H$(118,8)<>FS2$(147,8) THEN GOTO 7999; REM "SSP# 134241
7820 IF FS2$(18,1)=" " THEN GOTO 7810; REM " SSP# 134241
7823 IF R0$(62,1)="P" THEN TOTAL=TOTAL+FS2[0] ! SSP221214 jdf
7825 DIM PO3[3]; READ (Z[16],KEY=FS2$(147,8)+" "+FS2$(6,3),DOM=7826); REM " SSP# 134241
7830 READ (Z[16],END=7999)IOL=0350; REM " SSP# 134241
7832 IF R0$(62,1)="P" AND PO3$(11,1)<>"D" THEN TOTAL=FS2[0] ! SSP221214 jdf
7835 IF PO3$(166,8)+PO3$(7,3)<>FS2$(147,8)+FS2$(6,3) THEN GOTO 7810; REM " SSP#134241 ssp#207731
7840 IF PO3$(11,1)<>"D" THEN GOTO 7830; REM " SSP# 134241
7845 IF R0$(100,4)<>PO3$(12,4) THEN GOTO 7830; REM " SSP# 134241
7850 WHSE_IN=1; REM " SSP# 134241
7855 IF R0$(62,1)="P" THEN PO3_PCT=PO3[0]/TOTAL ELSE PO3_PCT=PO3[0]/FS2[0] ! SSP221214 jdf
7860 IF PO3_PCT=0 THEN PO3_PCT=1
7999 RETURN 
8000 REM "Check for Product Code in Auto Req Charges File SSP# 137868
8005 NO_VALID_PC=0
8010 FIND (Z[15],KEY="eP"+R0$(97,2),DOM=8299)CODE$
8020 REM "Check to see if PC on line is in Code File 
8025 FOR I=0 TO 108 STEP 9
8030 IF POS(MID(CODE$,36+I,3)=PC$,3) THEN EXITTO 8299
8040 NEXT I
8200 NO_VALID_PC=1
8299 RETURN 
8300 PROMPT_OPERATOR:! Set SKIP_LINE 188526
8305 SKIP_LINE=0
8310 IF X3$(9,3)="377" AND DDMS_FOUND=1 THEN SKIP_LINE=1; GOTO PO_END
8315 IF %INV_L$="Y" OR %IN_WEBEC$="Y" THEN GOTO PO_END ! if in called mode, then doit
8345 MESS$="Add "+STP(R0$(12,10))+" charge of "+STP(STR(E[4]:"$#,###,###.00-"),2)+"?"
8350 CALL "ZZPROM",".Y",X3$,CHOICE,MESS$,"","",0; ON CHOICE GOTO PO_END,SKIP_CHARGE
8360 SKIP_CHARGE: SKIP_LINE=1
8390 PO_END:
8395 RETURN 
8399 ! **********************************************************
8400 WH_LINES:! SSP 258025 Accumulate new variables
8410 FOR TOT=1 TO 7
8420 DATAA[TOT]=WH[TOT]
8430 GRPW[TOT]=WH[TOT] ! SSP 242573
8435 NEXT TOT
8440 FOR C1=1 TO 3
8445 IF C1=1 THEN KEY$="a0000"
8450 IF C1=2 THEN KEY$="w"+B$(10,4)
8455 IF C1=3 AND STP(B$(10,4),1)<>"" AND STP(B$(10,4),1)<>"DS" THEN IF B$(10,4)<"9000" THEN KEY$="d0000" ELSE KEY$="c0000" ! SSP#214390
8460 COMMAND_LIST$="A"
8465 CALL "ZZRCAP",X3$,X4$,COMMAND_LIST$,KEY_SIZE,NUM_BUCKETS,KEY$,STRING$,DATAA{ALL},KEY_LIST$,X${ALL},X{ALL},PRIVATE${ALL},RETURN_CODE
8470 NEXT C1
8475 RETURN 
8499 ! 
8500 FIND_REQ_GROUP:! SSP 242573
8510 IF STP(MID(R0$,108,10),2)="" THEN RETURN 
8515 IN_EXCL$=R0$(118,1)
8520 DIM IEG[10]
8525 DIM FTZ$(382)
8530 READ (FTZ_FL,KEY=R0$(108,10)+"",ERR=*NEXT)
8540 FTZ_KY$=KEY(FTZ_FL,END=8600); READ (FTZ_FL,KEY=FTZ_KY$)FTZ$
8550 IF MID(FTZ_KY$,1,10)<>R0$(108,10) THEN GOTO 8600
8555 READ (GRP_FL,KEY=FTZ$(11,21)+"",ERR=*NEXT)
8556 GRP_KEY$=KEY(GRP_FL,END=8540); READ (GRP_FL,KEY=GRP_KEY$)IOL=0380
8557 IF MID(GRP_KEY$,1,21)<>FTZ$(11,21) THEN GOTO 8540
8560 IF R0$(93,4)<>DIM(4) THEN IF GRP1$<>R0$(93,4) THEN GOTO 8556
8570 FOR X=1 TO 7; IEG[X]=IEG[X]+GRP[X]; NEXT X
8575 GOTO 8556
8590 GOTO 8540
8605 IF IN_EXCL$="I" THEN FOR X=1 TO 7; R1[X]=IEG[X]; NEXT X
8610 IF IN_EXCL$="E" THEN FOR X=1 TO 7; R1[X]=R1[X]-IEG[X]; NEXT X
8620 FOR X=1 TO 7; IF R1[X]<>0 THEN RC_CALC=1; BREAK ELSE NEXT X
8690 RETURN 
8699 ! 
8800 GET_DATA:! SSP 258025
8810 KW$="W",KC$="C",KD$="D",KA$="A"; IF MID(R0$,119,1)="Y" THEN KW$="w",KC$="c",KD$="d",KA$="a"
8820 IF R0$(93,4)<>DIM(4) THEN KEY$=KW$+R0$(93,4)
8830 IF R0$(92,1)="C" THEN KEY$=KC$+"0000" ELSE IF R0$(92,1)="D" THEN KEY$=KD$+"0000"
8840 IF STP(R0$(93,4),1)="" AND STP(R0$(92,1),1)="" THEN KEY$=KA$+"0000"
8850 DIM DATA[7]; COMMAND_LIST$="G"
8860 CALL "ZZRCAP",X3$,X4$,COMMAND_LIST$,KEY_SIZE,NUM_BUCKETS,KEY$,STRING$,DATAA{ALL},KEY_LIST$,X${ALL},X{ALL},PRIVATE${ALL},RETURN_CODE
8870 NO_WH=0; IF MID(R0$,119,1)="Y" THEN FOR XX=1 TO 7; IF DATAA[XX]<>0 THEN EXITTO *NEXT ELSE NEXT XX; NO_WH=1 ! Set NO_WH to determine if any W/H lines in total (for Fixed Price calculations)
8880 RETURN 
8899 ! 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 CLOSE (GRP_FL,ERR=*NEXT) ! SSP 242573
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 ! Program changes starting 10/20/05
56001 REM "199539-Getting program exception running customer invoicing        
56002 REM "199666-Auto Req charges do not allow both cost and price
56010 REM "188563-Auto req charge table charging even if sell is 0
56015 REM "194843-Checking out credit card module and getting pe. Dollar total
56016 REM "207731-911 Exec sales analysis rept-They have 2 salespeople that   
56017 ! "212958-Error in PO receiving at the AP screen                      
56018 REM "214390-Problem with special charges showing up on DDMS orders      
56019 REM "219898-Modify Requisition Charge Setup concerning the T (table)    
56020 REM "220948-Invoice 0175779 for customer 00-00100686 has s release      
56021 REM "221214-Requisiton setup charge not working properly.               
56022 REM "242573-New file to hold list of items. Modify Auto Req Charge setup
56023 REM "249317-We had a work order to omit req charges at an individual    
56024 REM "250305-We are trying to apply a flat $5 GP adjustment to approx 20 
56025 REM "250871-The group code on the req isn't working for sales orders    
56026 REM "258025-Requisition Charge to apply only to lines pulling from whse.
56027 REM "258697-RT-21364 WebEC Order Response Error for order 50-A01P78     
56028 REM "275774-FTZ file not closed, WO242573, AR2SHC, noticed issue when   
56029 REM "281203-Can only have 10 auto requisition charges per invoice.  If  
56030 REM "303394-DBA DBSPT-47844: Purchase Order transmission failed on order
