0010 REM "A/R Order Update Update <AR2DUD>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 06/17/21 - 12.385655 - jvv - SSP# 307357
0037 REM "307357-Update FS6 to allow for more line numbers                   
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "Order History & Inventory Committed"
0090 IF %GUI THEN CLEAR ELSE BEGIN 
0100 SETERR 9000
0110 X0$="AR2DUD",X1$="Order Update - Phase I"
0120 DIM A[7],B[21],C[5],F[7],I[20],FTU[8],FTV[10] ! WO212768
0121 LAST_ORDER$=""
0122 DIM FTS[9] ! [SSP-200893]
0124 DIM FTT[11] ! [SSP-200893]
0126 DIM AR3[1] ! [SSP-200893]
0128 DIM AR1[16] ! [SSP-200893]
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0250 DEF FNC$(C)=CHR(32+INT(C/95))+CHR(32+MOD(C,95))
0260 DEF FND(Z9$)=(ASC(Z9$(1,1))-32)*95+ASC(Z9$(2,1))-32
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5]
0340 IOLIST D$
0345 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6]
0350 IOLIST E$
0360 IOLIST F$(1),F[0],F[1],F[2],F[3],F[4],F[5],F[6],F[7]
0361 IOLIST F$,F[0],STR(F[1]),F[2],F[3],STR(F[4]),F[5],F[6],F[7]
0370 IOLIST G$,G[0],G[1],G[2],G[3],G[4],G[5],G[6],G[7],G[8],G[9],G[10],G[11],G[12]
0390 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14],I[15],I[16],I[17],I[18],I[19],I[20]
0391 IOLIST I$,I[0],I[1],STR(I[2]),STR(I[3]),I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14],I[15],I[16],I[17],I[18],I[19],I[20]
0430 IOLIST S$,S[0],S[1]
0440 IOLIST ARB$,ARB[0],ARB[1],ARB[2],ARB[3],ARB[4],ARB[5],ARB[6],ARB[7],ARB[8],ARB[9],ARB[10],ARB[11],ARB[12],ARB[13],ARB[14],ARB[15],ARB[16],ARB[17],ARB[18],ARB[19],ARB[20],ARB[21],ARB[22],ARB[23],ARB[24],ARB[25],ARB[26],ARB[27],ARB[28],ARB[29],ARB[30]; REM " SSP# 144947
0450 IOLIST ART_POINTER,ART$,ART[0],ART[1],ART[2],ART[3],ART[4],ART[5],ART[6],ART[7],ART[8],ART[9],ART[10],ART[11],ART[12],ART[13],ART[14],ART[15],ART[16],ART[17],ART[18],ART[19],ART[20],ART[21],ART[22],ART[23],ART[24],ART[25],ART[26],ART[27],ART[28],ART[29],ART[30],ART[31],ART[32],ART[33],ART[34],ART[35],ART[36],ART[37],ART[38],ART[39],ART[40],ART[41],ART[42],ART[43],ART[44],ART[45],ART[46],ART[47],ART[48] ! SSP 249775
0460 IOLIST FS6$,FS6[0],FS6[1],FS6[2],FS6[3],FS6[4],FS6[5],FS6[6],FS6[7]; REM " SSP# 144947
0472 FTT_IOLIST:IOLIST FTT$,FTT{ALL} ! [SSP-200893]
0476 AR1_IOLIST:IOLIST AR1$,AR1{ALL} ! [SSP-200893]
0480 FTU_IOLIST:IOLIST FTU$,FTU[0],FTU[1],FTU[2],FTU[3],FTU[4],FTU[5],FTU[6],FTU[7],FTU[8] ! WO212768
0485 FTV_IOLIST:IOLIST FTV$,FTV[0],FTV[1],FTV[2],FTV[3],FTV[4],FTV[5],FTV[6],FTV[7],FTV[8],FTV[9],FTV[10] ! WO212768
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O FS1...  02O FS2...  03L FS3...  04O FS9...  05O PO3...  06O FS6...  07O FS7...  08O FS8...  09O IC1...  10O FS5...  11O FMP... 12O FSY...  20O ARB...  25O ART...  26O FTU...  27O FTV...  28O RFS... "
0515 Z$=Z$+"13O ZZPARM  "
0517 Z$=Z$+"41O FTS...  42O FTT...  " ! [SSP-200893]
0518 Z$=Z$+"43O AR3...  44O AR1...  " ! [SSP-200893]
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0521,8810
0570 IF FN%HAS_MODULE("WW") THEN HAS_WMS=1 ! 248746
0585 RT_PARM$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT_PARM$
0590 FTS_LFN=Z[41] ! [SSP-200893]
0592 FTT_LFN=Z[42] ! [SSP-200893]
0594 AR3_LFN=Z[43] ! [SSP-200893]
0596 AR1_LFN=Z[44] ! [SSP-200893]
0598 ARB_LFN=Z[20] ! [SSP-200893]
0620 DIM M6[1]
0630 CALL "IC2PRE",X3$,Z[13],M6$,M6{ALL},"",0,"",0
0640 READ (Z[13],KEY=X3$(9,3)+"I/C",DOM=0641)P0$
0650 READ (Z[13],KEY=X3$(9,3)+"F/M",DOM=0651)P1$
0655 GB$=""; FIND (Z[13],KEY=X3$(9,3)+"G/B",DOM=0656)GB$
0695 PRINT @(29,9),"Invoice      Order    Line"
1000 REM "READ NEXT RECORD
1020 DIM A$(168)
1050 READ (Z[3],KEY="",DOM=1051)
1100 READ (Z[3],END=4000)IOL=0330
1105 IF C$(20,1)<>" " THEN GOTO 1100
1110 PRINT @(29,10),C$(1,8),"   ",C$(9,8),"    ",C$(17,3),
1120 IF C$(9,8)<>A$(118,8) THEN EXTRACT (Z[1],KEY=C$(9,8),DOM=1990)IOL=0310; IF A$(315,20)<>DIM(20) THEN GOSUB PROCESS_CONTRACTS ! SSP200893
1125 IF P1$(300,1)="Y" THEN GOSUB 6000; REM " SSP# 144947
1140 EXTRACT (Z[2],KEY=C$(9,11),DOM=1990)IOL=0320
1150 REM "IF B$(155,1)="M" THEN GOTO 01100
1200 GOSUB 2000
1220 IF B$(155,1)<>"M" THEN GOSUB 3000
1990 GOTO 1100
2000 REM "Update Order History"
2005 IF B$(155,1)="M" AND P1$(263,1)<>"Y" THEN RETURN 
2009 IF C[0]=0 AND C[3]<>0 THEN RETURN 
2010 GOSUB 2600
2020 DIM F$(163),F[7] ! SSP 307357
2025 IF B$(155,1)="M" THEN B$(19,10)="M"+C$(11,6)+B$(6,3)
2030 F$(1)=A$(6,10)+T$+B$(19,10)+C$(9,8)+" "
2040 GOSUB 2400
2042 F$(114,3)=STR(F9:"000"),F$(117,3)="001" ! SSP 307357 Line Num
2045 IF T$="J" THEN GOSUB 2700; IF X$<>"Y" THEN GOSUB 2750; GOTO 2100
2050 EXTRACT (Z[6],KNO=0,KEY=F$(1,30),DOM=2110)IOL=0360 ! SSP 198084
2055 F9$=""; IF F$(48,6)<>"      " THEN F9$=F$(48,6)
2060 F$(40,14)=C$(1,8)+C$(21,6),F$(69,12)=B$(171,12),F[3]=B[13]
2070 F[5]=F[5]+C[0],F[6]=F[6]+C[2],F[7]=F[7]+C[4]
2080 GOSUB 2200
2085 GOSUB 2300
2090 GOSUB 7600
2095 IF B$(155,1)="M" THEN B$(19,10)=DIM(10)
2100 RETURN 
2110 REM "If not found then finish making up & write out everywhere
2120 F$(31,3)=B$(29,3)+A$(16,6),F$(54,15)=A$(28,15),F$(81)=B$(113,6)+B$(94,10)+B$(90,4)+B$(124,4)
2130 F[0]=B[10],F[1]=B[4],F[2]=B[5],F[3]=B[13]
2140 WRITE (Z[7],KEY=F$(31,3)+F$(12,10)+F$(11,1)+F$(1,10)+F$(22,8)+F$(30,1))
2150 WRITE (Z[8],KEY=F$(1,10)+F$(22,8)+F$(11,11)+F$(30,1))
2155 CALL "FM2ODS",X3$,F$,"W"
2160 IF POS(B$(155,1)="NM")=0 THEN GOTO 2176
2170 DIM D$(81); D$(1)=F$(22,8)+F$(12,10)+F$(30,1)+B$(29,61); WRITE (Z[4],KEY=D$(1,19))IOL=0340
2180 GOTO 2051
2200 REM "Compute new price/cost in FS6"
2205 IF B$(155,1)="M" THEN RETURN 
2210 IF C[0]=0 AND B[10]<>0 THEN GOTO 2290
2220 DIM S$(21),S[2]; FIND (Z[13],KEY="U/M"+B$(124,4),DOM=2221)IOL=0430
2230 F$(101,4)=B$(124,4),F[2]=B[5]
2240 IF C[0]=0 AND C[2]<>0 OR S$(21,1)="Y" THEN F[1]=C[2],F[4]=C[4]; GOTO 2290 ELSE F[1]=C[1]
2250 IF S$(20,1)<>"Y" THEN S[2]=F[2] ELSE IF S[0]<>0 THEN S[2]=S[0] ELSE S[2]=S[1]
2260 IF S[2]=0 THEN S[2]=1
2270 IF C[0]=0 AND C[2]=0 THEN F[4]=C[4]; GOTO 2290
2275 IF C[0]/S[2]=0 THEN F[4]=C[4]; GOTO 2290
2278 PRECISION 4 ! ssp#274328
2280 F[4]=C[4]/(C[0]/S[2])
2285 PRECISION 2
2290 RETURN 
2300 REM "Capture ship-to data.  Change will update the FS6 record with the
2301 REM "first special shipping record, if none, will use the general
2302 REM "shipping data.
2305 REM "This routine checks the next FS3 key; If C$(20,1) is not blank,
2306 REM "this is the shipping to update FS6.  These records are normally
2307 REM "skipped by the update (line1105)
2310 RETURN 
2320 F$(106,5)="C"+C$(27,4)
2330 Q$=KEY(Z[3],END=2380)
2340 IF C$(1,19)<>Q$(1,19) THEN GOTO 2380
2345 READ (Z[3])Q$
2350 F$(107,4)=Q$(27,4)
2355 REM "What about location type???
2390 RETURN 
2400 REM "Set Seq no for FS6 from FS2 line #
2410 F9=NUM(B$(6,3),ERR=2411)
2415 IF F9>=90 THEN F9=F9+10
2420 IF F9>206 THEN F9=206
2430 F$(30,1)=CHR(F9+48)
2440 RETURN 
2600 REM "Set T$ to type for FS6 records
2610 T$=" "
2620 ON POS(B$(155,1)=" CINSM") GOTO 2690,2630,2640,2650,2660,2670,2673
2630 T$="B"; GOTO 2680
2640 T$="D"; GOTO 2680
2650 T$="F"; GOTO 2680
2660 T$="H"; GOTO 2680
2670 T$="J"; GOTO 2680
2673 T$="M"; GOTO 2680
2675 IF P1$(195,1)<>"Y" THEN GOTO 2690
2680 REM "READ SOURCE WAREHOUSE FILE AND IF HIDDEN THEN CHANGE TO A 'B'-TYPE
2685 CALL "FM2MAK",X3$,X4$,B$,B{ALL},A$,A{ALL},T$,T{ALL}
2690 RETURN 
2700 REM "Order History on Specials? <3.4>
2710 X$="Y"
2720 FIND (Z[11],KEY="X"+B$(19,10),DOM=2740)X$
2730 X$=X$(59,1)
2740 RETURN 
2750 REM "Remove Specials Order History
2760 REMOVE (Z[6],KEY=F$(1,30),DOM=2761)
2761 IF RT_PARM$<>"" THEN CUST$=F$(1,10); CALL "RT2WOC",ERR=2762,X3$,X4$,CUST$,"FS6...","D",F$(1,30)
2770 REMOVE (Z[7],DOM=2771,KEY=F$(31,3)+F$(12,10)+F$(11,1)+F$(1,10)+F$(22,8)+F$(30,1))
2780 REMOVE (Z[8],DOM=2781,KEY=F$(1,10)+F$(22,8)+F$(11,11)+F$(30,1))
2785 CALL "FM2ODS",X3$,F$,"D"
2790 RETURN 
3000 REM "Update Inventory Committed & Remove FS5 Record?
3020 I9$=B$(161,10)+B$(19,10)
3030 IF POS(B$(155,1)="IC")=0 OR POS(B$(10,4)="    DS  ",4)>0 THEN GOTO 3100
3040 EXTRACT (Z[9],KEY=I9$+B$(10,4),DOM=3100)IOL=0390
3050 REM "Caution - B$(3,1) may be a 'Y'
3055 REM "I(11)= Qty B/O on Order line (note: take off FS2 add back FS3 qty) - 5/8/90 for QBS
3060 I[11]=I[11]-B[8]+C[3]; IF B[7]>B[0] THEN I[7]=I[7]-B[7]+C[3] ELSE I[7]=I[7]-B[0]+C[3] ! WAS I[7]=I[7]-B[0]+C[3],I[11]=I[11]-B[8]+C[3] SSP#236607
3070 IF A$(43,1)="Y" THEN I[6]=I[6]-INT(C[0]*.05); REM "Waste
3080 WRITE (Z[9],KEY=I9$+B$(10,4))IOL=0391
3085 IF RT_PARM$>"" THEN IF RT_PARM$(7,1)="H" THEN CUST$=I9$(1,10); CALL "RT2WOC",ERR=3086,X3$,X4$,CUST$,"IC1...","U",I9$+B$(10,4)
3090 IF GB$<>"" THEN ORDER_LINE$=B$(147,8)+B$(6,3); CALL "BM2ICU",X3$,X4$,-1,ORDER_LINE$,0
3100 IF C[3]<>0 THEN RETURN 
3110 REMOVE (Z[10],KEY=I9$+B$(10,4)+B$(147,8)+B$(6,3),DOM=3111)
3115 REMOVE (Z[10],KEY=A$(6,10)+I9$(11,10)+B$(10,4)+B$(147,8)+B$(6,3),DOM=3116); REM "WO106216, in case B$(161,10) is blank
3120 IF B$(18,1)="Y" THEN GOSUB 3200
3140 RETURN 
3200 REM "Remove FS5 records associated with Customer Inventory being shipped to distributor warehouse 9000+
3210 K5$=B$(147,8)+" "+B$(6,3)
3220 READ (Z[5],KEY=K5$,DOM=3221)
3240 K$=KEY(Z[5],END=3290); READ (Z[5],KEY=K$)IOL=0350
3260 IF K$(1,12)<>K5$ THEN GOTO 3290
3270 IF E$(11,2)="D9" THEN REMOVE (Z[10],KEY=I9$+E$(12,4)+B$(147,8)+B$(6,3),DOM=3271)
3275 IF E$(11,2)="D9" THEN REMOVE (Z[10],KEY=A$(6,10)+I9$(11,10)+E$(12,4)+B$(147,8)+B$(6,3),DOM=3276); REM "WO106216, in case B$(161,10) is blank
3280 GOTO 3240
3290 RETURN 
4000 REM "Process Lots if needed
4002 IF P0$(44,1)<>"Y" THEN GOTO 9900
4003 Z$="04C FS9...  05C PO3...  07C FS7...  04O ICF... "; IF P0$(66,1)="Y" THEN Z$=Z$+"05O ICO... 07O PO3... "; REM "Inventory lot transaction file if neededSSP 303386
4004 REM USED TO OPEN:  05O ICI...  07O ICJ...  "
4005 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 4006,8820
4010 DIM A$(168)
4015 READ (Z[3],KEY="",DOM=4016)
4020 READ (Z[3],END=9900)IOL=0330
4022 EXTRACT (Z[2],KEY=C$(9,11),DOM=4020)IOL=0320 ! SSP 303386
4025 IF C$(20,1)<>" " THEN IF MID(C$,27,1)="9" AND P0$(66,1)="Y" THEN GOTO ICO_RECV ELSE GOTO 4020 ! SSP 303386
4030 PRINT @(29,10),C$(1,8),"   ",C$(9,8),"    ",C$(17,3),
4050 IF B$(2,1)="Y" THEN GOSUB 4100; IF HAS_WMS THEN CALL "UPDRFS;DELETE_ORDER_LINE",ERR=*NEXT,Z[28],MID(C$,9,8),MID(C$,17,3) ! 248746
4060 GOTO 4020
4100 REM "Remove ICF records
4105 K$=B$(161,10)+B$(19,10)
4106 DIM D[6],D$(214)
4110 READ (Z[4],KEY=K$,DOM=4111)
4120 K9$=KEY(Z[4],END=4195); READ (Z[4],KEY=K9$)IOL=0345
4124 IF D$(1,20)<>K$(1,20) THEN GOTO 4195
4125 IF D$(110,11)<>C$(9,11) THEN GOTO 4120
4130 IF P0$(66,1)="Y" THEN GOSUB 4200; REM "Lot transaction detail
4150 REMOVE (Z[4],KEY=K9$,DOM=4151)
4155 GOTO 4120
4195 RETURN 
4200 REM "Update Lot transaction detail
4205 DIM G$(286),G[12]
4210 READ (Z[4],KEY=K9$,DOM=4245)IOL=0370
4215 IF G$(21,1)="9" THEN I5$="I" ELSE I5$="S"; REM "Transaction type, Sale or issue, depends on warehouse shipped from
4220 D5$=C$(40,6); REM "Ship date from FS3
4225 G[5]=C[1],G[6]=B[5],G$(129,4)=B$(124,4); REM "Set Sale price from FS3, qty per u/m and u/m from FS2
4228 G$(202,7)=C$(1,8) ! released on Invoice Number
4235 CALL "IC2LAH",X3$,X4$,G$,G{ALL},C$(31,6),"SJ",I5$,D5$,Z[5]
4245 RETURN 
4299 ! 
4500 ICO_RECV:! SSP 303386
4510 PO3_KEY$=C$(9,8)+" "+C$(17,4)
4520 FIND (Z[7],KEY=PO3_KEY$,DOM=4020)TMP_PO3$
4525 IF MID(TMP_PO3$,11,1)<>"D" THEN GOTO 4020 ! Confirm location type
4530 DIM G$(286),G[12]
4540 G$(7,10)=B$(161,10) ! Set Customer Div and Code from FS2
4550 G$(41,9)=B$(147,8)+B$(9,1) ! Set Order and PO Number from FS3
4560 G$(31,4)=C$(27,4) ! Location Code
4570 G$(17,10)=B$(19,10) ! Set item from FS2
4572 G$(148,7)=C$(1,8) ! Invoice Number
4575 D5$=C$(40,6)
4600 CALL "IC2LAH",X3$,X4$,G$,G{ALL},C$(31,6),"SR","I",D5$,Z[5]
4660 GOTO 4020
4699 ! 
6000 REM " Check for specials added during invoicing that should be added to History - ssp# 144947
6002 IF A$(118,8)=DIM(8) THEN RETURN 
6010 READ (Z[20],KEY="",DOM=6011)
6015 DIM ARB[30],ART[48] ! SSP 249775
6017 LINE=99
6020 KEY_ARB$=KEY(Z[20],END=6999); READ (Z[20],END=6999)IOL=0440; ART_POINTER=ARB[20]
6025 IF ARB$(7,8)<>C$(1,8) THEN GOTO 6020
6030 IF ART_POINTER>0 THEN READ (Z[25],IND=ART_POINTER)IOL=0450 ELSE GOTO 6999
6035 IF ART$(1,1)<>"S" THEN GOTO 6030
6040 IF ART$(47,3)<>DIM(3) THEN GOTO 6030
6060 REM " BUILDFS6 RECORDS
6070 DIM FS6$(163),FS6[7] ! SSP 307357
6080 FS6$(1)=ARB$(15,10)+"J"+ART$(65,10)+ARB$(92,8)+" "+ART$(3,3)+A$(16,6)
6082 FS6$(40,8)=ARB$(7,8); REM " INVOICE #
6083 FS6$(48,6)=ARB$(86,6); REM " INVOICE DATE
6085 FS6$(54,15)=ARB$(100,15); REM " CUST PO
6090 GOSUB 7450
6100 FS6$(81)=DIM(16)+ART$(89,4)+ART$(50,4)
6105 FS6$(114,3)=STR(D9:"000"),FS6$(117,3)="001" ! SSP 307357 Line Num
6110 FS6[0]=ART[1],FS6[2]=ART[6],FS6[3]=0
6120 IF ART[3]=0 THEN FS6[4]=ART[5] ELSE FS6[4]=ART[3]
6121 IF ART[2]=0 THEN FS6[1]=ART[4] ELSE FS6[1]=ART[2]
6122 FS6[6]=ART[4],FS6[7]=ART[5]
6123 FS6[5]=ART[1]; REM " QTY SHIPPED
6125 WRITE (Z[6],KEY=FS6$(1,30))IOL=0460
6130 WRITE (Z[7],KEY=FS6$(31,3)+FS6$(11,1)+FS6$(12,10)+FS6$(1,10)+FS6$(22,8)+FS6$(30,1))
6140 WRITE (Z[8],KEY=FS6$(1,10)+FS6$(22,8)+FS6$(11,11)+FS6$(30,1))
6145 CALL "FM2ODS",X3$,FS6$,"W"
6150 LINE=LINE+1
6160 GOTO 6030
6999 RETURN 
7450 REM " Compute seq no for FS6 record
7460 D9=LINE
7465 IF D9>=90 THEN D9=D9+10
7470 IF D9>206 THEN D9=206
7480 FS6$(30,1)=CHR(D9+48)
7490 RETURN 
7600 REM "ORDER HISTORY AND REVERSE DATE SORT (FS6 & FSY)
7610 WRITE (Z[6],KEY=F$(1,30))IOL=0361; IF RT_PARM$<>"" THEN CUST$=F$(1,10); CALL "RT2WOC",ERR=7611,X3$,X4$,CUST$,"FS6...","U",F$(1,30)
7615 IF F9$>"" THEN GOSUB 7650
7620 Q$=F$(1,10)+F$(48,6)+F$(12,10)+F$(11,1)+F$(22,8)+F$(30,1)
7625 CALL "ZZDATE",X3$,"","G10101",Q$(11,6),D0,1,0,0,0,0,0,"","",""
7630 Q$(11,6)=STR(100000-D0:"000000")
7635 WRITE (Z[12],KEY=Q$); IF RT_PARM$<>"" THEN CUST$=F$(1,10); CALL "RT2WOC",ERR=7636,X3$,X4$,CUST$,"FSY...","U",Q$
7645 RETURN 
7650 REM "REMOVE OLD INVOICE DATE
7665 CALL "ZZDATE",X3$,"","G10101",F9$,D0,1,0,0,0,0,0,"","",""
7670 Q$=F$(1,10)+F9$+F$(12,10)+F$(11,1)+F$(22,8)+F$(30,1)
7675 Q$(11,6)=STR(100000-D0:"000000")
7680 REMOVE (Z[12],KEY=Q$,DOM=7681); IF RT_PARM$<>"" THEN CUST$=F$(1,10); CALL "RT2WOC",ERR=7681,X3$,X4$,CUST$,"FSY...","D",Q$
7695 RETURN 
8800 REM "Problem in ZZFILES
8810 GOSUB 8850; GOTO 0520
8820 GOSUB 8850; GOTO 4005
8850 REM 
8860 X$="Update "+PGN+" in progress, you may not exit. Contact SW Support for assistance"
8870 CALL "ZZPROM",".4",X3$,0,X$,"","",0
8890 RETURN 
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9190 GOSUB 6600; GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9800 REM 
9830 Y4$="ZMENU"
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 0000
9950 IF NOT(NUL(Y4$)) THEN IF %GUI THEN IF Y4$<>"ZMENU" THEN CALL Y4$ ELSE EXIT ELSE RUN Y4$
9960 IF P1$(239,1)="Y" THEN RUN "AR2DUN" ELSE RUN "AR2DUE"
9999 END 
20000 PROCESS_CONTRACTS:! [SSP-200893]-added routine
20002 ! This routine will process the contract information if a
20004 ! contract was used for an order. It will call the routine
20006 ! to update the Contract record and will call the routine
20008 ! to create the Contract History record.
20010 IF LAST_ORDER$=A$(118,8) THEN RETURN ! only process once - information taken from order header
20012 LAST_ORDER$=A$(118,8)
20020 TMP_CUSTOMER$=A$(6,10) ! Customer Division + Customer Code from FS1
20025 TMP_CONTRACT$=A$(315,20) ! Contract Number from FS1
20030 TMP_CONTRACT_DATE$=A$(335,6) ! Contract Date from FS1
20035 TMP_INVOICE$=DIM(8) ! Invoice Number - set in GET_INVOICE_NUM
20040 TMP_ORDER$=A$(118,8) ! Order Division + Order Number from FS1
20045 TMP_CUST_PO$=A$(28,15) ! Customer PO from FS1
20050 TMP_CUST_NAME$=DIM(35) ! Customer Name - set in GET_CUSTOMER
20055 TMP_CUST_SERVICE_REP$=A$(89,4) ! Customer Service Rep from FS1
20060 TMP_SLS_CODE$=A$(93,4) ! Salesperson Code from FS1
20065 TMP_SLS_NAME$=DIM(35) ! Salesperson Name - set in GET_SALESPERSON
20070 TMP_COMM_CODE$=A$(97,5) ! Comm Code from FS1
20075 TMP_CST_REP_NAME$=DIM(35) ! Customer Service Rep Name - set in GET_SALESPERSON
20100 CALL "UPDAR3;READBYKEY",AR3_LFN,0,TMP_SLS_CODE$,SEG2$,SEG3$,SEG4$,SEG5$,AR3$,AR3{ALL},FOUNDAR3; IF FOUNDAR3 THEN TMP_SLS_NAME$=AR3$(5,35)
20102 CALL "UPDAR3;READBYKEY",AR3_LFN,0,TMP_CUST_SERVICE_REP$,SEG2$,SEG3$,SEG4$,SEG5$,AR3$,AR3{ALL},FOUNDAR3; IF FOUNDAR3 THEN TMP_CST_REP_NAME$=AR3$(5,35)
20115 CALL "UPDAR1;READBYKEY",AR1_LFN,0,TMP_CUSTOMER$,SEG2$,SEG3$,SEG4$,SEG5$,AR1$,AR1{ALL},FOUNDAR1; IF FOUNDAR1 THEN TMP_CUST_NAME$=AR1$(11,35)
20120 GOSUB GET_INVOICE_NUM ! Get the invoice number from ARB
20150 GOSUB FTS_UPDATE ! Update the FTS record
20160 GOSUB FTT_INSERT ! Add the Contract History Record
20170 IF A$(341,20)<>DIM(20) THEN GOSUB FTU_UPDATE; GOSUB FTV_UPDATE ! WO212768, Blanket PO
20195 RETURN 
20200 FTS_UPDATE:! [SSP-200893]-added routine
20202 ! This routine will read the contract record and update the
20204 ! total amount, cost, and sales.
20220 FTS_KEY$=TMP_CUSTOMER$+TMP_CONTRACT$+TMP_CONTRACT_DATE$
20230 CALL "UPDFTS;READBYKEY",FTS_LFN,0,TMP_CUSTOMER$,TMP_CONTRACT$,TMP_CONTRACT_DATE$,SEG4$,SEG5$,FTS$,FTS{ALL},FOUNDFTS
20240 IF FOUNDFTS THEN {
20245 FTS[1]=FTS[1]+TMP_INV_TOTAL
20250 FTS[2]=FTS[2]+TMP_COST
20260 FTS[3]=FTS[3]+TMP_NET_SALES
20265 CALL "UPDFTS;UPDATE",FTS_LFN,FTS$,FTS{ALL},BUSY
20280  }
20290 RETURN 
20400 FTT_INSERT:! [SSP-200893]-added routine
20402 ! This routine will generate a Contract History record based 
20404 ! upon data from the Contract record (FTS) and from the order.
20405 CALL "UPDFTT;CLEAR_FIELDS",FTT$,FTT{ALL}
20420 FTT_KEY$=TMP_CONTRACT$+TMP_CUSTOMER$+TMP_CONTRACT_DATE$+TMP_INVOICE$
20430 FTT$(1,20)=TMP_CONTRACT$ ! Contract Number
20435 FTT$(21,10)=TMP_CUSTOMER$ ! Customer Division + Customer Code
20440 FTT$(31,6)=TMP_CONTRACT_DATE$ ! Contract Date
20445 FTT$(37,8)=TMP_INVOICE$ ! Invoice Number
20450 FTT$(45,8)=TMP_ORDER$ ! Order Division + Order Number
20455 FTT$(53,15)=TMP_CUST_PO$ ! Customer PO
20460 FTT$(68,35)=TMP_CUST_NAME$ ! Customer Name
20465 FTT$(103,4)=TMP_CUST_SERVICE_REP$ ! Customer Service Rep
20470 FTT$(107,4)=TMP_SLS_CODE$ ! Salesperson Code
20475 FTT$(111,35)=TMP_SLS_NAME$ ! Salesperson Name
20480 FTT$(146,5)=TMP_COMM_CODE$ ! Comm Code
20482 FTT$(151,35)=TMP_CST_REP_NAME$ ! Customer Service Rep Name
20485 FTT$(186,465)=DIM(465) ! Unused
20490 FTT[0]=TMP_INV_TOTAL
20500 FTT[1]=TMP_COST ! Total Invoice Cost
20505 FTT[2]=TMP_NET_SALES
20510 FTT[3]=FTS[0] ! contract AMT
20515 FTT[4]=FTS[1]
20520 FTT[5]=FTS[2]
20525 FTT[6]=0 ! Unused
20530 FTT[7]=0 ! Unused
20535 FTT[8]=0 ! Unused
20540 FTT[9]=0 ! Unused
20550 FTT[10]=0 ! Unused
20650 CALL "UPDFTT;UPDATE",FTT_LFN,FTT$,FTT{ALL},BUSY
20695 RETURN 
21400 GET_INVOICE_NUM:! [SSP-200893]-added routine
21401 DIM ARB[30]
21402 ! This routine will retrieve the invoice number from the
21403 TMP_NET_SALES=0,TMP_INV_TOTAL=0,TMP_COST=0
21404 ! ARB file, if it exists.
21420 TMP_KEY$=TMP_CUSTOMER$+TMP_ORDER$+DIM(8)
21430 READ (ARB_LFN,KNO=1,KEY=TMP_KEY$,DOM=*NEXT,END=*RETURN)IOL=0440
21440 ARB_KEY$=KEY(ARB_LFN,END=*RETURN)
21450 IF TMP_KEY$(1,18)=ARB_KEY$(1,18) THEN {
21460 READ (ARB_LFN)IOL=0440
21470 TMP_INVOICE$=ARB$(7,8)
21480 TMP_NET_SALES=ARB[1],TMP_INV_TOTAL=ARB[9],TMP_COST=ARB[11]
21490  }
21492 READ (ARB_LFN,KNO=0,END=*NEXT) ! SSP#268215
21595 RETURN 
21599 ! 
21600 FTU_UPDATE:! WO212768, update blanket PO file
21610 FTU_KEY$=TMP_CUSTOMER$+A$(341,26) ! Customer, blanket po, blanket po date
21615 DIM FTU[8]; EXTRACT (Z[26],KEY=FTU_KEY$,DOM=*RETURN)IOL=FTU_IOLIST
21620 FTU[1]+=TMP_INV_TOTAL
21625 FTU[2]+=TMP_COST
21630 FTU[3]+=TMP_NET_SALES
21635 WRITE (Z[26],KEY=FTU_KEY$)IOL=FTU_IOLIST
21695 RETURN 
21699 ! 
21700 FTV_UPDATE:! WO212768, update blanket PO file
21710 DIM FTV$(650),FTV[10]
21715 FTV$(1,20)=A$(341,20) ! Blanket PO
21720 FTV$(21,10)=TMP_CUSTOMER$
21725 FTV$(31,6)=A$(361,6) ! Blanket PO date
21730 FTV$(37,8)=TMP_INVOICE$
21735 FTV_KEY$=FTV$(1,44)
21740 FTV$(45,8)=TMP_ORDER$
21745 FTV$(53,15)=TMP_CUST_PO$
21750 FTV$(68,35)=TMP_CUST_NAME$
21755 FTV$(103,4)=TMP_CUST_SERVICE_REP$
21760 FTV$(107,4)=TMP_SLS_CODE$
21765 FTV$(111,35)=TMP_SLS_NAME$
21770 FTV$(146,5)=TMP_COMM_CODE$
21775 FTV$(151,35)=TMP_CST_REP_NAME$
21780 FTV[0]=TMP_INV_TOTAL
21785 FTV[1]=TMP_COST
21790 FTV[2]=TMP_NET_SALES
21795 FTV[3]=FTU[0]
21800 FTV[4]=FTU[1]
21805 FTV[5]=FTU[2]
21890 WRITE (Z[27],KEY=FTV_KEY$)IOL=FTV_IOLIST
21895 RETURN 
21899 ! 
56000 ! "198084-Updating an AR sales journal and getting an error           
56004 REM "200893-Create New Contract number field in order processing        
56006 REM "212768-Add Blanket PO feature to work with the Contract feature.
56007 REM "236607-SJ update is not reducing the committed qty correctly       
56008 REM "249775-Changes to sales tax parameters and tax calculations to     
56009 REM "268215-Program exception in AR2DUE                                  also not updating ASJ
56010 REM "274328-Cost incorrect in releases less than 1000 units             
56011 REM "303386-ICO file does not record the Billed On Invoice number or the
56012 REM "307357-Update FS6 to allow for more line numbers                   
