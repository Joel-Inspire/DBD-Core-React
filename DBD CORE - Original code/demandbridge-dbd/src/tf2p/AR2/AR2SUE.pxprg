0010 REM "A/R GP% Stat Cust SUMMARY by Slsm <AR2SUE>
0035 REM "3.7 - 04/25/94 - 11.09 - jsc
0040 REM "Copyright 1994 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR 
0100 SETERR 9000; SETESC 9300
0110 X0$="AR2SUE",X1$="GP% Cust Summary by Slmn Update"
0120 DIM S$(100),T[30],F[2],H[14],Y[4,13],B[15]
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0290 F9$="ARX"
0300 REM "IOLISTS
0310 IOLIST A$
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15]
0330 IOLIST C$,C[0],C[1]
0340 IOLIST D$,D[0],D[1]
0350 IOLIST E$,E[0],E[1]
0360 IOLIST F$,F[0],F[1],F[2]
0370 IOLIST G$,G[0],G[1]
0380 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8],H[9],H[10],H[11],H[12],H[13],H[14]
0381 IOLIST H$
0390 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14]
0400 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12],J[13],J[14],J[15],J[16],J[17],J[18],J[19],J[20]
0410 IOLIST K9$,K[0],K[1],K[2],K[3],K[4],K[5],K[6],K[7],K[8],K[9],K[10],K[11],K[12],K[13],K[14],K[15],K[16],K[17],K[18],K[19],K[20]
0500 REM "FILES
0505 Z=NUM(X3$(60,3)); DIM Z[Z]
0510 Z$="01O ZZP...  02O AR1...  "
0515 Z$=Z$+"13O ZZPARM  "
0520 GOSUB 8850; ON Z0 GOTO 0521,9900
0530 READ (Z[1],KEY=X3$(1,8))*,*,V0$,*,V1$,G0$,W0,W1
0532 READ (Z[13],KEY=X3$(9,3)+"A/R",DOM=9900)P$
0550 READ (Z[13],KEY="STATAR3")G3$
0554 G3$(28,6)="AR9...",G3$(35,6)="AR3..."
0555 Z$="03O "+G3$(35,6)+"  04O "+G3$(28,6)+"  "; GOSUB 8850; ON Z0 GOTO 0556,9900
0585 CALL "ZZDAPP",X3$,"DALL"
0590 CALL "ZZDAPP",X3$,"!AZZPACKZZFLTRAR2UZAZZ2MDZ"
0600 REM "
0620 GOSUB 8600
0695 CALL "ZZPROM","U6",X3$,0,U9$,"","",0
0730 DIM A$(250),A[1]
0900 REM 
1000 REM "Read next customer stat record
1020 K$=KEY(Z[4],END=5000); READ (Z[4])
1100 REM "Read customer master record
1120 READ (Z[2],KEY=K$(1,10),DOM=1000)IOL=0320
1200 REM "UNPACK STAT RECORD
1205 DIM K[20]
1215 J6$=K$(LEN(K$)),K$=K$(1,LEN(K$)-1)
1218 F8$=G3$; F1=POS(J6$=G3$(49),17); IF F1=0 THEN GOTO 1000 ELSE F1=F1+48
1220 CALL "ZZPACK",X3$,"R",G3$(F1+2,3),"",0,0,K{ALL},Z[4],J6$,K$,F8$
1400 REM "Get key to summary temp file
1410 K9$=B$(278,4)+K$(11,4)+J6$
1420 IF POS("0"=G0$(59,12))>0 THEN IF B[0]<>0 THEN IF B$(282,4)<>"    " THEN K9$(1,4)=B$(282,4)
1500 REM "ACCUMULATE TO FILE
1510 REM DIM J(20); FIND (Z(10),KEY=K9$,DOM=01540) IOL=00400
1515 DIM J[20]; CALL "ZZPACK",X3$,"R",G3$(F1+2,3),"",0,0,J{ALL},Z[10],J6$,K9$(1,LEN(K9$)-1),F8$
1520 FOR X=0 TO 20; K[X]=K[X]+J[X]; NEXT X
1540 REM WRITE (Z(10),KEY=K9$) IOL=00410
1550 CALL "ZZPACK",X3$,"W",G3$(F1+2,3),"",0,0,K{ALL},Z[10],J6$,K9$(1,LEN(K9$)-1),F8$
1800 REM 
1820 PRINT @(30,12),K$,J6$,"  ",K9$
1900 REM 
1990 GOTO 1000
5000 REM "END OF UPDATE
5100 REM "
5200 REM 
5240 PRINT 'CF'
5245 CALL "ZZDAPP",X3$,"!DZZPACKZZFLTRAR2UZAZZ2MDZ"; CALL "ZZDAPP",X3$,"AALL"
5250 REM "RUN OVERLAY
5260 RUN "AR2SUD"
5400 REM 
5450 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 CALL "ZZPROM","U9",X3$,0,"","","",4
6025 CALL "ZZPROM","U8",X3$,0,"+ "+V0$(22,4)+"."+V0$(26,2),"","",7
6030 PRINT V0$(22,4),".",V0$(26,2),
6165 PRINT (0,ERR=6066)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6225 GOSUB 6450
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6490 RETURN 
7000 REM "CREATE COLUMN CALCULATION FUNCTION FROM D$
7005 E0$="J("+STR(INT(X9/9)+1)+")"
7010 Q0$=STR(C5*5+7110)+"SETERR"+STR(C5*5+7111)+";"+E0$+"=0,"+E0$+"=",Q9$="*"+STR(C5),C5=C5+1
7015 FOR X=1 TO LEN(Q8$); IF Q8$(X,1)="{" THEN Q0$=Q0$+"J(" ELSE IF Q8$(X,1)="}" THEN Q0$=Q0$+")" ELSE Q0$=Q0$+Q8$(X,1)
7020 NEXT X
7030 EXECUTE Q0$
7040 EXECUTE STR(C5*5+7106)+"SETERR9000;IFC5>=0RETURN"
7095 RETURN 
7100 REM "Calculations: Program code changes varying on Column Setings
7105 R0=0; SETERR 7195; ON C5+1 GOTO 7110,7110,7115,7195
7110 SETERR 7111; J[3]=0,J[3]=J[1]-J[2]
7111 SETERR 9000; IF C5>=0 THEN RETURN 
7115 SETERR 7116; J[6]=0,J[6]=J[4]-J[5]
7116 SETERR 9000; IF C5>=0 THEN RETURN 
7295 C5=-1; SETERR 9000; RETURN 
8000 REM "CALCULATED DATA TYPE
8005 F8$=" +-/*()}.0123456789",F8=POS("0"=F8$)-1,C3$=C3$+B$(1,11),Q$=FNS$(B$(64,65)),Q8$=""
8010 Q0=0,Q0$="",Q1$=""
8015 IF Q$="" THEN GOTO 8045 ELSE X$=Q$(1,1),Q$=Q$(2); IF X$="{" THEN GOTO 8300
8018 IF Q0=1 THEN IF POS(X$=F8$(1,F8))>0 THEN Q1$=Q0$; GOSUB 8100 ELSE Q0$=Q0$+X$
8020 IF Q0=0 THEN IF POS(X$=F8$)=0 THEN Q0=1,Q0$=Q0$+X$ ELSE Q8$=Q8$+X$
8025 IF X$="{" THEN GOSUB 8300
8040 GOTO 8015
8050 IF Q0=1 THEN Q1$=Q0$; GOSUB 8100
8060 REM "SET THIS COLUMN
8080 C2$=C2$+C3$(LEN(C3$)-10,11)
8085 GOSUB 7000
8090 RETURN 
8100 REM "GOT DATA NAME
8110 Q1$=F9$+Q1$+S$(1,8-LEN(Q0$))
8115 P=POS(Q1$=C6$,11); IF P>0 THEN P=1+INT(P/11); GOTO 8180
8120 REM "DATA ELEMENT NOT IN C6$
8130 GOSUB 8200; GOTO 8115
8180 Q8$=Q8$+"{"+STR(P)+"}"
8190 Q0$="",Q0=0,Q1$=""
8195 RETURN 
8200 REM "ADD DATA ELEMENT TO C6$
8210 Q=LEN(C6$)-10
8215 IF C6$(Q,1)<>" " THEN Q=Q-11; GOTO 8215
8220 FIND (Z[2],KEY=Q1$)IOL=0320
8230 IF B$(42,1)<>"F" THEN C6$(Q,11)=Q1$,C2$=C2$+Q1$; GOTO 8290
8240 REM "FORMULA!
8250 Q$=X$+Q$,X$="("+FNS$(B$(64,65))+")",Q$=X$+Q$
8260 EXITTO 8261
8261 EXITTO 8010
8295 RETURN 
8300 REM "TOTAL INVOLVED IN CALCULATION
8305 Q=POS("}"=Q$); Q1$=Q$(1,Q-1),Q$=Q$(Q+1)
8310 Q1$=Q1$+S$(1,16-LEN(Q1$)),Q=POS(Q1$=C5$,16)
8315 IF Q=0 THEN C5$=C5$+Q1$; GOTO 8310 ELSE Q=INT(Q/16)+1,Q8$=Q8$+"T("+STR(Q)+")"
8390 GOTO 8010
8400 REM "Calculate column sort key and if value > minimum
8401 REM "F0 is returned, =1 ok =-1 don't write out
8404 F0=1; DIM K1$(12)
8405 IF W0=0 THEN GOTO 8490
8407 GOSUB 8500; REM "Set C9 to the amount of column W0
8410 IF W1<>0 THEN IF C9<W1 THEN F0=-1; GOTO 8490
8420 N1$=".5E+12"
8430 K1$=STR(NUM(N1$)-C9*100:"000000000000")
8490 RETURN 
8500 REM "Get the proper amount of the column C9
8501 REM "If it is a % column, we'll have to calculate it
8502 REM "We also have to skip the % columns, as they are not in J()
8505 REM " If W0=3,6,or 9 then % column, we will translate & calculate ,then we're done.
8510 IF MOD(W0,3)<>0 THEN GOTO 8530
8515 C8=W0/3*2+(-1); REM "Sales for that %
8520 IF J[C8]=0 THEN C9=0 ELSE C9=J[C8+1]*100/J[C8]
8525 GOTO 8545
8529 REM "Translate column nubmber and get proper J() element
8530 IF W0=1 OR W0=2 THEN C8=W0 ELSE IF W0=4 OR W0=5 THEN C8=W0-1 ELSE C8=W0-2
8535 C9=J[C8]
8545 RETURN 
8600 REM "Define TMP Sort File, set J9$ to name
8610 J9$="[384]{1}Cust Stat Summary by Slsmn"
8620 CALL "ZZ2SRT",X3$,X4$,Z[13],Z[4],16,J9$,Z,"YY"; IF Z=2 THEN GOTO 9905
8625 Z$="10O "+J9$
8635 GOSUB 8850; ON Z0 GOTO 8636,9900
8645 RETURN 
8700 REM "RUN THROUGH MASKING
8701 ESCAPE 
8705 ESCAPE 
8850 REM "OPEN FILES
8860 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
8890 RETURN 
8910 DEF FNS$(Z$)=Z$(1,POS("  "=Z$+"  ")-1)
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,1
9045 REM 
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOSUB 6600; GOTO 9900
9260 EXITTO 8190
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9900 REM "END PROGRAM
9901 ESCAPE 
9905 CALL "ZZDAPP",X3$,"!DZZPACKZZFLTRAR2UZAZZ2MDZ"; CALL "ZZDAPP",X3$,"AALL"
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 BEGIN ; SETESC 9350
9950 RUN "ZMENU"
9999 END 
