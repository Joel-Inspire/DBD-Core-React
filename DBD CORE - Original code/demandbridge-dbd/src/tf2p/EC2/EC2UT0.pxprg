0010 REM "<EC2UT0> Electronic Commerce Bulk Load Utility
0020 SETESC 9300; SETERR 9000
0035 REM "4.1 - 09/15/98 - 10.92 - kmc - SSP# 098699
0040 REM "Copyright 1997 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="EC2UT0",X1$="Electronic Commerce Bulk Load Utility"
0120 DIM Z0$(80,"-")
0135 C9=-1,V9=-2
0175 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0290 K9$="",K9=LEN(K9$)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$(1,LEN(A$))
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O EC0... 04O EC5... 06O ZZPARM  "; REM "Reserve 3 for later use
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0525 REM "Build string of records to do, TYPE$ is array of 4 character Export types, FILE$ is name of primary file to process, HIGH_KEY$ is high order part of the key, LINE_NUM is the line number it was on during the last display screen
0526 REM "ECO$ is "" if EC0 record not found (not valid type), or is EC0 info, RECORD_COUNT is the number of records in that file, to be used later in the bar graph; REM"WE WILL GO BY 10'S SO WE CAN ADD EXTRA FILES TO PROCESS IF NEEDED
0527 NUM_TYPES=250; DIM TYPE$[NUM_TYPES],FILE$[NUM_TYPES],HIGH_KEY$[NUM_TYPES],LINE_NUM[NUM_TYPES],EC0$[NUM_TYPES],RECORD_COUNT[NUM_TYPES],USE_EC5$[NUM_TYPES]
0531 TYPE$[1]="",FILE$[1]="",HIGH_KEY$[1]=""; REM "Reserve for disposition code
0532 TYPE$[20]="SHIP",FILE$[20]="FMP...",HIGH_KEY$[20]="S",USE_EC5$[20]="N"
0533 TYPE$[30]="MANU",FILE$[30]="EC3...",HIGH_KEY$[30]="",USE_EC5$[20]="N"
0534 TYPE$[40]="PROD",FILE$[40]="FM1...",HIGH_KEY$[40]="",USE_EC5$[40]="Y"; TYPE$[41]="PROD",FILE$[41]="IC0...",HIGH_KEY$[41]="",USE_EC5$[41]="N"
0535 TYPE$[50]="PRDR",FILE$[50]="FM1...",HIGH_KEY$[50]="",USE_EC5$[50]="Y"; TYPE$[51]="PRDR",FILE$[51]="IC0...",HIGH_KEY$[51]="",USE_EC5$[51]="N"
0536 TYPE$[60]="CUST",FILE$[60]="AR1...",HIGH_KEY$[60]="",USE_EC5$[60]="Y"; TYPE$[61]="CUST",FILE$[61]="FM0...",HIGH_KEY$[61]="C",USE_EC5$[61]="Y"
0537 TYPE$[70]="IACX",FILE$[70]="AR1...",HIGH_KEY$[70]="",USE_EC5$[70]="Y"
0538 TYPE$[80]="VENR",FILE$[80]="EC4...",HIGH_KEY$[80]="",USE_EC5$[80]="N"
0539 TYPE$[90]="ITEM",FILE$[90]="FM1...",HIGH_KEY$[90]="",USE_EC5$[90]="Y"; TYPE$[91]="ITEM",FILE$[91]="IC0...",HIGH_KEY$[91]="",USE_EC5$[91]="N"
0540 TYPE$[100]="VITM",FILE$[100]="FM1...",HIGH_KEY$[100]="",USE_EC5$[100]="Y"; TYPE$[101]="VITM",FILE$[101]="IC0...",HIGH_KEY$[101]="",USE_EC5$[101]="N"
0541 TYPE$[110]="CUCR",FILE$[110]="FM1...",HIGH_KEY$[110]="",USE_EC5$[110]="Y"
0570 FOR INDEX=1 TO NUM_TYPES
0572 IF TYPE$[INDEX]="" THEN GOTO 0585 ELSE FIND (Z[1],KEY=TYPE$[INDEX],DOM=0574)EC0$; EC0$[INDEX]=EC0$; GOTO 0575
0574 TYPE$[INDEX]=""; REM "if ec0 record missing, type is invalid,so clear it
0575 REM "Special types processing
0576 IF INDEX=61 THEN EC0$[61](5,30)="Customer Ship-to Information"
0577 IF INDEX=40 OR INDEX=50 OR INDEX=90 THEN EC0$[INDEX](5,30)=STP(EC0$[INDEX](5,30),1)+" Custom" ELSE IF INDEX=41 OR INDEX=51 OR INDEX=91 THEN EC0$[INDEX](5,30)=STP(EC0$[INDEX](5,30),1)+" Inventory"
0585 NEXT INDEX
0600 REM "
0620 GOSUB 6000
1000 REM "
1010 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1035 DIM A$(FN%NEA("TYPE$",1),"Y")
1040 IF V9<>-1 THEN GOSUB 6900
1045 A$(1,0+K9)=K9$+A1$
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1500
1200 REM "
1215 IF C0<0 THEN GOTO 9900
1500 REM "
1505 Z9=-1
1510 A1$=K9$
1520 REM READ (Z[1],KEY=A1$,DOM=01600) IOL=00310
1525 Z9=0
1590 GOTO 1700
1600 REM "
1610 GOTO 1500
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630,6975
1630 GOTO 9900
1660 IF V9>=0 THEN GOSUB 6200
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1820 CALL "ZZPROM","0",X3$,Z,"","","",X0; ON Z GOTO 7000,9900,1850
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 EXTRACT (Z[1],KEY=A1$,DOM=1870)IOL=0310
1865 C9=1
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2035 IF X0*6+11<LEN(V9$) THEN IF V9$(X0*6+11,1)="2" THEN GOTO 2020
2040 IF X0+1>NUM_TYPES THEN GOTO 1800
2045 IF TYPE$[X0]="" THEN GOTO 2020
2100 REM "Input Y/N answer
2105 INDEX=X0,LINE=LINE_NUM[X0]
2110 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,67,LINE,INDEX,1,C0,"","{3"+X$,"","EC2UT000","","",""
2140 GOTO 2020
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6010 PRINT @(8,3),"Type",@(16,3),"Description",@(50,3),"Export on?",@(65,3),"Load?",@(0,4),Z0$,
6014 LINE_NUM=5
6015 FOR INDEX=1 TO NUM_TYPES
6020 IF TYPE$[INDEX]<>"" THEN PRINT @(8,LINE_NUM),TYPE$[INDEX],@(16,LINE_NUM),EC0$[INDEX](5,30),@(55,LINE_NUM),EC0$[INDEX](35,1),; LINE_NUM=LINE_NUM+1
6025 NEXT INDEX
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 LINE_NUM=5
6220 FOR INDEX=1 TO NUM_TYPES
6225 IF TYPE$[INDEX]<>"" THEN PRINT @(67,LINE_NUM),A$(INDEX,1),; LINE_NUM[INDEX]=LINE_NUM,LINE_NUM=LINE_NUM+1
6230 NEXT INDEX
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6490 RETURN 
6500 REM "DELETE
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6690 RETURN 
6800 REM "NEXT ENTRY IN FILE
6810 A1$=KEY(Z[1],END=1140)
6820 A$(1,LEN(A1$))=A1$
6825 IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 1140
6830 GOSUB 6600
6835 GOSUB 6450
6890 Z9=0; GOTO 1515
6900 REM "GET DEFAULTS
6930 RETURN 
6950 REM "WRITE DEFAULT
6970 REM "ENTRY DEFAULTS
7000 REM "Load count of records to do for each type marked yes, then process each valid type marked yes, then update count.
7005 GOSUB 8100; GOSUB 8150
7010 FOR INDEX=1 TO NUM_TYPES
7015 IF TYPE$[INDEX]="" OR A$(INDEX,1)<>"Y" THEN GOTO 7085
7017 RECORDS_IN_THIS_FILE=0; DESC$=PAD(TYPE$[INDEX]+"-"+STP(EC0$[INDEX](5,30),1),35,2," "); PRINT @(0,21),'CL',@(17,21),DESC$,
7019 Z$="03C   03O "+FILE$[INDEX]+" "
7020 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 7021,7080
7025 HIGH_KEY$=HIGH_KEY$[INDEX],TYPE$=TYPE$[INDEX]
7030 IF USE_EC5$[INDEX]<>"Y" THEN GOSUB 7100; GOTO 7070; REM "if reading from file, go ahead and process file and goto to 7070 when done
7035 READ (Z[4],KEY="",DOM=7036); REM "Position EC5 for reading
7039 REM "Read records from EC5$, set high_key$ based on high_key for type and add customer number to it. customer number is first part of key for all files so far, except for FM0 where it follows the "C"
7040 READ (Z[4],END=7070)EC5$; HIGH_KEY$=HIGH_KEY$[INDEX]+EC5$(12,10); GOSUB 7100; GOTO 7040
7069 REM "Done with this file, adjust DONE count of records done, show bar & continue
7070 RECORDS_IN_THIS_FILE=0,DONE=DONE+RECORD_COUNT[INDEX]; GOSUB 8150
7085 NEXT INDEX
7090 DONE=T,RECORDS_IN_THIS_FILE=0; GOSUB 8150
7091 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
7095 GOTO 9900
7100 REM "Given HIGH_KEY$, and file open on Z[3], and TYPE$, process records into file
7105 EXTRACT (Z[3],KEY=HIGH_KEY$,DOM=7106); REM "Extract instead of read in case high_key$ is the complete key, we don't want to move the file pointer
7110 KEY_3$=KEY(Z[3],END=7140); READ (Z[3]); IF HIGH_KEY$<>"" THEN IF KEY_3$(1,LEN(HIGH_KEY$))<>HIGH_KEY$ THEN GOTO 7140
7115 RECORDS_IN_THIS_FILE=RECORDS_IN_THIS_FILE+1; IF MOD(DONE+RECORDS_IN_THIS_FILE,T0)=1 THEN GOSUB 8150
7120 CALL "EC2EXP",X3$,X4$,EC_PARM$,EC_FILE,TYPE$+"",KEY_3$
7135 GOTO 7110
7145 RETURN 
8100 REM "For each export type to process get the number of records in the file. We may not process all the records if the high order part of the key is set, so we will adjust the total done for each type to "USE UP" the records we did'nt have to look at.
8104 T=0,T1=0,DONE=0,RECORDS_IN_THIS_FILE=0
8105 FOR INDEX=1 TO NUM_TYPES
8106 IF TYPE$[INDEX]="" OR A$(INDEX,1)<>"Y" THEN GOTO 8114
8108 Z$="03C   03O "+FILE$[INDEX]+" "
8109 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 8110,8114
8110 TMP$=FN%XFD$(Z[3],10,ERR=8114); RECORD_COUNT[INDEX]=DEC($00$+TMP$),T=T+DEC($00$+TMP$)
8114 NEXT INDEX
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",20,10,50,T1,T,DONE+RECORDS_IN_THIS_FILE
8195 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
