0010 REM "EC Export Product Descriptions <EC2PRDR>
0020 SETESC 9300; SETERR 9000
0035 REM "4.1 - 09/10/98 - 18.11 - kmc - SSP# 098699
0040 REM "Copyright 1997 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0080 REM "Export SHIP type info
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC0$,EC1$,OPTIONS$,Z{ALL},RET$
0091 REM "EC PROG Serial number = 5
0092 EC_SERIAL_NUM=5
0093 CURR_DIR$=LWD
0100 SETERR 9000
0110 X0$="EC2PROD",X1$="Export Product Descriptions"
0150 FIELD_SEP$=$09$; FIELD_SEP$=ATH(STP(EC_PARM$(95,10),1),ERR=0151)
0160 LINE_SEP$=$0D0A$; LINE_SEP$=ATH(STP(EC_PARM$(105,10),1),ERR=0161)
0500 REM "Open files, IF FILES array is uninitialized or Z[0] <> EC_SERIAL_NUM for this program (close files then reopen, after redim of array)
0505 IF FN%NEA("Z",1)=0 THEN GOTO 0515 ELSE IF Z[0]<>EC_SERIAL_NUM THEN GOTO 0510 ELSE GOTO 0560
0510 FOR TMP=1 TO FN%NEA("FILES",1); IF Z[TMP]<>0 THEN CLOSE (Z[TMP]) END_IF ; NEXT TMP; REM "Close all open files in the FILES array
0515 DIM Z[NUM(X3$(60,3))]; Z[0]=EC_SERIAL_NUM; REM "Dim array and set the serial number
0520 FILE_NAME$="FM1",INDEX=2; GOSUB 9750
0521 FILE_NAME$="IC0",INDEX=3; GOSUB 9750
0522 FILE_NAME$="FS0",INDEX=4; GOSUB 9750
0523 FILE_NAME$="IC2",INDEX=5; GOSUB 9750
0529 REM "Open or Create and open output file in correct DIRectory
0530 Z[1]=UNT; IF Z[1]=14 THEN OPEN (14)FID(0); GOTO 0530; REM "Skip slot 14
0532 CWDIR STP(EC_PARM$(55,40),1)
0534 OPEN LOCK (Z[1],OPT="TEXT",ERR=0535)STP(EC0$(36,30),1); GOTO 0550
0536 SERIAL STP(EC0$(36,30),1),10,0
0538 OPEN LOCK (Z[1],OPT="TEXT")STP(EC0$(36,30),1)
0540 TMP$=FN%XFD$(Z[1],0); IF DEC(TMP$(38,4))>0 THEN READ (Z[1],IND=DEC(TMP$(38,4))-1,ERR=0541)
0550 CWDIR CURR_DIR$
1000 REM "Prepare data to write out here and put into OUT$
1005 FM1_FOUND=0,IC0_FOUND=0; DIM FM1$(200),IC0$(112)
1010 FIND (Z[2],KEY=EC1$(5),DOM=1011)FM1$; FM1_FOUND=1; GOTO 1020
1011 FIND (Z[3],KEY=EC1$(5),DOM=1012)IC0$; IC0_FOUND=1; GOTO 1020
1012 REM "Didn't find record!! flag error
1013 RET$="Missing data for key "+EC1$(5); GOTO 7500
1020 IF FM1_FOUND THEN CALL "ZZDISP","AX",FM1$(1,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$; IF LEN(CUST_CODE$)<10 THEN PROD_KEY$=CUST_CODE$+"-"+FM1$(11,10) ELSE PROD_KEY$=FM1$(1,20) END_IF ; MAN_CODE$=FM1$(1,20),PROD_DESC$=STP(FM1$(42,40),1) ELSE PROD_KEY$=IC0$(11,10),MAN_CODE$=IC0$(1,20),PROD_DESC$=STP(IC0$(21,40),1)
1021 GOSUB 8000; REM "Build descriptions
1030 REM "Put out 10 character item/item code to search on
1031 OUT$="PRDR"+FIELD_SEP$+PROD_KEY$+FIELD_SEP$+"1"+FIELD_SEP$+STP(MAN_CODE$(11),1)
1035 IF OUT$<>"" THEN WRITE RECORD (Z[1])OUT$+LINE_SEP$
1040 REM "Put out 40 character description
1041 OUT$="PRDR"+FIELD_SEP$+PROD_KEY$+FIELD_SEP$+"2"+FIELD_SEP$+PROD_DESC$
1045 IF OUT$<>"" THEN WRITE RECORD (Z[1])OUT$+LINE_SEP$
1050 REM "Put out formatted left-right, top bottom, plys
1051 OUT$="PRDR"+FIELD_SEP$+PROD_KEY$+FIELD_SEP$+"3"+FIELD_SEP$+H9$; REM "h9$ set in 8000
1055 IF OUT$<>"" THEN WRITE RECORD (Z[1])OUT$+LINE_SEP$
1060 REM "Put out rev date & function code if either found and FM1
1061 IF FM1_FOUND=0 OR STP(FM1$(167,18),3," ")="" THEN GOTO 1070 ELSE OUT$="PRDR"+FIELD_SEP$+PROD_KEY$+FIELD_SEP$+"4",FIELD$=""
1062 IF STP(FM1$(167,6),3," ")="" THEN GOTO 1063 ELSE FIELD$="Rev date: "+STP(FM1$(167,6),1)+"   "; REM "rev date
1063 IF STP(FM1$(173,12),3," ")="" THEN GOTO 1064 ELSE FIELD$=FIELD$+"Function: "+STP(FM1$(173,12),1)
1064 IF STP(FIELD$,3," ")="" OR FIELD$="" THEN GOTO 1065 ELSE OUT$=OUT$+FIELD_SEP$+FIELD$; WRITE RECORD (Z[1])OUT$+LINE_SEP$
1070 FIND (Z[4],KEY=PROD_KEY$,DOM=1080)FS0$
1075 OUT$="PRDR"+FIELD_SEP$+PROD_KEY$+FIELD_SEP$+"5"+FIELD_SEP$+STP(FS0$(21,60),1)
1076 IF OUT$<>"" THEN WRITE RECORD (Z[1])OUT$+LINE_SEP$
1080 REM "Put out CIC if applicable
1082 IF FM1_FOUND=0 OR STP(FM1$(350,20),3," ")="" THEN GOTO 1090 ELSE OUT$="PRDR"+FIELD_SEP$+PROD_KEY$+FIELD_SEP$+"6"+FIELD_SEP$+STP(FM1$(350,20),1); WRITE RECORD (Z[1])OUT$+LINE_SEP$
1090 GOSUB 7600; REM "Do suppler item numbers if needed
1095 GOTO 9900
7500 REM "Exit as if an error happened
7501 REM "Expecting that RET$ is already set before here
7505 EXIT 69
7600 REM "Check IC2 for supplier item info, if supplier item# not blank then put it out
7605 IF FM1_FOUND THEN IC2_KEY$=FM1$(1,20) ELSE IC2_KEY$=IC0$(1,20)
7606 READ (Z[5],KEY=IC2_KEY$,DOM=7607)
7610 K$=KEY(Z[5],END=7640); IF K$(1,20)<>IC2_KEY$ THEN GOTO 7640 ELSE READ (Z[5],KEY=K$)IC2$
7620 IF STP(IC2$(35,20),3," ")="" THEN GOTO 7635 ELSE OUT$="PRDR"+FIELD_SEP$+PROD_KEY$+FIELD_SEP$+"7"+FIELD_SEP$+STP(IC2$(35,20),1); WRITE RECORD (Z[1])OUT$+LINE_SEP$
7635 GOTO 7610
7645 RETURN 
8000 REM "Build desc from elements
8005 IF FM1_FOUND THEN LEFT_RT$=FM1$(24,8),TOP_BOT$=FM1$(32,8),PLYS$=FM1$(40,2) ELSE LEFT_RT$=IC0$(64,8),TOP_BOT$=IC0$(72,8),PLYS$=IC0$(80,2)
8010 H9$=STP(LEFT_RT$,1); IF H9$<>"" THEN H9$=H9$+QUO; IF POS(" "<>TOP_BOT$)<>0 THEN H9$=H9$+"x"
8020 H9$=H9$+STP(TOP_BOT$,1); IF H9$<>"" THEN IF POS(" "<>TOP_BOT$)<>0 THEN H9$=H9$+QUO+" " ELSE H9$=H9$+" "
8030 IF NUM(PLYS$)<>0 THEN H9$=H9$+PLYS$+" Ply "
8050 RETURN 
9000 REM "Error
9005 CWDIR CURR_DIR$
9010 RET$="ERROR # "+STR(ERR)+" @ LINE "+STR(TCB(5))+" IN "+X0$
9020 EXIT ERR
9750 REM "FILES - Use instead of ZZFLES
9755 Z[INDEX]=UNT; IF Z[INDEX]=14 THEN OPEN (14)FID(0); GOTO 9755; REM "Skip slot 14
9760 IF LEN(FILE_NAME$)<>3 THEN GOTO 9780
9765 OPEN (Z[INDEX],ERR=9780)FILE_NAME$+X3$(9,3); GOTO 9781
9780 OPEN (Z[INDEX])FILE_NAME$
9790 RETURN 
9900 REM "END PROGRAM
9905 CWDIR CURR_DIR$
9930 SETERR 9940; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
