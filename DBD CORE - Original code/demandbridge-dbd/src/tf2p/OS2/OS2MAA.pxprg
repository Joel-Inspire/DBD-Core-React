0010 REM "Pricing Priorities <OS2MAA>
0015 REM "Prog Type: I -3.0A
0020 SETESC 9300; SETERR 9000
0030 REM "Produced under licence from Basic Ideas, Inc; Norcross, Ga.
0035 REM "5.7 - 01/13/11 - 10.198055 - tma - SSP# 243443
0037 REM "243443-Office Products Price Plan Priorities panel the allow zero  
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "Q0$ - customer    Q1$ - form
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$; CALLED$="Y"
0100 SETERR 9000; SETESC 9300
0110 X0$="OS2MAA",X1$="Price Plan Priorities",K9$="",K9=0
0130 K0=10,K1=1
0135 C9=-1,V9=-2
0150 DIM BLANK$(30," ")
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0299 CALL "ZZ2PRP","OS",RESULT$,DATE$; IF RESULT$<>"Y" THEN CALL "ZZPROM",".4",X3$,Z,"ACCESS DENIED! The Office Supply Interface System is not an installed module.","","",0; RUN "ZMENU"
0300 REM "IOLISTS
0310 IOLIST A$(1)
0350 IOLIST EC6$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X OS6...  03O AR1...  04O OS5...  13O ZZPARM  "
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
0680 GOSUB 6000
1000 REM "
1010 Y8=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1030 DIM EC6$(900)
1035 DIM A$(183),ECS$(1000)
1040 IF V9<>-1 THEN GOSUB 6900
1045 A$(1,LEN(A1$))=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1250,1500
1200 REM "type
1202 IF Q0$<>"" THEN A$(1,10)=Q0$; GOTO 1240
1205 IF LEN(A1$)>0 THEN A$(1,10)=A1$(1,10); GOTO 1220
1210 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,15,3,1,1,C0,"A/R","{1"+X$,K9$,"OS2MAA00","OS6","",""; IF C0=6 THEN GOSUB 6400; C0=1
1212 IF INT(ABS(C0))=3 THEN C0=-ABS(C0); READ (Z[1],KEY=A$(1,10),DOM=1213)
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1220 IF POS(A$(1,1)="CIG")=0 THEN GOTO 1200
1240 GOSUB 6450; GOTO 1120
1250 REM "code 1
1251 TYPE$="AUZ",LOOKUP$="AR1",ACCT$="A/R",STARTING_PT$="",LENGTH=10
1255 IF Q1$<>"" THEN A$(11,10)=Q1$; GOTO 1262
1260 CALL "ZZENTR",TYPE$,A{ALL},A$,X4$,X3$,15,3,1,LENGTH,C0,ACCT$,"{2"+X$,STARTING_PT$,"OS2MAA02",LOOKUP$,"",""; IF C0=6 THEN GOSUB 6400; C0=1
1261 IF ABS(C0)=2 AND LEN(A1$)>0 THEN A1$=A1$(1,0)
1262 READ (Z[1],KEY=A$(1,LENGTH),DOM=1263)
1265 IF INT(ABS(C0))=3 THEN GOTO 6800 ELSE IF ABS(C0)=4 THEN GOTO 9900
1270 DIM AR1$(500); FIND (Z[3],KEY=A$(1,10),DOM=1250)AR1$
1290 GOSUB 6450; GOTO 1120
1300 REM "second 10 char
1301 IF A$(1,1)="I" THEN PRINT @(4,5),'SB',"Item code:", ELSE PRINT @(0,5),'CL',
1303 REM "IF A$(1,1)="C" THEN A$(12,10)=DIM(10); GOTO 1330
1304 IF A$(1,1)="G" THEN GOTO 1330
1305 IF A$(1,1)="I" THEN TYPE$="SUX",ACCT$="I/C",LOOKUP$="IC0",STARTING_POINT$=A$(2,10) ELSE TYPE$="SUX",ACCT$="",LOOKUP$="EDC",STARTING_POINT$=A$(1,11)
1310 CALL "ZZENTR",TYPE$,A{ALL},A$,X4$,X3$,15,4,12,10,C0,ACCT$,"{2"+X$,STARTING_POINT$,"OS2MAA02",LOOKUP$,"",""; IF C0=6 THEN GOSUB 6400; C0=1
1311 IF ABS(C0)=2 AND LEN(A1$)>0 THEN A1$=A1$(1,0)
1320 READ (Z[1],KEY=A$(1,21),DOM=1321)
1322 IF INT(ABS(C0))=3 THEN GOTO 6800 ELSE IF ABS(C0)=4 THEN GOTO 9900
1330 GOSUB 6450; GOTO 1120
1500 REM "
1505 Z9=-1,C9=0,A2$="",A3$="",A4$="",A5$=""
1510 A1$=A$(1,10)
1520 READ (Z[1],ERR=7200,KEY=A1$,DOM=1600)IOL=0310
1525 Z9=0,V7$=""; GOSUB 5800
1590 GOTO 1700
1600 REM "
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 IF Q0$="" THEN GOTO 1000 ELSE GOTO 9900
1660 IF V9>=0 THEN GOSUB 6200
1680 GOSUB 7450
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1810 IF V9=-2 THEN IF ABS(C0)=4 THEN PRINT 'CF',; GOTO 6980 ELSE GOTO 2000
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700,1821
1825 GOTO 6700
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 GOSUB 7400
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 SETERR 9000; X$="",Q$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF INT(C0)=3 THEN GOSUB 7300 ELSE IF C0>3 OR X0<0 THEN GOTO 1800
2035 IF V9<>-2 THEN IF 6*(X0+K1)+5<LEN(V9$) THEN IF V9$((X0+K1)*6+5,1)="3" THEN GOTO 2020 ELSE IF V9$((X0+K1)*6+5,1)="2" AND C0<>2 THEN GOTO 2020
2038 IF X0<LEN(V7$) THEN V7$(X0+1,1)=""
2040 ON X0 GOTO 2700,2800,2100,2150,2200,2250,2300,2350,2400,2450,2500,2550,2600,2650,2850,2900,2950,3000,3050,3100,3150,3200,3250,3300,3350,3400,3450,1800
2075 PRINT @(14,8),OS5$(7,25),
2100 REM "PRIORITY  1
2110 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,6,22,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2130 OS5$=""; IF A$(22,6)<>DIM(6) THEN READ (Z[4],KEY=A$(22,6),DOM=2100)OS5$ ELSE PRINT @(14,6),BLANK$(1,25),; GOTO 2140
2135 PRINT @(14,6),OS5$(7,25),
2140 GOTO 2020
2150 REM "PRIORITY  2 
2160 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,7,28,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2170 OS5$=""; IF A$(28,6)<>DIM(6) THEN READ (Z[4],KEY=A$(28,6),DOM=2150)OS5$ ELSE PRINT @(14,7),BLANK$(1,25); GOTO 2190
2175 PRINT @(14,7),OS5$(7,25),
2190 GOTO 2020
2200 REM "PRIORITY 3
2210 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,8,34,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM 222704
2230 OS5$=""; IF A$(34,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(34,6),DOM=2200)OS5$ ELSE PRINT @(14,8),BLANK$(1,25); GOTO 2240
2235 PRINT @(14,8),OS5$(7,25),
2240 GOTO 2020
2250 REM "PRIORITY  4
2260 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,9,40,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2270 OS5$=""; IF A$(40,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(40,6),DOM=2250)OS5$ ELSE PRINT @(14,9),BLANK$(1,25); GOTO 2290
2275 PRINT @(14,9),OS5$(7,25),
2290 GOTO 2020
2300 REM "PRIORITY  5
2310 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,10,46,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2330 OS5$=""; IF A$(46,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(46,6),DOM=2300)OS5$ ELSE PRINT @(14,10),BLANK$(1,25); GOTO 2340
2335 PRINT @(14,10),OS5$(7,25),
2340 GOTO 2020
2350 REM "PRIORITY  6
2360 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,11,52,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2370 OS5$=""; IF A$(52,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(52,6),DOM=2350)OS5$ ELSE PRINT @(14,11),BLANK$(1,25); GOTO 2390
2375 PRINT @(14,11),OS5$(7,25),
2390 GOTO 2020
2400 REM "PRIORITY  7
2410 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,12,58,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2430 OS5$=""; IF A$(58,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(58,6),DOM=2410)OS5$ ELSE PRINT @(14,12),BLANK$(1,25); GOTO 2490
2435 PRINT @(14,12),OS5$(7,25),
2440 GOTO 2020
2450 REM "PRIORITY  8
2460 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,13,64,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2470 OS5$=""; IF A$(64,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(64,6),DOM=2450)OS5$ ELSE PRINT @(14,13),BLANK$(1,25); GOTO 2490
2475 PRINT @(14,13),OS5$(7,25),
2490 GOTO 2020
2500 REM "PRIORITY  9
2510 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,14,70,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2530 OS5$=""; IF A$(70,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(70,6),DOM=2510)OS5$ ELSE PRINT @(14,14),BLANK$(1,25); GOTO 2590
2535 PRINT @(14,14),OS5$(7,25),
2540 GOTO 2020
2550 REM "PRIORITY  10
2560 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,15,76,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2570 OS5$=""; IF A$(76,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(76,6),DOM=2550)OS5$ ELSE PRINT @(14,15),BLANK$(1,25); GOTO 2590
2575 PRINT @(14,15),OS5$(7,25),
2590 GOTO 2020
2600 REM "PRIORITY 11
2610 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,16,82,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2630 OS5$=""; IF A$(82,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(82,6),DOM=2610)OS5$ ELSE PRINT @(14,16),BLANK$(1,25); GOTO 2640
2635 PRINT @(14,16),OS5$(7,25),
2640 GOTO 2020
2650 REM "PRIORITY  12
2660 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,17,88,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2670 OS5$=""; IF A$(88,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(88,6),DOM=2650)OS5$ ELSE PRINT @(14,17),BLANK$(1,25); GOTO 2690
2675 PRINT @(14,17),OS5$(7,25),
2690 GOTO 2020
2700 REM "ENTER CUSTOMER PRICING TYPE
2705 X$="L=Lst,B=Bst/Fl/no Mat,C=Cst Bst/no Fl,P=Cst Bst/Fl,O=Lst Ord,V=Bst/ALL"; REM ssp 220569
2710 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,15,4,11,1,C0,"","{3"+X$,"LBCPOV","OS2MAA04","","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704!SSP#229451
2715 PRINT @(30,4),'CL',
2717 IF POS(A$(11,1)="LBCPOV")=0 THEN GOTO 2710 ! SSP#229451
2720 IF A$(11,1)="L" THEN PRINT @(30,4),"List" ELSE IF A$(11,1)="B" THEN PRINT @(30,4),"Best of All prices including Flyers - no Matrix" ELSE IF A$(11,1)="C" THEN PRINT @(30,4),"Customer's Best Price with no Flyers" ELSE IF A$(11,1)="P" THEN PRINT @(30,4),"Customer's Best including Flyers" ELSE IF A$(11,1)="O" THEN PRINT @(30,4),"First in Customer List" ELSE IF A$(11,1)="V" THEN PRINT @(30,4),"Very Best Price - Including Matrix and Flyers", ELSE PRINT @(30,4),'CL',; REM ssp 220569
2740 GOTO 2020
2750 REM " Consider Flyer Prices
2755 X$="Y to allow Flyer Pricing, N to DisAllow Flyer Pricing"
2760 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,6,6+V0,12+K9,1,C0,"","{3"+X$,"","OS2MPA10","","",""
2770 REM "
2790 GOTO 2020
2800 REM " Allow Zero price to be created??
2805 X$="Must use O type pricing for zero prices"
2810 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,20,5+V0,12+K9,1,C0,"","{3"+X$,"","OS2M PA10","","",""
2840 GOTO 2020
2850 REM "PRIORITY 13
2860 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,18,94,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2870 OS5$=""; IF A$(94,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(94,6),DOM=2850)OS5$ ELSE PRINT @(14,18),BLANK$(1,25); GOTO 2690
2875 PRINT @(14,18),OS5$(7,25),
2890 GOTO 2020
2900 REM "PRIORITY 14
2910 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,19,100,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2930 OS5$=""; IF A$(100,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(100,6),DOM=2910)OS5$ ELSE PRINT @(14,19),BLANK$(1,25); GOTO 2640
2935 PRINT @(14,19),OS5$(7,25),
2940 GOTO 2020
2950 REM "PRIORITY 15
2960 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,20,106,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
2970 OS5$=""; IF A$(106,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(106,6),DOM=2950)OS5$ ELSE PRINT @(14,20),BLANK$(1,25); GOTO 2690
2975 PRINT @(14,20),OS5$(7,25),
2990 GOTO 2020
3000 REM "PRIORITY 16
3010 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,6,21,112,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3030 OS5$=""; IF A$(112,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(112,6),DOM=3000)OS5$ ELSE PRINT @(14,21),BLANK$(1,25); GOTO 2640
3035 PRINT @(14,21),OS5$(7,25),
3040 GOTO 2020
3050 REM "PRIORITY 17
3060 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,46,6,118,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3070 OS5$=""; IF A$(118,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(118,6),DOM=3050)OS5$ ELSE PRINT @(54,6),BLANK$(1,25); GOTO 2690
3080 PRINT @(54,6),OS5$(7,25),
3090 GOTO 2020
3100 REM "PRIORITY 18
3110 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,46,7,124,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3120 OS5$=""; IF A$(124,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(124,6),DOM=3110)OS5$ ELSE PRINT @(54,7),BLANK$(1,25); GOTO 2640
3130 PRINT @(54,7),OS5$(7,25),
3140 GOTO 2020
3150 REM "PRIORITY 19
3160 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,46,8,130,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3170 OS5$=""; IF A$(130,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(130,6),DOM=3150)OS5$ ELSE PRINT @(54,8),BLANK$(1,25); GOTO 2690
3180 PRINT @(54,8),OS5$(7,25),
3190 GOTO 2020
3200 REM "PRIORITY 20
3210 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,46,9,136,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3220 OS5$=""; IF A$(136,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(136,6),DOM=3200)OS5$ ELSE PRINT @(54,9),BLANK$(1,25); GOTO 2640
3230 PRINT @(54,9),OS5$(7,25),
3240 GOTO 2020
3250 REM "PRIORITY 21
3260 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,46,10,142,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3270 OS5$=""; IF A$(142,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(142,6),DOM=3250)OS5$ ELSE PRINT @(54,10),BLANK$(1,25); GOTO 2690
3280 PRINT @(54,10),OS5$(7,25),
3290 GOTO 2020
3300 REM "PRIORITY 22
3310 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,46,11,148,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3320 OS5$=""; IF A$(148,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(148,6),DOM=3310)OS5$ ELSE PRINT @(54,11),BLANK$(1,25); GOTO 2640
3330 PRINT @(54,11),OS5$(7,25),
3340 GOTO 2020
3350 REM "PRIORITY 23
3360 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,46,12,154,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3370 OS5$=""; IF A$(154,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(154,6),DOM=3350)OS5$ ELSE PRINT @(54,12),BLANK$(1,25); GOTO 2690
3380 PRINT @(54,12),OS5$(7,25),
3390 GOTO 2020
3400 REM "PRIORITY 24
3410 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,46,13,160,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3420 OS5$=""; IF A$(160,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(160,6),DOM=3400)OS5$ ELSE PRINT @(54,13),BLANK$(1,25); GOTO 2640
3430 PRINT @(54,13),OS5$(7,25),
3440 GOTO 2020
3450 REM "PRIORITY 25
3460 CALL "ZZENTR","SZXUX",A{ALL},A$,X4$,X3$,46,14,166,6,C0,"","{3"+X$,"","OS2MAA04","OS5","",""; IF C0=6 THEN GOSUB 6400; C0=1; REM SSP 222704
3470 OS5$=""; IF A$(166,6)<>DIM(6) THEN FIND (Z[4],KEY=A$(166,6),DOM=3450)OS5$ ELSE PRINT @(54,14),BLANK$(1,25); GOTO 2640
3480 PRINT @(54,14),OS5$(7,25),
3490 GOTO 2020
5800 REM "Alt sort keys
5890 RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(4,3+V0),"Customer :",
6065 PRINT @(0,4+V0),"Pricing Type :",
6070 REM "PRINT @(2,5),"Priority",; REM @(0,5+V0),Z0$,
6071 PRINT @(0,5),"Allow Zero Prices?:",
6074 FOR L=1 TO 16; PRINT @(2,5+L),L:"##.",; NEXT L
6075 FOR L=1 TO 9; PRINT @(42,5+L),L+16:"##.",; NEXT L
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6217 PRINT @(15,4),A$(11,1)
6218 PRINT @(20,5),A$(12,1),; REM " ALLOW ZERO PRICE
6219 IF A$(11,1)="L" THEN PRINT @(30,4),"List" ELSE IF A$(11,1)="B" THEN PRINT @(30,4),"Best of All prices including Flyers - no Matrix" ELSE IF A$(11,1)="C" THEN PRINT @(30,4),"Customer's Best Price with no Flyers" ELSE IF A$(11,1)="P" THEN PRINT @(30,4),"Customer's Best including Flyers" ELSE IF A$(11,1)="O" THEN PRINT @(30,4),"First in Customer List" ELSE IF A$(11,1)="V" THEN PRINT @(30,4),"Very Best Price - Including Matrix and Flyers", ELSE PRINT @(30,4),'CL',; REM ssp 220569
6220 PRINT @(6,6),A$(22,6),@(6,7),A$(28,6),@(6,8),A$(34,6),@(6,9),A$(40,6),@(6,10),A$(46,6),@(6,11),A$(52,6),@(6,12),A$(58,6),@(6,13),A$(64,6),@(6,14),A$(70,6),@(6,15),A$(76,6),@(6,16),A$(82,6),@(6,17),A$(88,6),@(6,18),A$(94,6),@(6,19),A$(100,6),@(6,20),A$(106,6),@(6,21),A$(112,6),
6221 PRINT @(46,6),A$(118,6),@(46,7),A$(124,6),@(46,8),A$(130,6),@(46,9),A$(136,6),@(46,10),A$(142,6),@(46,11),A$(148,6),@(46,12),A$(154,6),@(46,13),A$(160,6),@(46,14),A$(166,6),; REM ",@(46,15),A$(76,6),@(15,16),A$(82,6),@(15,17),A$(88,6),@(15,18),A$(94,6),@(15,19),A$(100,6),@(15,20),A$(106,6),@(15,21),A$(112,6),
6222 FOR W=0 TO 24
6223 OS5$=""; IF W<16 THEN CLN=14,LNN=W ELSE CLN=54,LNN=W-16
6224 IF A$(22+W*6,6)<>DIM(6) THEN READ (Z[4],KEY=A$(22+W*6,6),DOM=*NEXT)OS5$; REM ELSE GOTO 6228
6225 IF LEN(OS5$)=0 THEN PRINT @(CLN,LNN+6),BLANK$(1,25),; GOTO 6228 ELSE PRINT @(CLN,LNN+6),OS5$(7,25),
6228 NEXT W
6390 RETURN 
6400 REM "WHOLE SCREEN
6402 IF C9=0 THEN IF ABS(C0)=17 THEN GOTO 6970
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6456 DIM AR1$(300); READ (Z[3],KEY=A$(1,10),DOM=6457)AR1$
6460 CALL "ZZDISP","A",A$(1,10),"A/R",X3$,"","",15,3,X4$; PRINT @(30,3),'CL',AR1$(11,35),
6490 RETURN 
6500 REM "DELETE
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6690 RETURN 
6700 REM "ADD ENTRY
6705 IF Z9=0 THEN GOTO 6790 ELSE IF V7$>"" THEN X0=POS(" "<>V7$); IF X0>0 THEN X0=X0-1; GOTO 2038
6710 WRITE (Z[1],KEY=A1$)IOL=0310
6712 IF Q0$<>"" THEN GOTO 9900
6790 C9=0; IF Z=6 OR K1=0 THEN GOTO 9900 ELSE IF Z<4 THEN GOTO 1000 ELSE C0=-(3.1+(Z-4)/10); GOTO 6800
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 IF A1$="" THEN GOTO 6800 ELSE IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM "PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 PRINT 'RB',; CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6865 GOTO 1100
6870 GOTO 6895
6890 GOTO 1515
6895 IF A1$="" THEN GOTO 6860 ELSE PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=6896)
6898 ON S9 GOTO 6810,1100
6900 REM "GET DEFAULTS
6902 V9$="1503  1504  1906  1109  1110  1111  1112  1113  "
6910 IF V9>=0 THEN READ (Z[13],IND=V9)V9$,IOL=0310; GOTO 6930 ELSE V9=-1
6920 EXTRACT (Z[13],KEY=X0$+"DFLT",DOM=6921)V9$,IOL=0310; V9=IND(Z[13]); READ (Z[13])
6930 RETURN 
6940 V9=-1; REMOVE (Z[13],KEY=X0$+"DFLT",DOM=1000); GOTO 1000
6950 REM "WRITE DEFAULT
6955 WRITE (Z[13],KEY=X0$+"DFLT")V9$,IOL=0310
6960 GOSUB 6920; GOTO 1630
6970 REM "ENTER DEFAULT VALUES AND SETTINGS
6975 A$(1,K0+K9)=""; GOSUB 6200; V9=-2,Q$=""; GOTO 2000
6980 FOR X=1+K1*6 TO LEN(V9$) STEP 6
6982 PRINT @(NUM(V9$(X,2)),NUM(V9$(X+2,2))),; IF V9=-2 THEN PRINT V9$(X+4,1), ELSE READ RECORD (0,SIZ=1)Q$; IF POS(Q$="1234+-"+$0D$)=0 THEN PRINT 'RB'; GOTO 6982
6990 IF Q$="+" THEN EXITTO 6950 ELSE IF Q$="-" THEN GOTO 6940 ELSE IF Q$<>$0D$ THEN V9$(X+4,LEN(Q$))=Q$
6992 NEXT X
6995 V9=0; GOTO 6980
7200 REM "Forced read
7210 IF ERR<>0 THEN GOTO 9000
7220 CALL "ZZREAD",Z[1],A1$,A$,A{ALL},S8; ON S8 GOTO 7221,1630
7230 GOSUB 6200
7240 CALL "ZZPROM","E0",X3$,0,"","","",0; GOTO 7290
7250 CALL "ZZPROM","E0A",X3$,0,"","","",0; GOTO 7290
7290 GOTO 1630
7300 REM 
7310 ON FPT(C0)*10 GOTO 7390,7325,7330,7390
7325 IF V8$="" THEN X0=X0+4; GOTO 7390 ELSE X0=NUM(V8$(POS(STR(X0:"00")<=V8$,2),2)); GOTO 7390
7330 IF V8$="" THEN X0=X0-6; GOTO 7335 ELSE X0=POS(STR(X0-1:"00")<=V8$,2)-2; IF X0<0 THEN X0=0; GOTO 7390 ELSE X0=NUM(V8$(X0,2)); GOTO 7390
7335 IF X0<0 THEN X0=0; GOTO 7390
7390 IF X0>0 THEN X0=X0-0
7395 C0=3; RETURN 
7400 REM "EXTRACT
7410 EXTRACT (Z[1],ERR=7200,KEY=A1$,DOM=7440)IOL=0310
7420 C9=1,Z9=1; GOSUB 5800
7440 RETURN 
7450 REM "EXTRACT NEW ENTRY
7460 WRITE (Z[1],KEY=A1$,DOM=7250)IOL=0310; GOTO 7400
7490 RETURN 
7600 REM "display warehouse descriptions
7602 IF STP(A$(WSTART,4),2)<>"" THEN GOTO 7610
7604 WHSE_OK$="Y"; IF WSTART=126 THEN GOTO 7620
7605 FOR WII=(WSTART-82)/4 TO 10; A$(WII*4+82,4)=A$((WII+1)*4+82,4),A$((WII+1)*4+82,4)=DIM(4); NEXT WII
7606 GOTO 7620
7610 DIM FM0D$(500); WHSE_OK$="N"; FIND (Z[2],KEY="D"+DIM(10)+A$(WSTART,4),DOM=7611)FM0D$; WHSE_OK$="Y"
7620 GOSUB 6200
7640 RETURN 
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(3,2)+"/"+Z9$(5,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 Y8=2
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
20000 ! 100 - Initialization
20010 INIT:
20020 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
20030 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
20040 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
20050 GOSUB SETUP_KEYS
20060 _FILE_NAME$="OS6"+%C$
20070 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
20080 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
20085 DIM Z(5); Z[4]=HFN; OPEN (Z[4],ERR=OPEN_ERR)"OS5"+%C$ ! ssp#229496
20090 RETURN 
20100 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
20110 CMD_STR$="END"
20120 RETURN 
20130 ! 300 - Set up the message library
20140 SETUP_LIBRARY:
20150 _SV_MSGLIB$=MSG(*)
20160 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
20170 MESSAGE_LIB "*tfmsglib."+_LANG$,ERR=*NEXT; GOTO 20190
20180 MESSAGE_LIB "*tfmsglib.en"
20190 SET_MSG:GOSUB SETUP_MESSAGES
20200 RETURN 
20210 ! 400 - Set up key information
20220 SETUP_KEYS:
20230 _NUMKEYS=1
20240 DIM _KEYS$[1:1]; _KEYS$[1]="CUSTOMER$"
20250 _KEY1=1
20260 RETURN 
20270 ! 500 - Main panel post_display logic
20280 MAIN_POST_DISPLAY:
20290 MESSAGE_LIB _SV_MSGLIB$
20300 GOSUB CLEAR_REC
20310 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
20320 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
20330 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
20340 RETURN 
20350 ! 900 - Wrapup
20360 WRAPUP:
20370 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
20380 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
20390 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
20395 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
20400 MESSAGE_LIB _SV_MSGLIB$
20410 SET_PARAM 'KR'=_SV_KR
20415 GOSUB CLEAR_FIELDS ! SSP#229496 - clear global variables
20420 RETURN 
20430 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
20440 FIND_REC:
20445 QRY_VAL$=STP(QRY_VAL$,3,"-"); IF STP(QRY_VAL$)<>"" AND ID$="CUSTOMER" THEN CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; QRY_VAL$=CUSTOMER$ ! SSP#233214
20450 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
20460 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
20470 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
20480 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$
20490 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
20500 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
20510 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
20520 GOSUB PROCESS_READ
20530 GOSUB NUM_TO_STR
20540 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=PRICE_TYPE.CTL ! SSP#233214
20550 EXIT 
20560 ! 1200 - New RECORD check
20570 NEW_RECORD:
20572 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",ANSWER$ ! SSP#233214
20575 IF ANSWER$="NO" THEN GOTO CLEAR_REC ! SSP#233214
20580 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
20590 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
20595 IF PRICE_TYPE$="" THEN PRICE_TYPE$="L" ! SSP#229451 If blank default to list on a new record
20596 IF STP(ALLOW_ZERO_PRICE$,3)="" THEN ALLOW_ZERO_PRICE$="N" ! SSP#243443
20600 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=PRICE_TYPE.CTL ! SSP#233214
20610 RETURN 
20620 ! 1400 - Add RECORD
20630 WRITE_REC:
20640 GOSUB STR_TO_NUM
20650 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
20660 GOSUB REVIEW_WRITE
20670 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
20680 CHANGE_FLG=0; GOSUB CLEAR_REC; REFRESH_FLG=1 ! SSP#233214
20690 NEXT_ID=_FIRST_KEY
20700 EXIT 
20710 ! 1600 - Delete
20720 DELETE_REC:
20730 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
20740 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
20750 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
20760 IF _X$<>"YES" THEN RETURN 
20770 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
20780 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
20790 CHANGE_FLG=0
20800 NEXT_ID=_FIRST_KEY
20810 EXIT 
20820 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
20830 ! 1800 - Clear record
20840 CLEAR_REC:
20850 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
20860 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
20870 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
20880 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=CUSTOMER.CTL ! SSP#233214
20890 RETURN 
20900 ! 2000 - Browsing mode
20910 ! - Next
20920 NEXT_REC:
20930 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
20940 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
20950 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
20960 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
20970 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
20980 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
20990 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
21000 ! 2200 - Prior record
21010 PRIOR_REC:
21020 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
21030 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
21040 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
21050 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
21060 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
21070 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
21080 ! 2400 - First record
21090 FIRST_REC:
21100 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
21110 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
21120 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
21130 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
21140 ! 2600 - Last record
21150 LAST_REC:
21160 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
21170 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
21180 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
21190 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
21200 ! 3000 - Subroutines
21210 ! Processing required by READ
21220 PROCESS_READ:
21230 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
21240 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
21250 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
21260 CHANGE_FLG=0,CUSTOMER$=CUST_DIV$+CUST_CODE$ ! SSP#229496
21265 FOR X=0 TO 24; EXECUTE "PRICE_PLAN$=PRIORITY_"+STR(X+1)+"$" ! SSP#229496
21270 DIM OS5$(64); FIND (Z[4],KEY=PRICE_PLAN$,DOM=*NEXT)OS5$ ! SSP#229496
21275 EXECUTE "%PRICE_PLAN_DESC"+STR(X+1)+"$=MID(OS5$,7,30)" ! SSP#229496
21278 NEXT X ! SSP#229496
21280 RETURN 
21290 ! 3200 - Review record for changes before WRITE
21300 REVIEW_WRITE:
21310 _CHG1$="",_CHG2$=""
21320 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
21330 GOSUB DETERMINE_CHGS
21340 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
21350 IF _CHG1$="" THEN GOTO CHK2
21360 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
21370 IF _YESNO$="NO" THEN GOTO *RETURN
21380 IF _CHG2$="" THEN GOTO WRT
21390 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
21400 GOSUB INCORPORATE_CHGS
21410 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
21420 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
21430 GOSUB NUM_TO_STR
21440 REFRESH_FLG=1
21450 RETURN 
21460 WRITE_ERROR:
21470 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
21480 RETURN 
21490 ! 3500 - Display a record
21500 DISP_REC:
21510 GOSUB NUM_TO_STR
21520 REFRESH_FLG=1
21530 RETURN 
21540 ! 3600 - Busy Record display
21550 BUSY_CHK:
21560 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
21570 IF _D$="NO" THEN EXIT 
21580 RETURN 
21590 ! 3790 - See if changes are to be written
21600 CHECK_CHANGES:
21610 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUST_DIV.CTL,_FIRST_FIELD=PRICE_TYPE.CTL
21620 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
21630 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
21640 IF _YESNO$="YES" THEN GOTO WRITE_REC
21650 CHANGE_FLG=0
21660 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
21670 RETURN 
21680 ! 4000 - Get the current key segment number
21690 GET_CURKEY:
21700 FOR _CURKEY=1 TO _NUMKEYS
21710 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
21720 NEXT _CURKEY
21730 RETURN 
21740 ! 9000 - Retrieve messages from the *msglib.xxx library
21750 SETUP_MESSAGES:
21760 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
21770 _MSG_DIRECTORY$=MSG("DIRECTORY")
21780 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
21790 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
21800 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
21810 _MSG_MANDATORY$=MSG("MANDATORY")
21820 _MSG_NEXT$=MSG("NEXT")
21830 _MSG_NON_NUMER$=MSG("NON_NUMER")
21840 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
21850 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
21860 _MSG_PRECEDING$=MSG("PRECEDING")
21870 _MSG_PREFIX$=MSG("PREFIX")
21880 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
21890 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
21900 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
21910 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
21920 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
21930 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
21940 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
21950 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
21960 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
21970 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
21980 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
21990 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
22000 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
22010 _MSG_START_FILE$=MSG("START_FILE")
22020 _MSG_UPDATE$=MSG("UPDATE")
22030 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
22040 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
22050 _MSG_UPD_SAME$=MSG("UPD_SAME")
22060 _MSG_WARNING$=MSG("WARNING")
22070 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
22080 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
22090 RETURN 
30000 ! 10000 - Convert numeric values to string
30010 NUM_TO_STR:
30020 RETURN 
31000 ! 11000 - Convert numeric strings to number
31010 STR_TO_NUM:
31020 RETURN 
31030 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
31040 NEXT_ID=_X
31050 EXIT 
32000 ! 12000 - Check if the required fields have data
32010 CHECK_REQD_FLDS:
32020 _W_FLG=1
32030 RETURN 
33000 ! 13000 - Clear the record fields
33010 CLEAR_FIELDS:
33020 IF _CLR_FLG$="R" THEN CUST_DIV$=""
33030 IF _CLR_FLG$="R" THEN CUST_CODE$=""
33035 IF _CLR_FLG$="R" THEN CUSTOMER$="" ! SSP#233214
33038 IF _CLR_FLG$="R" THEN %CUST_NAME$="" ! SSP#233214
33040 PRICE_TYPE$=""
33045 PRICE_TYPE.CTL'CURRENTITEM=0; REM SSP 222704
33050 ALLOW_ZERO_PRICE$=""
33060 OS6_UNUSED_1$=""
33070 PRIORITY_1$=""
33080 PRIORITY_2$=""
33090 PRIORITY_3$=""
33100 PRIORITY_4$=""
33110 PRIORITY_5$=""
33120 PRIORITY_6$=""
33130 PRIORITY_7$=""
33140 PRIORITY_8$=""
33150 PRIORITY_9$=""
33160 PRIORITY_10$=""
33170 PRIORITY_11$=""
33180 PRIORITY_12$=""
33181 PRIORITY_13$=""
33182 PRIORITY_14$=""
33183 PRIORITY_15$=""
33184 PRIORITY_16$=""
33185 PRIORITY_17$=""
33186 PRIORITY_18$=""
33188 PRIORITY_19$=""
33190 OS6_UNUSED_2$=""
33192 PRIORITY_20$=""
33193 PRIORITY_21$=""
33194 PRIORITY_22$=""
33195 PRIORITY_23$=""
33196 PRIORITY_24$=""
33198 PRIORITY_25$=""
33200 GOSUB NUM_TO_STR
33210 REFRESH_FLG=1
33215 %PRICE_PLAN_DESC1$="",%PRICE_PLAN_DESC2$="",%PRICE_PLAN_DESC3$="",%PRICE_PLAN_DESC4$="",%PRICE_PLAN_DESC5$=""; REM SSP 222704
33216 %PRICE_PLAN_DESC6$="",%PRICE_PLAN_DESC7$="",%PRICE_PLAN_DESC8$="",%PRICE_PLAN_DESC9$="",%PRICE_PLAN_DESC10$=""; REM SSP 222704
33217 %PRICE_PLAN_DESC11$="",%PRICE_PLAN_DESC12$="",%PRICE_PLAN_DESC13$="",%PRICE_PLAN_DESC14$="",%PRICE_PLAN_DESC15$=""; REM SSP 222704
33218 %PRICE_PLAN_DESC16$="",%PRICE_PLAN_DESC17$="",%PRICE_PLAN_DESC18$="",%PRICE_PLAN_DESC19$="",%PRICE_PLAN_DESC20$=""; REM SSP 222704
33219 %PRICE_PLAN_DESC21$="",%PRICE_PLAN_DESC22$="",%PRICE_PLAN_DESC23$="",%PRICE_PLAN_DESC24$="",%PRICE_PLAN_DESC25$=""; REM SSP 222704
33220 RETURN 
34000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
34010 ENABLE_GROUPS:
34020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
34030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=CUST_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
34040 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
34050 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
34060 RETURN 
35000 ! 15000 - Determine the changes that have been made before writing
35010 DETERMINE_CHGS:
35020 DIM _CHG_VAR$(32,"N")
35030 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
35040 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
35050 IF _ORIG.PRICE_TYPE$=_CUR.PRICE_TYPE$ OR PRICE_TYPE$=_CUR.PRICE_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.PRICE_TYPE$=PRICE_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("PRICE_TYPE")+" = "+_CUR.PRICE_TYPE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRICE_TYPE")+" = "+_CUR.PRICE_TYPE$
35060 IF _ORIG.ALLOW_ZERO_PRICE$=_CUR.ALLOW_ZERO_PRICE$ OR ALLOW_ZERO_PRICE$=_CUR.ALLOW_ZERO_PRICE$ THEN GOTO *NEXT ELSE IF _ORIG.ALLOW_ZERO_PRICE$=ALLOW_ZERO_PRICE$ THEN _CHG2$=_CHG2$+SEP+MSG("ALLOW_Z_P")+" = "+_CUR.ALLOW_ZERO_PRICE$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALLOW_Z_P")+" = "+_CUR.ALLOW_ZERO_PRICE$
35070 IF _ORIG.OS6_UNUSED_1$=_CUR.OS6_UNUSED_1$ OR OS6_UNUSED_1$=_CUR.OS6_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.OS6_UNUSED_1$=OS6_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.OS6_UNUSED_1$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.OS6_UNUSED_1$
35080 IF _ORIG.PRIORITY_1$=_CUR.PRIORITY_1$ OR PRIORITY_1$=_CUR.PRIORITY_1$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_1$=PRIORITY_1$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_1$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_1$
35090 IF _ORIG.PRIORITY_2$=_CUR.PRIORITY_2$ OR PRIORITY_2$=_CUR.PRIORITY_2$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_2$=PRIORITY_2$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_2$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_2$
35100 IF _ORIG.PRIORITY_3$=_CUR.PRIORITY_3$ OR PRIORITY_3$=_CUR.PRIORITY_3$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_3$=PRIORITY_3$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_3$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_3$
35110 IF _ORIG.PRIORITY_4$=_CUR.PRIORITY_4$ OR PRIORITY_4$=_CUR.PRIORITY_4$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_4$=PRIORITY_4$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_4$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_4$
35120 IF _ORIG.PRIORITY_5$=_CUR.PRIORITY_5$ OR PRIORITY_5$=_CUR.PRIORITY_5$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_5$=PRIORITY_5$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_5$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_5$
35130 IF _ORIG.PRIORITY_6$=_CUR.PRIORITY_6$ OR PRIORITY_6$=_CUR.PRIORITY_6$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_6$=PRIORITY_6$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_6$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_6$
35140 IF _ORIG.PRIORITY_7$=_CUR.PRIORITY_7$ OR PRIORITY_7$=_CUR.PRIORITY_7$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_7$=PRIORITY_7$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_7$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_7$
35150 IF _ORIG.PRIORITY_8$=_CUR.PRIORITY_8$ OR PRIORITY_8$=_CUR.PRIORITY_8$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_8$=PRIORITY_8$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_8$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_8$
35160 IF _ORIG.PRIORITY_9$=_CUR.PRIORITY_9$ OR PRIORITY_9$=_CUR.PRIORITY_9$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_9$=PRIORITY_9$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_9$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_9$
35170 IF _ORIG.PRIORITY_10$=_CUR.PRIORITY_10$ OR PRIORITY_10$=_CUR.PRIORITY_10$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_10$=PRIORITY_10$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_10$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_10$
35180 IF _ORIG.PRIORITY_11$=_CUR.PRIORITY_11$ OR PRIORITY_11$=_CUR.PRIORITY_11$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_11$=PRIORITY_11$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_11$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_11$
35190 IF _ORIG.PRIORITY_12$=_CUR.PRIORITY_12$ OR PRIORITY_12$=_CUR.PRIORITY_12$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_12$=PRIORITY_12$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_12$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_12$
35191 IF _ORIG.PRIORITY_13$=_CUR.PRIORITY_13$ OR PRIORITY_13$=_CUR.PRIORITY_13$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_13$=PRIORITY_13$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_13$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_13$
35192 IF _ORIG.PRIORITY_14$=_CUR.PRIORITY_14$ OR PRIORITY_14$=_CUR.PRIORITY_14$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_14$=PRIORITY_14$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_14$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_14$
35193 IF _ORIG.PRIORITY_15$=_CUR.PRIORITY_15$ OR PRIORITY_15$=_CUR.PRIORITY_15$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_15$=PRIORITY_15$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_15$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_15$
35194 IF _ORIG.PRIORITY_16$=_CUR.PRIORITY_16$ OR PRIORITY_16$=_CUR.PRIORITY_16$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_16$=PRIORITY_16$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_16$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_16$
35195 IF _ORIG.PRIORITY_17$=_CUR.PRIORITY_17$ OR PRIORITY_17$=_CUR.PRIORITY_17$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_17$=PRIORITY_17$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_17$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_17$
35196 IF _ORIG.PRIORITY_18$=_CUR.PRIORITY_18$ OR PRIORITY_18$=_CUR.PRIORITY_18$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_18$=PRIORITY_18$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_18$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_18$
35197 IF _ORIG.PRIORITY_19$=_CUR.PRIORITY_19$ OR PRIORITY_19$=_CUR.PRIORITY_19$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_19$=PRIORITY_19$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_19$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_19$
35198 IF _ORIG.PRIORITY_20$=_CUR.PRIORITY_20$ OR PRIORITY_20$=_CUR.PRIORITY_20$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_20$=PRIORITY_20$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_20$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_20$
35200 IF _ORIG.OS6_UNUSED_2$=_CUR.OS6_UNUSED_2$ OR OS6_UNUSED_2$=_CUR.OS6_UNUSED_2$ THEN GOTO *NEXT ELSE IF _ORIG.OS6_UNUSED_2$=OS6_UNUSED_2$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.OS6_UNUSED_2$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.OS6_UNUSED_2$
35202 IF _ORIG.PRIORITY_21$=_CUR.PRIORITY_21$ OR PRIORITY_21$=_CUR.PRIORITY_21$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_21$=PRIORITY_21$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_21$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_21$
35203 IF _ORIG.PRIORITY_22$=_CUR.PRIORITY_22$ OR PRIORITY_22$=_CUR.PRIORITY_22$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_22$=PRIORITY_22$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_22$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_22$
35204 IF _ORIG.PRIORITY_23$=_CUR.PRIORITY_23$ OR PRIORITY_23$=_CUR.PRIORITY_23$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_23$=PRIORITY_23$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_23$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_23$
35206 IF _ORIG.PRIORITY_24$=_CUR.PRIORITY_24$ OR PRIORITY_24$=_CUR.PRIORITY_24$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_24$=PRIORITY_24$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_24$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_24$
35208 IF _ORIG.PRIORITY_25$=_CUR.PRIORITY_25$ OR PRIORITY_25$=_CUR.PRIORITY_25$ THEN GOTO *NEXT ELSE IF _ORIG.PRIORITY_25$=PRIORITY_25$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_25$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIORITY")+" = "+_CUR.PRIORITY_25$
35210 RETURN 
36000 ! 16000 - Incorporate changes made by another user into the record
36010 INCORPORATE_CHGS:
36020 IF _CHG_VAR$(1,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
36030 IF _CHG_VAR$(2,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
36040 IF _CHG_VAR$(3,1)="Y" THEN PRICE_TYPE$=_CUR.PRICE_TYPE$
36050 IF _CHG_VAR$(4,1)="Y" THEN ALLOW_ZERO_PRICE$=_CUR.ALLOW_ZERO_PRICE$
36060 IF _CHG_VAR$(5,1)="Y" THEN OS6_UNUSED_1$=_CUR.OS6_UNUSED_1$
36070 IF _CHG_VAR$(6,1)="Y" THEN PRIORITY_1$=_CUR.PRIORITY_1$
36080 IF _CHG_VAR$(7,1)="Y" THEN PRIORITY_2$=_CUR.PRIORITY_2$
36090 IF _CHG_VAR$(8,1)="Y" THEN PRIORITY_3$=_CUR.PRIORITY_3$
36100 IF _CHG_VAR$(9,1)="Y" THEN PRIORITY_4$=_CUR.PRIORITY_4$
36110 IF _CHG_VAR$(10,1)="Y" THEN PRIORITY_5$=_CUR.PRIORITY_5$
36120 IF _CHG_VAR$(11,1)="Y" THEN PRIORITY_6$=_CUR.PRIORITY_6$
36130 IF _CHG_VAR$(12,1)="Y" THEN PRIORITY_7$=_CUR.PRIORITY_7$
36140 IF _CHG_VAR$(13,1)="Y" THEN PRIORITY_8$=_CUR.PRIORITY_8$
36150 IF _CHG_VAR$(14,1)="Y" THEN PRIORITY_9$=_CUR.PRIORITY_9$
36160 IF _CHG_VAR$(15,1)="Y" THEN PRIORITY_10$=_CUR.PRIORITY_10$
36170 IF _CHG_VAR$(16,1)="Y" THEN PRIORITY_11$=_CUR.PRIORITY_11$
36180 IF _CHG_VAR$(17,1)="Y" THEN PRIORITY_12$=_CUR.PRIORITY_12$
36181 IF _CHG_VAR$(18,1)="Y" THEN PRIORITY_13$=_CUR.PRIORITY_13$
36182 IF _CHG_VAR$(19,1)="Y" THEN PRIORITY_14$=_CUR.PRIORITY_14$
36183 IF _CHG_VAR$(20,1)="Y" THEN PRIORITY_15$=_CUR.PRIORITY_15$
36184 IF _CHG_VAR$(21,1)="Y" THEN PRIORITY_16$=_CUR.PRIORITY_16$
36185 IF _CHG_VAR$(23,1)="Y" THEN PRIORITY_17$=_CUR.PRIORITY_17$
36186 IF _CHG_VAR$(24,1)="Y" THEN PRIORITY_18$=_CUR.PRIORITY_18$
36187 IF _CHG_VAR$(25,1)="Y" THEN PRIORITY_19$=_CUR.PRIORITY_19$
36188 IF _CHG_VAR$(26,1)="Y" THEN PRIORITY_20$=_CUR.PRIORITY_20$
36190 IF _CHG_VAR$(22,1)="Y" THEN OS6_UNUSED_2$=_CUR.OS6_UNUSED_2$
36192 IF _CHG_VAR$(27,1)="Y" THEN PRIORITY_21$=_CUR.PRIORITY_21$
36193 IF _CHG_VAR$(28,1)="Y" THEN PRIORITY_22$=_CUR.PRIORITY_22$
36194 IF _CHG_VAR$(29,1)="Y" THEN PRIORITY_23$=_CUR.PRIORITY_23$
36196 IF _CHG_VAR$(30,1)="Y" THEN PRIORITY_24$=_CUR.PRIORITY_24$
36198 IF _CHG_VAR$(31,1)="Y" THEN PRIORITY_25$=_CUR.PRIORITY_25$
36200 RETURN 
37000 SEL_PRICE_PLAN:; REM SSP 222704
37005 EXECUTE "PRICE_PLAN$="+ID$+"$"
37010 PRICE_PLAN$=STR(NUM(PRICE_PLAN$,ERR=*NEXT):"000000"); GOTO 37030; REM SSP 222704
37020 PRICE_PLAN$=PAD(PRICE_PLAN$,6," "); REM SSP 222704
37030 ID'VALUE$=PRICE_PLAN$; REM SSP 222704
37040 READ (Z[4],KEY=PRICE_PLAN$,DOM=NO_REC)OS5$; REM SSP 222704!SSP#229496
37041 PRIORITY$=ID$(POS("_"=ID$)+1) ! SSP#229496
37042 EXECUTE ID$+"$=PRICE_PLAN$,%PRICE_PLAN_DESC"+PRIORITY$+"$=OS5$(7,30)" ! SSP#229496
37050 EXIT ; REM SSP 222704
37060 NO_REC:; REM SSP 222704
37070 MSGBOX "Price Plan Not Found.","Input validation failure","!"; PRICE_PLAN$="",REFRESH_FLG=1,NEXT_ID=ID,CHANGE_FLG=0; REM SSP 222704
37080 EXECUTE ID$+"$="+QUO+QUO
37090 EXIT 
56000 REM "203458-Addition of S.P. Richards to TOPS module                    
56001 REM "220569-Having a pricing issue in TOPS.  
56002 REM "222704-Office Supply inputs for Price Plan differ between gui and    
56003 REM "229451-SP Richards Pricing Plan Priorities Setup allows a blank    
56004 REM "229496-Panel OSGMAA requires correction to field displays          
