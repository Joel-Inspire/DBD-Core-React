0010 REM "Send United Stationer's Reconfirmations- Interlink <OS2C04>
0035 REM "5.5 - 07/17/06 - 10.468055 - lms - SSP# 192922
0037 REM "192922-Modify the United Reconfirmation Program OS2C04 to only     
0040 REM "Copyright 2006 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 SETERR 0055; ENTER Q0$; CALLED$="Y"; GOTO 0090
0055 IF %GUI THEN GOTO 0090
0060 BEGIN 
0090 SETERR 9000
0095 PRECISION 14; T2=TIM; PRECISION 2
0105 SETERR 9000; SETESC 9300
0110 X0$="OS2C04",X1$="United Interlink Send"
0120 DIM A$(0),B$(228),B[27],C$(512),C[9],E[3],S$(40),J$(345),J[12]
0140 Z0$="-###,###.00",Z1$="##,##0",Z2$="###,##0-",M4$="-00000000.00",M4=LEN(M4$),M5$="#####",Z3$="-###,###",Z4$="-####.00",Z5$="-#####.00",Z6$="-###.0",M0$="-###"
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 DEF FNE$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+Z9$(1,2)
0180 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0190 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
0210 T=1,T0=1,T1=1
0220 W3=85,P0=1
0225 REPRINT_HEADER$=""; REM "Used in 8200's to make sure A$(1,1) only gets incremented once per order
0230 DIM T1$(W3,"-"),T2$(W3,"="),T3$(W3,"*"),Y5$(W3),Y6$(W3),W[4]
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,"",-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0260 REM CALL "ZZRPTP",X3$,X0$,X1$,V9$,V0,Q0$,Q1$,Q2$,Q3$,Q4$,Q5$,Q6$
0300 REM "I/O lists
0305 REM "IOLIST FOR FS1 - Sales order header
0310 IOLIST A$
0315 REM "IOLIST FOR FS2 - Sales order detail
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21],B[22],B[23],B[24],B[25],B[26],B[27]
0335 REM "IOLIST FOR AR1 - Customer Masterfile
0340 IOLIST D$
0345 REM "IOLIST FOR PO3- Shipping Information Masterfile
0350 IOLIST E$,E[0],E[1],E[2],E[3]
0355 REM "IOLIST FOR OFFICE SUPPLY PARAMETERS (OS2MPA - KEY = X3$(9,3) + 'OSP'
0360 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9]
0365 REM "IOLIST FOR OS3 - Error Code Description File
0370 IOLIST R1$
0375 REM "IOLIST FOR OS4 - Transmission Error Report File
0380 IOLIST O$
0385 REM "IOLIST FOR SM7 - CIG Plus Gateway Information (SM0)
0390 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12]
0500 REM "Files
0505 DIM Z[NUM(X3$(60,3))]; REM "GOSUB 7400
0509 REM "Don't use 15,16,17, used on 4105
0510 Y$="01O PO6...  02O FS1...  03O FS2...  05O SM7...  06O PO3...  07O FM0...  09O OS2...  10O OS3...  11O OS4...  25O PC3...  26O PC6...  27O OS8...  28O PO1...  29O PO2...  13O ZZPARM  "
0520 GOSUB 9750
0525 READ (Z[13],KEY=X3$(9,3)+"I/C")P8$
0530 DIM G9$(200); READ (Z[7],KEY="D"+S$(1,10)+"0001",DOM=0531)G9$
0535 READ (Z[13],KEY=X3$(9,3)+"F/M")FM_PARM$
0540 READ (Z[13],KEY=X3$(9,3)+"A/R")P9$
0550 READ (Z[13],KEY=X3$(9,3)+"AR1")P5$
0552 READ (Z[13],KEY=X3$(9,3)+"G/B",DOM=0553)GB$; GB$="Y"
1000 REM "GET FIRST 'V' RECORD
1011 REC$=""
1020 READ (Z[1],KEY="V",DOM=1021)
1030 REC$=KEY(Z[1],END=5000)
1035 NEED_CONFIRM$=""
1040 IF REC$(2,6)<>X0$ THEN GOTO 5000
1050 ORD$=REC$(10,9); REM " PURCHASE ORDER NUMBER
1060 READ (Z[1],KEY=REC$)
1070 READ (Z[13],KEY=X3$(9,3)+"OSP")IOL=0360
1074 WILL_CALL$=C$(26,1); REM " SET FROM PARAMETERS - MAY BE CHANGED BY SHIP TO
1075 C[2]=C[2]+1; REM "Increment Transmission number
1076 SHIP_LABEL$=C$(57,1); REM " SET FROM PARAMETERS - MAY BE CHANGED BY SHIP TO
1080 WRITE (Z[13],KEY=X3$(9,3)+"OSP")IOL=0360
1100 REM "Get record"
1110 READ (Z[27],KEY=ORD$,DOM=1111)IOL=0310; REM " READ OS8         
1111 OS8_KEY$=KEY(Z[27],END=1030)
1112 IF OS8_KEY$(1,9)<>ORD$ THEN GOTO 1030
1115 READ (Z[28],KEY=ORD$,DOM=1116)IOL=0310; REM " EXTRACT PO HEADER
1120 READ (Z[27],KEY=OS8_KEY$,DOM=1121)OS8$; REM " READ OS8
1125 REM "RECONFIRM$=OS8$(77,5)
1126 RECONFIRM$=A$(353,5); REM "CONFIRMATION NUMBER FROM PO1 HEADER
1130 IT$=""; REM "CLEAR FOR EACH ORDER 
1150 DAY_FORMAT "YYYY-MM-DD"
1155 DATE$=DAY,D1$=DATE$(1,4)+DATE$(6,2)+DATE$(9,2),Q$=D1$(3)
1160 DAY_FORMAT 
1165 TIME$=DTE(0:"%hz:%mz:%sz")
2100 DEF FN%URLENCODE$(LOCAL DAT$)
2105 LOCAL X,ODAT$
2110 IF LEN(DAT$)=0 THEN RETURN ""
2115 FOR X=1 TO LEN(DAT$)
2120 IF POS(DAT$(X,1)=" 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz$-_.+!*'(),",1)=0 THEN ODAT$+="%"+HTA(DAT$(X,1)) ELSE ODAT$+=DAT$(X,1)
2125 NEXT 
2130 TRANSLATE ODAT$," "+$01$+"+"
2135 RETURN ODAT$
2140 END DEF
3000 REM " BUILD TRANSMISSION HEADER                                        
3004 DIM HEAD$(133)
3005 HEAD$(1,4)="XM02"; REM " RE-CONFIRM REQUEST
3010 HEAD$(5,4)=C$(15,4); REM "COMES FROM THE OFFICE SUPPLY PARAMETERS
3015 HEAD$(9,12)=""; REM " RESERVED FOR FUTURE USE
3020 HEAD$(21,1)="D"; REM " VALUE ALSWAYS 'D' FOR NOW
3025 HEAD$(22,1)="L"; REM " POSITION INDICATOR - 'L' FOR LAST (SEND 1 ORDER AT A TIME
3030 HEAD$(23,10)=DATE$
3035 HEAD$(33,8)=TIME$
3040 HEAD$(41,4)="0001"
3045 HEAD$(45,5)="00084"; REM "DATA LENGTH - MUST GET FOR TOTAL LENGTH OF RECORD
3050 HEAD$(50,6)=STR(C[0]:"000000"); REM " SIGN ON ACCOUNT NUMBER FROM USSCo   
3055 HEAD$(56,3)=""; REM " RESERVED FOR FUTURE USE
3060 HEAD$(59,5)=STR(C[2]:"00000"); REM " INCREMENTED TRANSMISSION NUMBER FROM OFFICE SUPPLY PARAMETER FILE 'OS2MPA' 'OSP' 
3065 HEAD$(64,8)=C$(7,8); REM " ASSIGNED PASSWORD - COMES FROM THE OFFICE SUPPLY PARAMETER FILE 'OSP' 'OS2MPA'
3070 HEAD$(72,8)=""; REM " REQUESTOR ID - NOT USED BY USSCo
3075 HEAD$(80,1)="A"; REM " ALWAYS AN 'A'
3076 HEAD$(81,5)=RECONFIRM$(1,5); REM "CONFIRMATION NUMBER
3077 HEAD$(86,5)=""; REM "FOR BEGINNING OF A RANGE TO CONFIRM
3078 HEAD$(91,5)=""; REM "END OF RANGE
3079 HEAD$(96,38)=""; REM FILLER
3177 WRITE_SEQ$=STR(1:"500")
3180 WRITE (Z[27],KEY=ORD$+WRITE_SEQ$+"6XM02"+DIM(1),DOM=3181)ORD$+WRITE_SEQ$+"6XM02"+DIM(1)+HEAD$+DIM(359); GOTO 4000
3186 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
3187 GOTO 3180
4000 REM "SENT RECORD TO UNITED USING TCP/IP
4001 REM "USE DATA SENT BACK TO FILL WHAT IS GOING TO BE SHIPPED
4002 REM " IF I1>0 THEN THERE ARE LINES TO SEND ELSE GOTO 4090 - LINE COUNTER INCREMENTED AT 1440
4005 S1=LEN(HEAD$+OS$+A1$+IT$+ST$),HEAD$(45,5)=STR(S1-49:"00000")
4010 SEND$=HEAD$+OS$+A1$+IT$+ST$; REM " COMPLETE STRING TO SEND
4015 SEND$=FN%URLENCODE$(SEND$)
4020 URL$=STP(C$(98,120),3," "); REM " SEE 4021
4021 REM "URL$="https://stage-elink2.unitedstationers.com/iLink2/interlinkdirect.asp"
4030 CONTENT$="requesttransmission="+SEND$+"&requesttype=3"
4040 PROXY$=STP(C$(27,30),3," "); REM "10.6.72.18"
4050 URL$=URL$+"?"+CONTENT$,CONTENT$=""
4078 OPTION$="U"; REM " NEED TO INCREASE WAIT TIME TO RECEIVE RESPONSE FROM UNI  TED
4080 CALL "EC3SND",X3$,X4$,URL$,CONTENT$,PROXY$,OPTION$,RETURN$
4081 GOSUB 7000; IF NEED_CONFIRM$="Y" THEN GOTO 1030
4082 %ZZ2CMD_DEBUG=0
4083 IF LEN(RETURN$)=0 THEN GOTO 4980
4084 WRITE_SEQ$=STR(1:"500")
4085 WRITE (Z[27],KEY=ORD$+WRITE_SEQ$+"5RET"+DIM(2),DOM=4086)ORD$+WRITE_SEQ$+"5RET"+DIM(2)+RETURN$(2,3)+DIM(489); GOTO 4090
4086 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
4087 GOTO 4085
4090 RETURN1$=RETURN$; REM "SAVE IN RETURN1$ FOR POTENTIAL FUTURE USE
4100 REM "DETERMINE RESULTS SENT BACK IN RETURN$ FROM USSCo
4120 IF NEED_CONFIRM$="YES" THEN REC2$=REC$; WRITE (Z[1],KEY=REC2$); GOSUB 6100; GOTO 4980
4130 REM "U=POS("&||&"=RETURN$),RETURN$=RETURN$(U+4); REM "U+4= START OF TRANSMISSION HEADER REPLY
4140 GOSUB 5300; REM "TRANSMISSION ERROR IN SENT RECORD
4145 REM "IF CONTINUE$="NO" THEN CONTINUE$=""; GOTO 4980
4150 RETURN$=RETURN$(72),RETURN1$=RETURN$; REM "STRIP OFF HEADER REPLY AND SAVE RETURN$ AS RETURN1$ FOR POSSIBLE FUTURE USE
4160 OSR$=RETURN$(1,143); REM " 'OS' REPLY RECORD
4170 GOSUB 5400; REM " ERROR IN 'OS' RECORD
4175 IF CONTINUE$="NO" THEN GOTO 4980
4180 UON$=OSR$(5,10); REM "UNITED'S ORDER NUMBER 
4190 RETURN$=RETURN$(144)
4200 REM "PROCESS 'A1' RECORD - ADDRESS INFORMATION
4201 REM "IF LEN(RETURN$)<107 THEN GOTO 4990
4205 IF RETURN$(1,2)<>"A1" THEN GOTO 4300
4210 AIR$=RETURN$(1,107); REM " 'A1' RECORD REPLY
4220 REM " CAN SEE NO OTHER USEFUL 'A1' INFO HERE
4230 GOSUB 5500; REM " ERROR IN 'A1' RECORD - ADDRESS INFO RECORD
4290 RETURN$=RETURN$(108); LN1=0; REM " LN1 IS LINE COUNTER
4300 REM "PROCESS 'IT' RECORD - LINE ITEM
4301 IF RETURN$(1,2)<>"IT" THEN GOTO 4385
4310 ITR$=MID(RETURN$,1,275)
4320 LN1=LN1+1; REM " INCREMENT LINE COUNTER
4325 REM "UPDATE SM7 WITH ORDER #, LINE #, QTY, B/O QTY, VENDOR INVOICE NUMBER WILL BE THE UNITED ORDER # (UON$)
4329 GOTO 4370
4330 IF NUM(ITR$(3,2))<51 THEN GOTO 4331 ELSE GOTO 4370
4340 DIM J$(345),J[12]
4350 J$(1,9)=ORD$,J$(10,3)=STR(LN1:"000"),J$(266,10)=ITR$(5,10)
4355 D0$=CHR(NUM(D1$(1,3),ERR=4356)-125)+D1$(4,1)+Q$(3,2)+Q$(5,2)
4360 J$(276,6)=D0$
4362 QT1=NUM(MID(ITR$,153,9))/100,J[0]=QT1
4365 REM "WRITE (Z[5],KEY=J$(1,12)+" "+J$(10,3))IOL=0390
4370 GOSUB 5700; REM " ERROR IN 'IT' RECORD - LINE ITEM RECORD
4380 RETURN$=MID(RETURN$,276)
4385 IF MID(RETURN$,1,2)="LT" THEN GOSUB 5900; RETURN$=RETURN$(108)
4390 IF MID(RETURN$,1,2)="IT" THEN GOTO 4300; REM "PROCESS ANOTHER 'IT' RECORD
4400 REM "PROCESS 'ST' RECORD - STATUS UPDATE
4410 REM LENGTH OF RETURN$ S/B 108
4420 STR$=RETURN$(1,108); RETURN$=RETURN$(109)
4430 GOSUB 5800; REM " ERROR IN 'ST' RECORD - STATUS CHANGE RECORD
4431 REM "IF MID(STR$,3,2)<>"00" THEN GOSUB 5800; REM " ERROR IN 'ST' RECORD - STATUS CHANGE RECORD
4432 IF LEN(RETURN$)<>0 AND RETURN$(1,2)="ST" THEN GOTO 4400 ELSE IF LEN(RETURN$)<>0 AND RETURN$(1,1)="&" THEN GOTO 4081
4470 REM " RETURN$(108,1) S/B STATUS; R-RELEASE, U-UNFINISHED,C-CANCELLED,H-HOLD
4976 REM " IF TRANSMISSION DIDN'T GO - CHANGE KEY TO NEW PROGRAM NAME AND WRITE ELSE REMOVE
4977 IF NEED_CONFIRM$="YES" THEN A$(352,1)="C"; GOTO 4986
4980 REMOVE (Z[1],KEY=REC$,DOM=4981)
4982 REM "A$(353,5)=HEAD$(59,5); REM " TRANSMISSION NUMBER
4985 A$(352,1)="A"; REM " FLAG TO SAY PO ALREADY SENT
4986 WRITE (Z[28],KEY=ORD$)IOL=0310; REM "WRITE PO BACK
4987 PO$=""
4990 GOTO 1030; REM "SEE IF ANOTHER ORDER IS READY TO SEND
5000 REM "End of Print
5005 REM "IF E8$<>"END" THEN E8$="END"; GOTO 1100
5010 REM "IF Q5=1 THEN GOTO 9920
5020 REM "IF W8=0 THEN GOTO 5200
5030 T0$="END"
5090 GOTO 9900
5200 REM "READ REPLY TRANSMISSION ERROR
5210 R$=PAD(RETURN$(1,3),6,1," "); REM 'PAD ERR TO 6 TO READ IN OS3
5220 DIM R1$(128)
5230 READ (Z[10],KEY=R$,DOM=5231)IOL=0370
5240 DIM O$(254)
5250 O$(20,60)=R1$(7,60); O$(80,10)=DATE$; O$(90,8)=TIME$
5252 O$(98,6)=R$
5257 WRITE_SEQ$=STR(1:"500")
5260 WRITE (Z[11],KEY=ORD$+WRITE_SEQ$+"0OE01"+DIM(1),DOM=*NEXT)ORD$+WRITE_SEQ$+"0OE01"+DIM(1)+O$(17)+DIM(255); GOTO 5290
5261 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
5262 GOTO 5260
5290 RETURN 
5300 REM "ERROR IN TRANSMISSION HEADER - PROCESS ERROR
5310 R$=PAD(RETURN$(1,4),6,1," "); REM 'PAD ERR TO 6 TO READ IN OS3
5320 DIM R1$(128)
5330 READ (Z[10],KEY=R$,DOM=5331)IOL=0370
5340 DIM O$(254)
5345 O$(167,6)=R$
5350 O$(20,60)=R1$(7,60); O$(173,10)=DATE$; O$(183,8)=TIME$
5357 WRITE_SEQ$=STR(1:"500")
5360 WRITE (Z[11],KEY=ORD$+WRITE_SEQ$+"0XM02"+DIM(1),DOM=*NEXT)ORD$+WRITE_SEQ$+"0XM02"+DIM(1)+O$(17)+DIM(255); GOTO 5390
5361 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
5362 GOTO 5360
5370 REM "CONTINUE$="NO"
5390 RETURN 
5400 REM "ERROR IN 'OS' ORDER START RECORD - PROCESS ERROR
5410 R$="XM"+PAD(OSR$(3,2),4,1," "); REM 'PAD ERR TO 6 TO READ IN OS3
5420 DIM R1$(128)
5430 READ (Z[10],KEY=R$,DOM=5431)IOL=0370
5440 DIM O$(123)
5450 O$(20,60)=R1$(7,60); O$(80,10)=DATE$; O$(90,8)=TIME$
5456 O$(98,6)=R$
5458 WRITE_SEQ$=STR(1:"500")
5460 WRITE (Z[11],KEY=ORD$+WRITE_SEQ$+"1OS"+DIM(3),DOM=*NEXT)ORD$+WRITE_SEQ$+"1OS"+DIM(7)+O$(20)+OSR$; GOTO 5470
5461 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
5462 GOTO 5460
5470 REM "CONTINUE$="NO"
5490 RETURN 
5500 REM "ERROR IN 'A1' RECORD - ADDRESS INFO RECORD - PROCESS ERROR
5510 R$="OS"+PAD(AIR$(3,2),4,1," "); REM 'PAD ERR TO 6 TO READ IN OS3
5520 DIM R1$(128)
5530 READ (Z[10],KEY=R$,DOM=5531)IOL=0370
5540 DIM O$(123)
5550 O$(20,60)=R1$(7,60); O$(80,10)=DATE$; O$(90,8)=TIME$
5551 O$(98,6)=R$
5559 WRITE_SEQ$=STR(1:"500")
5560 WRITE (Z[11],KEY=ORD$+WRITE_SEQ$+"2A1"+DIM(3),DOM=*NEXT)ORD$+WRITE_SEQ$+"2A1"+DIM(7)+O$(20)+AIR$; GOTO 5590
5561 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
5562 GOTO 5560
5590 RETURN 
5600 REM "Get name to print on shipto
5605 IF E$(11,1)="C" THEN GOSUB 5650 ELSE IF A1<>0 THEN GOSUB 5661
5610 IF LEN(E$)>=259 AND POS(" "<>E$(259))<>0 THEN E9$=E$(225,35); GOTO 5645 ELSE E9$=D$(11,35)
5615 ON POS(E$(11,1)="CPD") GOTO 5645,5620,5625,5630
5620 FIND (Z[7],KEY=E$(11,1)+D$(1,10)+E$(12,4),DOM=5645)E1$; GOTO 5635
5625 FIND (Z[7],KEY=E$(11,1)+A$(7,10)+E$(12,4),DOM=5645)E1$; GOTO 5635
5630 FIND (Z[7],KEY=E$(11,1)+Y6$(1,10)+E$(12,4),DOM=5645)E1$; GOTO 5635
5635 E9$=E1$(16,35); IF E$(11,1)="C" THEN SHIP_TO_ZIP$=E1$(129,9) ELSE SHIP_TO_ZIP$=""
5645 RETURN 
5700 REM "ERROR IN 'IT' RECORD - ITEM INFO RECORD - PROCESS ERROR
5710 R$="OS"+PAD(ITR$(3,2),4,1," "); REM 'PAD ERR TO 6 TO READ IN OS3
5720 DIM R1$(128)
5730 READ (Z[10],KEY=R$,DOM=5731)IOL=0370
5740 DIM O$(123)
5750 O$(20,60)=R1$(7,60); REM "O$(80,10)=ITR$(5,10); O$(90,5)=DIM(5); O$(95,3)=ITR$(5,3); O$(99,60)=MID(ITR$,104,60); O$(159,7)=MID(ITR$,269,7)
5753 O$(98,6)=R$
5754 O$(80,10)=DATE$; O$(90,8)=TIME$
5755 IF LEN(PO$)=0 THEN GOTO 5790
5757 PO1=NUM(PO$(1,3)); IF LEN(PO$)>3 THEN PO$=PO$(4) ELSE PO$=PO$
5758 REM "O$(200,14)=ITR$(24,14)
5759 WRITE_SEQ$=STR(1:"500")
5760 WRITE (Z[11],KEY=ORD$+WRITE_SEQ$+"3IT"+STR(PO1:"000"),DOM=*NEXT)ORD$+WRITE_SEQ$+"3IT"+STR(PO1:"000")+O$(17)+ITR$; GOTO 5790
5761 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
5762 GOTO 5760
5790 RETURN 
5800 REM "ERROR IN 'ST' RECORD - ORDER STATUS CHANGE RECORD - PROCESS ERROR
5810 R$="OS"+PAD(STR$(3,2),4,1," "); REM 'PAD ERR TO 6 TO READ IN OS3
5820 DIM R1$(128)
5830 READ (Z[10],KEY=R$,DOM=5831)IOL=0370
5840 DIM O$(123)
5850 O$(20,60)=R1$(7,60); O$(80,10)=DATE$; O$(90,8)=TIME$; REM "O$(98,1)=STR$(108,1); O$(167,6)=R$
5856 REM "O$(173,10)=DATE$; O$(183,8)=TIME$
5857 O$(98,6)=R$
5858 WRITE_SEQ$=STR(1:"500")
5860 WRITE (Z[11],KEY=ORD$+WRITE_SEQ$+"4ST"+DIM(3),DOM=*NEXT)ORD$+WRITE_SEQ$+"4ST"+DIM(7)+O$(20)+STR$; GOTO 5890
5861 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
5862 GOTO 5860
5890 RETURN 
5900 REM " Process the LT Record                                               
5910 IF LEN(RETURN$)=0 THEN GOTO 5999
5920 R$="LT"+PAD(RETURN$(3,2),4,1," "); REM 'PAD ERR TO 6 TO READ IN OS3       
5930 DIM R1$(128)
5940 READ (Z[10],KEY=R$,DOM=5941)IOL=0370
5950 DIM L$(123)
5960 L$(20,60)=R1$(7,60); L$(80,10)=DATE$; L$(90,8)=TIME$; REM "O$(98,1)=STR$(108,1); O$(167,6)=R$                                                       
5967 L$(98,6)=R$
5968 WRITE_SEQ$=STR(1:"000")
5970 WRITE (Z[11],KEY=ORD$+WRITE_SEQ$+"4LT"+DIM(3),DOM=*NEXT)ORD$+WRITE_SEQ$+"4LT"+DIM(7)+L$(20)+RETURN$(1,107); GOTO 5999
5971 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
5972 GOTO 5970
5999 RETURN 
6000 REM " GET THE FOUR CHARACTER UNIT OF MEASURE FROM PL3                      
6005 READ (Z[26],KEY=C$(58,10)+H$(36,4),DOM=6006)
6006 PC6_KEY$=KEY(Z[26])
6007 IF PC6_KEY$(1,14)<>C$(58,10)+H$(36,4) THEN RETURN 
6010 DIM PC3$(64); READ (Z[25],KEY=PC6_KEY$(1,10)+PC6_KEY$(15,10),DOM=6030)PC3$
6020 DIM UOM$(2); UOM$=PC3$(11,2)
6030 RETURN 
6100 REM "WRITE OUT THE 800 RECORD
6110 R$=PAD(RETURN$(2,3),6,1," "); REM 'PAD ERR TO 6 TO READ IN OS3             
6120 DIM R1$(128)
6130 READ (Z[10],KEY=R$,DOM=6131)IOL=0370
6140 DIM O$(254)
6150 O$(20,60)=R1$(7,60); O$(80,10)=DATE$; O$(90,8)=TIME$
6152 O$(98,6)=R$
6157 WRITE_SEQ$=STR(1:"500")
6160 WRITE (Z[11],KEY=ORD$+WRITE_SEQ$+"5OE01"+DIM(1),DOM=*NEXT)ORD$+WRITE_SEQ$+"5OE01"+DIM(1)+O$(17)+DIM(255); GOTO 6190
6161 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000 ")
6162 GOTO 6157
6199 RETURN 
7000 REM "XM02 REPLY
7020 IF RETURN$(2,3)<>"000" THEN NEED_CONFIRM$="YES"; RETURN 
7030 U=POS("&||&"=RETURN$),RETURN$=RETURN$(U+4); REM "U+4= START OF TRANSMISSION HEADER REPLY
7040 XM$=RETURN$(1,131); RETURN$=RETURN$(132)
7050 R$="XM"+PAD(XM$(72,2),4," "); REM 'PAD ERR TO 6 TO READ IN OS3
7060 DIM R1$(128)
7070 READ (Z[10],KEY=R$,DOM=7071)IOL=0370
7100 DIM O$(254)
7110 O$(167,6)=R$
7120 O$(173,10)=DATE$; O$(183,8)=TIME$
7121 O$(20,60)="Unable to Receive confirmation of Transmission"
7130 O$(81,5)=XM$(74,5); REM "ORIGINAL TRANSMISSION NUMBER
7140 WRITE_SEQ$=STR(1:"500")
7150 WRITE (Z[11],KEY=ORD$+WRITE_SEQ$+"0XM02"+DIM(1),DOM=*NEXT)ORD$+WRITE_SEQ$+"0XM02"+DIM(1)+O$(17)+DIM(255); GOTO 7171
7160 IF WRITE_SEQ$="999" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000")
7170 GOTO 7150
7299 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 1000
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000
9520 ON C9 GOTO 1140,2040
9750 REM 
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1; ON Z0 GOTO 9761,9900
9790 RETURN 
9900 REM "End program
9909 REM "IF V8$="A" THEN V3$(2,6)="AUTO"+V7$
9910 REM "CALL "ZZERPT",X3$,X4$,X0$,Y3$,Y4$,W9,W2,W5,W,W0,W8,T3,V3$
9915 REM "IF V8$="A" OR (Y4$<>X0$ AND V3$(2,1)<>"T") THEN GOSUB 5300
9920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9921 Y4$="ZZ2PGC"
9922 IF %GUI THEN CALL Y4$,ERR=*NEXT
9923 IF %GUI THEN EXIT 
9930 IF Y4$<>"" THEN RUN Y4$,ERR=9931
9940 RUN "ZMENU"
9999 END 
56000 REM SSP 192922 If processing a re-transmission and get error 800, remove PO6 record and don't try to process again...error 800 means United's server is down
