0010 REM "<OS2ZAB> Download United - UNITED - FLYER PRICING- UNITAPE.01
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 11/05/15 - 20.069444 - jvv - SSP# 281065
0037 REM "281065-We are having a problem with the units of issue for United  
0040 REM "Copyright 2015 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 IF %GUI=0 THEN SETERR 9000
0110 X0$="OS2ZAB",X1$="Download File - UNITED "
0200 REM "Initialization
0210 WINCHECK=TCB(88)
0240 IF %GUI THEN CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2 ELSE CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2 END_IF ; IF X1>0 THEN GOTO 9920 ! SSP#235342
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0300 DIM BLANK$(40," ")
0350 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30]
0355 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0410 IOLIST S5$,S[0],S[1]
0500 REM %DATAPATH$ IS DATA PATH
0605 IF %GUI=0 THEN GOSUB 6000
0718 DIM Z[NUM(X3$(60,3))]
0720 Z$="01O PC2...  02O OS2...  03O PC3...  05O OS5... 04O OS1...  06O OS0...  07O OS7...  09O OS9...  13O ZZPARM 20O OSL...  21O OS1...  22O OS7...  23O FM1...  24O FMP...  25O IC0...  26OSFM1...  27O OS5...  "
0730 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0731,9900
0731 READ (Z[13],KEY=X3$(9,3)+"OSP")OSP_PARMS$
0735 READ (Z[13],KEY=X3$(9,3)+"OSD")DEFAULTS$
0736 IF DEFAULTS$(7,1)="Y" THEN GOTO 0738
0737 INCLUDE$=DEFAULTS$(48,36)+DEFAULTS$(84,36); REM "INCLUDE2$=DEFAULTS$(84,36)
0738 REM IF DEFAULTS$(13,1)="Y" THEN GOSUB 3000; REM MOVED TO L INE 797   
0739 IF DEFAULTS$(12,1)="Y" THEN CALL "ZZINIT",STR(Z[6]:"00")+STR(Z[2]:"00"); REM DON'T INITIALIZE OSL - SUGGESTED SELLING FILE
0740 DATAFILE$=DEFAULTS$(388,60)
0741 CLOSE (32501); OPEN LOCK (32501,OPT="TEXT",ERR=*NEXT)DATAFILE$; GOTO 0790
0742 IF ERR=12 THEN DATAFILE$=%DATAPATH$+DLM+DEFAULTS$(388,60); GOTO 0744
0743 RETURN_CODE=ERR; GOTO 9900
0744 CLOSE (32501); OPEN LOCK (32501,OPT="TEXT",ERR=*NEXT)DATAFILE$; GOTO 0790
0745 IF ERR=12 THEN IF %GUI=0 THEN CALL "ZZPROM",".4",X3$,Z,"Cannot Find Download File!!","","",0 ELSE MSGBOX "","Cannot Find Download File"; EXIT 
0746 RETURN_CODE=ERR; GOTO 9900
0790 GOSUB 8100
0795 IF %GUI THEN GOSUB 8200
0797 IF DEFAULTS$(13,1)="Y" THEN GOSUB 3000
0799 REM GOSUB 8100; REM MOVED TO 790
0800 READ_RECORD:REM "Read a record, err goes into return code
0801 GOTO 0826
0802 IF WINCHECK=0 THEN GOTO 0826
0803 IF DEFAULTS$(22,1)<>"Y" THEN GOTO 0826
0825 OPEN (10,IOL=*,OPT="KEY=PFX_NUM,STK_NUM;REC=PFX_NUM,STK_NUM,ITM_TXT")"[WDX][ODB]TEST;ITEM"
0901 GOTO 1000
0940 CLOSE_FILE_END:GOTO 9900
1000 REM "BEGIN MAIN PROCESS
1001 PROCESS$=""
1010 READ (32501,END=5000)RECORD1$; IF RECORD1$="" OR RECORD1$=$1A$ OR STP(RECORD1$(1,15),3," ")="" THEN %LOAD_DATE$=MID(RECORD1$,41,8); GOTO 1010
1011 IF RECORD1$="" OR RECORD1$=$1A$ OR STP(RECORD1$(1,15),3," ")="" THEN ESCAPE ; REM "$1a$ is dos file terminator ^Z.
1012 IF RECORD1$(16,3)=DIM(3) AND POS(RECORD1$(73,1)="ID")>0 THEN GOTO 1010; REM SSP 225958
1050 IF RECORD1$(16,3)="   " THEN GOSUB 4000; REM " BREAK UP THE MASTER ITEM
1052 IF RECORD1$(16,3)="   " THEN GOSUB 2500
1110 IF RECORD1$(16,3)<>"   " THEN GOSUB 4200; REM " BREAK UP THE PRICE RECORD
1112 IF PROCESS$="N" THEN GOTO 1600; REM " NOT PROCESSED BECAUSE OF PRICE CLASS
1113 IF RECORD1$(16,3)="   " THEN GOTO 1140
1115 OS9_KEY$="U"+P3_PRICE_PLAN$+BLANK$(1,5-(LEN(P3_PRICE_PLAN$)))
1120 DIM OS9$(95); READ (Z[9],KEY=OS9_KEY$,DOM=1010)OS9$; REM CHANGED DOM 
1130 CON_PLAN$=OS9$(39,1); REM " PLAN NUMBER FOR CONSUMER PRICE
1134 COST_COL=NUM(OS9$(38,1)); REM " COLUMN FOR COST 
1140 IF RECORD1$(16,3)<>"   " THEN GOSUB 2000; REM " OS1 RECORD               
1500 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1560 REM GOSUB 4500 DON'T POPULATE OLS - SUGGESTED SELLING FROM THE DOWNLOAD
1600 GOTO 1000
2000 REM "OS2, OS1 RECORD
2010 DIM OS1$(250),OS2$(127)
2015 PRICE1=0
2016 OS2$(1)=U27_PRODUCT_NUMBER$+DIM(3)+U1_PREFIX$+U2_STOCK_BUTTED$+U23_LIST_PRICE$+UOM$+U4_STOCK_NUM_UNBUTTED$+X3$(21,6)+"U"+U15_INV_UNIT$(1,2)
2018 WRITE (Z[2],KEY=OS2$(1,10))OS2$
2040 OS1$(1,10)=U27_PRODUCT_NUMBER$+DIM(3); OS1$(11,6)="U"+P3_PRICE_PLAN$+DIM(2)
2041 OS1$(18,1)=OS9$(37,1)
2042 OS1$(17,1)="L"; REM "FLAG TO SAY PRICE WAS LOADED
2045 OS1$(237,10)=U23_LIST_PRICE$; REM "LIST/BASE PRICE
2050 DATES$=P4_PRICE_START_DT$,DATES$=DATES$(7,2)+DATES$(1,4); REM START DATE YYMMDD
2051 Q$=DATES$; GOSUB 7500; DATES$=Q0$
2055 DATEE$=P5_PRICE_END_DT$,DATEE$=DATEE$(7,2)+DATEE$(1,4); REM END DATE YYMMDD
2056 Q$=DATEE$; GOSUB 7500; DATEE$=Q0$
2060 OS1$(25,6)=DATES$,OS1$(31,6)=DATEE$
2065 GOSUB 3500
2070 OS1$(47,10)=CONSUMER_PRICE$
2072 IF OS9$(41,1)="Y" THEN OS1$(57,10)=STR(0:"##########") ELSE OS1$(57,10)=COST$; REM SSP 192075 If Consumer only, make the cost zero
2073 IF NUM(OS1$(47,10))=0 THEN OS1$(47,10)=U23_LIST_PRICE$
2078 REM "IF NUM(OS1$(57,10))=0 THEN GOTO 2090
2079 GOSUB 6500
2080 IF OS1$(12,5)<>DIM(5) AND NUM(OS1$(47,10))<>0 THEN WRITE (Z[4],KEY=OS1$(1,16))OS1$(1,250)
2081 IF OS9$(39,1)="A" THEN GOSUB 4600
2082 IF OS9$(39,1)=DIM(1) THEN COST_COL$=OSP_PARMS$(225,1) ELSE COST_COL$=OS9$(39,1)
2083 IF COST_COL$="A" THEN COST_COL$=OS7$(14,1); IF OS7$(14,1)=DIM(1) THEN COST_COL$="1"; REM SSP 191073 - On muliple consumer prices,was putting A for column
2084 DIM OS5_NEW$(65); OS5_NEW$=MID(OS7$,11,6)+"**DOWNLOADED FROM UNITED TAPE*CUL"+OS1$(25,12)+COST_COL$+OS7$(11,6)+OS1$(18,1)+OS9$(40,1)+DIM(1)+"Y"+DIM(2)
2085 WRITE (Z[5],KEY=OS5_NEW$(1,6))OS5_NEW$,0,0,0,0,0,0,0,0,0
2090 RETURN 
2500 REM "SET UP AND WRITE OS0 RECORD
2501 IF U9_ACTION$="D" OR U9_ACTION$="I" THEN GOTO 2799; REM DON'T WRITE TO OS0 IF INACTIVE OR DELETED
2510 DIM OS0$(800)
2512 OS0$(1,10)=U27_PRODUCT_NUMBER$+DIM(3); REM "ITEM NUMBER KEY
2514 OS0$(11,3)="IMP"; OS0$(14,3)="100"
2516 OS0$(27,10)=U27_PRODUCT_NUMBER$+DIM(3); REM "ITEM NUMBER KEY
2518 OS0$(37,40)=U5_DESC$+DIM(15); REM "ITEM DESCRIPTION
2519 Q_IN$=OS0$(37,40); CALL "ZZCASE",Q_IN$,Q_OUT$; OS0$(37,40)=Q_OUT$; REM " SSP 176171
2520 OS0$(77,3)=PC$; REM " PRODUCT CLASS
2522 OS0$(98,10)=OSP_PARMS$(58,10); REM " VENDOR FROM PARAMETERS
2524 OS0$(108,4)=OSP_PARMS$(221,4); REM " PLANT CODE FROM PARAMETERS
2526 OS0$(124,1)=U9_ACTION$; REM " STATUS FLAG - CHECK
2528 OS0$(128,1)="Y"; REM " LOT INVENTORY FOR THIS ITEM?
2530 OS0$(136,4)=UOM$; REM " SELLING UNIT
2532 OS0$(140,4)=UOM$; REM " INVENTORY UNIT
2534 OS0$(204,10)=U23_LIST_PRICE$; REM "LIST/BASE PRICE
2535 IF NUM(U30_CONVERSION_FACTOR$)=0 THEN U30_CONVERSION_FACTOR$="00001"
2536 REM "OS0$(344,10)=U21_LIST_QTY$+DIM(3); REM " LIST QUANTITY
2537 OS0$(344,10)=U30_CONVERSION_FACTOR$+DIM(5); REM " LIST QUANTITY
2538 OS0$(354,10)=U30_CONVERSION_FACTOR$+DIM(5); REM " LIST QUANTITY
2539 REM "OS0$(354,10)=U21_LIST_QTY$+DIM(3); REM " LIST QUANTITY
2540 OS0$(364,10)=U20_SHIPPING_WT$+DIM(5); REM "WEIGHT
2542 OS0$(394,10)=U18_CARTON_PK_QTY$; REM "CARTON PACK QTY
2544 OS0$(534,10)=OSP_PARMS$(58,10); REM " VENDOR FROM PARAMETERS
2546 OS0$(544,4)=OSP_PARMS$(221,4); REM " PLANT CODE FROM PARAMETERS
2548 OS0$(548,20)=U1_PREFIX$+U2_STOCK_BUTTED$+DIM(5); REM " SUPPLIER ITEM
2550 OS0$(568,4)=UOM$; REM " INVENTORY UNIT
2552 OS0$(718,10)=U30_CONVERSION_FACTOR$+DIM(5); REM " LIST QUANTITY
2553 REM "OS0$(718,10)=U21_LIST_QTY$+DIM(3); REM " LIST QUANTITY
2554 OS0$(728,10)=U20_SHIPPING_WT$+DIM(5); REM "WEIGHT
2556 OS0$(738,10)=U18_CARTON_PK_QTY$; REM "CARTON PACK QTY
2557 IF DEFAULTS$(22,1)<>"Y" THEN GOTO 2575
2559 IF WINCHECK=0 THEN GOTO 2575
2560 REM "READ DATABASE AND REPLACE 40 COLUMN DESCRIPTION
2561 READ (10,KEY=U1_PREFIX$+U2_STOCK_BUTTED$,REC=DB$,DOM=2575)
2562 IF LEN(DB.ITM_TXT$)>=40 THEN GOTO 2570
2565 DB.ITM_TXT$=DB.ITM_TXT$(1,LEN(DB.ITM_TXT$)-1); DB.ITM_TXT$=DB.ITM_TXT$+BLANK$(1,40-LEN(DB.ITM_TXT$))
2570 OS0$(37,40)=DB.ITM_TXT$(1,40)
2571 REM "OS0$(144,40)=DB.ITM_TXT$(41,40); REM " ADD SECOND DESCRIPTION LINE TO OS0
2572 OS0$(144,40)=DIM(40)
2573 Q_IN$=OS0$(37,40); CALL "ZZCASE",Q_IN$,Q_OUT$; OS0$(37,40)=Q_OUT$; REM " SSP 176171
2575 WRITE (Z[6],KEY=OS0$(1,10))OS0$(1,799)
2580 REM "GOSUB 3200; REM " CHECK FOR FM1 UOM CHANGES SSP 192379 will add quesiton to selection screen to get to this..releasing the program with other change first
2799 RETURN 
2800 REM "REMOVE OS0 & OS1 RECORDS FOR DISCONTINUED/INACTIVE ITEMS
2810 READ (Z[4],KEY=RECORD1$(157,7)+"   ",DOM=2811)
2820 OS1KEY$=KEY(Z[4],END=2980)
2830 IF OS1KEY$(1,7)<>RECORD$(157,7) THEN GOTO 2980
2840 REMOVE (Z[21],KEY=OS1KEY$,DOM=2841)
2850 GOTO 2820
2980 REM "REMOVE (32499,KEY=RECORD$(157,7)+"   ",DOM=2981)
2981 REM "WRITE (32499,KEY=RECORD$(157,7)+"   ")RECORD$
2982 REM "REMOVE (Z[2] ,KEY=RECORD$(157,7)+"   ",DOM=2983)
2985 READ (32501,END=2986)RECORD$; IF LEN(RECORD$)>165 AND POS(RECORD$(73,1)="ID")>0 THEN GOTO 2990
2986 RETURN_CODE=2
2990 RETURN 
3000 REM "READ OS5 AND SEE IF THE PRICE PLAN WAS MANUALLY ENTERED OR CREATED BY AN UPDATE
3006 READ (Z[4],KEY="",DOM=3007)
3007 OS1KEY$=KEY(Z[4],END=3050); READ (Z[4])
3010 READ (Z[4],KEY=OS1KEY$)OS1_RECORD$
3015 IF %GUI THEN C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
3020 READ (Z[5],KEY=OS1_RECORD$(11,6),DOM=3040)OS5$
3025 IF %GUI=0 THEN PRINT @(10,12),"NOW REMOVING PRICE FOR ",OS1KEY$(1,16)
3030 IF OS5$(62,1)<>"Y" THEN GOTO 3007
3040 REMOVE (Z[21],KEY=OS1KEY$)
3045 GOTO 3007
3050 REM " REMOVE COST RECORDS IF OS5 IS REMOVE =y
3060 READ (Z[7],KEY="",DOM=*NEXT)
3070 OS7KEY$=KEY(Z[7],END=3120); READ (Z[7])
3075 IF %GUI THEN C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
3080 READ (Z[5],KEY=OS7KEY$(11,6),DOM=3100)OS5$
3090 IF OS5$(62,1)<>"Y" THEN GOTO 3070
3100 REMOVE (Z[22],KEY=OS7KEY$)
3101 IF %GUI=0 THEN PRINT @(10,12),"NOW REMOVING COST FOR ",OS7KEY$(1,16)
3110 GOTO 3070
3120 REM " REMOVE PRICE PLANS
3130 READ (Z[5],KEY="",DOM=*NEXT)
3140 OS5_KEY$=KEY(Z[5],END=3190); READ (Z[5])
3145 IF %GUI THEN C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
3150 READ (Z[5],KEY=OS5_KEY$)OS5_REC$
3160 IF OS5_REC$(62,1)<>"Y" THEN GOTO 3140
3170 REMOVE (Z[27],KEY=OS5_KEY$)
3180 GOTO 3140
3199 RETURN 
3200 REM "CHECK FOR FM1 UOM CHANGES 
3205 READ (Z[23],KEY=OS0$(1,10),KNO=5,DOM=*NEXT)
3210 KEY_FM1$=KEY(Z[23],KNO=5,END=3499); READ (Z[23])
3219 IF KEY_FM1$(1,10)<>OS0$(1,10) THEN GOTO 3499
3220 DIM FM1[30]; READ (Z[23],KEY=KEY_FM1$(11,10)+KEY_FM1$(1,10),KNO=0)IOL=0350
3221 Q0$=OS0$(1,10),Q1$="*"
3222 CALL "OS2C02",X3$,X4$,Q0$,Q1$
3230 IF FM1$(96,4)=UOM$ AND FM1$(100,4)=UOM$ THEN GOTO 3210
3232 DIM IC0[40]; READ (Z[25],KEY=BLANK$(1,10)+OS0$(1,10))IOL=0355
3233 P1=FM1[4]
3235 FM1[2]=IC0[15],FM1[4]=IC0[14],FM1$(96,8)=IC0$(120,8)
3236 IF Q1=P1 THEN GOTO 3245
3242 IF S5$(20,1)<>"Y" THEN Q1=FM1[4] ELSE Q1=S[1]
3243 IF P1<>0 THEN FM1[3]=FM1[3]*FM1[4]/P1
3244 IF P1<>0 THEN FM1[1]=FM1[1]*FM1[4]/P1
3355 WRITE (Z[26],KEY=FM1$(1,20))IOL=0350
3370 GOTO 3210
3499 RETURN 
3500 REM "CONSUMER PRICE
3501 CONSUMER_PRICE$="",CONSUMER1_PRICE$="",CONSUMER2_PRICE$="",CONSUMER3_PRICE$="",CONSUMER4_PRICE$=""
3512 REM "IF CON_PLAN$="0" THEN CON_PLAN=NUM(OSP_PARMS$(387,1),ERR=3600)
3515 IF CON_PLAN$="0" THEN GOTO 3600
3520 IF CON_PLAN$="1" THEN CONSUMER_PRICE$=P23_CONSUMER1_PRICE$
3530 IF CON_PLAN$="2" THEN CONSUMER_PRICE$=P25_CONSUMER2_PRICE$
3540 IF CON_PLAN$="3" THEN CONSUMER_PRICE$=P27_CONSUMER3_PRICE$
3550 IF CON_PLAN$="4" THEN CONSUMER_PRICE$=P29_CONSUMER4_PRICE$
3552 IF CON_PLAN$="A" THEN CON_PRICE1$=P23_CONSUMER1_PRICE$,CON_PRICE2$=P25_CONSUMER2_PRICE$,CON_PRICE3$=P27_CONSUMER3_PRICE$,CON_PRICE4$=P29_CONSUMER4_PRICE$
3560 REM "IF NUM(CONSUMER_PRICE$)=0 THEN CON_PLAN=CON_PLAN-1; GOTO 3515
3600 REM "COST
3612 IF COST_COL=0 THEN COST_COL=NUM(OS9$(38,1),ERR=*NEXT)
3614 IF COST_COL=0 THEN COST_COL=NUM(OSP_PARMS$(225,1),ERR=3999)
3615 IF COST_COL=0 THEN GOTO 3999
3620 IF COST_COL=1 THEN COST$=P15_COL1_PRICE$
3630 IF COST_COL=2 THEN COST$=P17_COL2_PRICE$
3640 IF COST_COL=3 THEN COST$=P19_COL3_PRICE$
3650 IF COST_COL=4 THEN COST$=P20_COL4_PRICE$
3660 IF NUM(COST$)=0 THEN COST_COL=COST_COL-1; GOTO 3615
3999 RETURN 
4000 REM "BREAK UP MASTER ITEM
4010 U1_PREFIX$=""; U1_PREFIX$=RECORD1$(1,3)
4012 U2_STOCK_BUTTED$=""; U2_STOCK_BUTTED$=RECORD1$(4,12)
4014 U3_MASTER_REC_IND$=""; U3_MASTER_REC_IND$=RECORD1$(16,3)
4016 U4_STOCK_NUM_UNBUTTED$=""; U4_STOCK_NUM_UNBUTTED$=RECORD1$(19,12)
4018 U5_DESC$=""; U5_DESC$=RECORD1$(31,25)
4020 U6_VENDOR_ABR$=""; U6_VENDOR_ABR$=RECORD1$(56,3)
4022 UU7_VENDOR_SHORT_NAME$=""; U7_VENDOR_SHORT_NAME$=RECORD1$(59,10)
4024 U8_PROD_CLASS$=""; U8_PROD_CLASS$=RECORD1$(69,4)
4025 GOSUB 8000; REM " GET THE PRODUCT CLASS
4026 U9_ACTION$=""; U9_ACTION$=RECORD1$(73,1)
4028 U10_ITEM_REF$=""; U10_ITEM_REF$=RECORD1$(74,2)
4030 U11_ITEM_STOCK_STATUS$=""; U11_ITEM_STOCK_STATUS$=RECORD1$(76,2)
4031 REM "IF U11_ITEM_STOCK_STATUS$="01" THEN ESCAPE 
4032 U12_SHIPPING_CLASS$=RECORD1$(78,1)
4034 U13_REF_ITEM$=RECORD1$(79,15)
4036 U14_REC_SUBS$=RECORD1$(94,15)
4038 U15_INV_UNIT$=RECORD1$(109,2)
4039 REM "GOSUB 7000
4040 U16_BOX_PACK_QTY$=RECORD1$(111,5)
4042 U17_BOX_PACK_UNIT$=RECORD1$(116,2)
4044 U18_CARTON_PK_QTY$=RECORD1$(118,5)
4046 U19_CARTON_PACK_UNIT$=RECORD1$(123,2)
4048 U20_SHIPPING_WT$=RECORD1$(125,5)+DIM(5)
4050 U21_LIST_QTY$=RECORD1$(130,7)
4052 U22_LIST_UNIT$=RECORD1$(137,2)
4053 GOSUB 7000; REM "UNIT OF MEASURE CONVERSION
4054 U23_LIST_PRICE$=""; U23_LIST_PRICE$=RECORD1$(139,9)
4055 IF U23_LIST_PRICE$<>"" THEN U23_LIST_PRICE$=STR(NUM(U23_LIST_PRICE$)*.01:"#######.##")
4056 U24_LIST_EFF_DATE$=RECORD1$(148,6)
4058 U25_PRICE_ASSORTMENT$=RECORD1$(154,2)
4060 U26_UPS_INDICATOR$=RECORD1$(156,1)
4062 U27_PRODUCT_NUMBER$=RECORD1$(157,7)
4064 U28_UPC_CODE$=RECORD1$(164,14)
4065 GOSUB 7100
4066 U29_RETAIL_UNIT$=RECORD1$(178,2)
4068 ! F S5$(20,1)="Y" THEN U30_CONVERSION_FACTOR$=STR(S[1]:"00000") ELSE U30_CONVERSION_FACTOR$=RECORD1$(180,5); REM "    
4069 IF S5$(20,1)="Y" THEN U30_CONVERSION_FACTOR$=STR(S[1]:"00000") ELSE U30_CONVERSION_FACTOR$="0"; REM "281065
4070 U31_UL_CODE$=RECORD1$(185,1)
4072 U32_CSA_CODE$=RECORD1$(186,1)
4074 U33_COUNTRY$=RECORD1$(187,2)
4076 U34_TARIFF$=RECORD1$(190,8)
4078 U35_ASSEMBLY$=RECORD1$(198,1)
4080 U36_PACK_QTY$=RECORD1$(199,7)
4082 U37_PACK_UNIT$=RECORD1$(206,2)
4084 U38_FILLER$=RECORD1$(208,18)
4099 RETURN 
4200 REM "BREAK UP PRICE PLAN ITEM
4202 IF DEFAULTS$(7,1)="Y" THEN GOTO 4210
4203 IF POS(RECORD1$(16,3)=INCLUDE$)=0 THEN PROCESS$="N"; RETURN 
4205 REM "IF POS(RECORD1$(16,3)=INCLUDE2$)=0 THEN PROCESS$="N"; RETURN 
4210 P1_PREFIX$=RECORD1$(1,3)
4212 P2_STOCK_BUTTED$=RECORD1$(4,12)
4214 P3_PRICE_PLAN$=STP(RECORD1$(16,3),3); REM SSP 225249
4216 P4_PRICE_START_DT$=RECORD1$(19,8)
4218 P5_PRICE_END_DT$=RECORD1$(27,8)
4220 P6_CATALOG_CODE1$=RECORD1$(35,4)
4222 P7_CATALOG_PAGE$=RECORD1$(39,5)
4224 P8_PRIOR_CAT_PAGE1$=RECORD1$(44,5)
4226 P9_NEXT_YR_CAT_PAGE1$=RECORD1$(49,5)
4228 P10_CAT_CODE2$=RECORD1$(54,4)
4230 P11_CAT_PAGE2$=RECORD1$(58,5)
4232 P12_PRIOR_CAT_PAGE2$=RECORD1$(63,5)
4234 P13_NEXT_YR_CAT_PG2$=RECORD1$(68,5)
4236 P14_COL1_QTY$=RECORD1$(73,7)
4238 P15_COL1_PRICE$=""; P15_COL1_PRICE$=RECORD1$(80,9)
4239 IF P15_COL1_PRICE$<>"" THEN P15_COL1_PRICE$=STR(NUM(P15_COL1_PRICE$)*.01:"#######.##")
4240 P16_COL2_QTY$=RECORD1$(89,7)
4242 P17_COL2_PRICE$=""; P17_COL2_PRICE$=RECORD1$(96,9)
4243 IF P17_COL2_PRICE$<>"" THEN P17_COL2_PRICE$=STR(NUM(P17_COL2_PRICE$)*.01:"#######.##")
4246 P18_COL3_QTY$=RECORD1$(105,7)
4248 P19_COL3_PRICE$=""; P19_COL3_PRICE$=RECORD1$(112,9)
4249 IF P19_COL3_PRICE$<>"" THEN P19_COL3_PRICE$=STR(NUM(P19_COL3_PRICE$)*.01:"#######.##")
4250 GOTO 4254 ! P20_COL4_QTY$=RECORD1$(121,7); !SSP 278336
4252 P21_COL4_PRICE$=RECORD1$(128,9)
4253 IF P21_COL4_PRICE$<>"" THEN P21_COL4_PRICE$=STR(NUM(P21_COL4_PRICE$)*.01:"#######.##")
4254 P22_CONSUMER1_QTY$=RECORD1$(137,7)
4256 P23_CONSUMER1_PRICE$=RECORD1$(144,9)
4257 IF P23_CONSUMER1_PRICE$<>"" THEN P23_CONSUMER1_PRICE$=STR(NUM(P23_CONSUMER1_PRICE$)*.01:"#######.##")
4258 P24_CONSUMER2_QTY$=RECORD1$(153,7)
4260 P25_CONSUMER2_PRICE$=RECORD1$(160,9)
4261 IF P25_CONSUMER2_PRICE$<>"" THEN P25_CONSUMER2_PRICE$=STR(NUM(P25_CONSUMER2_PRICE$)*.01:"#######.##")
4262 P26_CONSUMER3_QTY$=RECORD1$(169,7)
4264 P27_CONSUMER3_PRICE$=RECORD1$(176,9)
4265 IF P27_CONSUMER3_PRICE$<>"" THEN P27_CONSUMER3_PRICE$=STR(NUM(P27_CONSUMER3_PRICE$)*.01:"#######.##")
4266 GOTO 4270 ! P28_CONSUMER4_QTY$=RECORD1$(185,7) SSP 278336
4268 P29_CONSUMER4_PRICE$=RECORD1$(192,9)
4269 IF P29_CONSUMER4_PRICE$<>"" THEN P29_CONSUMER4_PRICE$=STR(NUM(P29_CONSUMER4_PRICE$)*.01:"#######.##")
4270 P30_CAT_CODE3$=RECORD1$(201,4)
4272 P31_CAT_PAGE3$=RECORD1$(205,5)
4274 P32_PRIOR_CAT_PAGE3$=RECORD1$(210,5)
4276 P33_NEXT_YR_CAT_PAGE3$=RECORD1$(215,5)
4278 P34_FILLER$=RECORD1$(220,6)
4299 RETURN 
4500 REM " WRITE TO OSL FILE
4501 RETURN 
4502 IF U9_ACTION$<>"I" AND U9_ACTION$<>"D" THEN GOTO 4599
4510 IF U10_ITEM_REF$="16" THEN SUB$=U13_REF_ITEM$
4515 IF U10_ITEM_REF$="46" THEN SUB$=U13_REF_ITEM$
4520 IF U10_ITEM_REF$="26" THEN SUB$=U14_REC_ITEM$
4521 IF U10_ITEM_REF$="00" THEN MESSAGE$="No Recommended Substitute Available" ELSE MESSAGE$="Recommended Substitute: "+SUB$
4525 Q$=%LOAD_DATE$(7,2)+%LOAD_DATE$(1,2)+%LOAD_DATE$(4,2); GOSUB 7500; LOAD_DATE$=Q0$
4550 DIM OSL$(127)
4555 OSL$(1,10)=U27_PRODUCT_NUMBER$+DIM(3)
4560 OSL$(11,20)=U1_PREFIX$+U2_STOCK_BUTTED$
4565 OSL$(31,20)=SUB$
4570 OSL$(51,6)=LOAD_DATE$
4575 OSL$(57,60)=MESSAGE$
4580 WRITE (Z[20],KEY=OSL$(1,56))OSL$
4585 SUB$=""
4599 RETURN 
4600 REM " MULTIPLE CONSUMER PRICES
4602 DIM OS5_NEW$(65) ! SSP#225709
4605 IF NUM(CON_PRICE1$)=0 THEN GOTO 4625
4610 OS1$(47,10)=CON_PRICE1$
4615 OS1$(12+LEN(P3_PRICE_PLAN$),1)="1"; REM SSP 225249
4620 IF OS1$(12,5)<>DIM(5) AND NUM(OS1$(47,10))<>0 THEN WRITE (Z[4],KEY=OS1$(1,16))OS1$(1,250)
4622 DIM OS5_NEW$(65); OS5_NEW$=MID(OS7$,11,6)+"**DOWNLOADED FROM UNITED TAPE*CUL"+OS1$(25,12)+COST_COL$+OS7$(11,6)+OS1$(18,1)+OS9$(40,1)+DIM(1)+"N"+DIM(2)
4623 OS5_NEW$(2+LEN(P3_PRICE_PLAN$),1)="1"; REM SSP 225249
4624 WRITE (Z[5],KEY=OS5_NEW$(1,6))OS5_NEW$,0,0,0,0,0,0,0,0,0
4625 IF NUM(CON_PRICE2$)=0 THEN GOTO 4645
4630 OS1$(47,10)=CON_PRICE2$
4635 OS1$(12+LEN(P3_PRICE_PLAN$),1)="2"; REM SSP 225249
4640 IF OS1$(12,5)<>DIM(5) AND NUM(OS1$(47,10))<>0 THEN WRITE (Z[4],KEY=OS1$(1,16))OS1$(1,250)
4642 OS5_NEW$(2+LEN(P3_PRICE_PLAN$),1)="2"; REM SSP 225249
4644 WRITE (Z[5],KEY=OS5_NEW$(1,6))OS5_NEW$,0,0,0,0,0,0,0,0,0
4645 IF NUM(CON_PRICE3$)=0 THEN GOTO 4665
4650 OS1$(47,10)=CON_PRICE3$
4655 OS1$(12+LEN(P3_PRICE_PLAN$),1)="3"; REM SSP 225249
4660 IF OS1$(12,5)<>DIM(5) AND NUM(OS1$(47,10))<>0 THEN WRITE (Z[4],KEY=OS1$(1,16))OS1$(1,250)
4662 OS5_NEW$(2+LEN(P3_PRICE_PLAN$),1)="3"; REM SSP 225249
4664 WRITE (Z[5],KEY=OS5_NEW$(1,6))OS5_NEW$,0,0,0,0,0,0,0,0,0
4665 IF NUM(CON_PRICE4$)=0 THEN GOTO 4699; REM SSP 225249
4666 OS1$(47,10)=CON_PRICE4$
4670 OS1$(12+LEN(P3_PRICE_PLAN$),1)="4"; REM SSP 225249
4675 IF OS1$(12,5)<>DIM(5) AND NUM(OS1$(47,10))<>0 THEN WRITE (Z[4],KEY=OS1$(1,16))OS1$(1,250)
4680 OS5_NEW$(2+LEN(P3_PRICE_PLAN$),1)="4"; REM SSP 225249
4685 WRITE (Z[5],KEY=OS5_NEW$(1,6))OS5_NEW$,0,0,0,0,0,0,0,0,0
4698 OS5_NEW$(2+LEN(P3_PRICE_PLAN$),1)=" "; REM SSP 225249
4699 RETURN 
5000 REM "EOJ
5001 REM GOSUB 6200; REM Remove OS1 records that don't have OS0 records to go with them  SSP 207651 I'm removing for now...will make separate pgm that can be run
5010 C=T; GOSUB 8150
5011 PRINT @(10,17),"There are "+STR(T)+" records to process"
5012 REM "PRINT @(9,18),"Ending Time: ",DAY,"   ",STR(TIM*100:"00:00")
5020 IF Q1$="" AND %GUI=0 THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5030 CLOSE (32501)
5040 GOTO 9900
6000 REM "BACKGROUND                                                
6004 PRINT @(0,3),'CL',@(0,4),'CL',@(0,5),'CL',@(0,6),'CL',@(0,7),'CL',@(0,8),'CL',@(0,9),'CL',@(0,10),'CL',@(0,11),'CL',@(0,12),'CL',@(0,13),'CL',@(0,14),'CL',@(0,15),'CL',@(0,16),'CL',@(0,17),'CL'
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(10,10),"Now Downloading United Product File",
6165 PRINT (0,ERR=6166)'SF',
6170 CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 6711,9900
6190 RETURN 
6200 REM "Clear out OS1 records that don't have OS0 records to go with them SSP 207651
6205 PRINT 'CS',@(1,10),"Removing Pricing Records for Non-Existent Items"
6210 READ (Z[4],KEY="",DOM=*NEXT)
6220 K$=KEY(Z[4],END=6399); READ (Z[4])
6230 PRINT @(10,11),K$
6240 READ (Z[6],KEY=K$(1,10),DOM=6300); GOTO 6220
6300 REM 
6310 REMOVE (Z[21],KEY=K$)
6320 GOTO 6220
6399 RETURN 
6500 REM " SET THE PRICE BREAKS AND PRICE BREAK PRICES-COSTS TO SUPPLIER - OS7
6504 QTY_1$="",QTY_2$="",QTY_3$="",PRICE_1$="",PRICE_2$="",PRICE_3$=""
6505 IF OS1$(12,5)=DIM(5) THEN GOTO 6999
6510 IF NUM(P14_COL1_QTY$)<>0 THEN QTY_1$=P14_COL1_QTY$
6520 IF NUM(P15_COL1_PRICE$)<>0 THEN PRICE_1$=P15_COL1_PRICE$
6530 IF NUM(P16_COL2_QTY$)<>0 THEN QTY_2$=P16_COL2_QTY$ ELSE IF NUM(P16_COL2_QTY$)=0 THEN QTY_2$=QTY_1$
6540 IF NUM(P17_COL2_PRICE$)<>0 THEN PRICE_2$=P17_COL2_PRICE$ ELSE IF NUM(P17_COL2_PRICE$)=0 THEN PRICE_2$=PRICE_1$
6550 IF NUM(P18_COL3_QTY$)<>0 THEN QTY_3$=P18_COL3_QTY$ ELSE IF NUM(P18_COL3_QTY$)=0 THEN QTY_3$=QTY_2$
6560 IF NUM(P19_COL3_PRICE$)<>0 THEN PRICE_3$=P19_COL3_PRICE$ ELSE IF NUM(P19_COL3_PRICE$)=0 THEN PRICE_3$=PRICE_2$
6570 DIM OS7$(125); OS7$(1,10)=OS1$(1,10); OS7$(11,6)=OS1$(11,6); OS7$(17,10)=QTY_1$; OS7$(27,10)=PRICE_1$; OS7$(37,10)=QTY_2$; OS7$(47,10)=PRICE_2$; OS7$(57,10)=QTY_3$; OS7$(67,10)=PRICE_3$
6577 OS7$(77,6)=DATES$,OS7$(83,6)=DATEE$
6578 REM "IF COST_COL=0 THEN GOTO 6999
6579 IF OS9$(41,1)="Y" THEN GOTO 6999; REM THIS IS WHERE YOU WOULD PUT THE GO AROUND
6580 WRITE (Z[7],KEY=OS7$(1,16))OS7$
6999 RETURN 
7000 REM " GET THE FOUR CHARACTER UNIT OF MEASURE FROM PL3
7010 DIM PC3$(64); READ (Z[3],KEY=OSP_PARMS$(58,10)+U15_INV_UNIT$(1,2)+DIM(8),DOM=7040)PC3$
7020 DIM UOM$(4); UOM$=PC3$(56,4)
7030 RETURN 
7040 REM "IF ERROR
7045 X$="Missing U/M, "+U15_INV_UNIT$(1,2)+" setup in Product Catalog Gateway"; CALL "ZZPROM",".4",X3$,Z,X$,"","",0; GOTO 7010 ! ssp#225709
7049 RETURN 
7100 REM "CHECK TOPFORM UOM
7110 DIM S[2]; FIND (Z[13],KEY="U/M"+UOM$,DOM=7140)IOL=0410
7130 RETURN 
7140 REM "IF ERROR
7145 X$="Missing U/M, "+UOM$+" setup in Order Processing"; CALL "ZZPROM",".4",X3$,Z,X$,"","",0; GOTO 7110 ! ssp#225709
7149 RETURN 
7500 REM "Convert date Q$ into Q0$                                              
7501 REM "Q$ in YYYYMMDD format or YYMMDD                                       
7505 Q0$=""
7506 Q$=STP(Q$,1)
7507 IF Q$="" THEN GOTO 7549
7510 IF LEN(Q$)=8 THEN GOTO 7520 ELSE IF LEN(Q$)=6 THEN D1$=STR(NUM(Q$(1,2)):"0 0") ELSE GOTO 7549
7515 IF D1$<"50" THEN Q$="20"+Q$ ELSE Q$="19"+Q$
7520 Q0$=CHR(NUM(Q$(1,3),ERR=7521)-125)+Q$(4,1)+Q$(5,2)+Q$(7,2)
7549 RETURN 
7600 REM " READ PRODUCT CLASS
7699 RETURN 
8000 REM "GET THE THREE CHARACTER PRODUCT CODE FROM PC2
8010 DIM PC2$(64); READ (Z[1],KEY=OSP_PARMS$(58,10)+U8_PROD_CLASS$+DIM(6),DOM=8040)PC2$
8020 DIM PC$(4); PC$=PC2$(56,3)
8030 RETURN 
8040 REM "IF ERROR
8045 IF ERR=11 THEN PC$=DEFAULTS$(9,3); GOTO 8049
8049 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8107 T=0
8113 CALL "ZZ2FNC;SERIALRECCNT",32501,T
8115 IF %GUI=0 THEN PRINT @(10,16),"There are "+STR(T)+" records to process"
8116 REM "PRINT @(10,17),"Start Time: ",DAY,"   ",STR(TIM*100:"00:00")
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"H",19,10,50,T1,T,C
8195 RETURN 
8200 REM "Just like 8100, but for second phase
8202 CALL "ZZINFO",Z[4],T9,X3$,T4,T0,K,B,D,S0,S1,F$
8204 CALL "ZZINFO",Z[5],T9,X3$,T7,T0,K,B,D,S0,S1,F$
8206 CALL "ZZINFO",Z[7],T9,X3$,T5,T0,K,B,D,S0,S1,F$
8208 ZX=32501
8210 CALL "ZZINFO",ZX,T9,X3$,T,T0,K,B,D,S0,S1,F$
8212 IF DEFAULTS$(13,1)="Y" THEN T=T+T4+T7+T5
8215 C=0,T1=0
8230 T0=INT(T*.02); IF T0<=1 THEN T0=2
8245 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM SSP 192075 If Consumer only price, make the cost zero
56001 REM "191073-Changes to United download program to correct OS5 column and   
56002 REM "207651-TOPS - need to add code to check the OS1 records against   
56003 REM "225249-PE downloading specific United Plan  
56004 REM "235342-When you run the SP Richards Download, the exit button does !Also ref# 235382 Carton Pack being set to one for SP Richards items, ALSO 225709 multiple issues
56005 REM "278336-Getting a program exception when importing USSCO            
56006 REM "281065-We are having a problem with the units of issue for United  
