0010 REM "Packing List Printing - Format Driven <FM2RBC>
0035 REM "3.9 - 04/17/96 - 9.47 - dmm
0040 REM "Copyright 1996 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 BEGIN ; SETERR 9000
0095 PRECISION 14; T2=TIM; PRECISION 2
0105 SETERR 9000; SETESC 9300
0110 X0$="FM2RBC",X1$="Packing List Printing"
0120 DIM A$(0),B$(82),B[21],C$(297),L$(20),L[1],S1$(40),E[1],A[7],S$(40),I[19],X9[90],Y9[90],Y8[4],M$(21),M[2],F0[31]
0140 Z0$="-###,###.00",Z1$="##,##0",Z2$="###,##0-",M4$="-00000000.00",M4=LEN(M4$),M5$="#####",Z3$="-###,###",Z4$="-####.00",Z5$="-#####.00",Z6$="-###.0",M0$="-###"
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0180 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0190 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
0210 T=1,T0=1,T1=1
0220 W3=85,P0=1
0230 DIM T1$(W3,"-"),T2$(W3,"="),T3$(W3,"*"),Y5$(W3),Y6$(W3),W[4]
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,"",-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0260 CALL "ZZRPTP",X3$,X0$,X1$,V9$,V0,Q0$,Q1$,Q2$,Q3$,Q4$,Q5$,Q6$
0300 REM "I/O lists
0305 REM "IOLIST FOR FS1 - Sales order header
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7]
0314 IOLIST Y8$,Y8[0],Y8[1],Y8[2],Y8[3],X9$
0315 IOLIST X9[0],Y9[0],X9[1],Y9[1],X9[2],Y9[2],X9[3],Y9[3],X9[4],Y9[4],X9[5],Y9[5],X9[6],Y9[6],X9[7],Y9[7],X9[8],Y9[8],X9[9],Y9[9],X9[10],Y9[10],X9[11],Y9[11],X9[12],Y9[12],X9[13],Y9[13],X9[14],Y9[14],X9[15],Y9[15],X9[16],Y9[16],X9[17],Y9[17],X9[18],Y9[18],X9[19],Y9[19],X9[20],Y9[20],X9[21],Y9[21],X9[22],Y9[22],X9[23],Y9[23],X9[24],Y9[24],X9[25],Y9[25],X9[26],Y9[26],X9[27],Y9[27],X9[28],Y9[28],X9[29],Y9[29],X9[30],Y9[30],X9[31],Y9[31],X9[32],Y9[32],X9[33],Y9[33],X9[34],Y9[34],X9[35],Y9[35],X9[36],Y9[36],X9[37],Y9[37],X9[38],Y9[38],X9[39],Y9[39],X9[40],Y9[40],X9[41],Y9[41],X9[42],Y9[42],X9[43],Y9[43],X9[44],Y9[44],X9[45],Y9[45],X9[46],Y9[46],X9[47],Y9[47],X9[48],Y9[48],X9[49],Y9[49],X9[50],Y9[50],X9[51],Y9[51],X9[52],Y9[52],X9[53],Y9[53],X9[54],Y9[54],X9[55],Y9[55],X9[56],Y9[56],X9[57],Y9[57],X9[58],Y9[58],X9[59],Y9[59],X9[60],Y9[60],X9[61],Y9[61],X9[62],Y9[62],X9[63],Y9[63],X9[64],Y9[64],X9[65],Y9[65],X9[66],Y9[66],X9[67],Y9[67],X9[68],Y9[68],X9[69],Y9[69],X9[70],Y9[70],X9[71],Y9[71],X9[72],Y9[72],X9[73],Y9[73],X9[74],Y9[74],X9[75],Y9[75],X9[76],Y9[76],X9[77],Y9[77],X9[78],Y9[78],X9[79],Y9[79],X9[80],Y9[80],X9[81],Y9[81],X9[82],Y9[82],X9[83],Y9[83],X9[84],Y9[84],X9[85],Y9[85],X9[86],Y9[86],X9[87],Y9[87],X9[88],Y9[88],X9[89],Y9[89],X9[90],Y9[90]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21]
0335 REM "IOLIST FOR AR1 - Customer Masterfile
0340 IOLIST D$
0345 REM "IOLIST FOR FM0 - Location Masterfile
0350 IOLIST E$,E[0],E[1]
0360 IOLIST F$,F[0],F[1],F[2],F[3],F[4],F[5],F[6],F[7],F[8],F[9],F[10]
0365 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14],I[15],I[16],I[17],I[18],I[19]
0370 IOLIST G$
0371 IOLIST G2$
0372 IOLIST G1$
0375 REM "IOLISTS FOR AR3 - Salesperson Masterfile
0380 IOLIST C1$,C[0],C[1]
0382 IOLIST H0$
0390 IOLIST R$
0395 IOLIST R0$,R[0],R[1],R[2],R[3],R[4],R[5],R[6],R[7],R[8],R[9],R[10]
0410 IOLIST E0$,E0[0],E0[1],E0[2],E0[3],E0[4],E0[5],E0[6]
0420 IOLIST L$,L[0],L[1]
0430 IOLIST M$,M[0],M[1]
0440 IOLIST F0$,F0[0],F0[1],F0[2],F0[3],F0[4],F0[5],F0[6],F0[7],F0[8],F0[9],F0[10],F0[11],F0[12],F0[13],F0[14],F0[15],F0[16],F0[17],F0[18],F0[19],F0[20],F0[21],F0[22],F0[23],F0[24],F0[25],F0[26],F0[27],F0[28],F0[29],F0[30],F0[31]
0460 IOLIST C0$,C0[0],C0[1],C0[2],C0[3],C0[4],C0[5],C0[6],C0[7],C0[8],C0[9],C0[10],C0[11],C0[12],C0[13],C0[14],C0[15]
0490 IOLIST X3$,X4$,V1$,V3$,V2$,V0$
0500 REM "Files
0505 DIM Z[NUM(X3$(60,3))]; GOSUB 7400
0510 Y$="01O PO6...  02O FS1...  03O FS2...  05O ICF...  06O PO3...  07O FM0...  09O IC1...  10O AR3...  11O FMP...  12O AR4...  13O ZZPARM  "
0520 GOSUB 9750
0525 READ (Z[13],KEY=X3$(9,3)+"I/C")P8$
0530 DIM G9$(200); READ (Z[7],KEY="D"+S$(1,10)+"0001",DOM=0531)G9$
0540 READ (Z[13],KEY=X3$(9,3)+"A/R")P9$
0550 READ (Z[13],KEY=X3$(9,3)+"AR1")P5$
0554 B9=0; CALL "BC2VER",ERR=0560,"","",""; B9=1; REM "B9=1 means use Barcode module
0555 DIM D9$(11),A0$(33),A0[10],Y8[5]; D9$(1)="856",D9$(11,1)=V0$(60,1); CALL "BC2FMZ",X3$,X4$,D9$,A0$,A0{ALL},X9{ALL},X9$,Q1$,Q{ALL},C0; IF C0=0 THEN W3=A0[2],Y8[0]=A0[0],Y8[2]=A0[4],Y8[3]=A0[5]; GOTO 0601 ELSE B9=0; GOTO 0560
0560 READ (Z[13],DOM=0561,KEY="FORMATPL"+V0$(60,1))IOL=0314,IOL=0315; GOTO 0600
0570 CALL "ZZPROM",".4",X3$,0,"Invalid Flexible Format Code: "+V0$(60,1),"","",0; GOTO 9900
0600 W3=Y8[1]
0700 REM "Open Printer
0720 CALL "ZZPRIN",X0$,X3$,Y0$,V3$,Z{ALL},W0$,W1$,W0,W9,W2,W3,W4; ON W4 GOTO 0721,9920
0745 X$=FID(W9); CALL "EF2PRM",ERR=0746,X3$,X4$,X$,E7$,E6$
0800 REM "Alternate Sort Info & total dim"
0805 DIM U0$(4)
0810 ON V0 GOTO 0820,0820,0830,0840
0820 DIM U[3]; U=13,U0=3,U[0]=0,U[1]=1,U[2]=4,U[3]=8,T0=0,U0$="    ",T5$="                "; GOTO 0850
0850 DIM T[T0,T1]
0860 V5=V1+1,V6=V5+V2,V7=V6+V3
0900 REM " Position read"
0905 REM "set key file to read from"
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"00O "+V1$+"  ",Z{ALL},Z0,0; IF Z0>0 THEN GOTO 9900 ELSE U1=Z[0]
0920 V2$=V2$(1,26)
0930 IF LEN(V2$)>=U*2 THEN GOTO 0965
0934 REM "create default 'all' range key
0935 DIM V2$(U*2),V4$(U,"~"); U3=1
0940 FOR U9=1 TO U0; U3=U3+U[U9-1]+U[U9-1]
0950 V2$(U3+U[U9],U[U9])=V4$(1,U[U9])
0955 NEXT U9
0964 REM "Get starting key from range key
0965 DIM V4$(U); U3=1,U4=1
0970 FOR U9=1 TO U0; U3=U3+U[U9-1]+U[U9-1],U4=U4+U[U9-1]
0975 V4$(U4,U[U9])=V2$(U3,U[U9])
0980 NEXT U9
0985 V4$(U,1)=CHR(ASC(V4$(U,1))-1)
0990 READ (U1,KEY=V4$,DOM=0991)
0995 IF Q5=0 THEN GOSUB 6000
0997 IF V0$(61,1)="B" THEN IF Q5=1 THEN READ (Z[4],KEY="",DOM=0998) ELSE GOSUB 5700
1000 REM 
1005 IF V0$(61,1)="B" THEN U7$=KEY(Z[4],END=5000); READ (Z[4]); U$=U7$(1,13)+U7$(24) ELSE U$=KEY(U1,END=5000)
1007 IF U$(1,1)<>"L" THEN GOTO 5000
1008 REM "check key against range info"
1009 U3=1,U2=1
1010 FOR U9=1 TO U0; U2=U2+U[U9-1],U3=U3+U[U9-1]+U[U9-1]
1020 IF U$(U2,U[U9])<V2$(U3,U[U9]) THEN READ (U1,END=5000); EXITTO 1000
1030 IF U$(U2,U[U9])>V2$(U3+U[U9],U[U9]) THEN IF U9=1 THEN EXITTO 5000 ELSE READ (U1,END=5000); EXITTO 1000
1040 NEXT U9
1041 IF V0$(61,1)<>"B" THEN READ (U1)
1042 READ (Z[2],KEY=U$(6,8),ERR=1000); REM "Skip if order header is extracted 4/24/92
1043 IF Q5=1 THEN IF U$(17,1)<>"P" THEN GOTO 1000 ELSE GOSUB 8200
1044 IF Q5=1 AND U$(17,1)="P" THEN REMOVE (Z[1],KEY=U$,DOM=1000); GOTO 1000
1045 REM "IF U9$="" THEN LET U9$=U$
1050 IF U$(2,12)<>U9$(2,12) THEN GOTO 1100
1060 DIM U1$(17); U1$(1,16)=U$; U1$(17,1)="P"; REMOVE (Z[1],KEY=U$,DOM=1061); WRITE (Z[1],KEY=U1$)
1065 IF V0$(61,1)="B" THEN DIM U2$(27); U2$(1,26)=U7$; U2$(27,1)="P"; REMOVE (Z[4],KEY=U7$,DOM=1066); WRITE (Z[4],KEY=U2$)
1070 GOSUB 7500
1080 U9$=U$
1090 GOTO 1000
1100 REM "Get record"
1110 IF U9$="" THEN GOTO 1910
1120 ON V0 GOTO 1150,1150,1130,1140
1150 READ (Z[2],KEY=U9$(6,8),DOM=1080)IOL=0310
1155 A9$="C"+A$(6,10); REM "Set A9$ for use by Ext flex format
1300 REM "Read other data
1320 Y$="07C FM0...  12C AR4...  07O AR1...  12O FSV...  "; GOSUB 9750
1330 DIM D$(250); FIND (Z[7],KEY=A$(6,10),DOM=1331)IOL=0340; IF X9[55]>0 AND POS(" "<>D$(46,10))>0 THEN FIND (Z[7],KEY=D$(46,10),DOM=1331)IOL=0340
1340 IF P5$(64,1)<>"Y" OR P9$(109,1)<>"Y" THEN GOTO 1370
1360 FIND (Z[12],KEY=U9$(6,8),DOM=1361)X$; D$(56,87)=X$(54,87)
1370 Y$="07C AR1...  12C FSV...  07O FM0...  12O AR4...  "; GOSUB 9750
1380 REM 
1500 REM "Print Data
1515 P1=1,P9=1
1520 IF P1>P0 THEN GOTO 1700
1530 GOSUB 5400
1540 GOSUB 5500
1560 GOSUB 2000
1565 T9=0,T8=0,T7=0; DIM T9[10]; GOSUB 2400
1567 L0=0
1568 GOSUB 3500
1570 GOSUB 2900
1580 P1=P1+1
1590 GOTO 1520
1900 P0$="",P1$="",P2$="",P0=1
1910 U9$=U$
1995 IF E8$="END" THEN GOTO 5010 ELSE GOTO 1060
2000 REM "Print 'header' section
2004 DIM P$(Y8[0]*W3)
2005 W=0,L0=1
2006 IF B9=1 THEN F5=0,F5$=""; GOSUB 8300; REM "To print free item headings for this item
2043 REM "A1=1 means test pattern, add logic here to set G0$ to vendor, plant address if needed for DS warehouse printing.
2044 G0$=G9$
2045 IF A1<>1 THEN READ (Z[7],KEY="D"+S$(1,10)+U9$(2,4),DOM=2046)G0$
2050 GOSUB 2100
2060 GOSUB 2200
2070 GOSUB 2300
2090 RETURN 
2100 REM "Print top section, incl G0$,if needed, date, order#, cus# and cus p/o #
2104 G9=0; REM "Set G9 = 1 to print G0$(dist address) in upper left corner
2110 REM IF G9=1 THEN LET Y5$(3)=G0$(16,35)
2115 CALL "ZZDISP","DX",A$(16,6),"",X3$,F5$,"",0,0,X4$; F5=1; GOSUB 8300; F5$=F5$(1,6)+F5$(9),F5=32; GOSUB 8300; F5=33; GOSUB 8300
2120 CALL "ZZDISP","AX",A$(118,8),"O/P",X3$,F5$,"",0,0,X4$; F5=2; GOSUB 8300; F5=35; GOSUB 8300; F5=41; GOSUB 8300
2125 CALL "ZZDISP","AX",A$(6,10),"A/R",X3$,F5$,"",0,0,X4$; F5=3; GOSUB 8300
2128 F5=90,F5$=D$(11,35); GOSUB 8300
2130 F5=4,F5$=A$(28,15); GOSUB 8300
2132 F5=31,F5$=STR(P9); GOSUB 8300; IF P9>1 THEN F5=29,F5$="Page: "+STR(P9); GOSUB 8300
2134 IF A$(48,1)="Y" THEN F5=30,F5$="*Backorder*"; GOSUB 8300
2140 F5=26,F6=1,F5$=G0$(51,30); GOSUB 8450
2145 A5$=G0$(111,27); GOSUB 8400; IF POS(" "<>G0$(81,30))=0 THEN A3$=A6$,A4$="" ELSE A3$=G0$(81,30),A4$=A6$
2150 F5=26,F6=2,F5$=A3$; GOSUB 8450
2155 F5=26,F6=3,F5$=A4$; GOSUB 8450
2160 IF LEN(A$)<200 THEN A$=A$+" "; GOTO 2160 ELSE F5=78,F5$=A$(169,3); GOSUB 8300; F5=79,F5$=A$(172,3); GOSUB 8300; IF POS(" "<>A$(175,6))>0 THEN F5=80,F5$=FND$(A$(175,6)); GOSUB 8300
2190 RETURN 
2200 REM "Print Sold to and Shipto Addresses
2205 REM "Get ship to name(5600), then compare shipto address to soldto address and decide if sold needs to be printed, S9=1 means yes to print soldto, S9=0 means no
2206 DIM L0$(141)
2207 GOSUB 5600
2210 IF X9[42]=0 AND D$(11,35)+D$(56,87)=E9$(1,35)+E$(46,87) THEN S9=0 ELSE S9=1
2211 IF S9=0 THEN GOTO 2240
2212 IF X9$(5,1)<>"S" THEN F5=5,F6=-1,F5$="SHIP TO:"; GOSUB 8450
2213 IF X9$(72,1)<>"S" THEN F5=72,F6=-1,F5$="SHIP TO:"; GOSUB 8450
2214 IF X9$(25,1)<>"S" THEN F5=25,F6=-1,F5$="SOLD TO:"; GOSUB 8450
2215 DIM L0$(141)
2220 L0$(1,35)=D$(11,35),L0$(36,35)=D$(56,30)
2225 A5$=D$(116,27); GOSUB 8400
2226 REM LET F5=89,F5$=A8$; GOSUB 08300
2230 IF POS(" "<>D$(86,30))=0 THEN L0$(71,35)=A6$ ELSE L0$(71,35)=D$(86,30),L0$(106,35)=A6$
2235 IF FNS$(A$(129,20))>"" THEN F5=69,F5$=A$(129,20); IF X9$(69,1)="A" THEN F5$="Attn: "+F5$; GOSUB 8300 ELSE GOSUB 8300
2240 REM "Setup Ship to
2245 DIM L1$(210); L1=0
2249 IF POS(" "<>E$(225,35))=0 THEN E$(225,35)=D$(11,35)
2250 L1$(L1*35+1,35)=E$(225,35),L1=L1+1
2255 IF POS(" "<>E$(16,30))<>0 THEN L1$(L1*35+1,35)="Attn: "+E$(16,30),L1=L1+1; IF POS(X3$(9,3)="112")>0 THEN L1$((L1-1)*35+1,35)=E$(16,30)
2260 L1$(L1*35+1,35)=E$(46,30),L1=L1+1
2265 IF POS(" "<>E$(76,30))<>0 THEN L1$(L1*35+1,35)=E$(76,30),L1=L1+1
2270 A5$=E$(106,27); GOSUB 8400; L1$(L1*35+1,35)=A6$
2273 L1$(176,35)=E$(175,35)
2274 REM "Now print out the setup strings
2275 FOR L9=0 TO 4
2276 IF A1<>0 THEN L0$=L1$
2280 F5=5,F6=L9,F5$=L1$(L9*35+1,35); GOSUB 8450; F5=72; GOSUB 8450; IF S9=1 THEN IF L9<>4 THEN F5=25,F6=L9,F5$=L0$(L9*35+1,35); GOSUB 8450
2281 F5=43,F6=L9,F5$=L1$(L9*35+1,35); GOSUB 8450; IF L9<>4 THEN F5=42,F6=L9,F5$=L0$(L9*35+1,35); GOSUB 8450
2282 NEXT L9
2283 REM LET F5=90,F5$=A8$; GOSUB 08300
2285 F5=6,F5$=L1$(176,35); GOSUB 8300
2290 GOSUB 2500
2295 RETURN 
2300 REM "Print Ribbon Line
2310 CALL "ZZDISP","DX",A$(55,6),"",X3$,F5$,"",0,0,X4$; F5=7; GOSUB 8300
2315 DIM R$(170); FIND (Z[10],KEY=A$(93,4),DOM=2316)IOL=0390
2316 IF A1<>0 THEN R$(149,10)="XXXXXXXXXX"
2317 F5=8,F5$=R$(149,10); GOSUB 8300; F5=34,F5$=A$(93,4); GOSUB 8300
2320 REM 
2325 DIM X$(30); FIND (Z[11],KEY="H"+E$(134,1),DOM=2326)X$
2326 IF A1<>0 THEN X$(3,15)="XXXXXXXXXXXXXXX"
2329 REM "Block only big enough to print 12x
2330 F5=9,F5$=X$(3,15); GOSUB 8300; REM " Also had F5$=F5$(1,12)
2336 DIM X$(30); IF A1<>0 THEN X$(3,15)="XXXXXXXXXXXXXX" ELSE X$(3,15)=E$(210,15)
2338 F5=59; IF POS(X3$(9,3)="145",3)<>0 THEN F5$=B$(19,4); GOSUB 8300 ELSE F5$=E$(12,4); GOSUB 8300
2340 F5=11,F5$=X$(3,15); GOSUB 8300
2341 IF POS(X3$(9,3)="145",3)<>0 THEN FIND (Z[7],KEY="C"+D$(1,10)+B$(19,4),DOM=2342)E2$; F5=89,F5$=E2$(16,30); GOSUB 8300
2350 DIM X$(30); FIND (Z[11],KEY="F"+E$(133,1),DOM=2351)X$
2355 IF A1<>0 THEN X$(3,15)="XXXXXXXXXXXXXXX"
2360 F5=10,F5$=X$(3,15); GOSUB 8300
2370 IF POS(" "<>D$(205,14))>0 THEN CALL "ZZDISP","POX",D$(205,14),"",X3$,F5$,"",0,0,X4$; F5=56; GOSUB 8300
2380 IF POS(" "<>D$(143,12))>0 THEN CALL "ZZDISP","POX",D$(143,12),"",X3$,F5$,"",0,0,X4$; F5=57; GOSUB 8300
2390 RETURN 
2400 REM "Print line information
2403 I0=(Y8[2]-1)*W3,I1=0,L0=0
2404 IF A1=1 THEN FOR I3=1 TO 2; GOSUB 7700; NEXT I3; GOTO 2490
2405 I1=0,S0$="",B1=0
2406 IF C1>2 THEN GOTO 2450
2407 P7$=P0$
2408 IF P9$(114,1)="Y" THEN CALL "AR2EBJ",X3$,X4$,2,D$(1,10),F5$; IF F5$>"" THEN F5=12,I1=I1+1; GOSUB 8350; L0=L0+1,I0=I0+W3*X9[47]+F4*W3,F4=0
2410 IF LEN(P7$)=0 THEN GOTO 2490
2420 READ (Z[3],KEY=A$(118,8)+P7$(11,3))IOL=0320; I1=I1+1
2427 GOSUB 7650
2430 GOSUB 7850
2440 GOSUB 7700
2445 IF LEN(P7$)>13 THEN P7$=P7$(14); GOTO 2410 ELSE P7$=""; GOTO 2490
2450 REM "Print lines from P2$ for spec instr."
2455 P4$=P2$(1,5)
2460 READ (Z[6],KEY=A$(118,8)+" "+P2$(6,4),DOM=2490)IOL=0350
2465 READ (Z[3],KEY=E$(166,8)+E$(7,3),DOM=2485)IOL=0320
2470 B1=E[0],F6$="*"; GOSUB 7700; F6$=""
2475 READ (Z[3],KEY=E$(166,8)+STR(NUM(E$(7,3))+1:"000"),DOM=2476)IOL=0320
2480 REM IF B$(155,1)<>"M" THEN GOTO 2485
2485 P2$=P2$(10); IF P2$<>"" THEN IF P2$(1,5)=P4$ THEN GOTO 2460
2490 RETURN 
2500 REM "Vendor Name/Address from 1st P/O matching S/O#
2510 IF X9[77]=0 THEN GOTO 2590
2520 Y$="12C AR4...  12O PO1...  "
2525 GOSUB 9750
2530 READ (Z[12],KEY=A$(118,8),DOM=2531)*
2535 READ (Z[12],END=2580)X$
2540 IF A$(118,8)<>X$(297,8) THEN GOTO 2580 ELSE IF X$(173,1)="S" THEN GOTO 2535
2545 F5=77,F6=0,F5$=X$(21,35); GOSUB 8450
2550 IF POS(" "<>X$(56,30))>0 THEN F5$=X$(56,30),F6=F6+1; GOSUB 8450
2555 IF POS(" "<>X$(86,30))>0 THEN F5$=X$(86,30),F6=F6+1; GOSUB 8450
2560 IF POS(" "<>X$(116,30))>0 THEN F5$=X$(116,30),F6=F6+1; GOSUB 8450
2565 A5$=X$(146,27); GOSUB 8400; F5$=A6$,F6=F6+1; GOSUB 8450
2580 Y$="12C PO1...  12O AR4...  "
2585 GOSUB 9750
2590 RETURN 
2900 REM "Send P$ to printer
2905 IF B9=1 THEN DIM Q[1]; CALL "BC2FMX",X3$,X4$,P$,O$,W9,Z[13],A0$,A0{ALL},P6$,Q0$,Q{ALL},Z0; IF Z0=1 THEN GOTO 5000 ELSE GOTO 2933; REM "Use Barcodemodule to print
2910 FOR I=0 TO INT(LEN(P$)/W3)-1
2915 IF V3$(2,2)="T " THEN IF MOD(I+1,22)=0 THEN CALL "ZZPROM",".5",X3$,Z0,"","","",0; IF Z0=1 THEN GOTO 9900
2920 Y5$=P$(I*W3+1,W3); GOSUB 7300
2930 NEXT I
2933 IF E7$="" THEN GOTO 2935 ELSE GOSUB 4000; CALL "EF2FAX",X3$,X4$,E7$,E6$,W9,X$,J$; REM "Setup fax #s and Tag 2s, then call fax routine
2935 P9=P9+1
2940 RETURN 
3100 REM "Subtotal logic goes here, see -ZREPS
3180 RETURN 
3280 RETURN 
3380 RETURN 
3500 REM "End of document routine"
3505 REM "Message of the Day
3510 F5=40,F5$=V0$(81,40),F6=0; GOSUB 8450
3520 F5=40,F5$=V0$(121,40),F6=1; GOSUB 8450
3530 F5=39,F5$=STR(T9:Z0$); GOSUB 8300
3535 F5=52,F5$=STR(T8:Z0$); GOSUB 8300
3540 J0=T9-T8,F5=50; F5$=STR(J0:Z0$); GOSUB 8300
3550 IF T9<>0 THEN F5=51; F5$=STR(J0*100/T9:Z6$); GOSUB 8300
3560 F5=54,F5$=STR(T7:Z5$); GOSUB 8300
3565 F5=67,F5$=STR(T9[0]:Z1$); GOSUB 8300
3570 F5=68,F5$=STR(T9[1]:Z1$); GOSUB 8300
3590 RETURN 
3600 REM "Out of Stock for the Bin Location where this lot resides?
3610 DIM L9[5]; L9$=E0$(100,10)
3620 READ (Z[5],KEY=K8$,DOM=3621)
3630 READ (Z[5],END=3680)IOL=0410
3640 IF K$(1,LEN(K8$))<>E0$(1,LEN(K8$)) THEN GOTO 3680
3650 IF K$<>E0$(1,LEN(K$)) THEN IF E0$(100,10)<>L9$ OR POS(" "<>E0$(110,11))>0 THEN GOTO 3630
3655 IF E0[2]=0 THEN E0[2]=1
3660 L9[0]=L9[0]+E0[4]*E0[3]*E0[2]
3670 GOTO 3630
3680 READ (Z[5],KEY=K$)IOL=0410
3690 L9[2]=E0[2]; IF L9[2]=0 THEN L9[2]=1
3700 L9[1]=E0[4]*E0[3]*L9[2]
3705 F5$=""; IF B[8]<>0 THEN F5$="B"
3710 IF L9[0]=L9[1] THEN F5$=F5$+"*"
3720 F5=16; GOSUB 8350
3740 RETURN 
3790 REM "Field 17
3795 IF X9$(17,1)="U" THEN F5$=F5$+" "+E0$(121,4)
3800 REM "Field 17 'cont. see 3790 for lot entry point
3810 IF POS(X9$(F5,1)="@")>0 THEN F5$=F5$+" "+X9$(F5,1)
3820 GOSUB 8350
3840 RETURN 
4000 REM "Setup Fax numbers to call
4005 DIM X$(4*51)
4010 CALL "ZZDISP","AX",D$(1,10),"A/R",X3$,J$,"",0,0,X4$; X$(1)="C"+D$(143,12),X$(27)="C:"+J$; REM "Customer
4015 X$(52)="W"+G0$(138,12),X$(78)="W:"+G0$(12,4); REM "Distributer Whse
4020 IF LEN(E1$)>=150 THEN CALL "ZZDISP","AX",E1$(2,10),"A/R",X3$,J$,"",0,0,X4$; X$(103)="T"+E1$(138,12),X$(129)="T:"+J$+"-"+E1$(12,4); REM "Ship to
4025 X$(154)="S"+R$(127,12),X$(180,25)="S:"+A$(93,4)+"-"+R$(5,35); REM "Salesperson
4035 IF J8=1 THEN FOR J7=0 TO 3; X$(2+J7*51,25)=E7$(150,12); NEXT J7; REM "If alignment pattern, replace with align pat fax # from parameters
4040 CALL "ZZDISP","AX",A$(118,8),"O/P",X3$,J$,"",0,0,X4$; J$="856:"+J$; REM "Tag 1, document id for fax
4045 RETURN 
5000 REM "End of Print
5005 IF E8$<>"END" THEN E8$="END"; GOTO 1100
5010 IF Q5=1 THEN GOTO 9920
5020 IF W8=0 THEN GOTO 5200
5030 T0$="END"
5040 IF V1>0 THEN GOSUB 3120
5050 T=0,T$="Report"; GOSUB 7000
5200 REM "
5270 Y$="09C AR3...  10C FMS...  11C FMU...  "
5280 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
5291 GOTO 9900
5300 REM "Remove printed P/S's
5304 IF V8$="A" THEN GOTO 5330
5305 IF V3$(2,2)="A " THEN PRINT 'EA',
5310 CALL "ZZPROM",".Y",X3$,Z,"Did all of the packing lists print correctly?","","",0
5320 ON Z GOTO 5330,5340
5330 GOSUB 5350; GOTO 5345
5345 RETURN 
5350 REM "Do remove
5354 PRINT @(0,19),'CE',
5360 Q5=1; GOTO 0900
5390 RETURN 
5400 REM "Set code C1 for type of P/O
5410 IF P0=1 THEN C1=0
5412 IF P1=1 THEN P1=P1+1
5414 REM "P0 is > 1
5415 ON P1 GOTO 5445,5416,5430,5440
5416 IF P0$<>"" THEN C1=2; GOTO 5445
5420 C1=1; GOTO 5445
5425 REM "if general inst needed C1=2 else drop through to C1=3
5430 IF P0$<>"" THEN C1=2; GOTO 5445
5440 C1=3
5445 RETURN 
5500 REM "Get proper address, C1=1 taken care of in 2300's
5505 DIM E$(260)
5510 ON C1 GOTO 5520,5590,5520,5550
5530 READ (Z[6],KEY=A$(118,8)+"     ",DOM=5540)IOL=0350; GOTO 5590
5535 REM "If no general inst., use customer address
5540 E$(16,30)=D$(165,20),E$(46,87)=D$(56,87); GOTO 5590
5550 REM "Read in special shipping record
5555 IF LEN(P2$)=0 THEN GOTO 5580
5560 READ (Z[6],KEY=A$(118,8)+" "+P2$(6,4),DOM=5580)IOL=0350
5570 GOTO 5590
5580 REM "Error"
5585 EXITTO 1580
5590 RETURN 
5600 REM "Get name to print on shipto
5605 IF E$(11,1)="C" THEN GOSUB 5650
5610 IF LEN(E$)>=259 AND POS(" "<>E$(259))<>0 THEN E9$=E$(225,35); GOTO 5645 ELSE E9$=D$(11,35)
5615 ON POS(E$(11,1)="CPD") GOTO 5645,5620,5625,5630
5620 FIND (Z[7],KEY=E$(11,1)+D$(1,10)+E$(12,4),DOM=5645)E1$; GOTO 5635
5625 FIND (Z[7],KEY=E$(11,1)+A$(7,10)+E$(12,4),DOM=5645)E1$; GOTO 5635
5630 FIND (Z[7],KEY=E$(11,1)+Y6$(1,10)+E$(12,4),DOM=5645)E1$; GOTO 5635
5635 E9$=E1$(16,35)
5645 RETURN 
5650 REM "Fill in from FM0 Customer Record
5660 FIND (Z[7],KEY=E$(11,1)+D$(1,10)+E$(12,4),DOM=5690)F5$
5670 F5=71,F5$=F5$(214,9); GOSUB 8300
5690 RETURN 
5700 REM "Setup sort file for bin order printing
5704 K1$="Bin order workfile for pick ticket printing"
5705 CALL "ZZ2SRT",X3$,X4$,Z[13],Z[1],27,K1$,K0,"NN"; IF K0=2 THEN GOTO 9900
5710 Y$="04O "+K1$+" "; GOSUB 9750
5715 U$=KEY(U1,END=5750)
5720 IF U$(1,1)<>"L" THEN GOTO 5750
5725 U3=1,U2=1
5730 FOR U9=1 TO U0; U2=U2+U[U9-1],U3=U3+U[U9-1]+U[U9-1]
5735 IF U$(U2,U[U9])<V2$(U3,U[U9]) THEN READ (U1,END=5750); EXITTO 5715
5740 IF U$(U2,U[U9])>V2$(U3+U[U9],U[U9]) THEN IF U=1 THEN EXITTO 5750 ELSE READ (U1,END=5750); EXITTO 5715
5745 NEXT U9
5746 READ (U1); READ (Z[2],KEY=U$(6,8),ERR=5715); REM "Skip if order header is extracted.
5748 GOSUB 5800
5749 GOTO 5715
5790 READ (Z[4],KEY="",DOM=5791)
5795 RETURN 
5800 REM "
5801 REM "write out keys
5803 PRINT @(25,22),U$(2,4)," ",U$(6,8)," ",U$(14,3),
5804 K5$=""
5805 READ (Z[3],KEY=U$(6,8)+U$(14,3),DOM=5895)IOL=0320
5810 IF B$(18,1)<>"Y" AND B$(2,1)="Y" THEN GOTO 5830; REM "skip to lots unless it was special shipped line and then we don't worry about bin number order on lots, because all of the lots are going to the same place.
5815 IF B$(155,1)="C" THEN K8$=B$(161,10)+B$(19,10) ELSE DIM K8$(20); K8$(11)=B$(19,10)
5817 K8$=K8$+B$(10,4)
5818 DIM R0$(50),R[10]
5820 FIND (Z[9],KEY=K8$,DOM=5821)IOL=0395
5825 K5$=R0$(35,10); GOTO 5880
5830 REM "Cruise thru lots
5835 DIM E0$(215),E0[6]
5837 K8$=B$(161,10)+B$(19,10)+B$(10,4)
5840 READ (Z[5],KEY=K8$,DOM=5841)
5845 K7$=KEY(Z[5],END=5880)
5850 IF K7$(1,LEN(K8$))<>K8$ THEN GOTO 5880
5855 READ (Z[5],KEY=K7$)IOL=0410
5860 IF E0$(110,11)<>B$(147,8)+B$(6,3) THEN GOTO 5845
5865 IF POS(E0$(100,10)=K5$,10)=0 THEN K5$=K5$+E0$(100,10)
5870 GOTO 5845
5884 REM "Write out keys based on bin #s in K5$
5885 IF K5$<>"" THEN WRITE (Z[4],KEY=U$(1,13)+K5$(1,10)+U$(14)); K5$=K5$(11); GOTO 5885
5895 RETURN 
6000 REM "Print alignment pattern?
6004 REM "A1 <> 0 means doing an alignment pattern
6005 A1=0
6006 IF V8$="A" THEN GOTO 6090
6010 IF V3$(2,2)="A " THEN PRINT 'EA',
6012 J8=0
6015 CALL "ZZPROM","R4",X3$,Z,"","","",X0
6017 IF Z<2 AND V3$(2,2)="A " THEN PRINT 'BA',
6020 ON Z GOTO 6080,6021,9900
6022 J8=1
6030 GOSUB 6100
6040 GOSUB 6200
6050 GOTO 6010
6080 A1=0
6090 RETURN 
6100 REM "Setup test data"
6104 A1=1
6105 C=9,C0=1
6108 DIM X$(40,"X")
6110 DIM A$(169); A$(118,8)="99999999",A$(16,6)="J90101",A$(28,15)="999999999999999",A$(6,10)="9999999999",A$(93,4)="9999",A$(55,6)="U90101"
6115 DIM D$(397); D$(11,35)=X$,D$(56,30)=X$,D$(86,30)=X$,D$(116,18)=X$,D$(134,9)="999999999"
6125 DIM B$(205); B$(50,40)=X$,B$(32,18)=X$,B1=99999999
6127 I0$=B$
6128 IF P8$(44,1)="Y" THEN B$(2,1)="Y"
6130 DIM E$(260); E$(16,90)=X$+X$+X$,E$(106,18)=X$,E$(124,9)="999999999",E$(210,15)=X$,E$(225,35)=X$,E$(175,35)=X$
6135 DIM D0$(186); D0$(29,2)="99"
6190 RETURN 
6200 REM " Print align. pattern
6205 L0=1; DIM T9[10]
6210 GOSUB 2000
6215 GOSUB 2400
6240 P0=1,L0=1; GOSUB 2900
6290 RETURN 
6300 REM "Cost Codes
6305 IF A1<>0 THEN GOTO 6340
6310 IF X9[84]>0 THEN CALL "ZZDISP","AX",B$(205,9),"FMC",X3$,F5$,"",0,0,X4$; F5=84; GOSUB 8350
6320 F5=85,F5$=B$(209,5); GOSUB 8350
6340 RETURN 
6400 REM " Print Supplier Item number
6410 IF X9[87]=0 OR POS(B$(155,1)="IC")=0 OR (B$(2,1)="Y" AND X$="") THEN GOTO 6490
6415 DIM F5$(100); F5$(1,20)=B$(161,10)+B$(19,10),F5$(82,14)=X$
6420 Y$="07C FM0...  12C AR4...  07O IC0...  12O IC2...  "; GOSUB 9750
6425 IF X$="" THEN READ (Z[7],KEY=B$(161,10)+B$(19,10),DOM=6460)F5$
6430 READ (Z[12],KEY=F5$(1,20)+F5$(82,14),DOM=6460)F5$
6440 F5$=F5$(35,20),F5=87
6450 GOSUB 8350
6460 F5$="",X$=""
6480 Y$="07C IC0...  12C IC2...  07O FM0...  12O AR4...  "; GOSUB 9750
6490 RETURN 
6500 REM " P/O CODE
6505 IF POS(X3$(9,3)="134")>0 THEN IF B$(155,1)<>"N" OR A$(47,1)<>" " THEN GOTO 6540
6510 F5=88; IF X9$(F5,1)<>"F" THEN F5$=B$(9,1); GOTO 6530
6520 IF B$(9,1)=" " THEN F5$="" ELSE CALL "ZZDISP","AX",A$(118,8)+B$(9,1),"P/O",X3$,F5$,"",0,0,X4$
6530 GOSUB 8350
6540 RETURN 
7000 REM "Totals logic
7001 IF T=T0 THEN IF T[T0,0]<2 THEN GOSUB 7300; GOTO 7100
7002 IF W+3>W0 THEN GOSUB 6000
7010 Y5$(1)=T3$(1,T0+1-T)+" "
7015 IF T$<>"" THEN Y5$(T0+2-T)=""+Q2$+" ("+STR(T[T,0]:"0")+"):"
7090 IF T0$="END" THEN IF T=0 THEN GOSUB 7200; GOTO 7190
7095 GOSUB 7300
7100 REM "Accumulate sub totals
7110 IF T=0 THEN GOTO 7190
7120 FOR X=0 TO T1
7130 T[T-1,X]=T[T-1,X]+T[T,X],T[T,X]=0
7140 NEXT X
7190 RETURN 
7200 REM "Elapsed time routine"
7205 GOSUB 7300; Y5$(1)=Q1$+": "+STR(T[0,0]); GOSUB 7300
7210 PRECISION 14; T2=TIM-T2
7220 T4$=STR(INT(T2):"##0")
7230 T3=INT(FPT(T2)*3600),T4=MOD(T3,60),T3=INT(T3/60)
7240 T3=T3/60
7250 T4$=T4$+":"+STR(T3:"00")+":"+STR(T4:"00")
7260 Y5$(1)=Q3$+": "+T4$; GOSUB 7300
7280 PRECISION 2
7290 RETURN 
7300 REM "Output line Y5$ to output device
7310 W=W+1
7330 IF Y5$=Y6$ THEN PRINT (W9)'LF', ELSE PRINT (W9)Y5$; DIM Y5$(W3)
7395 RETURN 
7400 REM "Read report selection parameters"
7405 CLOSE (13); OPEN (13)"ZZP"; Z[12]=13; GOTO 7430
7410 Z$="12O ZZP     "
7420 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 7421,9900
7430 Y3$=X3$(1,6),Y4$=X3$(178,7)
7450 READ (Z[12],KEY=X3$(1,8),DOM=7451)IOL=0490
7460 V2$="LL"+V2$
7480 X3$(178,7)=Y4$,V0=NUM(V0$(71,1)),W3$=V0$(19,POS("   "=V0$(19,40)+"   ")-1)
7482 IF V1$(1,3)="???" THEN V8$="A",V7$=V1$(4,2); IF V0$(71,1)="1" THEN V1$="PO6   "
7485 FOR U1=1 TO LEN(V1$); IF V1$(U1,1)=" " THEN V1$(U1,1)="."; NEXT U1 ELSE NEXT U1
7486 CLOSE (14)
7490 RETURN 
7500 REM "Run lines count quantity, then run special instr subtracting quantity
7501 REM "P0=# of P/O's to print, at least 1. Line # in P0$, quantitys in P1$., keys to recs in P2$
7503 IF P0=0 THEN P0=1
7510 READ (Z[3],KEY=U$(6,11),DOM=7590)IOL=0320
7515 IF B$(155,1)="M" THEN B[0]=100
7517 IF B$(155,1)="S" AND B[0]=0 AND (B[6]<>0 OR B[7]<>0) THEN B[0]=1
7524 REM "ADD THE AMOUNT TO THE LIST OF LINES TO DO, IF THE OPEN QTY IS NOT ZERO OR If inv item and both the open qty and original qty are zero (it is not a line that had a qty that has already been shipped (b(0)=0 & b(10)<>0))
7525 IF B[0]<>0 OR (POS(B$(155,1)="IC")<>0 AND B[0]=0 AND B[10]=0) THEN N0=B[0],N$=B$(6,3); GOSUB 7800
7530 REM "Now subtract special inst. off
7535 DIM E$(260),E[1]; READ (Z[6],KEY=U$(6,8)+" "+U$(14,3),DOM=7536)
7537 K$=KEY(Z[6],END=7580)
7540 READ (Z[6])IOL=0350
7545 IF K$(1,8)+K$(10,3)<>U$(6,11) THEN GOTO 7580
7548 IF E$(155,1)="M" THEN E[0]=1
7550 N$=E$(7,3),N0=-E[0]; GOSUB 7800; GOSUB 7900
7560 GOTO 7537
7575 REM " if P0$='' no need for general inst., if P0>1 add 1 for all page"
7580 GOSUB 7950
7583 IF P0$="" THEN P0=P0-1
7585 IF P0>1 THEN P0=P0+1
7590 RETURN 
7600 REM "Starting/Ending Number
7610 F5$=""
7620 IF POS(" "<>X$(1,9))>0 THEN F5$=FNS$(FNR$(X$(1,9)))
7630 IF POS(" "<>X$(10,9))>0 THEN F5$=F5$+"/"+FNS$(FNR$(X$(10,9)))
7635 IF F5$="" AND X9$(14,1)="B" THEN F5$=S$(1,19)
7640 IF F5$<>"" THEN F5=14; GOSUB 8350
7645 RETURN 
7650 REM "Read IC0 - 3.5
7652 IF X9[67]=0 AND X9[68]=0 AND X9[70]=0 THEN GOTO 7690
7655 Y$="12C AR4...  12O IC0...  "; GOSUB 9700
7660 DIM I[19]; FIND (Z[12],KEY=B$(161,10)+B$(19,10),DOM=7661)IOL=0365
7665 Y$="12C IC0...  12O AR4...  "; GOSUB 9700; GOTO 7690
7675 REM "Carton weight - 3.5
7680 T9[0]=T9[0]+T9[10]; REM "Cartons in T9(10)
7682 IF I[19]=0 THEN GOTO 7690
7684 T9[8]=INT(T9[9]*I[16]/I[19]),T9[1]=T9[1]+T9[8]; REM "T9(9)=Qty in eachs, T9(8)=Extended weight
7686 F5=70,F5$=STR(T9[8]:Z1$); GOSUB 8350
7690 RETURN 
7700 REM "Order detail
7705 F4=0
7710 IF L0>=Y8[3] THEN GOSUB 2900; GOSUB 2000; I0=(Y8[2]-1)*W3
7725 IF POS(B$(155,1)="IC")<>0 THEN GOSUB 8055
7730 GOSUB 8500
7732 GOSUB 8700
7735 U5$=B$(124,4); GOSUB 8550
7745 IF B1<>0 AND POS(B$(155,1)="M")=0 THEN F5=21,F5$=FNQ$(B1,Z2$); GOSUB 8350
7750 IF X9[75]>0 AND B[12]>0 AND B1<>0 THEN F5=75; PRECISION 6; F5$=STR(INT((B1+B[12]-1)/B[12]):Z3$); PRECISION 2; GOSUB 8350
7755 GOSUB 6500
7775 X$=B$(104,9)+B$(189,9); GOSUB 7600; GOSUB 6300
7779 REM "If lots then goto 8100 to finish this line and print the rest
7780 IF POS(B$(155,1)="M")=0 THEN IF B$(2,1)="Y" THEN GOTO 8100 ELSE GOSUB 8600
7785 L0=L0+1,I0=I0+W3*X9[47]+F4*W3,F4=0
7787 IF F9>0 THEN F5=73,F5$=STR(SGN(B[7]):M0$); GOSUB 8350; F5=74,F5$=STR(F9:Z3$),F9=0; GOSUB 8350; GOTO 7785; REM "When fld#73 prints possible runts when fld 36 is set
7790 RETURN 
7800 REM "Add an amount(N0=amount,N$=line #) from P0$ and P1$
7801 REM "if amount left is 0 remove line from P0$ and P1$
7807 IF V0$(61,1)="B" THEN N2$=U7$(14,10)+N$ ELSE N2$="          "+N$
7810 N1=POS(N2$=P0$,13)
7815 IF N1=0 THEN P0$=P0$+N2$,P1$=P1$+STR(N0:M4$); GOTO 7840
7820 N2=INT((N1-1)/13)*M4+1,N3=N0+NUM(P1$(N2,M4))
7825 IF N3<>0 THEN P1$(N2,M4)=STR(N3:M4$); GOTO 7840
7830 ON N1 GOTO 7831,7831,7836
7831 IF LEN(P0$)=13 THEN P0$="",P1$="" ELSE P0$=P0$(14),P1$=P1$(M4+1)
7832 GOTO 7840
7836 P0$=P0$(1,N1-1)+P0$(N1+13),P1$=P1$(1,N2-1)+P1$(N2+M4)
7840 RETURN 
7850 REM "Return B1 with value of line or 0
7860 N1=POS(P7$(1,13)=P0$,13)
7865 IF N1=0 THEN B1=0; GOTO 7890
7870 B1=NUM(P1$(INT((N1-1)/13)*M4+1,M4))
7890 RETURN 
7900 REM "Sort E$(7,4) into P2$ based on E$(11,5) and inc P0 count if neccessary
7905 P3$=E$(11,5)+E$(7,4)
7910 IF P2$="" THEN P2$=P3$; GOTO 7945
7915 N4=POS(E$(11,5)=P2$,9); IF N4=0 THEN N4=1
7920 IF P2$(N4,9)>P3$ THEN IF N4=1 THEN P2$=P3$+P2$; GOTO 7945 ELSE P2$=P2$(1,N4-1)+P3$+P2$(N4); GOTO 7945
7930 N4=N4+9; IF N4<LEN(P2$) THEN GOTO 7920 ELSE P2$=P2$+P3$; GOTO 7945
7945 RETURN 
7950 REM "Calculate # of special PO'S
7960 P6$="",N4=1
7965 IF N4>LEN(P2$) THEN GOTO 7990
7970 IF P2$(N4,5)<>P6$ THEN P0=P0+1,P6$=P2$(N4,5)
7975 N4=N4+9; GOTO 7965
7990 RETURN 
8000 REM "Build desc from H8$
8005 IF A1=1 THEN H9$=""; GOTO 8050
8010 H9$=FNS$(H8$(32,8)); IF H9$<>"" THEN H9$=H9$+QUO; IF POS(" "<>H8$(40,8))<>0 THEN H9$=H9$+"x"
8020 H9$=H9$+FNS$(H8$(40,8)); IF H9$<>"" THEN IF POS(" "<>H8$(40,8))<>0 THEN H9$=H9$+QUO+" " ELSE H9$=H9$+" "
8030 IF NUM(H8$(48,2))<>0 THEN H9$=H9$+H8$(48,2)+" Ply "
8040 H8$=""
8050 RETURN 
8055 REM "Print inventory status flag(s)
8056 F7$=""; IF B[8]<>0 THEN F5=83,F5$="B"; GOSUB 8350
8057 IF X9$(16,1)="B" AND B$(2,1)="Y" THEN GOTO 8085
8060 IF B$(155,1)="C" THEN K8$=B$(161,10)+B$(19,10) ELSE DIM K8$(20); K8$(11)=B$(19,10)
8062 K8$=K8$+B$(10,4)
8065 DIM R0$(50),R[10]
8070 FIND (Z[9],KEY=K8$,DOM=8071)IOL=0395
8075 R0=R[3]+R[4]-R[5]+R[6]-R[7]
8077 IF R0<>0 AND X9[81]<>0 AND (B$(10,1)="9" OR POS(X3$(9,3)="101122",3)>0) THEN F5=81,J0=R0; GOSUB 8842
8078 IF B$(2,1)="Y" AND X9[86]<>0 THEN CALL "IC2LCA",X3$,X4$,"C"+X9$(86,1),0,K8$,X,0,0,0,"",0; F5=86,F5$=STR(X:Z3$); GOSUB 8350
8080 IF R0<=0 THEN F7$="**" ELSE IF R[10]>0 AND R0<=R[10] THEN F7$="*" ELSE F7$=""
8082 IF X9$(16,1)<>"B" THEN GOTO 8085 ELSE IF F7$="*" THEN F7$=""
8083 IF B[8]<>0 THEN F7$="B"+F7$; IF LEN(F7$)>2 THEN F7$=F7$(1,2)
8085 IF F7$<>"" THEN F5=16,F5$=F7$; GOSUB 8350
8089 REM "If not lots then print bin location from here
8090 IF B$(2,1)<>"Y" THEN F5=15,F5$=R0$(35,10); GOSUB 8350
8095 RETURN 
8100 REM "Print lot stuff
8104 IF A1<>0 THEN DIM E0$(215,"X"),E0[6],K8$(32,"X"); E0$(50,6)="J90101"; GOTO 8139
8105 DIM E0$(215),E0[6]
8107 K8$=B$(161,10)+B$(19,10)+B$(10,4),F9$=""
8110 READ (Z[5],KEY=K8$,DOM=8111)
8120 K$=KEY(Z[5],END=8185)
8125 IF K$(1,LEN(K8$))<>K8$ THEN GOTO 8185
8130 READ (Z[5],KEY=K$)IOL=0410
8133 IF E0$(110,8)<>A$(118,8) THEN GOTO 8120
8134 IF E0$(118,3)<>B$(6,3) THEN GOTO 8120
8136 IF F6$<>"*" AND V0$(61,1)="B" THEN IF E0$(100,10)<>P7$(1,10) THEN GOTO 8120
8137 F9$="Y"
8138 IF X9$(16,1)="B" THEN GOSUB 3600
8139 IF L0>Y8[3] THEN GOSUB 2900; GOSUB 2000; I0=(Y8[2]-1)*W3
8140 F5=23,F5$=E0$(33,8); GOSUB 8350
8142 CALL "ZZDISP","AX",E0$(41,9),"P/O",X3$,F5$,"",0,0,X4$; F5=24; GOSUB 8350; REM "duplicates fld#60!
8145 GOSUB 8500
8147 U8$=E0$(121,4); GOSUB 8550
8150 X$=E0$(82,18); GOSUB 7600
8155 F5=15,F5$=E0$(100,10); GOSUB 8350
8157 IF B$(155,1)<>"S" THEN CALL "ZZDISP","AX",B$(19,10),"ICE",X3$,F5$,"",0,0,X4$; F5=13; GOSUB 8350; X$=E0$(68,14); GOSUB 6400
8158 IF B$(10,1)="9" THEN F5$="CUST" ELSE F5$="DIST"
8160 F5=18,F5$=STR(E0[2]:M5$); GOSUB 8350
8162 F5=E0[3]; IF X9$(20,1)="C" AND E0[2]<>0 THEN F5=F5*E0[2]
8163 F5$=STR(F5:M5$),F5=20; GOSUB 8350; F5=82; GOSUB 8350
8166 F5=17,F5$=STR(E0[4]:M5$),T9[10]=E0[4]; GOSUB 3790
8169 F5=19,F5$=STR(E0[2]*E0[4]:M5$); GOSUB 8350
8170 IF E0[2]=0 THEN E0=E0[3]*E0[4] ELSE E0=E0[2]*E0[3]*E0[4]
8171 IF E0$(155,1)="Y" THEN F5$="*",F5=27; GOSUB 8350
8172 F5=21,F5$=FNQ$(E0,Z2$),T9[9]=E0; GOSUB 8350; GOSUB 7675
8175 CALL "ZZDISP","AX",E0$(41,9),"P/O",X3$,F5$,"",0,0,X4$; F5=60; GOSUB 8350; REM "duplicates fld#24!
8176 F5$=FND$(E0$(50,6)); F5=61; GOSUB 8350
8177 F5$=E0$(56,12); F5=62; GOSUB 8350
8178 CALL "ZZDISP","AX",E0$(68,10),"A/P",X3$,F5$,"",0,0,X4$; F5=63; GOSUB 8350
8179 F5$=E0$(78,4),F5=64; GOSUB 8350
8180 F5$=E0$(133,15),F5=65; GOSUB 8350
8181 F5$=E0$(156,40),F5=66; GOSUB 8350; GOSUB 6300
8183 L0=L0+1; I0=I0+W3*X9[47]+F4*W3,F4=0
8184 GOTO 8120
8185 IF F9$<>"" THEN GOTO 8195 ELSE IF X9$(16,1)="B" THEN GOSUB 3600; GOTO 7781; REM "for docutec-don't print total cases if no lots
8190 GOSUB 8060; GOSUB 8600; GOTO 7781
8195 RETURN 
8200 REM "Set print flag in s/o header
8210 EXTRACT RECORD (Z[2],KEY=U$(6,8),DOM=8240)A$
8215 A$(128,1)="Y"
8220 WRITE RECORD (Z[2])A$
8240 RETURN 
8250 REM "FMS PRICE - 3.3
8260 Y$="12C AR4...  12O FM1...  "; GOSUB 9700
8270 FIND (Z[12],KEY=B$(161,10)+B$(19,10),DOM=8295)IOL=0440
8280 B[4]=F0[29]*B[5]/F0[4]
8290 Y$="12C FM1...  12O AR4...  "; GOSUB 9700
8295 RETURN 
8300 REM "Place in page, F5 = field #, F5$=field info
8305 IF X9[F5]=0 THEN GOTO 8345
8306 IF B9=1 THEN CALL "BC2FMY",X3$,X4$,A0$,A0{ALL},F5,F5$,0,0,P$,O$,A9$,"",Q{ALL}; GOTO 8320; REM "Use barcode module
8310 P$(X9[F5]+Y9[F5]*W3,LEN(F5$))=F5$
8345 RETURN 
8350 REM "F5=field#, F5$=field info. line number is used to index off of I0 set to first line in lines section - 1. line 1  on a line = first line.
8351 REM "Set F4 to highest line # printed
8355 IF X9[F5]=0 THEN GOTO 8395
8356 IF B9=1 THEN CALL "BC2FMY",X3$,X4$,A0$,A0{ALL},F5,F5$,0,I1+Y8[2],P$,O$,A9$,"",Q{ALL}; GOTO 8375; REM "Use barcode module to print
8360 P$(I0+X9[F5]+Y9[F5]*W3,LEN(F5$))=F5$
8365 IF Y9[F5]>F4 THEN F4=Y9[F5]
8395 RETURN 
8400 REM "Take city,st,zip in A5$ in std format, and format into A6$
8410 IF POS(" "<>A5$(1,16))=0 THEN DIM A6$(30); GOTO 8440
8415 A6$=FNS$(A5$(1,16))+", "+A5$(17,2)+" "
8420 CALL "ZZDISP","AX",A5$(19,9),"ZIP",X3$,X$,"",0,0,X4$
8425 A6$=A6$+X$
8430 A8$=X$
8445 RETURN 
8450 REM "Place in page offset by a number of lines
8451 REM "F5=field #, F5$=field info, F6= # of lines to offset position
8455 IF X9[F5]=0 THEN GOTO 8495
8456 IF B9=1 THEN CALL "BC2FMY",X3$,X4$,A0$,A0{ALL},F5,F5$,0,F6,P$,O$,A9$,"",Q{ALL}; GOTO 8375; REM "Use barcode module to print
8460 P$(X9[F5]+(Y9[F5]+F6)*W3,LEN(F5$))=F5$
8495 RETURN 
8500 REM "Print standard stuff on a line
8515 IF B$(155,1)<>"S" THEN CALL "ZZDISP","AX",B$(19,10),"ICE",X3$,F5$,"",0,0,X4$; F5=13; GOSUB 8350; X$=""; GOSUB 6400
8520 F5=12,F5$=B$(50,40); GOSUB 8350; F5=76,H8$=B$; GOSUB 8000; F5$=H9$; IF X9$(76,1)="P" THEN F5$=B$(48,2); GOSUB 8350 ELSE GOSUB 8350
8525 F5$=""; IF POS(B$(155,1)="IC")>0 THEN IF B$(10,1)="9" THEN F5$="CUST" ELSE F5$="DIST"
8530 F5=22; GOSUB 8350
8545 RETURN 
8550 REM "Given u/m U5$, decide whether or not to print U/M desc.
8551 REM "Set U5 to 1 if we print, else oto 0
8552 U5=0
8555 IF U5$<>M$(4,4) THEN DIM M$(21),M[2]; FIND (Z[13],KEY="U/M"+U5$,DOM=8556)IOL=0430
8556 IF POS(U5$="CASECTN CTNS",4)<>0 THEN RETURN 
8560 IF M$(20,1)="Y" THEN RETURN 
8565 F5$=U5$,F5=28; GOSUB 8350
8570 U5=1
8595 RETURN 
8600 REM "Non lot inv, calc # to print based on carton pack or var u/m, and print truncated amount in total cases. If not evenly divisable then create new line with a short case.
8601 REM "If U5 is 0, don't amount here
8605 P5=B[12]
8610 IF P5=0 THEN RETURN 
8611 IF X9[36]<>0 THEN RETURN 
8615 F5=20,F5$=STR(P5:M5$); GOSUB 8350
8620 P6=B1/P5
8622 IF B1<>0 AND B1<P5 THEN GOTO 8648
8625 IF B1-INT(P6)*P5=0 THEN F5=17,F5$=STR(P6:M5$),T9[10]=P6,T9[9]=B1; GOSUB 3800; GOSUB 7675; RETURN 
8630 F5=17,F5$=STR(INT(P6):M5$),T9[10]=INT(P6); GOSUB 3800
8633 F5=21,F5$=FNQ$(INT(P6)*P5,Z2$),T9[9]=INT(P6)*P5; GOSUB 8350; GOSUB 7675
8635 L0=L0+1,I0=I0+W3+F4*W3,F4=0
8640 IF L0>=Y8[3] THEN GOSUB 2900; GOSUB 2000; I0=(Y8[2]-1)*W3
8645 GOSUB 8500
8648 P7=B1-INT(P6)*P5
8650 F5$="*",F5=27; GOSUB 8350
8655 F5=20,F5$=STR(P7:M5$); GOSUB 8350
8657 F5=17,F5$=STR(1:M5$),T9[10]=1; GOSUB 3800
8660 F5=21,F5$=FNQ$(P7,Z2$),T9[9]=P7; GOSUB 8350; GOSUB 7675
8665 U5$=B$(124,4); GOSUB 8550
8670 GOSUB 8055
8695 RETURN 
8700 REM "3.1.3 Line items"
8705 IF POS(B$(155,1)="M")>0 THEN RETURN 
8707 IF B[7]=0 AND B[8]=0 THEN B[7]=B[0]
8710 IF X9[36]<>0 AND B[0]<>0 THEN F5=36,J0=B[0]; GOSUB 8842
8715 IF X9[37]<>0 AND B[7]<>0 THEN F5=37,J0=B[7]; GOSUB 8842
8720 IF X9[38]<>0 AND B[8]<>0 THEN F5=38,J0=B[8]; GOSUB 8842
8730 F5=44,F5$=B$(124,4); GOSUB 8350
8732 IF X9[45]=0 AND X9[46]=0 THEN GOTO 8770
8733 IF X9[58]>0 AND B$(155,1)="C" AND (B[6]=0 OR B[4]<>0) THEN GOSUB 8250; GOTO 8735; REM "FMS Price
8734 IF X9[46]=0 AND B[4]=0 THEN J0=B[6],F5=45,F5$=STR(J0:Z5$); GOSUB 8350; GOTO 8760
8735 IF B[0]<>0 OR B[7]<>0 THEN F5=45,F5$=STR(B[4]:Z5$); GOSUB 8350 ELSE J0=B[6]; GOTO 8760
8750 CALL "FM2EXT",Z[13],0,B$(124,4),B[5],B[7],B[4],J0,2
8760 F5=46,F5$=STR(J0:Z5$); GOSUB 8350; T9=T9+J0; REM "Must extend to total
8770 F9=0; IF B[12]=0 OR B[7]=0 OR X9[73]=0 THEN GOTO 8775 ELSE F5=73; IF ABS(B[7])<B[12] THEN J0=1 ELSE PRECISION 6; J0=INT(ABS(B[7])/B[12]); PRECISION 2; F9=ABS(B[7])-B[12]*J0
8772 F5$=STR(J0*SGN(B[7]):M0$); GOSUB 8350
8775 IF B[12]<>0 THEN F5=74; IF ABS(B[7])<B[12] THEN F5$=STR(ABS(B[7]):Z3$); GOSUB 8350 ELSE F5$=STR(B[12]:Z3$); GOSUB 8350
8790 GOSUB 8850; GOSUB 8900
8795 RETURN 
8800 REM "Convert Qty to U/M"
8820 CALL "FM2EXT",Z[13],2,B$(124,4),B[5],J0,0,0,2
8830 IF FPT(J0)<>0 THEN F5$=STR(J0:Z4$) ELSE F5$=STR(J0:Z3$)
8835 GOSUB 8350
8840 RETURN 
8841 REM "Test for eaches
8842 IF X9$(F5,1)<>"E" THEN GOTO 8800
8845 F5$=STR(J0:Z3$); GOTO 8835
8850 REM "Cost
8855 IF X9[48]=0 AND X9[49]=0 THEN GOTO 8890
8860 IF X9[49]=0 AND B[1]=0 THEN J1=B[3],F5=48,F5$=STR(J1:Z5$); GOSUB 8350; GOTO 8890
8865 IF B[0]=0 AND B[7]=0 THEN J1=B[3]; GOTO 8880
8866 CALL "FM2EXT",Z[13],1,B$(124,4),B[5],B[7],J1,B[3],2
8868 F5=48,F5$=STR(J1:Z5$); GOSUB 8350
8870 CALL "FM2EXT",Z[13],0,B$(120,4),B[2],B[7],B[1],J1,2
8880 F5=49,F5$=STR(J1:Z5$); GOSUB 8350; T8=T8+J1; REM "Extend cost total
8890 RETURN 
8900 REM "Commission
8910 DIM C0$(32),C0[15]; FIND (Z[12],KEY=B$(128,5),DOM=8911)IOL=0460
8920 IF B$(50,10)<>"XXXXXXXXXX" THEN CALL "AR2COM","",C0$,C0{ALL},J2,J0,J1
8930 T7=T7+J2,F5=53,F5$=B$(128,5); GOSUB 8350
8940 RETURN 
8950 DEF FNQ$(Z9,Z9$)=STR(Z9:Z9$)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 1000
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9750 REM 
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1; ON Z0 GOTO 9761,9900
9790 RETURN 
9900 REM "End program
9909 IF V8$="A" THEN V3$(2,6)="AUTO"+V7$
9910 CALL "ZZERPT",X3$,X4$,X0$,Y3$,Y4$,W9,W2,W5,W,W0,W8,T3,V3$
9915 IF V8$="A" OR (Y4$<>X0$ AND V3$(2,1)<>"T") THEN GOSUB 5300
9920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 IF Y4$<>"" THEN RUN Y4$,ERR=9931
9940 RUN "ZMENU"
9999 END 
