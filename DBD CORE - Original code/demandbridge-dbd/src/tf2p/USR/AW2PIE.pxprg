0010 REM "Automated Warehousing Physical Count Entry <AW2PIE>
0020 SETESC 9300; SETERR 9000
0035 REM "5.4 - 01/26/06 - 13.040833 - crg - SSP# 189680
0037 REM "189680-Need Sequence 2                                             
0040 REM "Copyright 2006 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="AW2PIE",X1$="Automated Warehousing Physical Count Entry",K9$="",K9=0
0120 DIM Z0$(80,"-"),S$(40),S0$(80)
0130 K0=35,K1=4
0135 C9=-1
0140 M0$="#######0.0000-",M1$="##,##0-",Z2$="##,##0",Z1$="##,##0.00",M3$="######0-  ",M4$="###,###.00-"
0145 M2$=M0$(1,LEN(M0$)-1)+"+"
0160 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
0165 DEF FND$(Z9$)=Z9$(3,2)+"/"+Z9$(5,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
0175 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0180 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
0200 REM "Setup for Auto Warehousing
0205 PRINT 'CS',
0220 T_LINES=16; REM "Set for total number of lines on screen
0225 T_CHARS=20; REM "Set for total characters on screen
0228 P_LINE=T_LINES-1; REM "Set for prompt line
0230 X0=-1,V0=-3; REM "Set for no diplay of headings else V0=0
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0243 X3$(78,1)="0"
0245 REM "IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=00246)
0250 PRECISION 4; REM "ssp 103665
0270 DEF FNL(Z1,Z2,Z3)=Z1*Z2*(MOD(Z3+1,Z3+2)-SGN(Z3))
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0311 IOLIST A$(1),A[0],A[1],A[2],A[3],STR(A[4]),A[5],A[6],A[7],STR(A[8]),A[9],A[10],A[11],A[12]
0320 IOLIST B$
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9]
0375 IOLIST G5$,G5[0],G5[1]
0380 IOLIST L$,L[0],L[1],L[2],L[3],L[4],L[5],L[6]
0390 IOLIST E$,E[0],E[1]
0395 IOLIST F$,F[0],F[1]
0400 IOLIST F$,F[0],F[1]
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ICL...  02O FM0...  03O IC0...  04O IC1...  05O IC7...  06O ICF...  07O AR1...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0590 READ (Z[1],KEY=K9$,DOM=0591)
0595 READ (Z[13],KEY=X3$(9,3)+"I/C")P0$
0600 REM "Go Print Screen
0680 REM "GOSUB 06000
0700 REM "Set flag - RF PHY in process
0720 WRITE (Z[13],KEY="RFPHY")"ACTIVE"
1000 REM "
1005 X0=-1
1010 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1020 X3$(78,1)="0"; REM "Bypass date/time refresh
1030 DIM B$(53),B[8],C$(139),C0$(46),C[19],D$(45),E$(21),E[1],D[9],F$(21),F[1],L$(270),L[6],G5[1]
1035 DIM A$(292),A[13]
1036 DIM RESP$(20)
1038 PKG$=""
1045 IF LEN(A1$)>=42 THEN A$(21,4)=A1$(1,4),A$(100,10)=A1$(5,10),A$(1,20)=A1$(15,20),A$(25,8)=A1$(35,8)
1055 IF LOC$="" THEN GOTO 1200 ELSE A$(21,4)=LOC$; REM "Mods to prompt for Location first
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "Key Seq
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1250,1400,1300,1450,1350,1500
1200 REM "Location - Entry on first screen only
1203 PRINT 'CS','SB',@(0,3+V0),"Loc:",
1210 CALL "ZZENTR","SZUX",A{ALL},A$,X4$,X3$,5,3+V0,21,4,C0,"",""+X$,"D","AW2PIE00","","",""; IF ABS(C0)>4 THEN ON C0 GOTO 1210,1211
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,1210,9800,1210
1220 FIND (Z[2],KEY="D"+S$(1,10)+A$(21,4),DOM=1210)IOL=0320
1225 PRINT @(0,4+V0),B$(16,30),@(0,5+V0),
1230 WAIT 2; PRINT 'CS',
1235 V0=-4,LOC$=A$(21,4)
1238 GOSUB 6000
1240 GOTO 1060
1250 REM "Bin Location
1255 IF LEN(A1$)>4 THEN A$(100,10)=A1$(5,10); GOTO 1262
1256 IF P0$(44,1)<>"Y" AND C0<>2 THEN GOTO 1120
1257 Q$=A$(21,4)
1260 CALL "ZZENTR","SX",A{ALL},A$,X4$,X3$,5,4+V0,100,10,C0,"",""+X$,Q$,"AW2PIE02","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1260,1261
1262 IF ABS(C0)=2 AND LEN(A1$)>0 THEN A1$=A1$(1,0)
1290 GOTO 1120
1300 REM "Item Code
1305 PRINT @(5,6+V0),'CL',@(0,7+V0),'CL',
1307 A0=2
1308 X$="Down= Next Entry"
1310 CALL "ZZENTR","AX",A{ALL},A$,X4$,X3$,5,6+V0,11,10,C0,"ICE",""+X$,J$,"AW2PIE04","","X",""; IF ABS(C0)>4 THEN GOSUB 6400
1312 IF ABS(C0)=2 THEN IF LEN(A1$)>15 THEN A1$=A1$(1,14); GOTO 1120 ELSE GOTO 1120
1315 IF INT(ABS(C0))=3 THEN GOTO 6800
1316 IF ABS(C0)=4 THEN GOTO 1120
1317 IF X3$(9,3)<>"498" THEN GOTO 1320; REM "Custom mod for Gold Bond item numbers
1318 GBITEM$=STP(A$(11,10),1),LASTCHAR$=GBITEM$(LEN(GBITEM$),1)
1319 IF ASC(LASTCHAR$)>90 THEN GBITEM$=GBITEM$(1,LEN(GBITEM$)-1)+"="+CHR(ASC(LASTCHAR$)-32); A$(11,10)=GBITEM$
1320 FIND (Z[3],KEY=A$(1,20),DOM=1321)IOL=0330; GOTO 1323
1321 IF X3$(9,3)="498" AND A$(11,2)<>"RM" THEN A$(11,10)="RM"+A$(11,8); GOTO 1320 ELSE GOTO 1310; REM "Custom mod for Gold Bond to check for Raw Material
1323 H8$=C$; GOSUB 7750
1325 PRINT @(0,7+V0),S$,@(0,7+V0),H9$,
1330 DIM D$(45),D[9]; FIND (Z[4],KEY=A$(1,20)+A$(21,4),DOM=1342)IOL=0340
1335 IF C$(112,1)<>"Y" THEN GOSUB 8000
1340 GOTO 1120
1342 D$(35,10)="{New}"; IF ABS(C0)<>2 THEN IF LEN(A1$)<=14 THEN CALL "ZZPROM",".4 AW2PIE",X3$,Z,"Loc No Activity","","",P_LINE; GOTO 1331
1343 GOTO 1331
1350 REM "Sequence
1353 REM "to allow additional counts if non-lotted items  IF C$(112,1)<>"Y" THEN LET A$(31,2)=""; PRINT @(5,8+V0),"  ",; GOTO 01120
1357 Q$=A$(21,4)+A$(100,10)+A$(1,20)+A$(25,6)
1360 CALL "ZZENTR","SUXZ",A{ALL},A$,X4$,X3$,18,8+V0,31,2,C0,"",""+X$,Q$,"AW2PIE06","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1360,1361
1362 IF ABS(C0)=2 AND LEN(A1$)>14 THEN A1$=A1$(1,14)
1364 IF INT(ABS(C0))=3 THEN GOTO 6800
1365 IF C0<0 THEN C0=ABS(C0)
1366 REM IF C0<0 THEN IF -C0=1 THEN GOTO 06800 ELSE LET C0=ABS(C0)
1390 GOTO 1120
1400 REM "Customer
1401 REM "Mods to check for scan of:  customer + item, blanks + item, or item
1405 IF P0$(38,1)="N" THEN GOTO 1120
1410 RESP$=A$(1,20)
1415 PRINT @(5,5+V0),'CL',
1420 GOSUB 5050; CALL "ZZENTR","U",A{ALL},RESP$,X4$,X3$,5,5+V0,1,20,C0,"",""+X$,"","AW2PIE33","","X",""; GOSUB 5150; IF ABS(C0)>4 THEN GOSUB 6400
1425 IF ABS(C0)=2 THEN IF LEN(A1$)>5 THEN A1$=A1$(1,4); GOTO 1120 ELSE GOTO 1120
1428 GOSUB 5500; REM "Parse Response String
1429 IF RESP$(1,2)="OK" THEN X0=X0+1; GOTO 1330
1430 IF POS(" "<>A$(1,10))=0 THEN GOTO 1440
1432 FIND (Z[7],KEY=A$(1,10),DOM=1420)C0$
1434 PRINT @(16,5+V0),C0$(11,35),'CL',
1440 GOTO 1120
1450 REM "Receipt date
1455 IF C$(112,1)<>"Y" THEN A$(25,6)=""; PRINT @(5,8+V0),S$(1,10),; GOTO 1120
1457 Q$=A$(1,24)
1460 CALL "ZZENTR","DX",A{ALL},A$,X4$,X3$,5,8+V0,25,6,C0,"",""+X$,Q$,"AW2PIE34","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1460,1461
1490 GOTO 1120
1500 REM "Setup & read record
1505 Z9=-1,A2$="",A3$="",A4$="",A5$=""
1510 A1$=A$(21,4)+A$(100,10)+A$(1,20)+A$(25,6)+A$(31,2)
1520 EXTRACT (Z[1],KEY=A1$,DOM=1600)IOL=0310
1522 IF ABS(INT(C0))=3 AND A$(110,2)="PI" THEN GOTO 6800
1525 Z9=1
1530 FIND (Z[3],KEY=A$(1,20),DOM=1531)IOL=0330
1535 H8$=C$; GOSUB 7750
1540 PRINT @(0,7+V0),S$,@(0,7+V0),H9$,
1550 FIND (Z[7],KEY=A$(1,10),DOM=1551)C0$
1590 GOTO 1700
1600 REM "Clear & Add
1605 IF C$(112)="Y" THEN GOTO 1620; REM "If non-lotted force to have standard record with computer count before allowing sequence numbers
1610 IF A$(31,2)<>"  " THEN READ (Z[1],KEY=A1$(1,40)+"  ",DOM=1615); GOTO 1620
1615 A$(31,2)="  ",A1$(41,2)="  "
1620 CALL "ZZPROM","2 AW2PIE",X3$,Z,"","","",P_LINE; ON Z GOTO 1650,1630
1630 GOTO 1000
1650 IF C$(112,1)="Y" THEN GOSUB 3400 ELSE GOSUB 3300
1690 GOTO 2000
1700 REM "Display/Modify
1790 GOSUB 6200
1795 GOTO 1850
1800 REM "Prompt Mod/Del/Add
1820 CALL "ZZPROM",STR(6+C9)+" AW2PIE",X3$,Z,"","","V",P_LINE; ON Z GOTO 1850,6500,1630,6700,1840
1830 GOTO 2000
1840 IF Z=6 THEN PKG$="Y",X0=8; GOTO 2035
1850 REM "Modify
1853 PRINT @(0,P_LINE),'CL',
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 EXTRACT (Z[1],KEY=A1$,DOM=1870)IOL=0310
1865 C9=1
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "Data Seq
2010 C0=0,X1=1; IF A[4]=0 AND A[0]=0 AND A[8]=0 THEN X0=-1 ELSE IF POS(" "<>A$(121,4))=0 THEN X0=2 ELSE X0=6
2015 IF A$(221,1)<>"Y" THEN X0=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2021 PRINT @(0,P_LINE),'CL',
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2040 ON X0 GOTO 2400,2100,2200,2750,2850,2800,2900,2250,2350,2300,2250,2350,2300,2250,1800
2100 REM "Inventory Tag
2107 IF A$(222,1)="S" THEN GOTO 2020
2110 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,5,10+V0,235,12,C0,"",""+X$,"","AW2PIE09","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2110,2111
2140 GOTO 2020
2150 REM "No Count
2156 J$="Not Counted"
2157 X$="F2= Enter Count"
2160 CALL "ZZENTR","SF",A{ALL},J$,X4$,X3$,0,P_LINE,1,11,C0,"",""+X$,"","AW2PIE11","","",""; IF ABS(C0)<10 THEN IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2110,2111
2164 GOSUB 4500; PRINT @(0,13+V0),'CL',
2165 IF C0<>11 THEN PRINT @(0,13+V0),STP(X$,1)," Not Ct",; X$="" ELSE A$(222,1)=" "; GOSUB 6200; GOTO 2250
2190 GOTO 2020
2200 REM "New Bin Location
2205 IF A$(222,1)="S" THEN GOTO 2020
2210 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,5,11+V0,247,10,C0,"",""+X$,"","AW2PIE11","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2210,2211
2240 GOTO 2020
2250 REM "Physical count
2252 PRECISION 4
2254 IF X0>7 AND A$(221,1)="Y" THEN GOTO 2020
2255 IF X0=7 THEN H0=1,H1=2 ELSE IF X0=10 THEN H0=2,H1=9,X$="Alt 1 Count" ELSE IF X0=13 THEN H0=3,H1=11,X$="Alt 2 Count"
2256 IF H0=1 THEN IF A$(222,1)="S" THEN GOTO 2150 ELSE X$="F2 or Primary Count"
2257 IF H0>1 AND (A$(222,1)="S" OR POS(" "<>A$(223+4*(H0-1),4))=0 OR PKG$<>"Y") THEN GOTO 2020
2259 DIM J[1]; IF A$(221,1)="Y" THEN J[0]=A[6+2*H0],J0$=M3$,J1=820 ELSE GOSUB 4700
2260 CALL "ZZENTR","NF.",J{ALL},A$,X4$,X3$,0,P_LINE,0,J1,C0,J0$,""+X$,Q$,"AW2PIE14","","",""; IF ABS(C0)<10 THEN IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2260,2261
2261 GOSUB 4500
2262 IF C0=11 THEN GOSUB 4800; X$=""; GOTO 2290
2270 IF A$(221,1)="Y" THEN A[6+2*H0]=J[0] ELSE IF F$(20,1)<>"Y" THEN A[6+2*H0]=J[0]*A[H1] ELSE A[6+2*H0]=J[0]
2275 IF H0>1 THEN U9=0,U0=H0-1; GOSUB 4600 ELSE PRINT @(0,12+V0+1*H0),'CL',STP(X$,1)," ",FNR$(STR(J[0]:J0$)),; X$=""
2280 GOSUB 7500
2290 GOTO 2020
2300 REM "Physical Count Packing
2302 IF A$(222,1)="S" OR A$(221,1)="Y" THEN GOTO 2020
2305 IF X0=9 THEN U0=1 ELSE IF X0=12 THEN U0=2 ELSE GOTO 2020
2306 IF POS(" "<>A$(223+4*U0,4))=0 THEN GOTO 2020 ELSE READ (Z[13],KEY="U/M"+A$(223+4*U0,4),DOM=2020)IOL=0395; IF F$(20,1)="Y" THEN GOTO 2020
2307 IF PKG$<>"Y" THEN GOTO 2020
2308 U9=2; GOSUB 4600; REM 'THIS SHOULD SET U8
2309 X$="Alt "+STR(U0)+" Pack"
2310 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,0,P_LINE,7+2*U0,501,C0,Z2$,""+X$,Q$,"AW2PIE16","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2310,2311
2330 U9=0; GOSUB 4600
2340 GOTO 2020
2350 REM "Physical Count U/M
2352 IF A$(222,1)="S" OR A$(221,1)="Y" THEN GOTO 2020
2354 IF X0=11 AND POS(" "<>A$(227,4))=0 THEN GOTO 2020
2355 IF X0=8 THEN U0=1,U1=227,U2=9 ELSE IF X0=11 THEN U0=2,U1=231,U2=11 ELSE GOTO 2020
2356 IF PKG$<>"Y" THEN GOTO 2020 ELSE IF A$(221,1)<>"Y" AND STP(A$(U1,4),1)="" THEN A$(U1,4)="CASE"; GOTO 2020
2357 U9=1; GOSUB 4600
2359 X$="Alt "+STR(U0)+" U/M"
2360 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,0,P_LINE,U1,4,C0,"",""+X$,"U/M","AW2PIE18","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2360,2361
2365 IF POS(" "<>A$(U1,4))=0 THEN A[U2]=0,A[8+2*U0]=0; GOSUB 7500; PRINT @(0,13+V0+1*U0),'CL',; GOTO 2020
2370 FIND (Z[13],KEY="U/M"+A$(U1,4),DOM=2360)IOL=0395
2380 IF F$(20,1)<>"Y" THEN GOTO 2020
2384 REM " old IF A[U2]=0 THEN IF F[0]<>0 THEN LET A[U2]=F[0] ELSE LET A[U2]=F[1]
2385 IF F[0]<>0 THEN A[U2]=F[0] ELSE A[U2]=F[1]
2387 U9=0; GOSUB 4600
2390 GOTO 2020
2400 REM "Frozen average cost
2401 GOTO 2020; REM "Disable for now since this only costs the variance and does not post it back to inventory files.
2405 IF A$(222,1)="S" THEN GOTO 2020
2407 IF A$(221,1)="Y" THEN GOSUB 7850; GOTO 2440
2410 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,5,9+V0,0,621,C0,M4$,""+X$,"","AW2PIE20","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2410,2411
2440 GOTO 2020
2750 REM "Primary unit
2753 IF A$(221,1)<>"Y" THEN IF ABS(C0)=2 THEN GOTO 2020 ELSE X0=X0+0; GOTO 2020
2755 J1=1; GOSUB 8500
2759 X$="Primary U/M"
2760 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,J0-1,P_LINE,121,4,C0,"",""+X$,"","AW2PIE36","","",""
2762 FIND (Z[13],KEY="U/M"+A$(121,4),DOM=2760)IOL=0375; IF G5$(20,1)="Y" THEN GOTO 2760
2765 IF ABS(C0)>2 THEN J1=-1; GOSUB 8500 ELSE IF ABS(C0)=2 THEN GOSUB 6245
2790 GOTO 2020
2800 REM "Packaging unit
2803 IF A[2]=0 OR A$(221,1)<>"Y" THEN GOTO 2840
2804 IF ABS(C0)>1 AND POS(" "<>A$(125,4))=0 THEN GOTO 2840
2805 J1=3; GOSUB 8500
2809 X$="Pkg U/M"
2810 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,J0-1,P_LINE,125,4,C0,"",""+X$,"","AW2PIE38","","",""
2812 IF A$(125,4)<>"    " THEN FIND (Z[13],KEY="U/M"+A$(125,4),DOM=2810)IOL=0375; IF G5$(20,1)="Y" THEN GOTO 2810
2815 IF A$(125,4)="    " THEN IF A[3]=0 THEN A[3]=A[2],A[2]=0,F0$="*"; J1=-1; GOSUB 8500 ELSE A[2]=0,J1=-1; GOSUB 8500
2820 IF ABS(C0)>2 THEN J1=-1; GOSUB 8500
2840 GOTO 2020
2850 REM "Units per package
2853 REM "Allow scan/entry for non-lotted  IF A$(221,1)<>"Y" THEN GOTO 02020
2854 IF ABS(C0)=2 AND A[2]=0 THEN GOTO 2020
2855 J1=2; GOSUB 8500
2859 X$="Primary Pack"
2860 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,J0-1,P_LINE,2,601,C0,M3$,""+X$,"","AW2PIE40","","",""
2862 IF C0=4 THEN C0=1
2864 IF C0>0 AND A[2]=0 THEN A$(125,4)="",J1=-1; GOSUB 8500
2865 IF ABS(C0)>2 THEN J1=-1; GOSUB 8500
2890 GOTO 2020
2900 REM "Units per primary/package unit
2903 IF A$(221,1)<>"Y" THEN GOTO 2020
2904 IF F0$="*" THEN F0$=""; GOTO 2940
2905 J1=4; GOSUB 8500
2908 J8=A[4]*A[3]; IF A[2]<>0 THEN J8=J8*A[2]
2909 X$="Pkg Units"
2910 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,J0-1,P_LINE,3,601,C0,M3$,""+X$,"","AW2PIE42","","",""
2914 IF A$(125,4)="    " THEN T9=A[4]*A[3] ELSE T9=A[4]*A[2]*A[3]
2915 IF T9<>0 THEN A[4]=A[4]*J8/T9 ELSE A[4]=0
2920 J1=-1; GOSUB 8500
2925 GOSUB 6245
2940 GOTO 2020
3300 REM "Build ICL record from IC0 & IC1 records (Non-lotted)
3305 DIM F$(21),F[1]; FIND (Z[13],KEY="U/M"+C$(124,4),DOM=3306)IOL=0400
3310 IF F$(20,1)<>"Y" THEN A$(121,4)=C$(124,4),A[2]=C[15] ELSE A$(121,4)="CASE",A[2]=C[19]
3315 IF A$(31,2)="  " THEN A[4]=D[3]+D[4]-D[5]+D[6]; REM "Only freeze count for standard entry record (1st entry for non-lotted item)
3320 IF D[2]<>0 THEN A[0]=D[2] ELSE A[0]=C[18]
3326 A$(221,1)="N"
3327 IF STP(A$(259,3),1)="" THEN A$(259,13)=X3$(40,3)+X3$(21,6)+FN%NTD$(JUL(0,0,0),"HHMI")
3328 A$(274,13)=X3$(40,3)+X3$(21,6)+FN%NTD$(JUL(0,0,0),"HHMI")
3330 WRITE (Z[1],KEY=A$(21,4)+A$(100,10)+A$(1,20)+A$(25,8))IOL=0311
3340 GOSUB 6200
3395 RETURN 
3400 REM "Build ICL records from lot detail file ICF
3402 REM "Default ICL from any existing Lot record for this item on the same receipt date
3405 DIM L[6]; A$(221,1)="Y"
3410 READ (Z[6],KEY=A$(1,24),DOM=3411)
3415 K1$=KEY(Z[6],END=3460)
3420 IF K1$(1,30)<>A$(1,30) THEN GOTO 3460
3425 READ (Z[6],KEY=K1$)IOL=0380
3430 REM "Set ICL data from ICF data
3440 A$(33,49)=L$(33,49),A$(133,15)=L$(133,15),A$(215,6)=L$(215,6)
3445 A$(285,4)=L$(263,4); REM ssp 189680
3460 REM "Done with ICF records -now set up ICL
3490 A$(257,2)="**"; REM "New Entry
3495 IF STP(A$(259,3),1)="" THEN A$(259,13)=X3$(40,3)+X3$(21,6)+FN%NTD$(JUL(0,0,0),"HHMI")
3497 A$(272,13)=X3$(40,3)+X3$(21,6)+FN%NTD$(JUL(0,0,0),"HHMI")
3500 IF NUM(A$(31,2),ERR=3501)=0 THEN GOTO 3530
3510 A$(31,2)="01"
3520 WRITE (Z[1],KEY=A$(21,4)+A$(100,10)+A$(1,20)+A$(25,8),DOM=3521)IOL=0311; GOTO 3535
3530 A$(31,2)=STR(NUM(A$(31,2))+1:"00"); GOTO 3520
3535 GOSUB 6400
3540 RETURN 
4500 REM "Load X$ with desc of units
4505 X$=""
4508 IF A$(221,1)<>"Y" THEN GOTO 4550
4515 IF POS(" "<>A$(121,4))=0 THEN GOTO 4525
4520 IF A[4]>1 THEN X$=X$+FNS$(A$(121,4))+"/" ELSE X$=X$+FNS$(A$(121,4))+"/"
4525 IF A[2]=0 OR POS(" "<>A$(125,4))=0 THEN GOTO 4540
4530 X$=X$+FNR$(STR(A[2]:Z2$))+" "
4535 IF A[2]>1 THEN X$=X$+FNS$(A$(125,4))+"/" ELSE X$=X$+FNS$(A$(125,4))+"/"
4540 X$=X$+FNR$(STR(A[3]:Z2$))
4545 RETURN 
4550 REM "Unit of measure for non lot item
4555 IF A[2]=0 THEN A[2]=1
4565 IF A[4]/A[2]>1 THEN X$=X$+FNS$(A$(121,4))+"/" ELSE X$=X$+FNS$(A$(121,4))+"/"
4570 X$=X$+FNR$(STR(A[2]:Z2$))+" "
4595 RETURN 
4600 REM "Print alt units, U0=1 is first alt u/m, U0=2 is 2nd alt u/m
4601 REM "U9=0, compressed display, U9=1 display for U/M entry, U9=2 display for amount entry
4602 REM "Set U8 to starting point of numeric
4604 PRINT @(0,13+V0+1*U0),'CL',
4605 IF A$(223+U0*4,4)="    " THEN RETURN 
4607 IF F$(4,4)<>A$(223+U0*4,4) THEN READ (Z[13],KEY="U/M"+A$(223+U0*4,4),DOM=4645)IOL=0395
4610 IF U9=1 THEN X$=A$(223+U0*4,4) ELSE X$=FNS$(A$(223+U0*4,4))
4615 IF A[7+2*U0]=0 THEN A[7+2*U0]=1
4620 X$=X$+"/"
4624 U8=1+LEN(X$)
4625 IF U9=2 THEN X$=X$+STR(A[7+2*U0]:Z2$) ELSE X$=X$+FNR$(STR(A[7+2*U0]:Z2$))
4634 IF A[7+2*U0]=0 THEN A[7+2*U0]=1
4635 IF F$(20,1)<>"Y" THEN N0=A[8+2*U0]/A[7+2*U0] ELSE N0=A[8+2*U0]
4638 IF N0<>0 THEN IF F$(20,1)<>"Y" THEN X$=STP(X$,1)+" "+FNR$(STR(N0:M0$)) ELSE X$=STP(X$,1)+" "+FNR$(STR(N0:M3$))
4639 PRINT @(0,13+V0+1*U0),X$,
4641 X$=""
4642 U9=0
4645 RETURN 
4700 REM "Set J0$ and J(0) for non lotted items
4701 REM "Read in F$ and F() for later processing in 2250's
4705 IF H0=1 AND POS(" "<>A$(223,4))=0 THEN A$(223,4)=A$(121,4)
4707 IF F$(4,4)<>A$(219+H0*4,4) THEN READ (Z[13],KEY="U/M"+A$(219+H0*4,4),DOM=4708)IOL=0395
4715 IF F$(20,1)<>"Y" THEN J[0]=A[8+2*(H0-1)]/A[H1],J0$=M0$,J1=842 ELSE J[0]=A[8+2*(H0-1)],J0$=M3$,J1=802
4745 RETURN 
4800 REM "Handle No count entered state
4810 PRINT @(0,13+V0),'CL',STP(X$,1)," Not Ct",
4815 A$(222,1)="S",A[8]=0,A[10]=0,A[12]=0
4845 RETURN 
5000 REM "Full Input Prompt Description Display
5001 REM "Location Description
5005 DIM P_DESC$(T_CHARS)
5010 FIND (Z[2],KEY="D"+S$(1,10)+A$(21,4),DOM=5020)IOL=0320
5015 P_DESC$(1)=B$(16,30)
5020 PRINT @(0,P_LINE),P_DESC$,
5049 RETURN 
5050 REM "Customer Description
5055 DIM P_DESC$(T_CHARS)
5060 FIND (Z[7],KEY=A$(1,10),DOM=5070)C0$
5065 P_DESC$(1)=C0$(11,35)
5070 PRINT @(0,P_LINE),P_DESC$,
5099 RETURN 
5100 REM "Item Description - not used
5105 DIM P_DESC$(T_CHARS)
5110 FIND (Z[3],KEY=A$(1,20),DOM=5120)IOL=0330
5113 H8$=C$; GOSUB 7750
5115 P_DESC$(1)=H9$
5120 PRINT @(0,P_LINE),P_DESC$,
5149 RETURN 
5150 REM "Clear full input prompt
5155 PRINT @(0,P_LINE),'CL',
5199 RETURN 
5500 REM "Parse Out Response String
5501 REM "Check if Customer Code
5510 DIM CUST$(10),ITEM$(20)
5515 PRINT @(5,5+V0),'CL',
5520 IF POS(" "<>RESP$(1,20))=0 THEN A$(1,10)=RESP$; GOTO 5700
5525 CUST$(1)=RESP$(1,10)
5530 IF STP(CUST$,1)="" THEN ITEM$(1)=CUST$+RESP$(11); GOTO 5600
5540 ITEM$(11)=CUST$
5550 FIND (Z[7],KEY=CUST$,DOM=5600)C0$
5560 ITEM$(1)=CUST$+RESP$(11)
5570 CALL "ZZDISP","A",CUST$,"A/R",X3$,"",Q1$,5,5+V0,X4$
5580 A$(1,10)=CUST$
5590 PRINT @(16,5+V0),C0$(11,35),'CL',
5600 REM "Check if Item Code
5620 FIND (Z[3],KEY=ITEM$,DOM=5621)IOL=0330; GOTO 5630
5625 IF X3$(9,3)="498" AND ITEM$(11,2)<>"RM" THEN ITEM$(11,10)="RM"+ITEM$(11,8); GOTO 5620 ELSE GOTO 5700; REM "Custom mod for Gold Bond to check for Raw Material
5630 PRINT @(0,7+V0),'CL',
5640 CALL "ZZDISP","A",ITEM$(11,10),"ICE",X3$,"",Q1$,5,6+V0,X4$
5650 RESP$(1)="OK",A$(1,20)=ITEM$,H8$=C$; GOSUB 7750
5660 PRINT @(0,7+V0),S$,@(0,7+V0),H9$,
5700 REM "Return with A$
5799 RETURN 
6000 REM "Background
6005 PRINT (0,ERR=6016)'SB',
6010 OPT_HD$=""
6020 IF P0$(53,1)="A" THEN OPT_HD$="Po#:" ELSE IF P0$(53,1)="C" THEN OPT_HD$="Jb#:"
6060 PRINT @(0,4+V0),"Bin:",@(0,6+V0),"Itm:",
6065 IF P0$(38,1)="Y" THEN PRINT @(0,5+V0),"Cst:",
6067 IF P0$(44,1)="Y" THEN PRINT @(0,8+V0),"LRc:",@(16,8+V0),"S:", ELSE PRINT @(16,8+V0),"S:",
6070 PRINT @(0,9+V0),OPT_HD$,@(0,10+V0),"Tag:",@(0,11+V0),"NBn:",
6080 PRINT @(0,12+V0),"--------Phys--------",@(0,13+V0),"",@(0,14+V0),"",@(0,16+V0),"Cmp:",
6165 REM "PRINT (0,ERR=06166) 'SF',
6190 RETURN 
6200 REM "Display Data
6210 DIM J[1]
6215 GOSUB 6450
6216 IF A$(221,1)="Y" AND P0$(53,1)="A" THEN CALL "ZZDISP","A",A$(41,9),"P/O",X3$,"","",6,9+V0,X4$; REM "P/O Number
6217 IF P0$(53,1)="C" THEN PRINT @(6,9+V0),A$(56,12),; REM "Job Number
6245 GOSUB 4500
6250 PRINT @(0,13+V0),'CL',@(0,13+V0),X$,
6255 IF A$(221,1)="Y" THEN PRINT @(6,16+V0),FNR$(FNQ$(A[4],M0$)),; IF A$(222,1)="S" THEN GOTO 6280 ELSE PRINT @(0,13+V0),'CL',STP(X$,1)," ",FNR$(STR(A[8]:M3$)),; GOTO 6260
6256 IF FPT(A[4]/A[2])<>0 THEN PRINT @(6,16+V0),FNR$(STR(A[4]/A[2]:M0$)), ELSE PRINT @(6,16+V0),FNR$(STR(A[4]/A[2]:M3$)),
6257 IF A$(222,1)="S" THEN GOTO 6280
6258 IF FPT(A[8]/A[2])<>0 THEN PRINT @(0,13+V0),'CL',STP(X$,1)," ",FNR$(STR(A[8]/A[2]:M3$)), ELSE PRINT @(0,13+V0),'CL',STP(X$,1)," ",FNR$(STR(A[8]/A[2]:M3$)),
6260 GOSUB 7500; PRINT @(5,11+V0),A$(247,10),
6265 PRINT @(5,10+V0),A$(235,12),
6270 IF A$(221,1)<>"Y" THEN U9=0,U0=1; GOSUB 4600; U9=0,U0=2; GOSUB 4600
6280 IF A$(221,1)="Y" THEN GOSUB 7800; REM "**** PRINT @(5,9+V0),U5:M4$, ELSE PRINT @(5,9+V0),A[0]:M4$,
6390 RETURN 
6400 REM "Whole Screen
6401 PRINT 'CS',
6403 X0=-1
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "Display Keys
6455 IF C9<0 THEN GOTO 6445
6460 PRINT @(5,4+V0),A$(100,10),
6461 REM IF POS(" "<>A$(1,10))=0 THEN CALL "ZZDISP","AX",A$(1,20),"I/C",X3$,D8$,"",0,0,X4$; GOTO 06470
6464 CALL "ZZDISP","AX",A$(1,10),"A/R",X3$,D7$,"",0,0,X4$
6465 CALL "ZZDISP","AX",A$(11,10),"ICE",X3$,D8$,"",0,0,X4$
6467 PRINT @(6,5+V0),D7$,
6468 IF C0$(11,35)<>S$(1,35) THEN PRINT @(16,5+V0),C0$(11,35),
6470 PRINT @(5,6+V0),D8$,
6473 PRINT @(0,7+V0),H9$,
6474 IF POS(" "<>A$(25,6))=0 THEN PRINT @(5,8+V0),S$(1,10), ELSE PRINT @(5,8+V0),FND$(A$(25,6)),
6475 PRINT @(18,8+V0),A$(31,2),; REM "**** @(16,8+V0),FNS$(C$(124,4)),"/",FNR$(STR(C[15]:M1$)),
6490 RETURN 
6500 REM "Delete
6504 REM "If non-lotted:  clear standard record with count and allow delete of counts with sequence number
6505 IF A$(221,1)<>"Y" AND A1$(41,2)="  " THEN A[7]=0,A[8]=0,A[9]=0,A[10]=0,A[11]=0,A[12]=0,A$(222,1)="N",A$(223,36)=""; GOTO 6708
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6605 FIND (Z[2],KEY="D"+S$(1,10)+A$(21,4),DOM=6606)IOL=0320
6610 FIND (Z[3],KEY=A$(1,20),DOM=6611)IOL=0330
6615 FIND (Z[4],KEY=A$(1,20)+A$(21,4),DOM=6616)IOL=0340
6690 RETURN 
6700 REM "Add Entry
6705 IF A$(222,1)<>"S" THEN A$(222,1)="Y"
6707 IF STP(A$(259,3),1)="" THEN A$(259,13)=X3$(40,3)+X3$(21,6)+FN%NTD$(JUL(0,0,0),"HHMI")
6708 A$(274,13)=X3$(40,3)+X3$(21,6)+FN%NTD$(JUL(0,0,0),"HHMI")
6710 WRITE (Z[1],KEY=A1$)IOL=0311
6730 WRITE (Z[5],KEY=A1$(1,4)+C$(61,3)+A1$(15,21)+A1$(5,10))
6790 GOTO 1630
6800 REM "Next Entry in File
6804 ON 10*FPT(C0)+2 GOTO 6850,6805
6805 IF A1$<>"" THEN IF Z9=0 THEN READ (Z[1],KEY=A1$,DOM=6806,END=6895)
6810 A1$=KEY(Z[1],END=6895); IF LEN(A1$)<42 THEN READ (Z[1],END=6895); GOTO 6810
6820 IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(21,4)=A1$(1,4),A$(100,10)=A1$(5,10),A$(1,20)=A1$(15,20),A$(25,8)=A1$(35,8)
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM "Prior Entry
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6870 GOTO 6895
6890 GOTO 1515
6895 PRINT 'RB',; A1$=""; EXTRACT (Z[1],KEY=K9$,DOM=1140); GOTO 1140
7500 REM "Print variance, correct rounding if non lotted item
7505 IF A$(221,1)="Y" THEN N1=A[8]-A[4]; GOTO 7575
7510 REM "Cast all SKUs into the computer qty to compare to A(4)
7515 N1=A[8]/A[2]+A[10]/A[2]+A[12]/A[2]-A[4]/A[2]
7575 REM "Omit variance  IF N1=0 THEN PRINT @(6,16+V0),S$(1,LEN(M2$)), ELSE PRINT @(6,16+V0),N1:M2$,
7590 RETURN 
7750 REM "Build desc from H8$
7760 H9$=FNS$(H8$(64,8)); IF H9$<>"" THEN H9$=H9$+QUO; IF POS(" "<>H8$(72,8))<>0 THEN H9$=H9$+"x"
7770 H9$=H9$+FNS$(H8$(72,8)); IF H9$<>"" THEN IF POS(" "<>H8$(72,8))<>0 THEN H9$=H9$+QUO+" " ELSE H9$=H9$+" "
7775 IF NUM(H8$(80,2))<>0 THEN H9$=H9$+H8$(80,2)+" Ply "
7780 H9$=H9$+FNS$(H8$(21,40)); H8$=""
7785 IF LEN(H9$)>40 THEN H9$=H9$(1,40)
7790 RETURN 
7800 REM "Given total cost A(0), figure cost in inv u/m & put into U5
7804 IF A[4]<>0 THEN T9=FNL(A[4],A[3],A[2]) ELSE T9=FNL(A[8],A[3],A[2])
7810 CALL "FM2EXT",Z[13],1,C$(124,4),C[15],T9,U5,A[0],2
7845 RETURN 
7850 REM "Entry of avg cost for lots.
7852 X$="Cost INV UM- "+FNS$(C$(124,4))+"/"+STR(C[15]); IF A[8]=0 AND A[4]=0 AND A$(221,1)="Y" THEN X$="Cts=0 after phy ct"
7855 DIM N[1]; GOSUB 7800; N[0]=U5
7860 CALL "ZZENTR","N",N{ALL},A$,X4$,X3$,5,9+V0,0,621,C0,M4$,""+X$,"","AW2PIE20","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 7860,7861
7863 IF C0<0 THEN GOTO 7895
7864 REM "Get new extended cost
7865 IF A[4]<>0 THEN T9=FNL(A[4],A[3],A[2]) ELSE T9=FNL(A[8],A[3],A[2])
7870 CALL "FM2EXT",Z[13],0,C$(124,4),C[15],T9,N[0],C,2
7875 A[0]=C
7895 RETURN 
8000 REM "Check bin number
8001 REM "If item is non-lotted, then read ICL with current bin number and
8002 REM "item number, if not found, replace bin number with bin number from the IC1 file and continue. The rec. date and seq number will both be blank
8005 READ (Z[1],KEY=A$(21,4)+A$(100,10)+A$(1,20)+"        ",DOM=8006); GOTO 8045
8010 A$(100,10)=D$(35,10)
8015 PRINT @(5,4+V0),A$(100,10),
8045 RETURN 
8500 REM "Display Qty and set J0 to xpos of input of field J1
8501 REM "J1 -1=display, 0=qty, 1=primary unit, 2=units/package, 3=package, 4=unit/primary/package
8505 J0$="",J0=0
8510 REM IF J1=0 THEN LET J0$=STR(A(4):M4$) ELSE LET J0$=FNR$(STR(A(4):M4$))
8512 IF J1=1 THEN J0=1+LEN(J0$)
8515 IF POS(" "<>A$(121,4))<>0 THEN IF A[4]>1 THEN J0$=J0$+FNS$(A$(121,4))+"/" ELSE J0$=J0$+FNS$(A$(121,4))+"/"
8517 IF J1=2 THEN J0=1+LEN(J0$); IF A[3]<>0 AND POS(" "<>A$(125,4))=0 THEN J0$=J0$+S0$(1,LEN(M3$))+"/"
8520 IF A[2]<>0 THEN IF J1=2 THEN J0$=J0$+STR(A[2]:M3$) ELSE J0$=J0$+FNR$(STR(A[2]:M3$))
8522 IF J1=3 THEN J0=1+LEN(J0$); IF A[3]<>0 AND POS(" "<>A$(125,4))=0 THEN J0$=J0$+" of "
8525 IF POS(" "<>A$(125,4))<>0 THEN IF A[2]>1 THEN J0$=J0$+FNS$(A$(125,4))+"/" ELSE J0$=J0$+FNS$(A$(125,4))+"/"
8527 IF J1=4 THEN J0=1+LEN(J0$)
8530 IF J1<>4 AND A[3]<>0 THEN J0$=J0$+FNR$(STR(A[3]:M3$))
8535 IF A$(125,4)="    " THEN Q=A[4]*A[3] ELSE Q=A[4]*A[2]*A[3]
8540 PRINT @(0,13+V0),J0$,S0$(1,45-LEN(J0$)),
8545 RETURN 
8950 DEF FNQ$(Z8,Z9$)=STR(Z8:Z9$(1,POS(".00"=STR(Z8:Z9$)+".00")-1))
9000 REM "Error Processing
9005 IF ERR=69 THEN GOTO 9500
9006 IF ERR=65 THEN GOTO 9060; REM "Trap error for F1 lookups not active
9010 Y5=ERR,Y6=TCB(5)
9013 ERRMSG$="ERR="+STR(Y5)+" @Lne="+STR(Y6)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9030 IF ERR=66 THEN GOTO 9090
9040 CALL "ZZPROM","XXAW2PIE",X3$,Y7,ERRMSG$,"","",P_LINE
9041 REM "Use prompt for abbrev error routine  CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9800
9051 REM "**** ON Y7 GOTO 09060,09100,09800,09070,09090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 REM "PROG FLOW
9710 IF U1$="" THEN REMOVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9730 RUN U1$(1,6)
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 RUN "ID"; REM "Back to RF menu
9999 END 
56000 REM Revision history
56010 REM SSP#189680 - "Need sequence 2", required salesperson code on ICF lot record to be written to ICL file
