0010 REM "Windows GW - Create & Write a Text File <WG2CWT> from a file name passed as an argument in two or more calls, Header and Data.
0020 SETESC 9300; SETERR 9000
0035 REM "5.0 - 12/11/01 - 11.133888 - plh - SSP# 129412
0040 REM "Copyright 2001 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; NOTCALLED=0; SETERR 0100; ENTER X3$,X4$,ACTION$,FILE$,START_LEN{ALL},DET_REC$,FIELDS2INCLUDE$,TFILE$
0091 REM "DET_REC$ is a string record, formated by the IOList
0092 REM START_LEN(Startposition element, length element) array created during the title record write.
0093 REM FIELDS2INCLUDE$ is a 0102 ...99 string of the field sequences to include"
0094 IF POS(ACTION$="CW")=0 THEN NOTCALLED=1
0095 REM "ACTION$=C for Create text file and W for Write to text file
0100 SETERR 9000
0110 X0$="WG2CWT",X1$="Windows GW - Create & Write Text File"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0200 REM "Program runs in background so skip headings"
0240 REM "CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 09920
0245 IF NOTCALLED THEN CLOSE (14); OPEN (14)"ZZPARM"; READ (14,KEY=FID(0)+DIM(6))X3$,*,X4$; ACTION$="C"; FILE$="ZP8"; FIELDS2INCLUDE$="050609101112131422232425"; REM "STANDALONE TESTING SETUP"
0250 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=*SAME)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST ZZF$; REM "File Layout Master File, used for Header Titles Source"
0320 IOLIST B$; REM "DATA SOURCE"
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O ZZF  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "Background operation so skip this section"
0610 REM "GOSUB 06000
0620 REM "GOSUB 08100
0640 REM IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 00641,09900
1000 REM "BEGIN MAIN PROCESS
1020 REM "If Action$ = C then write header, else if W then write data record"
1050 IF ACTION$="C" THEN GOSUB CREATE_HEADER_RECORD; GOTO 9900
1060 IF ACTION$="W" THEN GOSUB CREATE_DETAIL_RECORD; GOTO 9900
1090 GOTO 9900
1600 GOTO 1000
2000 CREATE_HEADER_RECORD:REM "Create text file, get file layout from ZZF then write title information record. File not indexed so it must remain open on channel 32001 and not closed by zzfiles.
2010 CLOSE (32001)
2020 CLOSE (32002)
2030 TEXT_FILE$="WL"+X3$(40,3)+".TXT"
2040 MACHINE$=X3$(77,1)
2050 TFILE$=%DATAPATH$+DLM+TEXT_FILE$
2051 P=POS(HWD=TFILE$); IF P>0 THEN TFILE$=MID(TFILE$,P+LEN(HWD)+1)
2060 ERASE TEXT_FILE$,ERR=*NEXT
2070 SERIAL TEXT_FILE$,0,0
2080 OPEN LOCK (32001,OPT="TEXT")TEXT_FILE$
2090 FIELDCNT=LEN(FIELDS2INCLUDE$)
2100 IF FIELDCNT>1 THEN {
2110 IF MOD(FIELDCNT,2)>0 THEN {
2120 FIELDCNT=FIELDCNT/2+1
2130  } ELSE {
2140 FIELDCNT=FIELDCNT/2
2150  }
2160 DIM FIELDS2INCLUDE[FIELDCNT-1]
2170  } ELSE {
2180 GOTO DIMENSION_FILE_ARRAY
2190  }
2200 FOR P=0 TO FIELDCNT-1
2210 FIELDS2INCLUDE[P]=NUM(FIELDS2INCLUDE$(P*2+1,2))
2220 NEXT P
2230 DIMENSION_FILE_ARRAY:REM "If FIELDS2INCLUDE$ not sent or error filing array do entire file"
2240 FIELDCNT=FN%NEA("FIELDS2INCLUDE",1)
2250 IF FIELDCNT=0 THEN UBSTART=50 ELSE UBSTART=FIELDCNT
2270 DIM START_LEN[UBSTART,1]
2280 N=1
2310 DESC$=""
2340 IF FIELDCNT=0 THEN LOOPXTIMES=100 ELSE LOOPXTIMES=INT(FIELDS2INCLUDE[FIELDCNT-1])
2350 READ (Z[1],KEY=FILE$(1,3)+DIM(3)+"1  ",DOM=*NEXT)
2360 N=0
2370 FOR X=1 TO LOOPXTIMES
2380 K$=KEY(Z[1],END=WRITE_HEADER_RECORD); READ (Z[1],KEY=K$)IOL=0310
2390 IF K$(1,9)<>FILE$(1,3)+DIM(3)+"1  " THEN EXITTO WRITE_HEADER_RECORD
2400 REM "Test if Fields specified, and loop if field not included"
2410 IF FIELDCNT>0 THEN IF X<>FIELDS2INCLUDE[N] THEN NEXT X
2420 REM IF FIELDCNT=0 AND X>1 THEN LET DESC$=DESC$+$09$ ELSE
2421 IF N>0 THEN DESC$=DESC$+$09$
2430 REM "Check if the data synonym is declared, else use full description"
2440 IF POS(" "<ZZF$(76,13))>0 THEN DESC$=DESC$+AND(STP(ZZF$(76,16),3),DIM(LEN(STP(ZZF$(76,16),3)),$7F$)) ELSE DESC$=DESC$+AND(STP(ZZF$(13,40),3),DIM(LEN(STP(ZZF$(13,40),3)),$7F$))
2450 IF UBSTART=N THEN GOSUB EXPAND_START_ARRAY
2460 REM Load Start_Len with field start position and length
2470 START_LEN[N,0]=NUM(ZZF$(10,3)),START_LEN[N,1]=NUM(ZZF$(56,3))
2480 N=N+1
2490 NEXT X
2500 WRITE_HEADER_RECORD:
2510 DESC$=DESC$+$0D$
2520 WRITE RECORD (32001)DESC$
2530 GOTO 4000
2540 END_CREATE_HEADER_RECORD:RETURN 
3000 CREATE_DETAIL_RECORD:REM "Write detail text records. Since fields are in START_LEN we don't need FIELDS2INCLUDE to parse the data string"
3010 COUNT=DIM(READ MAX(START_LEN,1))
3020 DET_TEXT$=""
3030 IF COUNT=0 THEN GOTO END_CREATE_DETAIL_RECORD
3040 FOR LOOP=0 TO COUNT
3050 IF START_LEN[LOOP,1]=0 THEN EXITTO WRITE_DETAIL_RECORD
3060 IF LOOP>0 THEN DET_TEXT$=DET_TEXT$+$09$
3070 DET_TEXT$=DET_TEXT$+AND(STP(DET_REC$(START_LEN[LOOP,0],START_LEN[LOOP,1]),2),DIM(LEN(STP(DET_REC$(START_LEN[LOOP,0],START_LEN[LOOP,1]),2)),$7F$))
3080 NEXT LOOP
3081 WRITE_DETAIL_RECORD:
3090 DET_TEXT$=DET_TEXT$+$0D$
3100 WRITE RECORD (32001)DET_TEXT$
3110 END_CREATE_DETAIL_RECORD:RETURN 
5000 REM "EOJ
5010 REM "LET C=T; GOSUB 08150
5020 REM IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5040 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=*NEXT)'SB',
6020 PRINT @(0,4),"This CSI utility program will ... "
6165 PRINT (0,ERR=*NEXT)'SF',
6190 RETURN 
7000 EXPAND_START_ARRAY:
7005 UBONE=DIM(READ MAX(START_LEN,1))
7010 UBTWO=DIM(READ MAX(START_LEN,2))
7015 DIM TMP_ARRY(UBONE+1,UBTWO)
7020 TMP_ARRY{0:UBONE,0:UBTWO}=START_LEN{0:UBONE,0:UBTWO}
7021 PRINT TMP_ARRY{ALL}
7022 PRINT START_LEN{ALL}
7025 DIM START_LEN(0:UBONE+1,0:UBTWO)
7030 START_LEN{ALL}=TMP_ARRY{ALL}
7035 REM DO WE NEED TO ERASE TMP_ARRY?
7040 END_EXPAND_START_ARRAY:RETURN 
7045 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 REM CALL "ZZINFO",Z[1],T9,X3$,T,T0,K,B,D,S0,S1,F$
8115 REM PRINT @(0,7),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 REM LET T0=INT(T*.02); IF T0<=1 THEN LET T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 REM CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2050
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
