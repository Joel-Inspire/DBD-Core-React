0010 ! UPDRF1 - File RF1 Maintenance
0035 REM "5.5 - 05/22/07 - 16.63 - jme - SSP# 204718
0037 REM "204718-WMS Mgr console. provide ability to see purchase orders,    
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10]
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF POS("RF1"=PTH(FILENO))=0 THEN Z$="01O RF1...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDRF1;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 IF FILENO<>0 THEN READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDRF1;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 IF FILENO<>0 THEN READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDRF1;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 IF FILENO<>0 THEN PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDRF1;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 IF FILENO<>0 THEN PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDRF1;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 IF FILENO<>0 THEN PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDRF1;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("RF1"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(1,12)+A$(140,8)+A$(196,3)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,12)+A$(140,8)+A$(196,3)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(899),A[10]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,12)+A$(140,8)+A$(196,3)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2200 WRITELOCK:
2210 ENTER FILENO,A$,A{ALL}
2215 PRIMEKEY$=A$(1,12)+A$(140,8)+A$(196,3)
2220 GOSUB INIT
2250 WRITE LOCK (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310
2280 GOSUB WRAPUP
2290 EXIT 
2298 ! 
2299 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,899),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 CLEAR_ORD:
10010 ENTER FILENO,ORDER$
10020 CALL "UPDRF1;READBYKEY",FILENO,0,ORDER$,SEG2$,SEG3$,SEG4$,SEG5$,RF1$,RF1{ALL},FOUNDRF1
10030 CALL "UPDRF1;READNEXT",FILENO,RF1$,RF1{ALL},FOUNDRF1; IF FOUNDRF1 THEN IF RF1$(1,8)=ORDER$ THEN CALL "UPDRF1;DELETE",FILENO,RF1$,RF1{ALL},FOUNDRF1,BUSY; GOTO *SAME
10090 EXIT 
10098 ! 
10099 ! 
11000 SHIP_COMPL:
11005 ! Note some fields are blank. They are not necessary for this process ! 190478
11010 ENTER FILENO,FS2,RFA,X3$,ORDER$,TASK_NUM$
11020 CALL "UPDFS2;READBYKEY",FS2,0,ORDER$,SEG2$,SEG3$,SEG4$,SEG5$,FS2$,FS2{ALL},FOUNDFS2
11030 CALL "UPDFS2;READNEXT",FS2,FS2$,FS2{ALL},FOUNDFS2; IF FOUNDFS2 THEN IF FS2$(147,8)<>ORDER$ THEN FOUNDFS2=0
11100 WHILE FOUNDFS2 ! 11200 wend
11110 IF POS(FS2$(155,1)=" IC")<>0 AND FS2$(9,1)=" " THEN {! 11190}
11120 CALL "UPDRF1;CLEAR_FIELDS",RF1$,RF1{ALL}
11130 RF1$(1,8)=ORDER$,RF1$(9,3)=FS2$(6,3),RF1$(23,20)=FS2$(161,10)+FS2$(19,10); RF1$(20,3)="001"
11135 RF1$(43,10)=TASK_NUM$
11140 QTY=FS2[7]
11145 RF1$(81,4)=FS2$(10,4),RF1$(85,4)=FS2$(124,4)
11150 RF1[0]=QTY,RF1[1]=QTY
11180 IF QTY>0 THEN CALL "UPDRF1;UPDATE",FILENO,RF1$,RF1{ALL},BUSYRF1
11185 CALL "UPDRFA;ADD_SH",RFA,X3$,RF1$,QTY
11190  } ! 11110
11195 CALL "UPDFS2;READNEXT",FS2,FS2$,FS2{ALL},FOUNDFS2; IF FOUNDFS2 THEN IF FS2$(147,8)<>ORDER$ THEN FOUNDFS2=0
11200 WEND 
11490 EXIT 
11498 ! 
11499 ! 
12000 UPDATE_TASK:
12010 ENTER FILENO,FS1,FS2,FMP,PO3,ICF,RFA,SM0,X3$,TASK_NUM$,CALL_CIG
12015 CALL_CIG=0
12050 CALL "UPDRF1;READBYKEY",FILENO,1,TASK_NUM$,SEG2$,SEG3$,SEG4$,SEG5$,RF1$,RF1{ALL},FOUNDRF1
12090 CALL "UPDRF1;READNEXT",FILENO,RF1$,RF1{ALL},FOUNDRF1; IF FOUNDRF1 THEN IF RF1$(43,10)<>TASK_NUM$ THEN FOUNDRF1=0
12100 WHILE FOUNDRF1 ! 12850 wend
12110 CALL "UPDRF1;DELETE",FILENO,RF1$,RF1{ALL},FOUND,BUSY
12150 CALL "UPDFS1;READBYKEY",FS1,0,RF1$(1,8),SEG2$,SEG3$,SEG4$,SEG5$,FS1$,FS1{ALL},FOUNDFS1
12200 IF FOUNDFS1 THEN {! 12790 }
12210 AUTO_INV$="N"; CALL "UPDPO3;READBYKEY",PO3,0,RF1$(1,8),DIM(1),DIM(3),DIM(1),SEG3$,PO3$,PO3{ALL},FOUNDPO3 ! general shipping record "
12220 IF FOUNDPO3 THEN CALL "UPDFMP;READBYKEY",FMP,0,"S",PO3$(150,1),SEG3$,SEG4$,SEG5$,FMPS$,FMPS{ALL},FOUNDFMPS; IF FOUNDFMPS THEN IF MID(FMPS$,275,1)="Y" THEN AUTO_INV$="Y"
12222 IF AUTO_INV$="Y" THEN CALL "UPDSM0;UPD_WMS_SHIPMENT",SM0,X3$,FS1$(118,8),TASK_NUM$,QTY; CALL_CIG=1
12225 IF FOUNDPO3 THEN RF1$(89,1)=PO3$(150,1)
12230 IF FOUNDFMPS THEN RF1$(90,15)=FMPS$(3,15)
12310 CALL "UPDFS2;READBYKEY",FS2,0,RF1$(1,8),RF1$(9,3),SEG3$,SEG4$,SEG5$,FS2$,FS2{ALL},FOUNDFS2
12320 IF FOUNDFS2 THEN {! 12490 }
12330 FS2[7]=RF1[1]; FS2[8]=FS2[0]-FS2[7]; IF FS2[8]<0 THEN FS2[8]=0
12335 QTY=QTY+RF1[1]
12340 CALL "UPDFS2;UPDATE",FS2,FS2$,FS2{ALL},BUSYFS2
12380 IF RF1$(12,8)<>DIM(8) AND RF1[1]=0 THEN CALL "UPDICF;CLEAR_ORD",ICF,RF1$(12,8),RF1$(1,8),RF1$(9,3) ! uncommit lot
12390 IF RF1$(12,8)<>DIM(8) THEN CALL "UPDICF;GET_KEY",ICF,RF1$(12,8),KEY$,FOUNDICF; IF FOUNDICF THEN RF1$(105,12)=PAD(KEY$,12)
12490  } ! 12320
12790  } ! 12200
12800 CALL "UPDRF1;READNEXT",FILENO,RF1$,RF1{ALL},FOUNDRF1; IF FOUNDRF1 THEN IF RF1$(43,10)<>TASK_NUM$ THEN FOUNDRF1=0
12850 WEND ! 12100 while
12990 EXIT 
12998 ! 
12999 ! 
13000 UPDATE_SM7:
13010 ENTER RF1,SM7,PO6,ZZPARM,PO2,FS2,X3$,REC_BIN$
13020 CALL "UPDRF1;READBYKEY",RF1,1,REC_BIN$,SEG2$,SEG3$,SEG4$,SEG5$,RF1$,RF1{ALL},FOUNDRF1
13080 CALL "UPDRF1;READNEXT",RF1,RF1$,RF1{ALL},FOUNDRF1; IF FOUNDRF1 THEN IF RF1$(156,10)<>REC_BIN$ THEN FOUNDRF1=0
13100 WHILE FOUNDRF1 ! 13400 wend
13200 IF RF1$(96,1)<>"Y" THEN CALL "UPDSM7;UPD_WMS_RECEIPT",SM7,ZZPARM,PO2,FS2,X3$,RF1$,RF1{ALL} ELSE WRITE (PO6,KEY="L"+RF1$(56,4)+RF1$(1,8)+RF1$(199,3))
13380 CALL "UPDRF1;DELETE",RF1,RF1$,RF1{ALL},FOUNDRF1_2,BUSYRF1_2
13385 CALL "UPDRF1;READBYKEY",RF1,1,REC_BIN$,SEG2$,SEG3$,SEG4$,SEG5$,RF1$,RF1{ALL},FOUNDRF1
13390 CALL "UPDRF1;READNEXT",RF1,RF1$,RF1{ALL},FOUNDRF1; IF FOUNDRF1 THEN IF RF1$(156,10)<>REC_BIN$ THEN FOUNDRF1=0
13400 WEND 
13490 EXIT 
13498 ! 
13499 ! 
14000 CHECK_STOPOVER_ONLY:
14010 ENTER RF1,PO_NUM$,STOPOVER_ONLY
14020 STOPOVER_ONLY=1
14030 CALL "UPDRF1;READBYKEY",RF1,0,PO_NUM$,SEG2$,SEG3$,SEG4$,SEG5$,RF1$,RF1{ALL},FOUNDRF1
14040 CALL "UPDRF1;READNEXT",RF1,RF1$,RF1{ALL},FOUNDRF1; IF RF1$(1,9)<>PO_NUM$ THEN FOUNDRF1=0
14050 WHILE FOUNDRF1
14060 IF RF1$(96,1)<>"Y" THEN STOPOVER_ONLY=0
14070 CALL "UPDRF1;READNEXT",RF1,RF1$,RF1{ALL},FOUNDRF1; IF RF1$(1,9)<>PO_NUM$ THEN FOUNDRF1=0
14080 WEND 
14090 EXIT 
14098 ! 
14099 ! 
15000 GET_RECV_QTY:
15010 ENTER FILENO,QTY
15015 QTY=0,LAST_PO$=""
15020 CALL "UPDRF1;READBYKEY",RF1,0,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,RF1$,RF1{ALL},FOUNDRF1
15025 CALL "UPDRF1;READNEXT",RF1,RF1$,RF1{ALL},FOUNDRF1
15030 WHILE FOUNDRF1
15035 IF LAST_PO$<>RF1$(1,9) THEN LAST_PO$=RF1$(1,9),QTY=QTY+1
15040 CALL "UPDRF1;READNEXT",RF1,RF1$,RF1{ALL},FOUNDRF1
15050 WEND 
15090 EXIT 
56000 REM "180032-Wireless Warehousing                                        
56002 REM "206117-WMS - Order setup wrong, says shipto C-0001, inventory comes
56004 REM "204718-WMS Mgr console. provide ability to see purchase orders,    
