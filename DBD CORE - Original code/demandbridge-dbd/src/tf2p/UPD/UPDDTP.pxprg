0010 ! UPDDTP - File DTP Maintenance
0035 REM "5.7 - 09/19/24 - 11.182619 - crg - SSP# 307504
0037 REM "307504-DBD-448: Extra trailing comma in City, parsing issues       
0040 REM "Copyright 2024 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0097 ! 
0098 ! ***************************************************
0099 ! 
0310 IOLIST A$
0397 ! 
0398 ! ***************************************************
0399 ! 
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF FILENO=-99 THEN Z$="01S DTP...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1 ELSE IF POS("DTP"=PTH(FILENO))=0 THEN Z$="01S DTP...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0597 ! 
0598 ! ***************************************************
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0697 ! 
0698 ! ***************************************************
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDDTP;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1097 ! 
1098 ! ***************************************************
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDDTP;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1197 ! 
1198 ! ***************************************************
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDDTP;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1297 ! 
1298 ! ***************************************************
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDDTP;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1397 ! 
1398 ! ***************************************************
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDDTP;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1497 ! 
1498 ! ***************************************************
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDDTP;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("DTP"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1597 ! 
1598 ! ***************************************************
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(1,35)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1697 ! 
1698 ! ***************************************************
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,35)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1785 DELETE_END:
1787 GOSUB WRAPUP
1790 EXIT 
1797 ! 
1798 ! ***************************************************
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(4702),A[1]
1890 EXIT 
1897 ! 
1898 ! ***************************************************
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,35)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1997 ! 
1998 ! ***************************************************
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2097 ! 
2098 ! ***************************************************
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,4180),MSG$=""
2990 EXIT 
2997 ! 
2998 ! ***************************************************
2999 ! 
9999 END 
10000 GET_EF_TRANS_NUM:
10020 ENTER OOP,ZZPARM_FL,MEM_FL,X3$,ORDER$,DIVISION$,WAREHOUSE$,CUSTOMER$,SHIP_VIA_CODE$,FLEX_FORMAT_CODE$,TOD_TRANS$,TOD_SEQ,TOD_OK
10030 IF TCB(29)<7100000 THEN GOTO EXIT_ROUTINE
10038 TSEG0$=PAD(DIVISION$,2)
10040 TSEG2$=PAD(WAREHOUSE$,10) ! 234689  - Was TSEG1$
10042 TSEG1$=PAD(CUSTOMER$,20) ! 234689  - Was TSEG2$
10044 TSEG3$=PAD(SHIP_VIA_CODE$,5)
10050 CHECK$=TSEG0$+TSEG1$+TSEG2$+TSEG3$
10060 TOD_OK=OOP'CHECK(CHECK$)
10120 IF TOD_OK THEN {
10125 MEM_KEY$=ORDER$
10130 ! TOD_TRANS$=""
10135 TOD_SEQ=0
10140 READ (MEM_FL,KEY=MEM_KEY$+TOD_TRANS$,DOM=*NEXT)MEM_K$,TOD_TRANS$,TOD_SEQ
10145 ! IF TOD_TRANS$="" THEN CALL "UPDDT0;GET_NEXT_TRANS_NUM",ZZPARM_FL,X3$,TOD_TRANS$
10146 CALL "UPDDT0;GET_NEXT_TRANS_NUM",ZZPARM_FL,X3$,TOD_TRANS$
10150 TOD_SEQ=TOD_SEQ+1
10155 WRITE (MEM_FL,KEY=MEM_KEY$+TOD_TRANS$)MEM_KEY$,TOD_TRANS$,TOD_SEQ
10160  }
10290 EXIT_ROUTINE:EXIT 
10297 ! 
10298 ! ***************************************************
10299 ! 
11000 UPDATE_LINE:
11010 ENTER FILENO,OUTPUT_TYPE$,TOD_TRANS$,TOD_SEQ,F6,F5,F5$,TOD_OK,DISP_CNTRY$ ! SSP307325, add DISP_CNTRY$
11020 IF TOD_OK AND F5>0 THEN {
11030 CALL "UPDDTP;CLEAR_FIELDS",DTP$,DTP{ALL}
11035 DTP$(451,1)="0" ! qty
11040 CALL "UPDDTP;READBYKEY",FILENO,0,OUTPUT_TYPE$,TOD_TRANS$,STR(TOD_SEQ:"00000"),SEG4$,SEG5$,DTP$,DTP{ALL},FOUNDDTP
11050 DTP$(1,20)=OUTPUT_TYPE$,DTP$(21,10)=TOD_TRANS$,DTP$(31,5)=STR(TOD_SEQ:"00000")
11100 SWITCH STR(F5)
11200 CASE "1" ! Order Date
11205 DTP$(41,10)=PAD(F5$,10)
11295 BREAK
11300 CASE "2" ! Order Number
11305 DTP$(51,11)=PAD(F5$,11)
11395 BREAK
11400 CASE "3" ! formatted Customer Code
11405 DTP$(62,11)=PAD(F5$,11)
11445 BREAK
11450 CASE "4" ! Customer P/O
11455 DTP$(73,15)=PAD(F5$,15)
11495 BREAK
11500 CASE "5" ! Ship to Address
11505 GOSUB PARSE_ADDR_INFO ! parse address
11510 IF BPOS=0 THEN {! address line
11515 IF F6=0 THEN DTP$(88,60)=ADDRESS$ ! name
11520 IF F6=1 THEN DTP$(148,60)=ADDRESS$ ! attn
11525 IF F6=2 THEN DTP$(208,60)=ADDRESS$ ! line 1
11530 IF F6=3 THEN DTP$(268,60)=ADDRESS$ ! line 2
11535  } ELSE {! city, state, zip
11540 DTP$(328,16)=CITY$ ! city
11545 DTP$(344,2)=STATE$ ! state
11550 DTP$(346,9)=ZIPCD$ ! zip code            
11560  }
11595 BREAK
11600 CASE "6" ! Mark For
11605 DTP$(355,35)=PAD(F5$,35)
11695 BREAK
11700 CASE "7" ! Requested Ship Date
11705 DTP$(390,10)=PAD(F5$,10)
11795 BREAK
11800 CASE "8" ! Salesperson Name
11805 DTP$(400,20)=PAD(F5$,20)
11895 BREAK
11900 CASE "9" ! How to Ship
11905 DTP$(420,15)=PAD(F5$,15)
11995 BREAK
12000 CASE "10" ! F.O.B
12005 DTP$(435,15)=PAD(F5$,15)
12095 BREAK
12100 CASE "11" ! Ship Via Description
12105 DTP$(450,15)=PAD(F5$,15)
12195 BREAK
12200 CASE "12" ! Item Description
12205 DTP$(465,40)=PAD(F5$,40)
12295 BREAK
12300 CASE "13" ! Item Number
12305 DTP$(505,10)=PAD(F5$,10)
12395 BREAK
12400 CASE "14" ! Starting/Ending Number
12405 F5$=PAD(F5$,19)
12415 P=POS("/"=F5$) ! DBD-268-SSP307404
12420 IF P=0 OR P=19 THEN DTP$(3675,9)=F5$(1,9),DTP$(3684,9)=F5$(10,9) ELSE DTP$(3675,9)=F5$(1,P-1),DTP$(3684,9)=STP(F5$(P+1)) ! DBD-268-SSP307404
12495 BREAK
12500 CASE "15" ! Bin Location
12505 DTP$(534,10)=PAD(F5$,10)
12595 BREAK
12600 CASE "16" ! Inventory Status
12605 DTP$(544,2)=PAD(F5$,2)
12695 BREAK
12700 CASE "17" ! Total Cases
12705 DTP$(546,5)=PAD(STP(F5$,2),5) ! SSP253133
12795 BREAK
12800 CASE "18" ! Packages per Case
12805 DTP$(551,5)=PAD(F5$,5)
12895 BREAK
12900 CASE "19" ! Total Packages
12905 DTP$(556,19)=PAD(F5$,19)
12995 BREAK
13000 CASE "20" ! Units per Package
13005 DTP$(3941,10)=STP(PAD(F5$,10)) ! WO260649, FM2RBC uses "-#####" mask DBD-198-DBSPT-127054-SSP307381, was DTP$(575,5)
13095 BREAK
13100 CASE "21" ! Total Quantity to Ship
13105 DTP$(580,8)=PAD(F5$,8)
13195 BREAK
13200 CASE "22" ! Owner
13205 DTP$(588,4)=PAD(F5$,4)
13295 BREAK
13300 CASE "23" ! Receiving Number
13305 DTP$(592,8)=PAD(F5$,8)
13395 BREAK
13400 CASE "24" ! Original Order Number
13405 DTP$(600,12)=PAD(F5$,12)
13495 BREAK
13500 CASE "25" ! Sold to Name/Address
13503 IS_SOLD_TO=1 ! WO234689
13505 GOSUB PARSE_ADDR_INFO ! parse address
13510 IF BPOS=0 THEN {! address line
13515 IF F6=0 THEN DTP$(612,60)=ADDRESS$ ! name
13520 IF F6=1 THEN DTP$(672,60)=ADDRESS$ ! line 1
13525 IF F6=2 THEN DTP$(732,60)=ADDRESS$ ! line 2
13535  } ELSE {! city, state, zip
13540 DTP$(792,16)=CITY$ ! city
13545 DTP$(808,2)=STATE$ ! state
13550 DTP$(810,9)=ZIPCD$ ! zip code            
13560  }
13595 BREAK
13600 CASE "26" ! Distributor Address
13603 IS_DIST=1 ! SSP248639
13605 GOSUB PARSE_ADDR_INFO ! parse address
13610 IF BPOS=0 THEN {! address line
13615 IF F6=1 THEN DTP$(819,60)=ADDRESS$ ! line 1, SSP248639
13620 IF F6=2 THEN DTP$(879,60)=ADDRESS$ ! line 2, SSP248639
13635  } ELSE {! city, state, zip
13640 DTP$(939,16)=CITY$ ! city
13645 DTP$(955,2)=STATE$ ! state
13650 DTP$(957,9)=ZIPCD$ ! zip code            
13660  }
13695 BREAK
13700 CASE "27" ! Short or Broken Carton Flag
13705 DTP$(966,1)=PAD(F5$,1)
13795 BREAK
13800 CASE "28" ! Unit of Measure
13805 DTP$(967,4)=PAD(F5$,4)
13895 BREAK
13900 CASE "29" ! Page Number Indicator
13905 DTP$(971,8)=PAD(F5$,8)
13995 BREAK
14000 CASE "30" ! '*Backorder*' Message
14005 DTP$(979,11)=PAD(F5$,11)
14095 BREAK
14100 CASE "31" ! Page Number
14105 DTP$(990,2)=PAD(F5$,2)
14195 BREAK
14200 CASE "32" ! Order Date
14205 DTP$(992,8)=PAD(F5$,8)
14295 BREAK
14300 CASE "33" ! Order Date - Second Printing
14305 DTP$(1000,8)=PAD(F5$,8)
14395 BREAK
14400 CASE "34" ! Salesperson Code
14405 DTP$(1008,4)=PAD(F5$,4)
14495 BREAK
14500 CASE "35" ! Order Number - Second Printing
14505 DTP$(1012,9)=PAD(F5$,9)
14595 BREAK
14600 CASE "36" ! Quantity Ordered
14605 DTP$(1021,8)=PAD(F5$,8)
14695 BREAK
14700 CASE "37" ! Quantity Shipped
14705 DTP$(1029,8)=PAD(F5$,8)
14795 BREAK
14800 CASE "38" ! Quantity B/O
14805 DTP$(1037,8)=PAD(F5$,8)
14895 BREAK
14900 CASE "39" ! Total Order Value
14905 DTP$(1045,11)=PAD(F5$,11)
14995 BREAK
15000 CASE "40" ! Message of the Day
15005 IF F6=0 THEN DTP$(1056,40)=PAD(F5$,40) ! line 1
15010 IF F6=1 THEN DTP$(1096,40)=PAD(F5$,40) ! line 2
15095 BREAK
15100 CASE "41" ! Order Number - Third Printing
15105 DTP$(1136,9)=PAD(F5$,9)
15195 BREAK
15200 CASE "42" ! Sold to Name/Address
15203 IS_SOLD_TO=1 ! WO234689
15205 GOSUB PARSE_ADDR_INFO ! parse address
15210 IF BPOS=0 THEN {! address line
15215 IF F6=0 THEN DTP$(1145,60)=ADDRESS$ ! name
15220 IF F6=1 THEN DTP$(1205,60)=ADDRESS$ ! line 1
15225 IF F6=2 THEN DTP$(1265,60)=ADDRESS$ ! line 2
15235  } ELSE {! city, state, zip
15240 DTP$(1325,16)=CITY$ ! city
15245 DTP$(1341,2)=STATE$ ! state
15250 DTP$(1343,9)=ZIPCD$ ! zip code            
15260  }
15295 BREAK
15300 CASE "43" ! Ship to Name/Address
15305 GOSUB PARSE_ADDR_INFO ! parse address
15310 IF BPOS=0 THEN {! address line
15315 IF F6=0 THEN DTP$(1352,60)=ADDRESS$ ! name
15320 IF F6=1 THEN DTP$(1412,60)=ADDRESS$ ! line 1
15325 IF F6=2 THEN DTP$(1472,60)=ADDRESS$ ! line 2
15335  } ELSE {! city, state, zip
15340 DTP$(1532,16)=CITY$ ! city
15345 DTP$(1548,2)=STATE$ ! state
15350 DTP$(1550,9)=ZIPCD$ ! zip code            
15360  }
15395 BREAK
15400 CASE "44" ! Unit of Measure
15405 DTP$(1559,4)=PAD(F5$,4)
15495 BREAK
15500 CASE "45" ! Unit Price
15505 DTP$(1563,9)=PAD(F5$,9)
15595 BREAK
15600 CASE "46" ! Line Extension of Selling Price
15605 DTP$(1572,9)=PAD(F5$,9)
15695 BREAK
15700 CASE "47" ! Blank Lines
15705 DTP$(1581,20)=PAD(F5$,20)
15795 BREAK
15800 CASE "48" ! Unit Cost
15805 DTP$(1601,9)=PAD(F5$,9)
15895 BREAK
15900 CASE "49" ! Line Extension of Cost
15905 DTP$(1610,9)=PAD(F5$,9)
15995 BREAK
16000 CASE "50" ! Total Order Gross Profit
16005 DTP$(1619,11)=PAD(F5$,11)
16095 BREAK
16100 CASE "51" ! Total Order Gross Profit %
16105 DTP$(1630,6)=PAD(F5$,6)
16195 BREAK
16200 CASE "52" ! Total Order Cost
16205 DTP$(1636,11)=PAD(F5$,11)
16295 BREAK
16300 CASE "53" ! Commission Code on Line Item
16305 DTP$(1647,5)=PAD(F5$,5)
16395 BREAK
16400 CASE "54" ! Total Order Commission
16405 DTP$(1652,9)=PAD(F5$,9)
16495 BREAK
16500 CASE "55" ! Subtitute Bill to Address
16505 DTP$(1661,60)=PAD(F5$,60)
16595 BREAK
16600 CASE "56" ! Customer's Phone Number
16605 DTP$(1721,14)=PAD(F5$,14)
16695 BREAK
16700 CASE "57" ! Customer's Fax Number
16705 DTP$(1735,14)=PAD(F5$,14)
16795 BREAK
16800 CASE "58" ! Price Reqs using FMS Price
16805 DTP$(1749,10)=PAD(F5$,10)
16895 BREAK
16900 CASE "59" ! Ship to Location Code
16905 DTP$(1759,4)=PAD(F5$,4)
16995 BREAK
17000 CASE "60" ! P/O Number of the Lot
17005 DTP$(1763,10)=PAD(F5$,10)
17095 BREAK
17100 CASE "61" ! P/O Date of the Lot
17105 DTP$(1773,10)=PAD(F5$,10)
17195 BREAK
17200 CASE "62" ! Factory Job Number of the Lot
17205 DTP$(1783,12)=PAD(F5$,12)
17295 BREAK
17300 CASE "63" ! Vendor Number of the Lot
17305 DTP$(1795,10)=PAD(F5$,10)
17395 BREAK
17400 CASE "64" ! Plant Number of the Lot
17405 DTP$(1805,4)=PAD(F5$,4)
17495 BREAK
17500 CASE "65" ! Customer P/O of the Lot
17505 DTP$(1809,15)=PAD(F5$,15)
17595 BREAK
17600 CASE "66" ! Comment Line of the Lot
17605 DTP$(1824,40)=PAD(F5$,40)
17695 BREAK
17700 CASE "67" ! Total Number of Cartons
17705 DTP$(1864,6)=PAD(F5$,6)
17795 BREAK
17800 CASE "68" ! Total Weight of Cartons
17805 DTP$(1870,6)=PAD(F5$,6)
17895 BREAK
17900 CASE "69" ! Ordered By
17905 DTP$(1876,20)=PAD(F5$,20)
17995 BREAK
18000 CASE "70" ! Line Extension of Weight
18005 DTP$(1896,6)=PAD(F5$,6)
18095 BREAK
18100 CASE "71" ! Customer's Ship to Location Description
18105 DTP$(1902,9)=PAD(F5$,9)
18195 BREAK
18200 CASE "72" ! Ship to Address
18205 GOSUB PARSE_ADDR_INFO ! parse address
18210 IF BPOS=0 THEN {! address line
18215 IF F6=0 THEN DTP$(1911,60)=ADDRESS$ ! name
18220 IF F6=1 THEN DTP$(1971,60)=ADDRESS$ ! attn
18225 IF F6=2 THEN DTP$(2031,60)=ADDRESS$ ! line 1
18230 IF F6=3 THEN DTP$(2091,60)=ADDRESS$ ! line 2
18235  } ELSE {! city, state, zip
18240 DTP$(2151,16)=CITY$ ! city
18245 DTP$(2167,2)=STATE$ ! state
18250 DTP$(2169,9)=ZIPCD$ ! zip code            
18260  }
18295 BREAK
18300 CASE "73" ! Cartons Shipped
18305 DTP$(2178,4)=PAD(F5$,4)
18395 BREAK
18400 CASE "74" ! Carton Pack on Order Line
18405 DTP$(2182,8)=PAD(F5$,8)
18495 BREAK
18500 CASE "75" ! Cartons Ordered
18505 DTP$(2190,8)=PAD(F5$,8)
18595 BREAK
18600 CASE "76" ! Size Information
18605 DTP$(2198,27)=PAD(F5$,27)
18695 BREAK
18700 CASE "77" ! Vendor Name/Address
18705 GOSUB PARSE_ADDR_INFO ! parse address
18710 IF BPOS=0 THEN {! address line
18715 IF F6=0 THEN DTP$(2225,60)=ADDRESS$ ! name
18720 IF F6=1 THEN DTP$(2285,60)=ADDRESS$ ! attn
18725 IF F6=2 THEN DTP$(2345,60)=ADDRESS$ ! line 1
18730 IF F6=3 THEN DTP$(2405,60)=ADDRESS$ ! line 2
18735  } ELSE {! city, state, zip
18740 DTP$(2465,16)=CITY$ ! city
18745 DTP$(2481,2)=STATE$ ! state
18750 DTP$(2483,9)=ZIPCD$ ! zip code            
18760  }
18800 CASE "78" ! Operator Login Code when Last Ordered
18805 DTP$(2492,3)=PAD(F5$,3)
18895 BREAK
18900 CASE "79" ! Operator Login Code for Last Modification
18905 DTP$(2495,3)=PAD(F5$,3)
18995 BREAK
19000 CASE "80" ! Date of Last Order Modification
19005 DTP$(3752,10)=PAD(F5$,10) ! SSP248639, change from 2498,8 to 3752,10
19095 BREAK
19100 CASE "81" ! On Hand Committed
19105 DTP$(2506,8)=PAD(F5$,8)
19195 BREAK
19200 CASE "82" ! Reserved for Future Use
19205 DTP$(2514,10)=PAD(F5$,10)
19295 BREAK
19300 CASE "83" ! Reserved for Future Use
19305 DTP$(2524,10)=PAD(F5$,10)
19395 BREAK
19400 CASE "84" ! Reserved for Future Use (CCC)
19405 DTP$(2534,10)=PAD(F5$,10)
19495 BREAK
19500 CASE "85" ! Reserved for Future Use (DPT)
19505 DTP$(2544,4)=PAD(F5$,4)
19595 BREAK
19600 CASE "86" ! Non-committee Cartons for Lot Item Warehouse
19605 DTP$(2548,8)=PAD(F5$,8)
19695 BREAK
19700 CASE "87" ! Supplier Item Code
19705 DTP$(2556,20)=PAD(F5$,20)
19795 BREAK
19800 CASE "88" ! P/O Code Suffix 
19805 DTP$(2576,1)=PAD(F5$,1)
19895 BREAK
19900 CASE "89" ! Reserved for Future Use (STD)
19905 DTP$(2577,30)=PAD(F5$,30)
19995 BREAK
20000 CASE "90" ! Sold to Name
20005 DTP$(2607,60)=PAD(F5$,60)
20095 BREAK
20100 CASE "91" ! Order Number + Ship to Code for Scale
20105 DTP$(2667,12)=PAD(F5$,12)
20195 BREAK
20200 CASE "92" ! '*Reprint*' Message
20205 DTP$(2679,13)=PAD(F5$,13)
20295 BREAK
20300 CASE "93" ! Date/Time Packing List was Printed
20305 DTP$(2692,18)=PAD(F5$,18)
20395 BREAK
20400 CASE "94" ! Customer's Item Code
20405 DTP$(2710,20)=PAD(F5$,20)
20495 BREAK
20500 CASE "95" ! Receiving Deapartment
20505 DTP$(2730,20)=PAD(F5$,20)
20595 BREAK
20600 CASE "96" ! Bin Location from 'I/C-S1-Screen 4'
20605 DTP$(2750,10)=PAD(F5$,10)
20695 BREAK
20700 CASE "97" ! Ship to Address
20705 GOSUB PARSE_ADDR_INFO
20710 IF BPOS=0 THEN {
20715 IF F6=0 THEN DTP$(2760,60)=ADDRESS$ ! name
20720 IF F6=1 THEN DTP$(2820,60)=ADDRESS$ ! attn
20725 IF F6=2 THEN DTP$(2880,60)=ADDRESS$ ! line 1
20730 IF F6=3 THEN DTP$(2940,60)=ADDRESS$ ! line 2
20735  } ELSE {! city, state, zip
20745 DTP$(3000,16)=CITY$ ! city
20750 DTP$(3016,2)=STATE$ ! state
20755 DTP$(3018,9)=ZIPCD$ ! zip code            
20760  }
20795 BREAK
20800 CASE "98" ! Ship to Address
20805 GOSUB PARSE_ADDR_INFO
20810 IF BPOS=0 THEN {
20815 IF F6=0 THEN DTP$(3027,60)=ADDRESS$ ! name
20820 IF F6=1 THEN DTP$(3087,60)=ADDRESS$ ! attn
20825 IF F6=2 THEN DTP$(3147,60)=ADDRESS$ ! line 1
20830 IF F6=3 THEN DTP$(3207,60)=ADDRESS$ ! line 2
20835  } ELSE {! city, state, zip
20845 DTP$(3267,16)=CITY$ ! city
20850 DTP$(3283,2)=STATE$ ! state
20855 DTP$(3285,9)=ZIPCD$ ! zip code            
20860  }
20895 BREAK
20900 CASE "99" ! Ship to Description
20905 DTP$(3294,35)=PAD(F5$,35)
20995 BREAK
21000 CASE "100" ! Customer Code/Item Code
21005 DTP$(3329,20)=PAD(F5$,20)
21095 BREAK
21100 CASE "101" ! Inside Delivery
21105 DTP$(3349,15)=PAD(F5$,15)
21195 BREAK
21200 CASE "102" ! Customer Comment
21205 DTP$(3364,40)=PAD(F5$,40)
21295 BREAK
21300 CASE "103" ! Print 'Balance to Follow' if backorder
21305 DTP$(3404,17)=PAD(F5$,17)
21307 BREAK
21395 BREAK
21400 CASE "104" ! Print 'Balance of Item' if shipped B/O
21405 DTP$(3421,15)=PAD(F5$,15)
21495 BREAK
21500 CASE "105" ! Alternate Customer Code
21505 DTP$(3436,20)=PAD(F5$,20)
21595 BREAK
21600 CASE "106" ! Reserved Field (GBNO)
21605 DTP$(3456,11)=PAD(F5$,11)
21695 BREAK
21700 CASE "107" ! Term Code
21705 DTP$(3467,2)=PAD(F5$,2)
21795 BREAK
21800 CASE "108" ! Reserved Field (GBBM)
21805 DTP$(3469,10)=PAD(F5$,10)
21895 BREAK
21900 CASE "109" ! Reserved Field (GBIC)
21905 DTP$(3479,20)=PAD(F5$,20)
21995 BREAK
22000 CASE "110" ! Reserved Field (GBSD)
22005 DTP$(3499,3)=PAD(F5$,3)
22095 BREAK
22100 CASE "111" ! Order Number + 2 Characters + Ship for Scale
22105 DTP$(3502,14)=PAD(F5$,14)
22195 BREAK
22200 CASE "112" ! Order Line Number
22205 DTP$(3516,3)=PAD(F5$,3)
22295 BREAK
22300 CASE "113" ! Ship to County from Zip Code File
22305 DTP$(3519,12)=PAD(F5$,12)
22395 BREAK
22400 CASE "114" ! Ship to Fax Number
22405 DTP$(3531,14)=PAD(F5$,14)
22495 BREAK
22500 CASE "115" ! '*Continued*' Message
22505 DTP$(3545,11)=PAD(F5$,11)
22595 BREAK
22600 CASE "116" ! Warehouse
22605 DTP$(3556,4)=PAD(F5$,4)
22695 BREAK
22700 CASE "117" ! Vendor Number if Direct Ship
22705 DTP$(3560,12)=PAD(F5$,12)
22795 BREAK
22800 CASE "118" ! WebEC 3rd Party Info 1
22805 DTP$(3572,20)=PAD(F5$,20)
22895 BREAK
22900 CASE "119" ! WebEC 3rd Party Info 2
22905 DTP$(3592,20)=PAD(F5$,20)
22995 BREAK
23000 CASE "120" ! WebEC 3rd Party Id
23005 DTP$(3612,10)=PAD(F5$,10)
23095 BREAK
23100 CASE "121" ! Ship With
23105 DTP$(3622,15)=PAD(F5$,15)
23195 BREAK
23200 CASE "122" ! TopForm PDF Filename
23205 DTP$(3637,30)=PAD(F5$,30)
23295 BREAK
23300 CASE "123" ! Lost Serial Number
23305 DTP$(3667,8)=PAD(F5$,8)
23395 BREAK
24000 CASE "400" ! Ok to Print
24005 DTP$(36,1)=PAD(F5$,1)
24095 BREAK
24100 CASE "401" ! Division
24105 DTP$(37,2)=PAD(F5$,2)
24195 BREAK
24200 CASE "402" ! Flexible Format Code
24205 DTP$(39,1)=PAD(F5$,1)
24295 BREAK
24300 CASE "403" ! Ship Via Code
24305 DTP$(40,1)=PAD(F5$,1)
24306 BREAK ! SSP253133
24310 CASE "3693"
24312 DTP$(3693,10)=F5$
24314 BREAK
24320 CASE "3748" ! Update actual warehouse - 234689
24322 DTP$(3748,4)=PAD(F5$,4)
24324 BREAK
24350 CASE "124" ! Business Unit (Warehouse) WO220758
24355 DTP$(3703,10)=PAD(F5$,10)
24360 BREAK
24365 CASE "125" ! How to ship code WO220758
24370 DTP$(3713,1)=PAD(F5$,1)
24375 BREAK
24380 CASE "126" ! Shipper ID WO220758
24385 DTP$(3714,20)=PAD(F5$,20)
24390 BREAK
24395 CASE "127" ! Second printing of field 111 WO220758
24400 DTP$(3734,14)=PAD(F5$,14)
24405 BREAK
24410 CASE "159" ! SSP282705, FlowPoint Token
24415 DTP$(3762,40)=PAD(F5$,40)
24420 BREAK
24425 CASE "160" ! SSP282705, Order Line Type
24430 DTP$(3802,1)=PAD(F5$,1)
24435 BREAK
24440 CASE "161" ! SSP290922, 3rd Party Order Line ID
24445 DTP$(3803,100)=PAD(F5$,100)
24450 BREAK
24455 CASE "141" ! SSP303626
24460 DTP$(3903,15)=PAD(F5$,15)
24465 BREAK
24470 CASE "162" ! SSP305128
24475 DTP$(3918,11)=PAD(F5$,11)
24480 BREAK
24485 CASE "163" ! SSP305128
24490 DTP$(3929,10)=PAD(F5$,10)
24495 BREAK
24500 CASE "164" ! SSP30710, Ship to Country
24505 DTP$(3939,2)=PAD(F5$,2)
24510 BREAK
24515 CASE "3951" ! DBD-279-SSP307413
24520 DTP$(3951,1)=PAD(F5$,1)
24525 BREAK
24900 DEFAULT 
24905 BREAK
24950 END SWITCH 
24955 CALL "UPDDTP;UPDATE",FILENO,DTP$,DTP{ALL},BUSY
24960  }
24970 EXIT 
24997 ! 
24998 ! ***************************************************
24999 ! 
25000 UPDATE_HDR_INFO:
25010 ENTER FILENO,OUTPUT_TYPE$,TOD_TRANS$,MEM_FL
25020 READ (MEM_FL,KEY="",ERR=*NEXT)
25100 READ (MEM_FL,END=25990)MEM_KEY$,TRANS$,TOD_SEQ
25150 CALL "UPDDTP;READBYKEY",FILENO,0,OUTPUT_TYPE$,TRANS$,"00000",SEG4$,SEG5$,DTPHDR$,DTPHDR{ALL},FOUNDDTPHDR; IF FOUNDDTPHDR THEN CALL "UPDDTP;DELETE",FILENO,DTPHDR$,DTPHDR{ALL},FOUND,BUSY
25190 CALL "UPDDTP;READNEXT",FILENO,DTP$,DTP{ALL},FOUNDDTP; IF FOUNDDTP THEN IF DTP$(1,30)<>DTPHDR$(1,30) THEN FOUNDDTP=0
25200 WHILE FOUNDDTP
25210 FOR J=37 TO LEN(DTPHDR$)
25220 IF DTPHDR$(J,1)<>" " THEN DTP$(J,1)=DTPHDR$(J,1)
25230 XP=POS("'"=DTP$); IF XP<>0 THEN DTP$(XP,1)=" "; GOTO *SAME ! problem with " in report writer
25232 IF %C$<>"629" THEN XP=POS("&"=DTP$); IF XP<>0 THEN DTP$(XP,1)=" "; GOTO *SAME ! problem with " in report writer
25235 XP=POS(QUO=DTP$); IF XP<>0 THEN DTP$(XP,1)=" "; GOTO *SAME ! problem with " in report writer
25240 NEXT J
25250 CALL "UPDDTP;UPDATE",FILENO,DTP$,DTP{ALL},BUSY
25280 CALL "UPDDTP;READNEXT",FILENO,DTP$,DTP{ALL},FOUNDDTP; IF FOUNDDTP THEN IF DTP$(1,30)<>DTPHDR$(1,30) THEN FOUNDDTP=0
25290 WEND 
25500 GOTO 25100
25990 EXIT 
25997 ! 
25998 ! ***************************************************
25999 ! 
30000 PARSE_ADDR_INFO:
30010 BPOS=0 ! initialize the pointer
30015 ADDRESS$="" ! initialize the address fld
30020 CITY$="" ! initialize the city
30025 STATE$="" ! initialize the state
30030 ZIPCD$="" ! initialize the zip code
30040 IF F6=4 OR (F6<>1 AND IS_SOLD_TO) OR (F6<>1 AND IS_DIST) THEN BPOS=POS(","=F5$) ! search for the comma, WO220758, only if we have the city/state/zip line, WO234689 - F6=3 for SOLD_TO addresses, SSP248639 DIST addresses
30045 IF F6=0 THEN BPOS=0 ELSE IF F6=1 AND IS_DIST THEN BPOS=0 ! if its the first line, skip. SSP248639, DIST address
30050 IF BPOS>0 THEN {
30055 IF POS(",,"=F5$) THEN F5$=SUB(F5$,",,",",") ! 307504
30060 CITY$=F5$(1,BPOS-1) ! set the city
30070 STATE$=F5$(BPOS+2,2) ! set the state
30080 ZIPCD$=F5$(BPOS+5); GOSUB CLEAN_ZIP_CODE; IF LEN(ZIPCD$)>9 THEN ZIPCD$=STP(ZIPCD$,3,"-") ! set the zip code SSP248149, was BPOS+4 but always space preceeding zip.  The zip fields in DTP are only 9 characters, if data is greater than 9 chars then remove hyphen. SSP307325, may need to remove country
30090  } ELSE {
30100 ADDRESS$=PAD(F5$,60) ! set the address 
30150  }
30195 RETURN 
30199 ! 
30200 CLEAN_ZIP_CODE:! SSP307325, if country at end then remove
30205 ZIPCD$=STP(ZIPCD$,1)
30210 IF STP(DISP_CNTRY$)="" THEN RETURN 
30215 ZC=POS(DISP_CNTRY$=ZIPCD$,-1)
30220 IF ZC=0 THEN RETURN 
30225 ZIPCD$=ZIPCD$(1,ZC-1)
30230 ZIPCD$=STP(ZIPCD$,1)
30240 RETURN 
30245 ! 
39997 ! 
39998 ! ***************************************************
39999 ! 
40000 VALIDATE_DTP:
40001 ! 
40002 ! This routine will validate the packing list to against
40003 ! the DT0 file to determine if it meets the criteria to
40004 ! write the record to the DTP file.
40005 ! 
40006 ! The following field(s) are passed to this routine:
40007 ! DT0_FL = Channel No DT0 is opened on
40008 ! DIVISION$ = Division
40009 ! WAREHOUSE$ = Warehouse
40010 ! CUSTOMER$ = Customer
40011 ! SHIP_VIA_CODE$ = Ship Via Code
40012 ! FLEX_FORMAT_CODE$ = Flex Format Code
40013 ! 
40014 ! The following field(s) are returned to the calling program:
40015 ! TOD_OK = Flag to determine if the order is written to DTP
40016 ! 
40050 ENTER DT0_FL,DIVISION$,WAREHOUSE$,CUSTOMER$,SHIP_VIA_CODE$,FLEX_FORMAT_CODE$,DT0_KEY$,TOD_OK
40055 ! 
40070 BPOS=31 ! set the beginning position for the loop
40075 EPOS=0 ! set the ending position for the loop
40100 ! 
40101 ! The for...next loop below sets the fields via counting
40102 ! in binary according to the counter variable "AB".
40103 ! If there is a match, then the "TOD_OK" flag is set and
40104 ! the counter variable "AB" is set to the max value "EPOS"
40105 ! which will cause the for...next loop to exit and return
40106 ! control back to the calling program.
40107 ! 
40108 ! The following fields are mapped to:
40109 ! FLD1$ = Division
40110 ! FLD2$ = Warehouse
40111 ! FLD3$ = Customer
40112 ! FLD4$ = Ship Via Code
40113 ! FLD5$ = Flex Format Code
40114 ! 
40115 ! SSP 234689 - FLD2$ and FLD3$ interchanged, in VALIDATE_DT0
40116 ! 
40120 FOR AB=BPOS TO EPOS STEP -1
40130 SWITCH AB
40200 CASE 31
40205 FLD1$=DIVISION$
40210 FLD2$=WAREHOUSE$
40215 FLD3$=CUSTOMER$
40220 FLD4$=SHIP_VIA_CODE$
40225 FLD5$=FLEX_FORMAT_CODE$
40230 GOSUB VALIDATE_DT0
40235 BREAK
40300 CASE 30
40305 FLD1$=DIVISION$
40310 FLD2$=WAREHOUSE$
40315 FLD3$=CUSTOMER$
40320 FLD4$=SHIP_VIA_CODE$
40325 FLD5$=""
40330 GOSUB VALIDATE_DT0
40335 BREAK
40400 CASE 29
40405 FLD1$=DIVISION$
40410 FLD2$=WAREHOUSE$
40415 FLD3$=CUSTOMER$
40420 FLD4$=""
40425 FLD5$=FLEX_FORMAT_CODE$
40430 GOSUB VALIDATE_DT0
40435 BREAK
40500 CASE 28
40505 FLD1$=DIVISION$
40510 FLD2$=WAREHOUSE$
40515 FLD3$=CUSTOMER$
40520 FLD4$=""
40525 FLD5$=""
40530 GOSUB VALIDATE_DT0
40535 BREAK
40600 CASE 27
40605 FLD1$=DIVISION$
40610 FLD2$=WAREHOUSE$
40615 FLD3$=""
40620 FLD4$=SHIP_VIA_CODE$
40625 FLD5$=FLEX_FORMAT_CODE$
40630 GOSUB VALIDATE_DT0
40635 BREAK
40700 CASE 26
40705 FLD1$=DIVISION$
40710 FLD2$=WAREHOUSE$
40715 FLD3$=""
40720 FLD4$=SHIP_VIA_CODE$
40725 FLD5$=""
40730 GOSUB VALIDATE_DT0
40735 BREAK
40800 CASE 25
40805 FLD1$=DIVISION$
40810 FLD2$=WAREHOUSE$
40815 FLD3$=""
40820 FLD4$=""
40825 FLD5$=FLEX_FORMAT_CODE$
40830 GOSUB VALIDATE_DT0
40835 BREAK
40900 CASE 24
40905 FLD1$=DIVISION$
40910 FLD2$=WAREHOUSE$
40915 FLD3$=""
40920 FLD4$=""
40925 FLD5$=""
40930 GOSUB VALIDATE_DT0
40935 BREAK
41000 CASE 23
41005 FLD1$=DIVISION$
41010 FLD2$=""
41015 FLD3$=CUSTOMER$
41020 FLD4$=SHIP_VIA_CODE$
41025 FLD5$=FLEX_FORMAT_CODE$
41030 GOSUB VALIDATE_DT0
41035 BREAK
41100 CASE 22
41105 FLD1$=DIVISION$
41110 FLD2$=""
41115 FLD3$=CUSTOMER$
41120 FLD4$=SHIP_VIA_CODE$
41125 FLD5$=""
41130 GOSUB VALIDATE_DT0
41135 BREAK
41200 CASE 21
41205 FLD1$=DIVISION$
41210 FLD2$=""
41215 FLD3$=CUSTOMER$
41220 FLD4$=""
41225 FLD5$=FLEX_FORMAT_CODE$
41230 GOSUB VALIDATE_DT0
41235 BREAK
41300 CASE 20
41305 FLD1$=DIVISION$
41310 FLD2$=""
41315 FLD3$=CUSTOMER$
41320 FLD4$=""
41325 FLD5$=""
41330 GOSUB VALIDATE_DT0
41335 BREAK
41400 CASE 19
41405 FLD1$=DIVISION$
41410 FLD2$=""
41415 FLD3$=""
41420 FLD4$=SHIP_VIA_CODE$
41425 FLD5$=FLEX_FORMAT_CODE$
41430 GOSUB VALIDATE_DT0
41435 BREAK
41500 CASE 18
41505 FLD1$=DIVISION$
41510 FLD2$=""
41515 FLD3$=""
41520 FLD4$=SHIP_VIA_CODE$
41525 FLD5$=""
41530 GOSUB VALIDATE_DT0
41535 BREAK
41600 CASE 17
41605 FLD1$=DIVISION$
41610 FLD2$=""
41615 FLD3$=""
41620 FLD4$=""
41625 FLD5$=FLEX_FORMAT_CODE$
41630 GOSUB VALIDATE_DT0
41635 BREAK
41700 CASE 16
41705 FLD1$=DIVISION$
41710 FLD2$=""
41715 FLD3$=""
41720 FLD4$=""
41725 FLD5$=""
41730 GOSUB VALIDATE_DT0
41735 BREAK
41800 CASE 15
41805 FLD1$=""
41810 FLD2$=WAREHOUSE$
41815 FLD3$=CUSTOMER$
41820 FLD4$=SHIP_VIA_CODE$
41825 FLD5$=FLEX_FORMAT_CODE$
41830 GOSUB VALIDATE_DT0
41835 BREAK
41900 CASE 14
41905 FLD1$=""
41910 FLD2$=WAREHOUSE$
41915 FLD3$=CUSTOMER$
41920 FLD4$=SHIP_VIA_CODE$
41925 FLD5$=""
41930 GOSUB VALIDATE_DT0
41935 BREAK
42000 CASE 13
42005 FLD1$=""
42010 FLD2$=WAREHOUSE$
42015 FLD3$=CUSTOMER$
42020 FLD4$=""
42025 FLD5$=FLEX_FORMAT_CODE$
42030 GOSUB VALIDATE_DT0
42035 BREAK
42100 CASE 12
42105 FLD1$=""
42110 FLD2$=WAREHOUSE$
42115 FLD3$=CUSTOMER$
42120 FLD4$=""
42125 FLD5$=""
42130 GOSUB VALIDATE_DT0
42135 BREAK
42200 CASE 11
42205 FLD1$=""
42210 FLD2$=WAREHOUSE$
42215 FLD3$=""
42220 FLD4$=SHIP_VIA_CODE$
42225 FLD5$=FLEX_FORMAT_CODE$
42230 GOSUB VALIDATE_DT0
42235 BREAK
42300 CASE 10
42305 FLD1$=""
42310 FLD2$=WAREHOUSE$
42315 FLD3$=""
42320 FLD4$=SHIP_VIA_CODE$
42325 FLD5$=""
42330 GOSUB VALIDATE_DT0
42335 BREAK
42400 CASE 9
42405 FLD1$=""
42410 FLD2$=WAREHOUSE$
42415 FLD3$=""
42420 FLD4$=""
42425 FLD5$=FLEX_FORMAT_CODE$
42430 GOSUB VALIDATE_DT0
42435 BREAK
42500 CASE 8
42505 FLD1$=""
42510 FLD2$=WAREHOUSE$
42515 FLD3$=""
42520 FLD4$=""
42525 FLD5$=""
42530 GOSUB VALIDATE_DT0
42535 BREAK
42600 CASE 7
42605 FLD1$=""
42610 FLD2$=""
42615 FLD3$=CUSTOMER$
42620 FLD4$=SHIP_VIA_CODE$
42625 FLD5$=FLEX_FORMAT_CODE$
42630 GOSUB VALIDATE_DT0
42635 BREAK
42700 CASE 6
42705 FLD1$=""
42710 FLD2$=""
42715 FLD3$=CUSTOMER$
42720 FLD4$=SHIP_VIA_CODE$
42725 FLD5$=""
42730 GOSUB VALIDATE_DT0
42735 BREAK
42800 CASE 5
42805 FLD1$=""
42810 FLD2$=""
42815 FLD3$=CUSTOMER$
42820 FLD4$=""
42825 FLD5$=FLEX_FORMAT_CODE$
42830 GOSUB VALIDATE_DT0
42835 BREAK
42900 CASE 4
42905 FLD1$=""
42910 FLD2$=""
42915 FLD3$=CUSTOMER$
42920 FLD4$=""
42925 FLD5$=""
42930 GOSUB VALIDATE_DT0
42935 BREAK
43000 CASE 3
43005 FLD1$=""
43010 FLD2$=""
43015 FLD3$=""
43020 FLD4$=SHIP_VIA_CODE$
43025 FLD5$=FLEX_FORMAT_CODE$
43030 GOSUB VALIDATE_DT0
43035 BREAK
43100 CASE 2
43105 FLD1$=""
43110 FLD2$=""
43115 FLD3$=""
43120 FLD4$=SHIP_VIA_CODE$
43125 FLD5$=""
43130 GOSUB VALIDATE_DT0
43135 BREAK
43200 CASE 1
43205 FLD1$=""
43210 FLD2$=""
43215 FLD3$=""
43220 FLD4$=""
43225 FLD5$=FLEX_FORMAT_CODE$
43230 GOSUB VALIDATE_DT0
43235 BREAK
43300 CASE 0
43305 FLD1$=""
43310 FLD2$=""
43315 FLD3$=""
43320 FLD4$=""
43325 FLD5$=""
43330 GOSUB VALIDATE_DT0
43335 BREAK
43910 END SWITCH 
43920 IF TOD_OK THEN {
43925 AB=EPOS ! a match found, exit the for...next loop
43930 DT0_KEY$=OUTPUT_TYPE$+FLD1$+FLD2$+FLD3$+FLD6$
43935  }
43950 NEXT AB
43995 EXIT 
43997 ! 
43998 ! ***************************************************
43999 ! 
45000 VALIDATE_DT0:
45001 ! 
45002 ! This routine will check to see if there is a match
45003 ! in the DT0 file for that Packing List. If there is
45005 ! a match, the "TOD_OK" flag is set.
45006 ! 
45020 FLD6$=FLD4$+FLD5$
45030 OUTPUT_TYPE$=PAD("WHS_PACKING_LIST",20) ! set the output type
45040 CALL "UPDDT0;CHECK",DT0_FL,OUTPUT_TYPE$,FLD1$,FLD3$,FLD2$,FLD6$,TOD_OK
45095 RETURN 
45097 ! 
45098 ! ***************************************************
45099 ! 
56000 REM + Modification History
56002 REM "201588-Create XML output of orders to remote warehouse location    
56004 REM "220758-Additional to WO201588 - COMAC XML Packing List
56006 REM "234689-Create new Output Director report for the WHS_PACKING_LIST  
56008 REM "248149-XML orders to IM warehouse have space preceeding zip code.  
56010 REM "248639-DTP address fields missing data, special shipping support.  
56012 REM "253133-Rockpoint Warehouse - Output Director WHS PACKING LIST and  
56014 REM "260649-Continental Logistics (CTL) CSV PL file via Output Director.
56016 REM "282705-Flowpoint; packing list data output from DB/d to FP         
56018 ! 282705 - ADD ORDER_LINE_TYPE TO DTP, FIELD 160 TO FFU
56020 REM "290922-FlowPoint; Warehouse Business Business Cards Plus Send PL   
56022 REM "298982-FlowPoint; Aero orders failed, item should have & but coming
56024 REM "303626-Need PL field 141 Account Number in DTP for Output Director.
56026 REM "305128-FlowPoint; Company 589/Wise Warehouse Orders/Shipping       
56028 REM "307210-DBD-62-International shipping address - add country code
56030 REM "307325-DBSPT-108269; PL Ship-to Zip includes country when not US   
56032 REM "307381-DBD-198-DBSPT-127054;DTP UNITS_PER_PACKAGE short, 5 chars   
56034 REM "307404-DBD-268; UPDDTP START_NUMBER END_NUMBER incorrect           
56036 REM "307413-DBD-279; DTP field FS2 SPECIAL_SHIPPING                     
56037 REM "307504-DBD-448: Extra trailing comma in City, parsing issues       
