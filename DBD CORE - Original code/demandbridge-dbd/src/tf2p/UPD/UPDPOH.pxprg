0010 ! UPDPOH - File POH Maintenance
0035 REM "5.7 - 10/14/14 - 16.881111 - crg - SSP# 272613
0037 REM "272613-WMS:  Issue with Receiving and Put Away for > 99 entries  
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF POS("POH"=PTH(FILENO))=0 THEN Z$="01O POH...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDPOH;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 IF FILENO<>0 THEN READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDPOH;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 IF FILENO<>0 THEN READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDPOH;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 IF FILENO<>0 THEN PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDPOH;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 IF FILENO<>0 THEN PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDPOH;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 IF FILENO<>0 THEN PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDPOH;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("POH"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(41,9)+A$(118,3)+A$(1,20)+A$(21,4)+A$(25,6)+A$(31,2)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(41,9)+A$(118,3)+A$(1,20)+A$(21,4)+A$(25,6)+A$(31,2)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(269),A[12]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(41,9)+A$(118,3)+A$(1,20)+A$(21,4)+A$(25,6)+A$(31,2)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,269),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 UPDATE_FROMSM7:
10010 ENTER FILENO,X3$,X4$,SM0$,SM0{ALL},PO2$,PO2{ALL},PO1$
10020 CALL "UPDPOH;CLEAR_fIELDS",POH$,POH{ALL}
10100 POH$(1,20)=PO2$(91,20),POH$(21,12)=SM0$(112,12)
10110 POH$(41,9)=PO2$(82,9)
10115 POH$(50,6)=PO1$(192,6),POH$(56,12)=PO2$(119,12),POH$(68,10)=PO1$(7,10)
10120 POH$(78,4)=PO1$(17,4),POH$(82,9)=PO2$(68,9),POH$(91,9)=PO2$(137,9)
10125 IF SM0$(138,9)<>DIM(9) THEN POH$(82,9)=SM0$(138,9) ELSE POH$(82,9)=PO2$(68,9)
10127 IF SM0$(147,9)<>DIM(9) THEN POH$(91,9)=SM0$(147,9) ELSE POH$(91,9)=PO2$(137,9)
10130 POH$(100,10)=SM0$(156,10)
10140 ! POH$(110,8)=PO1$(306,8)
10145 POH$(118,3)=PO2$(11,3); IF POH$(118,3)=DIM(3) THEN POH$(118,3)=PO2$(7,3) ! required - part of POH key  ! SSP207119 added for stock po
10147 POH$(121,4)=SM0$(166,4)
10150 POH$(125,4)=SM0$(170,4)
10155 POH$(129,4)=SM0$(174,4)
10160 POH$(133,15)=PO1$(328,15)
10170 POH$(33,8)=SM0$(130,8),POH$(215,6)=SM0$(234,6)
10200 POH$(234,8)=SM0$(240,8) ! critical for wms labels
10300 POH[0]=SM0[4]
10310 POH[1]=SM0[3]
10320 POH[2]=SM0[5]
10325 POH[2]=0 ! not pack unit
10330 POH[3]=SM0[6]
10340 POH[4]=SM0[0]; IF POH[3]>1 THEN POH[4]=POH[4]/POH[3]
10350 POH[5]=SM0[7]
10360 POH[6]=SM0[8]
10370 POH[7]=SM0[9]
10380 POH[8]=SM0[10]
10385 GOSUB CREATE_STORAGE_EXPIRED ! SSP 200130
10388 IF %WMS_RECV$="Y" THEN GOSUB CREATE_LOT_SLSP ! SSP 268536
10390 NEXT_SEQ=0
10400 NEXT_SEQ:
10410 NEXT_SEQ=NEXT_SEQ+1
10420 IF NEXT_SEQ<99 THEN POH$(31,2)=STR(NEXT_SEQ:"00") ELSE POH$(31,2)=FN%NEXT_SEQ$(POH$(31,2),6) ! 272613
10430 CALL "UPDPOH;READBYKEY",FILENO,0,POH$(41,9),POH$(118,3),POH$(1,20),POH$(21,4),POH$(25,6)+POH$(31,2),POH2$,POH2{ALL},FOUNDPOH2; IF FOUNDPOH2 AND POH$(31,2)<"ZZ" THEN GOTO NEXT_SEQ ! 272613
10800 CALL "UPDPOH;UPDATE",FILENO,POH$,POH{ALL},BUSY
10990 EXIT 
10998 ! 
10999 ! 
11000 CREATE_STORAGE_EXPIRED:! SSP 200130
11020 IF LEN(POH$)=0 THEN RETURN 
11040 O_D$=POH$(25,6); CALL "ZZWDTE;DISPLAY",O_D$,OUT_D$
11060 IF X3$(48,1)="1" THEN OUT$="%Mz/%Dz/%Yl",MMM=1,DDD=4,YYY=7 ELSE IF X3$(48,1)="2" THEN OUT$="%Dz/%Mz/%Yl",MMM=4,DDD=1,YYY=7 ELSE MMM=5,DDD=7,YYY=1,OUT$="%Yl/%Mz/%Dz"
11080 MM=NUM(MID(O_D$,MMM,2)),DD=NUM(MID(O_D$,DDD,2)),YY=NUM(MID(O_D$,YYY,4))
11100 FOR AA=1 TO PO2(24)
11120 MM+=1; IF MM=13 THEN MM=1,YY+=1
11140 NEXT 
11160 IF MM=2 AND DD>=29 THEN DD=28
11180 ML_STORAGE_EXPIRES$=DTE(JUL(YY,MM,DD,ERR=BAD_DATE):OUT$,ERR=BAD_DATE)
11200 CALL "ZZWDTE;VALIDATE",ML_STORAGE_EXPIRES$,JJ$,JJJ$
11220 POH$(250,6)=ML_STORAGE_EXPIRES$
11240 RETURN 
11260 BAD_DATE: DD=DD-1; GOTO 11180
11299 ! 
12000 CREATE_LOT_SLSP:! SSP 268536
12020 IF LEN(POH$)=0 THEN RETURN 
12030 OPEN (HFN,ERR=*RETURN)"AR1"+%C$; AR1CHAN=LFO
12040 FIND (AR1CHAN,KEY=POH$(1,10),ERR=*NEXT,DOM=*NEXT)AR1$; POH$(263,4)=MID(AR1$,278,4)
12050 CLOSE (AR1CHAN)
12060 RETURN 
12099 ! 
56000 REM "180032-Wireless Warehousing                                        
56010 ! "200130-Storage Expiration Date (SED) needs to be entered at the    
56012 REM "207119-Problem with wms receiving report                           
56013 REM "268536-WMS - Receiving - Lots missing the Slsp Code in ICF.        
56014 REM "272613-WMS:  Issue with Receiving and Put Away for > 99 entries  
