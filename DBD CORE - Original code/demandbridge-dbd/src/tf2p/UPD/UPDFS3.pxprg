0010 ! UPDFS3 - File FS3 Maintenance
0035 REM "5.4 - 03/27/06 - 9.803611 - jme - SSP# 192797
0037 REM "192797-Customer Invoicing Gateway parameter, Don't invoice         
0040 REM "Copyright 2006 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9]
0500 INIT:
0505 DIM Z[255]; OPENED=0
0510 IF POS("FS3"=PTH(FILENO))=0 THEN Z$="01O FS3...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDFS3;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDFS3;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDFS3;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDFS3;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 CALL "UPDFS3;CLEAR_FIELDS",A$,A{ALL}
1420 GOSUB INIT
1425 CALL "UPDFS3;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDFS3;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("FS3"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(1,20)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,20)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(50),A[9]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,20)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,50),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 CREATE_SPEC_FROM_PO3:
10005 SEG2$="",SEG3$="",SEG4$="",SEG5$=""
10010 ENTER PO3,FS3,FS2,ZZPARM,EDV,X3$,X4$,ORD$,INV$,INVDT$
10015 FILENO=FS3
10050 GOSUB INIT
10060 CALL "UPDPO3;READBYKEY",PO3,0,ORD$,SEG2$,SEG3$,SEG4$,SEG5$,PO3$,PO3{ALL},FOUNDPO3
10090 CALL "UPDPO3;READNEXT",PO3,PO3$,PO3{ALL},FOUNDPO3; IF FOUNDPO3 THEN IF PO3$(166,9)<>ORD$+" " THEN FOUNDPO3=0
10100 WHILE FOUNDPO3 ! 10450 wend
10110 IF PO3$(7,3)<>DIM(3) AND PO3$(10,1)<>DIM(1) THEN {! 10400
10130 CALL "UPDFS3;READBYKEY",FS3,0,INV$,ORD$,PO3$(7,3),PO3$(10,1),SEG5$,FS3$,FS3{ALL},FOUNDFS3
10150 IF NOT(FOUNDFS3) THEN {! 10390
10160 CALL "UPDFS3;READBYKEY",FS3,0,INV$,ORD$,PO3$(7,3),DIM(1),SEG5$,FS3_G$,FS3_G{ALL},FOUNDFS3_G
10170 IF FOUNDFS3_G THEN {! 10380
10172 FS3$=FS3_G$
10175 FS3$(20,1)=PO3$(10,1),FS3$(27,4)=PO3$(12,4)
10190 FS3[6]=FS3_G[6],FS3[1]=FS3_G[1]
10195 CALL "UPDFS2;READBYKEY",FS2,0,ORD$,PO3$(7,3),SEG3$,SEG4$,SEG5$,FS2$,FS2{ALL},FOUNDFS2
10215 IF PO3[3]=0 AND FOUNDFS2 THEN IF FS2[10]<>0 THEN PO3[3]=PO3[0]*FS3_G[0]/FS2[10]
10230 FS3[0]=PO3[0]; IF PO3[3]<>0 THEN FS3[0]=PO3[3]
10235 DIM M$(21),M[1]
10240 IF FOUNDFS2 THEN READ (ZZPARM,KEY="U/M"+FS2$(124,4),DOM=*NEXT)M$,M[0],M[1]
10250 IF M$(20,1)="Y" THEN M=M[1] ELSE IF FOUNDFS2 THEN M=FS2[5]
10255 IF M=0 THEN M=1
10260 IF M$(20,1)="Y" THEN {
10265 PRECISION 14
10270 IF FS3_G[0]=0 THEN FS3[2]=0,FS3[4]=0 ELSE FS3[2]=FS3_G[2]*FS3[0]/FS3_G[0],FS3[4]=FS3_G[4]*FS3[0]/FS3_G[0]
10275 PRECISION 2; FS3[2]=FS3[2]+0,FS3[4]=FS3[4]+0
10280  } ELSE {
10290 FS3[2]=FS3[0]/M*FS3[1],FS3[4]=FS3[0]/M*FS3[6]; IF M[0]<>0 THEN FS2[2]=FS2[2]/M[0],FS2[4]=FS2[4]/M[0]
10295  }
10300 DIM CIG$(50); READ (ZZPARM,KEY=X3$(9,3)+"SMP",ERR=*NEXT)CIG$
10310 OKEDV=1; IF FOUNDFS2 AND MID(CIG$,12,1)="Y" THEN CALL "UPDEDV;CHK_COMPANION",ERR=*NEXT,EDV,FS2,FS2$,OKEDV
10320 IF NOT(OKEDV) THEN DIM FS3[9]
10350 CALL "UPDFS3;INSERT",FS3,FS3$,FS3{ALL},OK
10380  } ! 10170
10390  } ! 10150
10400  } ! 10110
10440 CALL "UPDPO3;READNEXT",PO3,PO3$,PO3{ALL},FOUNDPO3; IF FOUNDPO3 THEN IF PO3$(166,9)<>ORD$+" " THEN FOUNDPO3=0
10450 WEND 
10480 GOSUB WRAPUP
10490 EXIT 
10498 ! 
10499 ! 
56000 REM "190647-Possible problem with special shipping records              
56002 REM "191846-add call to zzcomp in all upd pgms                          
56004 REM "192797-Customer Invoicing Gateway parameter, Don't invoice         
