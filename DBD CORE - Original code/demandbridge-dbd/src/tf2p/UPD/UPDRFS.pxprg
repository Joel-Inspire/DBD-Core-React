0010 ! UPDRFS - File RFS Maintenance
0035 REM "5.7 - 01/27/15 - 16.237777 - dmm - SSP# 268441
0037 REM "268441-WMS - Picking                                               
0040 REM "Copyright 2015 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5]
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF FILENO=-99 OR POS("RFS"=PTH(FILENO))=0 OR FILENO=0 THEN Z$="01S RFS...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDRFS;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 IF FILENO<>0 THEN READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDRFS;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 IF FILENO<>0 THEN READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDRFS;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 IF FILENO<>0 THEN PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDRFS;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 IF FILENO<>0 THEN PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDRFS;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 IF FILENO<>0 THEN PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDRFS;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("RFS"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(1,22)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,22)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(1004),A[5]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,22)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2200 WRITELOCK:
2210 ENTER FILENO,A$,A{ALL}
2215 PRIMEKEY$=A$(1,22)
2220 GOSUB INIT
2250 WRITE LOCK (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310
2280 GOSUB WRAPUP
2290 EXIT 
2298 ! 
2299 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,1004),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
8500 SET_READONLY:! SSP268441
8510 SET_PARAM 'XI'
8520 SET_READONLY_END:RETURN 
8530 CLEAR_READONLY:
8535 SET_PARAM -'XI'
8540 CLEAR_READONLY_END:RETURN 
8545 ! 
9999 END 
10000 CLEAR_ORD:
10010 ENTER FILENO,ORDER$
10020 CALL "UPDRFS;READBYKEY",FILENO,0,ORDER$,SEG2$,SEG3$,SEG4$,SEG5$,RFS$,RFS{ALL},FOUNDRFS
10030 CALL "UPDRFS;READNEXT",FILENO,RFS$,RFS{ALL},FOUNDRFS; IF FOUNDRFS THEN IF RFS$(1,8)=ORDER$ THEN CALL "UPDRFS;DELETE",FILENO,RFS$,RFS{ALL},FOUNDRFS,BUSY; GOTO *SAME
10090 EXIT 
10098 ! 
10099 ! 
11000 SHIP_COMPL:
11005 ! Note some fields are blank. They are not necessary for this process ! 190478
11010 ENTER FILENO,FS2,RFA,X3$,ORDER$,TASK_NUM$,SHIP_DATE$
11020 CALL "UPDFS2;READBYKEY",FS2,0,ORDER$,SEG2$,SEG3$,SEG4$,SEG5$,FS2$,FS2{ALL},FOUNDFS2
11030 CALL "UPDFS2;READNEXT",FS2,FS2$,FS2{ALL},FOUNDFS2; IF FOUNDFS2 THEN IF FS2$(147,8)<>ORDER$ THEN FOUNDFS2=0
11100 WHILE FOUNDFS2 ! 11200 wend
11110 IF POS(FS2$(155,1)=" IC")<>0 AND FS2$(9,1)=" " THEN {! 11190}
11120 CALL "UPDRFS;CLEAR_FIELDS",RFS$,RFS{ALL}
11130 RFS$(1,8)=ORDER$,RFS$(9,3)=FS2$(6,3),RFS$(23,20)=FS2$(161,10)+FS2$(19,10); RFS$(20,3)="001"
11135 RFS$(43,10)=TASK_NUM$
11140 QTY=FS2[7]
11145 RFS$(81,4)=FS2$(10,4),RFS$(85,4)=FS2$(124,4)
11150 RFS[0]=QTY,RFS[1]=QTY
11160 IF LEN(SHIP_DATE$)=6 THEN RFS$(199,6)=SHIP_DATE$
11180 IF QTY>0 THEN CALL "UPDRFS;UPDATE",FILENO,RFS$,RFS{ALL},BUSYRFS
11190  } ! 11110
11195 CALL "UPDFS2;READNEXT",FS2,FS2$,FS2{ALL},FOUNDFS2; IF FOUNDFS2 THEN IF FS2$(147,8)<>ORDER$ THEN FOUNDFS2=0
11200 WEND 
11490 EXIT 
11498 ! 
11499 ! 
12000 UPDATE_TASK:
12010 ENTER FILENO,FS1,FS2,FMP,PO3,ICF,RFA,SM0,IC1,X3$,TASK_NUM$,CALL_CIG,ORDER_HOLD,ORDER$
12012 ORD_LIST$=""
12015 CALL_CIG=0,ORDER_HOLD=0
12050 CALL "UPDRFS;READBYKEY",FILENO,1,TASK_NUM$,SEG2$,SEG3$,SEG4$,SEG5$,RFS$,RFS{ALL},FOUNDRFS
12090 CALL "UPDRFS;READNEXT",FILENO,RFS$,RFS{ALL},FOUNDRFS; IF FOUNDRFS THEN IF RFS$(43,10)<>TASK_NUM$ THEN FOUNDRFS=0
12100 WHILE FOUNDRFS ! 12850 wend
12110 CALL "UPDRFS;DELETE",FILENO,RFS$,RFS{ALL},FOUND,BUSY
12150 CALL "UPDFS1;READBYKEY",FS1,0,RFS$(1,8),SEG2$,SEG3$,SEG4$,SEG5$,FS1$,FS1{ALL},FOUNDFS1
12200 IF FOUNDFS1 THEN {! 12790 }
12210 AUTO_INV$="N"; CALL "UPDPO3;READBYKEY",PO3,0,RFS$(1,8),DIM(1),DIM(3),DIM(1),SEG3$,PO3$,PO3{ALL},FOUNDPO3 ! general shipping record "
12220 IF FOUNDPO3 THEN CALL "UPDFMP;READBYKEY",FMP,0,"S",PO3$(150,1),SEG3$,SEG4$,SEG5$,FMPS$,FMPS{ALL},FOUNDFMPS; IF FOUNDFMPS THEN IF MID(FMPS$,275,1)="Y" OR %AUTO_INV$="Y" THEN AUTO_INV$="Y" ! SSP#222602
12221 IF FS1$(63,1)="P" THEN AUTO_INV$="N",ORDER_HOLD=1,ORDER$=FS1$(118,8) ! don't auto hold pick
12222 IF AUTO_INV$="Y" THEN CALL "UPDSM0;UPD_WMS_SHIPMENT",SM0,X3$,FS1$(118,8),TASK_NUM$,QTY,RFS$(199,6); CALL_CIG=1
12225 IF FOUNDPO3 THEN RFS$(89,1)=PO3$(150,1)
12230 IF FOUNDFMPS THEN RFS$(90,15)=FMPS$(3,15)
12310 CALL "UPDFS2;READBYKEY",FS2,0,RFS$(1,8),RFS$(9,3),SEG3$,SEG4$,SEG5$,FS2$,FS2{ALL},FOUNDFS2
12320 IF FOUNDFS2 THEN {! 12490
12322 UOM_QTY=RFS[2]; IF RFS$(12,8)=DIM(8) THEN UOM_QTY=1
12325 IF POS(FS2$(147,8)+FS2$(6,3)=ORD_LIST$,11)=0 THEN FS2[7]=RFS[1]*UOM_QTY,ORD_LIST$=ORD_LIST$+FS2$(147,8)+FS2$(6,3) ELSE FS2[7]=FS2[7]+RFS[1]*UOM_QTY ! ORD_LIST$ is necessary to keep track of qty ship since multiple rfs records can update fs1.  1st time sets fs2[7], all others increase
12327 FS28_ORIG=FS2[8]; IF FS28_ORIG<0 THEN RS28_ORIG=0
12330 FS2[8]=FS2[0]-FS2[7]; IF FS2[8]<0 THEN FS2[8]=0
12332 QTY_REMAIN=FS2[8]-FS28_ORIG; IF QTY_REMAIN<0 THEN QTY_REMAIN=0
12335 IF FS1$(63,1)="P" THEN FS2$(238,1)="Y" ! pick hold
12340 CALL "UPDFS2;UPDATE",FS2,FS2$,FS2{ALL},BUSYFS2
12350 IF QTY_REMAIN>0 THEN CALL "UPDIC1;READBYKEY",IC1,0,RFS$(23,20),RFS$(81,4),SEG3$,SEG4$,SEG5$,IC1$,IC1{ALL},FOUNDIC1; IF FOUNDIC1 THEN IC1[11]=IC1[11]+QTY_REMAIN; CALL "UPDIC1;UPDATE",IC1,IC1$,IC1{ALL},BUSYIC1
12400 IF RFS[1]=0 THEN CALL "UPDICF;READBYKEY",ICF,0,RFS$(23,20),RFS$(105,12),SEG3$,SEG4$,SEG5$,ICF$,ICF{ALL},FOUNDICF; IF FOUNDICF AND ICF$(110,6)<>"NOPICK" THEN ICF$(110,11)=DIM(11); CALL "UPDICF;UPDATE",ICF,ICF$,ICF{ALL},BUSYICF
12410 IF RFS[1]<>RFS[0] AND RFS[1]<>0 AND RFS$(105,12)<>DIM(12) THEN ICF_PICK_QTY=RFS[1],ICF_KEY$=RFS$(23,20)+RFS$(105,12); CALL "UPDICF;SPLIT_PICK",ICF,ICF_KEY$,RFS[0],ICF_PICK_QTY,NEW_LOT$
12490  } ! 12320
12790  } ! 12200
12800 CALL "UPDRFS;READNEXT",FILENO,RFS$,RFS{ALL},FOUNDRFS; IF FOUNDRFS THEN IF RFS$(43,10)<>TASK_NUM$ THEN FOUNDRFS=0
12850 WEND ! 12100 while
12990 EXIT 
12998 ! 
12999 ! 
13000 GET_FROM_RF3:! SSP268441, no longer call this from RFGPH0, now write directly to RFS in FM2ODZ, see CREATE_RFS
13010 ENTER FILENO,RF3,FS1,FS2,IC1,IC0,RFB,RFZ,PO3,FMP,ICF
13020 CALL "UPDRF3;READBYKEY",RF3,1,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,RF3$,RF3{ALL},FOUNDRF3
13030 CALL "UPDRF3;READNEXT",RF3,RF3$,RF3{ALL},FOUNDRF3; IF FOUNDRF3 THEN ORDER$=RF3$(1,8); CALL "UPDRF3;DELETE",RF3,RF3$,RF3{ALL},FOUND,BUSY; CALL "UPDRFS;DELETE_ORDER_LINE",FILENO,RF3$(1,8),RF3$(9,3) ! 248193
13040 WHILE FOUNDRF3 ! 13980 wend
13080 CALL "UPDFS2;READBYKEY",FS2,0,RF3$(1,8),RF3$(9,3),SEG3$,SEG4$,SEG5$,FS2$,FS2{ALL},FOUNDFS2
13085 ORD_QTY=FS2[0]-FS2[8]
13090 IF FOUNDFS2 AND ORD_QTY>0 THEN {! 13950 }
13150 LOT=0,ITEM_DESC$=DIM(40); CALL "UPDIC0;READBYKEY",IC0,0,FS2$(161,10),FS2$(19,10),SEG3$,SEG4$,SEG5$,IC0$,IC0{ALL},FOUNDIC0; IF FOUNDIC0 THEN ITEM_DESC$=IC0$(21,40); IF IC0$(112,1)="Y" THEN LOT=1
13160 IF LOT THEN {! 13190 }
13170 CALL "UPDICF;READBYKEY",ICF,3,FS2$(147,8),FS2$(6,3),SEG3$,SEG4$,SEG5$,ICF$,ICF{ALL},FOUNDICF
13175 CALL "UPDICF;READNEXT",ICF,ICF$,ICF{ALL},FOUNDICF; IF FOUNDICF THEN IF ICF$(110,11)<>FS2$(147,8)+FS2$(6,3) THEN FOUNDICF=0
13180 IF NOT(FOUNDICF) THEN LOT=0
13190  }
13200 IF LOT THEN {! 13500
13205 WHILE FOUNDICF ! 13490 wend
13210 CALL "UPDRFS;CLEAR_FIELDS",RFS$,RFS{ALL}
13220 RFS$(1,8)=FS2$(147,8),RFS$(9,3)=FS2$(6,3)
13225 RFS$(105,12)=ICF$(21,12)
13230 RFS$(23,20)=FS2$(161,10)+FS2$(19,10)
13235 RFS$(12,8)=ICF$(234,8)
13240 CALL "UPDIC1;READBYKEY",IC1,0,FS2$(161,20),FS2$(10,4),SEG3$,SEG4$,SEG5$,IC1$,IC1{ALL},FOUNDIC1; IF FOUNDIC1 THEN RFS$(71,10)=IC1$(35,10)
13250 DIM ZONE$(4); CALL "UPDRFB;READBYKEY",RFB,0,RFS$(71,10),SEG2$,SEG3$,SEG4$,SEG5$,RFB$,RFB{ALL},FOUNDRFB; IF FOUNDRFB THEN RFS$(134,4)=RFB$(20,4),ZONE$=RFB$(16,4)
13260 CALL "UPDRFZ;READBYKEY",RFZ,0,ZONE$,SEG2$,SEG3$,SEG4$,SEG5$,RFZ$,RFZ{ALL},FOUNDRFZ; IF FOUNDRFZ THEN RFS$(67,4)=RFZ$(6,4)
13270 RFS$(81,4)=FS2$(10,4)
13380 CALL "UPDPO3;READBYKEY",PO3,0,RFS$(1,8),DIM(1),DIM(3),DIM(1),SEG5$,PO3$,PO3{ALL},FOUNDPO3; IF FOUNDPO3 THEN RFS$(89,1)=PO3$(150,1),RFS$(90,15)=PO3$(210,15) ! general shipping record "
13390 AUTO_INV$="N"; IF FOUNDPO3 THEN CALL "UPDFMP;READBYKEY",FMP,0,"S",PO3$(150,1),SEG3$,SEG4$,SEG5$,FMPS$,FMPS{ALL},FOUNDFMPS; IF FOUNDFMPS THEN IF MID(FMPS$,275,1)="Y" OR %AUTO_INV$="Y" THEN AUTO_INV$="Y" ! SSP#222602
13400 RFS$(148,1)=AUTO_INV$
13405 RFS[0]=ICF[4]
13407 RFS$(85,4)=ICF$(121,4)
13408 RFS[2]=ICF[3]
13410 IF ICF$(100,10)<>DIM(10) THEN RFS$(71,10)=ICF$(100,10); CALL "UPDRFB;READBYKEY",RFB,0,RFS$(71,10),SEG2$,SEG3$,SEG4$,SEG5$,RFB$,RFB{ALL},FOUNDRFB; IF FOUNDRFB THEN RFS$(134,4)=RFB$(20,4),ZONE$=RFB$(164,4),RFS$(63,4)=ZONE$; CALL "UPDRFZ;READBYKEY",RFZ,0,ZONE$,SEG2$,SEG3$,SEG4$,SEG5$,RFZ$,RFZ{ALL},FOUNDRFZ; IF FOUNDRFZ THEN RFS$(67,4)=RFZ$(6,4)
13415 RFS$(149,40)=ITEM_DESC$,LOT_SEQ=0
13450 NEXT_SEQ:
13455 LOT_SEQ=LOT_SEQ+1
13460 CALL "UPDRFS;READBYKEY",FILENO,0,RFS$(1,19),STR(LOT_SEQ:"000"),SEG3$,SEG4$,SEG5$,RFS_B$,RFS_B{ALL},FOUNDRFS_B; IF FOUNDRFS_B THEN GOTO NEXT_SEQ
13465 RFS$(20,3)=STR(LOT_SEQ:"000")
13470 CALL "UPDRFS;UPDATE",FILENO,RFS$,RFS{ALL},BUSYRFS
13480 CALL "UPDICF;READNEXT",ICF,ICF$,ICF{ALL},FOUNDICF; IF FOUNDICF THEN IF ICF$(110,11)<>FS2$(147,8)+FS2$(6,3) THEN FOUNDICF=0
13490 WEND 
13500  } ELSE {! 13900 
13510 CALL "UPDRFS;CLEAR_FIELDS",RFS$,RFS{ALL}
13520 RFS$(1,8)=FS2$(147,8),RFS$(9,3)=FS2$(6,3)
13530 RFS$(23,20)=FS2$(161,10)+FS2$(19,10)
13540 CALL "UPDIC1;READBYKEY",IC1,0,FS2$(161,20),FS2$(10,4),SEG3$,SEG4$,SEG5$,IC1$,IC1{ALL},FOUNDIC1; IF FOUNDIC1 THEN RFS$(71,10)=IC1$(35,10)
13550 DIM ZONE$(4); CALL "UPDRFB;READBYKEY",RFB,0,RFS$(71,10),SEG2$,SEG3$,SEG4$,SEG5$,RFB$,RFB{ALL},FOUNDRFB; IF FOUNDRFB THEN RFS$(134,4)=RFB$(20,4),ZONE$=RFB$(16,4)
13560 CALL "UPDRFZ;READBYKEY",RFZ,0,ZONE$,SEG2$,SEG3$,SEG4$,SEG5$,RFZ$,RFZ{ALL},FOUNDRFZ; IF FOUNDRFZ THEN RFS$(67,4)=RFZ$(6,4)
13565 RFS$(63,4)=ZONE$
13570 RFS$(81,4)=FS2$(10,4),RFS$(85,4)=FS2$(124,4),RFS[2]=FS2[5]
13580 CALL "UPDPO3;READBYKEY",PO3,0,RFS$(1,8),DIM(1),DIM(3),DIM(1),SEG5$,PO3$,PO3{ALL},FOUNDPO3; IF FOUNDPO3 THEN RFS$(89,1)=PO3$(150,1),RFS$(90,15)=PO3$(210,15) ! general shipping record "
13590 AUTO_INV$="N"; IF FOUNDPO3 THEN CALL "UPDFMP;READBYKEY",FMP,0,"S",PO3$(150,1),SEG3$,SEG4$,SEG5$,FMPS$,FMPS{ALL},FOUNDFMPS; IF FOUNDFMPS THEN IF MID(FMPS$,275,1)="Y" OR %AUTO_INV$="Y" THEN AUTO_INV$="Y" ! SSP#222602
13600 RFS$(148,1)=AUTO_INV$
13605 RFS$(149,40)=ITEM_DESC$
13610 RFS[0]=ORD_QTY ! IF FS2[7]<>0 THEN RFS[0]=FS2[7] ELSE RFS[0]=FS2[0]
13700 CALL "UPDRFS;UPDATE",FILENO,RFS$,RFS{ALL},BUSYRFS
13900  } ! 13500
13950  } ! 13090 foundfs2
13970 CALL "UPDRF3;READNEXT",RF3,RF3$,RF3{ALL},FOUNDRF3; IF FOUNDRF3 THEN ORDER$=RF3$(1,8); CALL "UPDRF3;DELETE",RF3,RF3$,RF3{ALL},FOUND,BUSY; CALL "UPDRFS;DELETE_ORDER_LINE",FILENO,RF3$(1,8),RF3$(9,3) ! 248193
13980 WEND 
13990 EXIT 
13998 ! 
13999 ! 
16000 CHANGE_TASK:
16010 ENTER FILENO,BUYER$,TASK_NUM$,PICK_CART$
16020 CALL "UPDRFS;READBYKEY",FILENO,0,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,RFS$,RFS{ALL},FOUNDRFS
16030 CALL "UPDRFS;READNEXT",FILENO,RFS$,RFS{ALL},FOUNDRFS
16050 WHILE FOUNDRFS
16060 IF RFS$(117,15)=BUYER$ AND PICK_CART$=RFS$(189,10) THEN RFS$(43,10)=TASK_NUM$; CALL "UPDRFS;UPDATE",FILENO,RFS$,RFS{ALL},BUSY
16075 CALL "UPDRFS;READNEXT",FILENO,RFS$,RFS{ALL},FOUNDRFS
16080 WEND 
16090 EXIT 
16098 ! 
16099 ! 
17000 GET_QTY:
17010 ENTER FILENO,QTY
17015 QTY=0,LAST_ORD$=""
17020 CALL "UPDRFS;READBYKEY",FILENO,0,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,RFS$,RFS{ALL},FOUNDRFS
17030 CALL "UPDRFS;READNEXT",FILENO,RFS$,RFS{ALL},FOUNDRFS
17050 WHILE FOUNDRFS
17060 IF LAST_ORD$<>RFS$(1,8) THEN QTY=QTY+1; LAST_ORD$=RFS$(1,8)
17070 CALL "UPDRFS;READNEXT",FILENO,RFS$,RFS{ALL},FOUNDRFS
17080 WEND 
17090 EXIT 
17098 ! 
17099 ! 
33000 WMS_MGR_UPD:
33010 ENTER FILENO,FS1,FS2,IC1,IC0,RFB,RFZ,PO3,FMP,ICF,ORDER$
33015 CALL "UPDFS1;READBYKEY",FS1,0,ORDER$,SEG2$,SEG3$,SEG4$,SEG5$,FS1$,FS1{ALL},FOUNDFS1
33020 CALL "UPDFS2;READBYKEY",FS2,0,ORDER$,SEG2$,SEG3$,SEG4$,SEG5$,FS2$,FS2{ALL},FOUNDFS2
33030 CALL "UPDFS2;READNEXT",FS2,FS2$,FS2{ALL},FOUNDFS2; IF FOUNDFS2 THEN IF FS2$(147,8)<>ORDER$ THEN FOUNDFS2=0
33040 WHILE FOUNDFS2 ! 33980 wend
33090 IF FS2$(238,1)=" " AND (FS2[0]>0) THEN {! 13950 }
33150 LOT=0,ITEM_DESC$=DIM(40); CALL "UPDIC0;READBYKEY",IC0,0,FS2$(161,10),FS2$(19,10),SEG3$,SEG4$,SEG5$,IC0$,IC0{ALL},FOUNDIC0; IF FOUNDIC0 THEN ITEM_DESC$=IC0$(21,40); IF IC0$(112,1)="Y" THEN LOT=1
33160 IF LOT THEN {! 13190 }
33170 CALL "UPDICF;READBYKEY",ICF,3,FS2$(147,8),FS2$(6,3),SEG3$,SEG4$,SEG5$,ICF$,ICF{ALL},FOUNDICF
33175 CALL "UPDICF;READNEXT",ICF,ICF$,ICF{ALL},FOUNDICF; IF FOUNDICF THEN IF ICF$(110,11)<>FS2$(147,8)+FS2$(6,3) THEN FOUNDICF=0
33180 IF NOT(FOUNDICF) THEN LOT=0
33190  }
33200 IF LOT THEN {! 13500
33205 WHILE FOUNDICF ! 13490 wend
33210 CALL "UPDRFS;CLEAR_FIELDS",RFS$,RFS{ALL}
33220 RFS$(1,8)=FS2$(147,8),RFS$(9,3)=FS2$(6,3)
33225 RFS$(105,12)=ICF$(21,12)
33230 RFS$(23,20)=FS2$(161,10)+FS2$(19,10)
33235 RFS$(12,8)=ICF$(234,8)
33240 CALL "UPDIC1;READBYKEY",IC1,0,FS2$(161,20),FS2$(10,4),SEG3$,SEG4$,SEG5$,IC1$,IC1{ALL},FOUNDIC1; IF FOUNDIC1 THEN RFS$(71,10)=IC1$(35,10)
33250 DIM ZONE$(4); CALL "UPDRFB;READBYKEY",RFB,0,RFS$(71,10),SEG2$,SEG3$,SEG4$,SEG5$,RFB$,RFB{ALL},FOUNDRFB; IF FOUNDRFB THEN RFS$(134,4)=RFB$(20,4),ZONE$=RFB$(16,4)
33260 CALL "UPDRFZ;READBYKEY",RFZ,0,ZONE$,SEG2$,SEG3$,SEG4$,SEG5$,RFZ$,RFZ{ALL},FOUNDRFZ; IF FOUNDRFZ THEN RFS$(67,4)=RFZ$(6,4)
33270 RFS$(81,4)=FS2$(10,4)
33380 CALL "UPDPO3;READBYKEY",PO3,0,RFS$(1,8),DIM(1),DIM(3),DIM(1),SEG5$,PO3$,PO3{ALL},FOUNDPO3; IF FOUNDPO3 THEN RFS$(89,1)=PO3$(150,1),RFS$(90,15)=PO3$(210,15) ! general shipping record "
33390 AUTO_INV$="N"; IF FOUNDPO3 THEN CALL "UPDFMP;READBYKEY",FMP,0,"S",PO3$(150,1),SEG3$,SEG4$,SEG5$,FMPS$,FMPS{ALL},FOUNDFMPS; IF FOUNDFMPS THEN IF MID(FMPS$,275,1)="Y" OR %AUTO_INV$="Y" THEN AUTO_INV$="Y"
33400 RFS$(148,1)=AUTO_INV$
33405 RFS[0]=ICF[4]
33407 RFS$(85,4)=ICF$(121,4)
33408 RFS[2]=ICF[3]
33410 IF ICF$(100,10)<>DIM(10) THEN RFS$(71,10)=ICF$(100,10); CALL "UPDRFB;READBYKEY",RFB,0,RFS$(71,10),SEG2$,SEG3$,SEG4$,SEG5$,RFB$,RFB{ALL},FOUNDRFB; IF FOUNDRFB THEN RFS$(134,4)=RFB$(20,4),ZONE$=RFB$(164,4),RFS$(63,4)=ZONE$; CALL "UPDRFZ;READBYKEY",RFZ,0,ZONE$,SEG2$,SEG3$,SEG4$,SEG5$,RFZ$,RFZ{ALL},FOUNDRFZ; IF FOUNDRFZ THEN RFS$(67,4)=RFZ$(6,4)
33415 RFS$(149,40)=ITEM_DESC$,LOT_SEQ=0
33450 NEXT_SEQ2:
33455 LOT_SEQ=LOT_SEQ+1
33460 CALL "UPDRFS;READBYKEY",FILENO,0,RFS$(1,19),STR(LOT_SEQ:"000"),SEG3$,SEG4$,SEG5$,RFS_B$,RFS_B{ALL},FOUNDRFS_B; IF FOUNDRFS_B THEN GOTO NEXT_SEQ2
33465 RFS$(20,3)=STR(LOT_SEQ:"000")
33470 CALL "UPDRFS;UPDATE",FILENO,RFS$,RFS{ALL},BUSYRFS
33480 CALL "UPDICF;READNEXT",ICF,ICF$,ICF{ALL},FOUNDICF; IF FOUNDICF THEN IF ICF$(110,11)<>FS2$(147,8)+FS2$(6,3) THEN FOUNDICF=0
33490 WEND 
33500  } ELSE {! 13900 
33510 CALL "UPDRFS;CLEAR_FIELDS",RFS$,RFS{ALL}
33520 RFS$(1,8)=FS2$(147,8),RFS$(9,3)=FS2$(6,3)
33530 RFS$(23,20)=FS2$(161,10)+FS2$(19,10)
33540 CALL "UPDIC1;READBYKEY",IC1,0,FS2$(161,20),FS2$(10,4),SEG3$,SEG4$,SEG5$,IC1$,IC1{ALL},FOUNDIC1; IF FOUNDIC1 THEN RFS$(71,10)=IC1$(35,10)
33550 DIM ZONE$(4); CALL "UPDRFB;READBYKEY",RFB,0,RFS$(71,10),SEG2$,SEG3$,SEG4$,SEG5$,RFB$,RFB{ALL},FOUNDRFB; IF FOUNDRFB THEN RFS$(134,4)=RFB$(20,4),ZONE$=RFB$(16,4)
33560 CALL "UPDRFZ;READBYKEY",RFZ,0,ZONE$,SEG2$,SEG3$,SEG4$,SEG5$,RFZ$,RFZ{ALL},FOUNDRFZ; IF FOUNDRFZ THEN RFS$(67,4)=RFZ$(6,4)
33565 RFS$(63,4)=ZONE$
33570 RFS$(81,4)=FS2$(10,4),RFS$(85,4)=FS2$(124,4),RFS[2]=FS2[5]
33580 CALL "UPDPO3;READBYKEY",PO3,0,RFS$(1,8),DIM(1),DIM(3),DIM(1),SEG5$,PO3$,PO3{ALL},FOUNDPO3; IF FOUNDPO3 THEN RFS$(89,1)=PO3$(150,1),RFS$(90,15)=PO3$(210,15) ! general shipping record "
33590 AUTO_INV$="N"; IF FOUNDPO3 THEN CALL "UPDFMP;READBYKEY",FMP,0,"S",PO3$(150,1),SEG3$,SEG4$,SEG5$,FMPS$,FMPS{ALL},FOUNDFMPS; IF FOUNDFMPS THEN IF MID(FMPS$,275,1)="Y" OR %AUTO_INV$="Y" THEN AUTO_INV$="Y" ! SSP#222602
33600 RFS$(148,1)=AUTO_INV$
33605 RFS$(149,40)=ITEM_DESC$
33610 RFS[0]=FS2[0] ! IF FS2[7]<>0 THEN RFS[0]=FS2[7] ELSE RFS[0]=FS2[0]
33700 CALL "UPDRFS;UPDATE",FILENO,RFS$,RFS{ALL},BUSYRFS
33900  } ! 13500
33950  } ! 13090 foundfs2
33970 CALL "UPDFS2;READNEXT",FS2,FS2$,FS2{ALL},FOUNDFS2; IF FOUNDFS2 THEN IF FS2$(147,8)<>ORDER$ THEN FOUNDFS2=0
33980 WEND 
33990 EXIT 
33998 ! 
33999 ! 
34000 DELETE_ORDER_LINE:! 248193
34010 ENTER FILENO,RFS_ORDER_NUM$,RFS_LINE_NUM$,ERR=*NEXT
34020 READ (FILENO,KEY=RFS_ORDER_NUM$+RFS_LINE_NUM$,DOM=*NEXT)
34030 DOL_NEXT_REC: KRFS$=KEY(FILENO,END=DOL_DONE); READ (FILENO,KEY=KRFS$)
34040 IF MID(KRFS$,1,11)<>RFS_ORDER_NUM$+RFS_LINE_NUM$ THEN GOTO DOL_DONE
34050 REMOVE (FILENO,KEY=KRFS$)
34070 GOTO DOL_NEXT_REC
34080 DOL_DONE:
34095 EXIT 
34099 ! 
35000 CREATE_RFS:! SSP268441, new routine to create RFS, no RF3 record
35010 ENTER X3$,X4$,FS2$,FS2{ALL},CUST$
35015 DIM Z[NUM(X3$(60,3))]
35020 Z$="01O RFS... 02O FM0... 03O AR1... 04O IC0...  05O IC1...  06O RFB...  07O RFZ...  08O PO3...  09O FMP...  10O ICF...  13O ZZPARM "
35025 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO *NEXT,CLOSE_FILES_EXIT
35030 ICF_CURKNO=0,ICF_CURKNO=NUM(FIN(Z[10],"CURKNO",ERR=*NEXT),ERR=*NEXT) ! Capture current key number in case ZZFLES is re-using a channel for ICF, we use key 3 in this program, reset before closing routine
35035 IOL_RFS:IOLIST RFS$,RFS[0],RFS[1],RFS[2],RFS[3],RFS[4],RFS[5]
35040 IOL_ICF:IOLIST ICF$(1),ICF[0],ICF[1],ICF[2],ICF[3],ICF[4],ICF[5],ICF[6],ICF[7],ICF[8],ICF[9],ICF[10],ICF[11],ICF[12]
35065 IF %WMS_MGR_IN_OE THEN GOTO CLOSE_FILES_EXIT
35067 GOSUB SET_READONLY
35070 DIM FM0$(618); FIND (Z[2],KEY="D"+DIM(10)+FS2$(10,4),DOM=*NEXT)FM0$(1)
35075 IF POS(FM0$(602,1)="YRB")=0 THEN GOSUB CLEAR_READONLY; GOTO CLOSE_FILES_EXIT ! WMS whse? Y-WMS Only Pick, B-WMS and Pack List Print, R-WMS and Pack List Reprint
35080 PRIO$="~~" ! default pick priority
35085 DIM AR1$(599); FIND (Z[3],KEY=CUST$,DOM=*NEXT)AR1$(1)
35090 IF AR1$(471,2)<>DIM(2) THEN PRIO$=AR1$(471,2) ! customer's pick priority
35095 XP=POS("P"=FS2$(156,5)); IF XP>0 AND FM0$(602,1)="Y" THEN FS2$(155+XP,1)=" " ! dont print if wms and fm0$(602,1 )=y
35100 ORDER$=FS2$(147,8),ORDER_LINE$=FS2$(6,3)
35105 CALL "UPDRFS;DELETE_ORDER_LINE",Z[1],ORDER$,ORDER_LINE$ ! Remove current RFS for this order line
35110 ! start to create RFS for this order line
35115 ORD_QTY=FS2[0]-FS2[8]; IF ORD_QTY<=0 THEN GOSUB CLEAR_READONLY; GOTO CLOSE_FILES_EXIT
35120 DIM RFS$(1004),RFS[5]
35125 RFS$(1,8)=FS2$(147,8),RFS$(9,3)=FS2$(6,3),RFS$(23,20)=FS2$(161,10)+FS2$(19,10),RFS$(81,4)=FS2$(10,4) ! Order number, line number, full item number, warehouse
35130 DIM IC0$(187); FIND (Z[4],KEY=RFS$(23,20),DOM=*NEXT)IC0$(1); RFS$(149,40)=IC0$(21,40) ! item description
35135 DIM IC1$(58); FIND (Z[5],KEY=RFS$(23,20)+RFS$(81,4),DOM=*NEXT)IC1$(1); RFS$(71,10)=IC1$(35,10) ! Bin location
35140 IF RFS$(71,10)<>DIM(10) THEN GOSUB LOOKUP_BIN_ZONE
35150 DIM PO3$(428); FIND (Z[8],KEY=RFS$(1,8)+DIM(5),DOM=*NEXT)PO3$(1); RFS$(89,1)=PO3$(150,1),RFS$(90,15)=PO3$(210,15) ! General shipping ship via code, desc
35155 RFS$(148,1)="N"; DIM FMPS$(279); FIND (Z[9],KEY="S"+RFS$(89,1),DOM=*NEXT)FMPS$(1); IF FMPS$(275,1)="Y" OR %AUTO_INV$="Y" THEN RFS$(148,1)="Y" ! Whse auto invoice
35160 IF FMPS$(278,2)<>DIM(2) THEN PRIO$=FMPS$(278,2) ! Ship via pick priority
35170 RFS$(132,2)=PRIO$ ! Pick priority
35175 IF IC0$(112,1)="Y" THEN GOSUB LOTTED_ITEM ELSE GOSUB NON_LOTTED_ITEM
35185 GOSUB CLEAR_READONLY
35190 GOTO CLOSE_FILES_EXIT ! Done with this order line, close files and exit
35195 ! 
35200 LOTTED_ITEM:! SSP268441
35210 SAVE_RFS$=RFS$ ! Save everything we have so far, will use as basis for each RFS record per ICF we find for this order line
35215 READ (Z[10],KNO=3,KEY=RFS$(1,11),DOM=*NEXT) ! use key 3, position with order number plus line number
35220 NEXT_ICF:! Get the next ICF for this order line
35225 DIM ICF$(269),ICF[12]
35230 ICF_KEY$=KEY(Z[10],END=*RETURN); READ (Z[10],KEY=ICF_KEY$)IOL=IOL_ICF
35235 IF ICF$(110,11)<>RFS$(1,11) THEN GOTO *RETURN
35240 DIM RFS$(1004),RFS[5]; RFS$=SAVE_RFS$
35245 RFS[0]=ICF[4],RFS$(85,4)=ICF$(121,4),RFS[2]=ICF[3] ! Quantity, unit, quantity per unit
35250 RFS$(12,8)=ICF$(234,8),RFS$(105,12)=ICF$(21,12) ! Lot number, lot ID
35255 IF ICF$(100,10)<>DIM(10) THEN IF ICF$(100,10)<>RFS$(71,10) THEN RFS$(71,10)=ICF$(100,10),RFS$(134,4)=DIM(4),RFS$(63,4)=DIM(4),RFS$(67,4)=DIM(4); GOSUB LOOKUP_BIN_ZONE ! If ICF bin not blank and not the same as one already set then set it, blank out bin pick seq, zone and zone pick seq, and do bin and zone lookups
35265 LOT_SEQ=0; GOSUB CLEAR_READONLY
35270 NEXT_LOT_SEQ: LOT_SEQ+=1,RFS$(20,3)=STR(LOT_SEQ:"000")
35275 WRITE (Z[1],KEY=RFS$(1,22),DOM=*NEXT)IOL=IOL_RFS; GOSUB SET_READONLY; GOTO NEXT_ICF
35280 GOTO NEXT_LOT_SEQ ! increment lot sequence and try again
35290 RETURN 
35295 ! 
35300 NON_LOTTED_ITEM:! SSP268441
35310 RFS$(85,4)=FS2$(124,4) ! Sell unit
35315 RFS[2]=FS2[5] ! Sell quantity per unit
35320 U$=RFS$(85,4),C=RFS[2],Q=ORD_QTY ! quantity is in eaches, need in units
35325 CALL "FM2EXT",Z[13],2,U$,C,Q,U,E,P9; RFS[0]=Q ! quantity in units
35340 GOSUB CLEAR_READONLY; WRITE (Z[1],KEY=RFS$(1,22))IOL=IOL_RFS; GOSUB SET_READONLY
35390 RETURN 
35395 ! 
35400 LOOKUP_BIN_ZONE:! 268441
35405 BIN_LOOKUP:! Try with bin plus warehouse, if not found try bin plus 4 blanks
35410 DIM RFB$(1004); FIND (Z[6],KEY=RFS$(71,10)+RFS$(81,4),DOM=*NEXT)RFB$(1); RFS$(134,4)=RFB$(19,4),RFS$(63,4)=RFB$(15,4); GOTO ZONE_LOOKUP ! Bin pick sequence, zone
35415 DIM RFB$(1004); FIND (Z[6],KEY=RFS$(71,10)+DIM(4),DOM=*RETURN)RFB$(1); RFS$(134,4)=RFB$(19,4),RFS$(63,4)=RFB$(15,4) ! Bin pick sequence, zone
35420 ! 
35425 ZONE_LOOKUP:! lookup zone, if found then populate zone pick seq
35430 DIM RFZ$(200); FIND (Z[7],KEY=RFS$(63,4),DOM=*NEXT)RFZ$(1); RFS$(67,4)=RFZ$(6,4) ! Zone pick sequence
35435 ! 
35440 RETURN 
35445 ! 
40000 CLOSE_FILES_EXIT:! SSP268441, close files and exit
40005 ICF_CURKNO$=KEY(Z[10],KNO=ICF_CURKNO,ERR=*NEXT) ! Reset current key number
40010 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
40050 EXIT 
40090 ! 
56000 REM "180032-Wireless Warehousing                                        
56002 REM "206519-15 minutes to access 200 line order                         
56004 REM "193893-Seperate S/M P8 from warehousing module                     
56006 REM "197945-WMS picking.  if zero pick or qty<ord                       
56008 REM "204642-Order Shipment update feature needs to have ship date add to
56010 REM "206108-WMS picking should not add items to the picking queue       
56012 REM "248193-Order changes not reflecting for Picking in WMS   
56014 REM "268441-WMS - Picking                                               
