0010 ! UPDDT0 - File DT0 Maintenance
0035 REM "5.7 - 04/18/17 - 19.209166 - crg - SSP# 291420
0037 REM "291420-Providence Weekly Summary Bill report - DBRS - Modifications
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF FILENO=-99 THEN Z$="01S DT0...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1 ELSE IF POS("DT0"=PTH(FILENO))=0 THEN Z$="01S DT0...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDDT0;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDDT0;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDDT0;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDDT0;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDDT0;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDDT0;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("DT0"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(1,60)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,60)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0; FOUND=1
1785 DELETE_END:
1787 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(1326),A[13]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,60)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,1326),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 CVT_FILE_TYPE_FROM:
10010 ENTER FILE_TYPE$,FILE_TYPE_CODE$
10020 FILE_TYPE_CODE$="T" ! default text
10030 IF STP(FILE_TYPE$,2)="PDF" THEN FILE_TYPE_CODE$="P"
10040 IF STP(FILE_TYPE$,2)="XML" THEN FILE_TYPE_CODE$="X"
10045 IF STP(FILE_TYPE$,2)="HTML" THEN FILE_TYPE_CODE$="H"
10050 IF STP(FILE_TYPE$,2)="CSV" THEN FILE_TYPE_CODE$="C"
10055 IF STP(FILE_TYPE$,2)="XLS" THEN FILE_TYPE_CODE$="L" ! MS Excel
10060 IF STP(FILE_TYPE$,2)="1-XLSX" THEN FILE_TYPE_CODE$="1" ! MS Excel XLSX, 291420
10090 EXIT 
10098 ! 
10099 ! 
10100 CVT_FILE_TYPE_TO:
10110 ENTER FILE_TYPE_CODE$,FILE_TYPE$
10120 FILE_TYPE$="TEXT"
10130 IF FILE_TYPE_CODE$="P" THEN FILE_TYPE$="PDF"
10135 IF FILE_TYPE_CODE$="X" THEN FILE_TYPE$="XML"
10140 IF FILE_TYPE_CODE$="H" THEN FILE_TYPE$="HTML"
10145 IF FILE_TYPE_CODE$="C" THEN FILE_TYPE$="CSV"
10150 IF FILE_TYPE_CODE$="L" THEN FILE_TYPE$="XLS"
10155 IF FILE_TYPE_CODE$="1" THEN FILE_TYPE$="1-XLSX" ! 291420
10190 EXIT 
10198 ! 
10199 ! 
10200 GET_FILE_TYPE_DROP:! 234689
10210 ENTER OUTPUT_TYPE$,TYPE_DROP$
10220 O_TYPE$=STP(OUTPUT_TYPE$,2)
10230 SWITCH O_TYPE$
10235 CASE "PRINTER"
10240 CASE "EMAIL"
10245 CASE "FTP"
10250 CASE "HTTP"
10255 CASE "HTTPS"
10260 CASE "FAX"
10265 CASE "WEBEC"
10270 CASE "HOLD"
10275 CASE "ARCHIVE"
10280 TYPE_DROP$="TEXT    /PDF     /CSV     /XML     /"; BREAK
10285 END SWITCH 
10290 EXIT 
10298 ! 
10299 ! 
11000 GET_NEXT_TRANS_NUM:
11010 ENTER ZZPARM,X3$,NEXT_NUM$
11020 X=1; EXTRACT (ZZPARM,KEY=X3$(9,3)+"TODTRANS",DOM=*NEXT)X
11030 NEXT_NUM$=STR(X:"0000000000")
11040 X=X+1; IF X>9999999999 THEN X=1
11060 WRITE (ZZPARM,KEY=X3$(9,3)+"TODTRANS")X
11090 EXIT 
11098 ! 
11099 ! 
11100 CHECK:
11110 ENTER FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK
11120 OK=0
11130 OUTPUT_TYPE$=PAD(OUTPUT_TYPE$,20),DIVISION$=PAD(DIVISION$,2)
11135 KEY1$=PAD(KEY1$,20),KEY2$=PAD(KEY2$,10),KEY3$=PAD(KEY3$,5)
11138 DIVISION$=SUB(DIVISION$," ","~"),KEY1$=SUB(KEY1$," ","~"),KEY2$=SUB(KEY2$," ","~"),KEY3$=SUB(KEY3$," ","~") ! SSP 208675
11140 CALL "UPDDT0;READBYKEY",FILENO,0,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,DT0$,DT0{ALL},FOUNDDT0
11145 CALL "UPDDT0;READNEXT",FILENO,DT0$,DT0{ALL},FOUNDDT0
11150 IF FOUNDDT0 THEN IF DT0$(1,57)=OUTPUT_TYPE$+DIVISION$+KEY1$+KEY2$+KEY3$ THEN OK=1
11190 EXIT 
11198 ! 
11199 ! 
11200 GET_1ST_DT0:
11210 ENTER FILENO,TOD_FIL$,FIL$,DT0_KEY$,OK
11220 DT0$="",OK=0,OUTPUT_TYPE$=FIL$(1,20)
11250 SWITCH TOD_FIL$
11260 CASE "DT2"
11265 DIVISION$=DIM(2),KEY1$=FIL$(55,10)+DIM(10),KEY2$=FIL$(83,4)+DIM(6),KEY3$=DIM(5); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK
11270 IF NOT(OK) THEN KEY2$=DIM(10); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISON$,KEY1$,KEY2$,KEY3$,OK
11275 IF OK THEN DT0_KEY$=OUTPUT_TYPE$+DIVISION$+KEY1$+KEY2$+KEY3$
11280 BREAK
11290 CASE "DTI"
11295 DIVISION$=DIM(2),KEY1$=FIL$(39,10)+DIM(10),KEY2$=FIL$(49,4)+DIM(6),KEY3$=PAD(FIL$(53,1),5); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK; IF NOT(OK) THEN KEY3$(1,1)="A"; CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK; IF NOT(OK) THEN KEY3$(1,1)=FIL$(53,1),KEY2$=DIM(10); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK; IF NOT(OK) THEN KEY3$(1,1)="A"; CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK
11297 IF OK THEN DT0_KEY$=OUTPUT_TYPE$+DIVISION$+KEY1$+KEY2$+KEY3$
11299 BREAK
11300 CASE "DTW"
11305 DIVISION$=DIM(2),KEY1$=FIL$(39,10)+DIM(10),KEY2$=FIL$(49,4)+DIM(6),KEY3$=DIM(5); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK
11310 IF NOT(OK) THEN KEY2$=DIM(10); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISON$,KEY1$,KEY2$,KEY3$,OK
11315 IF OK THEN DT0_KEY$=OUTPUT_TYPE$+DIVISION$+KEY1$+KEY2$+KEY3$
11320 BREAK
11340 CASE "DT3"
11345 DIVISION$=DIM(2),KEY1$=FIL$(36,10)+DIM(10),KEY2$=FIL$(56,4)+DIM(6),KEY3$=DIM(5); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK
11350 IF NOT(OK) THEN KEY2$=DIM(10); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISON$,KEY1$,KEY2$,KEY3$,OK
11355 IF OK THEN DT0_KEY$=OUTPUT_TYPE$+DIVISION$+KEY1$+KEY2$+KEY3$
11360 BREAK
11390 CASE "DTU"
11395 DIVISION$=DIM(2),KEY1$=FIL$(37,10)+DIM(10),KEY2$=FIL$(224,4)+DIM(6),KEY3$=PAD(FIL$(52,1),5); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK; IF NOT(OK) THEN KEY3$(1,1)="A"; CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK; IF NOT(OK) THEN KEY3$(1,1)=FIL$(52,1),KEY2$=DIM(10); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK; IF NOT(OK) THEN KEY3$(1,1)="A"; CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK
11397 IF OK THEN DT0_KEY$=OUTPUT_TYPE$+DIVISION$+KEY1$+KEY2$+KEY3$
11399 BREAK
11410 CASE "DT2_R"
11415 DIVISION$=DIM(2),KEY1$=FIL$(79,4)+DIM(6)+DIM(10),KEY2$=FIL$(83,4)+DIM(6),KEY3$=DIM(5); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISION$,KEY1$,KEY2$,KEY3$,OK
11420 IF NOT(OK) THEN KEY2$=DIM(10); CALL "UPDDT0;CHECK",FILENO,OUTPUT_TYPE$,DIVISON$,KEY1$,KEY2$,KEY3$,OK
11425 IF OK THEN DT0_KEY$=OUTPUT_TYPE$+DIVISION$+KEY1$+KEY2$+KEY3$
11430 BREAK
11980 END SWITCH 
11990 EXIT 
11998 ! 
11999 ! 
12000 PRE_OUTPUT_TYPE:
12005 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
12010 GR'TEXT$=VAL_OUT_DROP$
12090 RETURN 
12098 ! 
12099 ! 
12100 SELECT_OUTPUT_TYPE:
12110 CUR_ROW=GR'ROW
12115 CUR_COL=GR'COLUMN+1
12150 GR'CURRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL; NEXT_ID=GR
12155 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$
12159 TMP_ROW=CUR_ROW
12160 GOSUB FORMAT_ROW
12190 RETURN 
12198 ! 
12199 ! 
12200 SELECT_OUTPUT_LOC:
12220 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
12222 CUR_COL=GR'COLUMN,CUR_ROW=GR'ROW
12225 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$
12250 CALL "UPDDTT;VALIDATE_OUTPUT_LOCATION",OUTPUT_TYPE$,OUTPUT_LOC$,OK
12260 IF NOT(OK) THEN GR'VALUE$=PRIOR_VALUE$,OUTPUT_LOCATION$=PRIOR_OUTPUT_LOCATON$; GR'CURRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL; NEXT_ID=GR
12270 IF OK THEN CUR_COL=GR'COLUMN+1; GR'CURRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL; NEXT_ID=GR
12280 GOSUB UPD
12290 RETURN 
12298 ! 
12299 ! 
12300 PRE_OUTPUT_LOC:
12301 IF STP(OUTPUT_TYPE$)="PRINTER" THEN GOSUB LOAD_PRINT_DEV ! 240570
12302 IF STP(OUTPUT_TYPE$)="ARCHIVE" AND %HAS_IMAGE_LIB THEN {! 12368
12304 SWITCH STP(TF_TYPE$)
12306 CASE "CUST_INVOICE"
12308 TMP_IMG_TYPE$="A0"
12310 BREAK
12312 CASE "PURCHASE_ORDER"
12314 TMP_IMG_TYPE$="A2"
12316 BREAK
12318 CASE "WHS_PACKING_LIST"
12320 TMP_IMG_TYPE$="A1"
12322 BREAK
12324 DEFAULT 
12326 TMP_IMG_TYPE$=""
12328 END SWITCH 
12330 ILPARAMETERS=NEW("ILPARA")
12332 FIND_IL0:
12334 TMP_RESULT=ILPARAMETERS'FINDIL0(TMP_IMG_TYPE$)
12336 IF TMP_RESULT<>1 THEN {
12338 MSG_TITLE$="Record not found"
12340 MSG_TEXT$="This Output Type has not been configured in the Image Library Parameters. Would you like to configure it now?"
12342 MSGBOX MSG_TEXT$,MSG_TITLE$,"?,YESNO",MSG_RESP$
12344 IF MSG_RESP$<>"YES" THEN {
12346 DROP OBJECT ILPARAMETERS
12348 GR'CURRENTCOLUMN=PRE_COL-1
12349 GOTO *RETURN
12350  }
12352 PROCESS "ILGMPA","../ILG/IL.EN"
12354 GOTO FIND_IL0
12356  }
12358 OUTPUT_LOC$=ILPARAMETERS'GET_CURRENTDIRECTORY$()
12360 FILE_TYPE$="PDF" ! ILPARAMETERS'GET_IMAGEFORMAT$()
12362 DROP OBJECT ILPARAMETERS
12363 ! PRE_COL=GR'CURRENTCOLUMN,PRE_ROW=GR'CURRENTROW; GRID LOCK GR,PRE_COL,PRE_ROW
12365 GR'COLUMN=4; GR'VALUE$=OUTPUT_LOC$; GR'COLUMN=5; GR'VALUE$=FILE_TYPE$; GOSUB UPD
12367 GR'CURRENTCOLUMN=6
12368  } ELSE {! 12302
12370 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
12375 PRIOR_OUTPUT_LOC$=GR'VALUE$
12380  }
12390 RETURN 
12398 ! 
12399 ! 
12400 PRE_REPT_NAME:
12405 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
12410 GR'TEXT$=VAL_OUT_REPT$
12490 RETURN 
12498 ! 
12499 ! 
12500 SELECT_REPT_NAME:
12505 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
12507 CUR_ROW=GR'ROW,CUR_COL=GR'COLUMN
12510 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$
12550 GOSUB UPD
12600 IF POS(DT0$(61,1)="234")=0 THEN {! 12650}
12610 IF CUR_ROW<15 THEN SEQ=CUR_ROW+1; CALL "UPDDT0;READBYKEY",DT0,0,DT0_KEY$,STR(SEQ:"000"),SEG3$,SEG4$,SEG5$,DT0_TMP$,DT0_TMP{ALL},FOUNDDT0_TMP
12630 J=CUR_ROW; IF J<15 AND FOUNDDT0_TMP THEN J=J+1
12640 IF CUR_ROW<15 AND NOT(FOUNDDT0_TMP) THEN J=CUR_ROW+1; GRID LOAD GR,0,J,STR(J:"#000")+SEP+MID(VAL_OUT_DROP$,1,10)+SEP+DIM(60)+SEP+DIM(8)+SEP+DIM(20)+SEP+DIM(50)+SEP+DIM(60)+SEP+DIM(15)+SEP+DIM(20)+SEP+DIM(20)+$00$; GRID_LINE_COUNT=J
12645 GR'CURRENTROW=J,GR'CURRENTCOLUMN=2,NEXT_ID=GR
12650  } ELSE {! 12685 }
12660 IF DT0$(61,1)="2" THEN GR'CURRRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL+1; NEXT_ID=GR
12665 IF DT0$(61,1)="3" THEN GR'CURRRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL+3; NEXT_ID=GR
12670 IF DT0$(61,1)="4" THEN GR'CURRRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL+6; NEXT_ID=GR
12685  } ! 12650
12690 RETURN 
12698 ! 
12699 ! 
12700 SELECT_EMAIL_SUBJECT:
12705 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
12707 CUR_ROW=GR'ROW,CUR_COL=GR'COLUMN
12710 ! IF DT0$(61,1)="2" THEN {
12730 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$
12750 GOSUB UPD
12760 ! }
12780 GR'CURRRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL+1; NEXT_ID=GR
12790 RETURN 
12798 ! 
12799 ! 
12800 PRE_FILE_TYPE:
12810 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
12815 CUR_ROW=GR'ROW,CUR_COL=GR'COLUMN
12817 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$
12820 CALL "UPDDT0;GET_FILE_TYPE_DROP",OUTPUT_TYPE$,FILE_TYPE_DROP$
12830 GR'TEXT$=FILE_TYPE_DROP$
12840 RETURN 
12848 ! 
12849 ! 
12850 SELECT_EMAIL_FROM:
12852 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
12855 CUR_ROW=GR'ROW,CUR_COL=GR'COLUMN
12856 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$
12857 IF DT0$(61,1)="2" THEN CALL "UPDDTT;VALIDATE_OUTPUT_LOCATION",OUTPUT_TYPE$,EMAIL_FROM$,OK; IF NOT(OK) THEN GR'CURRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL; NEXT_ID=GR; GOTO *RETURN
12860 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$; GOSUB UPD
12865 IF DT0$(61,1)<>"3" THEN {
12867 IF CUR_ROW<15 THEN SEQ=CUR_ROW+1; CALL "UPDDT0;READBYKEY",DT0,0,DT0_KEY$,STR(SEQ:"000"),SEG3$,SEG4$,SEG5$,DT0_TMP$,DT0_TMP{ALL},FOUNDDT0_TMP
12868 J=CUR_ROW; IF J<15 AND FOUNDDT0_TMP THEN J=J+1
12870 IF CUR_ROW<15 AND NOT(FOUNDDT0_TMP) THEN J=CUR_ROW+1; GRID LOAD GR,0,J,STR(J:"#000")+SEP+MID(VAL_OUT_DROP$,1,10)+SEP+DIM(60)+SEP+DIM(8)+SEP+DIM(20)+SEP+DIM(50)+SEP+DIM(60)+SEP+DIM(15)+SEP+DIM(20)+SEP+DIM(20)+$00$; GRID_LINE_COUNT=J
12872 GR'CURRENTROW=J,GR'CURRENTCOLUMN=2,NEXT_ID=GR
12877  } ELSE {
12880 GR'CURRRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL+1; NEXT_ID=GR
12885  }
12890 RETURN 
12898 ! 
12899 ! 
12900 SELECT_FTP_LOGIN:
12905 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
12907 CUR_ROW=GR'ROW,CUR_COL=GR'COLUMN
12910 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$
12950 GOSUB UPD
12980 GR'CURRRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL+1; NEXT_ID=GR
12990 RETURN 
12998 ! 
12999 ! 
13000 SELECT_FTP_PASSWORD:
13005 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
13007 CUR_ROW=GR'ROW,CUR_COL=GR'COLUMN
13010 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$
13050 GOSUB UPD
13080 GR'CURRRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL+1; NEXT_ID=GR
13090 RETURN 
13098 ! 
13099 ! 
13100 SELECT_FTP_TO_DIR:
13105 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
13107 CUR_ROW=GR'ROW,CUR_COL=GR'COLUMN
13110 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$; GOSUB UPD
13120 IF CUR_ROW<15 THEN SEQ=CUR_ROW+1; CALL "UPDDT0;READBYKEY",DT0,0,DT0_KEY$,STR(SEQ:"000"),SEG3$,SEG4$,SEG5$,DT0_TMP$,DT0_TMP{ALL},FOUNDDT0_TMP
13125 J=CUR_ROW; IF J<15 AND FOUNDDT0_TMP THEN J=J+1
13130 IF CUR_ROW<15 AND NOT(FOUNDDT0_TMP) THEN J=CUR_ROW+1; GRID LOAD GR,0,J,STR(J:"#000")+SEP+MID(VAL_OUT_DROP$,1,10)+SEP+DIM(60)+SEP+DIM(8)+SEP+DIM(20)+SEP+DIM(50)+SEP+DIM(60)+SEP+DIM(15)+SEP+DIM(20)+SEP+DIM(20)+$00$; GRID_LINE_COUNT=J
13135 GR'CURRENTROW=J,GR'CURRENTCOLUMN=2,NEXT_ID=GR
13190 RETURN 
13198 ! 
13199 ! 
13200 SELECT_A_LINE:
13205 NEXT_LINE_NUM=GR'ROWSHIGH+1
13210 IF GRID_LINE_COUNT<15 THEN GRID_LINE_COUNT=NEXT_LINE_NUM; J=GRID_LINE_COUNT; GRID LOAD GR,0,J,STR(J:"#000")+SEP+MID(VAL_OUT_DROP$,1,10)+SEP+DIM(60)+SEP+DIM(8)+SEP+DIM(20)+SEP+DIM(50)+SEP+DIM(60)+SEP+DIM(15)+SEP+DIM(20)+SEP+DIM(20)+$00$; GR'CURRENTROW=GRID_LINE_COUNT,GR'CURRENTCOLUMN=3; NEXT_ID=GR
13220 OUTPUT_TYPE$=""
13225 TMP_ROW=GR'CURRENTROW
13230 GOSUB FORMAT_ROW
13290 RETURN 
13298 ! 
13299 ! 
13300 UPD:
13310 CALL "UPDDT0; READBYKEY",DT0,0,DT0_KEY$,STR(CUR_ROW:"000"),SEG3$,SEG4$,SEG5$,DT0$,DT0{ALL},FOUNDDT0
13320 CALL "UPDDTT;CVT_OUT_TYPE",OUTPUT_TYPE$,CVT_TYPE$; DT0$(61,1)=CVT_TYPE$
13330 DT0$(1,57)=DT0_KEY$,DT0$(58,3)=STR(CUR_ROW:"000")
13340 IF STP(OUTPUT_LOC$,2)<>"" THEN DT0$(62,60)=OUTPUT_LOC$
13350 IF STP(REPT_NAME$,2)<>"" THEN DT0$(407,20)=PAD(REPT_NAME$,20)
13360 IF STP(EMAIL_SUBJECT$,2)<>"" THEN DT0$(297,50)=PAD(EMAIL_SUBJECT$,50)
13370 IF STP(FTP_LOGIN$,2)<>"" THEN DT0$(122,15)=PAD(FTP_LOGIN$,15)
13380 IF STP(FTP_PASSWORD$,2)<>"" THEN DT0$(137,20)=PAD(FTP_PASSWORD$,20)
13390 IF STP(FTP_TO_DIR$,2)<>"" THEN DT0$(227,70)=PAD(FTP_TO_DIR$,70)
13395 IF STP(EMAIL_FROM$,2)<>"" THEN DT0$(347,60)=PAD(EMAIL_FROM$,60)
13400 CALL "UPDDT0;CVT_FILE_TYPE_FROM",FILE_TYPE$,FILE_TYPE_CODE$; DT0$(427,1)=FILE_TYPE_CODE$
13450 CALL "UPDDT0;UPDATE",DT0,DT0$,DT0{ALL},BUSY
13490 RETURN 
13498 ! 
13499 ! 
13500 SELECT_FILE_TYPE:
13505 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
13507 CUR_ROW=GR'ROW,CUR_COL=GR'COLUMN
13510 READ DATA FROM GR'ROWDATA$ TO IOL=GR'LOADIOLIST$
13570 GOSUB UPD
13580 GR'CURRRENTROW=CUR_ROW,GR'CURRENTCOLUMN=CUR_COL+1; NEXT_ID=GR
13585 REFRESH_FLG=1
13590 RETURN 
13598 ! 
13599 ! 
13600 PRE_EMAIL_SUBJECT:
13645 RETURN 
13648 ! 
13649 ! 
13650 PRE_EMAIL_FROM:
13690 RETURN 
13698 ! 
13699 ! 
13700 PRE_FTP_LOGIN:
13745 RETURN 
13748 ! 
13749 ! 
13750 PRE_FTP_PASSWORD:
13790 RETURN 
13798 ! 
13799 ! 
13800 PRE_FTP_TO_DIR:
13845 RETURN 
13898 ! 
13899 ! 
14000 PRE_VAL_HTTP_RESP:
14095 RETURN 
14098 ! 
14099 ! 
14100 SELECT_VAL_HTTP_RESP:
14195 RETURN 
14198 ! 
14199 ! 
22900 SELECT_D_LINE:
22902 CUR_ROW=GR'ROW,CUR_COL=GR'COLUMN
22904 IF CUR_ROW>0 AND CUR_ROW<=15 THEN {
22905 CALL "UPDDT0; READBYKEY",DT0,0,PAD(VTYPE$,20),DT0_SEG1$+DT0_SEG2$,DT0_SEG3$,DT0_SEG4$,STR(CUR_ROW:"000"),DT0$,DT0{ALL},FOUNDDT0
22910 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"YESNO,2",ANS$
22915 IF ANS$="YES" THEN {
22920 CALL "UPDDT0;DELETE",DT0,DT0$,DT0{ALL},FOUND,BUSY; IF FOUND AND BUSY THEN MSGBOX MSG("ERR_W"),""
22922 IF FOUND AND NOT(BUSY) THEN {
22924 COUNT=CUR_ROW
22925 CALL "UPDDT0;READNEXT",DT0,DT0$,DT0{ALL},FOUNDDT0; IF FOUNDDT0 THEN IF DT0$(1,57)<>PAD(VTYPE$,20)+DT0_SEG1$+DT0_SEG2$+DT0_SEG3$+DT0_SEG4$ THEN FOUNDDT0=0
22930 WHILE FOUNDDT0
22935 OLD_DT0$=DT0$; CALL "UPDDT0;DELETE",DT0,DT0$,DT0{ALL},FOUND,BUSY
22940 DT0$=OLD_DT0$; DT0$(58,3)=STR(COUNT:"000"); COUNT=COUNT+1; CALL "UPDDT0;UPDATE",DT0,DT0$,DT0{ALL},FOUNDDT0
22945 WEND 
22947 PERFORM "UPDDT0;BUILD_GRID"
22950  } ! 22922
22985  } ! 22915
22986 PERFORM "UPDDT0;BUILD_GRID"
22987  } ! 33904
22990 RETURN 
22998 ! 
22999 ! 
23000 FORMAT_ROW:
23020 COL_LINE=1
23022 COL_DEL=2
23024 COL_ODV=3
23026 COL_ODV_LOC=4
23028 COL_FILE_TYPE=5
23030 COL_REPT_NAME=6
23032 COL_EMAIL_SUBJ=7
23034 COL_EMAIL_FORM=8
23036 COL_FTP_LOGIN=9
23038 COL_FTP_PASS=10
23040 COL_FTP_TO_DIR=11
23042 COL_VHTTP=12
23090 SWITCH STP(OUTPUT_TYPE$)
23100 CASE "PRINTER"
23105 GRID LOCK GR,COL_ODV,TMP_ROW
23110 GRID UNLOCK GR,COL_ODV_LOC,TMP_ROW
23115 GRID UNLOCK GR,COL_FILE_TYPE,TMP_ROW
23120 GRID UNLOCK GR,COL_REPT_NAME,TMP_ROW
23125 GRID LOCK GR,COL_EMAIL_SUBJ,TMP_ROW
23130 GRID LOCK GR,COL_EMAIL_FORM,TMP_ROW
23135 GRID LOCK GR,COL_FTP_LOGIN,TMP_ROW
23140 GRID LOCK GR,COL_FTP_PASS,TMP_ROW
23145 GRID LOCK GR,COL_FTP_TO_DIR,TMP_ROW
23150 GRID LOCK GR,COL_VHTTP,TMP_ROW
23190 BREAK
23200 CASE "EMAIL"
23205 GRID LOCK GR,COL_ODV,TMP_ROW
23210 GRID UNLOCK GR,COL_ODV_LOC,TMP_ROW
23215 GRID UNLOCK GR,COL_FILE_TYPE,TMP_ROW
23220 GRID UNLOCK GR,COL_REPT_NAME,TMP_ROW
23225 GRID UNLOCK GR,COL_EMAIL_SUBJ,TMP_ROW
23230 GRID UNLOCK GR,COL_EMAIL_FORM,TMP_ROW
23235 GRID LOCK GR,COL_FTP_LOGIN,TMP_ROW
23240 GRID LOCK GR,COL_FTP_PASS,TMP_ROW
23245 GRID LOCK GR,COL_FTP_TO_DIR,TMP_ROW
23250 GRID LOCK GR,COL_VHTTP,TMP_ROW
23290 BREAK
23300 CASE "FTP"
23305 GRID LOCK GR,COL_ODV,TMP_ROW
23310 GRID UNLOCK GR,COL_ODV_LOC,TMP_ROW
23315 GRID UNLOCK GR,COL_FILE_TYPE,TMP_ROW
23320 GRID UNLOCK GR,COL_REPT_NAME,TMP_ROW
23325 GRID LOCK GR,COL_EMAIL_SUBJ,TMP_ROW
23330 GRID LOCK GR,COL_EMAIL_FORM,TMP_ROW
23335 GRID UNLOCK GR,COL_FTP_LOGIN,TMP_ROW
23340 GRID UNLOCK GR,COL_FTP_PASS,TMP_ROW
23345 GRID UNLOCK GR,COL_FTP_TO_DIR,TMP_ROW
23350 GRID LOCK GR,COL_VHTTP,TMP_ROW
23390 BREAK
23400 CASE "HTTP"
23405 GRID LOCK GR,COL_ODV,TMP_ROW
23410 GRID UNLOCK GR,COL_ODV_LOC,TMP_ROW
23415 GRID UNLOCK GR,COL_FILE_TYPE,TMP_ROW
23420 GRID UNLOCK GR,COL_REPT_NAME,TMP_ROW
23425 GRID LOCK GR,COL_EMAIL_SUBJ,TMP_ROW
23430 GRID LOCK GR,COL_EMAIL_FORM,TMP_ROW
23435 GRID LOCK GR,COL_FTP_LOGIN,TMP_ROW
23440 GRID LOCK GR,COL_FTP_PASS,TMP_ROW
23445 GRID LOCK GR,COL_FTP_TO_DIR,TMP_ROW
23450 GRID UNLOCK GR,COL_VHTTP,TMP_ROW
23490 BREAK
23500 CASE "HTTPS"
23505 GRID LOCK GR,COL_ODV,TMP_ROW
23510 GRID UNLOCK GR,COL_ODV_LOC,TMP_ROW
23515 GRID UNLOCK GR,COL_FILE_TYPE,TMP_ROW
23520 GRID UNLOCK GR,COL_REPT_NAME,TMP_ROW
23525 GRID LOCK GR,COL_EMAIL_SUBJ,TMP_ROW
23530 GRID LOCK GR,COL_EMAIL_FORM,TMP_ROW
23535 GRID LOCK GR,COL_FTP_LOGIN,TMP_ROW
23540 GRID LOCK GR,COL_FTP_PASS,TMP_ROW
23545 GRID LOCK GR,COL_FTP_TO_DIR,TMP_ROW
23550 GRID UNLOCK GR,COL_VHTTP,TMP_ROW
23590 BREAK
23600 CASE "FAX"
23605 GRID LOCK GR,COL_ODV,TMP_ROW
23610 GRID UNLOCK GR,COL_ODV_LOC,TMP_ROW
23615 GRID UNLOCK GR,COL_FILE_TYPE,TMP_ROW
23620 GRID UNLOCK GR,COL_REPT_NAME,TMP_ROW
23625 GRID LOCK GR,COL_EMAIL_SUBJ,TMP_ROW
23630 GRID LOCK GR,COL_EMAIL_FORM,TMP_ROW
23635 GRID LOCK GR,COL_FTP_LOGIN,TMP_ROW
23640 GRID LOCK GR,COL_FTP_PASS,TMP_ROW
23645 GRID LOCK GR,COL_FTP_TO_DIR,TMP_ROW
23650 GRID LOCK GR,COL_VHTTP,TMP_ROW
23690 BREAK
23700 CASE "WEBEC"
23705 GRID LOCK GR,COL_ODV,TMP_ROW
23710 GRID LOCK GR,COL_ODV_LOC,TMP_ROW
23715 GRID LOCK GR,COL_FILE_TYPE,TMP_ROW
23720 GRID LOCK GR,COL_REPT_NAME,TMP_ROW
23725 GRID LOCK GR,COL_EMAIL_SUBJ,TMP_ROW
23730 GRID LOCK GR,COL_EMAIL_FORM,TMP_ROW
23735 GRID LOCK GR,COL_FTP_LOGIN,TMP_ROW
23740 GRID LOCK GR,COL_FTP_PASS,TMP_ROW
23745 GRID LOCK GR,COL_FTP_TO_DIR,TMP_ROW
23750 GRID LOCK GR,COL_VHTTP,TMP_ROW
23790 BREAK
23800 CASE "HOLD"
23805 GRID LOCK GR,COL_ODV,TMP_ROW
23810 GRID UNLOCK GR,COL_ODV_LOC,TMP_ROW
23815 GRID UNLOCK GR,COL_FILE_TYPE,TMP_ROW
23820 GRID UNLOCK GR,COL_REPT_NAME,TMP_ROW
23825 GRID LOCK GR,COL_EMAIL_SUBJ,TMP_ROW
23830 GRID LOCK GR,COL_EMAIL_FORM,TMP_ROW
23835 GRID LOCK GR,COL_FTP_LOGIN,TMP_ROW
23840 GRID LOCK GR,COL_FTP_PASS,TMP_ROW
23845 GRID LOCK GR,COL_FTP_TO_DIR,TMP_ROW
23850 GRID LOCK GR,COL_VHTTP,TMP_ROW
23890 BREAK
23900 CASE "ARCHIVE"
23905 GRID LOCK GR,COL_ODV,TMP_ROW
23910 GRID UNLOCK GR,COL_ODV_LOC,TMP_ROW
23915 GRID UNLOCK GR,COL_FILE_TYPE,TMP_ROW
23920 GRID UNLOCK GR,COL_REPT_NAME,TMP_ROW
23925 GRID LOCK GR,COL_EMAIL_SUBJ,TMP_ROW
23930 GRID LOCK GR,COL_EMAIL_FORM,TMP_ROW
23935 GRID LOCK GR,COL_FTP_LOGIN,TMP_ROW
23940 GRID LOCK GR,COL_FTP_PASS,TMP_ROW
23945 GRID LOCK GR,COL_FTP_TO_DIR,TMP_ROW
23950 GRID LOCK GR,COL_VHTTP,TMP_ROW
23990 BREAK
24000 DEFAULT 
24005 GRID UNLOCK GR,COL_ODV,TMP_ROW
24010 GRID LOCK GR,COL_ODV_LOC,TMP_ROW
24015 GRID LOCK GR,COL_FILE_TYPE,TMP_ROW
24020 GRID LOCK GR,COL_REPT_NAME,TMP_ROW
24025 GRID LOCK GR,COL_EMAIL_SUBJ,TMP_ROW
24030 GRID LOCK GR,COL_EMAIL_FORM,TMP_ROW
24035 GRID LOCK GR,COL_FTP_LOGIN,TMP_ROW
24040 GRID LOCK GR,COL_FTP_PASS,TMP_ROW
24045 GRID LOCK GR,COL_FTP_TO_DIR,TMP_ROW
24050 GRID LOCK GR,COL_VHTTP,TMP_ROW
24090 BREAK
24100 END SWITCH 
24195 RETURN 
24198 ! 
24199 ! 
25000 VALIDATE_GRID:
25490 EXIT 
25498 ! 
25499 ! 
30000 BUILD_GRID:
30002 IOLIST DT0$
30005 CALL "*wingrp;disable",KEYS.GRP$
30010 GR=GRID_1.CTL
30090 GRID LOAD GR,0,0,"" ! clear grid
30095 DT0_KEY$=PAD(VTYPE$,20)+DT0_SEG1$+DT0_SEG2$+DT0_SEG3$+DT0_SEG4$
30100 FOR J=1 TO 15
30120 CALL "UPDDT0; READBYKEY",DT0,0,DT0_KEY$,STR(J:"000"),SEG3$,SEG4$,SEG5$,DT0$,DT0{ALL},FOUNDDT0
30200 IF NOT(FOUNDDT0) AND J=1 THEN GRID LOAD GR,0,J,STR(J:"#000")+SEP+MID(VAL_OUT_DROP$,1,10)+SEP+DIM(60)+SEP+DIM(8)+SEP+DIM(20)+SEP+DIM(50)+SEP+DIM(60)+SEP+DIM(15)+SEP+DIM(20)+SEP+DIM(20)+$00$
30300 IF FOUNDDT0 THEN {
30302 GRID_LINE_COUNT=J
30305 READ DATA FROM REC(IOL=30002) TO IOL=IOL(DT0)
30310 CALL "UPDDTT;CVT_OUT_TYPE_IN",DT0$(61,1),OUTPUT_TYPE$
30320 CALL "UPDDT0;CVT_FILE_TYPE_TO",DT0$(427,1),FILE_TYPE$
30380 GRID LOAD GR,0,J,STR(J:"#000")+SEP+DIM(3)+SEP+OUTPUT_TYPE$+SEP+OUTPUT_LOC$+SEP+FILE_TYPE$+SEP+REPT_NAME$+SEP+EMAIL_SUBJECT$+SEP+EMAIL_FROM$+SEP+FTP_LOGIN$+SEP+FTP_PASSWORD$+SEP+FTP_TO_DIR$+$00$
30384 TMP_ROW=J
30385 GOSUB FORMAT_ROW
30390  }
30490 NEXT J
34950 GR'CURRENTROW=1,GR'CURRENTCOLUMN=3; NEXT_ID=GR
34990 RETURN 
34998 ! 
34999 ! 
35000 DELETE_GRID:
35010 GRID LOAD GR,0,0,"" ! clear grid
35090 RETURN 
35098 ! 
35099 ! 
36000 LOAD_PRINT_DEV:
36010 GR'ROW=GR'CURRENTROW,GR'COLUMN=GR'CURRENTCOLUMN
36020 GR'CELLTYPE$="DropBoxHideBtn"
36030 PRTLIST$=""; CALL "ZGXOPO;GET_PRINT_DEVICES",PRTLIST$
36040 GR'TEXT$=PRTLIST$
36095 RETURN 
36099 ! 
56000 REM "198612-TopForm Output director                                     
56002 REM "203348-Not getting the 806 tracking xml in live                    
56003 REM "234689-Create new Output Director report for the WHS_PACKING_LIST  
56004 REM "240570-GUI Printing - Support for queueing and scheduling reports. 
56005 REM "261434-DBRS Development - Next Phase - Ability to schedule BIRT rpt
