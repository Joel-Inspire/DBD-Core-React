0010 ! UPDICF - File ICF Maintenance
0035 REM "5.6 - 05/29/08 - 11.449444 - jvv - SSP# 212487
0037 REM "212487-WMS. Need to know how to split Lots when doing quick bin    
0040 REM "Copyright 2008 DemandBridge, Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF FILENO=-99 OR FILENO=0 THEN Z$="01S ICF...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1 ELSE IF POS("ICF"=PTH(FILENO))=0 THEN Z$="01S ICF...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDICF;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDICF;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDICF;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDICF;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDICF;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDICF;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("ICF"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(1,32)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,32)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(269),A[12]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,32)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,269),MSG$=""
2550 SWITCH A$(1,3) ! 2800 END SWITCH
2560 CASE "CGP"
2570 BREAK
2580 CASE "IGP"
2590 BREAK
2600 CASE "AFM"
2630 BREAK
2710 BREAK
2800 END SWITCH ! 2550
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
11000 GET_NEXT_LOT_NUM:
11010 ENTER ZZPARM,X3$,NEXT_NUM$
11020 X=0; EXTRACT (ZZPARM,KEY=X3$(9,3)+"LOT",DOM=*NEXT)X
11040 X=X+1; IF X>99999999 THEN X=1
11050 NEXT_NUM$=STR(X:"00000000")
11060 WRITE (ZZPARM,KEY=X3$(9,3)+"LOT")X
11090 EXIT 
11098 ! 
11099 ! 
12000 SPLIT_PICK:
12010 ENTER FILENO,ICF_KEY$,ORD_QTY,SHIP_QTY,NEW_LOT$
12020 CALL "UPDICF;READBYKEY",FILENO,0,ICF_KEY$,SEG2$,SEG3$,SEG4$,SEG5$,ICF$,ICF{ALL},FOUNDICF
12050 IF FOUNDICF THEN {
12060 ICF[4]=SHIP_QTY
12070 UNIT_COST=0; IF ORD_QTY>0 THEN UNIT_COST=ICF[0]/ORD_QTY
12075 ICF[0]=UNIT_COST*SHIP_QTY
12080 UNIT_FRT=0; IF ORD_QTY>0 THEN UNIT_FRT=ICF[1]/ORD_QTY
12085 ICF[1]=UNIT_FRT*SHIP_QTY
12090 CALL "UPDICF;UPDATE",FILENO,ICF$,ICF{ALL},BUSY
12100 NEXT_ICF_SEQ:
12105 OLD_SEQ$=ICF$(31,2); CALL "UPDICF;INCREASE_SEQ",OLD_SEQ$,NEW_SEQ$; ICF$(31,2)=NEW_SEQ$
12110 CALL "UPDICF;READBYKEY",FILENO,0,ICF$(1,32),SEG2$,SEG3$,SEG4$,SEG5$,ICF_2$,ICF_2{ALL},FOUNDICF_2; IF FOUNDICF_2 THEN GOTO NEXT_ICF_SEQ
12130 ICF[0]=UNIT_COST*(ORD_QTY-SHIP_QTY)
12135 ICF[1]=UNIT_FRT*(ORD_QTY-SHIP_QTY)
12140 ICF[4]=ORD_QTY-SHIP_QTY
12145 ICF$(110,11)=DIM(11)
12150 CALL "UPDICF;UPDATE",FILENO,ICF$,ICF{ALL},BUSY
12160 NEW_LOT$=ICF$(1,32)
12180  }
12190 EXIT 
12198 ! 
12199 ! 
13000 GET_PRICE_CLASS:
13002 ! gets 1st lot record for order #, line.  Multiple lot records must be entered as mult lines.  included in w/o statement
13010 ENTER FILENO,ZZPARM,X3$,X$,NEW_PRICE_CLASS$
13015 IF FILENO=-99 THEN GOSUB INIT
13020 DIM NEW_PRICE_CLASS$(3)
13030 IF LEN(X$)<32 THEN GOTO 13180
13050 READ (ZZPARM,KEY=X3$(9,3)+"F/M",ERR=13190)ZZPARM$
13060 IF MID(ZZPARM$,316,1)="Y" THEN {! 13150
13070 CALL "UPDICF;READBYKEY",FILENO,3,X$(25,8),X$(33,3),X$(1,20),X$(21,4),SEG5$,ICF$,ICF{ALL},FOUNDICF
13075 CALL "UPDICF;READNEXT",FILENO,ICF$,ICF{ALL},FOUNDICF; IF FOUNDICF THEN IF ICF$(1,20)<>X$(1,20) OR ICF$(21,4)<>X$(21,4) OR ICF$(110,8)<>X$(25,8) OR ICF$(118,3)<>X$(33,3) THEN FOUNDICF=0
13080 IF FOUNDICF THEN IF ICF$(267,3)<>DIM(3) THEN NEW_PRICE_CLASS$=ICF$(267,3)
13150  } ! 13060
13180 GOSUB WRAPUP
13190 EXIT 
13198 ! 
13199 ! 
13500 NOPICK:
13510 ENTER FILENO,ICF_KEY$
13520 CALL "UPDICF;READBYKEY",FILENO,0,ICF_KEY$,SEG2$,SEG3$,SEG4$,SEG5$,ICF$,ICF{ALL},FOUNDICF
13530 IF FOUNDICF THEN {
13540 ICF$(110,11)=PAD("NOPICK",11)
13550 CALL "UPDICF;UPDATE",FILENO,ICF$,ICF{ALL},BUSY
13580  }
13590 EXIT 
13598 ! 
13599 ! 
13600 GET_ORD_LOT_LIST:
13610 ENTER FILENO,ORD$,ORD_LINE$,LOT_LIST$
13615 LOT_LIST$=""
13620 CALL "UPDICF;READBYKEY",FILENO,3,ORD$,ORD_LINE$,SEG3$,SEG4$,SEG5$,ICF$,ICF{ALL},FOUNDICF
13630 CALL "UPDICF;READNEXT",FILENO,ICF$,ICF{ALL},FOUNDICF; IF FOUNDICF THEN IF ICF$(110,11)<>ORD$+ORD_LINE$ THEN FOUNDICF=0
13640 WHILE FOUNDICF
13650 LOT_LIST$=LOT_LIST$+ICF$(1,32)
13660 CALL "UPDICF;READNEXT",FILENO,ICF$,ICF{ALL},FOUNDICF; IF FOUNDICF THEN IF ICF$(110,11)<>ORD$+ORD_LINE$ THEN FOUNDICF=0
13680 WEND 
13690 EXIT 
13698 ! 
13699 ! 
14000 PRIO_PICK_BIN:
14010 ENTER FILENO,OLD_KEY$,NEW_KEY$,P_OK
14015 P_OK=0
14020 OLD_SEQ$=OLD_KEY$(31,2),NEW_SEQ$=NEW_KEY$(31,2)
14030 CALL "UPDICF;READBYKEY",FILENO,0,OLD_KEY$,SEG2$,SEG3$,SEG4$,SEG5$,RFB1$,RFB1{ALL},FOUNDRFB1
14040 CALL "UPDICF;READBYKEY",FILENO,0,NEW_KEY$,SEG2$,SEG3$,SEG4$,SEG5$,RFB2$,RFB2{ALL},FOUNDRFB2
14050 IF FOUNDRFB1 AND FOUNDRFB2 AND OLD_SEQ$<NEW_SEQ$ THEN {
14060 CALL "UPDICF;DELETE",FILENO,RFB1$,RFB1{ALL},FOUND,BUSY
14070 CALL "UPDICF;DELETE",FILENO,RFB2$,RFB2{ALL},FOUND,BUSY
14080 RFB1$(31,2)=NEW_SEQ$,RFB2$(31,2)=OLD_SEQ$
14100 CALL "UPDICF;INSERT",FILENO,RFB1$,RFB1{ALL},OK
14110 CALL "UPDICF;INSERT",FILENO,RFB2$,RFB2{ALL},OK
14170 P_OK=1
14180  }
14190 EXIT 
15000 INCREASE_SEQ:
15010 ENTER OLD_SEQ$,NEW_SEQ$
15020 OLD_SEQ=NUM(OLD_SEQ$,ERR=ALPHA_SEQ)
15030 IF OLD_SEQ<98 THEN {
15040 NEW_SEQ=OLD_SEQ+1
15050 NEW_SEQ$=STR(NEW_SEQ:"00")
15080 GOTO 15190 ! exit
15090  }
15100 ALPHA_SEQ:
15105 NEW_SEQ$=OLD_SEQ$
15120 IF NEW_SEQ$(2,1)="9" THEN NEW_SEQ$(2,1)="A" ELSE IF NEW_SEQ$(2,1)="Z" THEN NEW_SEQ$(2,1)="0",NEW_SEQ$(1,1)=CHR(ASC(NEW_SEQ$(1,1))+1) ELSE NEW_SEQ$(2,1)=CHR(ASC(NEW_SEQ$(2,1))+1)
15130 IF NEW_SEQ$(1,1)=":" THEN NEW_SEQ$(1,1)="A"
15140 IF NEW_SEQ$(1,1)="[" THEN NEW_SEQ$="01" ! restart seq number
15190 EXIT 
16000 BIN_TOTAL:! SSP 212487
16010 ENTER ICF,LOT_NUM$,BIN_LOC$,TOTQTY,CTYPE
16015 DIM A$(269),A[12]
16020 SELECT IOL=0310 FROM ICF,KNO=4 WHERE A$(234,8)=LOT_NUM$ AND A$(100,10)=BIN_LOC$
16030 IF A$(110,11)=DIM(11) THEN TOTQTY=TOTQTY+A[4] ! ONLY FOR NON ALLOCATED
16035 TOTQTY=TOTQTY+A[4]
16050 NEXT RECORD 
16090 EXIT 
17000 BIN_TRANSFER_SEQ:! SSP 212487    
17010 ENTER ICF,ICF_KEY$
17020 NEXT_BIN_SEQ:
17030 OLD_SEQ$=ICF_KEY$(31,2); CALL "UPDICF;INCREASE_SEQ",OLD_SEQ$,NEW_SEQ$; ICF_KEY$(31,2)=NEW_SEQ$
17040 CALL "UPDICF;READBYKEY",ICF,0,ICF_KEY$,SEG2$,SEG3$,SEG4$,SEG5$,ICF_2$,ICF_2{ALL},FOUNDICF_2; IF FOUNDICF_2 THEN GOTO NEXT_BIN_SEQ
17050 EXIT 
56000 REM "188067-New Pricing changes. Standard GP Percentage for a           
56002 REM "191846-add call to zzcomp in all upd pgms                          
56004 REM "190478-Additional Services - Handle shipements delivered via       
56006 REM "180032-Wireless Warehousing                                        
56008 REM "190538-Item price class pricing by bin identifier.                 
56010 REM "198501-Exact repeat issue                                          
56012 REM "197452-Modify WMS to display available lots if lot item is         
56014 REM "204432-Provide ability in WMS for items to be picked from picked   
56016 REM "212487-WMS. Need to know how to split Lots when doing quick bin    
