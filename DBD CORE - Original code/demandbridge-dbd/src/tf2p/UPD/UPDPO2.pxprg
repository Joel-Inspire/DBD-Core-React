0010 ! UPDPO2 - File PO2 Maintenance
0035 REM "5.5 - 04/16/07 - 8.496666 - jme - SSP# 207229
0037 REM "207229-WMS Recv Issues                                             
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15],A[16],A[17],A[18],A[19],A[20],A[21],A[22],A[23],A[24],A[25],A[26],A[27]
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF POS("PO2"=PTH(FILENO))=0 THEN Z$="01O PO2...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDPO2;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 IF FILENO<>0 THEN READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDPO2;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 IF FILENO<>0 THEN READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDPO2;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 IF FILENO<>0 THEN PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDPO2;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 IF FILENO<>0 THEN PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDPO2;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 IF FILENO<>0 THEN PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDPO2;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("PO2"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(82,9)+A$(7,3)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(82,9)+A$(7,3)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(170),A[27]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(82,9)+A$(7,3)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,170),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 VALIDATE_PO:
10010 ENTER FTO,X3$,PO$,PO{ALL},TASK_NUM$,OK,MSG$
10020 OK=1,MSG$=""
10100 IF MID(X3$,145,1)="1" THEN {! batch processing
10105 CALL "UPDFTO;READBYKEY",FTO,0,PO$(1,9),SEG2$,SEG3$,SEG4$,SEG5$,FTO$,FTO{ALL},FOUNDFTO
10110 IF FOUNDFTO THEN {! 10180 }
10120 IF FTO$(10,3)="WMS" AND FTO$(17,10)<>TASK_NUM$ THEN {
10125 OK=0,MSG$=MSG("RFG_POT")+" "+FTO$(17,10)
10130  } ELSE {
10140 IF FTO$(17,10)<>TASK_NUM$ THEN OK=0; MSG$=MSG("RFG_POB")+" "+FTO$(10,4)
10150  }
10180  } ! 10110 
10185  } ! 10100
10190 EXIT 
10198 ! 
10199 ! 
10300 ZERO_CST_BY_SCHED_DT:
10310 ENTER PO1,PO2,SCHED_DT$,QTY
10315 QTY=0
10320 CALL "UPDPO1;READBYKEY",PO1,3,SCHED_DT$,SEG2$,SEG3$,SEG4$,SEG5$,PO1$,PO1{ALL},FOUNDPO1
10330 CALL "UPDPO1;READNEXT",PO1,PO1$,PO1{ALL},FOUNDPO1; IF FOUNDPO1 THEN IF PO1$(291,6)<>SCHED_DT$ THEN FOUNDPO1=0
10340 WHILE FOUNDPO1
10342 CALL "UPDPO2;READBYKEY",PO2,0,PO1$(297,9),SEG2$,SEG3$,SEG4$,SEG5$,PO2$,PO2{ALL},FOUNDPO2
10345 CALL "UPDPO2;READNEXT",PO2,PO2$,PO2{ALL},FOUNDPO2; IF FOUNDPO2 THEN IF PO2$(82,9)<>PO1$(297,9) THEN FOUNDPO2=0
10350 WHILE FOUNDPO2
10360 IF PO2[0]=0 THEN QTY=QTY+1
10370 CALL "UPDPO2;READNEXT",PO2,PO2$,PO2{ALL},FOUNDPO2; IF FOUNDPO2 THEN IF PO2$(82,9)<>PO1$(297,9) THEN FOUNDPO2=0
10375 WEND ! 10360
10380 CALL "UPDPO1;READNEXT",PO1,PO1$,PO1{ALL},FOUNDPO1; IF FOUNDPO1 THEN IF PO1$(291,6)<>SCHED_DT$ THEN FOUNDPO1=0
10385 WEND ! 10340
10390 EXIT 
10398 ! 
10399 ! 
10500 CHECK_ZERO:
10510 ENTER PO2,FS2,PO_NUM$,ZERO_COST,ZERO_PRICE
10520 ZERO_COST=0,ZERO_PRICE=0
10530 CALL "UPDPO2;READBYKEY",PO2,0,PO_NUM$,SEG2$,SEG3$,SEG4$,SEG5$,PO2$,PO2{ALL},FOUNDPO2
10540 CALL "UPDPO2;READNEXT",PO2,PO2$,PO2{ALL},FOUNDPO2; IF FOUNDPO2 THEN IF PO2$(82,9)<>PO_NUM$ THEN FOUNDPO2=0
10550 WHILE FOUNDPO2 AND NOT(ZERO_PRICE) AND NOT(ZERO_COST)
10555 IF PO2$(90,1)<>" " THEN CALL "UPDFS2;READBYKEY",FS2,0,PO2$(82,8),PO2$(7,3),SEG3$,SEG4$,SEG5$,FS2$,FS2{ALL},FOUNDFS2; IF FOUNDFS2 THEN IF FS2[4]=0 AND POS(FS2$(155,1)="MNS")=0 THEN ZERO_PRICE=1
10560 IF PO2[0]=0 AND POS(PO2$(10,1)="MS")=0 THEN ZERO_COST=1
10575 CALL "UPDPO2;READNEXT",PO2,PO2$,PO2{ALL},FOUNDPO2; IF FOUNDPO2 THEN IF PO2$(82,9)<>PO_NUM$ THEN FOUNDPO2=0
10580 WEND 
10590 EXIT 
10598 ! 
10599 ! 
10800 GET_ZERO_COST_PO:
10810 ENTER PO1,PO2,SCHED_DT$,PO_LIST$
10815 PO_LIST$=""
10820 CALL "UPDPO1;READBYKEY",PO1,3,SCHED_DT$,SEG2$,SEG3$,SEG4$,SEG5$,PO1$,PO1{ALL},FOUNDPO1
10830 CALL "UPDPO1;READNEXT",PO1,PO1$,PO1{ALL},FOUNDPO1; IF FOUNDPO1 THEN IF PO1$(291,6)<>SCHED_DT$ THEN FOUNDPO1=0
10840 WHILE FOUNDPO1
10842 CALL "UPDPO2;READBYKEY",PO2,0,PO1$(297,9),SEG2$,SEG3$,SEG4$,SEG5$,PO2$,PO2{ALL},FOUNDPO2
10845 CALL "UPDPO2;READNEXT",PO2,PO2$,PO2{ALL},FOUNDPO2; IF FOUNDPO2 THEN IF PO2$(82,9)<>PO1$(297,9) THEN FOUNDPO2=0
10850 WHILE FOUNDPO2
10860 IF PO2[0]=0 THEN IF POS(PO2$(82,9)=PO_LIST$,9)=0 THEN PO_LIST$=PO_LIST$+PO2$(82,9)
10870 CALL "UPDPO2;READNEXT",PO2,PO2$,PO2{ALL},FOUNDPO2; IF FOUNDPO2 THEN IF PO2$(82,9)<>PO1$(297,9) THEN FOUNDPO2=0
10875 WEND ! 10860
10880 CALL "UPDPO1;READNEXT",PO1,PO1$,PO1{ALL},FOUNDPO1; IF FOUNDPO1 THEN IF PO1$(291,6)<>SCHED_DT$ THEN FOUNDPO1=0
10885 WEND ! 10840
10890 EXIT 
10898 ! 
10899 ! 
56000 REM "180032-Wireless Warehousing                                        
56002 REM "197885-Modify WMS PO Receiving to not allow receiving a purchase   
56004 REM "197947-WMS Manager Information Console                             
56006 REM "203880-Urgent - Cannot receive a purchase order.  Says cannot      
