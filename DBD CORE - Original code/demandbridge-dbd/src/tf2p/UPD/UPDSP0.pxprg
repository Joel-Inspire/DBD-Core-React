0010 ! UPDSP0 - File SP0 Maintenance
0035 REM "5.7 - 06/03/11 - 12.248333 - jdf - SSP# 242299
0037 REM "242299-Issue with GRID in remote locations - focus is slow to catch
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF POS("SP0"=PTH(FILENO))=0 THEN Z$="01O SP0...  13O ZZPARM  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDSP0;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDSP0;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDSP0;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDSP0;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDSP0;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDSP0;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("SP0"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:! Add new record
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0
1620 GOSUB INIT
1630 INDEX=0,PKEY$=KEL(FILENO,KNO=0,ERR=*NEXT); INDEX=NUM(PKEY$)
1640 NEXTINDEX:
1645 INDEX=INDEX+1; IF INDEX<=999999999 THEN NEWKEY$=STR(INDEX:"000000000") ELSE GOTO 1680
1647 A$(1,9)=NEWKEY$
1650 WRITE (FILENO,KEY=NEWKEY$,DOM=NEXTINDEX)IOL=0310; OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,9)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(1044),A[12]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,9)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,1044),MSG$=""
2550 SWITCH A$(10,3) ! 2800 END SWITCH
2560 CASE "CGP"
2570 BREAK
2580 CASE "IGP"
2590 BREAK
2600 CASE "AFM"
2630 BREAK
2710 BREAK
2800 END SWITCH ! 2550
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 GET_PRICE:
10010 ENTER FILENO,CUSTOMER$,ITEM$,OLDPRICE,COST,PRICE,PRICE_TYPE$,COST_QTY,SELL_QTY
10015 SEG3$="",SEG4$="",SEG5$="",PRIORITY$="",PRICE_TYPE$=""
10020 GOSUB INIT
10090 PRICE=OLDPRICE
10100 TOPS$="N"; CALL "UPDIC0;READBYKEY",0,0,MID(ITEM$,1,10),MID(ITEM$,11,10),SEG3$,SEG4$,SEG5$,IC0$,IC0{ALL},FOUNDIC0; IF FOUNDIC0 THEN IF POS(MID(IC0$,118,1)="USC")<>0 THEN TOPS$="Y" ! SSP 203698  ! SSP219402 jdf ! SSP242299 jdf  
10200 IF COST>0 AND TOPS$="N" THEN {! 10900 }
10210 CALL "UPDSP0;READBYKEY",FILENO,1,"CGP",CUSTOMER$,SEG3$,SEG4$,SEG5$,SP0$,SP0{ALL},FOUNDSP0
10215 IF FOUNDSP0 AND SP0[0]>0 AND COST>0 THEN {! 10247
10220 GOSUB GET_EACH_COST
10222 REM EACHCOST=EACHCOST+EACHCOST*SP0[0]/100
10225 NEWPRICE=EACCOST; IF SP0[0]<100 THEN NEWPRICE=EACHCOST*100/(100-SP0[0]) ELSE IF SP0[0]>=100 THEN NEWPRICE=EACHCOST*100/.99; REM /100 SSP 202020
10230 NEWPRICE=NEWPRICE/XFACTOR
10235 PRICE=NEWPRICE,PRICE_TYPE$="CGP",PRIORITY$=SP0$(43,2)
10247  }
10248 ITEM$=PAD(ITEM$,20)
10250 CALL "UPDSP0;READBYKEY",FILENO,2,"IGP",ITEM$(1,10),ITEM$(11,10),SEG4$,SEG5$,SP0$,SP0{ALL},FOUNDSP0
10260 IF FOUNDSP0 AND COST>0 THEN {IF SP0[0]=0 THEN { PRICE=OLDPRICE,PRICE_TYPE$="IGP" } ELSE {! >= used because item takes priority over customer if = prio code SSP 202020
10261 GOSUB GET_EACH_COST
10262 REM EACHCOST=EACHCOST+EACHCOST*SP0[0]/100
10265 NEWPRICE=EACCOST; IF SP0[0]<100 THEN NEWPRICE=EACHCOST*100/(100-SP0[0]) ELSE IF SP0[0]>=100 THEN NEWPRICE=EACHCOST*100/.99; REM /100 SSP 202020
10270 NEWPRICE=NEWPRICE/XFACTOR
10280 PRICE=NEWPRICE,PRICE_TYPE$="IGP",PRIORITY$=SP0$(43,2)
10290  }
10295  } ! 10260
10900  } ! 10200
10980 GOSUB WRAPUP
10990 EXIT 
10998 ! 
10999 ! 
11000 DETERMINE_FMS:
11002 ! dtermine fms price for item            from sp0
11010 ENTER FILENO,CUST_ITEM$,ITEM$,OLDPRICE,COST,NEWPRICE,FMSPERCENT,SALEPRICE,COST_QTY,SELL_QTY
11015 SEG3$="",SEG4$="",SEG5$=""
11020 GOSUB INIT
11100 NEWPRICE=OLDPRICE
11105 IF FMSPERCENT=0 THEN CALL "UPDFMP;READBYKEY",0,0,"D",CUST_ITEM$,SEG3$,SEG4$,SEG5$,FMP$,FMP{ALL},FOUNDFMP; IF FOUNDFMP THEN IF FMP[1]>0 THEN FMSPERCENT=FMP[1] ! cust default
11110 IF FMSPERCENT>0 THEN NEWPRICE=SALEPRICE*FMSPERCENT/100
11130 IF COST>0 THEN {
11140 CALL "UPDSP0;READBYKEY",FILENO,2,"AFM",CUST_ITEM$,ITEM$,SEG4$,SEG5$,SP0$,SP0{ALL},FOUND
11150 IF FOUND AND COST>0 AND SP0[1]>0 THEN {
11151 GOSUB GET_EACH_COST
11152 NEWPRICE=EACCOST; IF SP0[1]<100 THEN NEWPRICE=EACHCOST*100/(100-SP0[1]) ELSE IF SP0[1]>=100 THEN NEWPRICE=EACHCOST*100/.99; REM /100 SSP 202020
11154 NEWPRICE=NEWPRICE/XFACTOR
11155 FMSPERCENT=0 ! override if using special pricing fms
11170  }
11180  }
14900 GOSUB WRAPUP
14990 EXIT 
14998 ! 
14999 ! 
15000 GET_IGP:
15010 ENTER FILENO,ITEM$,OLDPRICE,COST,PRICE,COST_QTY,SELL_QTY,FOUND
15015 SEG3$="",SEG4$="",SEG5$="",PRIORITY$="",FOUND=0
15020 GOSUB INIT
15090 PRICE=OLDPRICE
15200 IF COST>0 THEN {! 15280 }
15245 ITEM$=PAD(ITEM$,20)
15250 CALL "UPDSP0;READBYKEY",FILENO,2,"IGP",ITEM$(1,10),ITEM$(11,10),SEG4$,SEG5$,SP0$,SP0{ALL},FOUNDSP0
15260 IF FOUNDSP0 AND SP0[0]>0 AND COST>0 THEN {
15262 GOSUB GET_EACH_COST
15265 NEWPRICE=EACCOST; IF SP0[0]<100 THEN NEWPRICE=EACHCOST*100/(100-SP0[0]) ELSE IF SP0[0]>=100 THEN NEWPRICE=EACHCOST*100/.99; REM /100 SSP 202020
15267 NEWPRICE=NEWPRICE/XFACTOR
15272 IF NEWPRICE<>OLDPRICE THEN PRICE=NEWPRICE,FOUND=1
15275  }
15280  } ! 15200
15285 GOSUB WRAPUP
15290 EXIT 
15298 ! 
15299 ! 
16000 GET_EACH_COST:
16005 IF COST_QTY=0 THEN COST_QTY=1
16007 IF SELL_QTY=0 THEN SELL_QTY=1
16010 EACHCOST=COST,XFACTOR=1
16020 IF COST_QTY<>SELL_QTY THEN {
16030 IF SELL_QTY<COST_QTY THEN XFACTOR=100000
16040 F=XFACTOR*SELL_QTY/COST_QTY
16050 EACHCOST=COST*F
16085  }
16090 RETURN 
16098 ! 
16099 ! 
56000 REM "188067-New Pricing changes. Standard GP Percentage for a           
56002 REM "192451-Special Pricing module should include qty per               
56004 REM "192451-Special Pricing module should include qty per               
56006 REM "196858-Program exception during CIG+ import                        
56007 REM "202020-Special Pricing Program not working correctly   
56009 REM "203698-Special Pricing Program changing Tops Pricing   
56011 REM "219402-Stock return in order entry, doesn't allow me to over ride  
56012 REM "242299-Issue with GRID in remote locations - focus is slow to catch
