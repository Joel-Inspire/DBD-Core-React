0010 ! UPDDTF - File DTF Maintenance
0035 REM "5.5 - 10/16/07 - 9.538055 - jvv - SSP# 212088
0037 REM "212088-TOD Purchase Order - Create file layouts                    
0040 REM "Copyright 2007 Demandbridge Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF FILENO=0 THEN Z$="01S DTF...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1 ELSE IF POS("DTF"=PTH(FILENO))=0 THEN Z$="01S DTF...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDDTF;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDDTF;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDDTF;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDDTF;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDDTF;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDDTF;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("DTF"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(1,36)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,36)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0; FOUND=1
1785 DELETE_END:
1787 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(3112),A[13]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,36)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,3112),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
11000 UPDATE_LINE:
11010 ENTER FILENO,TOD_OUTPUT_TYPE$,TOD_TRANS$,TOD_SEQ,FIELD_NAME$,F5$,SPEC_TYPE$,PO_LINE$,PO_ITEM$,PO_DESC$,TOD_OK
11015 IOLIST DTF$
11017 OUTPUT_TYPE$=TOD_OUTPUT_TYPE$
11030 CALL "UPDDTF;CLEAR_FIELDS",DTF$,DTF{ALL}
11040 CALL "UPDDTF;READBYKEY",FILENO,0,OUTPUT_TYPE$,TOD_TRANS$,STR(TOD_SEQ:"000"),SPEC_TYPE$,SEG5$,DTF$,DTF{ALL},FOUNDDTF
11050 DTF$(1,20)=TOD_OUTPUT_TYPE$,DTF$(21,10)=TOD_TRANS$,DTF$(31,3)=PO_LINE$,DTF$(34,3)=SPEC_TYPE$,DTF$(856,40)=PO_DESC$,DTF$(896,10)=PO_ITEM$
11060 READ DATA FROM REC(IOL=11015) TO IOL=IOL(FILENO)
11100 VIA FIELD_NAME$=F5$
13040 CALL "UPDDTF;READBYKEY",FILENO,0,OUTPUT_TYPE$,TOD_TRANS$,STR(TOD_SEQ:"000"),SPEC_TYPE$,SEG5$,DTF$,DTF{ALL},FOUNDDTF
19890 READ DATA FROM REC(IOL(FILENO)) TO IOL=11015
19895 DTF$(1,20)=TOD_OUTPUT_TYPE$,DTF$(21,10)=TOD_TRANS$,DTF$(31,3)=PO_LINE$,DTF$(34,3)=SPEC_TYPE$
19900 CALL "UPDDTF;UPDATE",FILENO,DTF$,DTF{ALL},BUSY
19990 EXIT 
19998 ! 
19999 ! 
21000 UPDATE_HDR_INFO:
21010 ENTER FILENO,DTO,OUTPUT_TYPE$,TOD_TRANS$,MEM_FL
21020 READ (MEM_FL,KEY="",ERR=*NEXT)
21100 READ (MEM_FL,END=21990)MEM_KEY$,TRANS$,TOD_SEQ
21150 CALL "UPDDTO;READBYKEY",DTO,0,OUTPUT_TYPE$,TRANS$,"00000",SEG4$,SEG5$,DTOHDR$,DTOHDR{ALL},FOUNDDTOHDR
21180 CALL "UPDDTF;READBYKEY",FILENO,0,OUTPUT_TYPE$,TRANS$,SEG3$,SEG4$,SEG5$,DTF$,DTF{ALL},FOUNDDTF
21190 CALL "UPDDTF;READNEXT",FILENO,DTF$,DTF{ALL},FOUNDDTF; IF FOUNDDTF THEN IF DTF$(1,30)<>OUTPUT_TYPE$+TRANS$ THEN FOUNDDTF=0
21200 WHILE FOUNDDTF
21210 FOR J=38 TO 652
21220 IF DTOHDR$(J-1,1)<>" " THEN DTF$(J,1)=DTOHDR$(J-1,1)
21240 NEXT J
21242 DTF$(653,35)=DTOHDR$(2032,35)
21244 DTF$(688,35)=DTOHDR$(3743,35)
21246 DTF$(723,35)=DTOHDR$(3778,35)
21250 CALL "UPDDTF;UPDATE",FILENO,DTF$,DTF{ALL},BUSY
21280 CALL "UPDDTF;READNEXT",FILENO,DTF$,DTF{ALL},FOUNDDTF; IF FOUNDDTF THEN IF DTF$(1,30)<>OUTPUT_TYPE$+TRANS$ THEN FOUNDDTF=0
21290 WEND 
21500 GOTO 21100
21990 EXIT 
21998 ! 
21999 ! 
31000 UPDATE_COMP_LINE:
31010 ENTER FILENO,TOD_OUTPUT_TYPE$,TOD_TRANS$,TOD_SEQ,F5,SUB_F5,F5$,SPEC_TYPE$,PO_LINE$,PO_ITEM$,PO_DESC$,TOD_OK
31015 IOLIST DTF$
31017 OUTPUT_TYPE$=TOD_OUTPUT_TYPE$
31018 Y_DATA=1; IF F5$=DIM(LEN(F5$)) THEN Y_DATA=0
31020 IF Y_DATA AND TOD_OK AND F5>0 THEN {! 19980
31030 CALL "UPDDTF;CLEAR_FIELDS",DTF$,DTF{ALL}
31040 CALL "UPDDTF;READBYKEY",FILENO,0,OUTPUT_TYPE$,TOD_TRANS$,STR(TOD_SEQ:"000"),SPEC_TYPE$,SEG5$,DTF$,DTF{ALL},FOUNDDTF
31050 DTF$(1,20)=TOD_OUTPUT_TYPE$,DTF$(21,10)=TOD_TRANS$,DTF$(31,3)=PO_LINE$,DTF$(34,3)=SPEC_TYPE$,DTF$(856,40)=PO_DESC$,DTF$(896,10)=PO_ITEM$
31060 READ DATA FROM REC(IOL=11015) TO IOL=IOL(FILENO)
31090 IF FOUNDDTF THEN UPD=1
31357 IF F5=44 THEN COMPOSITION$=F5$,UPD=1
31360 IF F5=45 THEN CR_COPY$=F5$,UPD=1
31362 IF F5=46 THEN NEGATIVES_ATTACHED$=F5$,UPD=1
31365 IF F5=47 THEN ARTWORK$=F5$,UPD=1
31370 IF F5=48 THEN PLANT_TO_SET_SCREENS$=F5$,UPD=1
31375 IF F5=49 THEN PLANT_TO_MAKE_ADJ$=F5$,UPD=1
31380 IF F5=50 THEN RETURN_ART$=F5$,UPD=1
31385 IF F5=51 THEN RETURN_NEG$=F5$,UPD=1
31390 IF F5=52 THEN RETURN_CR_COPY$=F5$,UPD=1
31395 IF F5=53 THEN DESTROY_OLD_COPY$=F5$,UPD=1
31398 IF F4=54 THEN PROOF_REQUIRED$=F5$,UPD=1
31399 IF F4=55 THEN IMPRINT_REQUIRED$=F5$,UPD=1
31400 IF F5=56 THEN CARBON_DUMMY$=F5$,UPD=1
31405 IF F5=57 THEN SAMPLES$=F5$,UPD=1
31410 IF F5=59 THEN MOD$=F5$,UPD=1
31420 IF F5=60 THEN NUM_OF_POS$=F5$,UPD=1
31425 IF F5=61 THEN NUM_COLOR$=F5$,UPD=1
31430 IF F5=62 THEN ARABIC$=F5$,UPD=1
31435 IF F5=63 THEN PRESS$=F5$,UPD=1
31440 IF F5=64 THEN COLLATE$=F5$,UPD=1
31445 IF F5=65 THEN GUARANTEED_NUM$=F5$,UPD=1
31447 IF F5=66 THEN NUM_LIST$=F5$,UPD=1
31450 IF F5=67 THEN MICR$=F5$,UPD=1
31455 IF F5=68 THEN STATIC$=F5$,UPD=1
31460 IF F5=69 THEN CONSECUTIVE$=F5$,UPD=1
31465 IF F5=70 THEN OTHERS$=F5$,UPD=1
31467 IF F5=71 THEN QTY_PER_CARTON_71$=F5$,UPD=1
31470 IF F5=72 THEN GLUE_LEFT$=F5$,UPD=1
31475 IF F5=73 THEN GLUE_RIGHT$=F5$,UPD=1
31480 IF F5=74 THEN CRIMP_LEFT$=F5$,UPD=1
31485 IF F5=75 THEN CRIMP_RIGHT$=F5$,UPD=1
31490 IF F5=76 THEN OTHERS_1$=F5$,UPD=1
31495 IF F5=77 THEN PLYS$=F5$,UPD=1
31500 IF F5=78 THEN POSITIONS$=F5$,UPD=1
31505 IF F5=79 THEN NUMBER$=F5$,UPD=1
31510 IF F5=80 THEN DIAMETER$=F5$,UPD=1
31515 IF F5=81 THEN CENTER_TO_CENTER$=F5$,UPD=1
31520 IF F5=82 THEN BOOKS$=F5$,UPD=1
31530 IF F5=83 THEN PADS$=F5$,UPD=1
31535 IF F5=84 THEN NUM_OF_SETS_PER$=F5$,UPD=1
31540 IF F5=85 THEN WRAP_AROUND$=F5$,UPD=1
31545 IF F5=86 THEN TRIAD$=F5$,UPD=1
31550 IF F5=87 THEN OPEN_END$=F5$,UPD=1
31555 IF F5=88 THEN PARTS_LEFT_IN_BOOK$=F5$,UPD=1
31560 IF F5=89 THEN POLYWRAP$=F5$,UPD=1
31565 IF F5=90 THEN PRINTER$=F5$,UPD=1
31570 IF F5=91 THEN DECOLLATER_TYPE$=F5$,UPD=1
31580 IF F5=92 THEN BURSTER_TYPE$=F5$,UPD=1
31590 IF F5=94 THEN CARBON_WIDTH$=F5$,UPD=1
31595 IF F5=95 THEN CARBON_COLOR$=F5$,UPD=1
31600 IF F5=119 THEN CARBON_TYPE$=F5$,UPD=1
31605 IF F5=101 AND SUB_F5=1 THEN TF_COMMENT_1$=F5$,UPD=1
31607 IF F5=101 AND SUB_F5=2 THEN TF_COMMENT_2$=F5$,UPD=1
31609 IF F5=101 AND SUB_F5=3 THEN TF_COMMENT_3$=F5$,UPD=1
31610 IF F5=101 AND SUB_F5=4 THEN TF_COMMENT_4$=F5$,UPD=1
31612 IF F5=101 AND SUB_F5=5 THEN TF_COMMENT_5$=F5$,UPD=1
31614 IF F5=101 AND SUB_F5=6 THEN TF_COMMENT_6$=F5$,UPD=1
31616 IF F5=101 AND SUB_F5=7 THEN TF_COMMENT_7$=F5$,UPD=1
31618 IF F5=101 AND SUB_F5=8 THEN TF_COMMENT_8$=F5$,UPD=1
31619 IF F5=101 AND SUB_F5=9 THEN TF_COMMENT_9$=F5$,UPD=1
31650 IF F5=120 THEN SUBPACK_UM$=F5$,UPD=1
31655 IF F5=121 THEN SUBPACK_QTY_PER$=F5$,UPD=1
39890 READ DATA FROM REC(IOL(FILENO)) TO IOL=11015
39895 DTF$(1,20)=TOD_OUTPUT_TYPE$,DTF$(21,10)=TOD_TRANS$,DTF$(31,3)=PO_LINE$,DTF$(34,3)=SPEC_TYPE$
39900 IF UPD THEN CALL "UPDDTF;UPDATE",FILENO,DTF$,DTF{ALL},BUSY
39980  } ! 31020
39990 EXIT 
39998 ! 
39999 ! 
56000 REM "198612-TopForm Output director
56002 REM "212091-TOD Purchase Order - Output Director control maintenance
