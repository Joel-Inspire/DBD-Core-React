0010 ! UPDSMD - File SMD Maintenance
0035 REM "5.7 - 09/13/18 - 16.140277 - dmm - SSP# 301912
0037 REM "301912-Customer Shipment Confirmation Email                        
0040 REM "Copyright 2018 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5]
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF POS("SMD"=PTH(FILENO))=0 THEN Z$="01O SMD...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDSMD;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDSMD;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDSMD;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDSMD;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDSMD;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDSMD;CLEAR_FIELDS",A$,A{ALL}
1550 IF POS("SMD"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:! Add new record
1610 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},OK
1615 OK=0
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,21)+A$(96,8)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(448),A[5]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,21)+A$(96,8)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,448),MSG$=""
2530 IF A$(134,1)<>"Y" THEN A$(134,1)=" " ! blank or Y
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 CREATE_FROM_INVOICE:
10010 ENTER SMD,X3$,X4$,ORD$,INV$,FY$,ACCT_PD$,SM0$
10020 IF X3$(174,4)=DIM(4) THEN BATCH$=%C$ ELSE BATCH$=X3$(174,4)
10030 FILENO=SMD; GOSUB INIT
10035 Z$="02O ARB...  03O ART...  04O FS1...  05O PO3...  06O IC0...   070 FM1...  08O FMP...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1,ARB=Z[2],ART=Z[3],FS1=Z[4],PO3=Z[5],IC0=Z[6],FM1=Z[7],FMP=Z[8]
10080 CALL "UPDARB;READBYKEY",ARB,0,FY$,ACCT_PD$,INV$,SEG4$,SEG5$,ARB$,ARB{ALL},FOUNDARB
10090 IF FOUNDARB THEN {! 10390 }
10100 CALL "UPDFS1;READBYKEY",FS1,0,ARB$(92,8),SEG2$,SEG3$,SEG4$,SEG5$,FS1$,FS1{ALL},FOUNDFS1
10110 INDEX=ARB[20],FOUNDART=0; IF INDEX>0 THEN CALL "UPDART;READBYINDEX",ART,INDEX,NEXTINDEX,ART$,ART{ALL},FOUNDART
10120 WHILE FOUNDART ! 10380 wend
10122 CALL "UPDIC0;READBYKEY",IC0,0,ART$(55,10),ART$(65,10),SEG3$,SEG4$,SEG5$,IC0$,IC0{ALL},FOUNDIC0; CALL "UPDFM1;READBYKEY",FM1,0,ART$(55,10),ART$(65,10),SEG3$,SEG4$,SEG5$,FM1$,FM1{ALL},FOUNDFM1
10125 IF FOUNDIC0 OR FOUNDFM1 THEN {! 10370
10130 CALL "UPDSMD;CLEAR_FIELDS",SMD$,SMD{ALL}
10140 SMD$(1,6)=ARB$(86,6),SMD$(7,8)=ARB$(7,8),SMD$(19,3)=ART$(47,3)
10150 SMD$(22,10)=ARB$(15,10),SMD$(32,20)=ART$(55,20),SMD$(52,40)=ART$(7,40)
10155 SMD$(165,6)=X3$(21,6)
10160 SMD$(92,4)=ART$(50,4),SMD$(96,8)=ARB$(92,8),SMD$(104,6)=SM0$(15,6)
10170 SMD$(110,4)=SM0$(21,4),SMD$(150,6)=SM0$(31,6)
10180 SMD$(171,60)=SM0$(383,60) ! SSP 257952, SSP275380, was 168,60 change to 171,60
10182 SHIP_VIA$=STP(SMD$(150,15),2); IF LEN(SHIP_VIA$)=1 THEN CALL "UPDFMP;READBYKEY",FMP,0,"S",SHIP_VIA$,SEG3$,SEG4$,SEG5$,FMP$,FMP{ALL},FOUNDFMP; IF FOUNDFMP THEN SMD$(150,15)=FMP$(3,15)
10190 SMD$(134,1)=" "
10200 IF FOUNDFS1 THEN SMD$(135,15)=FS1$(250,15)
10210 SMD[0]=ART[1],SMD[1]=ART[6],SMD[2]=ART[2],SMD[3]=ART[3]
10215 IF SMD[1]=0 THEN SMD[1]=1
10220 SMD[4]=ART[5],SMD[5]=ART[4]
10235 CALL "UPDPO3;READBYKEY",PO3,0,ARB$(92,8),DIM(1),ART$(47,3),ART$(135,1),SEG5$,PO3$,PO3{ALL},FOUNDPO3; IF FOUNDPO3 THEN SMD$(15,4)=PO3$(12,4) ELSE CALL "UPDPO3;READBYKEY",PO3,0,ARB$(92,8),DIM(1),DIM(3),DIM(1),SEG5$,PO3$,PO3{ALL},FOUNDPO3_2; IF FOUNDPO3_2 THEN SMD$(15,4)=PO3$(12,4) ! SSP301912
10342 CALL "UPDSMD;VALIDATE",SMD$,SMD{ALL},MSG$
10345 IF MSG$="" AND SMD[0]>0 THEN CALL "UPDSMD;UPDATE",SMD,SMD$,SMD{ALL},BUSY
10370  }
10375 FOUNDART=0; IF NEXTINDEX>0 THEN INDEX=NEXTINDEX; CALL "UPDART;READBYINDEX",ART,INDEX,NEXTINDEX,ART$,ART{ALL},FOUNDART
10380 WEND 
10390  }
10480 END_OF_CREATE:
10485 GOSUB WRAPUP
10490 EXIT 
10498 ! 
10499 ! 
10500 CREATE_FROM_ORDER_LINE:
10505 SEG2$="",SEG3$="",SEG4$="",SEG5$=""
10510 ENTER SMD,X3$,X4$,ORD$,LINE$,SM4$,SM4{ALL}
10530 FILENO=SMD; GOSUB INIT
10535 Z$="02O FS2...  03O FS1...  06O IC0...   070 FM1...  08O FMP...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1,FS2=Z[2],FS1=Z[3],IC0=Z[6],FM1=Z[7],FMP=Z[8]
10580 CALL "UPDFS2;READBYKEY",FS2,0,ORD$,LINE$,SEG3$,SEG4$,SEG5$,FS2$,FS2{ALL},FOUNDFS2
10585 CALL "UPDFS1;READBYKEY",FS1,0,ORD$,SEG2$,SEG3$,SEG4$,SEG5$,FS1$,FS1{ALL},FOUNDFS1
10600 IF FOUNDFS1 AND FOUNDFS2 THEN {! 10900 }
10610 CALL "UPDIC0;READBYKEY",IC0,0,FS2$(161,10),FS2$(19,10),SEG3$,SEG4$,SEG5$,IC0$,IC0{ALL},FOUNDIC0; CALL "UPDFM1;READBYKEY",FM1,0,FS2$(161,10),FS2$(19,10),SEG3$,SEG4$,SEG5$,FM1$,FM1{ALL},FOUNDFM1
10620 IF FOUNDIC0 OR FOUNDFM1 THEN {! 10850
10630 CALL "UPDSMD;CLEAR_FIELDS",SMD$,SMD{ALL}
10635 DT$=SM4$(15,6); IF DT$=DIM(6) THEN DT$=X3$(21,6)
10640 SMD$(1,6)=DT$,SMD$(7,8)=DIM(8),SMD$(19,3)=FS2$(6,3)
10650 SMD$(22,10)=FS1$(6,10),SMD$(32,20)=FS2$(161,10)+FS2$(19,10),SMD$(52,40)=FS2$(50,40)
10655 SMD$(165,6)=X3$(21,6)
10660 SMD$(92,4)=FS2$(124,4),SMD$(96,8)=ORD$,SMD$(104,6)=DT$
10670 SMD$(110,4)=SM4$(21,4),SMD$(150,6)=SM4$(31,6)
10680 SMD$(171,60)=SM0$(383,60) ! SSP 257952, SSP275380, was 168,60 change to 171,60
10682 SHIP_VIA$=STP(SMD$(150,15),2); IF LEN(SHIP_VIA$)=1 THEN CALL "UPDFMP;READBYKEY",FMP,0,"S",SHIP_VIA$,SEG3$,SEG4$,SEG5$,FMP$,FMP{ALL},FOUNDFMP; IF FOUNDFMP THEN SMD$(150,15)=FMP$(3,15)
10690 SMD$(134,1)=" "
10700 IF FOUNDFS1 THEN SMD$(135,15)=FS1$(250,15)
10710 SMD[0]=FS2[0],SMD[1]=FS2[5],SMD[2]=FS2[4],SMD[3]=FS2[1]
10715 IF SMD[1]=0 THEN SMD[1]=1
10720 SMD[4]=FS2[0]*SMD[1],SMD[5]=FS2[4]*SMD[1]
10800 CALL "UPDSMD;VALIDATE",SMD$,SMD{ALL},MSG$
10845 IF MSG$="" AND SMD[0]>0 THEN CALL "UPDSMD;UPDATE",SMD,SMD$,SMD{ALL},BUSY
10850  } ! 10620
10900  } ! 10600
10950 GOSUB WRAPUP
10990 EXIT 
10998 ! 
10999 ! 
56000 REM "186852-Email Order Shipping Confirmations                          
56002 REM "191846-add call to zzcomp in all upd pgms                          
56004 REM "192290-Shipping confirmation email was not sent to buyer.          
56006 REM "190478-Additional Services - Handle shipements delivered via       
56007 REM "257952-Need larger tracking number field to replace 20 character   
56008 REM "275380-Buyer Shipment Confirmation Email not going out as expected.
56010 REM "301912-Customer Shipment Confirmation Email need loc code in SMD   
