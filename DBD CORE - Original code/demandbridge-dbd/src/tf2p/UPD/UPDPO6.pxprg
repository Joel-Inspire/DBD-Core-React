0010 ! UPDPO6 - File PO6 Maintenance
0035 REM "5.7 - 01/27/15 - 16.3275 - dmm - SSP# 268441
0037 REM "268441-WMS - Picking                                               
0040 REM "Copyright 2015 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF POS("PO6"=PTH(FILENO))=0 THEN Z$="01O PO6...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,FOUND
1015 FOUND=0
1020 GOSUB INIT
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 IF FILENO<>0 THEN READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT); FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,FOUND
1115 FOUND=0
1120 GOSUB INIT
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 IF FILENO<>0 THEN READ (FILENO,END=*NEXT); A$=KEC(FILENO,ERR=*NEXT); FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,FOUND
1215 FOUND=0
1220 GOSUB INIT
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 IF FILENO<>0 THEN PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$); A$=KEC(FILENO,ERR=*NEXT); FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,FOUND
1315 FOUND=0
1320 GOSUB INIT
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 IF FILENO<>0 THEN PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$); A$=KEC(FILENO,ERR=*NEXT); FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDPO6;CLEAR_FIELDS",A$
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 IF FILENO<>0 THEN PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$); A$=KEC(FILENO,ERR=*NEXT); FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,FOUND,BUSY
1515 FOUND=0,BUSY=0
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("PO6"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT); FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,OK
1615 OK=0,PRIMEKEY$=A$
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT); OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,BUSY
1915 BUSY=1,PRIMEKEY$=A$
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2200 WRITELOCK:
2210 ENTER FILENO,A$
2215 PRIMEKEY$=A$
2220 GOSUB INIT
2250 WRITE LOCK (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)
2280 GOSUB WRAPUP
2290 EXIT 
2298 ! 
2299 ! 
2500 VALIDATE:
2510 ENTER A$,MSG$
2520 A$=PAD(A$,500),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 UPD_FOR_WMS:
10010 ENTER FILENO,FM0,AR1,FS2$,CUST$,X3$
10020 WMS=0
10030 GOSUB FIND_IN_RFS; IF RFS_FOUND<>0 THEN GOTO 10490 ! [204911]
10040 IF NOT(%WMS_MGR_IN_OE) THEN {
10050 CALL "UPDFM0;READBYKEY",ERR=10490,FM0,0,"D",DIM(10),FS2$(10,4),SEG4$,SEG5$,FM0$,FM0{ALL},FOUNDFM0; IF FOUNDFM0 THEN IF POS(FM0$(602,1)="YRB")<>0 THEN WMS=1
10060 IF FOUNDFM0 THEN PRIO$="~~"; CALL "UPDAR1;READBYKEY",ERR=10490,AR1,0,CUST$,SEG2$,SEG3$,SEG4$,SEG5$,AR1$,AR1{ALL},FOUNDAR1; IF FOUNDAR1 THEN PRIO$=MID(AR1$,471,2); IF PRIO$=DIM(2) THEN PRIO$="~~" ! no priority = last
10100 IF WMS THEN {! 10400 }
10110 XP=POS("P"=FS2$(156,5)); IF XP>0 AND FM0$(602,1)="Y" THEN FS2$(155+XP,1)=" " ! dont print if wms and fm0$(602,1 )=y
10300 PO6$="R"+PRIO$+FS2$(147,8)+FS2$(6,3)+DIM(9) ! X3$(23,4)+STR(TIM:"00.00") ! date caused too many problems.
10310 CALL "UPDPO6;INSERT",FILENO,PO6$,OK
10400  } ! 10100
10480  } ! 10040
10490 EXIT 
10498 ! 
10499 ! 
10500 DEL_FOR_WMS:
10510 ENTER FILENO,FS2$
10515 IF NOT(%WMS_MGR_IN_OE) THEN {
10520 CALL "UPDPO6;READBYKEY",FILENO,0,"R",SEG2$,SEG3$,SEG4$,SEG5$,PO6$,FOUNDPO6
10530 FOUNDPO6=0; PO6$=KEY(FILENO,END=*NEXT); IF PO6$(1,1)="R" THEN FOUNDPO6=1; READ (FILENO)
10550 WHILE FOUNDPO6
10560 IF PO6$(4,11)=FS2$(147,8)+FS2$(6,3) THEN CALL "UPDPO6;DELETE",FILENO,PO6$,FOUND,BUSY
10570 FOUNDPO6=0; PO6$=KEY(FILENO,END=*NEXT); IF PO6$(1,1)="R" THEN FOUNDPO6=1; READ (FILENO)
10580 WEND 
10585  } ! 10515
10590 EXIT 
10598 ! 
10599 ! 
11000 REPRINT_PACK_FROM_WMS:
11010 ENTER PO6,RFS,FM0,ZZPARM,FS1,TASK_NUM$,PICK_PRIO$
11035 CALL "UPDRFS;READBYKEY",RFS,1,TASK_NUM$,SEG2$,SEG3$,SEG5$,SEG5$,RFS$,RFS{ALL},FOUNDRFS
11040 CALL "UPDRFS;READNEXT",RFS,RFS$,RFS{ALL},FOUNDRFS; IF FOUNDRFS THEN IF RFS$(43,10)<>TASK_NUM$ THEN FOUNDRFS=0
11100 WHILE FOUNDRFS
11110 WMS=0; CALL "UPDFM0;READBYKEY",ERR=10490,FM0,0,"D",DIM(10),RFS$(81,4),SEG4$,SEG5$,FM0$,FM0{ALL},FOUNDFM0; IF FOUNDFM0 THEN IF POS(FM0$(602,1)="YR")<>0 THEN WMS=1 ! SSP268441, was "BR" changed to "YR"
11112 ORD_TYPE=0; FIND (FS1,KEY=RFS$(1,8),DOM=*NEXT)B$; IF POS(MID(B$,47,1)="RW")>0 THEN ORD_TYPE=1
11114 WHSE_PFX$=RFS$(81,1),W9$=""
11115 CALL "UPDPO6;GET_WHSE_PREFIX",ORD_TYPE,WHSE_PFX$,W9$,ZZPARM ! 269475 - Default to ignore logical whse, unless parameter enabled to do so
11120 X$="L"+W9$+RFS$(82,3)+PAD(PICK_PRIO$,2)+RFS$(1,8)+RFS$(9,3) ! 269475 - physical whse in packing list printing...
11150 IF WMS THEN CALL "UPDPO6;INSERT",PO6,X$,OK
11170 CALL "UPDRFS;READNEXT",RFS,RFS$,RFS{ALL},FOUNDRFS; IF FOUNDRFS THEN IF RFS$(43,10)<>TASK_NUM$ THEN FOUNDRFS=0
11180 WEND 
11190 EXIT 
11198 ! 
11199 ! 
11200 GET_WHSE_PREFIX:
11205 ENTER ORD_TYPE,WHSE_PFX$,W9$,ZZPARM
11220 IF ORD_TYPE OR POS(%C$="092499568543537539541542584585601602605449590",3)>0 THEN IF WHSE_PFX$<>"8" OR POS(%C$="470474",3)<>0 THEN W9$="0" END_IF ELSE W9$=WHSE_PFX$; REM "SSP138569, if company 543 then change 1st position of whse to 0 even if it's an O1 type order !SSP#216139!223653!SSP#228035 SSP 232445
11230 IF POS(%C$="020")>0 THEN W9$=WHSE_PFX$
11235 READ (ZZPARM,KEY=%C$+"F/M",ERR=*NEXT)S9$
11240 IF MID(S9$,285,1)="Y" THEN W9$=WHSE_PFX$
11250 IF POS(%C$="499583")<>0 AND WHSE_PFX$="8" THEN W9$="0"; REM "SSP156216
11295 EXIT 
11299 ! 
20000 FIND_IN_RFS:! [204911]-added routine
20001 REM "This routine will check in the RFS file to determine
20002 REM "if the order is in the RFS file. If it is, then the
20003 REM "program will NOT add the PO6 record.
20004 REM "RFS key=order_div,order_num,order_line_num,lot_num,lot_seq
20010 RFS_FOUND=0 ! default to not found
20020 RFS_LFN=HFN ! get available channel
20025 OPEN (RFS_LFN)"RFS"+%C$ ! open the RFS file
20030 RFS_KEY$=FS2$(147,2)+FS2$(149,6)+FS2$(6,3)+"        "+"   " ! build the RFS key (partial key)
20050 CALL "UPDRFS;READBYKEY",RFS_LFN,0,RFS_KEY$,"","","","",RFS_REC$,RFS{ALL},FOUND ! read by key
20060 CALL "UPDRFS;READNEXT",RFS_LFN,RFS_REC$,RFS{ALL},FOUND ! read next required due to partial key
20070 IF FOUND THEN IF RFS_REC$(1,8)=RFS_KEY$(1,8) THEN RFS_FOUND=1 ! if the record is found
20090 CLOSE (RFS_LFN) ! close RFS
20095 RETURN 
56000 REM + Modification History
56001 REM "180032-Wireless Warehousing                                        
56002 REM "197945-WMS picking.  if zero pick or qty<ord                       
56004 REM "200016-Error 47 in Order Update                                    
56006 REM "200523-Create a second print for packing list from WMS             
56008 REM "204911-When updating to file PO6 for wms records in RFS.           
56009 REM "269475-reprinting releases - getting multiple copies of packing    
56010 REM "268441-WMS - Picking                                               
