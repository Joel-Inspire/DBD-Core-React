0010 ! UPDFTO - File FTO Maintenance
0035 REM "5.7 - 02/16/15 - 12.057777 - tma - SSP# 275406
0037 REM "275406-Issue with receiving the same PO in two different batches   
0040 REM "Copyright 2015 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF POS("FTO"=PTH(FILENO))=0 THEN Z$="01O FTO...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDFTO;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 IF FILENO<>0 THEN READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDFTO;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 IF FILENO<>0 THEN READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDFTO;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 IF FILENO<>0 THEN PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDFTO;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 IF FILENO<>0 THEN PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDFTO;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 IF FILENO<>0 THEN PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDFTO;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("FTO"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(1,9)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,9)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1775 DELETE_END:
1780 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(60),A[2]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,9)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,60),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 CHANGE_WMS_BATCH:
10010 ENTER RF1,FTO,X3$,REC_BIN$
10015 LAST_PO$=""
10020 CALL "UPDRF1;READBYKEY",RF1,3,REC_BIN$,SEG2$,SEG3$,SEG4$,SEG5$,RF1$,RF1{ALL},FOUNDRF1
10030 CALL "UPDRF1;READNEXT",RF1,RF1$,RF1{ALL},FOUNDRF1; IF RF1$(156,10)<>REC_BIN$ THEN FOUNDRF1=0
10040 WHILE FOUNDRF1 ! 10300 wend
10120 IF LAST_PO$<>RF1$(1,9) THEN {! 10240 } 
10130 LAST_PO$=RF1$(1,9)
10140 CALL "UPDFTO;CLEAR_FIELDS",FTO$,FTO{ALL}
10150 FTO$(1,9)=RF1$(1,9),FTO$(10,4)=X3$(174,4)
10155 FTO$(14,3)="WMS"
10160 CALL "UPDFTO;INSERT",FTO,FTO$,FTO{ALL},OK
10240  } ! 10120
10290 CALL "UPDRF1;READNEXT",RF1,RF1$,RF1{ALL},FOUNDRF1; IF RF1$(156,10)<>REC_BIN$ THEN FOUNDRF1=0
10300 WEND ! 10040 while
10490 EXIT 
10498 ! 
10499 ! 
13000 CHECK_PO_LOCK:! SSP 262321
13010 REM "For batch processing, a record is written to FTO file when a PO is being recieved. If another user attempts to receive in another batch they will 
13020 ENTER X3$,X4$,FROM_SRC$,NEW_FTO$,PO_NUM$,FTO$,VAL_BATCH$,DSP_PROMPT$
13030 NEW_FTO$="N",VAL_BATCH$="N",DSP_MSG$=""
13035 DIM FTO$(60)
13040 DIM Z[NUM(X3$(60,3))]
13045 IF STP(PO_NUM$,2)="" THEN EXIT 
13050 Z$="01O FTO... 02O ZY9... 13O ZZPARM  "
13060 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO *NEXT,PO_LOCK_EXIT
13080 SRC$="RWIDM"; SPOS=POS(FROM_SRC$=SRC$)
13085 ! The following FROM_SRC$ variables are applicable : R=Read FTO (From ORDER/PO Entry), W=Write FTO rec (PO Recv), I=Display Informational FTO (PO 
13090 ON SPOS GOTO 13500,13100,13200,13300,13100,13100
13099 ! 
13100 FTO_READ:
13105 READ (Z[1],KEY=PO_NUM$(1,8),DOM=*NEXT)
13110 DIM FTO$(60); READ (Z[1],END=PO_LOCK_EXIT)FTO$; IF FTO$(1,8)<>PO_NUM$(1,8) THEN GOTO PO_LOCK_EXIT
13120 IF FROM_SRC$="M" THEN IF FTO$(10,4)="WMS " THEN VAL_BATCH$="W"; GOSUB BATCH_EXISTS; GOTO PO_LOCK_EXIT ELSE GOTO PO_LOCK_EXIT
13130 GOSUB CHECK_IF_VALID_BATCH
13140 IF FROM_SRC$="R" THEN NEW_FTO$="Y"
13180 GOTO PO_LOCK_EXIT
13199 ! 
13200 FTO_WRITE:
13205 READ (Z[1],KEY=PO_NUM$,DOM=*NEXT)FTO$; IF FTO$(10,4)=X3$(174,4) THEN GOTO PO_LOCK_EXIT ELSE GOSUB CHECK_IF_VALID_BATCH; IF VAL_BATCH$="Y" THEN GOTO PO_LOCK_EXIT
13210 FTO$(1,16)=PO_NUM$+X3$(174,4)+X3$(40,3); WRITE (Z[1],KEY=PO_NUM$,DOM=13200)FTO$; NEW_FTO$="Y"
13220 GOTO PO_LOCK_EXIT
13299 ! 
13300 FTO_DISPLAY:
13302 READ (Z[1],KEY=PO_NUM$(1,8),DOM=*NEXT) ! SSP#275406
13305 NEXT_FTO:
13308 VAL_BATCH$="N"
13310 FTO_KEY$=KEY(Z[1],END=PO_LOCK_EXIT)
13320 READ (Z[1],KEY=FTO_KEY$)FTO$; REM " SSP# 149136
13330 IF FTO$(1,8)<>PO_NUM$(1,8) THEN GOTO PO_LOCK_EXIT; REM " SSP# 149136
13340 IF FTO$(1,9)=PO_NUM$ THEN GOTO NEXT_FTO; REM " SSP# 149136
13350 IF FTO$(10,4)=X3$(174,4) THEN GOTO NEXT_FTO ELSE GOSUB CHECK_IF_VALID_BATCH; GOTO NEXT_FTO; REM " SSP# 149136
13399 ! 
13500 PO_LOCK_EXIT:
13510 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
13520 EXIT 
13599 ! 
13600 CHECK_IF_VALID_BATCH:! REM "Check for valid batch for FTO record, SSP135960
13610 IF FTO$(10,4)="WMS " THEN VAL_BATCH$="Y"; GOTO BATCH_EXISTS
13620 VAL_BATCH$="N"
13630 READ (Z[2],KEY=FTO$(10,4),DOM=*NEXT)
13640 READ (Z[2],END=13650)ZY9$; IF ZY9$(1,4)=FTO$(10,4) AND ZY9$(6,6)="PO2MAG" THEN VAL_BATCH$="Y"; GOTO BATCH_EXISTS ELSE GOTO *SAME
13650 REMOVE (Z[1],KEY=FTO$(1,9),ERR=*NEXT); REM "Invalid FTO record, remove and return which will write out new correct record !SSP#272151
13655 GOTO VALID_BATCH_EXIT
13659 ! 
13660 BATCH_EXISTS:
13662 IF DSP_PROMPT$="Y" THEN {
13665 USRID$=FTO$(14,3); IF FTO$(10,4)="WMS " THEN USRID$=MID(FTO$,17,15)
13670 IF FROM_SRC$="I" THEN GOTO 13690
13680 IF %GUI THEN MSGBOX MSG("FMGODM_30",FTO$(10,4),USRID$),MSG("MB_ATTN"),"!"; GOTO VALID_BATCH_EXIT
13685 CALL "ZZPROM",".4",X3$,0,"Access Denied! This PO is being received in batch "+FTO$(10,4)+" by "+USRID$,"","",0; GOTO VALID_BATCH_EXIT
13690 CALL "ZZPROM",".4",X3$,0,"PO "+FTO$(1,8)+"-"+FTO$(9,1)+" is now being received in batch "+FTO$(10,4)+" by "+USRID$,"","",0; GOTO VALID_BATCH_EXIT ! 149136
13695  }
13800 VALID_BATCH_EXIT:
13810 RETURN 
14000 CANCEL_RECV:
14010 ! Called from RFGWR0 if user cancels batch before any entries in RF1 made
14020 ENTER FILENO,WMS_CART$,WMS_PO$
14030 FTO_CHL=FILENO,FKEY$=WMS_CART$
14035 CHL=UNT; OPEN (CHL)"FTO"+%C$
14040 READ (FTO_CHL,KEY=FKEY$,KNO=1,DOM=*NEXT)
14045 NEXT_FTO_READ:
14050 DIM FTO$(60); READ (FTO_CHL,KNO=1,END=CANCEL_RECV_EXIT)FTO$
14060 IF MID(FTO$,32,10)<>WMS_CART$ THEN GOTO CANCEL_RECV_EXIT
14065 DEL_PO$=FTO$(1,9)
14070 REMOVE (CHL,KEY=DEL_PO$,ERR=*NEXT)
14080 GOTO NEXT_FTO_READ
14090 CANCEL_RECV_EXIT:
14092 CLOSE (CHL,ERR=*NEXT)
14095 EXIT 
14099 ! 
56000 REM "180032-Wireless Warehousing                                        
56002 REM "262321-WMS:  While in WMS PO receiving - able to delete po  - stock
56003 REM "270870-WMS:  If you don't put a qty in for the PO receiving the    
56004 REM "272151-They have order 04-236914.  Whenever they try to go into the
56005 REM "275406-Issue with receiving the same PO in two different batches   
