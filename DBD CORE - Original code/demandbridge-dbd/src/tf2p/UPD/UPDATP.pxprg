0010 REM "Program to read/write/delete ATP file <UPDATP>
0035 REM "5.7 - 10/17/17 - 14.284444 - dmm - SSP# 293765
0037 REM "293765-Modify logic that writes the C type ATP record to match on  
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0100 SETERR 9000; SETESC 9300
0425 IOLIST FS1$,FS1[0],FS1[1],FS1[2],FS1[3],FS1[4],FS1[5],FS1[6],FS1[7],FS1[8],FS1[9],FS1[10],FS1[11],FS1[12],FS1[13]
0430 IOLIST API$,API[0],API[1],API[2],API[3],API[4],API[5],API[6],API[7],API[8],API[9],API[10],API[11],API[12],API[13],API[14],API[15],API[16],API[17],API[18],API[19],API[20],API[21],API[22],API[23],API[24],API[25],API[26],API[27]
0450 IOLIST APD$,APD[0],APD[1],APD[2],APD[3],APD[4],APD[5],APD[6],APD[7],APD[8],APD[9],APD[10],APD[11],APD[12],APD[13],APD[14]; REM SSP 186691
0475 IOLIST ATP$,ATP[0],ATP[1],ATP[2],ATP[3],ATP[4],ATP[5],ATP[6],ATP[7],ATP[8],ATP[9],ATP[10]; REM SSP 186691
0495 IOLIST ATPW$,ATPW[0],ATPW[1],ATPW[2],ATPW[3],ATPW[4],ATPW[5],ATPW[6],ATPW[7],ATPW[8],ATPW[9],ATPW[10]; REM SSP 186691
0505 Z=NUM(X3$(60,3)); DIM Z[Z]
0510 Z$="01O ATP...  02O FS1...  03O APD"+X3$(174,4)
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0599 RETURN 
0600 REM "                                                               
1000 UPDATE_FROM_PO:
1010 ENTER X3$,X4$,A$,E$
1020 Z=NUM(X3$(60,3)); DIM Z[Z]
1025 Z$="01O ATP...  02O FS1...  03O APD...  "
1027 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 1028,END_UPDATE_FROM_PO
1030 DIM FS1[13]; READ (Z(2),KEY=A$(1,8),DOM=END_UPDATE_FROM_PO)IOL=0425
1050 IF A$(10,10)=DIM(10) THEN GOTO END_UPDATE_FROM_PO; REM ONLY UPDATE IF THERE'S AN AP INVO ICE                                                                        
1060 DIM APD[14]; READ (Z[3],KEY=A$(45,4)+A$(49,2)+E$(7,10)+A$(10,10),DOM=END_UPDATE_FROM_PO)IOL=0450
1070 IF APD[7]=0 THEN GOTO 1300; REM "ONLY WRITE RECORD IF THERE'S A TERMS DISC OUNT
1080 DIM RATE[5],AMOUNT[4],RESULT[10],SALES$[20]
1090 AMOUNT[0]=APD[1]; AMOUNT[1]=APD[7]; REM " SSP INVOICE AMOUNT AND AP DISC A MOUNT
1100 FOR I=1 TO 4; RATE[I]=FS1[I]; NEXT I
1110 CALL "AR2XAA",X3$,AMOUNT{ALL},0,1,RESULT{ALL},RATE{ALL},1,5
1120 DIM SALES$(20); SALES$(1,4)=FS1$(93,4); SALES$(5,16)=FS1$(102,16)
1130 FOR I=0 TO 4
1140 IF SALES$(I*4+1,4)=DIM(4) THEN GOTO 1300
1150 DIM ATP$(143),ATP[10]
1160 ATP$(1,10)=APD$(7,10); REM VENDOR
1170 ATP$(45,8)=A$(1,8); REM ORDER
1175 ATP$(21,1)="I"; REM RECORD TYPE 2 for invoice
1180 ATP$(11,10)=A$(10,10); REM INVOICE NUMBER
1190 ATP$(30,4)=SALES$(I*4+1,4); REM "SALESPERSON
1200 ATP$(35,10)=FS1$(6,10); REM "CUSTOMER
1210 ATP$(62,12)=E$(248,12); REM "JOB NUMBER******************CHECK
1220 ATP$(74,6)=APD$(27,6); REM "INVOICE DATE
1230 ATP$(80,6)=APD$(1,6); REM FISCAL YEAR/ACCT PERIOD
1240 ATP[0]=APD[1]; REM "INVOICE AMOUNT
1250 ATP[1]=APD[7]; REM AVAILABLE DISCOUNT
1260 ATP[3]=RATE[I+1]; REM SALESPERSON PORTION
1270 ATP[4]=RESULT[I*2]; REM SALESPERSON PORTION OF INVOICE
1280 ATP[5]=RESULT[I*2+1]; REM SALESPERSON PORTION OF DISCOUNT AVAILABLE
1290 WRITE (Z[1],KEY=ATP$(1,33),DOM=1300)IOL=0475
1295 NEXT I
1300 END_UPDATE_FROM_PO:
1400 GOSUB WRAP_UP
1500 EXIT 
2000 UPDATE_FROM_AP:
2010 ENTER X3$,X4$,APH$,APH{ALL},C0$
2020 Z=NUM(X3$(60,3)); DIM Z[Z]
2025 Z$="01O ATP...  02OSATP...   03O API...  "
2027 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 2028,END_UPDATE_FROM_AP
2045 DIM API$(160),API[27]; READ (Z[3],KEY=APH$(7,10)+APH$(18,10),DOM=2080)IOL=0430 ! WO293765
2050 READ (Z[1],KEY=APH$(7,10)+APH$(18,10),DOM=*NEXT)
2060 K$=KEY(Z[1],END=END_UPDATE_FROM_AP); READ (Z[1])
2070 IF K$(1,20)<>APH$(7,10)+APH$(18,10) THEN GOTO END_UPDATE_FROM_AP
2071 IF K$(21,1)="C" THEN GOTO 2060
2075 IF K$(21,1)="I" AND API[13]=0 THEN SAVE_KEY$=K$; REM "ONLY UPDATE THE INVOICE TYPES
2080 DIM ATP[10]; READ (Z[1],KEY=K$)IOL=0475
2081 IF API$(21,6)<>DIM(6) THEN IF API$(21,6)<>ATP$(74,6) THEN GOTO 2060 ! WO293765
2090 DIM ATPW[10],ATPW$(143)
2092 ATPW$=ATP$
2093 FOR I=0 TO 10; ATPW[I]=ATP[I]; NEXT I
2100 DIM RATE[1],AMOUNT[1],RESULT[3]
2110 RATE[0]=ATP[3],AMOUNT[0]=APH[0],AMOUNT[1]=APH[1]
2220 CALL "AR2XAA",X3$,AMOUNT{ALL},0,1,RESULT{ALL},RATE{ALL},0,0
2222 ATPW[7]=APH[0],ATPW[6]=RESULT[1],ATPW[2]=APH[1]
2223 ATPW$(21,1)="C"; REM PAYMENT RECORD
2224 ATPW$(22,6)=APH$(28,6); REM "CHECK NUMBER
2225 ATPW$(92,6)=APH$(37,6); REM "CHECK DATE
2226 ATPW$(98,6)=C0$(1,6); REM FISCAL YEAR AND ACCOUNTING PERIOD
2227 WRITE_SEQ$=STR(1:"00")
2250 WRITE (Z[2],KEY=ATPW$(1,27)+WRITE_SEQ$+ATPW$(30,4),DOM=2251)IOL=0495; GOTO 2256
2251 IF WRITE_SEQ$="99" THEN ESCAPE ELSE WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"00")
2252 GOTO 2250
2256 REM "IF API[13]=0 THEN REMOVE (Z[2],KEY=SAVE_KEY$,DOM=*NEXT)
2260 GOTO 2060
2300 END_UPDATE_FROM_AP:
2350 HOLD_KEY$=""
2400 GOSUB WRAP_UP
2500 EXIT 
3000 REMOVE_RECORDS:
3010 ENTER X3$,X4$,F_FISCAL_YR$,F_ACC_PER$,T_FISCAL_YR$,T_ACC_PER$
3020 Z=NUM(X3$(60,3)); DIM Z[Z]
3025 Z$="01O ATP...  02O API...  03OSATP...  "
3027 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 3028,END_REMOVE_RECORDS
3050 READ (Z[1],KEY="",DOM=*NEXT)
3100 K$=KEY(Z[1],END=END_REMOVE_RECORDS); READ (Z[1])
3101 IF K$(21,1)="I" THEN GOTO 3100
3110 DIM ATP[10]; READ (Z[1],KEY=K$)IOL=0475
3120 IF ATP$(98,4)<F_FISCAL_YR$ THEN GOTO 3100
3125 IF ATP$(98,4)>T_FISCAL_YR$ THEN GOTO 3100
3130 IF ATP$(102,2)<F_ACC_PER$ THEN GOTO 3100
3135 IF ATP$(102,2)>T_ACC_PER$ THEN GOTO 3100
3140 DIM API[27]; READ (Z[2],KEY=ATP$(1,20),DOM=*NEXT)IOL=0430 ! SSP#293765
3150 IF API[13]<>0 THEN GOTO 3100; REM " ONLY REMOVE IS ZERO BALANCE
3230 REMOVE (Z[3],KEY=K$)
3233 READ (Z[3],KEY=K$(1,20)+"I",DOM=*NEXT)
3234 INV_KEY$=KEY(Z[3],ERR=3250); READ (Z[3],ERR=3250)
3235 IF K$(1,20)<>INV_KEY$(1,20) THEN GOTO 3250
3236 IF INV_KEY$(21,1)<>"I" THEN GOTO 3250
3237 REMOVE (Z[3],KEY=INV_KEY$)
3238 GOTO 3234
3250 GOTO 3100
3300 END_REMOVE_RECORDS:
3400 GOSUB WRAP_UP
3500 EXIT 
9000 REM "ERROR PROCESSING                                
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL                               
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC                                       
9505 GOTO 6500
9510 SETERR 9000; GOSUB 6500
9520 ON C9 GOTO 1140,2040
9750 REM 
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
9770 RETURN 
9900 WRAP_UP:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 RETURN 
9920 SETERR 9940; EXIT 
9930 RETURN 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM "293765-Changes needed to the update of the custom ATP file         
56002 REM "293765-Modify logic that writes the C type ATP record to match on  
