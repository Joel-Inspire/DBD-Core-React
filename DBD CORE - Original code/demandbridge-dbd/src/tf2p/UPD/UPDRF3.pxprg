0010 ! UPDRF3 - File RF3 Maintenance
0035 REM "5.7 - 08/18/11 - 14.89 - crg - SSP# 248193
0037 REM "248193-Order changes not reflecting for Picking in WMS   
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! FILENO - CHANNEL OF OPEN FILE
0051 ! KEYNO  - KEY NUMBER
0052 ! SEG1-SEG5$ : KEY SEGMENTS . CAN BE NULL
0053 ! A$ - RECORD A$
0054 ! FOUND - IF RECORD FOUND, THEN 1 ELSE 0
0055 ! BUSY - IF RECORD BUSY THEN 1 ELSE 0
0056 ! OK - IF RECORD ADDED OK=1 ELSE 0
0310 IOLIST A$
0500 INIT:
0505 DIM Z[255]; OPENED=0
0507 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
0510 IF FILENO=0 THEN Z$="01S RF3...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1 ELSE IF POS("RF3"=PTH(FILENO))=0 THEN Z$="01S RF3...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; FILENO=Z[1],OPENED=1
0590 RETURN 
0598 ! 
0599 ! 
0600 WRAPUP:
0610 IF OPENED THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0690 RETURN 
0698 ! 
0699 ! 
1000 READBYKEY:
1010 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND
1015 FOUND=0
1020 GOSUB INIT
1025 CALL "UPDRF3;CLEAR_FIELDS",A$,A{ALL}
1049 XP=PRM('XI'); SET_PARAM 'XI'
1050 READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1
1051 SET_PARAM 'XI'=XP
1080 GOSUB WRAPUP
1090 EXIT 
1098 ! 
1099 ! 
1100 READNEXT:
1110 ENTER FILENO,A$,A{ALL},FOUND
1115 FOUND=0
1120 GOSUB INIT
1125 CALL "UPDRF3;CLEAR_FIELDS",A$,A{ALL}
1149 XP=PRM('XI'); SET_PARAM 'XI'
1150 READ (FILENO,END=*NEXT)IOL=0310; FOUND=1
1151 SET_PARAM 'XI'=XP
1180 GOSUB WRAPUP
1190 EXIT 
1198 ! 
1199 ! 
1200 READPREV:
1210 ENTER FILENO,A$,A{ALL},FOUND
1215 FOUND=0
1220 GOSUB INIT
1225 CALL "UPDRF3;CLEAR_FIELDS",A$,A{ALL}
1249 XP=PRM('XI'); SET_PARAM 'XI'
1250 PKEY$=KEP(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1251 SET_PARAM 'XI'=XP
1280 GOSUB WRAPUP
1290 EXIT 
1298 ! 
1299 ! 
1300 READFIRST:
1310 ENTER FILENO,A$,A{ALL},FOUND
1315 FOUND=0
1320 GOSUB INIT
1325 CALL "UPDRF3;CLEAR_FIELDS",A$,A{ALL}
1349 XP=PRM('XI'); SET_PARAM 'XI'
1350 PKEY$=KEF(FILENO,KNO=0,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1351 SET_PARAM 'XI'=XP
1380 GOSUB WRAPUP
1390 EXIT 
1398 ! 
1399 ! 
1400 READLAST:
1410 ENTER FILENO,A$,A{ALL},FOUND
1415 FOUND=0
1420 GOSUB INIT
1425 CALL "UPDRF3;CLEAR_FIELDS",A$,A{ALL}
1449 XP=PRM('XI'); SET_PARAM 'XI'
1450 PKEY$=KEL(FILENO,ERR=*NEXT); READ (FILENO,KEY=PKEY$)IOL=0310; FOUND=1
1451 SET_PARAM 'XI'=XP
1480 GOSUB WRAPUP
1490 EXIT 
1498 ! 
1499 ! 
1500 EXTRACTBYKEY:
1510 ENTER FILENO,KEYNO,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,A$,A{ALL},FOUND,BUSY
1515 FOUND=0,BUSY=0
1525 CALL "UPDRF3;CLEAR_FIELDS",A$,A{ALL}
1549 XP=PRM('XI'); SET_PARAM 'XI'
1550 IF POS("RF3"=PTH(FILENO))=0 THEN BUSY=1 ELSE READ (FILENO,KNO=KEYNO,KEY=SEG1$+SEG2$+SEG3$+SEG4$+SEG5$,DOM=*NEXT)IOL=0310; FOUND=1,BUSY=1,PRIMEKEY$=KEC(FILENO,KNO=0); EXTRACT (FILENO,KEY=PRIMEKEY$,KNO=0,ERR=*NEXT); BUSY=0
1551 SET_PARAM 'XI'=XP
1590 EXIT 
1598 ! 
1599 ! 
1600 INSERT:
1610 ENTER FILENO,A$,A{ALL},OK
1615 OK=0,PRIMEKEY$=A$(1,11)
1620 GOSUB INIT
1650 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; OK=1
1680 GOSUB WRAPUP
1690 EXIT 
1698 ! 
1699 ! 
1700 DELETE:
1710 ENTER FILENO,A$,A{ALL},FOUND,BUSY
1715 FOUND=0,BUSY=1,PRIMEKEY$=A$(1,11)
1720 GOSUB INIT
1750 REMOVE (FILENO,KEY=PRIMEKEY$,DOM=DELETE_END,ERR=*NEXT); BUSY=0
1785 DELETE_END:
1787 GOSUB WRAPUP
1790 EXIT 
1798 ! 
1799 ! 
1800 CLEAR_FIELDS:
1810 ENTER A$,A{ALL}
1820 DIM A$(113),A[13]
1890 EXIT 
1898 ! 
1899 ! 
1900 UPDATE:
1910 ENTER FILENO,A$,A{ALL},BUSY
1915 BUSY=1,PRIMEKEY$=A$(1,11)
1920 GOSUB INIT
1950 WRITE (FILENO,KEY=PRIMEKEY$,ERR=*NEXT)IOL=0310; BUSY=0
1980 GOSUB WRAPUP
1990 EXIT 
1998 ! 
1999 ! 
2000 CLEAR_LOCK:
2010 ENTER FILENO
2020 GOSUB INIT
2050 READ (FILENO,KNO=0,KEY="",ERR=*NEXT)
2080 GOSUB WRAPUP
2090 EXIT 
2098 ! 
2099 ! 
2500 VALIDATE:
2510 ENTER A$,A{ALL},MSG$
2520 A$=PAD(A$,113),MSG$=""
2990 EXIT 
2998 ! 
2999 ! 
9999 END 
10000 UPD_FOR_WMS:
10010 ENTER FILENO,FM0,AR1,FS2$,CUST$,X3$,RFS
10020 WMS=0
10030 ! GOSUB FIND_IN_RFS; IF RFS_FOUND<>0 THEN GOTO 10490 ! [204911], 248193 - Allow RF3 to be updated every time, previously was not doing so if RFS records existed
10040 IF NOT(%WMS_MGR_IN_OE) THEN {
10050 CALL "UPDFM0;READBYKEY",ERR=10490,FM0,0,"D",DIM(10),FS2$(10,4),SEG4$,SEG5$,FM0$,FM0{ALL},FOUNDFM0; IF FOUNDFM0 THEN IF POS(FM0$(602,1)="YRB")<>0 THEN WMS=1
10060 IF FOUNDFM0 THEN PRIO$="~~"; CALL "UPDAR1;READBYKEY",ERR=10490,AR1,0,CUST$,SEG2$,SEG3$,SEG4$,SEG5$,AR1$,AR1{ALL},FOUNDAR1; IF FOUNDAR1 THEN PRIO$=MID(AR1$,471,2); IF PRIO$=DIM(2) THEN PRIO$="~~" ! no priority = last
10100 IF WMS THEN {! 10400 }
10110 XP=POS("P"=FS2$(156,5)); IF XP>0 AND FM0$(602,1)="Y" THEN FS2$(155+XP,1)=" " ! dont print if wms and fm0$(602,1 )=y
10200 CALL "UPDRF3;CLEAR_FIELDS",RF3$,RF3{ALL}
10300 RF3$(1,11)=FS2$(147,8)+FS2$(6,3),RF3$(12,2)=PAD(PRIO$,2)
10310 CALL "UPDRF3;UPDATE",FILENO,RF3$,RF3{ALL},BUSY
10400  } ! 10100
10480  } ! 10040
10490 EXIT 
10498 ! 
10499 ! 
10500 DEL_FOR_WMS:
10510 ENTER FILENO,FS2$
10515 IF NOT(%WMS_MGR_IN_OE) THEN {
10520 CALL "UPDRF3;READBYKEY",FILENO,0,FS2$(147,8),SEG2$,SEG3$,SEG4$,SEG5$,RF3$,RF3{ALL},FOUNDRF3
10530 CALL "UPDRF3;READNEXT",FILENO,RF3$,RF3{ALL},FOUNDRF3; IF FOUNDRF3 THEN IF RF3$(1,8)<>FS2$(147,8) THEN FOUNDRF3=0
10550 WHILE FOUNDRF3
10560 CALL "UPDRF3;DELETE",FILENO,RF3$,RF3{ALL},FOUND,BUSY
10570 CALL "UPDRF3;READNEXT",FILENO,RF3$,RF3{ALL},FOUNDRF3; IF FOUNDRF3 THEN IF RF3$(1,8)<>FS2$(147,8) THEN FOUNDRF3=0
10580 WEND 
10585  } ! 10515
10590 EXIT 
10598 ! 
10599 ! 
20000 FIND_IN_RFS:! [204911]-added routine
20001 REM "This routine will check in the RFS file to determine
20002 REM "if the order is in the RFS file. If it is, then the
20003 REM "program will NOT add the PO6 record.
20004 REM "RFS key=order_div,order_num,order_line_num,lot_num,lot_seq
20010 RFS_FOUND=0 ! default to not found
20020 RFS_LFN=RFS ! get available channel
20030 RFS_KEY$=FS2$(147,2)+FS2$(149,6)+FS2$(6,3)+"        "+"   " ! build the RFS key (partial key)
20050 CALL "UPDRFS;READBYKEY",RFS_LFN,0,RFS_KEY$,"","","","",RFS_REC$,RFS{ALL},FOUND ! read by key
20060 CALL "UPDRFS;READNEXT",RFS_LFN,RFS_REC$,RFS{ALL},FOUND ! read next required due to partial key
20070 IF FOUND THEN IF RFS_REC$(1,8)=RFS_KEY$(1,8) THEN RFS_FOUND=1 ! if the record is found
20095 RETURN 
56000 REM "206519-15 minutes to access 200 line order                         
56002 REM "248193-Order changes not reflecting for Picking in WMS   
