0010 REM "<IM2G04> Import Read Method - UNITED - FLYER PRICING- UNITAPE.01
0020 SETESC 9300; SETERR 9000
0035 REM "5.1 - 05/21/02 - 10.326111 - dxm - SSP# 148759
0040 REM "Copyright 2002 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0080 REM "COMMAND$ -> O+filename=open file, C=close file, R=read next record,D+code (G=ghost task calling, xx=line for bargraph)=display instructions, ?=who am I description
0081 REM "OPTION$ -> Options, if needed, in this case we will pass in the 10 character vendor code needed for call to PC2PRI to verify price plans
0082 REM "RECORD$ -> data returned to calling program
0083 REM "RETURN_CODE -> 0=ok, -1=end of file, else error code
0084 REM "INTERNAL_USE -> Array of values used by this program from invocation to invocation, must be preserved by calling program
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,COMMAND$,OPTION$,RECORD$,RETURN_CODE,INTERNAL_USE${ALL}
0100 SETERR 9000
0110 X0$="IM2G04",X1$="Import Read Method - UNITED "
0200 REM "Initialization
0205 RETURN_CODE=0
0210 IF FN%NEA("INTERNAL_USE$",0)=0 THEN DIM INTERNAL_USE$[10]
0211 REM "INTERNAL_USE$[1]=Filename we are using
0400 REM "Command Director
0405 IF COMMAND$="" THEN GOTO 9900
0410 ON POS(COMMAND$(1,1)="OCRD?") GOTO 9900,OPEN_FILE,CLOSE_FILE,READ_RECORD,DISPLAY_PARMS,WHO_AM_I,9900
0600 WHO_AM_I:REM "Return in Record$ a description of this method
0610 RECORD$="Method for reading United Stationers files which contain product info, then one or more pricing plans."
0695 WHO_AM_I_END:GOTO 9900
0700 OPEN_FILE:REM "open filename that is COMM$(2). Check for exists first.
0701 REM "if not found ret_code =12. Store filename in INTERNAL_USE$[1]
0702 REM "Hardcoded to use file channel 32501
0705 INTERNAL_USE$[1]=COMMAND$(2)
0710 CLOSE (32501); OPEN LOCK (32501,OPT="TEXT",ERR=0711)INTERNAL_USE$[1]; GOTO 0715
0711 RETURN_CODE=ERR; GOTO 9900
0715 DIM Z[NUM(X3$(60,3))]
0720 REM Z$="99O OS1... 99O OSL... 13O ZZPARM "
0725 Z$="13O ZZPARM "
0730 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0731,9900
0740 CLOSE (32498); OPEN (32498)"OS1"+X3$(9,3)
0750 CLOSE (32497); OPEN (32497)"OS2"+X3$(9,3)
0760 CLOSE (32550); OPEN (32550)"PC3"+X3$(9,3)
0770 CLOSE (32553); OPEN (32553)"OS5"+X3$(9,3)
0780 CLOSE (32555); OPEN (32555)"OS7"+X3$(9,3)
0795 OPEN_FILE_END:GOTO 9900
0800 READ_RECORD:REM "Read a record, err goes into return code
0802 REM Z$="99O OS1... 13O ZZPARM "
0803 REM CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0804,9900
0805 IF INTERNAL_USE$[3]>"" THEN DIM RECORD$(450); RECORD$(1,225)=INTERNAL_USE$[3]
0810 READ (32501,END=0812)RECORD1$; IF RECORD1$="" OR RECORD1$=$1A$ OR STP(RECORD1$(1,15),3," ")="" THEN %LOAD_DATE$=MID(RECORD1$,41,8)
0811 IF RECORD1$="" OR RECORD1$=$1A$ OR STP(RECORD1$(1,15),3," ")="" THEN GOTO 0810 ELSE GOTO 0820; REM "$1a$ is dos file terminator ^Z.
0812 IF LEN(RECORD1$)<=1 OR STP(RECORD1$(1,225),3," ")="" THEN RETURN_CODE=2; GOTO 0895 ELSE INTERNAL_USE$[2]="END"; GOTO 0895
0814 IF RECORD1$(16,3)="   " THEN GOTO READ_RECORD_END
0820 IF INTERNAL_USE$[2]="" THEN DIM RECORD$(450); INTERNAL_USE$[2]=RECORD1$(1,15),RECORD$(1,225)=RECORD1$; GOTO 0810; REM "First master record
0822 REM "IF POS(RECORD$(73,1)="ID")>0 THEN GOTO 0810
0830 IF RECORD1$(1,15)<>INTERNAL_USE$[2] THEN INTERNAL_USE$[2]=RECORD1$(1,15),INTERNAL_USE$[3]=RECORD1$; IF POS(RECORD$(73,1)="ID")>0 THEN GOTO READ_RECORD_END ELSE IF STP(RECORD$(226,225),3," ")="" THEN GOTO 0805 ELSE GOTO READ_RECORD_END; REM "Done with this item
0840 REM PC5_KEY$=OPTION$+PAD(RECORD1$(16,3),10); CALL "PC2PRI",X3$,X4$,PC5_KEY$,VALID$; IF VALID$="Y" THEN RECORD$(226,225)=RECORD1$; GOTO 0810 ELSE GOTO 0810; REM "REM'ED OUT AND COPY TO 845 FOR CHANGES
0841 VALID$="Y"
0845 REM "PC5_KEY$=OPTION$+PAD(RECORD1$(16,3),10); CALL "PC2PRI",X3$,X4$,PC5_KEY$,VALID$
0846 IF VALID$="Y" AND STP(RECORD$(226,225),3," ")<>"" THEN RECORD$=RECORD$+RECORD1$(1,225),RECCNT=RECCNT+1
0847 IF VALID$="Y" AND STP(RECORD$(226,225),3," ")="" THEN RECORD$(226,225)=RECORD1$(1,225),RECCNT=RECCNT+1
0850 READ (32501,END=0811)RECORD1$
0851 IF RECORD1$="" OR RECORD1$=$1A$ THEN GOTO 0810 ELSE GOTO 0820
0855 REM "GOTO 0820
0860 GOTO 0830
0895 READ_RECORD_END:GOSUB 2000; GOTO 9900; REM "ADDED 2000 FOR NEW UPDATES AND CHANGE RECORD$ TO WRITE OUT THE BEST PRICE PLAN
0900 CLOSE_FILE:REM "Close file, not used at this time
0940 CLOSE_FILE_END:GOTO 9900
0950 DISPLAY_PARMS:REM "Display parms, not used at this time
0990 DISPLAY_PARMS_END:GOTO 9900
1000 REM "BEGIN MAIN PROCESS
1020 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1600 GOTO 1000
2000 REM "NEW UPDATES FOR FILE US1 (ITEM+PRICE PLAN) AND DATA PRICE AND START AND END DATE
2002 REM " WRITE RECORDS OUT TO 'OS1'
2003 REM "IF POS(RECORD$(73,1)="DI")>0 THEN RETURN 
2010 DIM OS1$(250),COLUMN1$(250),COLUMN2$(250),COLUMN3$(250),COLUMN4$(250),OS2$(127)
2011 PRICE$=STR(NUM(RECORD$(139,9))/100:"#######.00")
2012 OS1$(17,1)="L"; REM "FLAG TO SAY PRICE WAS LOADED
2013 GOSUB 6000
2015 PRICE1=0
2016 OS2$(1)=RECORD$(157,7)+"   "+RECORD$(1,3)+RECORD$(4,12)+PRICE$+UOM$+RECORD$(19,12)+X3$(21,6)+"U"
2017 WRITE (32497,KEY=OS2$(1,10))OS2$
2020 FOR X=1 TO LEN(RECORD$)/225-1
2030 REC$=RECORD$(X*225+1,225)
2040 OS1$(1,10)=RECORD$(157,7)+"   ",OS1$(11,6)="U"+REC$(16,3)+DIM(2)
2045 OS1$(237,10)=PRICE$
2050 DATES$=REC$(19,8),DATES$=DATES$(7,2)+DATES$(1,4); REM START DATE YYMMDD
2051 Q$=DATES$; GOSUB 7500; DATES$=Q0$
2055 DATEE$=REC$(27,8),DATEE$=DATEE$(7,2)+DATEE$(1,4); REM END DATE YYMMDD
2056 Q$=DATEE$; GOSUB 7500; DATEE$=Q0$
2060 OS1$(25,6)=DATES$,OS1$(31,6)=DATEE$
2066 REM "IF PRICE1=0 THEN PRICE1=NUM(REC$(128+PRICELEVEL*16,9))
2070 OS1$(47,10)=STR(NUM(REC$(144,9))*.01:"#######.00")
2072 OS1$(57,10)=STR(NUM(REC$(112,9))*.01:"#######.00")
2073 IF NUM(OS1$(47,10))=0 THEN OS1$(47,10)=PRICE$
2074 IF NUM(OS1$(57,10))=0 THEN OS1$(57,10)=STR(NUM(REC$(96,9))*.01:"#######.00")
2075 IF NUM(OS1$(57,10))=0 THEN OS1$(57,10)=STR(NUM(REC$(80,9))*.01:"#######.00")
2076 REM "IF REMOVE$="YES" THEN GOTO 2086
2078 IF NUM(OS1$(57,10))=0 THEN GOTO 2090
2079 GOSUB 6500
2080 IF OS1$(12,5)<>DIM(5) THEN WRITE (32498,KEY=OS1$(1,16))OS1$(1,250)
2081 DIM OS5_NEW$(65); OS5_NEW$=MID(OS7$,11,6)+"**DOWNLOADED FROM UNITED TAPE*CUL"+OS1$(25,12)+"3"+OS7$(11,6)+DIM(3)+"N"+DIM(2)
2082 WRITE (32553,KEY=OS5_NEW$(1,6))OS5_NEW$,0,0,0,0,0,0,0,0,0
2083 REM "IF NUM(COLUMN3$(47,10))<>0 THEN WRITE (32498,KEY=COLUMN3$(1,16))COLUMN3$(1,250)
2084 REM "IF NUM(COLUMN4$(47,10))<>0 THEN WRITE (32498,KEY=COLUMN4$(1,16))COLUMN4$(1,250)
2085 REM PRICE2=NUM(OS1$(15,10)); IF PRICE2<>0 AND PRICE2<PRICE1 THEN PRICE1=PRICE2
2090 NEXT X
2100 REM " CHANGE RECORD$ TO HAVE BEST DEALER COST
2110 IF LEN(RECORD$)<451 THEN GOTO 2190
2130 FOR X=2 TO LEN(RECORD$)/225-1
2140 IF RECORD$(X*225+80,9)<RECORD$(305,9) THEN RECORD$(226,225)=RECORD$(X*225+1,225)
2150 NEXT X
2160 RECORD$=RECORD$(1,450)
2170 REM " ********* DO WE NEED BEST PRICE
2190 GOTO 2990
2800 REM "REMOVE OS0 & OS1 RECORDS FOR DISCONTINUED/INACTIVE ITEMS
2810 READ (32498,KEY=RECORD$(157,7)+"   ",DOM=2811)
2820 OS1KEY$=KEY(32498,END=2980)
2830 IF OS1KEY$(1,7)<>RECORD$(157,7) THEN GOTO 2980
2840 REMOVE (32498,KEY=OS1KEY$,DOM=2841)
2850 GOTO 2820
2980 REM "REMOVE (32499,KEY=RECORD$(157,7)+"   ",DOM=2981)
2981 REM "WRITE (32499,KEY=RECORD$(157,7)+"   ")RECORD$
2982 REM "REMOVE (32497,KEY=RECORD$(157,7)+"   ",DOM=2983)
2985 READ (32501,END=2986)RECORD$; IF LEN(RECORD$)>165 AND POS(RECORD$(73,1)="ID")>0 THEN GOTO 2990
2986 RETURN_CODE=2
2990 RETURN 
3000 REM "READ OS5 AND SEE IF THE PRICE PLAN WAS MANUALLY ENTERED OR CREATED BY AN UPDATE
3005 REMOVE$="YES"
3006 READ (32498,KEY=RECORD$(157,7)+"   ",DOM=3007)
3007 OS1KEY$=KEY(32498,END=3199)
3010 READ (32498,KEY=OS1KEY$)OS1_RECORD$
3020 READ (32553,KEY=OS1_RECORD$(11,4),DOM=3099)OS5$
3030 IF OS5$(36,1)<>"U" THEN REMOVE$="NO"
3035 IF REMOVE$="NO" THEN GOTO 3199
3060 IF OS1KEY$(1,7)<>RECORD$(157,7) THEN GOTO 3199
3070 REM "REMOVE (32498,KEY=OS1KEY$,DOM=3071)
3080 REM "REMOVE (32499,KEY=RECORD$(157,7)+"   ",DOM=3081)
3090 REM "REMOVE (32497,KEY=RECORD$(157,7)+"   ",DOM=3091)
3199 RETURN 
5000 REM "EOJ
5010 C=T; GOSUB 8150
5020 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5040 GOTO 9900
6000 REM " GET THE FOUR CHARACTER UNIT OF MEASURE FROM PL3
6010 DIM PC3$(64); READ (32550,KEY=OPTION$+RECORD$(178,2)+DIM(8),DOM=6011)PC3$
6020 DIM UOM$(4); UOM$=PC3$(56,4)
6030 RETURN 
6500 REM " SET THE PRICE BREAKS AND PRICE BREAK PRICES-COSTS TO SUPPLIER
6501 QTY_1$="",QTY_2$="",QTY_3$="",PRICE_1$="",PRICE_2$="",PRICE_3$=""
6505 IF OS1$(12,5)=DIM(5) THEN GOTO 6999
6510 IF NUM(REC$(73,9))<>0 THEN QTY_1$=STR(NUM(REC$(73,9))*.01:"#######.##")
6520 IF NUM(REC$(80,9))<>0 THEN PRICE_1$=STR(NUM(REC$(80,9))*.01:"#######.##")
6530 IF NUM(REC$(89,9))<>0 THEN QTY_2$=STR(NUM(REC$(89,9))*.01:"#######.##") ELSE IF NUM(REC$(89,9))=0 THEN QTY_2$=QTY_1$
6540 IF NUM(REC$(96,9))<>0 THEN PRICE_2$=STR(NUM(REC$(96,9))*.01:"#######.##") ELSE IF NUM(REC$(96,9))=0 THEN PRICE_2$=PRICE_1$
6550 IF NUM(REC$(105,9))<>0 THEN QTY_3$=STR(NUM(REC$(105,9))*.01:"#######.##") ELSE IF NUM(REC$(105,9))=0 THEN QTY_3$=QTY_2$
6560 IF NUM(REC$(112,9))<>0 THEN PRICE_3$=STR(NUM(REC$(112,9))*.01:"#######.##") ELSE IF NUM(REC$(112,9))=0 THEN PRICE_3$=PRICE_2$
6570 DIM OS7$(125); OS7$(1,10)=OS1$(1,10); OS7$(11,6)=OS1$(11,6); OS7$(17,10)=QTY_1$; OS7$(27,10)=PRICE_1$; OS7$(37,10)=QTY_2$; OS7$(47,10)=PRICE_2$; OS7$(57,10)=QTY_3$; OS7$(67,10)=PRICE_3$
6580 WRITE (32555,KEY=OS7$(1,16))OS7$
6999 RETURN 
7500 REM "Convert date Q$ into Q0$                                              
7501 REM "Q$ in YYYYMMDD format or YYMMDD                                       
7505 Q0$=""
7506 Q$=STP(Q$,1)
7507 IF Q$="" THEN GOTO 7549
7510 IF LEN(Q$)=8 THEN GOTO 7520 ELSE IF LEN(Q$)=6 THEN D1$=STR(NUM(Q$(1,2)):"0 0") ELSE GOTO 7549
7515 IF D1$<"50" THEN Q$="20"+Q$ ELSE Q$="19"+Q$
7520 Q0$=CHR(NUM(Q$(1,3),ERR=7521)-125)+Q$(4,1)+Q$(5,2)+Q$(7,2)
7549 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8107 T=0
8113 CALL "ZZ2FNC;SERIALRECCNT",Z[1],T
8115 PRINT @(0,7),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
