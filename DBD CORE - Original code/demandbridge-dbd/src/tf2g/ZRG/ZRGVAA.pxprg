0010 ! ZRGVAA - Repository Object Maintenance
0035 REM "5.5 - 08/30/07 - 15.368055 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ZRGVAA","../ZRG/ZR.EN"
0060 EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 INIT:
0105 AA=LB_REPO.CTL,ORIG_COL=AA'COL,ORIG_LINE=AA'LINE,ORIG_WIDTH=AA'WIDTH,ORIG_HEIGHT=AA'HEIGHT,ORIG_X$=OBJ(0)
0106 ! PERFORM "ICGMAZ;SETUP_LIBRARY"; IF %FLMAIN_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0110 X0$="ZR2VAA",X1$="Repository Viewer",K9$="",K9=0
0120 S2=40; DIM S9$(S2),S2$(S2)
0130 K0=52,K1=3
0135 C9=-1,CT=0
0140 M0$="#,##0-"
0145 O1=26; REM "Number of chars to shift screen when going right & left
0147 W3=132; REM "Width of screen - may be switched to 131 if toggling 132 col mode
0148 W4=W3; REM "W4 is left at original width for defaulting back to normal
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)),JJ$(80," "); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$(1),A[0],A[1],A[2],A[3],A[4]
0330 IOLIST C$,C[0],C[1]
0360 IOLIST F$
0410 IOLIST L$,L[0]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ZR1...  02O ZR2...  03O ZR0...  060 ZR6...  13O ZZPARM  "
0511 REM "slot 11 reserved for reading lines, don't use it here
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
0680 GOSUB 6000
1000 REM "
1010 Y8=1,Z8=0; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,-1,X1,X2
1030 DIM C$(71),C[1]
1033 O0=0
1034 IF W3<>W4 THEN GOSUB 7600
1035 DIM A$(129),A[4]
1045 A$(1,10)=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1060 GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0,L9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1250,1300,1500
1200 REM "Repository code
1201 RETURN 
1205 SEL_REPOSITORY: REFRESH_FLG=1,X0=1; IDX=0
1210 A$(1,10)=ML_REPOSITORY$ ! CALL "ZZENTR","SUXUX",A{ALL},A$,X4$,X3$,22,3,1,10,C0,"","{1"+X$,K9$,"ZR2VAA00","ZR0","ZR2MAA",""; IF C0=6 THEN GOSUB 6400; C0=1
1212 IF INT(ABS(C0))=3 THEN C0=-ABS(C0); READ (Z[1],KEY=A$(1,10),DOM=NO_REC)
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1220 IF V9<>-2 THEN FIND (Z[3],KEY=A$(1,10),DOM=NO_REC)IOL=0330
1225 ML_DESC$=STP(C$(11,30)),ML_DESC.CTL'VALUE$=STP(C$(11,30))
1227 IF T0$<>"" THEN EXECUTE "CALL"+QUO+"*WINGRP;HIDE"+QUO+","+T0$+".GRP$"
1230 T0$=C$(65,6)
1235 IF T0$<>"" THEN EXECUTE "CALL"+QUO+"*WINGRP;SHOW"+QUO+","+T0$+".GRP$"
1236 ! LIST_BOX LOAD LB_REPO.CTL,""
1240 GOTO 1120
1250 REM "Key value
1255 REM IF LEN(A1$)>10 THEN LET A$(11,40)=A1$(11,40); GOTO 01270
1256 IF QRY THEN A$(1,50)=VAL$
1258 W$=A$(11,40)
1260 ! CALL "../tf2p/USR/"+T0$,ERR=1261,X3$,X4$,Y0$,W$,W{ALL},0,C0,L9
1262 IF ABS(C0)>4 THEN GOSUB 6400; GOTO 1260
1263 IF INT(ABS(C0))=3 THEN GOTO 6800 ELSE IF ABS(C0)=2 THEN A1$=""
1264 A$(11,40)=W$
1265 READ (Z[1],KEY=A$(1,50),DOM=1266)
1290 GOTO 1120
1300 REM "Version
1305 GOSUB 7500
1306 IF V=0 THEN MSGBOX "There are no versions of this document online",MSG("WARNING"),"!,TIM=4"; NEXT_ID=ML_REPOSITORY.CTL,C0=-2; GOTO 1120 ELSE IF V=1 THEN A$(51,2)=V$; ML_REVISION.CTL'VALUE$=A$(51,2); GOTO 1311 ELSE X$="There are "+STR(V)+" versions of this document."
1307 Q$=A$(1,50)
1310 ! CALL "ZZENTR","SZUUX",A{ALL},A$,X4$,X3$,22,5+L0,51,2,C0,"","{2"+X$,Q$,"ZR2VAA04","ZR1","",""; IF C0=6 THEN GOSUB 6400; C0=1
1311 IF ABS(C0)=2 AND LEN(A1$)>10 THEN A1$=A1$(1,10)
1312 READ (Z[1],KEY=A$(1,52),DOM=1313)
1315 IF INT(ABS(C0))=3 THEN GOTO 6800 ELSE IF ABS(C0)=4 THEN GOTO 9900
1340 GOTO 1120
1500 REM "
1505 Z9=-1,Z8=0,C9=0,A2$="",A3$="",A4$="",A5$=""
1510 A1$=A$(1,52)
1520 READ (Z[1],ERR=7200,KEY=A1$,DOM=1000)IOL=0310
1530 GOSUB ASSIGN_LIB
1600 REM "Open files as needed
1610 IF F0$<>"" AND F0$<>A$(96,8) THEN Z$="11C "+F0$ ELSE Z$=""
1615 F0$=A$(96,8),Z$=Z$+"11O "+F0$
1620 GOSUB 9750
1650 REM "Initialize variables
1655 L1=7+L0,L2=9999999999,L3=L2-L1+1,K0=12; REM "Constants for later use, L1=Starting line on screen, L2=last line on screen, K0=LEN of key part of L$, L3=Number of lines in screen buffer
1665 P0=0,P1=0,I0=0,N1=0; REM "P0 is current page of doc being printed, P1 is current line of doc being printed, I0 is currint index into S0$,N1=0 If no records were printed
1670 DIM S0$[22]; S1$=""; REM DIM S0$(L3*C(0)),S1$(L3*K0); REM "S0$ holds the data to be displayed on the screen, it is filled then shown. S1$ is the corresponding key for each line.
1700 REM "Fill the screen buffer S0$ then display
1701 BB$="",PG=1; LIST_BOX LOAD LB_PAGES.CTL,"",ERR=*NEXT; LIST_BOX LOAD LB_PAGES.CTL,PG,"All"
1702 DROP_BOX LOAD DB_PAGES.CTL,""; DROP_BOX LOAD DB_PAGES.CTL,1,"All"
1704 DIM L$(145),L[1],PAG$[403,80]
1705 READ (Z[11],KEY=A$(104,5),DOM=1706)
1710 READ (Z[11],END=1750)IOL=0410
1715 IF L$(1,5)<>A$(104,5) THEN GOTO 1750 ELSE N1=N1+1
1718 IF BB$<>L$(6,5) THEN PG+=1; LIST_BOX LOAD LB_PAGES.CTL,PG,"Page "+STR(NUM(L$(6,4))),ERR=*NEXT; DROP_BOX LOAD DB_PAGES.CTL,PG,"Page "+STR(NUM(L$(6,4))) ! LL$=L$(1,12)+'_RED'+'WHITE'+L$(13),L$=LL$
1720 XX=NUM(L$(6,4)),XXX=NUM(L$(10,3)),BB$=L$(6,5)
1740 GOSUB 2000
1745 GOTO 1710
1750 REM "End of lines
1751 IF LB_PAGES.CTL'ITEMCOUNT=2 THEN LIST_BOX LOAD LB_PAGES.CTL,1,*,ERR=*NEXT; DROP_BOX LOAD DB_PAGES.CTL,1,*; DROP_BOX WRITE DB_PAGES.CTL,"Page 1",ERR=*NEXT ELSE DROP_BOX WRITE DB_PAGES.CTL,"All"
1752 ! TF_SEARCH$="Page:"; GOSUB 11040
1753 LB_REPO.CTL'FMT$="[Report]L"+STR(C(0)+3)+" "
1755 GOSUB 2100
1760 IF N1=0 THEN MSGBOX "The document is no longer in the repository"+SEP+SEP+VAL$,MSG("WARNING"),"!,TIM=10"; GOTO 1780
1780 PRINT @(0,L1),'CE',
1795 GOTO 1000
2000 REM "Add a line to the screen buffer
2005 DIM T8$(K0),T9$(C[0])
2010 IF S1$>"" THEN IF POS(" "<>S1$(LEN(S1$)-K0+6,4))<>0 AND L$(6,4)<>S1$(LEN(S1$)-K0+6,4) THEN D0=1; GOSUB 2700; REM "If this line's page number is different from the last insert a "PAGE BREAK MARKER"
2015 GOSUB 2750; REM "Compare to last line printed, do we need to add blank lines?
2020 I0=I0+1; S1$=S1$+L$(1,K0),T9$(1)=L$(K0+1); GOSUB 2850
2030 IDX+=1; LIST_BOX LOAD LB_REPO.CTL,IDX,T9$
2040 IF XXX<=80 THEN PAG$[XX,XXX]=T9$
2050 IF I0>=L3 THEN GOSUB 2100
2095 RETURN 
2100 REM "Print the screen buffer
2101 REM "O0 is offset when printing screens >W3 in width
2105 IF I0=0 THEN GOTO 2195
2110 T9=POS(" "<>S1$); IF T9=0 THEN GOTO 2121
2115 P4$=" Page: "+FNN$(STR(NUM(S1$(T9+5,4)):"#,##0"))+" "
2116 IF A[0]<>0 AND A[0]>=NUM(S1$(T9+5,4)) THEN P4$="Pages :"+FNN$(STR(A[0]:"#,##0"))
2118 DIM Z1$(W3,X3$(235,1)); Z1$=MNM('GS')+Z1$+MNM('GE')
2120 ! PRINT @(0,L1-1),'SB',Z1$,'SF',@(W3-1-LEN(P4$),L1-1),P4$,
2125 ! PRINT @(0,L1),'CE',
2130 FOR I1=1 TO I0
2135 ! IF C[0]<W3+1 THEN PRINT @(0,L1+I1-1),S0$[I1-1], ELSE PRINT @(0,L1+I1-1),S0$[I1-1],
2136 EXITTO 2147
2145 NEXT I1
2147 GOTO 2200
2195 RETURN 
2200 REM "End of page
2209 REM "Check against w4, since w3 may be set to 131 and we would still like to be able to toggle back
2210 RETURN ! IF C[0]>=W4+1 THEN CALL "ZZPROM","X1ZR2VAA",X3$,Z,"","","",Z0 ELSE CALL "ZZPROM","X0ZR2VAA",X3$,Z,"","","",Z0
2213 IF Z=-1 THEN GOTO 2500
2215 ON Z GOSUB 2250,2300,2400,2450,2900,2950,3000,2500
2245 RETURN 
2250 REM "Go on thru document normally. Read with last key shown to position file for next records
2255 T9$=""; FOR I3=INT(LEN(S1$)/K0) TO 1 STEP -1; IF POS(" "<>S1$((I3-1)*K0+1,K0))<>0 THEN T9$=S1$((I3-1)*K0+1,K0); EXITTO 2256 ELSE NEXT I3
2260 IF T9$<>"" THEN READ (Z[11],KEY=T9$,DOM=2261)
2270 GOSUB 2600
2295 RETURN 
2300 REM "Previous page
2305 DIM T9$(C[0])
2309 REM "Find first record printed on the page to use as last line on new page
2310 T8$=""; FOR I3=1 TO INT(LEN(S1$)/K0); IF POS(" "<>S1$((I3-1)*K0+1,K0))<>0 THEN T8$=S1$((I3-1)*K0+1,K0),T7$=S0$((I3-1)*C[0]+1,C[0]); EXITTO 2311 ELSE NEXT I3
2311 IF T8$="" THEN S1$="",S0$="",I0=0; READ (Z[11],KEY=A$(104,5),DOM=2250); GOTO 2250; REM "If none found then start at the beginning
2315 S1$=T8$,S0$=T7$,I0=1; READ (Z[11],KEY=T8$,DOM=2316)
2320 K2$=KEP(Z[11],END=2350); READ (Z[11],KEY=K2$)IOL=0410; IF L$(1,5)<>A$(104,5) THEN GOTO 2350 ELSE N1=N1+1
2325 IF S1$>"" THEN IF POS(" "<>S1$(6,4))<>0 AND L$(6,4)<>S1$(6,4) THEN D0=-1; GOSUB 2700; REM "if page number different add page break marker (D0=-1) in backup mode
2330 GOSUB 2800
2340 I0=I0+1,S1$=L$(1,K0)+S1$,T9$(1)=L$(K0+1),S0$=T9$+S0$
2345 IF I0<L3 THEN GOTO 2320
2350 IF I0>=L3 THEN EXITTO 2100 ELSE EXITTO 1710; REM "don't have a full page yet,so fill to the end from here
2395 RETURN 
2400 REM "End
2410 EXITTO 1000
2450 REM "Search
2454 REM "Reset S2$ to original length (S2) set @ 120.We preserve S2$ existing value to keep last search string used.
2455 PRINT @(0,21),'CE',@(0,22),"Enter word(s) to search for:",
2458 S2$=S2$+S9$(1,S2-LEN(S2$))
2460 CALL "ZZENTR","S",A{ALL},S2$,X4$,X3$,29,22,1,S2,C0,"","","","ZR2VAA10","","",""
2465 IF POS(" "<>S2$)=0 THEN EXITTO 2200 ELSE S2$=FNS$(S2$)
2469 REM "Read thru lines for the document if S3$="" then no match, else S3$is key, so position and start displaying
2470 GOSUB 7800
2475 IF S3$="" THEN CALL "ZZPROM",".4",X3$,Z,"No match found.","","",0; EXITTO 2200
2479 REM "Match found, position file (be sure to get the line the match was on!)and set for continuing from there We will set up the found line as the first in the screen buffer
2480 READ (Z[11],KEY=S3$,DOM=2481)
2485 DIM T9$(C[0]); I0=1,S1$=L$(1,K0),T9$(1)=L$(K0+1),S0$=T9$
2495 RETURN 
2500 REM "Goto page
2505 REM "Check to see if the page is beyond the last page of the document
2510 F0=0; READ (Z[11],KEY=A$(104,5)+STR(Z0:"0000"),DOM=2511)
2515 READ (Z[11],END=2516)IOL=0410; IF L$(1,5)=A$(104,5) THEN F0=1; REM "This is not past the last page of the document
2520 IF F0=1 THEN I0=0,S1$=""; DIM S0$[22]; EXTRACT (Z[11],KEY=L$(1,K0),DOM=1710); EXITTO 1710
2524 REM "If still here, then page # was too high, figure out the last page number, give prompt and return back to end of screen logic
2525 READ (Z[11],KEY=A$(104,5)+STR(Z0:"0000"),DOM=2526)
2530 K2$=KEP(Z[11]); T9$="Page "+STR(Z0)+" not found. Page "+STR(NUM(K2$(6,4)))+" is the last page."
2540 CALL "ZZPROM",".4",X3$,Z,T9$,"","",0
2545 EXITTO 2200
2595 RETURN 
2600 REM "Screen buffer clean up logic
2620 REM "Continue on->Remove all the lines shown on screen, but leave last line shown as starting line on new screen, set I0 to number of lines in the buffer
2624 IF I0<L3 THEN T9=I0-1 ELSE T9=L3-1
2625 S0$[I0-1]=S0$[T9],S1$=S1$(T9*K0+1),I0=I0-T9
2645 RETURN 
2700 REM "Add new page marker to buffer
2701 REM "D0 is DIRection to add to screen buffer 1=going forward, -1 = go backwards thru file.
2705 DIM T7$(C[0],"-")
2710 IF D0=-1 THEN P4$=" Page: "+FNN$(STR(NUM(S1$(6,4)):"#,##0"))+" " ELSE P4$=" Page: "+FNN$(STR(NUM(L$(6,4)):"#,##0"))+" "
2711 IF A[0]<>0 AND A[0]>=NUM(S1$(6,4)) THEN P4$="Pages : "+FNN$(STR(A[0]:"#,##0"))
2715 ! T7$(W3-LEN(P4$),LEN(P4$))=P4$
2735 I0=I0+1; IF D0=-1 THEN S1$=T8$+S1$,S0$=T7$+S0$ ELSE S1$=S1$+T8$,S0$=S0$+T7$
2745 RETURN 
2750 REM "Determine if blanks need to be added and add them.
2755 IF S1$="" THEN T9=0 ELSE IF POS(" "<>S1$(LEN(S1$)-2,3))=0 THEN T9=0 ELSE T9=NUM(S1$(LEN(S1$)-2,3))
2760 T8=NUM(L$(10,3))-T9-1; IF T8=0 THEN GOTO 2795
2765 FOR I2=1 TO T8
2770 I0=I0+1,S1$=S1$+T8$,S0$=S0$+T9$
2775 NEXT I2
2795 RETURN 
2800 REM "Determine if blanks need to added and add them when moving thru the file backwards.
2803 DIM T8$(K0),T9$(C[0])
2805 IF S1$="" THEN T9=0 ELSE IF POS(" "<>S1$(10,3))=0 THEN T9=0 ELSE T9=NUM(S1$(10,3))
2810 T8=T9-NUM(L$(10,3))-1; IF T8<=0 THEN GOTO 2845
2815 FOR I2=1 TO T8
2820 I0=I0+1,S1$=T8$+S1$,S0$=T9$+S0$
2825 NEXT I2
2845 RETURN 
2850 REM "Read from ZR6 file to see if we need to print background
2852 C=1,CT=0
2853 IF C$(42,10)="          " THEN GOTO 2895
2855 READ (Z[6],KEY=C$(42,10)+L$(11,2),DOM=2856)
2860 JL$=KEY(Z[6],END=2895)
2865 READ (Z[6],KEY=JL$,DOM=2866)IOL=0360
2870 IF NUM(F$(11,2))<>NUM(L$(10,3)) THEN GOTO 2895 ELSE TEMP$=STP(F$(16,30),1)
2875 T9$(NUM(F$(13,3))+CT,LEN(TEMP$))=TEMP$
2877 JT$=T9$(1,NUM(F$(13,3))-1+CT)+ESC+"SB"+T9$(NUM(F$(13,3))+CT,LEN(TEMP$))+ESC+"SF"+T9$(NUM(F$(13,3))+CT+LEN(TEMP$))
2878 T9$=JT$,CT=C*6,C=C+1
2880 GOTO 2860
2895 RETURN 
2900 REM "Shift screen left
2901 REM "IF close to edge go all the way to the edge
2910 O0=O0-O1; IF O0<5 THEN O0=0
2940 EXITTO 2100
2945 RETURN 
2950 REM "Shift screen right
2951 REM "IF close to edge go all the way to the edge
2960 O0=O0+O1; IF O0+W3+5>C[0] THEN O0=C[0]-W3
2990 EXITTO 2100
2995 RETURN 
3000 REM "Toggle 132 column mode
3005 IF W3=W4 THEN GOTO 3030; REM "iF at default width try to go to wide width
3010 GOSUB 7600
3020 GOTO 3045; REM "redisplay lines
3030 ! PRINT (0,ERR=3040)'T2',; GOSUB 6400; W3=131; GOTO 3045
3031 PRINT (0,ERR=3040)'CS','WINDOW'(0,0,132,25),'CP','CS',; GOSUB 6400; W3=131; GOTO 3045
3040 CALL "ZZPROM",".4",X3$,Z,"Wide mode unavailable on this terminal.","","",0; EXITTO 2200
3045 EXITTO 2100
6000 REM "BACKGROUND
6020 ! CALL "../tf2p/USR/"+T0$,ERR=6021,X3$,X4$,Y0$,A$(11,30),W{ALL},2,0,L0
6030 IF T0$<>"" AND FLAG=0 THEN EXECUTE "CALL"+QUO+"*WINGRP;SHOW"+QUO+","+T0$+".GRP$"; B_T0$=T0$; EXIT 
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 REM IF C9<0 THEN GOTO 06445
6460 ! PRINT @(22,3),A$(1,10),@(34,3),C$(11,30),@(22,5+L0),A$(51,2),
6465 ! cALL "../tf2p/USR/"+T0$,ERR=6466,X3$,X4$,Y0$,W$,W{ALL},1,0,L0
6490 RETURN 
6500 REM "DELETE
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6520 REMOVE (Z[2],KEY=A2$,DOM=6521)
6590 A1$=""; GOTO 1630
6600 REM "ALT KEY DATA READS
6605 FIND (Z[3],KEY=A$(1,10),DOM=6606)IOL=0330
6690 RETURN 
6700 REM "ADD ENTRY
6795 GOTO 1000
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 IF A1$="" THEN GOTO 6800 ELSE IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6831 T0$=C$(65,6),W$=A$(11,40); PRINT @(0,4),'CE',; GOSUB 6000
6835 GOSUB 6450
6840 GOTO 1515
6850 REM "PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6856 CALL "ZZPROM","K0",X3$,S3,"","","",0; ON S3 GOTO 6857,9900
6860 PRINT 'RB',; CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6865 GOTO 1100
6870 GOTO 6895
6890 GOTO 1515
6895 CALL "ZZPROM","K1",X3$,S3,"","","",0; IF S3=1 THEN GOTO 9900 ELSE IF A1$="" THEN GOTO 6860 ELSE PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=6896)
6898 ON S9 GOTO 6810,1100
7200 REM "Forced read 
7210 IF ERR<>0 THEN GOTO 9000
7220 CALL "ZZREAD",Z[1],A1$,A$,A{ALL},S8; ON S8 GOTO 7221,1630
7230 GOSUB 6200
7240 CALL "ZZPROM","E0",X3$,0,"","","",0; GOTO 7290
7250 CALL "ZZPROM","E0A",X3$,0,"","","",0; GOTO 7290
7290 GOTO 1630
7300 REM 
7310 ON FPT(C0)*10 GOTO 7390,7325,7330,7390
7325 IF V8$="" THEN X0=X0+4; GOTO 7390 ELSE X0=NUM(V8$(POS(STR(X0:"00")<=V8$,2),2)); GOTO 7390
7330 IF V8$="" THEN X0=X0-6; GOTO 7335 ELSE X0=POS(STR(X0-1:"00")<=V8$,2)-2; IF X0<0 THEN X0=0; GOTO 7390 ELSE X0=NUM(V8$(X0,2)); GOTO 7390
7335 IF X0<0 THEN X0=0; GOTO 7390
7390 IF X0>0 THEN X0=X0-0
7395 C0=3; RETURN 
7400 REM "EXTRACT
7410 EXTRACT (Z[1],ERR=7200,KEY=A1$,DOM=7440)IOL=0310
7420 C9=1,Z9=1; GOSUB 5800
7440 RETURN 
7450 REM "EXTRACT NEW ENTRY
7460 WRITE (Z[1],KEY=A1$,DOM=7250)IOL=0310; GOTO 7400
7490 RETURN 
7500 REM "Set V to the number of versions that exist, V$ will contain last version number (51,2) found
7505 V=0; READ (Z[1],KEY=A$(1,50),DOM=7506)
7510 K0$=KEY(Z[1],END=7530); READ (Z[1])
7515 IF K0$(1,50)<>A$(1,50) THEN GOTO 7530
7516 REM "IF LEN(K0$)<52 THEN GOTO 7530 ELSE IF K0$(1,50)<>A$(1,50) THEN GOTO 7530
7520 V$=K0$(51,2),V=V+1; GOTO 7510
7545 RETURN 
7600 REM "Return screen to normal mode
7605 PRINT 'CS',
7610 ! PRINT (0,ERR=7611)'T1',
7611 PRINT (0,ERR=*NEXT)'SP',
7615 GOSUB 6400
7620 W3=W4; REM "Set width back to default width
7645 RETURN 
7800 REM "Search for string S2$ in lines. S3$="" no match, or S3$=key of with matching line. search is CASE INSENSITIVE
7801 REM "Search proceeds from end of current screen, unREM 7810 to start each time from the beginning
7805 S3$="",S2$=UCS(S2$); REM "Uppercase S2$
7810 REM READ (Z(11),KEY=A$(104,5),DOM=07811)
7815 READ (Z[11],END=7830)IOL=0410; IF L$(1,5)<>A$(104,5) THEN GOTO 7830
7820 IF POS(S2$=UCS(L$(K0+1)))<>0 THEN S3$=L$(1,K0); GOTO 7830 ELSE GOTO 7815
7845 RETURN 
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(3,2)+"/"+Z9$(5,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNB$(Z9$)=X3$(214-6*NUM(Z9$),1)
8925 DEF FNS$(Z9$)=Z9$(1,POS(S9$=Z9$+S9$)-1)
8930 DEF FNN$(Z9$)=Z9$(POS(" "<>Z9$))
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9901 END_PROG:
9905 Y8=2
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 NO_REC:
10010 MSGBOX "Invalid Repository Code",MSG("WARNING"),"!,TIM=3"
10020 ML_REPOSITORY$="",REFRESH_FLG=1,NEXT_ID=ML_REPOSITORY.CTL
10030 RETURN 
10500 SEL_QRY:
10510 VAL$=""
10520 PROCESS "QRY_ZR1_1","../ZRG/ZR.EN",VAL$; IF VAL$="" THEN EXIT 
10530 ML_REPOSITORY$=VAL$(1,10),ML_REPOSITORY.CTL'VALUE$=ML_REPOSITORY$,QRY=1
10540 GOTO SEL_REPOSITORY
11000 SEARCH:
11005 ATTR$=$1B6D6E1213124D532053616E732053657269662C312C26531B6D6E0702000F$; FIRST=0
11006 PROCESS "ZRGVAA.1","../ZRG/ZR.EN",TF_SEARCH$,OPT$; IF OPT$<>"DONE" THEN RETURN ELSE GOTO 11040
11010 PRINT 'DIALOGUE'(10,15,60,5,"Search",'SN'+'SF'+ATTR$),'CS','BLACK',
11015 _OBJ_W=60,_OBJ_H=6; PERFORM "*winproc;center_wdw"
11018 PRINT 'MOVE'(_OBJ_C,_OBJ_L-10),
11020 PRINT 'TEXT'(55,60,1000,100,"  Search For: "); MULTI_LINE 100,@(11,1,40,1); SET_FOCUS 100; OBTAIN *; MULTI_LINE READ 100,TF_SEARCH$
11030 PRINT 'POP',
11040 IF LB_REPO.CTL'ITEMCOUNT=0 THEN RETURN 
11050 FOR AA=1 TO LB_REPO.CTL'ITEMCOUNT
11060 LIST_BOX FIND LB_REPO.CTL,AA,VAL$
11061 IF POS($1B42311B4637$=VAL$)<>0 THEN VAL$=VAL$(7); LIST_BOX LOAD LB_REPO.CTL,AA,*; LIST_BOX LOAD LB_REPO.CTL,AA,VAL$
11070 IF POS(TF_SEARCH$=VAL$)=0 THEN CONTINUE
11080 LIST_BOX LOAD LB_REPO.CTL,AA,*
11085 SET_FOCUS 0; PRINT 'MESSAGE'('_RED'+'WHITE'+"Search for: "+TF_SEARCH$+", Found line : "+STR(AA),0),
11090 VAL$='_RED'+'WHITE'+VAL$; IF FIRST=0 THEN FIRST=AA
11100 LIST_BOX LOAD LB_REPO.CTL,AA,VAL$
11110 NEXT 
11115 LIST_BOX WRITE LB_REPO.CTL,FIRST
11116 PRINT 'MESSAGE'('F8'+'BLACK'+"",0),
11120 RETURN 
11130 SEARCH_CLEAR:
11140 FOR AA=1 TO LB_REPO.CTL'ITEMCOUNT
11150 LIST_BOX FIND LB_REPO.CTL,AA,VAL$
11160 IF POS($1B$=VAL$)=0 THEN CONTINUE
11200 NEXT 
11205 PRINT 'MESSAGE'('F8'+'BLACK'+"",0),
11210 RETURN 
11220 CLEAR_REC:
11230 LIST_BOX LOAD LB_REPO.CTL,""; LIST_BOX LOAD LB_PAGES.CTL,""
11240 ML_REPOSITORY$="",ML_DESC$="",ML_REVISION$="",P4$="",INVOICE_NO$="",CUSTOMER$="",AUDIT_NO$="",TF_DATE$=""
11250 NEXT_ID=ML_REPOSITORY.CTL
11260 REFRESH_FLG=1
11265 IF T0$<>"" THEN EXECUTE "CALL"+QUO+"*WINGRP;HIDE"+QUO+","+T0$+".GRP$"
11270 RETURN 
12000 ! 12000,10 - Browsing mode
12010 ! - Next
12020 NEXT_REC:
12030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12040 VAL$=KEY(Z(1),END=END_OF_FILE)
12050 READ (Z(1),KEY=VAL$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
12060 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
12070 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
12080 VAL$=KEN(Z(1),KEY=VAL$,END=END_OF_FILE); READ (Z(1),KEY=VAL$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
12090 END_OF_FILE: MSGBOX MSG("END_OF_FIL"),"F.Y.I","!"; EXIT 
12100 ! 2200 - Prior record
12110 PRIOR_REC:
12120 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12130 VAL$=KEP(Z(1),END=START_OF_FILE); READ (Z(1),KEY=VAL$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
12140 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
12150 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
12160 VAL$=KEP(Z(1),KEY=VAL$,END=START_OF_FILE); READ (Z(1),KEY=VAL$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
12170 START_OF_FILE: MSGBOX MSG("START_FILE"),"F.Y.I","!"; EXIT 
12180 ! 2400 - First record
12190 FIRST_REC:
12200 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12210 VAL$=KEF(Z(1),ERR=NO_FIRST)
12220 READ (Z(1),KEY=VAL$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
12230 NO_FIRST: MSGBOX MSG("REC_NO_1ST"),"!"; EXIT 
12240 ! 2600 - Last record
12250 LAST_REC:
12260 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12270 VAL$=KEL(Z(1),ERR=NO_LAST)
12280 READ (Z(1),KEY=VAL$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
12290 NO_LAST: MSGBOX MSG("REC_NO_LST"),"F.Y.I.","!"; EXIT 
13000 BUSY_CHK:! 13000,10
13010 MSGBOX MSG("REC_LOCKED")+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
13020 IF _D$="NO" THEN EXIT 
13030 RETURN 
13100 DISP_REC: C0=0,A$(1,50)=VAL$; GOTO 10530
13500 PROCESS_READ:
13510 LIST_BOX LOAD LB_REPO.CTL,""
13520 RETURN 
13600 CHECK_CHANGES:RETURN 
18000 ASSIGN_LIB:
18010 SWITCH T0$
18015 ! 
18020 CASE "ZRXAR6"
18025 ! 
18030 CUSTOMER$=A$(11,10),CUSTOMER.CTL'VALUE$=FN%ZZDISP$(CUSTOMER$,"A/R")
18040 INVOICE_NO$=A$(21,7),INVOICE_NO.CTL'VALUE$=FN%ZZDISP$(INVOICE_NO$,"AR6")
18050 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,%CUST_DIV$,%CUST_CODE$
18060 CUSTOMER$=%CUST_DIV$+%CUST_CODE$,%CUSTOMER$=CUSTOMER$
18065 CALL "ZZWLKU;AR_CUST_FMT",CUSTOMER$,VAR$
18070 BREAK
18075 ! 
18080 CASE "ZRXZR4"
18085 ! 
18090 TF_DATE$=A$(11,6)
18100 AUDIT_NO$=A$(17,6)
18110 BREAK
18120 DEFAULT 
18130 MSGBOX "Option : "+PGMS$+" no found",MSG("WARNING"),"STOP,TIM=9"
18140 BREAK
18200 END SWITCH 
18210 RETURN 
19000 SEL_PAGES:
19005 IF _EOM$=$00$ THEN RETURN 
19006 PGS=LB_PAGES.CTL'ITEMCOUNT-1; IF PGS=0 THEN PGS=1
19007 IF PGS<0 THEN RETURN 
19010 LIST_BOX LOAD LB_REPO.CTL,""
19015 IF LB_PAGES$="All" THEN GOTO ALL_PAGES
19020 XX=POS(" "=LB_PAGES$),DD=NUM(LB_PAGES$(XX+1)),CN=0
19025 P4.CTL'VALUE$="Page: "+STR(DD)+" of "+STR(PGS)
19030 FOR AA=1 TO 80
19035 IF PAG$[DD,AA]="" THEN GOTO 19045
19040 CN+=1; LIST_BOX LOAD LB_REPO.CTL,CN,PAG$[DD,AA]
19050 NEXT AA
19060 RETURN 
19065 ALL_PAGES:
19066 A$(1,50)=A1$; GOTO SEL_REPOSITORY
19070 FOR AA=1 TO LB_PAGES.CTL'ITEMCOUNT-1
19080 FOR BB=1 TO 80
19090 LIST_BOX LOAD LB_REPO.CTL,AA,PAG$[AA,BB]
19100 NEXT BB
19110 NEXT AA
19120 RETURN 
20000 ZOOM:
20010 AA=LB_REPO.CTL,QR=CUSTOMER.CTL+3000; IF ORIG_COL=AA'COL THEN P4.CTL'LINE=1,BT_7.CTL'WIDTH=24,CUSTOMER.CTL'COL=27,CUSTOMER.CTL'LINE=31,QR'COL=36.5,QR'LINE=31,BB=%CUST_NAME.CTL,BB'COL=40,BB'LINE=31,INVOICE_NO.CTL'COL=27,INVOICE_NO.CTL'LINE=32.5,QR=INVOICE_NO.CTL+3000,QR'COL=36.5,QR'LINE=32.5,CUST_PO.CTL'COL=40,CUST_PO.CTL'LINE=32.5 ELSE CUSTOMER.CTL'COL=16,CUSTOMER.CTL'LINE=2.5,QR'COL=25.5,QR'LINE=2.5,BB=%CUST_NAME.CTL,BB'COL=29,BB'LINE=2.5,INVOICE_NO.CTL'COL=16,INVOICE_NO.CTL'LINE=4,QR=INVOICE_NO.CTL+3000,QR'COL=25.5,QR'LINE=4,CUST_PO.CTL'COL=39,CUST_PO.CTL'LINE=4,P4.CTL'LINE=5.60,BT_7.CTL'WIDTH=32
20015 AA=LB_REPO.CTL,QR=DATE.CTL+3000; IF ORIG_COL=AA'COL THEN DATE.CTL'COL=27,DATE.CTL'LINE=31,QR'COL=36.5,QR'LINE=31,AUDIT_NO.CTL'COL=27,AUDIT_NO.CTL'LINE=32.5 ELSE DATE.CTL'COL=16,DATE.CTL'LINE=2.5,QR'COL=25.5,QR'LINE=2.5,AUDIT_NO.CTL'COL=16,AUDIT_NO.CTL'LINE=4
20020 IF ORIG_COL=AA'COL THEN CALL "*WINGRP;HIDE",PAG.GRP$; CALL "*WINGRP;SHOW",PAG2.GRP$; FLAG=1,AA'COL=2.5,AA'LINE=2.5,AA'WIDTH=760,AA'HEIGHT=420 ELSE CALL "*WINGRP;SHOW",PAG.GRP$; CALL "*WINGRP;HIDE",PAG2.GRP$; FLAG=0,AA'COL=ORIG_COL,AA'WIDTH=ORIG_WIDTH,AA'LINE=ORIG_LINE,AA'HEIGHT=ORIG_HEIGHT
20025 ! GOSUB SEL_NEW_SIZE
20100 RETURN 
21000 REPRINT:
21020 IF ML_REPOSITORY$="AR_INVOICE" THEN %KEY_VALUE$=CUSTOMER$+INVOICE_NO$ ELSE %KEY_VALUE$=TF_DATE$+AUDIT_NO$
21025 %REPO$=ML_REPOSITORY$
21030 CALL "ZRGRAS"
21040 %REPO$="",%KEY_VALUE$=""
21050 RETURN 
22000 SCREEN_RESIZE:
22010 _X$=OBJ(0),_X1=DEC($00$+_X$(33,2)),_X2=DEC($00$+_X$(35,2)); IF _X1=_SV_PNL_W AND _X2=_SV_PNL_H THEN GOTO *NEXT ELSE IF _RESIZE=1 OR (_X1>=_ORIG_OBJ_W AND _X2>=_ORIG_OBJ_H) THEN PERFORM "*winproc.rsz;Resize"; GOTO *NEXT ELSE _X1=MAX(_X1,_ORIG_OBJ_W),_X2=MAX(_X2,_ORIG_OBJ_H+_CST_ADJ); PRINT 'SIZE'(_X1,_X2),
22020 RETURN 
22100 SEL_LINE: YES=0
22105 IF POS(UCS(%ROLE$)="ADMIN")=0 THEN RETURN 
22107 IF POS($1B42311B4637$=LB_REPO$)<>0 THEN LB_REPO$=SUB(LB_REPO$,$1B42311B4637$,""),YES=1
22110 D=LB_REPO.CTL'CURRENTITEM
22120 LIST_BOX LOAD LB_REPO.CTL,D,*
22130 PROCESS "ZRGVAA.3","../ZRG/ZR.EN",LB_REPO$
22135 IF YES THEN LB_REPO$='_RED'+'WHITE'+LB_REPO$
22140 LIST_BOX LOAD LB_REPO.CTL,D,LB_REPO$
22150 RETURN 
23000 SEL_NEW_SIZE: CNT+=1; IF CNT=1 THEN RETURN 
23005 CALL "*WINGRP;HIDE",NN.GRP$
23010 _XX$=OBJ(0),_XX1=DEC($00$+_XX$(33,2)),_XX2=DEC($00$+_XX$(35,2))
23030 FOR AA=1 TO 10
23040 EXECUTE "BT_"+STR(AA)+".CTL'LINE=_XX2-2"
23050 NEXT AA
23060 LB_REPO.CTL'LINES=_XX2-10.5,LB_REPO.CTL'COLS=_XX1-19.3,LB_PAGES.CTL'LINES=_XX2-10.5
23070 PRINT 'FRAME'(@X(1),@Y(0),@X(_XX1-2.5),@Y(7.5),-2,"")
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
