0010 ! ZRGZ00 - Proxy Printing
0035 REM "5.7 - 03/03/14 - 9.731666 - crg - SSP# 268710
0037 REM "268710-Server status reporting framework - new file for servers to 
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0045 ! SSP245712 - Change name from PDF Printing to Proxy Printing
0050 IF TCB(13)=1 THEN BEGIN 
0052 IF NUL(%WDX$) THEN MSGBOX "You must be using Windx to access DB Distributor to maintain the Proxy Print Monitor"; GOTO 0075 ! SSP245712
0055 IF NOT(%GUI) THEN CHUI_MODE=1; %GUI=1; PRINT 'SHOW'(-1)
0060 PROCESS "ZRGZ00","../ZRG/ZR.EN"
0065 IF CHUI_MODE THEN %GUI=0; PRINT 'SHOW'(1); RUN "ZMENU"
0075 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0099 ! **************************************************
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0125 CALL "ZZWMX3"
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0160 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; DIM Z[NUM(X3$(60,3))]
0165 Z$="01O ZRY... 02O ZRZ... 13O ZZPARM "
0170 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0180 DIM ZR_PARM$(1000); FIND (Z[13],KEY=%X3$(9,3)+"PDF",DOM=*NEXT)ZR_PARM$(1)
0185 OPERATOR$=%X3_OP_ID$
0186 LENGTH_OF_TIMEOUT=15,SHOW_ALL_QUES=1
0190 GOSUB SETUP_DOCUMENTS
0191 IF TCB(88)<>0 THEN %WDX$="[wdx]" ELSE %WDX$=""
0195 RETURN 
0299 ! **************************************************
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0399 ! **************************************************
0400 ! ^100 - Retrieve messages from the *msglib.xxx library
0405 SETUP_MESSAGES:
0410 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
0415 _MSG_DIRECTORY$=MSG("DIRECTORY")
0420 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
0425 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
0430 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
0435 _MSG_MANDATORY$=MSG("MANDATORY")
0440 _MSG_NEXT$=MSG("NEXT")
0445 _MSG_NON_NUMER$=MSG("NON_NUMER")
0450 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
0455 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
0460 _MSG_PRECEDING$=MSG("PRECEDING")
0465 _MSG_PREFIX$=MSG("PREFIX")
0470 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
0475 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
0480 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
0485 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
0490 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
0495 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
0500 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
0505 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
0510 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
0515 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
0520 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
0525 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
0530 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
0535 _MSG_START_FILE$=MSG("START_FILE")
0540 _MSG_UPDATE$=MSG("UPDATE")
0545 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
0550 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
0555 _MSG_UPD_SAME$=MSG("UPD_SAME")
0560 _MSG_WARNING$=MSG("WARNING")
0565 RETURN 
0595 RETURN 
0599 ! **************************************************
0600 MAIN_POST_DISPLAY:
0605 RESPCTL=0
0610 GOSUB REFRESH_PDF_MONITOR
0620 GOSUB PRINT_DOCUMENTS
0630 PRINT 'MESSAGE'("WAITING "+STR(LENGTH_OF_TIMEOUT)+" SEC",0)
0633 GOSUB UPDATE_STATUS ! 268710
0635 INPUT (0,LEN=1,TIM=LENGTH_OF_TIMEOUT,ERR=*NEXT)WAITPROMPT$
0640 RESPCTL=CTL
0642 IF RESPCTL=10005 THEN CMD_STR$="END"; GOTO 0695
0645 IF RESPCTL=10002 OR RESPCTL=10003 THEN %NOMAD_TIMEOUT=LENGTH_OF_TIMEOUT; GOSUB POST_ADD_QUE; GOTO 0630
0650 IF RESPCTL=10004 THEN %NOMAD_TIMEOUT=LENGTH_OF_TIMEOUT; GOSUB TOGGLE_PAUSED_DISPLAY; GOTO 0630
0660 IF RESPCTL=10001 THEN %NOMAD_TIMEOUT=LENGTH_OF_TIMEOUT; GOSUB PDF_MONITOR_SELECTION; GOTO 0630
0680 GOTO 0600
0695 RETURN 
0699 ! **************************************************
0900 ! 900 - Wrapup
0910 WRAPUP:
0912 %NOMAD_TIMEOUT=0
0915 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 SET_VARS:! based on DOC_INDEX, set variables to use for count or printing
1010 DIM ZRY$:CPL(%ZRY_IOL$); READ DATA FROM "" TO ZRY$; FIND (Z[1],KEY=%X3_COMP$+ZRZ.OPERATOR$,DOM=*NEXT,REC=ZRY$)
1015 IF POS(ZRZ.PAUSED$=" Y")>1 THEN DOCUMENT_ACTIVE=1 ELSE DOCUMENT_ACTIVE=0
1020 BASE_PRINT_DIR$=STP(ZR_PARM$(7,60),1)
1025 BASE_ARCHIVE_DIR$=STP(ZR_PARM$(67,60),1)
1030 PC_TEMP_DIR$=STP(ZR_PARM$(425,30),1)
1035 READER_LOCATION$=STP(ZR_PARM$(335,90),1)
1040 PRINTER_NAME$=STP(ZRZ.PRINTER$,1)
1045 DRIVER_NAME$=STP(ZRZ.PRINT_DRIVER$,1)
1047 GROUP_CODE_2$=ZRZ.GROUP_CODE$+ZRZ.GROUP_CODE_EXT$ ! SSP245387 jdf
1050 PDF_DIR$=BASE_PRINT_DIR$+%C$+DLM+ZRZ.DOC_CODE$; IF NOT(NUL(GROUP_CODE_2$)) THEN PDF_DIR$+=DLM+STP(GROUP_CODE_2$,1) ! SSP245387 jdf
1055 PRINT_CMD$="< find "+PDF_DIR$+" -name "+QUO+"*.pdf"+QUO+" -print | sort 2> /dev/null"
1060 COUNT_CMD$="< find "+PDF_DIR$+" -name "+QUO+"*.pdf"+QUO+" -print | wc -l 2> /dev/null"
1095 RETURN 
1099 ! **************************************************
1100 PRINT_DOCUMENTS:! Scan the directories of active documents & print them
1105 READ (Z[2],KEY="",DOM=*NEXT,ERR=*NEXT,REC=TMP$)
1110 READ_NEXT_DOC:DIM ZRZ$:CPL(%ZRZ_IOL$); READ DATA FROM "" TO ZRZ$; KEY_2$=KEY(Z[2],END=DOC_DONE); READ (Z[2],END=DOC_DONE,REC=ZRZ$)
1115 AT_LEAST_ONE=0
1117 PRINT 'MESSAGE'("Checking user "+ZRZ$(4,3),0)
1120 GOSUB SET_VARS
1125 IF NOT(DOCUMENT_ACTIVE) THEN GOTO NEXT_DOCUMENT
1130 CMD_CHAN=HFN; OPEN (CMD_CHAN,ERR=NEXT_DOCUMENT)PRINT_CMD$
1140 READ_NEXT:READ (CMD_CHAN,END=NEXT_DOCUMENT,ERR=NEXT_DOCUMENT)A$
1160 GOSUB PRINT_DOCUMENT
1170 AT_LEAST_ONE+=1 ! update zrz printed count
1172 IF ++DPRINT>=5 THEN GOSUB REFRESH_PDF_MONITOR; DPRINT=0 ! Refresh PDF monitor periodically even if we haven't finished all the documents
1174 GOTO READ_NEXT
1175 NEXT_DOCUMENT:CLOSE (CMD_CHAN,ERR=*NEXT)
1176 IF AT_LEAST_ONE THEN GOSUB REFRESH_PDF_MONITOR
1180 GOTO READ_NEXT_DOC
1185 DOC_DONE:GOSUB REFRESH_PDF_MONITOR
1195 RETURN 
1199 ! **************************************************
1200 PRINT_DOCUMENT:! Print document named in A$
1205 DOC_CHAN=HFN; OPEN INPUT (DOC_CHAN,ISZ=8000)A$
1210 M=MSK(A$,"/[^/]*$"); IF M=0 THEN PDF_NAME$=A$ ELSE PDF_NAME$=MID(A$,M+1)
1214 MASK$=SUB(MSG("DOC_CODES"),"|",")("),MASK$=".*("+MID(MASK$,1,LEN(MASK$)-1)
1215 M=MSK(A$,MASK$); IF M<>1 THEN PDF_BASE$="" ELSE PDF_BASE$=MID(A$,1,MSL)
1220 IF FCOUNT<>0 THEN F$=PC_TEMP_DIR$+"TOPFORM"+STR(FCOUNT)+".PDF" ELSE F$=PC_TEMP_DIR$+"TOPFORM.PDF" ! use same temp file each time
1225 B=POS(BASE_PRINT_DIR$=PDF_BASE$); IF B=1 THEN ARCHIVE_PATH$=BASE_ARCHIVE_DIR$+MID(PDF_BASE$,LEN(BASE_PRINT_DIR$)+1)+DLM+PDF_NAME$ ELSE ARCHIVE_PATH$=BASE_ARCHIVE_DIR$+PDF_NAME$ ! use PDF_BASE which has group code removed and create ARCHIVE_PATH$
1230 ! Remove user name from archive path
1235 SERIAL %WDX$+F$,ERR=*PROCEED
1240 TMP_CHAN=HFN; OPEN PURGE (TMP_CHAN,ISZ=1,ERR=*NEXT)%WDX$+F$; GOTO 1248
1245 FCOUNT+=1; GOTO 1210 ! pRINT "Now using ",STR(FCOUNT); GOTO 1210
1250 SERIAL ARCHIVE_PATH$,ERR=*PROCEED; ARCHIVE_CHAN=HFN; OPEN PURGE (ARCHIVE_CHAN,ISZ=1)ARCHIVE_PATH$
1255 READ RECORD (DOC_CHAN,END=*NEXT)J$; WRITE RECORD (ARCHIVE_CHAN,SIZ=LEN(J$))J$; WRITE RECORD (TMP_CHAN,SIZ=LEN(J$))J$; GOTO *SAME
1260 CLOSE (TMP_CHAN); CLOSE (ARCHIVE_CHAN)
1262 PRINT 'MESSAGE'("CALLING ADOBE...",0)
1265 WCMD$=QUO+READER_LOCATION$+QUO+" /h /t "+F$+" "+QUO+PRINTER_NAME$+QUO+" "+QUO+DRIVER_NAME$+QUO
1267 IF FIRST_CALL=0 THEN FIRST_CALL=1; INVOKE HIDE %WDX$+QUO+READER_LOCATION$+QUO
1270 INVOKE WAIT %WDX$+WCMD$
1275 CLOSE (DOC_CHAN); ERASE A$,ERR=*NEXT
1280 RETURN 
1299 ! **************************************************
1500 SET_WAITING:! set number waiting in que for ZRZ data
1515 WAITING=0
1520 GOSUB SET_VARS
1530 CMD_CHAN=HFN; OPEN (CMD_CHAN,ERR=*NEXT)COUNT_CMD$; READ (CMD_CHAN,ERR=*NEXT)CNT$; WAITING=NUM(CNT$,ERR=*NEXT)
1532 PRINT 'MESSAGE'("IN QUEUE: "+STR(WAITING),0)
1555 CLOSE (CMD_CHAN,ERR=*NEXT)
1595 RETURN 
1599 ! **************************************************
9999 END 
20000 REFRESH_PDF_MONITOR:
20103 CURR_GRID_INDEX=GRID_INDEX,GRID_INDEX=0
20105 PDF_MONITOR_IOL:IOLIST ACTIVE,OP_CODE$,DOC_NAME$,WAITING$,GROUP_CODE$,PRINTER$,PRINT_DRIVER$,ZRZ_KEY$,GROUP_CODE_EXT$ ! SSP245387 jdf
20106 READ (Z[2],KEY="",DOM=*NEXT)
20110 READ_NEXT_ZRZ: READ DATA FROM "" TO IOL=PDF_MONITOR_IOL; ACTIVE=0; DIM ZRZ$:CPL(%ZRZ_IOL$); READ DATA FROM "" TO ZRZ$; KEY_2$=KEY(Z[2],END=ZRZ_DONE); READ (Z[2],END=ZRZ_DONE,REC=ZRZ$); IF POS(ZRZ.PAUSED$="Y ")>0 THEN ACTIVE=1
20111 GROUP_CODE_2$=ZRZ.GROUP_CODE$+ZRZ.GROUP_CODE_EXT$ ! SSP245387 jdf
20112 PRINT 'MESSAGE'("Checking "+GROUP_CODE_2$+" "+ZRZ.DOC_CODE$,0) ! SSP245387 jdf
20115 IF SHOW_ALL_QUES OR ACTIVE=1 THEN {
20120 READ (DOC_LIST,KEY=ZRZ.DOC_CODE$,DOM=*NEXT)DOC_NAME$
20122 OP_CODE$=ZRZ.OPERATOR$
20125 DOC_NAME$=DOC_NAME$ ! DOC_NAMES read above
20137 GOSUB SET_WAITING; WAITING$=STR(WAITING:MSG("ZRGZ00_07"))
20140 GROUP_CODE$=STP(GROUP_CODE_2$(1,30),1),GROUP_CODE_EXT$=STP(GROUP_CODE_2$(31,90),1) ! SSP245387 jdf
20145 PRINTER$=STP(ZRZ.PRINTER$)
20150 PRINT_DRIVER$=STP(ZRZ.PRINT_DRIVER$)
20155 ZRZ_KEY$=KEY_2$
20160 PRINT 'MESSAGE'("CURRENT USER"+OP_CODE$,0)
20170 GRID LOAD PDF_MONITOR.CTL,0,++GRID_INDEX,REC(IOL=PDF_MONITOR_IOL)
20174 GRID LOCK PDF_MONITOR.CTL,0,GRID_INDEX,ERR=*PROCEED; GRID UNLOCK PDF_MONITOR.CTL,1,GRID_INDEX,ERR=*PROCEED ! Lock row except for 1st column
20175 PDF_MONITOR.CTL'ROW=GRID_INDEX,PDF_MONITOR.CTL'COLUMN=0; IF ACTIVE THEN PDF_MONITOR.CTL'BACKCOLOR$="White" ELSE PDF_MONITOR.CTL'BACKCOLOR$="Light Gray"
20179  }
20180 GOTO READ_NEXT_ZRZ
20185 ZRZ_DONE:
20190 IF GRID_INDEX<CURR_GRID_INDEX THEN FOR II=CURR_GRID_INDEX TO GRID_INDEX+1 STEP -1; GRID DELETE PDF_MONITOR.CTL,0,II,ERR=*PROCEED; NEXT II
20195 RETURN 
20199 ! **************************************************
20200 SETUP_DOCUMENTS:! Set arrays for documents to print
20210 MAX_DOC_INDEX=POS(MID(MSG("DOC_NAMES"),-1)=MSG("DOC_NAMES"),1,0) ! # of documents in list
20215 DIM TF_NAME$[MAX_DOC_INDEX],CODE$[MAX_DOC_INDEX]
20220 READ DATA FROM MSG("DOC_NAMES"),SEP=MID(MSG("DOC_NAMES"),-1) TO TF_NAME${ALL}
20225 READ DATA FROM MSG("DOC_CODES"),SEP=MID(MSG("DOC_CODES"),-1) TO CODE${ALL}
20229 ! Load into Doc_List memory file
20230 DOC_LIST=HFN; OPEN (DOC_LIST)"*MEMORY*"
20235 FOR DINDEX=0 TO MAX_DOC_INDEX-1
20240 WRITE (DOC_LIST,KEY=CODE$[DINDEX])TF_NAME$[DINDEX]
20250 NEXT DINDEX
20295 RETURN 
20299 ! **************************************************
20300 POST_PDF_MONITOR:! selected a record from the listbox
20310 LIST_INDEX$=""; LIST_BOX READ PDF_MONITOR.CTL,LIST_INDEX$,ERR=*PROCEED
20315 IF LIST_INDEX$="" THEN RETURN ! nothing picked as far as we can tell
20320 ZRZ_KEY$=MID(LIST_INDEX$,POS(SEP=LIST_INDEX$,1,7)+1,8) ! Get first 8 chars of 7th column for key
20345 %NOMAD_TIMEOUT=0
20350 PROCESS "ZRGPMB","",ZRZ_KEY$
20355 %NOMAD_TIMEOUT=LENGTH_OF_TIMEOUT
20380 GOSUB REFRESH_PDF_MONITOR
20395 RETURN 
20399 ! **************************************************
20400 POST_ADD_QUE:! Add Que button pressed
20445 %NOMAD_TIMEOUT=0
20450 PROCESS "ZRGPMB",""
20455 %NOMAD_TIMEOUT=LENGTH_OF_TIMEOUT
20457 SET_FOCUS 0
20460 GOSUB REFRESH_PDF_MONITOR
20495 RETURN 
20499 ! **************************************************
20500 TOGGLE_PAUSED_DISPLAY:! Toggle from showing all ques to only active ques
20520 IF SHOW_ALL_QUES THEN SHOW_ALL_QUES=0,ALL_QUE_BUTTON.CTL'TEXT$=MSG("ZRGZ00_12"),ALL_QUE_BUTTON.CTL'TIP$=MSG("ZRGZ00_13") ELSE SHOW_ALL_QUES=1,ALL_QUE_BUTTON.CTL'TEXT$=MSG("ZRGZ00_14"),ALL_QUE_BUTTON.CTL'TIP$=MSG("ZRGZ00_15")
20525 SET_FOCUS 0
20530 GOSUB REFRESH_PDF_MONITOR
20580 REFRESH_FLG=1
20595 RETURN 
20599 ! *************************************************
20600 PDF_MONITOR_SELECTION:! changed cell in PDF Monitor
20602 REM MSGBOX "CURRENT ROW="+STR(PDF_MONITOR.CTL'CURRENTROW)+" CURRENT COLUMN = "+STR(PDF_MONITOR.CTL'CURRENTCOLUMN)
20605 PDF_MONITOR.CTL'ROW=PDF_MONITOR.CTL'CURRENTROW,PDF_MONITOR.CTL'COLUMN=PDF_MONITOR.CTL'CURRENTCOLUMN
20610 GVALUE$=PDF_MONITOR.CTL'VALUE$,PDF_MONITOR.CTL'COLUMN=8,ZRZ_KEY$=PDF_MONITOR.CTL'VALUE$
20620 READ (Z[2],KEY=ZRZ_KEY$,DOM=PMS_DONE,REC=ZRZ$)
20630 IF POS(ZRZ.PAUSED$="Y P")>0 THEN IF GVALUE$="0" THEN ZRZ.PAUSED$="P" ELSE ZRZ.PAUSED$="Y"; REM P=paused, Y=print
20640 WRITE (Z[2],KEY=ZRZ_KEY$,REC=ZRZ$)
20685 PMS_DONE:
20687 SET_FOCUS 0
20690 GOSUB REFRESH_PDF_MONITOR
20695 RETURN 
20699 ! *********************************************
21000 UPDATE_STATUS:
21020 CALL "UPDSV0;UPDATE_STATUS",ERR=*NEXT,"PROXYPRINT","SYSTEM","","Proxy Printing System Monitor","ZRGZ00",STR(TCB(89))
21045 RETURN 
21049 ! 
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56002 REM "245387-User Specific PDF Printing for Packing slips limits you     
56004 REM "245712-The name "PDF Printing" is not accurate or appropriate for  
56005 REM "268710-Server status reporting framework - new file for servers to 
