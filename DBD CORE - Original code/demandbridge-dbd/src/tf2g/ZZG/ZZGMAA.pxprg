0010 ! ZZGMAA - Electronic Message System
0035 REM "5.5 - 09/05/07 - 16.612777 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ZZM"
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0181 _ZZP=FFN("ZZPARM"); IF _ZZP<=0 THEN _ZZP=HFN,_FILE_NAME$="ZZPARM"; OPEN (_ZZP,ERR=OPEN_ERR)_FILE_NAME$
0182 READ (_ZZP,KEY=FID(0)+"      ")X3$,*,X4$; CALL "RT2PRM",ERR=*NEXT,X3$,X4$,W9$ ! SSP#210827
0188 _ZZN=HFN,_FILE_NAME$="ZZN"+%C$; OPEN (_ZZN,IOL=*,REC=_ZZN$,ERR=OPEN_ERR)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=4
0430 DIM _KEYS$[1:4]; _KEYS$[1]="SEND_TO_USER$",_KEYS$[2]="MESSAGE_DATE$",_KEYS$[3]="MESSAGE_TIME$",_KEYS$[4]="TF_FROM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1,%OUT=0; GOSUB ENABLE_GROUPS; GOTO NXT
0542 HIDE CONTROL BT_QRY.CTL; IF %OUT=1 THEN CALL "*WINGRP;HIDE",INCOMING.GRP$; CALL "*WINGRP;SHOW",OUTGOING.GRP$ ELSE CALL "*WINGRP;SHOW",INCOMING.GRP$; CALL "*WINGRP;HIDE",OUTGOING.GRP$
0545 ARG_1$=PAD(ARG_1$,18," ")
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=DEL_INFO)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC; GOTO NXT1
0565 NXT:
0570 REFRESH_FLG=1,MESSAGE_DATE$=%X3_TODAY$,MESSAGE_TIME$=DTE(0:"%hz:%mz %p"),TF_FROM$=%X3_OP_ID$,OPER$=TF_FROM$; GOSUB OPER; FROM_DESC$=OPER_NAME$,EFFE_DATE$=%X3_TODAY$
0575 NXT1:
0580 REFRESH_FLG=1; OPER$=TF_FROM$; GOSUB OPER; FROM_DESC$=OPER_NAME$
0590 IF %OUT=1 THEN CALL "*WINGRP;LOCK",FIELDS.GRP$,NEXT_ID=BT_EXIT_MAIL.CTL; CALL "BORDERLESS",0,"",0,BORDER.GRP$; REFRESH_FLG=1; CHECK_BOX DISABLE REPLY_REQ.CTL
0596 IF %READ THEN JJ$=DTE(0:"%Yl%Mz%Dz"),%B_WINDATE_FMT$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD"; CALL "ZZWDTE;VALIDATE",JJ$,JJJ$,JJJJ$; %WINDATE_FMT$=%B_WINDATE_FMT$,%B_WINDATE_FMT$="",DATE_VIEWED$=JJ$,TIME_VIEWED$=DTE(0:"%Hz%mz"),FLAG=1; READ (_ZZN,KEY=%ZZNKEY$,DOM=*NEXT); _ZZN.VIEWED_DATE$=JJ$,_ZZN.VIEWED_TIME$=TIME_VIEWED$; WRITE (_ZZN,KEY=%ZZNKEY$)
0600 RETURN 
0700 DEL_INFO:
0710 CMD_STR$="END"
0720 MSGBOX MSG("MESS_DEL")+SEP+MSG("RETAIN_INF"),MSG("CONFIRMING"),"?,YESNO",OPT$
0730 IF OPT$="NO" THEN EXIT 
0740 REMOVE (_ZZN,KEY=%ZZNKEY$,DOM=*NEXT)
0741 IF ERR=11 THEN %ZZNKEY$=%ZZNKEY$(1,4)+%ZZNKEY$(8); REMOVE (_ZZN,KEY=%ZZNKEY$,DOM=*NEXT)
0750 EXIT 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0921 _FIL_NO=FN%FFN("ZZM"); IF _FIL_NO<=0 THEN _FIL_NO=HFN; OPEN (_FIL_NO)"ZZM" ! [205471]-changed FFN() to FN%FFN()
0925 IF FLAG=1 THEN WRITE (_FIL_NO,KEY=ARG_1$)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0944 IF _ZZN<>0 THEN CLOSE (_ZZN); _ZZN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1415 GOSUB WRITE_MESSAGE
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1670 REMOVE (_ZZN,KEY=SEND_TO_USER$(1,3)+"I"+TF_FROM$(1,3)+MESSAGE_DATE$+MESSAGE_TIME$,DOM=*NEXT)
1675 REMOVE (_ZZN,KEY=TF_FROM$(1,3)+"R"+SEND_TO_USER$(1,3)+MESSAGE_DATE$+MESSAGE_TIME$,DOM=*NEXT)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0; GOSUB READ_MESSAGE
3070 OPER$=SEND_TO_USER$; GOSUB OPER; SEND_DESC$=OPER_NAME$
3080 IF STP(DATE_VIEWED$)<>"" THEN CALL "*WINGRP;SHOW",VIEWED.GRP$
3100 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3225 GOTO WRT
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=SEND_TO_USER.CTL,_FIRST_FIELD=REPLY_REQ.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
8010 IOLIST _OBJNME$,_OBJC,_OBJL,_OBJW,_OBJH,_OBJTYPE$,INITTEXT$,INITVAL$,_OBJTAB,_OBJDEF$,_OBJDSP$,_OBJFCS$,_OBJSEL$,_OBJMSG$,_OBJHLP$,_OBJATTR$,_OBJIDX$,_OBJHOTKEY$,_OBJQRY$,_OBJSEC$,_OBJSTS$,_OBJGRP$,_OBJNULL$,_OBJTAG$,_OBJTBL$,_OBJINP$,_OBJOUT$,_OBJVALID$,_OBJCLASS$,_OBJTIP$,_OBJORIG$,_OBJFONT$,_OBJCOLOR$,_OBJLISTBOXTYPE$,_OBJ_SEP$,_OBJSCRATCH$,_OBJPOPUP$,_OBJSIZING$,_OBJLOGIC1$,_OBJLOGIC2$,_OBJPOPUPLOGIC$
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN SEND_TO_USER$=""
13030 IF _CLR_FLG$="R" THEN MESSAGE_DATE$=""
13040 IF _CLR_FLG$="R" THEN MESSAGE_TIME$=""
13050 IF _CLR_FLG$="R" THEN TF_FROM$=""
13060 REPLY_REQ$="",MESSAGE$="",FROM_DESC$="",SEND_DESC$=""
13070 SUBJECT$=""
13080 EFFE_DATE$=""
13090 DATE_VIEWED$=""
13100 TIME_VIEWED$=""
13110 MESSAGE_1$=""
13120 MESSAGE_2$=""
13130 MESSAGE_3$=""
13140 MESSAGE_4$=""
13150 MESSAGE_5$=""
13160 MESSAGE_6$=""
13170 MESSAGE_7$=""
13180 MESSAGE_8$=""
13190 MESSAGE_9$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=MESSAGE_DATE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=MESSAGE_TIME.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=FROM.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14985 CALL "*WINGRP;HIDE",VIEWED.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(18,"N")
15030 IF _ORIG.SEND_TO_USER$=_CUR.SEND_TO_USER$ OR SEND_TO_USER$=_CUR.SEND_TO_USER$ THEN GOTO *NEXT ELSE IF _ORIG.SEND_TO_USER$=SEND_TO_USER$ THEN _CHG2$=_CHG2$+SEP+MSG("SEND_T_U")+" = "+_CUR.SEND_TO_USER$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEND_T_U")+" = "+_CUR.SEND_TO_USER$
15040 IF _ORIG.MESSAGE_DATE$=_CUR.MESSAGE_DATE$ OR MESSAGE_DATE$=_CUR.MESSAGE_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_DATE$=MESSAGE_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("DATE")+" = "+_CUR.MESSAGE_DATE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATE")+" = "+_CUR.MESSAGE_DATE$
15050 IF _ORIG.MESSAGE_TIME$=_CUR.MESSAGE_TIME$ OR MESSAGE_TIME$=_CUR.MESSAGE_TIME$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_TIME$=MESSAGE_TIME$ THEN _CHG2$=_CHG2$+SEP+MSG("TIME")+" = "+_CUR.MESSAGE_TIME$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TIME")+" = "+_CUR.MESSAGE_TIME$
15060 IF _ORIG.TF_FROM$=_CUR.TF_FROM$ OR TF_FROM$=_CUR.TF_FROM$ THEN GOTO *NEXT ELSE IF _ORIG.TF_FROM$=TF_FROM$ THEN _CHG2$=_CHG2$+SEP+MSG("FROM")+" = "+_CUR.TF_FROM$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FROM")+" = "+_CUR.TF_FROM$
15070 IF _ORIG.REPLY_REQ$=_CUR.REPLY_REQ$ OR REPLY_REQ$=_CUR.REPLY_REQ$ THEN GOTO *NEXT ELSE IF _ORIG.REPLY_REQ$=REPLY_REQ$ THEN _CHG2$=_CHG2$+SEP+MSG("REPLY_REQ")+" = "+_CUR.REPLY_REQ$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REPLY_REQ")+" = "+_CUR.REPLY_REQ$
15080 IF _ORIG.SUBJECT$=_CUR.SUBJECT$ OR SUBJECT$=_CUR.SUBJECT$ THEN GOTO *NEXT ELSE IF _ORIG.SUBJECT$=SUBJECT$ THEN _CHG2$=_CHG2$+SEP+MSG("SUBJ_L")+" = "+_CUR.SUBJECT$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SUBJ_L")+" = "+_CUR.SUBJECT$
15090 IF _ORIG.EFFE_DATE$=_CUR.EFFE_DATE$ OR EFFE_DATE$=_CUR.EFFE_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.EFFE_DATE$=EFFE_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("EFFE_DATE")+" = "+_CUR.EFFE_DATE$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("EFFE_DATE")+" = "+_CUR.EFFE_DATE$
15100 IF _ORIG.DATE_VIEWED$=_CUR.DATE_VIEWED$ OR DATE_VIEWED$=_CUR.DATE_VIEWED$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_VIEWED$=DATE_VIEWED$ THEN _CHG2$=_CHG2$+SEP+MSG("DATE_V")+" = "+_CUR.DATE_VIEWED$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATE_V")+" = "+_CUR.DATE_VIEWED$
15110 IF _ORIG.TIME_VIEWED$=_CUR.TIME_VIEWED$ OR TIME_VIEWED$=_CUR.TIME_VIEWED$ THEN GOTO *NEXT ELSE IF _ORIG.TIME_VIEWED$=TIME_VIEWED$ THEN _CHG2$=_CHG2$+SEP+MSG("TIME_V")+" = "+_CUR.TIME_VIEWED$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TIME_V")+" = "+_CUR.TIME_VIEWED$
15120 IF _ORIG.MESSAGE_1$=_CUR.MESSAGE_1$ OR MESSAGE_1$=_CUR.MESSAGE_1$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_1$=MESSAGE_1$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_L")+" 1"+" = "+_CUR.MESSAGE_1$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_L")+" 1"+" = "+_CUR.MESSAGE_1$
15130 IF _ORIG.MESSAGE_2$=_CUR.MESSAGE_2$ OR MESSAGE_2$=_CUR.MESSAGE_2$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_2$=MESSAGE_2$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_L")+" 2"+" = "+_CUR.MESSAGE_2$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_L")+" 2"+" = "+_CUR.MESSAGE_2$
15140 IF _ORIG.MESSAGE_3$=_CUR.MESSAGE_3$ OR MESSAGE_3$=_CUR.MESSAGE_3$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_3$=MESSAGE_3$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_L")+" 1"+" = "+_CUR.MESSAGE_3$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_L")+" 1"+" = "+_CUR.MESSAGE_3$
15150 IF _ORIG.MESSAGE_4$=_CUR.MESSAGE_4$ OR MESSAGE_4$=_CUR.MESSAGE_4$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_4$=MESSAGE_4$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_L")+" 1"+" = "+_CUR.MESSAGE_4$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_L")+" 1"+" = "+_CUR.MESSAGE_4$
15160 IF _ORIG.MESSAGE_5$=_CUR.MESSAGE_5$ OR MESSAGE_5$=_CUR.MESSAGE_5$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_5$=MESSAGE_5$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_L")+" 5"+" = "+_CUR.MESSAGE_5$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_L")+" 5"+" = "+_CUR.MESSAGE_5$
15170 IF _ORIG.MESSAGE_6$=_CUR.MESSAGE_6$ OR MESSAGE_6$=_CUR.MESSAGE_6$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_6$=MESSAGE_6$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_L")+" 6"+" = "+_CUR.MESSAGE_6$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_L")+" 6"+" = "+_CUR.MESSAGE_6$
15180 IF _ORIG.MESSAGE_7$=_CUR.MESSAGE_7$ OR MESSAGE_7$=_CUR.MESSAGE_7$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_7$=MESSAGE_7$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_L")+" 7"+" = "+_CUR.MESSAGE_7$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_L")+" 7"+" = "+_CUR.MESSAGE_7$
15190 IF _ORIG.MESSAGE_8$=_CUR.MESSAGE_8$ OR MESSAGE_8$=_CUR.MESSAGE_8$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_8$=MESSAGE_8$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_L")+" 8"+" = "+_CUR.MESSAGE_8$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_L")+" 8"+" = "+_CUR.MESSAGE_8$
15200 IF _ORIG.MESSAGE_9$=_CUR.MESSAGE_9$ OR MESSAGE_9$=_CUR.MESSAGE_9$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_9$=MESSAGE_9$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_L")+" 9"+" = "+_CUR.MESSAGE_9$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_L")+" 9"+" = "+_CUR.MESSAGE_9$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN SEND_TO_USER$=_CUR.SEND_TO_USER$
16030 IF _CHG_VAR$(2,1)="Y" THEN MESSAGE_DATE$=_CUR.MESSAGE_DATE$
16040 IF _CHG_VAR$(3,1)="Y" THEN MESSAGE_TIME$=_CUR.MESSAGE_TIME$
16050 IF _CHG_VAR$(4,1)="Y" THEN TF_FROM$=_CUR.TF_FROM$
16060 IF _CHG_VAR$(5,1)="Y" THEN REPLY_REQ$=_CUR.REPLY_REQ$
16070 IF _CHG_VAR$(6,1)="Y" THEN SUBJECT$=_CUR.SUBJECT$
16080 IF _CHG_VAR$(7,1)="Y" THEN EFFE_DATE$=_CUR.EFFE_DATE$
16090 IF _CHG_VAR$(8,1)="Y" THEN DATE_VIEWED$=_CUR.DATE_VIEWED$
16100 IF _CHG_VAR$(9,1)="Y" THEN TIME_VIEWED$=_CUR.TIME_VIEWED$
16110 IF _CHG_VAR$(10,1)="Y" THEN MESSAGE_1$=_CUR.MESSAGE_1$
16120 IF _CHG_VAR$(11,1)="Y" THEN MESSAGE_2$=_CUR.MESSAGE_2$
16130 IF _CHG_VAR$(12,1)="Y" THEN MESSAGE_3$=_CUR.MESSAGE_3$
16140 IF _CHG_VAR$(13,1)="Y" THEN MESSAGE_4$=_CUR.MESSAGE_4$
16150 IF _CHG_VAR$(14,1)="Y" THEN MESSAGE_5$=_CUR.MESSAGE_5$
16160 IF _CHG_VAR$(15,1)="Y" THEN MESSAGE_6$=_CUR.MESSAGE_6$
16170 IF _CHG_VAR$(16,1)="Y" THEN MESSAGE_7$=_CUR.MESSAGE_7$
16180 IF _CHG_VAR$(17,1)="Y" THEN MESSAGE_8$=_CUR.MESSAGE_8$
16190 IF _CHG_VAR$(18,1)="Y" THEN MESSAGE_9$=_CUR.MESSAGE_9$
16990 RETURN 
17000 OPER: REFRESH_FLG=1; IF LEN(OPER$)>3 THEN OPER$=OPER$(1,3)
17010 READ (_ZZP,KEY="o"+OPER$,DOM=NO_OPER)OPER_NAME$
17020 OPER_NAME$=OPER_NAME$(5,30)
17030 RETURN 
17040 NO_OPER: OPER$="",OPER_NAME$=""; RETURN 
17100 WRITE_MESSAGE: TF_FROM$=PAD(TF_FROM$,5," ")
17101 IF LEN(MESSAGE_TIME$)>4 THEN MESSAGE_TIME$=MESSAGE_TIME$(1,2)+MESSAGE_TIME$(4,2)
17103 _KEY$=SEND_TO_USER$+MESSAGE_DATE$+MESSAGE_TIME$+TF_FROM$,LINE=0
17105 NXT_MES:
17110 IF LEN(MESSAGE$)>60 THEN MES$=MESSAGE$(1,60),MESSAGE$=MESSAGE$(61) ELSE MES$=MESSAGE$,MESSAGE$=""
17120 IF LEN(MES$)>=60 AND MID(MES$,60,1)<>" " THEN XX=POS(" "=MES$,-1),MESSAGE$=MES$(XX+1)+MESSAGE$,MES$=MES$(1,XX)
17130 LINE=LINE+1; EXECUTE "MESSAGE_"+STR(LINE)+"$=MES$"
17140 IF MESSAGE$<>"" THEN GOTO NXT_MES
17145 GOSUB ASSIGN_ZZN
17150 RETURN 
17160 READ_MESSAGE:
17170 FOR A=1 TO 9; EXECUTE "MESSAGE$=MESSAGE$+STP(MESSAGE_"+STR(A)+"$)+"+QUO+" "+QUO+",NESSAGE_"+STR(A)+"$="+QUO+QUO; NEXT A
17180 RETURN 
17200 SEL_QRY:
17210 ENTER VAL$
17220 IF MID(VAL$,14,3)<>%X3_OP_ID$ THEN EXIT 123
17230 EXIT 
17300 PROCESS_QRY:
17310 PROCESS "QRY_ZZM","../ZZG/ZZ.EN",VAL$
17320 IF VAL$="" THEN NEXT_ID=SEND_TO_USER.CTL; GOTO *RETURN
17330 _KEY$=VAL$,VAL$="",REFRESH_FLG=1
17340 READ (_FIL_NO,KEY=_KEY$,DOM=*RETURN,ERR=*RETURN)
17350 GOTO PROCESS_READ
17500 HOLD_MESSAGE:
17510 ARCHIVE_FLAG$="1",CMD_STR$="E"; GOTO WRITE_REC
18000 CLOSE_FILE:
18010 LIST_BOX READ OPNFL_LIST.CTL,IDX; LIST_BOX FIND OPNFL_LIST.CTL,IDX,LT$; %CHN_N=NUM(LT$(1,POS(SEP=LT$)-2)),%FILE_NAME$=FIN(%CHN_N,"FILENAME"); %FIRST_KEY$=KEC(%CHN_N,ERR=*NEXT); READ (%CHN_N,KEY=%FIRST_KEY$,DOM=*NEXT)%CUR_REC$ ! LIST_BOX LOAD OPNFL_LIST.CTL,IDX,'RED'+LT$
18012 XX=POS(".EN"=%FILE_NAME$); IF XX<>0 AND SCRN_ID$="GGOPTION.4" THEN GOTO CHECK_LIBRARY
18015 IF %CHN_N>64500 THEN RETURN 
18020 MSGBOX MSG("WISH_CLOSE")+": "+%FILE_NAME$+SEP+MSG("ON_CHN")+": "+STR(%CHN_N),MSG("CONFIRM"),"?,YESNO",ASK$
18030 IF ASK$="NO" THEN RETURN 
18040 CLOSE (%CHN_N,ERR=*NEXT)
18050 RETURN 
18100 MAIL_INCOMING: %READ=1
18105 IF ID$="OUTGOING" THEN %OUT=1 ELSE %OUT=0
18110 OPTION=EVN(ID$+".CTL")
18120 LIST_BOX READ OPTION,IDX,ERR=*RETURN ! 191103 - empty list box
18130 LIST_BOX FIND OPTION,IDX,LT$
18140 XX=POS($8A$=LT$),TF_FROM$=LT$(1,XX-1),LT$=LT$(XX+1)
18150 XX=POS($8A$=LT$),TF_DATE$=LT$(1,XX-1),LT$=LT$(XX+1),TF_DATE$=TF_DATE$(7)+TF_DATE$(1,2)+TF_DATE$(4,2); GOSUB CHECK_DATE; BW$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD"; CALL "ZZWDTE;VALIDATE",TF_DATE$,JJ$,JJJJ$; %WINDATE_FMT$=BW$,BW$=""
18160 XX=POS($8A$=LT$),TF_TIME$=LT$(1,XX-1),LT$=LT$(XX+1)
18170 _ZZMKEY$=%X3_OP_ID$+TF_DATE$+TF_TIME$+TF_FROM$; IF %OUT THEN %ZZNKEY$=%X3_OP_ID$+"R"+TF_FROM$+TF_DATE$+TF_TIME$ ELSE %ZZNKEY$=%X3_OP_ID$+"I"+TF_FROM$+TF_DATE$+TF_TIME$
18180 PROCESS "GGOPTION.2","../ZZG/ZZ.EN",_ZZMKEY$
18190 REPLACEMENT_SCRN$="GGOPTION.3",REFRESH_FLG=1
18200 RETURN 
18500 ASSIGN_ZZN:
18510 _ZZN.OPER_CODE$=SEND_TO_USER$
18520 _ZZN.IN_OUT_BOUND_MESSAGE$="I"
18530 _ZZN.OTHER_OPERATOR_CODE$=TF_FROM$
18540 _ZZN.DATE_OF_MESSAGE$=MESSAGE_DATE$
18550 _ZZN.TIME_OF_MESSAGE$=MESSAGE_TIME$
18560 _ZZN.REPLY_REQ$=REPLY_REQ$
18570 _ZZN.SUBJECT_DESC$=SUBJECT$
18580 FOR AA=1 TO 2; _ZZNKEY$=_ZZN.OPER_CODE$+_ZZN.IN_OUT_BOUND_MESSAGE$+_ZZN.OTHER_OPERATOR_CODE$(1,3)+_ZZN.DATE_OF_MESSAGE$+_ZZN.TIME_OF_MESSAGE$; WRITE (_ZZN,KEY=_ZZNKEY$); _ZZN.OPER_CODE$=STP(TF_FROM$),_ZZN.DATE_OTHER_OPERATOR_CODE$=SEND_TO_USER$,_ZZN.IN_OUT_BOUND_MESSAGE$="R"; NEXT AA
18590 RETURN 
19000 CHECK_LIBRARY:
19010 NN=HFN; OPEN (NN)%FILE_NAME$
19020 READ (NN,KEY=%FIRST_KEY$)IOL=8010
20000 CHECK_DATE:
20010 IF %X3$(48,1)="1" THEN RETURN 
20020 IF %X3$(48,1)="2" THEN TF_DATE$=TF_DATE$(1,4)+TF_DATE$(7)+TF_DATE$(5,2)
20030 RETURN 
56000 REM + Modification History
56002 REM "191103-Program exception in Order Entry                            
56004 REM "205471-Oracle - FFN usage in tf2g progs. to be replaced by FN%FFN  
56006 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
