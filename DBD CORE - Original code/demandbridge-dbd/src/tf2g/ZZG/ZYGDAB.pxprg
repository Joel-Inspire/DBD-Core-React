0001 SET_PARAM 'BY'=1797
0010 ! ZYGDAA - Generate Automatic Holidays
0035 ! "6.0 - 06/25/03 - 11.663333 - jir
0040 ! "Copyright 2003 Computer Software Inc.; Norcross, Georgia
0041 ! "        Licensed Software - All Rights Reserved.
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ZY5"
0170 _ZY5G=HFN; OPEN (_ZY5G,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN_ZY5G=HFN; OPEN (_CUR_FN_ZY5G,IOL=*,REC=_CUR$)_FILE_NAME$
0182 IF YEAR_ID$="" THEN YEAR_ID$=DTE(0:"%Yl")
0185 GOSUB GENERATE; REFRESH_FLG=1
0187 _SOUND_NAME$="open.wav"; PERFORM "$CTL-10;Sound_play"
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="SPEC_DATE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0515 GOSUB GENERATE; RETURN 
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 IF LEN(ARG_1$)=8 THEN AA$=ARG_1$; CALL "ZZWDTE;VALIDATE",AA$,BB$; ARG_2$=AA$,SPEC_DATE$=AA$; GOTO 0550 ELSE ARG_2$=ARG_1$(4),SPEC_DATE$=ARG_2$
0538 REFRESH_FLG=1,ARG_2$=ARG_1$; IF LEN(ARG_2$)>6 THEN ARG_2$=ARG_2$(4),SPEC_DATE$=ARG_2$
0540 IF ARG_2$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_2$; READ (_ZY5G,KEY=_KEY$,ERR=*RETURN)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_2$=KEC(_ZY5G,ERR=*NEXT)
0930 IF _ZY5G<>0 THEN CLOSE (_ZY5G); _ZY5G=0
0940 IF _CUR_FN_ZY5G<>0 THEN CLOSE (_CUR_FN_ZY5G); _CUR_FN_ZY5G=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_ZY5G:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_ZY5G,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_ZY5G:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1655 DAY_ID.CTL'ID=NUM(SPEC_DATE$(5)),DAY_ID.CTL'BACKCOLOUR$="Gray",DAY_ID.CTL'TEXTCOLOR$="Black"
1660 REMOVE (_ZY5G,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_ZY5G,END=END_OF_FILE)
2060 READ (_ZY5G,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_ZY5G,KEY=_KEY$,END=END_OF_FILE); READ (_ZY5G,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_ZY5G,END=START_OF_FILE); READ (_ZY5G,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_ZY5G,KEY=_KEY$,END=START_OF_FILE); READ (_ZY5G,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_ZY5G,ERR=NO_FIRST)
2450 READ (_ZY5G,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_ZY5G,ERR=NO_LAST)
2650 READ (_ZY5G,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_ZY5G:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_ZY5G,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_ZY5G) ! Save record for review
3060 CHANGE_FLG=0
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN_ZY5G,KEY=KEC(_ZY5G),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_ZY5G,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_ZY5G,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_ZY5G) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=SPEC_DATE.CTL,_FIRST_FIELD=DESCRIPTION.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 ! IF _CLR_FLG$="R" THEN SPEC_DATE$=""
13030 TF_DESCRIPTION$=""
13040 HIGHLIGHT$="0"
13050 NORMALLY_WORK_OF$="0"
13060 BANK_HOLIDAY$="0"
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 ! IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(5,"N")
15030 IF _ORIG.SPEC_DATE$=_CUR.SPEC_DATE$ OR SPEC_DATE$=_CUR.SPEC_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.SPEC_DATE$=SPEC_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("SPEC_DATE")+" = "+_CUR.SPEC_DATE$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPEC_DATE")+" = "+_CUR.SPEC_DATE$
15040 IF _ORIG.TF_DESCRIPTION$=_CUR.TF_DESCRIPTION$ OR TF_DESCRIPTION$=_CUR.TF_DESCRIPTION$ THEN GOTO *NEXT ELSE IF _ORIG.TF_DESCRIPTION$=TF_DESCRIPTION$ THEN _CHG2$=_CHG2$+SEP+MSG("DESC")+" = "+_CUR.TF_DESCRIPTION$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DESC")+" = "+_CUR.TF_DESCRIPTION$
15050 IF _ORIG.HIGHLIGHT$=_CUR.HIGHLIGHT$ OR HIGHLIGHT$=_CUR.HIGHLIGHT$ THEN GOTO *NEXT ELSE IF _ORIG.HIGHLIGHT$=HIGHLIGHT$ THEN _CHG2$=_CHG2$+SEP+MSG("HIGHLIGHT")+" = "+_CUR.HIGHLIGHT$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HIGHLIGHT")+" = "+_CUR.HIGHLIGHT$
15060 IF _ORIG.NORMALLY_WORK_OF$=_CUR.NORMALLY_WORK_OF$ OR NORMALLY_WORK_OF$=_CUR.NORMALLY_WORK_OF$ THEN GOTO *NEXT ELSE IF _ORIG.NORMALLY_WORK_OF$=NORMALLY_WORK_OF$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.NORMALLY_WORK_OF$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.NORMALLY_WORK_OF$
15070 IF _ORIG.BANK_HOLIDAY$=_CUR.BANK_HOLIDAY$ OR BANK_HOLIDAY$=_CUR.BANK_HOLIDAY$ THEN GOTO *NEXT ELSE IF _ORIG.BANK_HOLIDAY$=BANK_HOLIDAY$ THEN _CHG2$=_CHG2$+SEP+MSG("BANK_HOL")+" = "+_CUR.BANK_HOLIDAY$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BANK_HOL")+" = "+_CUR.BANK_HOLIDAY$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN SPEC_DATE$=_CUR.SPEC_DATE$
16030 IF _CHG_VAR$(2,1)="Y" THEN TF_DESCRIPTION$=_CUR.TF_DESCRIPTION$
16040 IF _CHG_VAR$(3,1)="Y" THEN HIGHLIGHT$=_CUR.HIGHLIGHT$
16050 IF _CHG_VAR$(4,1)="Y" THEN NORMALLY_WORK_OF$=_CUR.NORMALLY_WORK_OF$
16060 IF _CHG_VAR$(5,1)="Y" THEN BANK_HOLIDAY$=_CUR.BANK_HOLIDAY$
16990 RETURN 
17000 GENERATE:
17010 ! New Year Day
17020 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),1,1):"%Yl%Mz%Dz"),D1$=DTE(JUL(NUM(YEAR_ID$),1,1):"%Dl"),MSG1$=MSG("NEW_YEAR"),AA=0; GOSUB VALIDATE; DATE1$=TF_DATE$
17050 ! 
17100 ! Memorial Day
17110 FOR AA=31 TO 1 STEP -1
17120 D$=DTE(JUL(NUM(YEAR_ID$),5,AA):"%Dl"); IF D$="Monday" THEN BREAK
17140 NEXT AA
17150 TF_DATE$=YEAR_ID$+"05"+STR(AA:"00"),D2$=D$,MSG2$=MSG("MEM_DAY"),AA=0; GOSUB VALIDATE; DATE2$=TF_DATE$
17170 ! 
17180 ! Independence Day
17190 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),7,4):"%Yl%Mz%Dz"),D3$=DTE(JUL(NUM(YEAR_ID$),7,4):"%Dl"),MSG3$=MSG("INDE_DAY"); GOSUB VALIDATE; DATE3$=TF_DATE$
17210 ! 
17220 ! Labor Day
17230 FOR AA=1 TO 30
17240 D$=DTE(JUL(NUM(YEAR_ID$),9,AA):"%Dl"); IF D$="Monday" THEN BREAK
17260 NEXT AA
17270 TF_DATE$=YEAR_ID$+"09"+STR(AA:"00"); GOSUB VALIDATE; DATE4$=TF_DATE$,D4$=D$,MSG4$=MSG("LABOR_DAY"),AA=0
17290 ! 
17300 ! Thanksgiving Day
17305 COUNT=0
17310 FOR AA=1 TO 30
17320 D$=DTE(JUL(NUM(YEAR_ID$),11,AA):"%Dl")
17330 IF D$="Thursday" THEN COUNT=COUNT+1; IF COUNT=4 THEN BREAK
17340 NEXT AA
17350 TF_DATE$=YEAR_ID$+"11"+STR(AA:"00"); GOSUB VALIDATE; DATE5$=TF_DATE$,D5$=D$,MSG5$=MSG("THANKS"),AA=0
17370 ! 
17380 ! Christmas Day
17390 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),12,25):"%Yl%Mz%Dz"),D6$=DTE(JUL(NUM(YEAR_ID$),12,25):"%Dl"); GOSUB VALIDATE; DATE6$=TF_DATE$,MSG6$=MSG("CHRISTMAS"),AA=0
17410 ! 
17500 ! Martin Luther King, Jr. Day
17510 COUNT=0
17520 FOR AA=1 TO 31
17530 D$=DTE(JUL(NUM(YEAR_ID$),1,AA):"%Dl"); IF D$="Monday" THEN COUNT=COUNT+1; IF COUNT=3 THEN BREAK
17550 NEXT AA
17560 TF_DATE$=YEAR_ID$+"01"+STR(AA:"00"); GOSUB VALIDATE; DATE7$=TF_DATE$,D7$=D$,MSG7$=MSG("MARTIN"),AA=0
17580 ! 
17590 ! Presidents' Day
17600 COUNT=0
17610 FOR AA=1 TO 29
17620 D$=DTE(JUL(NUM(YEAR_ID$),2,AA):"%Dl"); IF D$="Monday" THEN COUNT=COUNT+1; IF COUNT=3 THEN BREAK
17640 NEXT AA
17650 TF_DATE$=YEAR_ID$+"02"+STR(AA:"00"); GOSUB VALIDATE; DATE8$=TF_DATE$,D8$=D$,MSG8$=MSG("PRESIDENT"),AA=0
17670 ! 
17680 ! Columbus Day
17690 COUNT=0
17700 FOR AA=1 TO 31
17710 D$=DTE(JUL(NUM(YEAR_ID$),10,AA):"%Dl"); IF D$="Monday" THEN COUNT=COUNT+1; IF COUNT=2 THEN BREAK
17730 NEXT AA
17740 TF_DATE$=YEAR_ID$+"10"+STR(AA:"00"); GOSUB VALIDATE; DATE9$=TF_DATE$,D9$=D$,MSG9$=MSG("COLUMBUS"),AA=0
17760 ! 
17770 ! Easter Sunday
17780 ! 17780,10
17790 TYEAR$="1600170018001900200021002200230024002500"
17800 DIM M(10),N(10)
17810 M(1)=22,M(2)=23,M(3)=23,M(4)=24,M(5)=24,M(6)=24,M(7)=25,M(8)=26,M(9)=25,M(10)=26,N(1)=2,N(2)=3,N(3)=4,N(4)=5,N(5)=5,N(6)=6,N(7)=0,N(8)=1,N(9)=1,N(10)=2
17820 A=MOD(NUM(YEAR_ID$),19),B=MOD(NUM(YEAR_ID$),4),C=MOD(NUM(YEAR_ID$),7),XX=POS(YEAR_ID$<=TYEAR$,4)
17830 IF POS(YEAR_ID$=TYEAR$,4)<>0 THEN XX=XX+4
17840 XX=XX-4,XX=INT(XX/4)+1,M=M(XX),N=N(XX),D=MOD(19*A+M,30),E=MOD(2*B+4*C+6*D+N,7),SM=D+E-9
17850 IF D=29 AND E=6 THEN SM=SM-7
17855 IF YEAR_ID$="1992" OR YEAR_ID$="2008" THEN GOTO 17861
17860 IF D=28 AND A>10 THEN SM=SM-7
17870 IF SM<=0 THEN MTH=3 ELSE MTH=4
17880 IF MTH=3 THEN GOSUB GET_LAST_SUNDAY
17885 IF SM<0 THEN SM=ABS(SM)
17890 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),MTH,SM):"%Yl%Mz%Dz"); GOSUB VALIDATE; DATE10$=TF_DATE$,D10$="Sunday",MSG10$="Easter Sunday"
17895 JJ=JUL(NUM(YEAR_ID$),MTH,SM)-2,TF_DATE$=DTE(JJ:"%Yl%Mz%Dz"); GOSUB VALIDATE; DATE11$=TF_DATE$,D11$="Friday",MSG11$="Good Friday"
17900 JJ=JUL(NUM(YEAR_ID$),MTH,SM)-46,TF_DATE$=DTE(JJ:"%Yl%Mz%Dz"); GOSUB VALIDATE; DATE12$=TF_DATE$,D12$="Wednesday",MSG12$="Ash Wednesday"
17905 JJ=JUL(NUM(YEAR_ID$),MTH,SM)-7,TF_DATE$=DTE(JJ:"%Yl%Mz%Dz"); GOSUB VALIDATE; DATE29$=TF_DATE$,D29$="Sunday",MSG29$="Palm Sunday"
17910 GOSUB MORE_DATES
17999 RETURN 
18000 VALIDATE:
18001 %B_WINDATE_FMT$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD"
18010 CALL "ZZWDTE;VALIDATE",TF_DATE$,BB$
18015 IF %X3$(48,1)="1" THEN %WINDATE_FMT$="MMDDYYYY" ELSE IF %X3$(48,1)="2" THEN %WINDATE_FMT$="DDMMYYYY" ELSE %WINDATE_FMT$="YYYYMMDD" END_IF ; %B_WINDATE_FMT$=%WINDATE_FMT$
18020 RETURN 
19000 WRITE_DATES:
19010 FOR AA=1 TO 30
19020 SPEC_DATE$=EVS("DATE"+STR(AA)+"$"),TF_DESCRIPTION$=EVS("MSG"+STR(AA)+"$"),HIGHLIGHT$="1",NORMALLY_WORK_OF$="0",BANK_HOLIDAY$="0"
19025 IF AA>=7 THEN HIGHLIGHT$="0",BANK_HOLIDAY$="1"
19027 IF (AA>=10 AND AA<=11) OR AA=29 OR AA=12 THEN HIGHLIGHT$="0",BANK_HOLIDAY$="0",NORMALLY_WORK_OF$="2"; GOTO WRT_ZY5
19028 IF AA=7 THEN TF_DESCRIPTION$="Martin Luther King, Jr. Day"
19030 IF AA>11 THEN HIGHLIGHT$="0",BANK_HOLIDAY$="0",NORMALLY_WORK_OF$="3"
19032 IF AA=27 THEN HIGHLIGHT$="0",BANK_HOLIDAY$="1",NORMALLY_WORK_OF$="0"
19035 WRT_ZY5:WRITE (_ZY5G,KEY=SPEC_DATE$,DOM=DUP_REC)
19040 NEXT AA
19045 IF NOPRINT<>0 THEN RETURN 
19050 MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO,TIM=1"
19060 PERFORM "ZYGCAL;DRAW_MONTH"
19070 RETURN 
19100 DUP_REC:
19110 READ (_ZY5G,KEY=SPEC_DATE$,REC=ZZZ$)
19111 IF STP(ZZZ.TF_DESCRIPTION$)=STP(TF_DESCRIPTION$) THEN GOTO 19140
19112 IF LEN(STP(ZZZ.TF_DESCRIPTION$)+STP(TF_DESCRIPTION$))<=30 THEN TF_DESCRIPTION$=STP(ZZZ.TF_DESCRIPTION$)+","+STP(TF_DESCRIPTION$); GOTO 19140
19113 XXX=POS("'s"=ZZZ.TF_DESCRIPTION$); IF XXX<>0 THEN ZZZ.TF_DESCRIPTION$=ZZZ.TF_DESCRIPTION$(1,XXX-1)+ZZZ.TF_DESCRIPTION$(XXX+2)
19115 SSS$=STP(ZZZ.TF_DESCRIPTION$),XXX=POS(" "=SSS$,-1); IF XXX<>0 THEN SSS$=SSS$(1,XXX-1); IF LEN(SSS$)+LEN(STP(TF_DESCRIPTION$))<=30 THEN TF_DESCRIPTION$=SSS$+","+STP(TF_DESCRIPTION$); GOTO 19140 ELSE GOTO 19115
19120 SSS$=STP(ZZZ.TF_DESCRIPTION$),XXX=POS(" "=SSS$); IF XXX<>0 THEN SSS$=SSS$(1,XXX-1),XXX=POS("'s"=SSS$); IF XXX<>0 THEN SSS$=SSS$(1,XXX-1)
19130 TF_DESCRIPTION$=SSS$+","+TF_DESCRIPTION$
19140 WRITE (_ZY5G,KEY=SPEC_DATE$)
19150 GOTO 19040
19500 ! 19500,10 Get Last Sunday in March
19510 GET_LAST_SUNDAY:
19520 FOR AA=31+SM TO 1 STEP -1
19530 D$=DTE(JUL(NUM(YEAR_ID$),3,AA):"%Dl")
19540 IF D$="Sunday" THEN BREAK
19550 NEXT AA
19560 SM=AA
19570 RETURN 
20000 MORE_DATES:
20010 ! Valentine's Day
20020 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),2,14):"%Yl%Mz%Dz")
20030 D30$=DTE(JUL(NUM(YEAR_ID$),2,14):"%Dl"),MSG30$=MSG("VALETIN"),AA=0
20040 GOSUB VALIDATE; DATE30$=TF_DATE$
20050 ! 
20055 ! Washington Birthday
20060 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),2,22):"%Yl%Mz%Dz")
20070 D13$=DTE(JUL(NUM(YEAR_ID$),2,22):"%Dl"),MSG13$=MSG("WASHINGTON"),AA=0
20080 GOSUB VALIDATE; DATE13$=TF_DATE$
20090 ! 
20100 ! Monther's Day
20105 COUNT=0
20110 FOR AA=1 TO 31
20120 D$=DTE(JUL(NUM(YEAR_ID$),5,AA):"%Dl")
20130 IF D$="Sunday" THEN COUNT=COUNT+1; IF COUNT=2 THEN BREAK
20140 NEXT AA
20150 TF_DATE$=YEAR_ID$+"05"+STR(AA:"00")
20160 GOSUB VALIDATE; DATE14$=TF_DATE$,D14$=D$,MSG14$=MSG("MOTHER"),AA=0
20170 ! 
20180 ! Father's Day
20190 COUNT=0
20200 FOR AA=1 TO 31
20210 D$=DTE(JUL(NUM(YEAR_ID$),6,AA):"%Dl")
20220 IF D$="Sunday" THEN COUNT=COUNT+1; IF COUNT=3 THEN BREAK
20230 NEXT AA
20240 TF_DATE$=YEAR_ID$+"06"+STR(AA:"00")
20250 GOSUB VALIDATE; DATE15$=TF_DATE$,D15$=D$,MSG15$=MSG("FATHER"),AA=0
20260 ! 
20270 ! Halloween
20280 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),10,31):"%Yl%Mz%Dz")
20300 D16$=DTE(JUL(NUM(YEAR_ID$),10,31):"%Dl"),MSG16$=MSG("HALLOWEEN"),AA=0
20310 GOSUB VALIDATE; DATE16$=TF_DATE$
20320 ! 
20330 ! Lincoln's Birthday
20340 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),2,12):"%Yl%Mz%Dz")
20350 D17$=DTE(JUL(NUM(YEAR_ID$),2,12):"%Dl"),MSG17$=MSG("LINCOLN"),AA=0
20360 GOSUB VALIDATE; DATE17$=TF_DATE$
20370 ! 
20380 ! St. Patrick's Day
20390 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),3,17):"%Yl%Mz%Dz")
20400 D18$=DTE(JUL(NUM(YEAR_ID$),3,17):"%Dl"),MSG18$=MSG("PATRICK"),AA=0
20410 GOSUB VALIDATE; DATE18$=TF_DATE$
20420 ! 
20430 ! Spring Begin
20440 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),3,20):"%Yl%Mz%Dz")
20450 D19$=DTE(JUL(NUM(YEAR_ID$),3,20):"%Dl"),MSG19$=MSG("SPRING"),AA=0
20460 GOSUB VALIDATE; DATE19$=TF_DATE$
20470 ! 
20480 ! Daylight Saving Begin
20490 FOR AA=1 TO 31
20500 D$=DTE(JUL(NUM(YEAR_ID$),4,AA):"%Dl")
20510 IF D$="Sunday" THEN BREAK
20520 NEXT AA
20530 TF_DATE$=YEAR_ID$+"04"+STR(AA:"00")
20540 GOSUB VALIDATE; DATE20$=TF_DATE$,D20$=D$,MSG20$=MSG("DAYLIGHT_B"),AA=0
20550 ! 
20560 ! Income Tax
20570 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),4,15):"%Yl%Mz%Dz"),AA=15
20575 D$=DTE(JUL(NUM(YEAR_ID$),4,15):"%Dl"); IF D$<>"Sunday" AND D$<>"Saturday" THEN GOTO 20580
20577 FOR AA=16 TO 30; D$=DTE(JUL(NUM(YEAR_ID$),4,AA):"%Dl"); IF D$="Monday" THEN BREAK END_IF ; NEXT AA
20580 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),4,AA):"%Yl%Mz%Dz"),D21$=DTE(JUL(NUM(YEAR_ID$),4,AA):"%Dl"),MSG21$=MSG("INCOME_TAX"),AA=0
20590 GOSUB VALIDATE; DATE21$=TF_DATE$
20600 ! 
20610 ! Administrative Professional
20620 FOR AA=30 TO 1 STEP -1
20630 D$=DTE(JUL(NUM(YEAR_ID$),4,AA):"%Dl")
20640 IF D$="Saturday" THEN BREAK ! Check for Last Saturday
20650 NEXT AA
20660 FOR BB=AA TO 1 STEP -1
20670 D$=DTE(JUL(NUM(YEAR_ID$),4,BB):"%Dl")
20680 IF D$="Wednesday" THEN BREAK ! Check for Last Saturday
20690 NEXT BB
20700 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),4,BB):"%Yl%Mz%Dz")
20710 D22$=DTE(JUL(NUM(YEAR_ID$),4,21):"%Dl"),MSG22$=MSG("AD_PROF"),AA=0
20720 GOSUB VALIDATE; DATE22$=TF_DATE$
20730 ! 
20740 ! Flag Day
20750 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),6,14):"%Yl%Mz%Dz")
20760 D23$=DTE(JUL(NUM(YEAR_ID$),6,14):"%Dl"),MSG23$=MSG("FLAG_DAY"),AA=0
20770 GOSUB VALIDATE; DATE23$=TF_DATE$
20780 ! 
20790 ! Summer Begin
20800 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),6,21):"%Yl%Mz%Dz")
20810 D24$=DTE(JUL(NUM(YEAR_ID$),6,21):"%Dl"),MSG24$=MSG("SUMMER"),AA=0
20820 GOSUB VALIDATE; DATE24$=TF_DATE$
20830 ! 
20840 ! 911
20850 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),9,11):"%Yl%Mz%Dz")
20860 D25$=DTE(JUL(NUM(YEAR_ID$),9,11):"%Dl"),MSG25$=MSG("911"),AA=0
20870 GOSUB VALIDATE; DATE25$=TF_DATE$
20880 ! 
20890 ! Daylight Saving End
20900 FOR AA=31 TO 1 STEP -1
20910 D$=DTE(JUL(NUM(YEAR_ID$),10,AA):"%Dl")
20920 IF D$="Sunday" THEN BREAK
20930 NEXT AA
20940 TF_DATE$=YEAR_ID$+"10"+STR(AA:"00")
20950 GOSUB VALIDATE; DATE26$=TF_DATE$,D26$=D$,MSG26$=MSG("DAYLIGHT_E"),AA=0
20960 ! 
20970 ! Veterans's Day
20980 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),11,11):"%Yl%Mz%Dz")
20990 D27$=DTE(JUL(NUM(YEAR_ID$),11,11):"%Dl"),MSG27$=MSG("VETERANS"),AA=0
20995 GOSUB VALIDATE; DATE27$=TF_DATE$
21000 ! 
21110 ! Winter
21120 TF_DATE$=DTE(JUL(NUM(YEAR_ID$),12,22):"%Yl%Mz%Dz")
21130 D28$=DTE(JUL(NUM(YEAR_ID$),12,22):"%Dl"),MSG28$=MSG("WINTER"),AA=0
21140 GOSUB VALIDATE; DATE28$=TF_DATE$
21150 ! 
21160 REFRESH_FLG=1
21180 ! 21180,10 Paschal full moon 
21190 PASCHAL_FULL_MOON:
21200 DIM DE$[13]
21210 A=NUM(YEAR_ID$)-1596,B=A+96,C=A-4,D=A/19,E=B/300,F=C/100,G=C/400,H=MOD((A*11+1),30),I=D+E-F+G+H+30,EPACTA=INT(MOD(I,30)),N=44-EPACTA,MTH=4
21220 IF N>=21 AND N<=31 THEN MTH=3
21230 IF N>31 THEN N=N-31
21235 GOSUB REAL_PFM
21240 DATE=JUL(NUM(YEAR_ID$),MTH,N),ORI=DATE,PFM$=DTE(DATE:"%Yl%Mz%Dz")
21245 SET_PARAM 'BY'=1797
21246 REST=0; IF MOD(NUM(YEAR_ID$),4)=0 THEN REST=30
21250 FOR AA=MTH TO 1 STEP -1
21260 DE$[AA]=DTE(DATE:"%Yl%Mz%Dz")
21265 IF REST=29 THEN REST=30 ELSE REST=29
21270 DATE=DATE-REST
21275 IF AA=MTH THEN ORI_REST=REST
21280 NEXT AA
21290 IF MOD(NUM(YEAR_ID$),4)=0 THEN DATE=ORI+29 ELSE DATE=ORI+30
21295 REST=ORI_REST; IF REST=29 THEN REST=30 ELSE REST=29
21300 FOR AA=MTH+1 TO 13
21310 DE$[AA]=DTE(DATE:"%Yl%Mz%Dz")
21315 IF REST=29 THEN REST=30 ELSE REST=29
21320 DATE=DATE+REST
21330 NEXT AA
21350 RETURN 
21900 REAL_PFM:
21910 SET_PARAM 'BY'=1797
22000 DIM PFM$[19]
22010 PFM$[1]="0414",PFM$[2]="0403",PFM$[3]="0323",PFM$[4]="0411",PFM$[5]="0331",PFM$[6]="0418",PFM$[7]="0408",PFM$[8]="0328",PFM$[9]="0416",PFM$[10]="0405",PFM$[11]="0325",PFM$[12]="0413",PFM$[13]="0402",PFM$[14]="0322",PFM$[15]="0410",PFM$[16]="0330",PFM$[17]="0417",PFM$[18]="0407",PFM$[19]="0327"
22040 GOLDEN=MOD(NUM(YEAR_ID$),19)+1,PFM$=YEAR_ID$+PFM$[GOLDEN],MTH=NUM(PFM$(5,2)),N=NUM(PFM$(7))
22050 DD=JUL(NUM(YEAR_ID$),MTH,N)+1
22060 FOR AA=DD TO DD+40
22070 D$=DTE(AA:"%Dl"); IF D$="Sunday" THEN BREAK
22080 NEXT AA
22090 TF_DATE$=DTE(AA:"%Yl%Mz%Dz"); GOSUB VALIDATE; DATE10$=TF_DATE$,D10$="Sunday",MSG10$="Easter Sunday"
22100 TF_DATE$=DTE(AA-2:"%Yl%Mz%Dz"); GOSUB VALIDATE; DATE11$=TF_DATE$,D11$="Friday",MSG11$="Good Friday"
22110 TF_DATE$=DTE(JJ-39:"%Yl%Mz%Dz"); GOSUB VALIDATE; DATE12$=TF_DATE$,D12$="Wednesday",MSG12$="Ash Wednesday"
22120 TF_DATE$=DTE(AA-7:"%Yl%Mz%Dz"); GOSUB VALIDATE; DATE29$=TF_DATE$,D29$="Sunday",MSG29$="Palm Sunday"
22130 TF_DATE$=DTE(AA-7:"%Yl%Mz%Dz"); GOSUB VALIDATE; DATE29$=TF_DATE$,D29$="Sunday",MSG29$="Palm Sunday"
22140 RETURN 
