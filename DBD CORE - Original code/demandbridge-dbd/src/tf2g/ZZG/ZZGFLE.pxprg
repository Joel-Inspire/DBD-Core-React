0010 ! ZZGFLE - View Files Query"
0035 REM "5.7 - 09/06/24 - 11.736978 - crg - SSP# 307492
0037 REM "307492-DBD-487:PxPlus ODBC interface utility for DBD use           
0040 REM "Copyright 2024 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ZZGFLE","../ZZG/ZZ.EN"
0060 SETERR 0070; EXIT 
0070 EXIT ; REM QUIT ! SSP231522 jdf
0080 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 IOLIST TF_NAME$,PATH$
0130 IOLIST IOLOBJ$,TF_NAME$,TF_DESC$,TF_TYPE$,LEN$,OCC$,FORMAT$,VALID$,TF_PRINT$,HELP$,NOTES$,KEYDEF$,QUERY$,CLASS$,FLAGS$,DFLT$,ALT_NAME$
0140 _DDF=HFN; OPEN (_DDF)"providex.ddf"
0150 _DDE=HFN; OPEN (_DDE)"providex.dde"
0152 _ZZS=HFN; OPEN (_ZZS,ERR=*NEXT)"ZZGQRY"; GOTO 0200
0160 KEYED "../ZZG/ZZGQRY",39,,4152; GOTO 0152
0200 ! ^100
0210 I=0,K=0
0220 LIST_BOX LOAD LOG_FILE.CTL,""
0230 READ (_DDF,KEY="",KNO=1,DOM=0240)
0240 K$=KEY(_DDF,KNO=1,END=0310)
0245 IF POS("VIEW:"=K$)<>0 THEN READ (_DDF); GOTO 0240
0250 IF K1$=K$ THEN GOTO 0310 ELSE K1$=K$
0260 READ (_DDF,KEY=K$,KNO=1,REC=WRK$)IOL=0120
0270 IF OBJ_NME$=K$ OR KEC(_DDF,KNO=0)="000000" THEN GOTO 0240
0275 IF POS(WRK.TF_NAME$(1,3)="AR7APJ",3)<>0 THEN FILE_NO=HFN; OPEN (FILE_NO)WRK.TF_NAME$(1,3)+%C$; CHECK_TYPE$=FN%FIN$(FILE_NO,"KEY_SIZE"); CLOSE (FILE_NO); IF CHECK_TYPE$="0" THEN GOTO 0240; REM "SSP#202622
0280 I=I+1; IF WRK.TF_NAME$=LOG_FILE$ THEN K=I
0290 LIST_BOX LOAD LOG_FILE.CTL,0,WRK.TF_NAME$
0300 GOTO 0240
0310 RETURN 
0320 ! 
0330 SEL_FILE:
0340 ! 
0350 CLOSE (_MEM,ERR=*NEXT)
0360 _MEM=HFN; OPEN (_MEM)"*memory*"
0370 READ (_DDF,KEY=LOG_FILE$,KNO=1,DOM=*RETURN); DDF_KEY$=KEC(_DDF,KNO=0)
0380 READ (_DDE,KEY=DDF_KEY$,KNO=0,DOM=*NEXT)
0390 K$=KEY(_DDE,END=END_LOAD); IF K$(1,6)<>DDF_KEY$ THEN GOTO END_LOAD
0400 READ (_DDE,KEY=K$)IOL=0130
0410 WRITE (_MEM,KEY=TF_NAME$)IOL=0130
0420 IF POS(":1:"=KEYDEF$)<>0 THEN TF_DESC$="*"+TF_DESC$
0430 XX=POS("=MSG"=TF_DESC$); IF XX<>0 THEN EXECUTE "TF_DESC$="+TF_DESC$(XX+1)
0440 LIST_BOX LOAD LB_FIELDS.CTL,0,TF_DESC$+SEP+TF_NAME$; GOTO 0390
0450 X=X+1
0460 ! 
0470 END_LOAD:
0480 ! 
0490 CALL "*WINGRP;SHOW",FIELDS.GRP$
0500 A=LB_FIELDS.CTL,B=LB_FIELDS_SEL.CTL
0510 IF A'ITEMCOUNT<19 THEN A'LINES=A'ITEMCOUNT+1.5,B'LINES=A'LINES ELSE A'LINES=20.5,B'LINES=20.5
0520 SET_FOCUS A
0530 NEXT_ID=BT_SEL_ALL.CTL
0540 RETURN 
0550 ! 
0560 SEL_FIELDS:
0570 ! 
0580 LIST_BOX READ LB_FIELDS.CTL,IDX
0590 LIST_BOX LOAD LB_FIELDS_SEL.CTL,0,LB_FIELDS$
0600 LIST_BOX LOAD LB_FIELDS.CTL,IDX,*
0610 RETURN 
0620 ! 
0630 RESTORE_SEL_FIELDS:
0640 ! 
0650 IF _EOM$<>$0D$ AND _EOM$<>$02$ THEN RETURN 
0660 LIST_BOX READ LB_FIELDS_SEL.CTL,IDX
0670 LIST_BOX LOAD LB_FIELDS.CTL,0,LB_FIELDS_SEL$
0680 LIST_BOX LOAD LB_FIELDS_SEL.CTL,IDX,*
0690 RETURN 
0700 ! 
0710 SEL_ALL:
0720 ! 
0730 AA=LB_FIELDS.CTL'ITEMCOUNT; IF AA=0 THEN RETURN 
0740 FOR X=1 TO AA
0750 LIST_BOX FIND LB_FIELDS.CTL,1,LB$
0760 LIST_BOX LOAD LB_FIELDS_SEL.CTL,0,LB$
0770 LIST_BOX LOAD LB_FIELDS.CTL,1,*
0780 NEXT 
0790 NEXT_ID=BT_GENERATE.CTL
0800 RETURN 
0810 ! 
0820 DELETE_ALL:
0830 ! 
0840 AA=LB_FIELDS_SEL.CTL'ITEMCOUNT; IF AA=0 THEN RETURN 
0850 FOR X=1 TO AA
0860 LIST_BOX FIND LB_FIELDS_SEL.CTL,1,LB$
0870 LIST_BOX LOAD LB_FIELDS.CTL,0,LB$
0880 LIST_BOX LOAD LB_FIELDS_SEL.CTL,1,*
0890 NEXT 
0900 RETURN 
0910 ! 
0920 SEL_MOVE:
0930 ! 
0940 A=LB_FIELDS_SEL.CTL
0950 LIST_BOX READ A,IDX,ERR=*NEXT
0960 IF IDX=0 THEN RETURN 
0970 IF IDX+XX=0 THEN RETURN 
0980 IF IDX+XX>A'ITEMCOUNT THEN RETURN 
0990 LIST_BOX FIND A,IDX,LB$
1000 LIST_BOX LOAD A,IDX,*
1010 LIST_BOX LOAD A,IDX+XX,LB$
1020 LIST_BOX WRITE A,IDX+XX
1030 RETURN 
1040 ! 
1050 SEL_DOWN: XX=1; GOTO SEL_MOVE
1060 ! 
1070 SEL_UP: XX=-1; GOTO SEL_MOVE
1080 ! 
1090 GENERATE: B=LB_FIELDS_SEL.CTL,FMT$="",LBLST$="",DBFLD$="",IDX=0,NO=0,TEXT$="",ALL_VAL$="",ODBFLD$="",ODBCOND$="" ! SSP 223413
1100 ! 
1110 IF B'ITEMCOUNT=0 THEN MSGBOX "No Fields Selected",MSG("WARNING"),"!,TIM=3"; RETURN 
1120 READ (_DDF,KEY=LOG_FILE$,KNO=1,REC=WRK$)IOL=0120
1130 FOR X=1 TO B'ITEMCOUNT
1140 LIST_BOX FIND B,X,LB$
1150 TF_NAME$=LB$(POS(SEP=LB$)+1),DE$=LB$(1,POS(SEP=LB$)-1)
1160 READ (_MEM,KEY=TF_NAME$)IOL=0130
1165 IF STP(TF_PRINT$)<>"" AND TF_PRINT$(LEN(TF_PRINT$))="-" THEN TF_PRINT$="-"+TF_PRINT$(1,LEN(TF_PRINT$)-1)
1170 IF LEN(DE$)>NUM(LEN$) THEN LN=LEN(DE$)/1.1 ELSE LN=NUM(LEN$)+1
1180 IF TF_TYPE$="S" THEN JUSTIFY$="L",VAR$=TF_NAME$+"$",ALL_VAL$=ALL_VAL$+VAR$+"," ELSE JUSTIFY$="#R",VAR$="STR("+TF_NAME$+":"+QUO+TF_PRINT$+QUO+")",ALL_VAL$=ALL_VAL$+TF_NAME$+","
1190 IF CLASS$<>"" THEN GOSUB CHECK_CLASS
1200 IF POS("PHONE"=TF_NAME$)<>0 OR POS("FAX"=TF_NAME$)<>0 THEN CLASS$="PHONE"; GOSUB CHECK_CLASS
1210 GOSUB CHECK_VARIABLE_FMT
1220 IF NO=1 AND (TF_NAME$="CUST_CODE" OR TF_NAME$="VEND_CODE" OR TF_NAME$="ORDER_NUM" OR TF_NAME$="PO_NUM" OR TF_NAME$="BILL_TO_CUST_CODE") THEN GOTO 1250
1225 IF TF_TYPE$="S" THEN TEXT$+="@" ELSE TEXT$+=" "
1227 IF CLASS$="DATE-KKMMDD" THEN TEXT$(LEN(TEXT$),1)="D"
1230 FMT$=FMT$+"["+DE$+"]"+JUSTIFY$+STR(LN)+" "
1235 XX=POS("+"=VAR$); IF XX<>0 THEN XXX=POS("$"=VAR$(XX)),HTM1$=VAR$(XX+1,XXX-2) ELSE HTM1$=TF_NAME$
1238 HTML_TO_PRINT$=HTML_TO_PRINT$+VAR$+$09$,HTML_TO_FLD$=HTML_TO_FLD$+HTM1$+$09$ ! ,HTML_TO_DESC$=HTML_TO_DESC$+DE$+$09$
1239 IF POS("$"=VAR$)<>0 THEN VAR$="MID(STP("+VAR$+"),1,255)" ! SSP 210674
1240 LBLST$=LBLST$+VAR$+"+SEP+"
1250 DBFLD$=DBFLD$+TF_NAME$+"/"
1255 ODBFLD$=ODBFLD$+TF_NAME$+","
1260 NEXT 
1265 FMT$+=" [Key Information]L30 ",LBLST$+="FIL_NO_KEY$+SEP+",XX=POS("@"=TEXT$,-1) ! IF XX<>0 THEN TEXT$(XX,1)=" "
1266 AA=LB_FIELDS.CTL'ITEMCOUNT; IF AA=0 THEN ODBFLD$="*"
1267 ODBFLD$=STP(ODBFLD$,1,",")
1270 RETURN 
1280 ! 
1290 GENERATE_PHASE_II:
1300 ! 
1305 IF NUL(LOG_FILE$) THEN MSGBOX "No file selected"; RETURN 
1310 PRINT 'CAPTION'(LOG_FILE$+" - ZZGFLE.1")
1320 READ (_DDF,KEY=LOG_FILE$,KNO=1,REC=WRK$)IOL=0120
1330 IF POS("="=WRK.PATH$)<>0 THEN WRK.PATH$=WRK.PATH$(2) ELSE WRK.PATH$=QUO+WRK.PATH$+QUO
1340 IF LBLST$(LEN(LBLST$))="+" THEN LBLST$=LBLST$(1,LEN(LBLST$)-1)
1350 LB_LIST.CTL'FMT$=FMT$,IDX=0; LN$=STR(TCB(4)+10); EXECUTE LN$+" _FIL_NO=HFN;OPEN (_FIL_NO,IOL=*)"+WRK.PATH$
1360 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*)"AR1"+%C$
1370 NUMREC=NUM(FN%FIN$(_FIL_NO,"NUMREC")); NUMREC_2=NUMREC ! DIM NUMREC$[NUMREC]  ! SSP240174 jdf
1380 LN$=STR(TCB(4)+60); EXECUTE LN$+" IDX+=1; LIST_BOX LOAD LB_LIST.CTL,IDX,"+LBLST$
1390 LINE$=LST(PGM(NUM(LN$)))
1395 FROM_BEGIN=1; GOTO SEARCH ! SSP 196661
1400 ! 
1410 READ_FILE:
1412 IF NUL(OPTODBC$) THEN GOSUB CHECK_USE_ODBC END_IF ; IF OPTODBC$="YES" THEN GOSUB EXPORT_ODBC_QUERY; RETURN 
1420 ! 
1430 FIL_NO_KEY$=KEY(_FIL_NO,END=END_READ_FILE); READ (_FIL_NO)
1441 COUNT_2+=1 ! SSP240174 jdf
1445 IF OPT_2$="YES" THEN GOTO 1446 ELSE IF MOD(IDX,500)=0 THEN PHASE.CTL'VALUE$="Reading File :"+STP(STR(IDX:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))+" - "+STR(IDX/NUMREC*100)+"%"; CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"Please Wait, Reading File",0,25,10 ! SSP240174 jdf
1446 IF OPT_2$="YES" THEN IF MOD(COUNT_2,500)=0 THEN PHASE.CTL'VALUE$="Reading File :"+STP(STR(COUNT_2:"###,###,###"))+" of "+STP(STR(NUMREC_2:"###,###,###"))+" - "+STR(COUNT_2/NUMREC_2*100)+"%"; CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"Please Wait, Reading File",0,25,10 ! SSP240174 jdf
1447 REM IF WHO="jdf" THEN ESCAPE 
1448 IF LB_LIST.CTL'ITEMCOUNT=32767 THEN MSGBOX MSG("ZZGFLE_01"),MSG("WARNING"),"INFO,YESNO,top",OPT_2$; IF OPT_2$="NO" THEN NUMREC=IDX; GOTO END_READ_FILE ELSE IF OPT_2$="YES" THEN NUMREC=NUMREC-IDX; IDX=0; LIST_BOX LOAD LB_LIST.CTL,"" ! SSP240174 jdf 
1450 GOTO READ_FILE ! NUMREC$[IDX]=FIL_NO_KEY$; GOTO READ_FILE
1460 ! 
1470 END_READ_FILE:PRINT 'CAPTION'(LOG_FILE$+"> Records "+STR(IDX)+" - ZZGFLE.1")
1475 HIDE CONTROL PHASE.CTL
1477 CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"File Completed",1,25,10
1480 IF SORT_BY<>0 THEN LB_LIST.CTL'SORT=SORT_BY,SORT_BY=0
1485 IF EXE_FLG THEN GOSUB EXPORT; CMD_STR$="END" ! SSP231522 jdf  if EXE_FLG  is set to 1 (or "on") then the calling program is ZZGEXE, this means that the program ZZGEXE is using this program (ZZGFLE) to create it's Excel Spreadsheet
1490 ! 
1500 RETURN 
1510 ! 
1520 SEARCH:
1530 ! 
1540 DIM EXP$[8]; EXP$[1]="=",EXP$[2]="<=",EXP$[3]="=>",EXP$[4]="<>",EXP$[5]="<",EXP$[6]=">",YESNO$=""
1550 IF EXE_FLG<>1 THEN PROCESS "ZZGFLE.2","../ZZG/ZZ.EN",DBFLD$,VAR$,OPT$,TF_VALUE$,YESNO$ ! SSP231522 jdf
1555 IF FROM_BEGIN=1 AND YESNO$<>"YES" THEN FROM_BEGIN=0; GOTO READ_FILE ! SSP 196661
1560 IF YESNO$<>"YES" THEN RETURN 
1570 IDX=0,FROM_BEGIN=0 ! SSP 196661
1575 SHOW CONTROL PHASE.CTL
1580 LIST_BOX LOAD LB_LIST.CTL,""
1590 LIST_BOX LOAD LB_LIST.CTL,1,*
1600 XX=POS(VAR$=ALL_VAL$); IF XX<>0 THEN XXX=POS(","=ALL_VAL$(XX)),VAR$=ALL_VAL$(XX,XXX-1),TYPE=POS("$"=VAR$)
1610 EXECUTE "12605 IDX+=1; LIST_BOX LOAD LB_LIST.CTL,IDX,"+LBLST$
1615 COUNT=0
1620 READ (_FIL_NO,KEY="",DOM=*NEXT)
1630 ! 
1640 READ_FIL:
1642 IF NUL(OPTODBC$) THEN GOSUB CHECK_USE_ODBC END_IF ; IF OPTODBC$="YES" THEN GOSUB EXPORT_ODBC_QUERY; RETURN 
1645 IF OPT$="YES" THEN GOTO 1655 ELSE IF MOD(COUNT,500)=1 THEN PHASE.CTL'VALUE$="Reading File :"+STP(STR(COUNT:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))+" - "+STR(COUNT/NUMREC*100)+"%"; CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"Please Wait, Reading File",0,25,10 ! SSP#207081  ! SSP240174 jdf
1650 ! 
1655 IF OPT$="YES" THEN IF MOD(COUNT_2,500)=1 THEN PHASE.CTL'VALUE$="Reading File :"+STP(STR(COUNT_2:"###,###,###"))+" of "+STP(STR(NUMREC_2:"###,###,###"))+" - "+STR(COUNT_2/NUMREC_2*100)+"%"; CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"Please Wait, Reading File",0,25,10 ! SSP#207081   ! SSP240174 jdf
1660 READ (_FIL_NO,ERR=*NEXT,END=END_READ_FILE); COUNT+=1; COUNT_2+=1; GOTO 1670 ! SSP240174 jdf
1664 Y5=ERR ! SSP248243 jdf
1665 MSGBOX MSG("KEY: "+STR(KEC(_FIL_NO))+"  "+MSG(Y5)),MSG("WARNING"),"!,OK"
1670 IF STP(VAR$)="" THEN GOTO PRINT_REC
1671 IF OPT$<>"8" THEN GOTO 1675
1672 IF TYPE=0 THEN EXECUTE "if pos(value$=str("+VAR$+"))<>0 goto print_rec"
1673 IF TYPE<>0 THEN EXECUTE "if pos(value$="+VAR$+")<>0 goto print_rec"
1674 GOTO READ_FIL
1675 IF OPT$<>"7" THEN GOTO 1680
1676 IF TYPE=0 THEN EXECUTE "if mid(str("+VAR$+"),1,len(value$)) = value$ goto print_rec"
1678 IF TYPE<>0 THEN EXECUTE "if mid("+VAR$+",1,len(value$)) = value$ goto print_rec"
1679 GOTO READ_FIL
1680 IF TYPE=0 THEN EXECUTE "IF "+VAR$+" "+EXP$[NUM(OPT$)]+" NUM(TF_VALUE$,ERR=READ_FIL) GOTO PRINT_REC"
1690 IF TYPE<>0 THEN EXECUTE "IF STP("+VAR$+") "+EXP$[NUM(OPT$)]+" TF_VALUE$ GOTO PRINT_REC"
1700 GOTO READ_FIL
2000 CLOSE_FILES:
2010 CLOSE (_DDF,ERR=*NEXT)
2020 CLOSE (_DDE,ERR=*NEXT)
2030 CLOSE (_MEM,ERR=*NEXT)
2040 CLOSE (_FIL_NO,ERR=*NEXT)
2050 CLOSE (EXCEL,ERR=*NEXT)
2052 CLOSE (_ZZS,ERR=*NEXT)
2060 RETURN 
9999 END 
10000 ! 10000,10 Check Class
10010 CHECK_CLASS:
10020 ! 
10030 SWITCH CLASS$
10040 CASE "DATE-KKMMDD"
10050 VAR$="FN%FMT_TFDATE$("+TF_NAME$+"$,"+QUO+"MM/DD/YYYY"+QUO+")",JUSTIFY$="MDYC"
10055 IF LN<10 THEN LN=10
10060 BREAK
10070 CASE "ZIP"
10080 VAR$="STP(STR("+TF_NAME$+"$:"+QUO+"XXXXX XXXX"+QUO+"))"
10090 BREAK
10100 CASE "SALES_TAX"
10110 VAR$="STR("+TF_NAME$+"$:%SALES_TAX_MASK$)"; BREAK
10120 CASE "PHONE"
10130 VAR$="STR("+TF_NAME$+"$:%PHONE_MASK$)"
10140 BREAK
10142 CASE "DB-KK" ! SSP 228732 SSP 230049
10145 VAR$="FN%FMT_TFDATE$("+TF_NAME$+"$,"+QUO+"YYYY"+QUO+")" ! SSP 228732
10147 BREAK ! SSP 228732
10150 END SWITCH 
10160 RETURN 
10170 ! 
12600 PRINT_REC:! 12600,10
12606 IF LB_LIST.CTL'ITEMCOUNT=32767 THEN MSGBOX MSG("ZZGFLE_01"),MSG("WARNING"),"INFO,YESNO",OPT$; IF OPT$="NO" THEN NUMREC=COUNT; EXIT ELSE IF OPT$="YES" THEN NUMREC=NUMREC-COUNT; COUNT=0; IDX=0; LIST_BOX LOAD LB_LIST.CTL,"" ! SSP240174 jdf 
12610 GOTO READ_FIL
12620 ! 
12630 CHECK_VARIABLE_FMT:
12640 ! 
12650 DIM VAR_FMT$[10]; VAR_FMT$[1]="G/L",VAR_FMT$[2]="A/P",VAR_FMT$[3]="A/R",VAR_FMT$[4]="O/P",VAR_FMT$[5]="P/O",VAR_FMT$[6]="A/R",VAR_FMT$[7]="AP2",VAR_F$="GL_ACCT$         VEND_DIV$        CUST_DIV$        ORDER_DIV$       PO_DIV$          BILL_TO_CUST_DIV$VEND_CATEGORY$   "
12660 XX=POS(VAR$=VAR_F$,17); IF XX=0 THEN RETURN 
12670 XX=INT(XX/17)+1
12675 IF VAR_FMT$[XX]="AP2" THEN NO=1,LN=10,VAR$=VAR$+"+VEND_CATEGORY$",DE$=MSG("VEND_C"); GOTO 12720 ELSE NO=0
12680 IF VAR_FMT$[XX]="A/P" THEN NO=1,LN=10,VAR$=VAR$+"+VEND_CODE$",DE$=MSG("VENDOR"); GOTO 12720 ELSE NO=0
12690 IF VAR_FMT$[XX]="O/P" THEN NO=1,LN=9,VAR$=VAR$+"+ORDER_NUM$",DE$=MSG("ORD_NO"); GOTO 12720 ELSE NO=0
12700 IF VAR_FMT$[XX]="P/O" THEN NO=1,LN=10,VAR$=VAR$+"+PO_NUM$",DE$=MSG("PO_NUM"); GOTO 12720 ELSE NO=0
12710 IF VAR_FMT$[XX]="A/R" AND XX=3 THEN NO=1,LN=10,VAR$=VAR$+"+CUST_CODE$",DE$=MSG("CUSTOMER"); GOTO 12720 ELSE NO=0
12712 IF XX=6 AND VAR_FMT$[XX]="A/R" THEN NO=1,LN=10,VAR$=VAR$+"+BILL_TO_CUST_CODE$",DE$=MSG("BILL_T_C_C"),LN=LEN(DE$) ELSE NO=0
12720 VAR$="FN%ZZDISP$("+VAR$+","+QUO+VAR_FMT$[XX]+QUO+")"
12730 RETURN 
12740 SEL_LINE:
12742 IF WHO<>"csi" AND POS("admin"=LCS(%ROLE$))=0 THEN RETURN 
12745 LB_LIST$=LB_LIST$(1,LEN(LB_LIST$)-1)
12750 %FIRST_KEY$=LB_LIST$(POS(SEP=LB_LIST$,-1)+1),SORT_BY=LB_LIST.CTL'SORT
12760 %CHN_N=_FIL_NO,%FILE_NAME$=FIN(%CHN_N,"FILENAME"); PROCESS "FILEMANT","../ZZG/ZZ.EN","1" ! SSP#183519
12770 READ (_FIL_NO,KEY="",DOM=*NEXT)
12775 PHASE.CTL'VALUE$="Reading File :"; SHOW CONTROL PHASE.CTL
12780 LIST_BOX LOAD LB_LIST.CTL,""
12790 NUMREC=NUM(FN%FIN$(_FIL_NO,"NUMREC")),IDX=0 ! DIM NUMREC$[NUMREC]
12800 EXECUTE LINE$
12810 GOTO READ_FILE
13000 GRAPHIC: SH=1
13010 FOR A=37 TO 1 STEP -1
13015 CT=EVN("bt"+STR(A)+".ctl")
13020 SHOW CONTROL CT
13025 WAIT .5
13030 FOR BB=1 TO 100000
13040 NEXT 
13050 NEXT 
13070 FOR A=1 TO 37
13075 CT=EVN("bt"+STR(A)+".ctl")
13080 HIDE CONTROL CT
13085 WAIT .5
13090 FOR BB=1 TO 100000
13100 NEXT 
13110 NEXT 
13120 L=L+1; IF L<=40 THEN GOTO 13010
14000 WRITE_REC:
14010 LOG_F$=PAD(LOG_FILE$,30)
14020 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"000")%C$,%X3$(40,3),LOG_F$,"000",WRK.PATH$,ALL_VAL$
14030 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"001")FMT$
14040 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"002")LBLST$
14050 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"003")DBFLD$
14060 MSGBOX "Query Record: "+STP(LOG_F$)+SEP+SEP+"Updated","Update","!,tim=3"
14070 RETURN 
14100 DELETE_REC:
14110 LOG_F$=PAD(LOG_FILE$,30)
14120 FOR AA=0 TO 3
14130 REMOVE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+STR(AA:"000"),DOM=*NEXT)
14140 NEXT 
14150 MSGBOX "Query Record: "+STP(LOG_F$)+SEP+SEP+"Deleted","Delete","!,tim=3"
14160 RETURN 
15000 ! 
15010 EXPORT:
15015 IF %EXPORT_TO_EXCEL THEN MSGBOX MSG("NOT_AUT"),MSG("WARNING"),"STOP"; EXIT 
15020 ! 
15030 IF DEC(MID(MSE,22,1))>3 THEN WINDX=1,WDX$="[wdx]" ELSE WINDX=0,WDX$=""
15035 PHASE.CTL'VALUE$="Exporting File...."
15036 SETERR TRAP_ERROR ! ssp 307374
15040 SHOW CONTROL PHASE.CTL; GOSUB EXCEL
15041 IF SET_ESC THEN SET_ESC=0; GOTO 15070 ! SSP 307374
15042 CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"Auto Format",0
15050 CALL "*wingrp;hide",EXPORT.GRP$
15060 NEXT_ID=BT_EXPORT.CTL
15065 WRITE RECORD (EXCEL)"[Format.Auto]"
15070 CLOSE (EXCEL,ERR=*NEXT)
15075 HIDE CONTROL PHASE.CTL
15077 CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,%USER_NAME$+", Export Done",1
15078 CALL "[WDX]*CMDWORD;CLOSE",ERR=*NEXT,OB_EXCEL
15080 RETURN 
15090 EXCEL:
15110 R=0
15112 CALL "[wdx]*CMDWORD;GET_EXCEL",ERR=*NEXT,OB_EXCEL,TF_NAME$; IF TF_NAME$<>"" THEN GOTO 15130
15115 SYSTEM_HELP "excel.exe"; GOTO 15130
15120 IF WINDX THEN EXECUTE "[wdx]invoke "+QUO+"c:\program Files\Microsoft Office\Office\excel.exe"+QUO ELSE INVOKE "c:\program Files\Microsoft Office\Office\excel.exe"
15130 WAIT 2
15135 PHASE.CTL'VALUE$="Exporting File....:Creating Header"; CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"Creating Header",0
15140 GOSUB CREATE_HEADER
15170 EXCEL=HFN; IF TF_NAME$="" THEN OPEN (EXCEL,ERR=NO_EXCEL)"[wdx][dde]excel;" ELSE OPEN (EXCEL,ERR=NO_EXCEL)"[wdx][dde]Excel;"+TF_NAME$
15180 R=1
15190 K$="R"+STR(R)+"C1:R"+STR(R)+"C"+STR(COL); IF POS("AR1"=PTH(_FIL_NO))<>0 OR POS("FMZ"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15199 ! SSP 204008,SSP#218541 WO244750
15191 IF POS("FS2"=PTH(_FIL_NO))<>0 OR POS("ECA"=PTH(_FIL_NO))<>0 OR POS("FT4"=PTH(_FIL_NO))<>0 OR POS("FS1"=PTH(_FIL_NO))<>0 OR POS("AXS"=PTH(_FIL_NO))<>0 OR POS("FT3"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15199 ! SSP 203104 223413!SSP#230232!SSP#236843 SSP 236013 WO244750!SSP#268772!Moved as root 3/5/14 tma
15192 IF POS("FM1"=PTH(_FIL_NO))<>0 OR POS("QS1"=PTH(_FIL_NO))<>0 OR POS("EE1"=PTH(_FIL_NO)) THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15199 ! SSP#228872 WO244750!DBSPT-70047SSP#307195
15193 IF POS("AZB"=PTH(_FIL_NO))<>0 OR POS("ECS"=PTH(_FIL_NO))<>0 OR POS("IC0"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15199 ! SSP 195775 ! SSP231522 jdf WO244750
15194 IF POS("XPD"=PTH(_FIL_NO))<>0 OR POS("ECQ"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15199 ! SSP#241630 !Moved as root tma 10/13/2010 WO244750
15195 IF POS("SM0"=PTH(_FIL_NO))<>0 OR POS("SM4"=PTH(_FIL_NO))<>0 OR POS("SM7"=PTH(_FIL_NO)) OR POS("SMI"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15199 ! WO244750
15196 IF POS("FV2"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15199 ! WO252273 **dmm added as root**
15197 IF POS("AZT"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15199 ! WO253652 ** Moved as root (tma) 4/17/2012
15198 WRITE RECORD (EXCEL,KEY=K$,ERR=*NEXT)HEADER$; COL_LEN=0 ! WO244750
15200 TEXT=0 ! len of all column
15201 XX=POS(","=ALL_LEN$); IF XX=0 THEN GOTO 15210
15203 COL_LEN+=1,VAL$=ALL_LEN$(1,XX-1),ALL_LEN$=ALL_LEN$(XX+1)
15205 BB$="[SELECT("+QUO+"R1C"+STR(COL_LEN)+":R"+STR(LB_LIST.CTL'ITEMCOUNT+1)+"C"+STR(COL_LEN)+QUO+","+QUO+"R"+STR(LB_LIST.CTL'ITEMCOUNT+1)+"C"+STR(COL_LEN)+QUO+")]"; WRITE RECORD (EXCEL)BB$
15206 IF NUM(VAL$)>255 THEN VAL$="255" ! SSP 210674
15208 WRITE RECORD (EXCEL)"[Column.width("+VAL$+")]"; IF COL_LEN<=LEN(TEXT$) AND TEXT$(COL_LEN,1)="@" THEN WRITE RECORD (EXCEL)"[Format.Number("+QUO+TEXT$(COL_LEN,1)+QUO+")]" ELSE IF COL_LEN<=LEN(TEXT$) AND TEXT$(COL_LEN,1)=" " THEN WRITE RECORD (EXCEL)"[Format.Number("+QUO+"###,###,###.00_);[RED](###,###,###.00)"+QUO+")]" ELSE IF COL_LEN<=LEN(TEXT$) AND TEXT$(COL_LEN,1)="D" THEN WRITE RECORD (EXCEL)"[Format.Number("+QUO+"mm/dd/yyyy"+QUO+")]"
15209 GOTO 15201
15210 WRITE RECORD (EXCEL)"[SELECT(""R1C1:R1"+X$+"C1"","""+"R1"+"C1"")]"
15211 CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"Reading Records",0
15215 FOR REC=1 TO LB_LIST.CTL'ITEMCOUNT
15220 LIST_BOX FIND LB_LIST.CTL,REC,TF_VALUE$,ERR=*NEXT ! SSP#207081       
15222 XX=POS(SEP=TF_VALUE$,-1),TF_VALUE$=TF_VALUE$(1,XX)
15225 ! XX=POS(SEP=TF_VALUE$); IF XX<>0 THEN TF_VALUE$=TF_VALUE$(XX+1)
15230 XX=POS(SEP=TF_VALUE$); IF XX<>0 THEN TF_VALUE$(XX,1)=$09$; GOTO 15230
15240 K$="R"+STR(R+REC)+"C1:R"+STR(R+REC)+"C"+STR(COL)
15241 ! SSP241153 **dmm entered as root** - IF POS("AZB"=PTH(_FIL_NO))<>0 THEN GOSUB TAB_X_TAB
15242 WRITE RECORD (EXCEL,KEY=K$)TF_VALUE$
15243 IF MOD(REC,500)=0 THEN PHASE.CTL'VALUE$="Exporting File :"+STP(STR(REC:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###")); CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"Export Records : "+STP(STR(REC:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))
15244 NEXT 
15245 FMT$=B_FMT$
15248 RETURN 
15250 CREATE_HEADER: B_FMT$=FMT$
15255 XX=POS(" [Key Information]L30 "=FMT$); IF XX<>0 THEN FMT$=FMT$(1,XX-1)
15260 HEADER$="",COL=0,ALL_LEN$=""
15270 XX=POS("["=FMT$); IF XX=0 THEN RETURN 
15280 XXX=POS("]"=FMT$(XX)),COL=COL+1
15290 TMP$=FMT$(XX+1,XXX-1-XX),FMT$=FMT$(XXX+XX),HEADER$=HEADER$+TMP$+$09$
15300 XX=POS(" "=FMT$),TMP$=FMT$(1,XX-1),FMT$=FMT$(XX+1)
15500 ! Rutine for len
15510 IF POS(TMP$(1,1)="0123456789")=0 THEN TMP$=TMP$(2); GOTO 15510
15520 ALL_LEN$=ALL_LEN$+TMP$+","
15600 GOTO 15270
16000 HTML_FILE:! 16000,10
16010 SHOW CONTROL PHASE.CTL
16020 PHASE.CTL'VALUE$="Creating Header Information"
16030 GOSUB CREATE_HEADER; FMT$=B_FMT$
16040 ! SYSTEM_HELP "winword.exe"; WAIT 3
16050 ! _WORD=HFN; OPEN (_WORD)"[dde]winword;"
16060 TMP$="/tmp/"+LOG_FILE$+FID(0)+".xml"; ERASE TMP$,ERR=*NEXT
16070 PHASE.CTL'VALUE$="Define Temp File"
16080 SERIAL TMP$; TMP=HFN; OPEN LOCK (TMP)TMP$; GOSUB CREATE_DEF
16090 PRINT (TMP)"<"+LOG_FILE$+">"
16100 FOR REC=1 TO LB_LIST.CTL'ITEMCOUNT
16110 LIST_BOX FIND LB_LIST.CTL,REC,TF_VALUE$
16120 XX=POS(SEP=TF_VALUE$,-1),TF_VALUE$=TF_VALUE$(1,XX-1),XX=POS(SEP=TF_VALUE$,-1),REC_KEY$=TF_VALUE$(XX+1),TF_VALUE$=TF_VALUE$(1,XX)
16130 REC_KEY$=SUB(SUB(SUB(SUB(SUB(REC_KEY$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
16131 YES=0
16135 XX=POS(CHR(127)<=REC_KEY$); IF XX<>0 THEN YES=1,TC$=REC_KEY$(XX,1); REC_KEY$=SUB(REC_KEY$,TC$,"&#"+STR(ASC(TC$))+";"); GOTO *SAME
16140 PRINT (TMP)"<Record Key="+QUO+REC_KEY$+QUO+">"
16150 B_HEADER$=HEADER$,B_HTML_TO_FLD$=HTML_TO_FLD$
16160 NXT_FLD: VAL1=POS(SEP=TF_VALUE$); IF VAL1=0 THEN GOTO END_REC ELSE VAL1$=TF_VALUE$(1,VAL1-1),TF_VALUE$=TF_VALUE$(VAL1+1)
16170 VAL1=POS($09$=HTML_TO_FLD$); IF VAL1=0 THEN CONTINUE ELSE VAL2$=HTML_TO_FLD$(1,VAL1-1),HTML_TO_FLD$=HTML_TO_FLD$(VAL1+1)
16180 VAL1=POS($09$=HEADER$); IF VAL1=0 THEN CONTINUE ELSE VAL3$=HEADER$(1,VAL1-1),HEADER$=HEADER$(VAL1+1)
16190 VAL3$=SUB(SUB(SUB(SUB(SUB(VAL3$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
16200 VAL1$=SUB(SUB(SUB(SUB(SUB(VAL1$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
16205 IF YES THEN XX=POS(CHR(127)<=VAL1$); IF XX<>0 THEN YES=1,TC$=VAL1$(XX,1); VAL1$=SUB(VAL1$,TC$,"&#"+STR(ASC(TC$))+";"); GOTO *SAME
16210 PRINT (TMP)DIM(5)+"<"+LCS(VAL2$)+" Desc="+QUO+STP(VAL3$)+QUO+">"+STP(VAL1$)+"</"+LCS(VAL2$)+">"
16220 GOTO NXT_FLD
16230 END_REC:
16240 PRINT (TMP)"</Record>"
16250 HEADER$=B_HEADER$,HTML_TO_FLD$=B_HTML_TO_FLD$
16260 ! CLIP_BOARD WRITE REC$; REC$=""; WRITE RECORD (_WORD)"[editpaste]"; WRITE RECORD (_WORD)"[InsertPara]"; L=0
16270 IF MOD(REC,500)=0 THEN PHASE.CTL'VALUE$="Creating Records :"+STP(STR(REC:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))
16280 NEXT 
16290 PRINT (TMP)"</"+LOG_FILE$+">"
16300 CLOSE (TMP)
16310 GOSUB SEND_FILES
16320 HIDE CONTROL PHASE.CTL
16330 RETURN 
16340 SEND_FILES:
17100 ! 17100,10
17110 F$="\\"+NID+TMP$
17120 XX=POS("/"=TMP$); IF XX<>0 THEN TMP$(XX,1)="\"; GOTO 17120
17125 MSGBOX "File Done: "+TMP$+SEP+SEP+"Do you Wish to View File?",MSG("CONFIRMING"),"INFO,YESNO",OPT$; IF OPT$="NO" THEN RETURN 
17130 EXP=HFN; OPEN (EXP,ERR=*NEXT)"[dde]explorer;\\"+NID+TMP$
17135 CLOSE (EXP)
17140 RETURN 
17150 SYSTEM_HELP "winword.exe"
17160 WAIT 2
17170 _WINWORD=HFN; OPEN (_WINWORD)"[dde]winword;"
17180 WRITE RECORD (_WINWORD)"[InsertFile .Name="+QUO+F$+QUO+"]"
17190 WAIT 3
17200 WRITE RECORD (_WINWORD)"[EditSelectAll]"
17210 WAIT 1
17220 WRITE RECORD (_WINWORD)"[FormatFont .Points=7, .FONT="+QUO+"Courier New"+QUO+"]"
17230 WAIT 1
17240 WRITE RECORD (_WINWORD)"[FilePageSetup .TopMargin=108.18]"
17250 WRITE RECORD (_WINWORD)"[FIlePageSetup .BottomMargin=36.03]"
17260 WRITE RECORD (_WINWORD)"[FilePageSetup .LeftMargin=18.02]"
17270 WRITE RECORD (_WINWORD)"[FilePageSetup .RightMargin=18.02]"
17280 WRITE RECORD (_WINWORD)"[Viewzoom .zoompercent=125]"
17290 WRITE RECORD (_WINWORD)"[startofdocument(0)]"
17300 WRITE RECORD (_WINWORD,ERR=*NEXT)"[EditReplace.Find="+QUO+CHR(138)+QUO+",.Replace="+QUO+QUO+",.Direction=0,.ReplaceAll,.WRap=0]"
17310 WRITE RECORD (_WINWORD)"[FileSaveAs .name="+QUO+LOG_FILE$+".txt"+QUO+"]"
17320 CLOSE (_WINWORD)
17330 RETURN 
17340 CREATE_DEF:
17350 PHASE.CTL'VALUE$="Creating Definition"
17360 PRINT (TMP)"<?xml version="+QUO+"1.0"+QUO+" standalone="+QUO+"yes"+QUO+"?>"
17370 PRINT (TMP)"<!DOCTYPE "+LOG_FILE$
17380 PRINT (TMP)DIM(5)+"["
17390 PRINT (TMP)DIM(5)+"<!ELEMENT "+LOG_FILE$+" (Record*)>"
17400 B_HTML_TO_FLD$=LCS(HTML_TO_FLD$),B_HTML_TO_FLD$=SUB(B_HTML_TO_FLD$,$09$,","),B_HTML_TO_FLD$=B_HTML_TO_FLD$(1,LEN(B_HTML_TO_FLD$)-1)
17410 PRINT (TMP)DIM(5)+"<!ELEMENT Record ("+B_HTML_TO_FLD$+")>"
17420 PRINT (TMP)DIM(5)+"<!ATTLIST Record Key CDATA #IMPLIED>"
17430 B_HTML_TO_FLD$=B_HTML_TO_FLD$+","
17440 NXT_FIELDS:
17450 XX=POS(","=B_HTML_TO_FLD$); IF XX=0 THEN GOTO END_FIELDS
17460 VAL$=B_HTML_TO_FLD$(1,XX-1),B_HTML_TO_FLD$=B_HTML_TO_FLD$(XX+1)
17470 PRINT (TMP)DIM(5)+"<!ELEMENT "+VAL$+" (#PCDATA)>"
17480 PRINT (TMP)DIM(5)+"<!ATTLIST "+VAL$+" Desc CDATA #IMPLIED>"
17490 GOTO NXT_FIELDS
17500 END_FIELDS:
17510 PRINT (TMP)DIM(5)+"]>"
17520 PHASE.CTL'VALUE$="Ending Definition"
17530 RETURN 
18000 LABEL: LBFLD$="",CO=0,NUMREC=LB_LIST.CTL'ITEMCOUNT
18005 CLIP_BOARD READ BACKUP_CLIP$
18010 GOSUB CREATE_HEADER; FMT$=B_FMT$
18020 LB_FLD$=DBFLD$,LB_FLD$=HEADER$,LB_FLD$=SUB(LB_FLD$,$09$,"/")
18030 XX=POS("/"=LB_FLD$); IF XX=0 THEN GOTO NXTLB
18040 CO=CO+1,LBFLD$=LBFLD$+"[@("+STR(CO)+")"+LB_FLD$(1,XX-1)+"]"+SEP,LB_FLD$=LB_FLD$(XX+1)
18050 GOTO 18030
18060 NXTLB:
18070 PROCESS "ZZGFLE3","../ZZG/ZZ.EN",LBFLD$,TF_TYPE$,FONT$,TF_SIZE$,PRT$
18080 IF TF_TYPE$="" THEN RETURN 
18090 DIM LINE$[100],LN$[100]; LI=0
18100 XX=POS(SEP=LBFLD$); IF XX<>0 THEN LI=LI+1,LINE$[LI]=LBFLD$(1,XX-1),LBFLD$=LBFLD$(XX+1); GOTO *SAME
18110 SHOW CONTROL PHASE.CTL; PRINT 'CURSOR'(1),
18120 PHASE.CTL'VALUE$="Exporting File :"+STP(STR(1:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))
18130 FOR LINE=1 TO LI
18140 HH$=LINE$[LINE]
18150 XX=POS("@("=HH$); IF XX=0 THEN CONTINUE
18160 XXX=POS(")"=HH$(XX)); IF XXX=0 THEN CONTINUE
18165 TX$="",XXXX=POS("]"=HH$(XX+XXX)),UUU$=HH$(XX+XXX,XXXX),XXXX=POS(QUO=UUU$); IF XXXX<>0 THEN XXXXXX=POS(QUO=UUU$,-1); IF XXXXXX<>0 AND XXXXXX<>XXXX THEN TX$=UUU$(XXXX,XXXXXX-XXXX+1),TX$=EVS(TX$); DIM JJ$(LEN(UUU$)); HH$=SUB(HH$,UUU$,JJ$)
18170 HHH$=HH$(XX,XXX),HHH$=SUB(SUB(HHH$,"@(",""),")",""),HH$(XX,XXX)=DIM(XXX)
18175 IF TX$<>"" THEN LN$[LINE]=LN$[LINE]+"stp(tf_value$["+HHH$+"])+"+QUO+TX$+QUO+"+"+QUO+" "+QUO+""+"+"; GOTO 18150
18180 LN$[LINE]=LN$[LINE]+"stp(tf_value$["+HHH$+"])+"+QUO+" "+QUO+""+"+"
18190 GOTO 18150
18200 NEXT LINE
18210 FOR LINE=1 TO LI
18220 HH$=LN$[LINE]
18230 IF HH$(LEN(HH$))="+" THEN HH$=HH$(1,LEN(HH$)-1)
18240 LN$[LINE]=HH$
18250 NEXT LINE
18260 SYSTEM_HELP "winword.exe"
18270 WAIT 2
18280 _WIN=HFN; OPEN (_WIN)"[dde]winword;"
18290 PHASE.CTL'VALUE$="Setup Label"
18291 _ZZP=FFN("ZZPARM"); IF _ZZP<=0 THEN _ZZP=HFN; OPEN (_ZZP)"ZZPARM"
18292 READ (_ZZP,KEY="*label"+MID(%DB_CUSTOM$,1,4),DOM=18310)AA$,TOP_MARGIN,SIDE_MARGIN,VERT_PITCH,HOR_PITCH,DB_PAGE$,LABEL_HEIGHT,LABEL_WIDTH,NUM_ACROSS,NUM_DOWN
18295 WRITE RECORD (_WIN,ERR=*NEXT)"[ToolsCreateLabels .LabelDotMatrix=0, .LabelTopMargin="+STR((TOP_MARGIN*72))+", .LabelSideMargin="+STR((SIDE_MARGIN*72))+", .LabelVertPitch="+STR((VERT_PITCH*72))+", .LabelHorPitch="+STR((HOR_PITCH*72))+", .LabelHeight="+STR((LABEL_HEIGHT*72))+", .LabelWidth="+STR((LABEL_WIDTH*72))+", .LabelAcross="+STR(NUM_ACROSS)+", .LabelDown="+STR(NUM_DOWN)+", .AddtoDocument "+"]"
18296 GOTO 18320
18310 WRITE RECORD (_WIN,ERR=*NEXT)"[ToolsCreateLabels .LabelListIndex = 0, .LabelIndex = "+STR(NUM(TF_TYPE$(1,4)))+", .LabelTray = 1, .AddToDocument"+"]"
18320 WAIT 1
18325 WRITE RECORD (_WIN,ERR=*NEXT)"[Appminimize]"
18330 FOR REC=1 TO LB_LIST.CTL'ITEMCOUNT
18340 LIST_BOX FIND LB_LIST.CTL,REC,TF_VALUE$
18350 DIM TF_VALUE$[100]; LN=0
18360 XX=POS(SEP=TF_VALUE$); IF XX<>0 THEN LN=LN+1,TF_VALUE$[LN]=TF_VALUE$(1,XX-1),TF_VALUE$=TF_VALUE$(XX+1); GOTO *SAME
18370 LS$=""
18380 FOR AA=1 TO LI
18390 IF STP(LN$[AA])="" THEN BREAK
18400 VV$=EVS(LN$[AA]); IF STP(VV$)="" THEN CONTINUE
18410 VV$=SUB(VV$,QUO,"")
18420 ! LS$=LS$+VV$+$0A$; !OPTION CLIP BOARD
18425 WRITE RECORD (_WIN)"[Insert "+QUO+VV$+QUO+"]"
18430 WRITE RECORD (_WIN)"[InsertPara]"
18440 IF MOD(REC,10)=0 THEN PHASE.CTL'VALUE$="Exporting File :"+STP(STR(REC:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))
18450 NEXT AA
18460 ! CLIP_BOARD WRITE LS$; WAIT .5; WRITE RECORD (_WIN)"[EditPaste]" ;! OPTION CLIP_BOARD
18470 WRITE RECORD (_WIN)"[Nextcell()]"
18480 NEXT REC
18490 WRITE RECORD (_WIN)"[StartofDocument]"
18500 WRITE RECORD (_WIN)"[EditSelectAll]"
18505 ! WRITE RECORD (_WIN)"[CenterPara]"
18506 ! WRITE RECORD (_WIN)"[EditSelectAll]"
18510 WRITE RECORD (_WIN)"[FormatFont .Points="+TF_SIZE$+", .FONT="+QUO+FONT$+QUO+"]"
18520 IF NUM(PRT$) THEN WRITE RECORD (_WIN)"[FilePrint .Range=0]"
18525 WRITE RECORD (_WIN)"[Viewzoom .zoompercent=100]"; WRITE RECORD (_WIN)"[ViewNormal]"
18527 CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,%USER_NAME$+", Label Done",1
18530 WRITE RECORD (_WIN)"[AppMaximize]"
18540 CLOSE (_WIN)
18550 HIDE CONTROL PHASE.CTL
18560 PRINT 'CURSOR'(0),
18565 CLIP_BOARD WRITE BACKUP_CLIP$
18570 RETURN 
18600 NO_EXCEL: MSGBOX "Excel not Found",MSG("WARNING"),"INFO,TIM=2"; EXIT 
19000 HEADER_FM1:
19010 CLOSE (EXCEL); EXCEL=HFN; IF TF_NAME$="" THEN OPEN (EXCEL,ERR=NO_EXCEL)"[wdx][dde]excel;" ELSE OPEN (EXCEL,ERR=NO_EXCEL)"[wdx][dde]Excel;"+TF_NAME$
19020 HED$=HEADER$,CNT=0
19025 CONT:
19030 XX=POS($09$=HED$); IF XX=0 THEN RETURN 
19040 HH$=HED$(1,XX-1),HED$=HED$(XX+1),CNT+=1
19050 K$="R1C"+STR(CNT)+":R1C"+STR(CNT)
19060 WRITE RECORD (EXCEL,KEY=K$)HH$
19070 GOTO CONT
20000 CUSTOM_LABEL:
20010 INIT_LABEL:
20020 _ZZP=FFN("ZZPARM"); IF _ZZP<=0 THEN _ZZP=HFN; OPEN (_ZZP)"ZZPARM"
20030 CALL "*WINGRP;DISABLE",FIELDS.GRP$; CALL "*wingrp;disable",BUTT.GRP$
20040 NEXT_ID=LABEL_CODE.CTL
20050 RETURN 
20060 FIND_REC:
20070 IF QRY_VAL$<>"" THEN LABEL_CODE$=QRY_VAL$
20080 LABEL_CODE$=STR(NUM(LABEL_CODE$):"0000",ERR=*NEXT),LABEL_CODE.CTL'VALUE$=LABEL_CODE$; GOTO 20090
20085 LABEL_CODE$=PAD(LABEL_CODE$,4," ")
20090 READ (_ZZP,KEY="*label"+LABEL_CODE$,DOM=NEW_RECORD)AA$,TOP_MARGIN,SIDE_MARGIN,VERT_PITCH,HOR_PITCH,DB_PAGE$,LABEL_HEIGHT,LABEL_WIDTH,NUM_ACROSS,NUM_DOWN
20100 TF_NAME$=AA$(11,30),REFRESH_FLG=1
20110 CALL "*WINGRP;ENABLE",FIELDS.GRP$; CALL "*wingrp;enable",BUTT.GRP$
20120 RETURN 
20130 NEW_RECORD:
20140 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",ANSWER$
20150 IF ANSWER$="NO" THEN NEXT_ID=LABEL_CODE.CTL; EXIT 
20160 DIM AA$(40)
20170 CALL "*WINGRP;ENABLE",FIELDS.GRP$; CALL "*wingrp;enable",BUTT.GRP$
20180 NEXT_ID=NAME.CTL
20190 RETURN 
20200 CLEAR_FIELDS:
20210 LABEL_CODE$="",TF_NAME$=""
20220 TOP_MARGIN=0,SIDE_MARGIN=0,VERT_PITCH=0,HOR_PITCH=0,DB_PAGE$="",LABEL_HEIGHT=0,LABEL_WIDTH=0,NUM_ACROSS=0,NUM_DOWN=0
20230 REFRESH_FLG=1
20240 RETURN 
20300 WRITE_REC_LABEL:
20310 DIM AA$(40)
20320 AA$(1,40)="*label"+LABEL_CODE$+TF_NAME$
20330 WRITE (_ZZP,KEY="*label"+LABEL_CODE$)AA$,TOP_MARGIN,SIDE_MARGIN,VERT_PITCH,HOR_PITCH,DB_PAGE$,LABEL_HEIGHT,LABEL_WIDTH,NUM_ACROSS,NUM_DOWN
20340 GOSUB CLEAR_FIELDS
20350 NEXT_ID=LABEL_CODE.CTL
20360 CALL "*wingrp;disable",FIELDS.GRP$; CALL "*wingrp;disable",BUTT.GRP$
20370 RETURN 
20380 DELETE_REC_LABEL:
20390 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
20400 IF _X$="NO" THEN EXIT 
20420 REMOVE (_ZZP,KEY="*label"+LABEL_CODE$,DOM=*NEXT)
20430 GOSUB CLEAR_FIELDS
20440 NEXT_ID=LABEL_CODE.CTL
20450 CALL "*WINGRP;DISABLE",FIELDS.GRP$; CALL "*WINGRP;DISABLE",BUTT.GRP$
20460 RETURN 
20500 CUSTOM:
20510 _ZZP=FFN("ZZPARM"); IF _ZZP<=0 THEN _ZZP=HFN; OPEN (_ZZP)"ZZPARM"
20515 DB_CUSTOM$=""
20520 READ (_ZZP,KEY="*label",DOM=*NEXT)
20530 ZZP_K$=KEY(_ZZP,END=0999); READ (_ZZP)AA$
20540 IF MID(ZZP_K$,1,6)<>"*label" THEN GOTO END_CUSTOM
20550 DB_CUSTOM$+=AA$(7,4)+" - "+AA$(11,30)+"/"
20560 GOTO 20530
20565 END_CUSTOM:
20570 LIST_BOX LOAD DB_CUSTOM.CTL,DB_CUSTOM$
20580 REFRESH_FLG=1
20590 RETURN 
21000 CUSTOM_LABEL_WORD:
21005 IF CB_CUST$<>"1" THEN RETURN 
21010 CALL "[WDX]*CMDWORD;CUSTOM_LABEL",LABEL$
21012 LABEL_CODE$="1000"
21015 _ZZP=FFN("ZZPARM"); IF _ZZP<=0 THEN _ZZP=HFN; OPEN (_ZZP)"ZZPARM"
21020 XX=POS("|"=LABEL$); IF XX=0 THEN GOTO END_LABEL_WORD
21030 LL$=LABEL$(1,XX-1),LABEL$=LABEL$(XX+1)
21040 XX=POS(","=LL$),TF_NAME$=LL$(1,XX-1),LL$=LL$(XX+1)
21050 XX=POS(","=LL$),TOP_MARGIN=NUM(LL$(1,XX-1))/72,LL$=LL$(XX+1)
21060 XX=POS(","=LL$),SIDE_MARGIN=NUM(LL$(1,XX-1))/72,LL$=LL$(XX+1)
21070 XX=POS(","=LL$),VERT_PITCH=NUM(LL$(1,XX-1))/72,LL$=LL$(XX+1)
21080 XX=POS(","=LL$),HOR_PITCH=NUM(LL$(1,XX-1))/72,LL$=LL$(XX+1)
21090 XX=POS(","=LL$),LABEL_HEIGHT=NUM(LL$(1,XX-1))/72,LL$=LL$(XX+1)
21100 XX=POS(","=LL$),LABEL_WIDTH=NUM(LL$(1,XX-1))/72,LL$=LL$(XX+1)
21110 XX=POS(","=LL$),NUM_ACROSS=NUM(LL$(1,XX-1)),LL$=LL$(XX+1)
21120 XX=POS(","=LL$),NUM_DOWN=NUM(LL$(1,XX-1)),LL$=LL$(XX+1)
21130 XX=POS(","=LL$),DB_PAGE$=LL$(1,XX-1),LL$=LL$(XX+1)
21140 DIM AA$(40)
21150 AA$(1,40)="*label"+LABEL_CODE$+TF_NAME$
21160 WRITE (_ZZP,KEY="*label"+LABEL_CODE$)AA$,TOP_MARGIN,SIDE_MARGIN,VERT_PITCH,HOR_PITCH,DB_PAGE$,LABEL_HEIGHT,LABEL_WIDTH,NUM_ACROSS,NUM_DOWN
21170 LABEL_CODE$=STR(NUM(LABEL_CODE$)+1:"0000")
21180 GOTO 21020
21190 END_LABEL_WORD:RETURN 
22000 TAB_X_TAB:
22010 FOR AAA=1 TO COL
22030 K$="R"+STR(R+REC)+"C"+STR(AAA)+":R"+STR(R+REC)+"C"+STR(AAA)
22040 XX=POS($09$=TF_VALUE$)
22050 VAL$=TF_VALUE$(1,XX-1),TF_VALUE$=TF_VALUE$(XX+1)
22060 WRITE RECORD (EXCEL,KEY=K$)VAL$
22070 NEXT 
22080 RETURN 
22099 ! 
22100 EXPORT_ODBC_QUERY:
22110 GOSUB GET_ODBC_QUERY
22120 SHOW_RESULT=1,ALLOW_QRYMOD=1
22130 CALL "ZZGODB;EXEC_SQL",%X3$,%X4$,SQL_QUERY$,RESULTS_FILE$,SHOW_RESULT,ALLOW_QRYMOD
22190 CMD_STR$="END"
22195 RETURN 
22199 ! 
22200 GET_ODBC_QUERY:
22210 SQL_SELECT$="SELECT "+ODBFLD$+" "
22220 SQL_WHERE$=ODBCOND$
22230 SQL_FROM$="FROM "+LOG_FILE$+" "
22250 SQL_LIMIT$=" LIMIT 10"
22280 SQL_QUERY$=SQL_SELECT$+SQL_FROM$+SQL_WHERE$ ! +SQL_LIMIT$
22295 RETURN 
22299 ! 
22300 CHECK_USE_ODBC:
22310 OPTODBC$="NO"
22315 OPEN (HFN)"ZZPARM"; _ZZPARM=LFO
22320 FIND (_ZZPARM,KEY=%X3$(9,3)+"PXPODBC",DOM=CHECK_DONE)ODBCPARM$
22330 IF MID(ODBCPARM$,71,1)<>"Y" THEN GOTO CHECK_DONE
22350 MSGBOX MSG("ZZGFLE_ODB"),"","?,YESNO,TOP",OPTODBC$
22390 CHECK_DONE:CLOSE (_ZZPARM)
22395 RETURN 
22399 ! 
23000 TRAP_ERROR:! ssp 307374
23020 IF ERR=0 AND POS("[dde]"=PTH(EXCEL)) THEN SET_ESC=1; SETERR 0000; FMT$=B_FMT$; EXITTO 15070 ! ssp 307374
23040 SETERR 0000 ! ssp 307374
23050 RETRY ! ssp 307374
56000 ! "189344-Assistance in Printing New Customer Labels to Custom Designe
56001 ! "196661-The suggestion was made to provide for the search criteria  
56002 ! "       to be entered first when using view files feature."
56003 ! "203104-FS2 can't be exported, too many columns.                    
56005 ! "204543-Modify GUI View files option ZZGFLE to exclude              
56010 ! "204008-Export to Excel not working when selecting all criteria     
56011 ! "       AR1 file"
56012 ! "207081-PE in View Files  
56013 REM "205460-Oracle - FIN(CHANNEL,"NUMREC") changed to use FN%FIN$()     
56015 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56016 REM "218541-I have encountered a bug that I need to have addressed      
56020 ! "210674-PE in Export Field in file exceeds the 255 column width     
56030 ! "223413-Bug/Error: In using the "View Files" functionality, I can   
56031 ! "230049-GL2 - Post Upgrade Errors                                   
56032 REM "236013-225300-cannot export AXS file to excel after I have pulled  
56033 REM "231522-Program Exception during the view files                     
56034 REM "244750-Inbound Freight processing in the Customer Invoicing Gateway
56035 REM "240174-ASJ file appears to have some bad records/data near the end 
56036 REM "307195 Not able to export the EE1... file to Excel from the View File feature-DBSPT-70047
56037 REM "307374-ZZGFLE - Error 0 shows incorrect user, when closing Excel   
56038 REM "307492-DBD-487:PxPlus ODBC interface utility for DBD use           
