0010 REM "Automatic Batch Update <ZZGCHN>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 08/19/10 - 9.753333 - crg - SSP# 197952
0037 REM "197952-Streamline processing by user - Automatic Batch Updates
0040 REM "Copyright 2010 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0049 ! 
0050 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "ZZGCHN","../ZZG/ZZ.EN"
0055 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT ! SSP 237164
0060 EXIT 
0080 ! 
0091 INIT:
0100 SETERR 9000
0105 SAVE_GUI=%GUI; %GUI=1
0106 %CHAINED_UPDATE_MODE=1
0110 X0$="ZZGCHN",X1$="Automatic Batch Update"
0130 K0=20,K1=1,X0=-1
0135 C9=-1
0140 ! 
0145 PRG_BATCH_ENTRY$="PO2MAG  AP2DAA  AR2EAA  AR2EAA  AR2EAA  "
0150 PRG_TO_RUN$="PO2RRAAP2DBAAR2UPAAR2EBGAR2DBA"
0151 PRG_TO_PREP$="PO2RRAAP2DBAAR2UPAAR2EBAAR2DBA"
0155 PRG_GUI_SELECTION$="POGRRSAPGDBSARGUPSARGEBSARGDBS"
0160 PRG_FOR_AUDIT$="PO2RRSAP2DBSARGUPS      AR2DBS"
0165 SORT$="PO7   APD   ARB   ARB   ARB   "
0169 ! 
0170 DIM PGN_TITLE$[4]
0171 PGN_TITLE$[0]="Purchase Order Receiving Update"
0172 PGN_TITLE$[1]="A/P Purchases Journal Update"
0173 PGN_TITLE$[2]="Credit Card Plus Processing"
0174 PGN_TITLE$[3]="A/R Invoice Printing"
0175 PGN_TITLE$[4]="A/R Sales Journal Update"
0199 ! 
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "IOLISTS
0310 IOLIST A$
0320 IOLIST B$
0330 IOLIST X3$,MM1$,X4$,D0$,XX$,AA9$
0340 BG_IOL:IOLIST C_BATCH_DISP$,C_BATCH1$,C_PRG1$,C_STEP1$,C_BATCH2$,C_PRG2$,C_STEP2$,C_BATCH3$,C_PRG3$,C_STEP3$,C_BATCH4$,C_PRG4$,C_STEP4$,C_BATCH5$,C_PRG5$,C_STEP5$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O ZY9  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0525 GOSUB GET_OPERATOR_SETTINGS
0530 CP_ENABLED$="N"; IF FN%HAS_MODULE("CP") THEN CP_ENABLED$="Y"
0540 IF FEATURE_ENABLED$<>"Y" THEN IF NUL(ARG_1$) THEN MSGBOX MSG("ZZGCHN_05",X3$(40,3)),MSG("FYI"),"!,TIM=3"; END_IF ; GOTO WRAPUP
0695 RETURN 
0999 ! 
1000 PROCEED:
1005 SUCCESS=0,%SKIP_BATCH_SELECTION=1,CURRENT_BATCH$=C_BATCH$
1015 SWITCH PAD(C_PRG$,6)
1020 CASE "PO2MAG"
1021 START_AT=0; BREAK
1025 CASE "AP2DAA"
1026 START_AT=1; BREAK
1030 CASE "AR2EAA"
1031 START_AT=2; BREAK
1035 END SWITCH 
1049 ! 
1050 FOR I=START_AT TO 4
1053 TITLE$=PGN_TITLE$[I] ! ""; CALL "ZZ2FNC;GET_PRG_REMARK",MID(PRG_GUI_SELECTION$,I*6+1,6),TITLE$
1055 IF I=2 AND CP_ENABLED$<>"Y" THEN CONTINUE ! Skip CC Plus processing if the "CP" module is not enabled
1059 ! 
1060 IF START_AT=0 THEN ON I GOTO 1062,1064,1066,1066,1066 ELSE GOTO PROCESS_BATCH
1062 C_BATCH$=MID(C_BATCH$,1,4)+" "; GOTO 1070
1064 C_BATCH$=MID(C_BATCH$,1,4)+"A"; GOTO 1070
1066 C_BATCH$=MID(C_BATCH$,1,4)+"B"; GOTO 1070
1070 ! 
1075 PROCESS_BATCH:
1080 CALL "ZZ2RPA;CHECK_BATCH",C_BATCH$,BATCH_EXISTS; IF NOT(BATCH_EXISTS) THEN CONTINUE
1082 ! 
1083 IF PROMPT_OPER$<>"Y" THEN GOTO 1090
1084 GOSUB PROCESS_UPDATE_SELECTION ! ANS$="YES"; IF PROMPT_OPER$="Y" THEN MSGBOX MSG("ZZGCHN_02",TITLE$),MSG("CONFIRM"),"YESNO,TOP,2",ANS$
1085 IF RESP$<>"YES" THEN SUCCESS=-1; BREAK
1086 IF STP(DFLT_SEL$)<>"" THEN SEC$(107+(12*I),12)=DFLT_SEL$
1089 ! 
1090 GOSUB SET_BATCH_IN_X3
1095 %GUI=1; OK_TO_CONTINUE$=""; CALL MID(PRG_GUI_SELECTION$,I*6+1,6)+";CHAINED_UPDATE",ERR=*NEXT,X3$,X4$,"","",OK_TO_CONTINUE$,RET_VAL
1099 ! 
1100 IF OK_TO_CONTINUE$<>"Y" THEN IF RET_VAL=2 THEN GOTO *CONTINUE ELSE GOTO *BREAK
1120 %B_WINDATE_FMT$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD",JJ$=DTE(0:"%Yl%Mz%Dz"); CALL "ZZWDTE;VALIDATE",JJ$,JJJ$,JJJJ$; X3$(21,6)=JJ$
1130 Q$=MID(PRG_FOR_AUDIT$,I*6+1,6); IF NOT(NUL(Q$)) THEN DIM P0$(128); X3$(146,6)=Q$; CALL "ZZAUDT",X3$,Q$+P0$(78),Z[13],X9; X3$(185,1)="A",X3$(188,9)=P0$(23,9); WRITE (Z[13],KEY=X3$(1,8))IOL=0330
1135 CALL "ZZ2RPA;PREP_PRINT_REPORT",MID(PRG_TO_PREP$,I*6+1,6),MID(SEC$,107+(12*I),12),MID(SORT$,I*6+1,6)
1150 ! IF I=3 THEN CALL MID(PRG_TO_RUN$,I*6+1,6) ELSE CALL MID(PRG_TO_RUN$,I*6+1,6),X3$,X4$,"*","*"
1160 CALL MID(PRG_TO_RUN$,I*6+1,6),X3$,X4$,"*","*"
1195 NEXT I
1199 ! 
1600 IF SUCCESS=0 THEN SUCCESS=1
5000 REM "EOJ
5020 IF SUCCESS>0 THEN MSGBOX MSG("ZZGCHN_03",CURRENT_BATCH$),MSG("FYI"),"!,TOP,TIM=3" ELSE MSGBOX MSG("ZZGCHN_04",CURRENT_BATCH$),MSG("FYI"),"!,TOP,TIM=3"
5040 RETURN ! GOTO 9900
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9901 WRAPUP:
9905 %SKIP_BATCH_SELECTION=0,%GUI=SAVE_GUI
9906 %CHAINED_UPDATE_MODE=0
9907 IF _BATCH<>0 THEN CLOSE (_BATCH); _BATCH=0
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9925 CMD_STR$="END"
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 ! 
10005 LOAD_BATCHES:
10010 GOSUB GET_ALL_BATCHES
10015 GRID LOAD BATCH_GRID.CTL,0,0,""
10020 ROWNUM=0; READ (_BATCH,KEY="",DOM=*NEXT)
10025 NEXT_BATCH:
10030 KB$=KEY(_BATCH,END=DONE_LB); READ (_BATCH,KEY=KB$)IOL=BG_IOL
10100 GRID LOAD BATCH_GRID.CTL,1,0,C_BATCH_DISP$+SEP+C_BATCH1$+SEP+C_PRG1$+SEP+C_STEP1$+SEP+C_BATCH2$+SEP+C_PRG2$+SEP+C_STEP2$+SEP+C_BATCH3$+SEP+C_PRG3$+SEP+C_STEP3$+SEP+C_BATCH4$+SEP+C_PRG4$+SEP+C_STEP4$+SEP+C_BATCH5$+SEP+C_PRG5$+SEP+C_STEP5$+SEP
10105 BATCH_GRID.CTL'ROW=++ROWNUM; BATCH_GRID.CTL'ROWHEIGHT=1.75
10110 IF C_STEP1$="1" THEN BATCH_GRID.CTL'COLUMN=4,BATCH_GRID.CTL'CELLTYPE$="Button",BATCH_GRID.CTL'VALUE$=MSG("UPDATE"),BATCH_GRID.CTL'BITMAP$="!Arrow_right",BATCH_GRID.CTL'LOCK=1
10115 IF C_STEP2$="1" THEN BATCH_GRID.CTL'COLUMN=7,BATCH_GRID.CTL'CELLTYPE$="Button",BATCH_GRID.CTL'VALUE$=MSG("UPDATE"),BATCH_GRID.CTL'BITMAP$="!Arrow_right",BATCH_GRID.CTL'LOCK=1
10120 IF C_STEP3$="1" THEN BATCH_GRID.CTL'COLUMN=10,BATCH_GRID.CTL'CELLTYPE$="Button",BATCH_GRID.CTL'VALUE$=MSG("UPDATE"),BATCH_GRID.CTL'BITMAP$="!Arrow_right",BATCH_GRID.CTL'LOCK=1
10125 IF C_STEP4$="1" THEN BATCH_GRID.CTL'COLUMN=13,BATCH_GRID.CTL'CELLTYPE$="Button",BATCH_GRID.CTL'VALUE$=MSG("UPDATE"),BATCH_GRID.CTL'BITMAP$="!Arrow_right",BATCH_GRID.CTL'LOCK=1
10130 IF C_STEP5$="1" THEN BATCH_GRID.CTL'COLUMN=16,BATCH_GRID.CTL'CELLTYPE$="Button",BATCH_GRID.CTL'VALUE$=MSG("UPDATE"),BATCH_GRID.CTL'BITMAP$="!Arrow_right",BATCH_GRID.CTL'LOCK=1
10145 GOTO NEXT_BATCH
10150 DONE_LB:
10180 IF CP_ENABLED$<>"Y" THEN BATCH_GRID.CTL'COLUMN=10; BATCH_GRID.CTL'LOCK=1,BATCH_GRID.CTL'CELLTYPE$="Normal",BATCH_GRID.CTL'COLUMNWIDTH=0 ! Suppress CC Plus processing column if "CP" module is not enabled
10183 BATCH_GRID.CTL'ROW=0; BATCH_GRID.CTL'COLUMN=0; BATCH_GRID.CTL'LOCK=1
10185 PRINT 'MESSAGE'(DEF 0),'MESSAGE'("")
10195 RETURN 
10199 ! 
10200 UPDATE_BATCH:
10205 COL_CLICKED=BATCH_GRID.CTL'CURRENTCOLUMN; IF COL_CLICKED<>4 AND COL_CLICKED<>7 AND COL_CLICKED<>10 AND COL_CLICKED<>13 AND COL_CLICKED<>16 THEN RETURN 
10210 READ DATA FROM BATCH_GRID.CTL'ROWDATA$ TO IOL=BATCH_GRID.CTL'LOADIOLIST$
10212 SWITCH STR(COL_CLICKED)
10215 CASE "4"
10216 C_BATCH$=C_BATCH1$; C_PRG$=C_PRG1$; BREAK
10218 CASE "7"
10219 C_BATCH$=C_BATCH2$; C_PRG$=C_PRG2$; BREAK
10222 CASE "10"
10223 C_BATCH$=C_BATCH3$; C_PRG$=C_PRG3$; BREAK
10225 CASE "13"
10226 C_BATCH$=C_BATCH4$; C_PRG$=C_PRG4$; BREAK
10228 CASE "16"
10229 C_BATCH$=C_BATCH5$; C_PRG$=C_PRG5$; BREAK
10233 END SWITCH 
10235 MSGBOX MSG("ZZGCHN_01",C_BATCH$),MSG("CONFIRM"),"YESNO,TOP,2",ANS$
10238 IF ANS$<>"YES" THEN RETURN 
10240 GOSUB PROCEED; GOSUB LOAD_BATCHES
10243 PRINT 'CI'
10245 RETURN 
10249 ! 
10300 SET_BATCH_IN_X3:
10310 O$=PAD(STP(C_BATCH$,2),5)
10320 K0$=O$
10330 X3$(174,4)=K0$
10340 X3$(85,1)=MID(O$,5,1)
10350 FIND (Z[1],KEY=K0$,DOM=*NEXT)Q$; Q$=GBL("BATCHCTRL_PARMS",Q$)
10360 FID_RECORD_IN:IOLIST *,M1$,X4$,D0$,X$,A9$ ! Don't read current X3$ in
10370 FID_RECORD_OUT:IOLIST X3$,M1$,X4$,D0$,X$,A9$ ! Don't read current X3$ in
10380 TSLOT=HFN; OPEN (TSLOT)"ZZPARM"
10390 READ (TSLOT,KEY=FID(0)+DIM(6))IOL=FID_RECORD_IN
10400 WRITE (TSLOT,KEY=FID(0)+DIM(6))IOL=FID_RECORD_OUT
10410 CLOSE (TSLOT)
10450 CALL "ZZWMX3" ! Update global variables
10495 RETURN 
10499 ! 
10500 GET_OPERATOR_SETTINGS:
10510 DIM SEC$(255); READ (Z[13],KEY="osec"+X3$(40,3),DOM=*NEXT)SEC$
10515 FEATURE_ENABLED$=MID(SEC$,103,1)
10516 AP_ENABLED$=MID(SEC$,104,1)
10517 AR_ENABLED$=MID(SEC$,105,1)
10518 RESTRICT_OPER$=MID(SEC$,106,1)
10519 PROMPT_OPER$=MID(SEC$,167,1)
10545 RETURN 
10549 ! 
10600 GET_ALL_BATCHES:
10610 IF _BATCH THEN CLOSE (_BATCH); _BATCH=0 END_IF ; OPEN (HFN)"*MEMORY*"; _BATCH=LFO
10620 READ (Z[1],KEY=" ",DOM=*NEXT)
10630 GET_NEXT_BATCH:
10640 KZY9$=KEY(Z[1],END=DONE_GAB); READ (Z[1],KEY=KZY9$)ZY9$
10650 IF POS(MID(ZY9$,6,8)="PO2MAG  AP2DAA  AR2EAA  ",8)=0 THEN GOTO GET_NEXT_BATCH
10660 IF "AP2DAA  "=MID(ZY9$,6,8) AND AP_ENABLED$<>"Y" THEN GOTO GET_NEXT_BATCH
10670 IF "AR2EAA  "=MID(ZY9$,6,8) AND AR_ENABLED$<>"Y" THEN GOTO GET_NEXT_BATCH
10680 IF RESTRICT_OPER$="Y" AND MID(ZY9$,54,3)<>X3$(40,3) THEN GOTO GET_NEXT_BATCH
10682 IF NOT(NUL(ARG_1$)) AND ARG_1$<>MID(KZY9$,1,LEN(ARG_1$)) THEN GOTO GET_NEXT_BATCH
10685 READ DATA FROM "" TO IOL=BG_IOL
10690 READ (_BATCH,KEY=MID(KZY9$,1,4),DOM=*NEXT)IOL=BG_IOL
10700 C_BATCH_DISP$=MID(KZY9$,1,4)
10710 SWITCH MID(ZY9$,6,6)
10720 CASE "PO2MAG"
10730 C_BATCH1$=KZY9$; C_PRG1$=MID(ZY9$,6,6); C_STEP1$="1"
10740 BREAK
10750 CASE "AP2DAA"
10760 C_BATCH2$=KZY9$; C_PRG2$=MID(ZY9$,6,6); C_STEP2$="1"
10770 BREAK
10780 CASE "AR2EAA"
10790 C_BATCH3$=KZY9$; C_PRG3$=MID(ZY9$,6,6); C_STEP3$="1"
10800 C_BATCH4$=KZY9$; C_PRG4$=MID(ZY9$,6,6); C_STEP4$="1"
10810 C_BATCH5$=KZY9$; C_PRG5$=MID(ZY9$,6,6); C_STEP5$="1"
10820 BREAK
10830 END SWITCH 
10835 WRITE (_BATCH,KEY=MID(KZY9$,1,4))IOL=BG_IOL
10840 IF NOT(NUL(ARG_1$)) AND C_STEP1$="1" THEN EXITTO WRAPUP ! "PO Recv batch still open...exit
10845 GOTO GET_NEXT_BATCH
10850 DONE_GAB:
10995 RETURN 
10999 ! 
11000 REM "Given a PO Receiving batch number (4 chars) we attempt to process related A/P and A/R batches
11010 PROCESS_RELATED_BATCHES:
11015 ENTER PO_BATCH$,C_PRG$,ERR=*NEXT
11020 IF NUL(PO_BATCH$) THEN EXIT ! "Invalid call : PO Receiving Batch Number was not provided
11025 IF UID="jvv" THEN ESCAPE 
11028 C_BATCH$=PO_BATCH$
11030 GOSUB INIT
11040 GOSUB PROCEED
11095 EXIT 
11099 ! 
12000 PROCESS_UPDATE_SELECTION:
12010 DFLT_SEL$=MID(SEC$,107+(12*I),12),HLD_SEL$=DFLT_SEL$
12020 TITLE$=PGN_TITLE$[I]
12030 LIST_PGN$=MID(PRG_TO_PREP$,I*6+1,6)
12040 RESP$="" ! Continue processing or not
12050 CALL_PGN$="ZZ2RPA;DROP_BOX_LOAD"
12100 PROCESS "ZZGLST","../ZZG/ZZ.EN",DFLT_SEL$,"Report Selection",TITLE$,LIST_PGN$,RESP$,CALL_PGN$
12105 IF UID="jvv" THEN ESCAPE 
12110 RETURN 
12200 IF STP(ARG_1$,2)<>"" THEN SEC$(107+(12*I),12)=ARG_1$
12950 RETURN 
56001 REM "197952-Streamline processing by user - Automatic Batch Updates
