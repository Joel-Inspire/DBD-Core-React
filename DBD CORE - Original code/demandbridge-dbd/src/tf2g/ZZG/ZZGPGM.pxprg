0010 ! ZZGPGM - Unattended Printer Group Setup
0035 REM "5.7 - 02/03/24 - 23.984973 - crg - SSP# 307473
0037 REM "307473-DBD-436: Carton Label Printing selection screen             
0040 REM "Copyright 2024 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ZZGPGN","../ZZG/ZZ.EN"
0060 EXIT 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0185 _ZZP=HFN; _FILE_NAME$="ZZPARM"; OPEN (_ZZP,ERR=OPEN_ERR)_FILE_NAME$
0186 _ZZS=HFN; _FILE_NAME$="ZZS"+%C$; OPEN (_ZZS,ERR=OPEN_ERR)_FILE_NAME$
0199 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0410 SETUP_KEYS:
0420 _NUMKEYS=1,_CUR_KEY$=""
0430 DIM _KEYS$[1:1]; _KEYS$[1]="ML_GROUP$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0515 DIM LNK_REC$(256)
0520 MESSAGE_LIB _SV_MSGLIB$
0540 IF ARG_1$="" THEN _ENABLE_FLG=1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0935 IF _ZZP<>0 THEN CLOSE (_ZZP); _ZZP=0
0936 IF _ZZS<>0 THEN CLOSE (_ZZS); _ZZS=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0965 %GRID=0
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1012 ML_GROUP$=STR(NUM(ML_GROUP$):"00",ERR=*NEXT) ! SSP#242098
1015 ML_GROUP$=PAD(ML_GROUP$,2,1," "),ML_GROUP.CTL'VALUE$=ML_GROUP$ ! SSP#242098
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 _KEY$="PRINTERGP"+ML_GROUP$
1051 _KEYOP$="PRINTEROP"+ML_GROUP$
1070 READ (_ZZP,KEY=_KEY$,DOM=NEW_RECORD)
1080 GOSUB PROCESS_READ
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1245 DIM A$(512); A$(1,9)="PRINTERGP",A$(10,2)=ML_GROUP$
1250 DIM B$(512); B$(1,9)="PRINTEROP",B$(10,2)=ML_GROUP$
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1272 LINES=1,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'COLUMN=-1,GRID_AUDIT.CTL'VALUE$=STR(LINES:"000")
1273 GRID LOCK GRID_AUDIT.CTL,2,1
1274 GRID_AUDIT.CTL'COLUMN=1,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'CELLTYPE$="DropBox",GRID_AUDIT.CTL'TEXT$=MSG("ZZGPGN_M"),XX=POS(KEYC$+" - "=MSG$); IF XX<>0 THEN DD$=MSG$(XX),XX=POS("/"=DD$),DD$=DD$(1,XX-1)
1290 RETURN 
1410 WRITE_REC: B_B1$=B1$,B1$="",ROWS=0
1420 ROWS+=1
1430 GRID FIND GRID_AUDIT.CTL,1,ROWS,KEYC$,ERR=NO_MORE; GRID FIND GRID_AUDIT.CTL,2,ROWS,PRG$; GRID FIND GRID_AUDIT.CTL,3,ROWS,SELE$
1435 IF ROWS>10 THEN {
1436 KEYC$=" "+KEYC$(1,1),PRG$=PAD(PRG$,8," "),SELE$=PAD(SELE$,11," ")
1437  } ELSE {
1440 KEYC$=KEYC$(1,1),PRG$=PAD(PRG$,8," "),SELE$=PAD(SELE$,12," ")
1441  }
1445 IF STP(PRG$)<>"" THEN B1$=B1$+KEYC$+PRG$+SELE$
1450 GOTO 1420
1460 NO_MORE:
1465 DIM A$(512); A$(1,9)="PRINTERGP",A$(10,2)=ML_GROUP$,A$(12,2)=ML_SEC$,A$(14,LEN(B1$))=B1$
1467 B$(12,60)=ML_EMAIL$
1470 WRITE (_ZZP,KEY=_KEY$)A$
1475 WRITE (_ZZP,KEY=_KEYOP$)B$
1490 GOSUB DEL_GRID
1495 _ENABLE_FLG=1; GOSUB ENABLE_GROUPS; _ENABLE_FLG=0,NEXT_ID=ML_GROUP.CTL
1599 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_ZZP,KEY=_KEY$,ERR=NO_SUCH)
1665 REMOVE (_ZZP,KEY=_KEYOP$,ERR=*NEXT)
1670 GOSUB DEL_GRID
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
3020 PROCESS_READ:
3025 DIM A$(512),B$(512)
3030 READ (_ZZP,KEY=_KEY$,ERR=*RETURN)A$
3035 READ (_ZZP,KEY=_KEYOP$,ERR=*NEXT)B$
3040 _ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 B1$=A$(14),ML_SEC$=A$(12,2),ML_EMAIL$=MID(B$,12,60); GOSUB LOAD_GRID
3070 RETURN 
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=ML_GROUP.CTL,_FIRST_FIELD=ML_SEC.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOSUB DEL_GRID; GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3865 GOSUB DEL_GRID
3870 RETURN 
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 SELECT_COMPANY:
10010 READ (_ZZP,KEY="CMP"+COMPANY$,DOM=NO_CIA)A$
10020 FLAG=1; GOSUB WRITE_REC; FLAG=0
10030 GOSUB DEL_GRID
10040 READ (_ZZP,KEY=COMPANY$+"AUDIT",DOM=*NEXT)B0$,B1$; ML_DESC$=A$(7,40),REFRESH_FLG=1,B1$=SRT(B1$,14),_KEY$=COMPANY$+"AUDIT",LINES=0
10050 GOSUB LOAD_GRID
10060 CMD_STR$=""
10070 RETURN 
10100 NO_CIA: COMPANY$=%X3_COMP$,REFRESH_FLG=1; RETURN 
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
23000 LOAD_GRID: B1$=STP(B1$),SP=(INT(LEN(B1$)/21+1))*21,B1$=PAD(B1$,SP," "),MSG$=MSG("ZZGPGN_M")
23005 LINES=0,_BKEY$=_KEY$,BPO_NUMBER$=PO_NUMBER$,GRIDD$="",OPR$="",MAX_LINES=0
23008 ! X'COLUMM=-1,X'ROW=2,X'CELLTYPE$="Normal"
23009 GRID HIDE GRID_AUDIT.CTL
23010 FOR AA=1 TO LEN(B1$) STEP 21
23020 AA$=B1$(AA,21),KEYC$=AA$(1,1) ! [202773]
23030 IF LEN(STP(AA$,3))=0 THEN EXITTO END_LOAD_GRID ! [202773]
23035 IF AA$(1,1)=" " THEN AA$=PAD(STP(AA$,2),21) ! [202773]
23045 IF AA>1 THEN GRIDD$=GRIDD$+"A"; GRID LOAD GRID_AUDIT.CTL,1,0,"A"
23050 LINES=LINES+1,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'COLUMN=-1,GRID_AUDIT.CTL'VALUE$=STR(LINES:"000")
23053 AA$=B1$(AA,21)
23054 IF AA$(1,1)=" " THEN AA$=PAD(STP(AA$,2),21) ! [202773]
23055 KEYC$=AA$(1,1),PGN_N$=AA$(2,8),SELE$=AA$(10)
23056 GOSUB GET_OPTIONS_FOR_SELECTION
23057 GRID_AUDIT.CTL'COLUMN=1,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'CELLTYPE$="DropBox",GRID_AUDIT.CTL'TEXT$=MSG("ZZGPGN_M"),XX=POS(KEYC$+" - "=MSG$); IF XX<>0 THEN DD$=MSG$(XX),XX=POS("/"=DD$),DD$=DD$(1,XX-1)
23060 GRID WRITE GRID_AUDIT.CTL,1,LINES,DD$; GRID_AUDIT.CTL'COLUMN=1,GRID_AUDIT.CTL'ROW=LINES
23070 GRID WRITE GRID_AUDIT.CTL,2,LINES,PGN_N$; GRID_AUDIT.CTL'COLUMN=2,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'LEN=8 ! SSP#242098
23075 GRID WRITE GRID_AUDIT.CTL,3,LINES,SELE$; GRID_AUDIT.CTL'COLUMN=3,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'LEN=12
23076 GRID WRITE GRID_AUDIT.CTL,4,LINES,SEL_DESC$; GRID_AUDIT.CTL'COLUMN=4,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'LEN=20
23077 GRID WRITE GRID_AUDIT.CTL,5,LINES,SEL_OPTS$; GRID_AUDIT.CTL'COLUMN=5,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'LEN=80
23080 NEXT AA
23100 END_LOAD_GRID:
23120 IF LINES=0 THEN GOTO PROC_RE
24509 ! X=GRID_AUDIT.CTL,X'COLUMM=2,X'ROW=-1,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
24510 PROC_RE: _KEY$=_BKEY$
24515 GRID SHOW GRID_AUDIT.CTL
24516 RETURN 
24530 GRID_FOCUS:
24540 GRID SELECT READ GRID_AUDIT.CTL,COL,ROW
24542 IF COL=1 THEN GOSUB PUT_PGM
24545 IF COL=2 THEN GOSUB CHECK_PROGRAM_NAME
24546 IF COL=3 THEN GOSUB UPCASE
24550 IF COL=1 THEN GRID GOTO GRID_AUDIT.CTL,3,ROW; NEXT_ID=GRID_AUDIT.CTL
24555 IF COL=2 THEN GRID GOTO GRID_AUDIT.CTL,3,ROW; NEXT_ID=GRID_AUDIT.CTL
24560 IF COL=3 AND ROW+1<=LINES THEN GRID GOTO GRID_AUDIT.CTL,1,ROW+1; NEXT_ID=GRID_AUDIT.CTL ELSE %GRID=0
24599 RETURN 
24600 ADD_LINES:
24610 LINES=LINES+1; IF LINES>22 THEN LINES=22; GOTO 24650
24620 GRID ADD GRID_AUDIT.CTL,0,LINES
24630 GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'COLUMN=-1,GRID_AUDIT.CTL'VALUE$=STR(LINES:"000"),GRID_AUDIT.CTL'FONT$="MS Sans Serif"
24632 GRID_AUDIT.CTL'COLUMN=1,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'CELLTYPE$="DropBox",GRID_AUDIT.CTL'TEXT$=MSG("ZZGPGN_M")
24635 X=GRID_AUDIT.CTL,X'COLUMN=1,X'ROW=LINES
24640 GRID WRITE GRID_AUDIT.CTL,1,LINES,PRINT_LINE$
24645 GRID GOTO GRID_AUDIT.CTL,1,LINES; NEXT_ID=GRID_AUDIT.CTL
24646 GRID_AUDIT.CTL'COLUMN=2,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'LEN=8,GRID_AUDIT.CTL'LOCK=1,GRID_AUDIT.CTL'COLUMN=3,GRID_AUDIT.CTL'ROW=LINES,GRID_AUDIT.CTL'LEN=12
24650 RETURN 
25700 SEL_GRID:
25705 GOSUB DEL_RECORDS
25710 FOR AA=1 TO LINES
25720 X=GRID_AUDIT.CTL
25730 GRID FIND X,1,AA,PRINT_LINE$
25735 PRINT_LINE$=MID(PRINT_LINE$,1,1)
25740 GRID FIND X,2,AA,TF_COMMENT$
25750 LINE_NUM$=STR(AA:"000"),_KEY$=PO_NUMBER$+LINE_NUM$
25770 NEXT AA
25772 DEL_GRID:IF LINES=0 THEN GOTO *RETURN
25773 FOR AA=2 TO LINES; GRID DELETE GRID_AUDIT.CTL,0,2; NEXT AA
25775 CHANGE_FLG=0,REFRESH_FLG=1,CHANGE_FLG=0
25780 GRID WRITE GRID_AUDIT.CTL,1,1,""
25790 GRID WRITE GRID_AUDIT.CTL,2,1,""
25795 GRID WRITE GRID_AUDIT.CTL,3,1,""
25800 IF MAX_LINES=0 THEN GOTO *RETURN
25900 RETURN 
26000 CREATE_REC:
26020 PO_DIV$=PO_NUMBER$(1,%PO_DIV_LEN),PO_NUM$=PO_NUMBER$(%PO_DIV_LEN+1)
26030 PO_LINE_NUM$="001",PRINT_LINE$="Y",TF_COMMENT$="",POE_UNUSED_1$=""
26040 _KEY$=PO_NUMBER$+PO_LINE_NUM$
27050 WRITE (_ZZP,KEY=_KEY$)
27060 RETURN 
27100 DEL_LN: AB=GRID_AUDIT.CTL
27105 IF LINES>MAX_LINES THEN MAX_LINES=LINES
27110 GRID SELECT READ GRID_AUDIT.CTL,COL,ROW
27120 GRID FIND GRID_AUDIT.CTL,1,ROW,SEL$,ERR=NO_LN
27130 GRID FIND GRID_AUDIT.CTL,2,ROW,SEL1$
27140 COLOR$="Light Red",AB'ROW=ROW,AB'COLUMN=2,AB'BACKCOLOR$=COLOR$,AB'COLUMN=1,AB'BACKCOLOR$=COLOR$,AB'COLUMN=3,AB'BACKCOLOR$=COLOR$
27150 MSGBOX MSG("WISH")+" "+MSG("DELETE")+" "+MSG("LINE")+" "+STR(ROW:"000B")+SEP+"("+SEL$+"-"+STP(SEL1$)+")",MSG("CONFIRMING"),"?,YESNO",OPT$
27155 AB'ROW=ROW,AB'COLUMN=2,AB'BACKCOLOR$="White",AB'COLUMN=1,AB'BACKCOLOR$="White",AB'COLUMN=3,AB'BACKCOLOR$="White"
27160 IF OPT$="NO" THEN EXIT 
27170 GRID DELETE GRID_AUDIT.CTL,0,ROW
27180 LINES=LINES-1
27190 FOR AA=ROW TO LINES
27200 GRID_AUDIT.CTL'ROW=AA,GRID_AUDIT.CTL'COLUMN=-1,GRID_AUDIT.CTL'VALUE$=STR(AA:"000")
27210 NEXT AA
27220 RETURN 
27300 INS_LN:
27310 GRID SELECT READ GRID_AUDIT.CTL,COL,ROW
27315 AB=GRID_AUDIT.CTL,COLOR$="Light Blue",AB'ROW=ROW,AB'COLUMN=2,AB'BACKCOLOR$=COLOR$,AB'COLUMN=1,AB'BACKCOLOR$=COLOR$,AB'COLUMN=3,AB'BACKCOLOR$=COLOR$
27320 MSGBOX MSG("WISH")+" "+MSG("INSERT")+" "+MSG("LINE")+" "+STR(ROW:"000B"),MSG("CONFIRMING"),"!,YESNO",OPT$
27325 AB'ROW=ROW,AB'COLUMN=2,AB'BACKCOLOR$="White",AB'COLUMN=1,AB'BACKCOLOR$="White",AB'COLUMN=3,AB'BACKCOLOR$="White"
27330 IF OPT$="NO" THEN RETURN 
27340 ! GRID ADD GRID_AUDIT.CTL,0,ROW
27350 LINES=LINES+1,BLINES=LINES,LINES=ROW-1
27355 GOSUB ADD_LINES; LINES=BLINES; BLINES=0
27357 GRID_AUDIT.CTL'FONT$="MS Sans Serif"
27360 FOR AA=ROW TO LINES
27370 GRID_AUDIT.CTL'ROW=AA,GRID_AUDIT.CTL'COLUMN=-1,GRID_AUDIT.CTL'VALUE$=STR(AA:"000"),GRID_AUDIT.CTL'FONT$="MS Sans Serif"
27380 NEXT AA
27390 RETURN 
27400 NO_LN:
27410 MSGBOX MSG("NO_LN"),MSG("WARNING"),"!",OPT$
27420 RETURN 
28000 DEL_RECORDS:
28010 B_PO$=PO_NUMBER$
28020 READ (_ZZP,KEY=B_PO$,DOM=*NEXT)
28025 READ_NXT:
28030 _KEY$=KEY(_ZZP,END=END_DEL_RECORDS); READ (_ZZP)
28040 IF MID(_KEY$,1,LEN(B_PO$))<>B_PO$ THEN GOTO END_DEL_RECORDS
28050 REMOVE (_ZZP,KEY=_KEY$)
28060 GOTO READ_NXT
28070 END_DEL_RECORDS: PO_NUMBER$=B_PO$; RETURN 
29000 CHECK_PROGRAM_NAME:
29010 GRID FIND GRID_AUDIT.CTL,COL,ROW,PRG$
29020 CALL "ZZXPRG",Q$,10,PRG$
29030 RETURN 
29100 PUT_PGM:
29110 GRID FIND GRID_AUDIT.CTL,COL,ROW,VAL$
29120 OP$="LWPCSV",OP1$="FM2RBCFW2RBAPO2PABPO2PDAFM2RAAOS2C01"
29130 XX=POS(VAL$(1,1)=OP$); IF XX=0 THEN RETURN 
29140 PGN_NAME$=OP1$(XX*6-5,6)
29150 GRID WRITE GRID_AUDIT.CTL,2,ROW,PGN_NAME$
29155 ! GRID LOCK GRID_AUDIT.CTL,2,ROW ! SSP#242098                 
29160 GOSUB CHECK_PROGRAM_NAME
29170 RETURN 
29200 UPCASE:
29210 GRID FIND GRID_AUDIT.CTL,COL,ROW,VAR$
29220 VAR$=UCS(VAR$)
29230 GRID WRITE GRID_AUDIT.CTL,COL,ROW,VAR$
29240 RETURN 
29299 ! 
29300 GET_OPTIONS_FOR_SELECTION:
29305 SEL_DESC$="",SEL_OPTS$="",KPFX$=""
29310 SWITCH KEYC$
29311 CASE "L"; KPFX$="FM2RBA"; BREAK
29312 CASE "P"; KPFX$="PO2PAA"; BREAK
29313 CASE "C"; KPFX$="PO2PDA"; BREAK
29319 END SWITCH 
29320 IF NUL(KPFX$) THEN GOTO *RETURN
29325 FIND (_ZZS,KEY=KPFX$+SELE$,DOM=*RETURN)ZZS1$,ZZS2$,ZZS3$,ZZS4$,ZZS5$
29330 SEL_DESC$=STP(MID(ZZS1$,19,40),2)
29340 PERFORM KPFX$+";PARSE_ZZS",ERR=*NEXT
29395 RETURN 
29399 ! 
56000 REM + Modification History
56002 REM "202773-PDF Printing is not working.                                
56004 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56005 REM "242090-Program exception when selecting option under customer      
56006 REM "248040-PE(026, PO2PAC-1410) when in Unattended printing.           
56007 REM "270561-Enhance Unattended Printing setup; display print selection  
56008 REM "307473-DBD-436: Carton Label Printing selection screen             
