0010 ! GGNOTE - Notes for Customer, Vendor, Custom Item
0035 REM "5.5 - 06/19/06 - 14.406111 - kmc - SSP# 197132
0037 REM "197132-He is getting an error 001                                  
0040 REM "Copyright 2006 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0111 SETERR 0112
0115 IF _FIL_NO THEN GOSUB WRAPUP
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ZZO"+%C$
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0175 _FM1=HFN; _FILE_NAME$="FM1"+%C$; OPEN (_FM1,IOL=*,REC=_FM1$,ERR=OPEN_ERR)_FILE_NAME$
0176 _IC0=HFN; _FILE_NAME$="IC0"+%C$; OPEN (_IC0,IOL=*,REC=_IC0$,ERR=OPEN_ERR)_FILE_NAME$ ! SSP 234111
0177 _ZZM=HFN; _FILE_NAME$="ZZM"; OPEN (_ZZM,IOL=*,REC=_ZZM$,ERR=OPEN_ERR)_FILE_NAME$
0178 _ZZN=HFN; _FILE_NAME$="ZZN"+%C$; OPEN (_ZZN,IOL=*,REC=_ZZN$,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 _FILE_NAME$="ZZPARM",_ZZP=HFN; OPEN (_ZZP,ERR=OPEN_ERR)_FILE_NAME$; X3$=%X3$,X4$=%X4$; READ (_ZZP,KEY=FID(0)+DIM(6),DOM=*NEXT)X3$,*,X4$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=5
0430 DIM _KEYS$[1:5]; _KEYS$[1]="NOTE_TYPE$",_KEYS$[2]="NOTE_KEY$",_KEYS$[3]="NOTE_DATE$",_KEYS$[4]="NOTE_TIME$",_KEYS$[5]="SEQ_NUM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0915 %OPTION$="",%CUSTOMER$="",%ITEM_CODE$="" ! SSP225665 jdf
0918 %ITM_OPT$="" ! SSP 234111
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0941 IF _ZZP<>0 THEN CLOSE (_ZZP); _ZZP=0
0942 IF _FM1<>0 THEN CLOSE (_FM1); _FM1=0
0943 IF _ZZN<>0 THEN CLOSE (_ZZN); _ZZN=0
0944 IF _ZZM<>0 THEN CLOSE (_ZZM); _ZZM=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1412 GOTO WRITE_CUST ! SSP 234111
1415 IF ID$="CUSTOMER" OR ID$="VENDOR" THEN GOTO WRITE_CUST
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE ! SSP225665 jdf
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=EVN(ID$+".CTL")
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1615 OPT$=EVS(ID$+"$"),OPT$=PAD(OPT$,10,"0"); DIM NOTE_KEY$(40); NOTE_KEY$(1,10)=OPT$; IF ID$="CUSTOMER" THEN NOTE_TYPE$="001" ELSE IF ID$="VENDOR" THEN NOTE_TYPE$="002"
1616 IF LEN(NOTE_TIME$)>4 THEN NOTE_TIME$=NOTE_TIME$(1,2)+NOTE_TIME$(4,2)
1617 SEQ_NUM$="00",_KEY$=NOTE_TYPE$+NOTE_KEY$+NOTE_DATE$+NOTE_TIME$+SEQ_NUM$
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+" "+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1665 KK$=KEY(_FIL_NO,END=END_REMOVE); READ (_FIL_NO)
1666 IF KK$(1,53)<>_KEY$(1,53) THEN GOTO END_REMOVE
1667 REMOVE (_FIL_NO,KEY=KK$); GOTO 1665
1668 END_REMOVE:GOSUB CLEAR_FIELDS
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=EVN(ID$+".CTL")
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1855 NEXT_ID=EVN(ID$+".CTL")
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT) ! SSP 234111
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=NOTE_TYPE.CTL,_FIRST_FIELD=OPER_CODE_ADD_NOTE.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 RETURN ! SSP225665 jdf
10250 GET_MESSAGE:! SSP225665 jdf
10260 DIM TF_NOTE$(60*9) ! SSP225665 jdf
10270 FOR I=0 TO 8 ! SSP225665 jdf
10280 READ (_FIL_NO,END=10320)NOTE_REC$,A0$ ! SSP225665 jdf
10290 IF NEW_VAL$(1,53)<>NOTE_REC$(1,53) THEN I=99; GOTO 10310 ! SSP225665 jdf
10300 TF_NOTE$(I*60+1,60)=A0$ ! SSP225665 jdf
10310 NEXT I ! SSP225665 jdf
10315 OLD_TF_NOTE$=TF_NOTE$ ! SSP225665 jdf
10320 FOR I=0 TO 8 ! SSP225665 jdf
10322 EXECUTE "LINE"+STR(I+1)+"$="+QUO+QUO ! SSP225665 jdf
10324 EXECUTE "LINE"+STR(I+1)+"$=TF_NOTE$(I*60+1,60)" ! SSP225665 jdf
10326 NEXT I ! SSP225665 jdf
10328 CALL "*WINGRP;ENABLE",BUTTONS.GRP$; CALL "*WINGRP;ENABLE",FIELDS.GRP$; NEXT_ID=BT_WRITE.CTL ! SSP225665 jdf
10330 RETURN ! SSP225665 jdf
10999 REM RETURN ! SSP225665 jdf
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 ! IF _CLR_FLG$="R" THEN NOTE_TYPE$=""
13030 ! IF _CLR_FLG$="R" THEN NOTE_KEY$=""
13040 ! IF _CLR_FLG$="R" THEN NOTE_DATE$=""
13050 ! IF _CLR_FLG$="R" THEN NOTE_TIME$=""
13060 IF _CLR_FLG$="R" THEN SEQ_NUM$=""
13070 CUSTOMER$="",VENDOR$="",ITEM_CODE$="",ITEM_DESC$="",SEQ=0
13080 PERM_TEMP_NOTE$=""
13090 MY_FOLLOW_UP_DATE$=""
13100 MAIL_NOTE_TO_OP_CODE$=""
13110 FOLLOW_UP_DATE$=""
13120 LINE_OF_MESSAGE$="",MES$="",MESSAGE$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=NOTE_KEY.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=NOTE_DATE.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=NOTE_TIME.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14060 IF _ENABLE_FLG=5 THEN CALL "*wingrp;Enable",KEY5.GRP$; NEXT_ID=SEQ_NUM.CTL ELSE CALL "*wingrp;Disable",KEY5.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(11,"N")
15030 IF _ORIG.NOTE_TYPE$=_CUR.NOTE_TYPE$ OR NOTE_TYPE$=_CUR.NOTE_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.NOTE_TYPE$=NOTE_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("NOTE_TYPE")+" = "+_CUR.NOTE_TYPE$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NOTE_TYPE")+" = "+_CUR.NOTE_TYPE$
15040 IF _ORIG.NOTE_KEY$=_CUR.NOTE_KEY$ OR NOTE_KEY$=_CUR.NOTE_KEY$ THEN GOTO *NEXT ELSE IF _ORIG.NOTE_KEY$=NOTE_KEY$ THEN _CHG2$=_CHG2$+SEP+MSG("NOTE_KEY")+" = "+_CUR.NOTE_KEY$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NOTE_KEY")+" = "+_CUR.NOTE_KEY$
15050 IF _ORIG.NOTE_DATE$=_CUR.NOTE_DATE$ OR NOTE_DATE$=_CUR.NOTE_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.NOTE_DATE$=NOTE_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("NOTE_DATE")+" = "+_CUR.NOTE_DATE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NOTE_DATE")+" = "+_CUR.NOTE_DATE$
15060 IF _ORIG.NOTE_TIME$=_CUR.NOTE_TIME$ OR NOTE_TIME$=_CUR.NOTE_TIME$ THEN GOTO *NEXT ELSE IF _ORIG.NOTE_TIME$=NOTE_TIME$ THEN _CHG2$=_CHG2$+SEP+MSG("NOTE_TIME")+" = "+_CUR.NOTE_TIME$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NOTE_TIME")+" = "+_CUR.NOTE_TIME$
15070 IF _ORIG.SEQ_NUM$=_CUR.SEQ_NUM$ OR SEQ_NUM$=_CUR.SEQ_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.SEQ_NUM$=SEQ_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$
15080 IF _ORIG.OPER_CODE_ADD_NOTE$=_CUR.OPER_CODE_ADD_NOTE$ OR OPER_CODE_ADD_NOTE$=_CUR.OPER_CODE_ADD_NOTE$ THEN GOTO *NEXT ELSE IF _ORIG.OPER_CODE_ADD_NOTE$=OPER_CODE_ADD_NOTE$ THEN _CHG2$=_CHG2$+SEP+MSG("OPER_C_A_N")+" = "+_CUR.OPER_CODE_ADD_NOTE$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OPER_C_A_N")+" = "+_CUR.OPER_CODE_ADD_NOTE$
15090 IF _ORIG.PERM_TEMP_NOTE$=_CUR.PERM_TEMP_NOTE$ OR PERM_TEMP_NOTE$=_CUR.PERM_TEMP_NOTE$ THEN GOTO *NEXT ELSE IF _ORIG.PERM_TEMP_NOTE$=PERM_TEMP_NOTE$ THEN _CHG2$=_CHG2$+SEP+MSG("PERM_T_N")+" = "+_CUR.PERM_TEMP_NOTE$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PERM_T_N")+" = "+_CUR.PERM_TEMP_NOTE$
15100 IF _ORIG.MY_FOLLOW_UP_DATE$=_CUR.MY_FOLLOW_UP_DATE$ OR MY_FOLLOW_UP_DATE$=_CUR.MY_FOLLOW_UP_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.MY_FOLLOW_UP_DATE$=MY_FOLLOW_UP_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("M_F_U_D")+" = "+_CUR.MY_FOLLOW_UP_DATE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("M_F_U_D")+" = "+_CUR.MY_FOLLOW_UP_DATE$
15110 IF _ORIG.MAIL_NOTE_TO_OP_CODE$=_CUR.MAIL_NOTE_TO_OP_CODE$ OR MAIL_NOTE_TO_OP_CODE$=_CUR.MAIL_NOTE_TO_OP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_NOTE_TO_OP_CODE$=MAIL_NOTE_TO_OP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("M_N_T_O_C")+" = "+_CUR.MAIL_NOTE_TO_OP_CODE$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("M_N_T_O_C")+" = "+_CUR.MAIL_NOTE_TO_OP_CODE$
15120 IF _ORIG.FOLLOW_UP_DATE$=_CUR.FOLLOW_UP_DATE$ OR FOLLOW_UP_DATE$=_CUR.FOLLOW_UP_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.FOLLOW_UP_DATE$=FOLLOW_UP_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("FOLL_U_D")+" = "+_CUR.FOLLOW_UP_DATE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FOLL_U_D")+" = "+_CUR.FOLLOW_UP_DATE$
15130 IF _ORIG.LINE_OF_MESSAGE$=_CUR.LINE_OF_MESSAGE$ OR LINE_OF_MESSAGE$=_CUR.LINE_OF_MESSAGE$ THEN GOTO *NEXT ELSE IF _ORIG.LINE_OF_MESSAGE$=LINE_OF_MESSAGE$ THEN _CHG2$=_CHG2$+SEP+MSG("LINE_O_M")+" = "+_CUR.LINE_OF_MESSAGE$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_O_M")+" = "+_CUR.LINE_OF_MESSAGE$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN NOTE_TYPE$=_CUR.NOTE_TYPE$
16030 IF _CHG_VAR$(2,1)="Y" THEN NOTE_KEY$=_CUR.NOTE_KEY$
16040 IF _CHG_VAR$(3,1)="Y" THEN NOTE_DATE$=_CUR.NOTE_DATE$
16050 IF _CHG_VAR$(4,1)="Y" THEN NOTE_TIME$=_CUR.NOTE_TIME$
16060 IF _CHG_VAR$(5,1)="Y" THEN SEQ_NUM$=_CUR.SEQ_NUM$
16070 IF _CHG_VAR$(6,1)="Y" THEN OPER_CODE_ADD_NOTE$=_CUR.OPER_CODE_ADD_NOTE$
16080 IF _CHG_VAR$(7,1)="Y" THEN PERM_TEMP_NOTE$=_CUR.PERM_TEMP_NOTE$
16090 IF _CHG_VAR$(8,1)="Y" THEN MY_FOLLOW_UP_DATE$=_CUR.MY_FOLLOW_UP_DATE$
16100 IF _CHG_VAR$(9,1)="Y" THEN MAIL_NOTE_TO_OP_CODE$=_CUR.MAIL_NOTE_TO_OP_CODE$
16110 IF _CHG_VAR$(10,1)="Y" THEN FOLLOW_UP_DATE$=_CUR.FOLLOW_UP_DATE$
16120 IF _CHG_VAR$(11,1)="Y" THEN LINE_OF_MESSAGE$=_CUR.LINE_OF_MESSAGE$
16990 RETURN 
17000 SEL_CUSTOMER_VIEW: OPT$=EVS(ID$+"$"),OPT$=PAD(OPT$,10,"0"),IDX=0,K1$="",POSI=13
17001 IF _FIL_NO=0 THEN GOSUB INIT
17005 IF ID$="CUSTOMER" THEN OPT2$="001" ELSE IF ID$="VENDOR" THEN OPT2$="002" ELSE OPT2$="003",POSI=23,OPT$=CUSTOMER$+ITEM_CODE$
17010 READ (_FIL_NO,KEY=OPT2$+OPT$,DOM=*NEXT)
17020 K$=KEY(_FIL_NO,END=END_CUSTOMER); READ (_FIL_NO); K2$=K$,K1$=""
17025 XX=NUM(NOTE_DATE$(1,1),ERR=*NEXT); GOTO 17020
17030 IF K$(1,POSI)<>OPT2$+OPT$ THEN GOTO END_CUSTOMER
17031 IF POS(K$(54,2)="00  ")=0 THEN GOTO 17020 ELSE GOTO 17035
17032 NXT_READ: K$=KEY(_FIL_NO,END=END_CUSTOMER); READ (_FIL_NO); IF POS(K$(54,2)="00  ")<>0 THEN B_NOTE_DATE$=NOTE_DATE$,B_NOTE_TIME$=NOTE_TIME$,B_OPER_CODE_ADD_NOTE$=OPER_CODE_ADD_NOTE$,B_PERM_TEMP_NOTE$=PERM_TEMP_NOTE$ END_IF ; IF STP(LINE_OF_MESSAGE$)="" THEN GOTO 17032
17033 IF K$(1,POSI)<>OPT2$+OPT$ THEN GOTO END_CUSTOMER
17034 IF K$(1,53)<>K2$(1,53) THEN K2$=K$,K1$=""; IF B_NOTE_DATE$<>"" THEN NOTE_DATE$=B_NOTE_DATE$,NOTE_TIME$=B_NOTE_TIME$,OPER_CODE_ADD_NOTE$=B_OPER_CODE_ADD_NOTE$,PERM_TEMP_NOTE$=B_PERM_TEMP_NOTE$,B_OPER_CODE_ADD_NOTE$="",B_PERM_TEMP_NOTE$="",B_NOTE_DATE$="",B_NOTE_TIME$=""
17035 IF LEN(MY_FOLLOW_UP_DATE$)=0 THEN MY_FOLLOW_UP_DATE$="      "
17036 IF K1$="" THEN IDX=IDX+1; LIST_BOX LOAD LB_LINE.CTL,IDX,'BLUE'+FND$(NOTE_DATE$)+" "+NOTE_TIME$(1,2)+":"+NOTE_TIME$(3)+"  "+OPER_CODE_ADD_NOTE$+"  "+PERM_TEMP_NOTE$+"  "+MAIL_NOTE_TO_OP_CODE$
17040 IF K1$<>"" AND K1$(1,43)<>K$(1,43) THEN IDX=IDX+1; LIST_BOX LOAD LB_LINE.CTL,"********************************************************"; IDX=IDX+1; LIST_BOX LOAD LB_LINE.CTL,IDX,NOTE_DATE$+" "+FND$(NOTE_TIME$)+"  "+OPER_CODE_ADD_NOTE$+"  "+PERM_TEMP_NOTE$+"  "+MY_FOLLOW_UP_DATE$+"  "+MAIL_NOTE_TO_OP_CODE$+"  "+FOLLOW_UP_DATE$
17050 IF STP(LINE_OF_MESSAGE$)<>"" THEN IDX=IDX+1; LIST_BOX LOAD LB_LINE.CTL,IDX,"                      "+LINE_OF_MESSAGE$
17060 K1$=K$
17070 GOTO NXT_READ
17500 END_CUSTOMER:
17510 REFRESH_FLG=1,NEXT_ID=BT_EXIT.CTL; RETURN 
17600 QRY_ZZO.1:
17605 IF %ID$="CUSTOMER" THEN CK$="001" ELSE IF %ID$="VENDOR" THEN CK$="002" ELSE CK$="003"
17610 ENTER KEY$
17620 IF MID(KEY$,1,3)<>CK$ THEN EXIT 123 ! SSP225665 jdf
17630 IF KEY$(54,2)<>"00" THEN EXIT 123
17640 EXIT 
17650 SEL_QRY_CUST: VAL$=""
17660 IF %OPTION$="1" THEN PROCESS "QRY_ZZ0","../ZZG/ZZ.EN",VAL$ ELSE PROCESS "QRY_ZZ0.1","../ZZG/ZZ.EN",VAL$ ! SSP225665 jdf
17670 IF VAL$="" THEN CALL "*WINGRP;DISABLE",FIELDS.GRP$; NEXT_ID=EVN(ID$+".CTL"); EXIT 
17672 CALL "ZZDATE",X3$,"","G10101",VAL$(44,6),D0,1,0,0,0,0,0,"","","" ! SSP225665 jdf
17673 H9=NUM(VAL$(50,4)),H9$=STR(9999-H9:"0000"),VAL$(50,4)=H9$ ! SSP225665 jdf
17674 NEW_VAL$=VAL$(1,43)+STR(100000-D0:"00000")+" "+VAL$(50,4)+"00" ! SSP225665 jdf
17675 REFRESH_FLG=1
17676 KEY_1$=NEW_VAL$; REFRESH_FLG=1 ! SSP225665 jdf
17678 A1$=KEY_1$ ! SSP225665 jdf
17680 GOSUB READ_ZZO; GOSUB SEL_OPER REM ; IF ID$="CUSTOMER" THEN CUSTOMER$=VAL$(4,10) ELSE IF ID$="VENDOR" THEN VENDOR$=VAL$(4,10) ! SSP225665 jdf
17682 CUSTOMER$=MID(VAL$,4,10); ITEM_CODE$=MID(VAL$,14,10) ! SSP225665 jdf
17683 IF %OPTION$="3" AND STP(ITEM_CODE$)="" THEN NEXT_ID=ITEM_CODE.CTL; EXIT ELSE TF_DATE$=MID(VAL$,44,6) ! SSP225665 jdf
17684 GOSUB GET_MESSAGE; RETURN ! SSP225665 jdf
17685 CREATE_MESSAGE:
17690 K$=KEY(_FIL_NO,END=END_READ); READ (_FIL_NO,REC=ZZO$)
17700 IF K$(1,53)<>NEW_VAL$(1,53) THEN GOTO END_READ ! SSP225665 jdf
17710 MESSAGE$=MESSAGE$+ZZO.LINE_OF_MESSAGE$+" "; GOTO CREATE_MESSAGE
17720 END_READ: CHANGE_FLG=0,NEXT_ID=MAIL_NOTE_TO_OP_CODE.CTL; RETURN 
17800 SEL_QRY_VEND: VAL$="" ! SSP218950 jdf
17805 %ID$="VENDOR" ! SSP225665 jdf
17810 PROCESS "QRY_ZZO.2","../ZZG/ZZ.EN",VAL$ ! SSP218950 jdf
17820 IF VAL$="" THEN CALL "*WINGRP;DISABLE",FIELDS.GRP$; NEXT_ID=EVN(ID$+".CTL"); EXIT ! SSP218950 jdf
17830 REFRESH_FLG=1 ! SSP218950 jdf
17832 CALL "ZZDATE",X3$,"","G10101",VAL$(44,6),D0,1,0,0,0,0,0,"","","" ! SSP225665 jdf
17833 H9=NUM(VAL$(50,4)),H9$=STR(9999-H9:"0000"),VAL$(50,4)=H9$ ! SSP225665 jdf
17834 NEW_VAL$=VAL$(1,43)+STR(100000-D0:"00000")+" "+VAL$(50,4)+"00" ! SSP225665 jdf
17836 KEY_1$=NEW_VAL$; REFRESH_FLG=1 ! SSP225665 jdf
17838 A1$=KEY_1$ ! SSP225665 jdf
17840 GOSUB READ_ZZO; GOSUB SEL_OPER ! SSP218950 jdf
17850 VENDOR$=MID(VAL$,4,10); TF_DATE$=MID(VAL$,44,6) ! SSP218950 jdf
17856 GOSUB GET_MESSAGE ! SSP225665 jdf
17860 REM GOSUB CREATE_MESSAGE ! SSP218950 jdf
17870 RETURN ! SSP218950 jdf
18000 NEXT_ACTION:GOSUB CLEAR_FIELDS; %ITM_OPT$="" ! SSP 234111
18010 ON NUM(OPTION$) GOTO *NEXT,CUSTOMER,VENDOR,ITEM,STOCK_ITEM ! SSP 234111
18020 RETURN 
18100 CUSTOMER: NOTE_TYPE$=OPT2$
18110 ON NUM(TF_TYPE$) GOTO *NEXT,VIEW_CUSTOMER,WRITE_CUSTOMER
18120 RETURN 
18200 VIEW_CUSTOMER:
18210 REPLACEMENT_SCRN$="GGNOTE.1" ! replacement_lib$="../POG/PO.EN"
18220 REFRESH_FLG=1
18230 RETURN 
18300 WRITE_CUSTOMER:
18310 NOTE_DATE$=%X3_TODAY$,OPER_CODE_ADD_NOTE$=%X3_OP_ID$,NOTE_TIME$=DTE(0:"%Hz:%mz %P")
18320 READ (_ZZP,KEY="o"+%X3_OP_ID$)OPER_NAME$; OPER_NAME$=OPER_NAME$(5,24),REFRESH_FLG=1,REPLACEMENT_SCRN$="GGNOTE.2"
18330 RETURN 
18500 VENDOR:
18510 ON NUM(TF_TYPE$) GOTO *NEXT,VIEW_VENDOR,WRITE_VENDOR
18520 VIEW_VENDOR:
18530 REPLACEMENT_SCRN$="GGNOTE.3",REFRESH_FLG=1
18540 RETURN 
18550 WRITE_VENDOR:
18560 GOSUB WRITE_CUSTOMER
18570 REFRESH_FLG=1,REPLACEMENT_SCRN$="GGNOTE.4"
18580 RETURN 
18600 READ_ZZO:READ (_FIL_NO,KEY=KEY_1$,DOM=NO_ITEM); RETURN 
19000 ITEM:
19010 ON NUM(TF_TYPE$) GOTO *NEXT,VIEW_ITEM,WRITE_ITEM
19020 VIEW_ITEM:
19030 REPLACEMENT_SCRN$="GGNOTE.5",REFRESH_FLG=1
19040 RETURN 
19050 WRITE_ITEM:
19060 GOSUB WRITE_CUSTOMER
19070 REFRESH_FLG=1,REPLACEMENT_SCRN$="GGNOTE.6"
19080 RETURN 
19099 ! 
19100 SEL_ITEM: REFRESH_FLG=1
19110 CUSTOMER$=PAD(CUSTOMER$,10," "),ITEM_CODE$=PAD(ITEM_CODE$,10," ") ! SSP225665 jdf
19111 IF STP(ITEM_CODE$,2)="" THEN RETURN ! SSP 291439
19112 IF %ITM_OPT$="4" THEN GOTO 19150 ! SSP 234111
19115 ! IF _FM1 THEN NOMENU=1; GOSUB INIT; !ssp 291439
19120 READ (_FM1,KEY=CUSTOMER$+ITEM_CODE$,DOM=NO_ITEM)
19130 ITEM_DESC$=_FM1.ITEM_DESC$
19140 RETURN 
19150 IF STP(ITEM_CODE$,2)="" THEN RETURN ! SSP 234111
19152 ! IF _IC0 THEN NOMENU=1; GOSUB INIT; ssp 291439
19155 READ (_IC0,KEY=CUSTOMER$+ITEM_CODE$,DOM=NO_ITEM)
19160 ITEM_DESC$=_IC0.ITEM_DESC$ ! SSP 234111
19170 RETURN ! SSP 234111
19200 NO_ITEM: MSGBOX MSG("ITEM_CODE")+" "+MSG("NOT_FOUND"),MSG("MB_ATTN"),"!"; NEXT_ID=ITEM_CODE.CTL,ITEM_CODE$="",ITEM_DESC$=""; RETURN ! SSP 234111
19500 STOCK_ITEM:! SSP 234111
19505 %ITM_OPT$="4" ! SSP 234111
19510 ON NUM(TF_TYPE$) GOTO *NEXT,VIEW_STK_ITEM,WRITE_STK_ITEM ! SSP 234111
19520 VIEW_STK_ITEM:! SSP 234111
19530 REPLACEMENT_SCRN$="GGNOTE.51",REFRESH_FLG=1 ! SSP 234111
19540 RETURN 
19550 WRITE_STK_ITEM:! SSP 234111
19560 GOSUB WRITE_CUSTOMER
19570 REFRESH_FLG=1,REPLACEMENT_SCRN$="GGNOTE.61"
19580 RETURN 
20000 SEL_OPER: REFRESH_FLG=1
20005 IF STP(MAIL_NOTE_TO_OP_CODE$)="" THEN FOLLOW_UP_DATE$=""; GOTO *RETURN
20010 READ (_ZZP,KEY="o"+MAIL_NOTE_TO_OP_CODE$,DOM=NO_OPER)OPER_NAME1$; OPER_NAME1$=OPER_NAME1$(5,24)
20020 RETURN 
20030 NO_OPER: MAIL_NOTE_TO_OP_CODE$=""; NEXT_ID=MAIL_NOTE_TO_OP_CODE.CTL; RETURN 
21000 WRITE_CUST: OPT$=EVS(ID$+"$"),OPT$=PAD(OPT$,10,"0"); DIM NOTE_KEY$(40); NOTE_KEY$(1,10)=OPT$; IF ID$="CUSTOMER" THEN NOTE_TYPE$="001" ELSE IF ID$="VENDOR" THEN NOTE_TYPE$="002" ELSE NOTE_TYPE$="003"
21001 XX=POS($8A$=MESSAGE$); IF XX<>0 THEN MESSAGE$(XX,1)=" "; GOTO 21001
21002 IF ID$="ITEM" THEN NOTE_KEY$(1,20)=CUSTOMER$+ITEM_CODE$; IF %ITM_OPT$="4" THEN CUSTOMER$=DIM(10),NOTE_KEY$(1,20)=DIM(10)+ITEM_CODE$ ! SSP 234111
21003 DIM _KEY$(55); CALL "ZZDATE",%X3$,"","G10101",NOTE_DATE$,D0,1,0,0,0,0,0,"","",""
21004 IF LEN(NOTE_TIME$)>4 THEN NOTE_TIME$=NOTE_TIME$(1,2)+NOTE_TIME$(4,2)
21005 SEQ_NUM$="00"; DIM _KEY$(55); _KEY$(1)=NOTE_TYPE$+NOTE_KEY$+STR(100000-D0:"00000 ")+STR(9999-NUM(NOTE_TIME$):"0000")+SEQ_NUM$; WRITE (_FIL_NO,KEY=_KEY$) ! SSP225665 jdf
21006 NOTE_TIME$=STR(9999-NUM(NOTE_TIME$):"0000") ! SSP225665 jdf
21008 NXT:
21010 IF LEN(MESSAGE$)>50 THEN MES$=MESSAGE$(1,50),MESSAGE$=MESSAGE$(51); GOSUB CHECK_SPACE; FLAG=1 ELSE MES$=MESSAGE$,FLAG=0 ! SSP225665 jdf
21030 LINE_OF_MESSAGE$=MES$,SEQ=SEQ+1,SEQ_NUM$=STR(SEQ:"00")
21035 EXECUTE "_zzm.message_"+STR(SEQ)+"$=mes$"
21038 HOLD_NOTE_DATE$=NOTE_DATE$,NOTE_DATE$=STR(100000-D0:"00000 "),OPER_CODE_ADD_NOTE$="",PERM_TEMP_NOTE$="",MY_FOLLOW_UP_DATE$="",MAIL_NOTE_TO_OP_CODE$="",FOLLOW_UP_DATE$="" ! SSP225665 jdf
21040 DIM _KEY$(55); _KEY$(1)=NOTE_TYPE$+NOTE_KEY$+STR(100000-D0:"00000 ")+NOTE_TIME$+SEQ_NUM$; WRITE (_FIL_NO,KEY=_KEY$) ! SSP225665 jdf
21045 NOTE_DATE$=HOLD_NOTE_DATE$ ! SSP225665 jdf
21050 IF FLAG=1 THEN GOTO NXT ! SSP225665 jdf
21054 ! 
21055 ! Create Electronic Message System
21056 ! 
21070 _ZZM.SEND_TO_USER$=MAIL_NOTE_TO_OP_CODE$,_ZZN.OPER_CODE$=MAIL_NOTE_TO_OP_CODE$
21072 _ZZM.MESSAGE_DATE$=NOTE_DATE$,_ZZN.DATE_OF_MESSAGE$=NOTE_DATE$
21075 _ZZM.MESSAGE_TIME$=NOTE_TIME$,_ZZN.TIME_OF_MESSAGE$=NOTE_TIME$
21080 _ZZM.TF_FROM$=OPER_CODE_ADD_NOTE$,_ZZN.OTHER_OPERATOR_CODE$=OPER_CODE_ADD_NOTE$
21082 _ZZM.REPLY_REQ$="N",_ZZN.REPLY_REQ$="N"
21085 IF (ID$="CUSTOMER" OR ID$="ITEM") THEN _ZZM.SUBJECT$=CUSTOMER$(1,%AR_DIV_LEN)+"-"+CUSTOMER$(%AR_DIV_LEN+1)+" - "+%CUST_NAME$ ELSE _ZZM.SUBJECT$=VENDOR$(1,%AP_DIV_LEN)+"-"+VENDOR$(%AP_DIV_LEN+1)+" - "+%VEND_NAME$
21086 _ZZN.SUBJECT_DESC$=_ZZM.SUBJECT$,_ZZN.IN_OUT_BOUND_MESSAGE$="I"
21090 _ZZM.EFFE_DATE$=FOLLOW_UP_DATE$
21100 _ZZMKEY$=_ZZM.SEND_TO_USER$+_ZZM.MESSAGE_DATE$+_ZZM.MESSAGE_TIME$+PAD(_ZZM.TF_FROM$,5," ")
21105 IF STP(MAIL_NOTE_TO_OP_CODE$)="" THEN GOTO NXT_MESS
21110 WRITE (_ZZM,KEY=_ZZMKEY$)
21112 FOR AA=1 TO 2; _ZZNKEY$=_ZZN.OPER_CODE$+_ZZN.IN_OUT_BOUND_MESSAGE$+_ZZN.OTHER_OPERATOR_CODE$+_ZZN.DATE_OF_MESSAGE$+_ZZN.TIME_OF_MESSAGE$; WRITE (_ZZN,KEY=_ZZNKEY$); _ZZN.IN_OUT_BOUND_MESSAGE$="R"; NEXT AA
21120 NXT_MESS:
21130 IF STP(MY_FOLLOW_UP_DATE$)="" THEN GOTO END_WRITE_CUST
21140 _ZZN.OPER_CODE$=OPER_CODE_ADD_NOTE$,_ZZN.DATE_OF_MESSAGE$=MY_FOLLOW_UP_DATE$
21150 _ZZN.OUT_BOUND_MESSAGE$="I",_ZZN.OTHER_OPERATOR_CODE$=""
21160 FOR AA=1 TO 2; _ZZNKEY$=_ZZN.OPER_CODE$+_ZZN.IN_OUT_BOUND_MESSAGE$+_ZZN.OTHER_OPERATOR_CODE$+_ZZN.DATE_OF_MESSAGE$+_ZZN.TIME_OF_MESSAGE$; WRITE (_ZZN,KEY=_ZZNKEY$); _ZZN_IN_OUT_BOUND_MESSAGE$="R"; NEXT AA
21999 END_WRITE_CUST: CMD_STR$="E"; RETURN 
22000 CHECK_SPACE:
22010 IF MES$(LEN(MES$))=" " THEN RETURN 
22020 XX=POS(" "=MES$,-1)
22030 IF XX<>0 THEN MESSAGE$=MES$(XX+1)+MESSAGE$,MES$=MES$(1,XX)
22040 RETURN 
23000 SELECT_RECORDS:
23010 ENTER VAL$
23020 IF POS(VAL$(54,2)="00  ")=0 THEN EXIT 123
23030 EXIT 
23100 SEL_QRY:
23110 PROCESS "QRY_ZZ0","../ZZG/ZZ.EN",VAL$; IF (VAL$)="" THEN RETURN ! SSP225665 jdf
23120 CUSTOMER$=MID(VAL$,4,10); ITEM_CODE$=MID(VAL$,14,10) ! SSP225665 jdf
23130 IF NUL(CUSTOMER$) AND NUL(ITEM_CODE$) THEN RETURN ! SSP225665 jdf
23135 NEXT_ID=TF_DATE.CTL,REFRESH_FLG=1 ! SSP225665 jdf
23150 RETURN ! SSP225665 jdf
24000 SEL_REC:
24010 ENTER VAL$
24015 IF POS("osec"=VAL$) THEN EXIT 123
24020 IF LEN(VAL$)>=112 THEN EXIT 
56011 REM "234111-Modify Custom Item Notes feature to allow for a blank cust  
56012 REM "291439- Query does not work for customer Item Notes
