0010 ! ZWGDAA - File Maintenance Program for ZW5_Enhancement_Master (ZW5)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Jun. 19, 2003 15:45
0030 ! ************************************************************************
0040 PROCESS "ZWGDAA","../ZZG/ZZ.EN"
0050 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ZW5"
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0182 _ZZP=HFN,_FILE_NAME$="ZZPARM"; OPEN (_ZZP,ERR=OPEN_ERR)_FILE_NAME$; READ (_ZZP,KEY=FID(0)+"      ")X3$,*,X4$
0185 _ZX0=HFN,_FILE_NAME$="ZX0"; OPEN (_ZX0,IOL=*,REC=_ZX0$)_FILE_NAME$
0188 _ZW6=HFN,_FILE_NAME$="ZW6"; OPEN (_ZW6,IOL=*,REC=_ZW6$)_FILE_NAME$
0189 RD_EDIT$="1",REFRESH_FLG=1
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="DOC_REF$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0942 IF _ZZP<>0 THEN CLOSE (_ZZP); _ZZP=0
0943 IF _ZX0<>0 THEN CLOSE (_ZX0); _ZX0=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1011 IF ID$="DOC_REF" AND DOC_REF$<>"" THEN GOTO 1021
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1022 IF STP(DOC_REF$)<>"" THEN DOC_REF$=PAD(DOC_REF$,5,0,"0"); IF ID$="DOC_REF" THEN DOC_REF.CTL'VALUE$=DOC_REF$
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN REFRESH_FLG=1,NEXT_ID=_FIRST_KEY,DOC_REF$="",CHANGE_FLG=0; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1662 FOR AA=1 TO 4
1665 DES$=EVS("KEYWORD_"+STR(AA)+"$"); IF STP(DES$)="" THEN CONTINUE ELSE DES$=PAD(DES$,14," ")
1668 _ZW6.KEYWORD$=DES$,_ZW6.PRIM_S_C$=PRIMARY_SYSTEM_CODE$,_ZW6.DOC_REF$=DOC_REF$; REMOVE (_ZW6,KEY=_ZW6.KEYWORD$+_ZW6.PRIM_S_C$+_ZW6.DOC_REF$,DOM=*NEXT)
1678 NEXT AA
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0,NEXT_ID=DOC_REF.CTL
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3035 _ENABLE_FLG=1
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3070 GOSUB READ_ZX0
3075 BUTTON HIDE BT_ASSIGN_NO.CTL
3080 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX MSG("WRITE_REC"),MSG("CONFIRM"),"?,YESNO",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3322 FOR AA=1 TO 4
3325 DES$=EVS("KEYWORD_"+STR(AA)+"$"); IF STP(DES$)="" THEN CONTINUE ELSE DES$=PAD(DES$,14," ")
3328 _ZW6.KEYWORD$=DES$,_ZW6.PRIM_S_C$=PRIMARY_SYSTEM_CODE$,_ZW6.DOC_REF$=DOC_REF$; WRITE (_ZW6,KEY=_ZW6.KEYWORD$+_ZW6.PRIM_S_C$+_ZW6.DOC_REF$)
3330 NEXT AA
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=DOC_REF.CTL,_FIRST_FIELD=DATE_ENTERED.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN DOC_REF$=""
13030 DATE_ENTERED$=""
13040 PRIMARY_SYSTEM_CODE$=""
13050 REVIEWED_DATE$=""
13060 KEYWORD_1$="",AP_DESC$=""
13070 KEYWORD_2$=""
13080 KEYWORD_3$=""
13090 KEYWORD_4$=""
13100 KEYWORD_5$=""
13110 DOC_DESC$=""
13120 RELEASE_LVL_EFFECTED$=""
13130 ENTRY_MADE_BY$=""
13140 ENTRY_TYPE$=""
13150 TED$=""
13160 TF_UNUSED$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(15,"N")
15030 IF _ORIG.DOC_REF$=_CUR.DOC_REF$ OR DOC_REF$=_CUR.DOC_REF$ THEN GOTO *NEXT ELSE IF _ORIG.DOC_REF$=DOC_REF$ THEN _CHG2$=_CHG2$+SEP+MSG("DOC_REF")+" = "+_CUR.DOC_REF$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DOC_REF")+" = "+_CUR.DOC_REF$
15040 IF _ORIG.DATE_ENTERED$=_CUR.DATE_ENTERED$ OR DATE_ENTERED$=_CUR.DATE_ENTERED$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_ENTERED$=DATE_ENTERED$ THEN _CHG2$=_CHG2$+SEP+MSG("DATE_E")+" = "+_CUR.DATE_ENTERED$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATE_E")+" = "+_CUR.DATE_ENTERED$
15050 IF _ORIG.PRIMARY_SYSTEM_CODE$=_CUR.PRIMARY_SYSTEM_CODE$ OR PRIMARY_SYSTEM_CODE$=_CUR.PRIMARY_SYSTEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PRIMARY_SYSTEM_CODE$=PRIMARY_SYSTEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIM_S_C")+" = "+_CUR.PRIMARY_SYSTEM_CODE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIM_S_C")+" = "+_CUR.PRIMARY_SYSTEM_CODE$
15060 IF _ORIG.REVIEWED_DATE$=_CUR.REVIEWED_DATE$ OR REVIEWED_DATE$=_CUR.REVIEWED_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.REVIEWED_DATE$=REVIEWED_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("REVI_D")+" = "+_CUR.REVIEWED_DATE$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REVI_D")+" = "+_CUR.REVIEWED_DATE$
15070 IF _ORIG.KEYWORD_1$=_CUR.KEYWORD_1$ OR KEYWORD_1$=_CUR.KEYWORD_1$ THEN GOTO *NEXT ELSE IF _ORIG.KEYWORD_1$=KEYWORD_1$ THEN _CHG2$=_CHG2$+SEP+MSG("KEYWORD_1")+" = "+_CUR.KEYWORD_1$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("KEYWORD_1")+" = "+_CUR.KEYWORD_1$
15080 IF _ORIG.KEYWORD_2$=_CUR.KEYWORD_2$ OR KEYWORD_2$=_CUR.KEYWORD_2$ THEN GOTO *NEXT ELSE IF _ORIG.KEYWORD_2$=KEYWORD_2$ THEN _CHG2$=_CHG2$+SEP+MSG("KEYWORD_2")+" = "+_CUR.KEYWORD_2$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("KEYWORD_2")+" = "+_CUR.KEYWORD_2$
15090 IF _ORIG.KEYWORD_3$=_CUR.KEYWORD_3$ OR KEYWORD_3$=_CUR.KEYWORD_3$ THEN GOTO *NEXT ELSE IF _ORIG.KEYWORD_3$=KEYWORD_3$ THEN _CHG2$=_CHG2$+SEP+MSG("KEYWORD_3")+" = "+_CUR.KEYWORD_3$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("KEYWORD_3")+" = "+_CUR.KEYWORD_3$
15100 IF _ORIG.KEYWORD_4$=_CUR.KEYWORD_4$ OR KEYWORD_4$=_CUR.KEYWORD_4$ THEN GOTO *NEXT ELSE IF _ORIG.KEYWORD_4$=KEYWORD_4$ THEN _CHG2$=_CHG2$+SEP+MSG("KEYWORD_4")+" = "+_CUR.KEYWORD_4$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("KEYWORD_4")+" = "+_CUR.KEYWORD_4$
15110 IF _ORIG.KEYWORD_5$=_CUR.KEYWORD_5$ OR KEYWORD_5$=_CUR.KEYWORD_5$ THEN GOTO *NEXT ELSE IF _ORIG.KEYWORD_5$=KEYWORD_5$ THEN _CHG2$=_CHG2$+SEP+MSG("KEYWORD_5")+" = "+_CUR.KEYWORD_5$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("KEYWORD_5")+" = "+_CUR.KEYWORD_5$
15120 IF _ORIG.DOC_DESC$=_CUR.DOC_DESC$ OR DOC_DESC$=_CUR.DOC_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.DOC_DESC$=DOC_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("DOC_DESC")+" = "+_CUR.DOC_DESC$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DOC_DESC")+" = "+_CUR.DOC_DESC$
15130 IF _ORIG.RELEASE_LVL_EFFECTED$=_CUR.RELEASE_LVL_EFFECTED$ OR RELEASE_LVL_EFFECTED$=_CUR.RELEASE_LVL_EFFECTED$ THEN GOTO *NEXT ELSE IF _ORIG.RELEASE_LVL_EFFECTED$=RELEASE_LVL_EFFECTED$ THEN _CHG2$=_CHG2$+SEP+MSG("RELE_L_E")+" = "+_CUR.RELEASE_LVL_EFFECTED$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RELE_L_E")+" = "+_CUR.RELEASE_LVL_EFFECTED$
15140 IF _ORIG.ENTRY_MADE_BY$=_CUR.ENTRY_MADE_BY$ OR ENTRY_MADE_BY$=_CUR.ENTRY_MADE_BY$ THEN GOTO *NEXT ELSE IF _ORIG.ENTRY_MADE_BY$=ENTRY_MADE_BY$ THEN _CHG2$=_CHG2$+SEP+MSG("ENTR_M_B")+" = "+_CUR.ENTRY_MADE_BY$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ENTR_M_B")+" = "+_CUR.ENTRY_MADE_BY$
15150 IF _ORIG.ENTRY_TYPE$=_CUR.ENTRY_TYPE$ OR ENTRY_TYPE$=_CUR.ENTRY_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.ENTRY_TYPE$=ENTRY_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("ENTRY_TYPE")+" = "+_CUR.ENTRY_TYPE$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ENTRY_TYPE")+" = "+_CUR.ENTRY_TYPE$
15160 IF _ORIG.TED$=_CUR.TED$ OR TED$=_CUR.TED$ THEN GOTO *NEXT ELSE IF _ORIG.TED$=TED$ THEN _CHG2$=_CHG2$+SEP+MSG("TED")+" = "+_CUR.TED$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TED")+" = "+_CUR.TED$
15170 IF _ORIG.TF_UNUSED$=_CUR.TF_UNUSED$ OR TF_UNUSED$=_CUR.TF_UNUSED$ THEN GOTO *NEXT ELSE IF _ORIG.TF_UNUSED$=TF_UNUSED$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.TF_UNUSED$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.TF_UNUSED$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN DOC_REF$=_CUR.DOC_REF$
16030 IF _CHG_VAR$(2,1)="Y" THEN DATE_ENTERED$=_CUR.DATE_ENTERED$
16040 IF _CHG_VAR$(3,1)="Y" THEN PRIMARY_SYSTEM_CODE$=_CUR.PRIMARY_SYSTEM_CODE$
16050 IF _CHG_VAR$(4,1)="Y" THEN REVIEWED_DATE$=_CUR.REVIEWED_DATE$
16060 IF _CHG_VAR$(5,1)="Y" THEN KEYWORD_1$=_CUR.KEYWORD_1$
16070 IF _CHG_VAR$(6,1)="Y" THEN KEYWORD_2$=_CUR.KEYWORD_2$
16080 IF _CHG_VAR$(7,1)="Y" THEN KEYWORD_3$=_CUR.KEYWORD_3$
16090 IF _CHG_VAR$(8,1)="Y" THEN KEYWORD_4$=_CUR.KEYWORD_4$
16100 IF _CHG_VAR$(9,1)="Y" THEN KEYWORD_5$=_CUR.KEYWORD_5$
16110 IF _CHG_VAR$(10,1)="Y" THEN DOC_DESC$=_CUR.DOC_DESC$
16120 IF _CHG_VAR$(11,1)="Y" THEN RELEASE_LVL_EFFECTED$=_CUR.RELEASE_LVL_EFFECTED$
16130 IF _CHG_VAR$(12,1)="Y" THEN ENTRY_MADE_BY$=_CUR.ENTRY_MADE_BY$
16140 IF _CHG_VAR$(13,1)="Y" THEN ENTRY_TYPE$=_CUR.ENTRY_TYPE$
16150 IF _CHG_VAR$(14,1)="Y" THEN TED$=_CUR.TED$
16160 IF _CHG_VAR$(15,1)="Y" THEN TF_UNUSED$=_CUR.TF_UNUSED$
16990 RETURN 
17000 TEXT_PROCESSING:
17005 H0$="z.csi"+DLM+"tfin"+DLM,H1$="ssp"+FID(0),%TEXT_SSP$=""
17010 PRINT 'DIALOGUE'(5,3,90,28,"Text Processing - Documment : "+DOC_REF$+" "+DOC_DESC$,OPT="*S"),'CS','_WHITE'
17015 PRINT 'MESSAGE'('BLUE'+"Return to TopForm By Typing : q!"),'CURSOR'(6)
17020 CALL "ZW2ZZY",X3$,X4$,"0"+DOC_REF$,"R","ZW0"
17022 IF RB_EDIT$="1" THEN GOSUB NOTEPAD; GOTO 17040
17025 Q$="umask 0;vi "+H0$+H1$
17026 INVOKE Q$,ERR=*NEXT
17040 PRINT (0,ERR=*NEXT)'CURSOR'(0),'CH',
17050 IF RB_EDIT$="2" THEN PRINT (0,ERR=*NEXT)'POP',
17060 CALL "ZW2ZZY",X3$,X4$,"0"+DOC_REF$,"W","ZW0"
17070 RETURN 
18000 NOTEPAD:
18001 PRINT (0,ERR=*NEXT)'POP',
18002 FIND (_ZZP,KEY="PATH"+WHO,ERR=*NEXT)*,WORDPAD$; GOTO 18010
18003 PROCESS "ZWGPAT","../ZZG/ZZ.EN"; GOTO 18002
18010 IF DEC(MID(MSE,22,1))>3 THEN WINDX=1,WDX$="[wdx]" ELSE WINDX=0,WDX$=""
18011 IF WORDPAD$="" THEN GOTO 18002
18013 IF WINDX THEN EXECUTE "[wdx]invoke hide wait "+QUO+"cmd.exe /C erase c:\"+H1$+QUO ELSE INVOKE WAIT "copy \\"+NID+"\pvx\z.csi\tfin\"+H1$+" ."
18015 IF WINDX THEN EXECUTE "[wdx]invoke hide WAIT "+QUO+"cmd.exe /C copy \\"+NID+"\pvx\z.csi\tfin\"+H1$+" c:\"+H1$+QUO ELSE INVOKE WAIT "copy \\"+NID+"\pvx\z.csi\tfin\"+H1$+" ."
18018 ! WORDPAD$="C:\Program Files\Windows NT\Accessories\wordpad.exe"
18020 IF WINDX THEN EXECUTE "[wdx]invoke wait "+QUO+WORDPAD$+" c:\"+H1$+QUO ELSE INVOKE WAIT WORDPAD$+" c:\"+H1$
18025 MSGBOX "Press Ok to Continue","Continue","INFO,OK",OPT$
18030 IF WINDX THEN EXECUTE "[wdx]invoke hide wait  "+QUO+"cmd.exe /C copy c:\"+H1$+" \\"+NID+"\pvx\z.csi\tfin\"+H1$+QUO ELSE INVOKE WAIT "copy c:\"+H1$+" \\"+NID+"\pvx\z.csi\tfin\"+H1$
18050 RETURN 
28000 HARD_COPY:
28010 PRINT 'DIALOGUE'(20,15,60,8,"Enter Comment"),'CS'
28020 ! CH_PR=0; CALL "*pr.opn",CH_PR,0
28025 PRINT 'TEXT'(55,60,1000,100,"Comment/Title:"); MULTI_LINE 100,@(15,1,40,1); SET_FOCUS 100; OBTAIN *; MULTI_LINE READ 100,TF_COMMENT$
28030 PRINT 'POP',
28034 IF CTL=4 THEN GOTO *RETURN
28035 PRINT 'CURSOR'(1); CH_PR=HFN; OPEN (CH_PR,ERR=END_HARD)"*windev*" ! CH_PR=0; CALL "*pr.opn",CH_PR,0
28040 IF CH_PR=0 THEN GOTO *RETURN
28042 %TEXT_SSP$="",PAGE=0; CALL "ZW2ZZY",X3$,X4$,"0"+DOC_REF$,"R","ZW0"; GOSUB HEADER; GOTO 28081
28045 HEADER: PAGE=PAGE+1,LINE=10
28050 TF_NAME$=STP(X3$(86,40)),TIL$=MSG("ZWGDAA")
28055 PRINT (CH_PR)@(0),"Date/Time:",DTE(0:"%Mz/%Dz/%Yl %hz:%mz %p")
28057 PRINT (CH_PR)@(0)," Terminal:",FID(0)
28058 PRINT (CH_PR)@(0),"  User ID:",WHO,'LF'
28059 IF TF_COMMENT$<>"" THEN PRINT (CH_PR)@(INT((80-LEN(TF_COMMENT$))/2)),TF_COMMENT$,'LF'
28060 PRINT (CH_PR)"  Program: ZWGDAA",@(INT((80-LEN(TF_NAME$))/2)),TF_NAME$,@(66),"Page: ",PAGE:"###"
28070 PRINT (CH_PR)"     Date: ",DTE(0:"%Ml %Dz, %Yl"),@(INT((80-LEN(TIL$))/2)),TIL$,@(66),"Time: ",DTE(0:"%hz:%mz %p")
28080 PRINT (CH_PR)PAD(RAY$,80,"-"); RETURN 
28082 AA$=MSG("DOC_REF")+":",BB$=MSG("KEYWORD")+":"; PRINT (CH_PR)@(23-LEN(AA$)),AA$,DOC_REF$,@(52-LEN(BB$)),BB$,@(54),KEYWORD_1$
28085 D$=DATE_ENTERED$; GOSUB DATES; AA$=MSG("DATE_E")+":"; PRINT (CH_PR)@(23-LEN(AA$)),AA$,D$,@(54),KEYWORD_2$
28087 AA$=MSG("PRIM_S_C")+":"; PRINT (CH_PR)@(23-LEN(AA$)),AA$,PRIMARY_SYSTEM_CODE$,@(54),KEYWORD_3$
28090 AA$=MSG("RELE_L_E")+":",BB$=MSG("ENTR_M_B")+":"; PRINT (CH_PR)@(23-LEN(AA$)),AA$,RELEASE_LVL_EFFECTED$,"   ",BB$+ENTRY_MADE_BY$,@(54),KEYWORD_4$
28092 D$=REVIEWED_DATE$; GOSUB DATES; AA$=MSG("REVI_D")+":"; PRINT (CH_PR)@(23-LEN(AA$)),AA$,D$
28095 AA$=MSG("ENTRY_TYPE")+":",BB$=MSG("TED")+":",CC$=MSG("MENU_OPT")+":"; PRINT (CH_PR)@(23-LEN(AA$)),AA$,ENTRY_TYPE$,@(41),BB$+TED$,@(54),CC$+KEYWORD_5$
28098 AA$=MSG("DOC_DESC")+":"; PRINT (CH_PR)@(23-LEN(AA$)),AA$,'LF',DOC_DESC$
28140 PRINT (CH_PR)PAD("",80,"-"); LINE=LINE+9
28142 XX=POS($0A$=%TEXT_SSP$); IF XX=0 THEN GOTO END_HARD_COPY
28145 PRINT (CH_PR)%TEXT_SSP$(1,XX-1); %TEXT_SSP$=%TEXT_SSP$(XX+1),LINE=LINE+1
28150 IF LINE>=59 THEN PRINT (CH_PR)'FF'; GOSUB HEADER
28160 GOTO 28142
28180 END_HARD_COPY:
28190 PRINT (CH_PR)'FF'
28200 CLOSE (CH_PR)
28205 END_HARD:
28206 PRINT 'CURSOR'(0)
28210 RETURN 
29000 DATES:
29010 CALL "ZZWDTE;DISPLAY",D$,D1$
29020 RETURN 
29100 READ_ZX0: REFRESH_FLG=1
29110 READ (_ZX0,KEY=PRIMARY_SYSTEM_CODE$,DOM=NO_ZX0)
29120 AP_DESC$=_ZX0.TF_DESCRIPTION$
29130 RETURN 
29140 NO_ZX0: AP_DESC$=MSG("REC_NOTFND"); IF ID$="PRIMARY_SYSTEM_CODE" THEN PRIMARY_SYSTEM_CODE$="",NEXT_ID=PRIMARY_SYSTEM_CODE.CTL END_IF ; RETURN 
29200 SEL_SSP_NOTE:
29210 %TEXT_SSP$="",%GUI=1,PAGE=0; CALL "ZW2ZZY",X3$,X4$,"0"+DOC_REF$,"R","ZW0"
29220 TEXT_SSP$=%TEXT_SSP$
29230 XX=POS($0A$=TEXT_SSP$); IF XX<>0 THEN TEXT_SSP$(XX,1)=SEP; GOTO 29230
29240 REFRESH_FLG=1; RETURN 
30000 PROCESS_ZW6: PROCESS "QRY_ZW6","../ZZG/ZZ.EN",DOC_REF$; REFRESH_FLG=1; IF DOC_REF$="" THEN NEXT_ID=DOC_REF.CTL ELSE PERFORM "ZWGDAA;FIND_REC"; NEXT_ID=KEYWORD_1.CTL,REFRESH_FLG=1
30010 IF DOC_REF$="" THEN NEXT_ID=DOC_REF.CTL; GOTO *RETURN
30020 _KEY$=DOC_REF$; READ (_FIL_NO,KEY=_KEY$); GOSUB PROCESS_READ; NEXT_ID=KEYWORD_1.CTL,REFRESH_FLG=1
30030 RETURN 
30100 SEL_NXT_ASS: REFRESH_FLG=1
30110 N$=KEL(_FIL_NO,ERR=FIRST_NUMBER)
30120 DOC_REF$=STR(NUM(N$)+1:"00000"),DOC_REF.CTL'VALUE$=DOC_REF$,ID$="DOC_REF"; GOSUB FIND_REC
30130 RETURN 
30200 FIRST_NUMBER:
30210 DOC_REF$="00001",DOC_REF.CTL'VALUE$=DOC_REF$,ID$="DOC_REF"; GOSUB FIND_REC
30220 RETURN 
