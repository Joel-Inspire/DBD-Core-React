0010 ! ZZGEXE - Export Files Excel
0035 REM "5.7 - 09/06/24 - 13.369203 - crg - SSP# 307492
0037 REM "307492-DBD-487:PxPlus ODBC interface utility for DBD use           
0040 REM "Copyright 2024 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ZZGEXE","../ZZG/ZZ.EN"
0060 SETERR 0070; EXIT 
0070 EXIT ; REM QUIT ; SSP231522 jdf
0080 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 IOLIST TF_NAME$,PATH$
0130 IOLIST IOLOBJ$,TF_NAME$,TF_DESC$,TF_TYPE$,LEN$,OCC$,FORMAT$,VALID$,TF_PRINT$,HELP$,NOTES$,KEYDEF$,QUERY$,CLASS$,FLAGS$,DFLT$,ALT_NAME$
0140 _DDF=HFN; OPEN (_DDF)"providex.ddf"
0150 _DDE=HFN; OPEN (_DDE)"providex.dde"
0152 _ZZS=HFN; OPEN (_ZZS,ERR=*NEXT)"ZZGQRY"; GOTO 0200
0160 KEYED "../ZZG/ZZGQRY",39,,4152; GOTO 0152
0200 ! ^100
0210 I=0,K=0
0220 LIST_BOX LOAD LOG_FILE.CTL,""
0230 READ (_DDF,KEY="",KNO=1,DOM=0240)
0240 K$=KEY(_DDF,KNO=1,END=0310)
0245 IF POS("VIEW:"=K$)<>0 THEN READ (_DDF); GOTO 0240 ! SSP 204543
0250 IF K1$=K$ THEN GOTO 0310 ELSE K1$=K$
0260 READ (_DDF,KEY=K$,KNO=1,REC=WRK$)IOL=0120
0270 IF OBJ_NME$=K$ OR KEC(_DDF,KNO=0)="000000" THEN GOTO 0240
0275 IF POS(WRK.TF_NAME$(1,3)="AR7APJ",3)<>0 THEN FILE_NO=HFN; OPEN (FILE_NO)WRK.TF_NAME$(1,3)+%C$; CHECK_TYPE$=FN%FIN$(FILE_NO,"KEY_SIZE"); CLOSE (FILE_NO); IF CHECK_TYPE$="0" THEN GOTO 0240; REM "SSP#202622                         
0280 I=I+1; IF WRK.TF_NAME$=LOG_FILE$ THEN K=I
0290 LIST_BOX LOAD LOG_FILE.CTL,0,WRK.TF_NAME$
0300 GOTO 0240
0310 RETURN 
0320 ! 
0330 SEL_FILE:
0340 ! 
0350 CLOSE (_MEM,ERR=*NEXT)
0360 _MEM=HFN; OPEN (_MEM)"*memory*"
0370 READ (_DDF,KEY=LOG_FILE$,KNO=1,DOM=*RETURN); DDF_KEY$=KEC(_DDF,KNO=0)
0380 READ (_DDE,KEY=DDF_KEY$,KNO=0,DOM=*NEXT)
0390 K$=KEY(_DDE,END=END_LOAD); IF K$(1,6)<>DDF_KEY$ THEN GOTO END_LOAD
0400 READ (_DDE,KEY=K$)IOL=0130
0410 WRITE (_MEM,KEY=TF_NAME$)IOL=0130
0420 IF POS(":1:"=KEYDEF$)<>0 THEN TF_DESC$="*"+TF_DESC$
0430 XX=POS("=MSG"=TF_DESC$); IF XX<>0 THEN EXECUTE "TF_DESC$="+TF_DESC$(XX+1) ! 231800
0440 LIST_BOX LOAD LB_FIELDS.CTL,0,TF_DESC$+SEP+TF_NAME$; GOTO 0390
0450 X=X+1
0460 ! 
0470 END_LOAD:
0480 ! 
0490 CALL "*WINGRP;SHOW",FIELDS.GRP$
0500 A=LB_FIELDS.CTL,B=LB_FIELDS_SEL.CTL
0510 IF A'ITEMCOUNT<19 THEN A'LINES=A'ITEMCOUNT+1.5,B'LINES=A'LINES ELSE A'LINES=20.5,B'LINES=20.5
0520 SET_FOCUS A
0530 NEXT_ID=BT_SEL_ALL.CTL
0540 RETURN 
0550 ! 
0560 SEL_FIELDS:
0570 ! 
0580 LIST_BOX READ LB_FIELDS.CTL,IDX
0590 LIST_BOX LOAD LB_FIELDS_SEL.CTL,0,LB_FIELDS$
0600 LIST_BOX LOAD LB_FIELDS.CTL,IDX,*
0610 RETURN 
0620 ! 
0630 RESTORE_SEL_FIELDS:
0640 ! 
0650 IF _EOM$<>$0D$ AND _EOM$<>$02$ THEN RETURN 
0660 LIST_BOX READ LB_FIELDS_SEL.CTL,IDX
0670 LIST_BOX LOAD LB_FIELDS.CTL,0,LB_FIELDS_SEL$
0680 LIST_BOX LOAD LB_FIELDS_SEL.CTL,IDX,*
0690 RETURN 
0700 ! 
0710 SEL_ALL:
0720 ! 
0730 AA=LB_FIELDS.CTL'ITEMCOUNT; IF AA=0 THEN RETURN 
0740 FOR X=1 TO AA
0750 LIST_BOX FIND LB_FIELDS.CTL,1,LB$
0760 LIST_BOX LOAD LB_FIELDS_SEL.CTL,0,LB$
0770 LIST_BOX LOAD LB_FIELDS.CTL,1,*
0780 NEXT 
0790 NEXT_ID=BT_EXPORT.CTL
0800 RETURN 
0810 ! 
0820 DELETE_ALL:
0830 ! 
0840 AA=LB_FIELDS_SEL.CTL'ITEMCOUNT; IF AA=0 THEN RETURN 
0850 FOR X=1 TO AA
0860 LIST_BOX FIND LB_FIELDS_SEL.CTL,1,LB$
0870 LIST_BOX LOAD LB_FIELDS.CTL,0,LB$
0880 LIST_BOX LOAD LB_FIELDS_SEL.CTL,1,*
0890 NEXT 
0900 RETURN 
0910 ! 
0920 SEL_MOVE:
0930 ! 
0940 A=LB_FIELDS_SEL.CTL
0950 LIST_BOX READ A,IDX,ERR=*NEXT
0960 IF IDX=0 THEN RETURN 
0970 IF IDX+XX=0 THEN RETURN 
0980 IF IDX+XX>A'ITEMCOUNT THEN RETURN 
0990 LIST_BOX FIND A,IDX,LB$
1000 LIST_BOX LOAD A,IDX,*
1010 LIST_BOX LOAD A,IDX+XX,LB$
1020 LIST_BOX WRITE A,IDX+XX
1030 RETURN 
1040 ! 
1050 SEL_DOWN: XX=1; GOTO SEL_MOVE
1060 ! 
1070 SEL_UP: XX=-1; GOTO SEL_MOVE
1080 ! 
1090 GENERATE: B=LB_FIELDS_SEL.CTL,FMT$="",LBLST$="",DBFLD$="",IDX=0,NO=0,TEXT$="" ! SSP231522 jdf This subroutine is no longer being used, ZZGEXE uses ZZGFLE;EXPORT to create the Excel SpreadSheet.
1100 ! 
1110 IF B'ITEMCOUNT=0 THEN MSGBOX "No Fields Selected",MSG("WARNING"),"!,TIM=3"; RETURN 
1120 READ (_DDF,KEY=LOG_FILE$,KNO=1,REC=WRK$)IOL=0120
1130 FOR X=1 TO B'ITEMCOUNT
1140 LIST_BOX FIND B,X,LB$
1150 TF_NAME$=LB$(POS(SEP=LB$)+1),DE$=LB$(1,POS(SEP=LB$)-1)
1160 READ (_MEM,KEY=TF_NAME$)IOL=0130
1165 IF STP(TF_PRINT$)<>"" AND TF_PRINT$(LEN(TF_PRINT$))="-" THEN TF_PRINT$="-"+TF_PRINT$(1,LEN(TF_PRINT$)-1)
1170 IF LEN(DE$)>NUM(LEN$) THEN LN=LEN(DE$)/1.1 ELSE LN=NUM(LEN$)+1
1180 IF TF_TYPE$="S" THEN JUSTIFY$="L",VAR$=TF_NAME$+"$",ALL_VAL$=ALL_VAL$+VAR$+"," ELSE JUSTIFY$="#R",VAR$="STR("+TF_NAME$+":"+QUO+TF_PRINT$+QUO+")",ALL_VAL$=ALL_VAL$+TF_NAME$+","
1190 IF CLASS$<>"" THEN GOSUB CHECK_CLASS
1200 IF POS("PHONE"=TF_NAME$)<>0 OR POS("FAX"=TF_NAME$)<>0 THEN CLASS$="PHONE"; GOSUB CHECK_CLASS
1210 GOSUB CHECK_VARIABLE_FMT
1220 IF NO=1 AND (TF_NAME$="CUST_CODE" OR TF_NAME$="VEND_CODE" OR TF_NAME$="ORDER_NUM" OR TF_NAME$="PO_NUM" OR TF_NAME$="BILL_TO_CUST_CODE") THEN GOTO 1250
1225 IF TF_TYPE$="S" THEN TEXT$+="@" ELSE TEXT$+=" "
1227 IF CLASS$="DATE-KKMMDD" THEN TEXT$(LEN(TEXT$),1)="D"
1230 FMT$=FMT$+"["+DE$+"]"+JUSTIFY$+STR(LN)+" "
1235 XX=POS("+"=VAR$); IF XX<>0 THEN XXX=POS("$"=VAR$(XX)),HTM1$=VAR$(XX+1,XXX-2) ELSE HTM1$=TF_NAME$
1238 HTML_TO_PRINT$=HTML_TO_PRINT$+VAR$+$09$,HTML_TO_FLD$=HTML_TO_FLD$+HTM1$+$09$ ! ,HTML_TO_DESC$=HTML_TO_DESC$+DE$+$09$
1240 LBLST$=LBLST$+VAR$+"+SEP+"
1250 DBFLD$=DBFLD$+TF_NAME$+"/"
1260 NEXT 
1265 FMT$+=" [Key Information]L30 ",LBLST$+="FIL_NO_KEY$+SEP+",XX=POS("@"=TEXT$,-1) ! IF XX<>0 THEN TEXT$(XX,1)=" "
1280 ! 
1290 GENERATE_PHASE_II:
1300 ! 
1310 PRINT 'CAPTION'(LOG_FILE$+" - ZZGEXE.1")
1320 READ (_DDF,KEY=LOG_FILE$,KNO=1,REC=WRK$)IOL=0120
1330 IF POS("="=WRK.PATH$)<>0 THEN WRK.PATH$=WRK.PATH$(2) ELSE WRK.PATH$=QUO+WRK.PATH$+QUO
1340 IF LBLST$(LEN(LBLST$))="+" THEN LBLST$=LBLST$(1,LEN(LBLST$)-1)
1350 IDX=0; LN$=STR(TCB(4)+10); EXECUTE LN$+" _FIL_NO=HFN;OPEN (_FIL_NO,IOL=*)"+WRK.PATH$
1360 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*)"FM1"+%C$
1370 NUMREC=NUM(FN%FIN$(_FIL_NO,"NUMREC")) ! DIM NUMREC$[NUMREC]
1380 LN$=STR(TCB(4)+60); EXECUTE LN$+" IDX+=1; RECS$="+LBLST$
1390 LINE$=LST(PGM(NUM(LN$))); EXECUTE "15585 IDX+=1,RECS$="+LBLST$
1392 EXECUTE "18110 REC+=1,TF_VALUE$="+LBLST$
1395 IF ID$="BT_XML" THEN GOTO HTML_FILE ELSE GOTO EXPORT
1400 ! 
1410 READ_FILE:
1420 ! 
1430 FIL_NO_KEY$=KEY(_FIL_NO,END=END_READ_FILE); READ (_FIL_NO)
1440 IDX+=1; RECS$=FN%ZZDISP$(CUST_DIV$+CUST_CODE$,"A/R")+SEP+ITEM_CODE$+SEP+PROD_CODE$+SEP+LEFT_RIGHT$+SEP+TOP_BOTTOM$+SEP+PLYS$+SEP+ITEM_DESC$+SEP+FN%ZZDISP$(VEND_DIV$+VEND_CODE$,"A/P")+SEP+PLANT_CODE$+SEP+COST_UM$+SEP+SELL_UM$+SEP+NUMBERING$+SEP+DIST_ITEM$+SEP+FM1_UNUSED_1$+SEP+FMS$+SEP+FN%FMT_TFDATE$(RO_DATE$,"MM/DD/YYYY")+SEP+FIND_FEE$+SEP+FIND_FEE_VEND_DIV$+SEP+FIND_FEE_VEND_CODE$+SEP+FN%FMT_TFDATE$(LAST_ORDER_DATE$,"MM/DD/YYYY")+SEP+LAST_ORDER_DIV$+SEP+LAST_ORDER_NUM$+SEP+ENDING_NUM$+SEP+PREV_JOB_NUM$+SEP+FN%FMT_TFDATE$(PREV_JOB_NUM_DATE$,"MM/DD/YYYY")+SEP+ITEM_REVISION$+SEP+FUNC_CODE$+SEP+SRC_CUST_DIV$+SEP+SRC_CUST_CODE$+SEP+ACTIVE_STATUS$+SEP+FM1_UNUSED_2$+SEP+PREV_ITEM_CODE$+SEP+ITEM_CONT_CODE$+SEP+ITEM_GROUP_CODE$+SEP+ART_DISK_FILE$+SEP+ART_STATUS_CODE$+SEP+FN%FMT_TFDATE$(ART_STAT_DATE$,"MM/DD/YYYY")+SEP+ALT_UM_1$+SEP+ALT_UM_2$+SEP+ALT_UM_3$+SEP+ALT_UM_4$+SEP+ITEM_STAT_CODE$+SEP+FN%FMT_TFDATE$(ITEM_STAT_DATE$,"MM/DD/YYYY")+SEP+ITEM_STAT_MEMO$+SEP+AUTO_PRICE_EST_GROUP$+SEP+AUTO_PRICE_FEATURES$+SEP+REQ_ACCESS_CNTL_CODE$+SEP+FN%FMT_TFDATE$(NO_RON_TIL$,"MM/DD/YYYY")+SEP+FN%FMT_TFDATE$(CASUAL_CNT_DATE$,"MM/DD/YYYY")+SEP+FN%FMT_TFDATE$(ITEM_1ST_USED$,"MM/DD/YYYY")+SEP+FN%FMT_TFDATE$(ITEM_LAST_WHSE_SHIP$,"MM/DD/YYYY")+SEP+DFLT_COST_CODE$+SEP+CIC$+SEP+SPEC_CODE$+SEP+FN%FMT_TFDATE$(CONTRACT_EXPIRE$,"MM/DD/YYYY")+SEP+NOWEBECORD$+SEP+FM1_UNUSED_3$+SEP+TF_MEMO$+SEP+STR(CTN_PACK:"-##,##0")+SEP+STR(TF_COST:"-###,###.00")+SEP+STR(COST_QTY_PER:"-###,###.00")+SEP+STR(PRICE:"-###,###.00")+SEP+STR(SELL_QTY_PER:"-###,###.00")+SEP+STR(FM1_UNUSED_4:"-##,###,###.00")+SEP+STR(EST_YRLY_USAGE:"-##,###,###.00")+SEP+STR(FIND_FEE_PRCNT:"-###.00")+SEP+STR(YTD_NUM_INV:"-##0")+SEP+STR(YTD_QTY:"-#,###,##0")+SEP+STR(YTD_NET_SALE:"-#,###,###.00")+SEP+STR(YTD_GP:"-#,###,###.00")+SEP+STR(LY_NUM_INV:"-##0")+SEP+STR(LY_QTY:"-#,###,##0")+SEP+STR(LY_NET_SALE:"-#,###,###,00")+SEP+STR(LY_GP:"-#,###,###.00")+SEP+STR(LAST_QTY_ORDERED:"-#,###,##0")+SEP+STR(COMBO_QTY:"-##,###,##0")+SEP+STR(CTN_WT:"-###.00")+SEP+STR(RO_PT_WEEKS_SUPPLY:"-##0")+SEP+STR(LAST_CASUAL_CNT_QTY:"-##,###,##0")+SEP+STR(STOCK_LEVEL:"-###,##0")+SEP+STR(RO_PT_DAYS:"-##0")+SEP+STR(RO_PT_QTY:"-#,###,##0")+SEP+STR(AVG_MTHLY_USAGE:"-#,###,##0")+SEP+STR(ALT_UNIT_QTY_PER_1:"-##,##0")+SEP+STR(ALT_UNIT_QTY_PER_2:"-##,##0")+SEP+STR(ALT_UNIT_QTY_PER_3:"-##,##0")+SEP+STR(ALT_UNIT_QTY_PER_4:"-##,##0")+SEP+STR(FMS_PRICE:"-###,###.00")+SEP+STR(FMS_PRCNT:"-###.00")+SEP+STR(REQUISITION_MAXIMUM:"-###,###,###.00")+SEP+FIL_NO_KEY$+SEP
1445 IF MOD(IDX,500)=0 THEN PHASE.CTL'VALUE$="Reading File :"+STP(STR(IDX:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))+" - "+STR(IDX/NUMREC*100)+"%"
1450 GOTO READ_FILE ! NUMREC$[IDX]=FIL_NO_KEY$; GOTO READ_FILE
1460 ! 
1470 END_READ_FILE:PRINT 'CAPTION'(LOG_FILE$+"> Records "+STR(IDX)+" - ZZGFLE.1")
1475 ! HIDE CONTROL PHASE.CTL
1480 IF SORT_BY<>0 THEN LB_LIST.CTL'SORT=SORT_BY,SORT_BY=0
1490 ! 
1500 RETURN 
1510 ! 
1520 SEARCH:
1530 ! 
1540 DIM EXP$[8]; EXP$[1]="=",EXP$[2]="<=",EXP$[3]="=>",EXP$[4]="<>",EXP$[5]="<",EXP$[6]=">",YESNO$=""
1550 PROCESS "ZZGFLE.2","../ZZG/ZZ.EN",DBFLD$,VAR$,OPT$,TF_VALUE$,YESNO$
1560 IF YESNO$<>"YES" THEN RETURN 
1570 IDX=0
1575 SHOW CONTROL PHASE.CTL
1580 LIST_BOX LOAD LB_LIST.CTL,""
1590 LIST_BOX LOAD LB_LIST.CTL,1,*
1600 XX=POS(VAR$=ALL_VAL$); IF XX<>0 THEN XXX=POS(","=ALL_VAL$(XX)),VAR$=ALL_VAL$(XX,XXX-1),TYPE=POS("$"=VAR$)
1610 EXECUTE "12605 IDX+=1; LIST_BOX LOAD LB_LIST.CTL,IDX,"+LBLST$
1615 COUNT=0
1620 READ (_FIL_NO,KEY="",DOM=*NEXT)
1630 ! 
1640 READ_FIL:IF MOD(COUNT,500)=0 THEN PHASE.CTL'VALUE$="Reading File :"+STP(STR(COUNT:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))+" - "+STR(COUNT/NUMREC*100)+"%"
1650 ! 
1660 READ (_FIL_NO,END=END_READ_FILE); COUNT+=1
1670 IF STP(VAR$)="" THEN GOTO PRINT_REC
1671 IF OPT$<>"8" THEN GOTO 1675
1672 IF TYPE=0 THEN EXECUTE "if pos(value$=str("+VAR$+"))<>0 goto print_rec"
1673 IF TYPE<>0 THEN EXECUTE "if pos(value$="+VAR$+")<>0 goto print_rec"
1674 GOTO READ_FIL
1675 IF OPT$<>"7" THEN GOTO 1680
1676 IF TYPE=0 THEN EXECUTE "if mid(str("+VAR$+"),1,len(value$)) = value$ goto print_rec"
1678 IF TYPE<>0 THEN EXECUTE "if mid("+VAR$+",1,len(value$)) = value$ goto print_rec"
1679 GOTO READ_FIL
1680 IF TYPE=0 THEN EXECUTE "IF "+VAR$+" "+EXP$[NUM(OPT$)]+" NUM(TF_VALUE$,ERR=READ_FIL) GOTO PRINT_REC"
1690 IF TYPE<>0 THEN EXECUTE "IF STP("+VAR$+") "+EXP$[NUM(OPT$)]+" TF_VALUE$ GOTO PRINT_REC"
1700 GOTO READ_FIL
2000 CLOSE_FILES:
2010 CLOSE (_DDF,ERR=*NEXT)
2020 CLOSE (_DDE,ERR=*NEXT)
2030 CLOSE (_MEM,ERR=*NEXT)
2040 CLOSE (_FIL_NO,ERR=*NEXT)
2050 CLOSE (EXCEL,ERR=*NEXT)
2052 CLOSE (_ZZS,ERR=*NEXT)
2060 RETURN 
9999 END 
10000 ! 10000,10 Check Class
10010 CHECK_CLASS:
10020 ! 
10030 SWITCH CLASS$
10040 CASE "DATE-KKMMDD"
10050 VAR$="FN%FMT_TFDATE$("+TF_NAME$+"$,"+QUO+"MM/DD/YYYY"+QUO+")",JUSTIFY$="MDYC"
10055 IF LN<10 THEN LN=10
10060 BREAK
10070 CASE "ZIP"
10080 VAR$="STR("+TF_NAME$+"$:"+QUO+"XXXXX-XXXX"+QUO+")"
10090 BREAK
10100 CASE "SALES_TAX"
10110 VAR$="STR("+TF_NAME$+"$:%SALES_TAX_MASK$)"; BREAK
10120 CASE "PHONE"
10130 VAR$="STR("+TF_NAME$+"$:%PHONE_MASK$)"
10140 BREAK
10150 END SWITCH 
10160 RETURN 
10170 ! 
12600 PRINT_REC:! 12600,10
12610 GOTO READ_FIL
12620 ! 
12630 CHECK_VARIABLE_FMT:
12640 ! 
12650 DIM VAR_FMT$[10]; VAR_FMT$[1]="G/L",VAR_FMT$[2]="A/P",VAR_FMT$[3]="A/R",VAR_FMT$[4]="O/P",VAR_FMT$[5]="P/O",VAR_FMT$[6]="A/R",VAR_F$="GL_ACCT$         VEND_DIV$        CUST_DIV$        ORDER_DIV$       PO_DIV$          BILL_TO_CUST_DIV$"
12660 XX=POS(VAR$=VAR_F$,17); IF XX=0 THEN RETURN 
12670 XX=INT(XX/17)+1
12680 IF VAR_FMT$[XX]="A/P" THEN NO=1,LN=10,VAR$=VAR$+"+VEND_CODE$",DE$=MSG("VENDOR"); GOTO 12720 ELSE NO=0
12690 IF VAR_FMT$[XX]="O/P" THEN NO=1,LN=9,VAR$=VAR$+"+ORDER_NUM$",DE$=MSG("ORD_NO"); GOTO 12720 ELSE NO=0
12700 IF VAR_FMT$[XX]="P/O" THEN NO=1,LN=10,VAR$=VAR$+"+PO_NUM$",DE$=MSG("PO_NUM"); GOTO 12720 ELSE NO=0
12710 IF VAR_FMT$[XX]="A/R" AND XX=3 THEN NO=1,LN=10,VAR$=VAR$+"+CUST_CODE$",DE$=MSG("CUSTOMER"); GOTO 12720 ELSE NO=0
12712 IF XX=6 AND VAR_FMT$[XX]="A/R" THEN NO=1,LN=10,VAR$=VAR$+"+BILL_TO_CUST_CODE$",DE$=MSG("BILL_T_C_C"),LN=LEN(DE$) ELSE NO=0
12720 VAR$="FN%ZZDISP$("+VAR$+","+QUO+VAR_FMT$[XX]+QUO+")"
12730 RETURN 
12740 SEL_LINE:
12745 LB_LIST$=LB_LIST$(1,LEN(LB_LIST$)-1)
12750 %FIRST_KEY$=LB_LIST$(POS(SEP=LB_LIST$,-1)+1),SORT_BY=LB_LIST.CTL'SORT
12760 %CHN_N=_FIL_NO,%FILE_NAME$=FIN(%CHN_N,"FILENAME"); PROCESS "FILEMANT","../KTG/KT.EN","1"
12770 READ (_FIL_NO,KEY="",DOM=*NEXT)
12775 PHASE.CTL'VALUE$="Reading File :"; SHOW CONTROL PHASE.CTL
12780 LIST_BOX LOAD LB_LIST.CTL,""
12790 NUMREC=NUM(FN%FIN$(_FIL_NO,"NUMREC")),IDX=0 ! DIM NUMREC$[NUMREC]
12800 EXECUTE LINE$
12810 GOTO READ_FILE
13000 GRAPHIC: SH=1
13010 FOR A=37 TO 1 STEP -1
13015 CT=EVN("bt"+STR(A)+".ctl")
13020 SHOW CONTROL CT
13025 WAIT .5
13030 FOR BB=1 TO 100000
13040 NEXT 
13050 NEXT 
13070 FOR A=1 TO 37
13075 CT=EVN("bt"+STR(A)+".ctl")
13080 HIDE CONTROL CT
13085 WAIT .5
13090 FOR BB=1 TO 100000
13100 NEXT 
13110 NEXT 
13120 L=L+1; IF L<=40 THEN GOTO 13010
14000 WRITE_REC:
14010 LOG_F$=PAD(LOG_FILE$,30)
14020 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"000")%C$,%X3$(40,3),LOG_F$,"000",WRK.PATH$,ALL_VAL$
14030 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"001")FMT$
14040 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"002")LBLST$
14050 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"003")DBFLD$
14060 MSGBOX "Query Record: "+STP(LOG_F$)+SEP+SEP+"Updated","Update","!,tim=3"
14070 RETURN 
14100 DELETE_REC:
14110 LOG_F$=PAD(LOG_FILE$,30)
14120 FOR AA=0 TO 3
14130 REMOVE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+STR(AA:"000"),DOM=*NEXT)
14140 NEXT 
14150 MSGBOX "Query Record: "+STP(LOG_F$)+SEP+SEP+"Deleted","Delete","!,tim=3"
14160 RETURN 
15000 ! 15000,20
15020 EXPORT:CALL "*WINGRP;HIDE",HIDE.GRP$; CALL "*WINGRP;SHOW",PHASE.GRP$; PRINT 'SIZE'(53,5),'MOVE'(35,12)
15040 ! 
15060 IF DEC(MID(MSE,22,1))>3 THEN WINDX=1,WDX$="[wdx]" ELSE WINDX=0,WDX$=""
15080 PHASE.CTL'VALUE$="Exporting File....",SHEET=1,IDX=0,REC=0
15100 SHOW CONTROL PHASE.CTL; GOSUB EXCEL
15120 PHASE.CTL'VALUE$="Auto Formatting"
15140 NEXT_ID=BT_EXPORT.CTL
15160 WRITE RECORD (EXCEL,ERR=*NEXT)"[Format.Auto]"
15165 CALL "$CTL-10;AGENT_MSG",ERR=*NEXT,"Export Done",1
15170 PHASE.CTL'VALUE$="Closing Excel"; WAIT 1
15180 CLOSE (EXCEL,ERR=*NEXT)
15200 CALL "*WINGRP;HIDE",HIDE.GRP$
15210 PRINT 'MOVE'(1,4),'SIZE'(98,29)
15211 CALL "*WINGRP;SHOW",HIDE.GRP$
15215 CALL "*wingrp;hide",EXPORT.GRP$; CALL "*WINGRP;HIDE",PHASE.GRP$
15216 NEXT_ID=BT_EXIT.CTL
15220 RETURN 
15240 EXCEL:
15260 R=0
15270 SYSTEM_HELP "excel.exe"; GOTO 15300
15280 IF WINDX THEN EXECUTE "[wdx]invoke "+QUO+"c:\program Files\Microsoft Office\Office\excel.exe"+QUO ELSE INVOKE "c:\program Files\Microsoft Office\Office\excel.exe"
15300 WAIT 2
15320 PHASE.CTL'VALUE$="Creating Header"
15340 GOSUB CREATE_HEADER
15360 B_ALL_LEN$=ALL_LEN$,B_NUMREC=NUMREC,EXCEL=HFN; OPEN (EXCEL)"[WDX][dde]excel;"; ADD_SHEET=INT(NUMREC/65535)-3,PHASE.CTL'VALUE$="Open Excel"
15361 IF ADD_SHEET>0 THEN FOR RR=1 TO ADD_SHEET+1; WRITE RECORD (EXCEL)"[WORKBOOK.INSERT(1)]"; NEXT RR; WRITE RECORD (EXCEL)"[WorkBook.Select("+QUO+"Sheet1"+QUO+")]"; PHASE.CTL'VALUE$="Insert New Sheet(s)"
15380 R=1
15385 PHASE.CTL'VALUE$="Write and Set Header"
15400 K$="R"+STR(R)+"C1:R"+STR(R)+"C"+STR(COL)
15410 IF POS("FM1"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15421
15412 IF POS("XPD"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15421
15413 IF POS("FS2"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15421 ! SSP 203104
15414 IF POS("ECS"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15421 ! SSP 203104
15415 IF POS("IC0"=PTH(_FIL_NO))<>0 THEN GOSUB HEADER_FM1; COL_LEN=0; GOTO 15421 ! SSP 226355
15420 WRITE RECORD (EXCEL,KEY=K$,ERR=*RETURN)HEADER$; COL_LEN=0
15440 TEXT=0 ! len of all column
15450 IF NUMREC>65535 THEN SEL=65536,NUMREC=NUMREC-65535 ELSE SEL=NUMREC+1
15460 XX=POS(","=ALL_LEN$); IF XX=0 THEN GOTO 15560
15480 COL_LEN+=1,VAL$=ALL_LEN$(1,XX-1),ALL_LEN$=ALL_LEN$(XX+1)
15500 BB$="[SELECT("+QUO+"R1C"+STR(COL_LEN)+":R"+STR(SEL)+"C"+STR(COL_LEN)+QUO+","+QUO+"R"+STR(SEL)+"C"+STR(COL_LEN)+QUO+")]"; WRITE RECORD (EXCEL,ERR=*NEXT)BB$
15520 WRITE RECORD (EXCEL,ERR=*NEXT)"[Column.width("+VAL$+")]"; IF COL_LEN<=LEN(TEXT$) AND TEXT$(COL_LEN,1)="@" THEN WRITE RECORD (EXCEL)"[Format.Number("+QUO+TEXT$(COL_LEN,1)+QUO+")]" ELSE IF COL_LEN<=LEN(TEXT$) AND TEXT$(COL_LEN,1)=" " THEN WRITE RECORD (EXCEL,ERR=*NEXT)"[Format.Number("+QUO+"###,###,###.00_);[RED](###,###,###.00)"+QUO+")]" ELSE IF COL_LEN<=LEN(TEXT$) AND TEXT$(COL_LEN,1)="D" THEN WRITE RECORD (EXCEL,ERR=*NEXT)"[Format.Number("+QUO+"mm/dd/yyyy"+QUO+")]"
15540 GOTO 15460
15560 WRITE RECORD (EXCEL)"[SELECT(""R1C1:R1"+X$+"C1"","""+"R1"+"C1"")]"
15570 ! IF REC>65536 THEN REC=1,SHEET+=1; WRITE RECORD (EXCEL)"[WORKBOOK.SELECT("+QUO+"Sheet"+STR(SHEET)+QUO+")]"
15575 PHASE.CTL'VALUE$="Writing First 500 Records"
15580 READ_NXT: FIL_NO_KEY$=KEY(_FIL_NO,END=END_READ_FILE); READ (_FIL_NO)
15585 IDX+=1,RECS$=FN%ZZDISP$(CUST_DIV$+CUST_CODE$,"A/R")+SEP+ITEM_CODE$+SEP+PROD_CODE$+SEP+LEFT_RIGHT$+SEP+TOP_BOTTOM$+SEP+PLYS$+SEP+ITEM_DESC$+SEP+FN%ZZDISP$(VEND_DIV$+VEND_CODE$,"A/P")+SEP+PLANT_CODE$+SEP+COST_UM$+SEP+SELL_UM$+SEP+NUMBERING$+SEP+DIST_ITEM$+SEP+FM1_UNUSED_1$+SEP+FMS$+SEP+FN%FMT_TFDATE$(RO_DATE$,"MM/DD/YYYY")+SEP+FIND_FEE$+SEP+FIND_FEE_VEND_DIV$+SEP+FIND_FEE_VEND_CODE$+SEP+FN%FMT_TFDATE$(LAST_ORDER_DATE$,"MM/DD/YYYY")+SEP+LAST_ORDER_DIV$+SEP+LAST_ORDER_NUM$+SEP+ENDING_NUM$+SEP+PREV_JOB_NUM$+SEP+FN%FMT_TFDATE$(PREV_JOB_NUM_DATE$,"MM/DD/YYYY")+SEP+ITEM_REVISION$+SEP+FUNC_CODE$+SEP+SRC_CUST_DIV$+SEP+SRC_CUST_CODE$+SEP+ACTIVE_STATUS$+SEP+FM1_UNUSED_2$+SEP+PREV_ITEM_CODE$+SEP+ITEM_CONT_CODE$+SEP+ITEM_GROUP_CODE$+SEP+ART_DISK_FILE$+SEP+ART_STATUS_CODE$+SEP+FN%FMT_TFDATE$(ART_STAT_DATE$,"MM/DD/YYYY")+SEP+ALT_UM_1$+SEP+ALT_UM_2$+SEP+ALT_UM_3$+SEP+ALT_UM_4$+SEP+ITEM_STAT_CODE$+SEP+FN%FMT_TFDATE$(ITEM_STAT_DATE$,"MM/DD/YYYY")+SEP+ITEM_STAT_MEMO$+SEP+AUTO_PRICE_EST_GROUP$+SEP+AUTO_PRICE_FEATURES$+SEP+REQ_ACCESS_CNTL_CODE$+SEP+FN%FMT_TFDATE$(NO_RON_TIL$,"MM/DD/YYYY")+SEP+FN%FMT_TFDATE$(CASUAL_CNT_DATE$,"MM/DD/YYYY")+SEP+FN%FMT_TFDATE$(ITEM_1ST_USED$,"MM/DD/YYYY")+SEP+FN%FMT_TFDATE$(ITEM_LAST_WHSE_SHIP$,"MM/DD/YYYY")+SEP+DFLT_COST_CODE$+SEP+CIC$+SEP+SPEC_CODE$+SEP+FN%FMT_TFDATE$(CONTRACT_EXPIRE$,"MM/DD/YYYY")+SEP+NOWEBECORD$+SEP+FM1_UNUSED_3$+SEP+TF_MEMO$+SEP+STR(CTN_PACK:"-##,##0")+SEP+STR(TF_COST:"-###,###.00")+SEP+STR(COST_QTY_PER:"-###,###.00")+SEP+STR(PRICE:"-###,###.00")+SEP+STR(SELL_QTY_PER:"-###,###.00")+SEP+STR(FM1_UNUSED_4:"-##,###,###.00")+SEP+STR(EST_YRLY_USAGE:"-##,###,###.00")+SEP+STR(FIND_FEE_PRCNT:"-###.00")+SEP+STR(YTD_NUM_INV:"-##0")+SEP+STR(YTD_QTY:"-#,###,##0")+SEP+STR(YTD_NET_SALE:"-#,###,###.00")+SEP+STR(YTD_GP:"-#,###,###.00")+SEP+STR(LY_NUM_INV:"-##0")+SEP+STR(LY_QTY:"-#,###,##0")+SEP+STR(LY_NET_SALE:"-#,###,###,00")+SEP+STR(LY_GP:"-#,###,###.00")+SEP+STR(LAST_QTY_ORDERED:"-#,###,##0")+SEP+STR(COMBO_QTY:"-##,###,##0")+SEP+STR(CTN_WT:"-###.00")+SEP+STR(RO_PT_WEEKS_SUPPLY:"-##0")+SEP+STR(LAST_CASUAL_CNT_QTY:"-##,###,##0")+SEP+STR(STOCK_LEVEL:"-###,##0")+SEP+STR(RO_PT_DAYS:"-##0")+SEP+STR(RO_PT_QTY:"-#,###,##0")+SEP+STR(AVG_MTHLY_USAGE:"-#,###,##0")+SEP+STR(ALT_UNIT_QTY_PER_1:"-##,##0")+SEP+STR(ALT_UNIT_QTY_PER_2:"-##,##0")+SEP+STR(ALT_UNIT_QTY_PER_3:"-##,##0")+SEP+STR(ALT_UNIT_QTY_PER_4:"-##,##0")+SEP+STR(FMS_PRICE:"-###,###.00")+SEP+STR(FMS_PRCNT:"-###.00")+SEP+STR(REQUISITION_MAXIMUM:"-###,###,###.00")+SEP+FIL_NO_KEY$+SEP
15600 TF_VALUE$=RECS$,REC+=1
15620 XX=POS(SEP=TF_VALUE$,-1),TF_VALUE$=TF_VALUE$(1,XX)
15640 ! XX=POS(SEP=TF_VALUE$); IF XX<>0 THEN TF_VALUE$=TF_VALUE$(XX+1)
15660 TF_VALUE$=SUB(TF_VALUE$,SEP,$09$) ! XX=POS(SEP=TF_VALUE$); IF XX<>0 THEN TF_VALUE$(XX,1)=$09$; GOTO 15660
15680 K$="R"+STR(R+REC)+"C1:R"+STR(R+REC)+"C"+STR(COL)
15700 WRITE RECORD (EXCEL,KEY=K$)TF_VALUE$
15720 IF MOD(IDX,500)=0 THEN PHASE.CTL'VALUE$="Exporting File :"+STP(STR(IDX:"###,###,###"))+" of "+STP(STR(B_NUMREC:"###,###,###"))+" ["+STR(IDX/B_NUMREC*100)+"%]"
15721 IF MOD(IDX,500)=0 THEN WRITE RECORD (EXCEL)"[SELECT(""R"+STR(REC)+"C1:R"+STR(REC)+X$+"C1"","""+"R"+STR(REC)+"C1"")]"
15725 IF REC>=65535 THEN GOTO SELECT_NEW_SHEET
15740 GOTO READ_NXT
15760 FMT$=B_FMT$
15780 RETURN 
15800 CREATE_HEADER: B_FMT$=FMT$
15820 XX=POS(" [Key Information]L30 "=FMT$),FMT$=FMT$(1,XX-1)
15840 HEADER$="",COL=0,ALL_LEN$=""
15860 XX=POS("["=FMT$); IF XX=0 THEN RETURN 
15880 XXX=POS("]"=FMT$(XX)),COL=COL+1
15900 TMP$=FMT$(XX+1,XXX-1-XX),FMT$=FMT$(XXX+XX),HEADER$=HEADER$+TMP$+$09$
15920 XX=POS(" "=FMT$),TMP$=FMT$(1,XX-1),FMT$=FMT$(XX+1)
15940 ! Rutine for len
15960 IF POS(TMP$(1,1)="0123456789")=0 THEN TMP$=TMP$(2); GOTO 15960
15980 ALL_LEN$=ALL_LEN$+TMP$+","
16000 GOTO 15860
16134 YES=0
17000 SELECT_NEW_SHEET: B_EXCEL=EXCEL
17005 PHASE.CTL'VALUE$="Auto Formatting"
17010 WRITE RECORD (EXCEL,ERR=*NEXT)"[Format.Auto]"
17015 WAIT 2
17020 EXCEL=HFN,SHEET+=1
17025 IF SHEET>=2 THEN CLOSE (B_EXCEL,ERR=*NEXT)
17026 PHASE.CTL'VALUE$="Openning Sheet"+STR(SHEET)
17030 OPEN (EXCEL,ERR=*SAME)"[DDE]Excel;Sheet"+STR(SHEET)
17035 PHASE.CTL'VALUE$="Selecting Sheet"+STR(SHEET)
17040 WRITE RECORD (EXCEL,ERR=*SAME)"[WorkBook.Select("+QUO+"Sheet"+STR(SHEET)+QUO+")]"; REC=0,ALL_LEN$=B_ALL_LEN$,COL_LEN=0; GOTO 15380
18000 HTML_FILE:! 18000,10
18002 CALL "*WINGRP;HIDE",HIDE.GRP$; CALL "*WINGRP;SHOW",PHASE.GRP$; PRINT 'SIZE'(53,5),'MOVE'(35,8)
18010 SHOW CONTROL PHASE.CTL
18020 PHASE.CTL'VALUE$="Creating Header Information"
18030 GOSUB CREATE_HEADER; FMT$=B_FMT$
18040 ! SYSTEM_HELP "winword.exe"; WAIT 3
18050 ! _WORD=HFN; OPEN (_WORD)"[dde]winword;"
18060 TMP$="/tmp/tmpxml"+FID(0)+".xml"; ERASE TMP$,ERR=*NEXT
18070 PHASE.CTL'VALUE$="Define Temp File"
18080 SERIAL TMP$; TMP=HFN; OPEN LOCK (TMP)TMP$; GOSUB CREATE_DEF
18090 PRINT (TMP)"<"+LOG_FILE$+">"
18100 READNXT: FIL_NO_KEY$=KEY(_FIL_NO,END=END_OF_FILE); READ (_FIL_NO)
18110 REC+=1,TF_VALUE$=FN%ZZDISP$(CUST_DIV$+CUST_CODE$,"A/R")+SEP+ITEM_CODE$+SEP+PROD_CODE$+SEP+LEFT_RIGHT$+SEP+TOP_BOTTOM$+SEP+PLYS$+SEP+ITEM_DESC$+SEP+FN%ZZDISP$(VEND_DIV$+VEND_CODE$,"A/P")+SEP+PLANT_CODE$+SEP+COST_UM$+SEP+SELL_UM$+SEP+NUMBERING$+SEP+DIST_ITEM$+SEP+FM1_UNUSED_1$+SEP+FMS$+SEP+FN%FMT_TFDATE$(RO_DATE$,"MM/DD/YYYY")+SEP+FIND_FEE$+SEP+FIND_FEE_VEND_DIV$+SEP+FIND_FEE_VEND_CODE$+SEP+FN%FMT_TFDATE$(LAST_ORDER_DATE$,"MM/DD/YYYY")+SEP+LAST_ORDER_DIV$+SEP+LAST_ORDER_NUM$+SEP+ENDING_NUM$+SEP+PREV_JOB_NUM$+SEP+FN%FMT_TFDATE$(PREV_JOB_NUM_DATE$,"MM/DD/YYYY")+SEP+ITEM_REVISION$+SEP+FUNC_CODE$+SEP+SRC_CUST_DIV$+SEP+SRC_CUST_CODE$+SEP+ACTIVE_STATUS$+SEP+FM1_UNUSED_2$+SEP+PREV_ITEM_CODE$+SEP+ITEM_CONT_CODE$+SEP+ITEM_GROUP_CODE$+SEP+ART_DISK_FILE$+SEP+ART_STATUS_CODE$+SEP+FN%FMT_TFDATE$(ART_STAT_DATE$,"MM/DD/YYYY")+SEP+ALT_UM_1$+SEP+ALT_UM_2$+SEP+ALT_UM_3$+SEP+ALT_UM_4$+SEP+ITEM_STAT_CODE$+SEP+FN%FMT_TFDATE$(ITEM_STAT_DATE$,"MM/DD/YYYY")+SEP+ITEM_STAT_MEMO$+SEP+AUTO_PRICE_EST_GROUP$+SEP+AUTO_PRICE_FEATURES$+SEP+REQ_ACCESS_CNTL_CODE$+SEP+FN%FMT_TFDATE$(NO_RON_TIL$,"MM/DD/YYYY")+SEP+FN%FMT_TFDATE$(CASUAL_CNT_DATE$,"MM/DD/YYYY")+SEP+FN%FMT_TFDATE$(ITEM_1ST_USED$,"MM/DD/YYYY")+SEP+FN%FMT_TFDATE$(ITEM_LAST_WHSE_SHIP$,"MM/DD/YYYY")+SEP+DFLT_COST_CODE$+SEP+CIC$+SEP+SPEC_CODE$+SEP+FN%FMT_TFDATE$(CONTRACT_EXPIRE$,"MM/DD/YYYY")+SEP+NOWEBECORD$+SEP+FM1_UNUSED_3$+SEP+TF_MEMO$+SEP+STR(CTN_PACK:"-##,##0")+SEP+STR(TF_COST:"-###,###.00")+SEP+STR(COST_QTY_PER:"-###,###.00")+SEP+STR(PRICE:"-###,###.00")+SEP+STR(SELL_QTY_PER:"-###,###.00")+SEP+STR(FM1_UNUSED_4:"-##,###,###.00")+SEP+STR(EST_YRLY_USAGE:"-##,###,###.00")+SEP+STR(FIND_FEE_PRCNT:"-###.00")+SEP+STR(YTD_NUM_INV:"-##0")+SEP+STR(YTD_QTY:"-#,###,##0")+SEP+STR(YTD_NET_SALE:"-#,###,###.00")+SEP+STR(YTD_GP:"-#,###,###.00")+SEP+STR(LY_NUM_INV:"-##0")+SEP+STR(LY_QTY:"-#,###,##0")+SEP+STR(LY_NET_SALE:"-#,###,###,00")+SEP+STR(LY_GP:"-#,###,###.00")+SEP+STR(LAST_QTY_ORDERED:"-#,###,##0")+SEP+STR(COMBO_QTY:"-##,###,##0")+SEP+STR(CTN_WT:"-###.00")+SEP+STR(RO_PT_WEEKS_SUPPLY:"-##0")+SEP+STR(LAST_CASUAL_CNT_QTY:"-##,###,##0")+SEP+STR(STOCK_LEVEL:"-###,##0")+SEP+STR(RO_PT_DAYS:"-##0")+SEP+STR(RO_PT_QTY:"-#,###,##0")+SEP+STR(AVG_MTHLY_USAGE:"-#,###,##0")+SEP+STR(ALT_UNIT_QTY_PER_1:"-##,##0")+SEP+STR(ALT_UNIT_QTY_PER_2:"-##,##0")+SEP+STR(ALT_UNIT_QTY_PER_3:"-##,##0")+SEP+STR(ALT_UNIT_QTY_PER_4:"-##,##0")+SEP+STR(FMS_PRICE:"-###,###.00")+SEP+STR(FMS_PRCNT:"-###.00")+SEP+STR(REQUISITION_MAXIMUM:"-###,###,###.00")+SEP+FIL_NO_KEY$+SEP
18120 XX=POS(SEP=TF_VALUE$,-1),TF_VALUE$=TF_VALUE$(1,XX-1),XX=POS(SEP=TF_VALUE$,-1),REC_KEY$=TF_VALUE$(XX+1),TF_VALUE$=TF_VALUE$(1,XX)
18130 REC_KEY$=SUB(SUB(SUB(SUB(SUB(REC_KEY$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
18134 YES=0
18135 XX=POS(CHR(127)<=REC_KEY$); IF XX<>0 THEN YES=1,TC$=REC_KEY$(XX,1); REC_KEY$=SUB(REC_KEY$,TC$,"&#"+STR(ASC(TC$))+";"); GOTO *SAME
18140 PRINT (TMP)"<Record Key="+QUO+REC_KEY$+QUO+">"
18150 B_HEADER$=HEADER$,B_HTML_TO_FLD$=HTML_TO_FLD$
18160 NXT_FLD: VAL1=POS(SEP=TF_VALUE$); IF VAL1=0 THEN GOTO END_REC ELSE VAL1$=TF_VALUE$(1,VAL1-1),TF_VALUE$=TF_VALUE$(VAL1+1)
18170 VAL1=POS($09$=HTML_TO_FLD$); IF VAL1=0 THEN CONTINUE ELSE VAL2$=HTML_TO_FLD$(1,VAL1-1),HTML_TO_FLD$=HTML_TO_FLD$(VAL1+1)
18180 VAL1=POS($09$=HEADER$); IF VAL1=0 THEN CONTINUE ELSE VAL3$=HEADER$(1,VAL1-1),HEADER$=HEADER$(VAL1+1)
18190 VAL3$=SUB(SUB(SUB(SUB(SUB(VAL3$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
18200 VAL1$=SUB(SUB(SUB(SUB(SUB(VAL1$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
18205 IF YES THEN XX=POS(CHR(127)<=VAL1$); IF XX<>0 THEN YES=1,TC$=VAL1$(XX,1); VAL1$=SUB(VAL1$,TC$,"&#"+STR(ASC(TC$))+";"); GOTO *SAME
18210 PRINT (TMP)DIM(5)+"<"+LCS(VAL2$)+" Desc="+QUO+STP(VAL3$)+QUO+">"+STP(VAL1$)+"</"+LCS(VAL2$)+">"
18220 GOTO NXT_FLD
18230 END_REC:
18240 PRINT (TMP)"</Record>"
18250 HEADER$=B_HEADER$,HTML_TO_FLD$=B_HTML_TO_FLD$
18260 ! CLIP_BOARD WRITE REC$; REC$=""; WRITE RECORD (_WORD)"[editpaste]"; WRITE RECORD (_WORD)"[InsertPara]"; L=0
18270 IF MOD(REC,500)=0 THEN PHASE.CTL'VALUE$="Creating Records :"+STP(STR(REC:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))
18280 GOTO READNXT
18285 END_OF_FILE:
18290 PRINT (TMP)"</"+LOG_FILE$+">"
18300 CLOSE (TMP)
18310 GOSUB SEND_FILES
18320 HIDE CONTROL PHASE.CTL
18325 CMD_STR$="E"
18330 RETURN 
18340 SEND_FILES:
18350 ! 17100,10
18360 F$="\\"+NID+TMP$
18370 XX=POS("/"=TMP$); IF XX<>0 THEN TMP$(XX,1)="\"; GOTO 18370
18375 MSGBOX "File Done: "+TMP$+SEP+SEP+"Do you Wish to View File?",MSG("CONFIRMING"),"INFO,YESNO",OPT$; IF OPT$="NO" THEN RETURN 
18380 EXP=HFN; OPEN (EXP,ERR=*NEXT)"[dde]explorer;\\"+NID+TMP$
18385 CLOSE (EXP)
18390 RETURN 
18400 SYSTEM_HELP "winword.exe"
18410 WAIT 2
18420 _WINWORD=HFN; OPEN (_WINWORD)"[dde]winword;"
18430 WRITE RECORD (_WINWORD)"[InsertFile .Name="+QUO+F$+QUO+"]"
18440 WAIT 3
18450 WRITE RECORD (_WINWORD)"[EditSelectAll]"
18460 WAIT 1
18470 WRITE RECORD (_WINWORD)"[FormatFont .Points=7, .FONT="+QUO+"Courier New"+QUO+"]"
18480 WAIT 1
18490 WRITE RECORD (_WINWORD)"[FilePageSetup .TopMargin=108.18]"
18500 WRITE RECORD (_WINWORD)"[FIlePageSetup .BottomMargin=36.03]"
18510 WRITE RECORD (_WINWORD)"[FilePageSetup .LeftMargin=18.02]"
18520 WRITE RECORD (_WINWORD)"[FilePageSetup .RightMargin=18.02]"
18530 WRITE RECORD (_WINWORD)"[Viewzoom .zoompercent=125]"
18540 WRITE RECORD (_WINWORD)"[startofdocument(0)]"
18550 WRITE RECORD (_WINWORD,ERR=*NEXT)"[EditReplace.Find="+QUO+CHR(138)+QUO+",.Replace="+QUO+QUO+",.Direction=0,.ReplaceAll,.WRap=0]"
18560 WRITE RECORD (_WINWORD)"[FileSaveAs .name="+QUO+LOG_FILE$+".txt"+QUO+"]"
18570 CLOSE (_WINWORD)
18580 RETURN 
18590 CREATE_DEF:
18600 PHASE.CTL'VALUE$="Creating Definition"
18610 PRINT (TMP)"<?xml version="+QUO+"1.0"+QUO+" standalone="+QUO+"yes"+QUO+"?>"
18620 PRINT (TMP)"<!DOCTYPE "+LOG_FILE$
18630 PRINT (TMP)DIM(5)+"["
18640 PRINT (TMP)DIM(5)+"<!ELEMENT "+LOG_FILE$+" (Record*)>"
18650 B_HTML_TO_FLD$=LCS(HTML_TO_FLD$),B_HTML_TO_FLD$=SUB(B_HTML_TO_FLD$,$09$,","),B_HTML_TO_FLD$=B_HTML_TO_FLD$(1,LEN(B_HTML_TO_FLD$)-1)
18660 PRINT (TMP)DIM(5)+"<!ELEMENT Record ("+B_HTML_TO_FLD$+")>"
18670 PRINT (TMP)DIM(5)+"<!ATTLIST Record Key CDATA #IMPLIED>"
18680 B_HTML_TO_FLD$=B_HTML_TO_FLD$+","
18690 NXT_FIELDS:
18700 XX=POS(","=B_HTML_TO_FLD$); IF XX=0 THEN GOTO END_FIELDS
18710 VAL$=B_HTML_TO_FLD$(1,XX-1),B_HTML_TO_FLD$=B_HTML_TO_FLD$(XX+1)
18720 PRINT (TMP)DIM(5)+"<!ELEMENT "+VAL$+" (#PCDATA)>"
18730 PRINT (TMP)DIM(5)+"<!ATTLIST "+VAL$+" Desc CDATA #IMPLIED>"
18740 GOTO NXT_FIELDS
18750 END_FIELDS:
18760 PRINT (TMP)DIM(5)+"]>"
18770 PHASE.CTL'VALUE$="Ending Definition"
18780 RETURN 
19000 HEADER_FM1:
19010 CLOSE (EXCEL); EXCEL=HFN; IF TF_NAME$="" THEN OPEN (EXCEL)"[wdx][dde]excel;" ELSE OPEN (EXCEL)"[wdx][dde]Excel;"
19020 HED$=HEADER$,CNT=0
19025 CONT:
19030 XX=POS($09$=HED$); IF XX=0 THEN RETURN 
19040 HH$=HED$(1,XX-1),HED$=HED$(XX+1),CNT+=1
19050 K$="R1C"+STR(CNT)+":R1C"+STR(CNT)
19060 WRITE RECORD (EXCEL,KEY=K$)HH$
19070 GOTO CONT
56000 ! "203104-FS2 can't be exported, too many columns.                    
56010 ! "204543-Modify GUI View files option ZZGFLE to exclude              
56011 ! "       views files"
56013 REM "205460-Oracle - FIN(CHANNEL,"NUMREC") changed to use FN%FIN$()     
56015 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56016 ! "226355-File Exports within DB Distributor                          
56017 REM "307492-DBD-487:PxPlus ODBC interface utility for DBD use           
