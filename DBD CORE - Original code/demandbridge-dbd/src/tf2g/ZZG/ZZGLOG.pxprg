0010 ! ZZGLOG - Display Log History
0020 ! "6.0 - 08/15/03 - 14.038888 - jir
0030 ! "Copyright 2003 Computer Software Inc.; Norcross, Georgia
0035 REM "5.5 - 08/30/07 - 14.666111 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ZZGLOG","../ZZG/ZZ.EN"
0060 EXIT 
0100 ! 100 - Initialization
0110 INIT:
0120 _FILE_NAME$="LOG"+%C$
0130 _ZZPARM=FFN("LOG"+%C$); IF _ZZPARM<=0 THEN _ZZPARM=HFN; OPEN (_ZZPARM,ERR=OPEN_ERR)"LOG"+%C$
0140 RETURN 
0150 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0160 CMD_STR$="END"
0170 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 GOSUB PROCESS_OPTION ! GET DETAILS AND LOAD LIST BOX
0530 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ! IF _ZZPARM<>0 THEN CLOSE (_ZZPARM); _ZZPARM=0
0930 %ZZGLOG$=""
0940 RETURN 
0950 PROCESS_OPTION:
0960 P0$=TSK(0,ERR=*NEXT),P$="",COUNT=0,IDX=0; DIM S$(6)
0970 P$=""
0980 READ (_ZZPARM,KEY="x",DOM=*NEXT)
0990 K$=KEY(_ZZPARM,END=1160); READ (_ZZPARM)WHO$,TF_DATE$,TF_TIME$,PRG$,TF_MODULE$,COMP$,ST$,E_TIME$; IF MID(K$,1,1)<>"x" THEN GOTO 1160
1000 P$=P$+MID(K$,1,5)
1010 IF LEN(PRG$)<6 THEN REMOVE (_ZZPARM,KEY=K$,DOM=0990); GOTO 0990
1020 CALL "ZZXPRG",Q$,10,PRG$
1030 XXX=POS("/"=PRG$,-1); IF XXX<>0 THEN PRG$=PRG$(XXX+1)
1040 IF MID(Q$,1,3)="** " THEN Q$=""
1050 TF_DATE$=STR(DEC(TF_DATE$)),TF_TIME$=STR(DEC(TF_TIME$):"0000")
1060 IF STP(E_TIME$)="" THEN E_TIME$="Run" ELSE E_TIME$=E_TIME$(1,2)+":"+E_TIME$(3)
1070 IF REPORT=3 THEN GOSUB CHECK_OPT; IF NOREC THEN GOTO 0990
1080 IDX=IDX+1,XXX=POS(PRG$+" - "=Q$); IF XXX<>0 THEN Q$=Q$(XXX+LEN(PRG$)+3)
1090 XXX=POS("<"+PRG$+">"=Q$); IF XXX<>0 THEN Q$=Q$(1,XXX-1)
1100 IF STP(PRG$)="" THEN PRG$="      "
1110 IF Q$="" THEN Q$="  "
1120 IF %X3$(48,1)="1" THEN TF_DATE$=TF_DATE$(5,2)+%X3$(59,1)+TF_DATE$(7)+%X3$(59,1)+TF_DATE$(1,4) ELSE IF %X3$(48,1)="2" THEN TF_DATE$=TF_DATE$(7)+%X3$(59,1)+TF_DATE$(5,2)+%X3$(59,1)+TF_DATE$(1,4) ELSE TF_DATE$=TF_DATE$(1,4)+%X3$(59,1)+TF_DATE$(5,2)+%X3$(59,1)+TF_DATE$(7)
1130 LIST_BOX LOAD LB_LINE.CTL,IDX,WHO$+SEP+COMP$+SEP+TF_MODULE$+SEP+PRG$+SEP+Q$+SEP+TF_DATE$+SEP+TF_TIME$(1,2)+":"+TF_TIME$(3)+SEP+E_TIME$
1140 COUNT+=1
1145 IF MOD(COUNT,50)=0 THEN %ZZGLOG$=MSG("ZZGLOG")+" / Records:"+STR(COUNT:"###,###"); PRINT 'CAPTION'(%ZZGLOG$)
1150 GOTO 0990
1160 ! 
1170 P0=LEN(P$)/6,ML_DESC$="Number of active or improperly terminated TopForm Logins = "+STR(P0),REFRESH_FLG=1
1180 %ZZGLOG$=MSG("ZZGLOG")+" / Records:"+STR(COUNT:"###,###"); PRINT 'CAPTION'(%ZZGLOG$+" - ZZGLOG")
1190 RETURN 
1200 SEL_LINE:
1210 LIST_BOX READ LB_LINE.CTL,IDX,LB$
1220 LIST_BOX FIND LB_LINE.CTL,IDX,LB$
1230 MSGBOX MSG("WISH")+" Delete ",MSG("CONFIRMING"),"?,YESNO",OPT$; IF OPT$="NO" THEN RETURN 
1250 WHO$=LB$(1,3),LB$=LB$(12),PGR$=LB$(1,6),LB$=LB$(8),XX=POS(SEP=LB$),LB$=LB$(XX+1)
1260 IF %X3$(48,1)="1" THEN TF_DATE$=LB$(7,4)+LB$(1,2)+LB$(4,2) ELSE IF %X3$(48,1)="2" THEN TF_DATE$=LB$(7,4)+LB$(4,2)+LB$(1,2) ELSE TF_DATE$=LB$(7,4)+LB$(1,2)+LB$(4,2)
1270 TF_TIME$=LB$(12,2)+LB$(15,2),TF_DATE$=BIN(NUM(TF_DATE$),4,ERR=*NEXT),TF_TIME$=BIN(NUM(TF_TIME$),2,ERR=*NEXT)
1280 LIST_BOX LOAD LB_LINE.CTL,IDX,*
1290 REMOVE (_ZZPARM,KEY="x"+WHO$+TF_DATE$+TF_TIME$+PGR$,ERR=*NEXT,DOM=*NEXT)
1300 RETURN 
1310 END 
1320 PURGE:
1330 ! IF REPORT=3 THEN ESCAPE 
1340 PRT=HFN; OPEN (PRT)"P_"; GOSUB HEADER
1350 DIM DEL$(126)
1360 _ZZPARM=FFN("LOG"+%C$); IF _ZZPARM<=0 THEN _ZZPARM=HFN; OPEN (_ZZPARM,ERR=OPEN_ERR)"LOG"+%C$
1370 READ (_ZZPARM,KEY="x",DOM=*NEXT)
1380 K_ZZP$=KEY(_ZZPARM,END=END_PURGE); READ (_ZZPARM)WHO$,TF_DATE$,TF_TIME$,PRG$,TF_MODULE$,COMP$,ST$,E_TIME$; IF MID(K_ZZP$,1,1)<>"x" THEN GOTO END_PURGE
1390 TF_DATE$=STR(DEC(TF_DATE$)),TF_TIME$=STR(DEC(TF_TIME$):"0000")
1400 IF OPER_START$<>"" AND STP(WHO$)<STP(OPER_START$) THEN GOTO 1380
1410 IF OPER_END$<>"" AND STP(WHO$)>STP(OPER_END$) THEN GOTO 1380
1420 IF MENU_START$<>"" AND TF_MODULE$<MENU_START$ THEN GOTO 1380
1430 IF MENU_END$<>"" AND TF_MODULE$>MENU_END$ THEN GOTO 1380
1440 IF PGM_START$<>"" AND MID(PRG$,1,LEN(PGM_START$))<PGM_START$ THEN GOTO 1380
1450 IF PGM_END$<>"" AND MID(PRG$,1,LEN(PGM_END$))>PGM_END$ THEN GOTO 1380
1460 IF DATE_START$<>"" AND TF_DATE$<DATE_START$ THEN GOTO 1380
1470 IF DATE_END$<>"" AND TF_DATE$>DATE_END$ THEN GOTO 1380
1480 IF TIME_START$<>"" AND TF_TIME$<TIME_START$ THEN GOTO 1380
1490 IF TIME_END$<>"" AND TF_TIME$>TIME_END$ THEN GOTO 1380
1500 IF REPORT=2 THEN REMOVE (_ZZPARM,KEY=K_ZZP$)
1510 CALL "ZZXPRG",Q$,10,PRG$
1520 XXX=POS("/"=PRG$,-1); IF XXX<>0 THEN PRG$=PRG$(XXX+1)
1530 IF STP(E_TIME$)="" THEN E_TIME$="Run" ELSE E_TIME$=E_TIME$(1,2)+":"+E_TIME$(3)
1540 DEL$(1)=WHO$,DEL$(11)=COMP$,DEL$(21)=TF_MODULE$,DEL$(26)=PRG$,DEL$(37)=Q$,DEL$(86)=TF_DATE$(5,2)+"/"+TF_DATE$(7)+"/"+TF_DATE$(1,4),DEL$(107)=TF_TIME$(1,2)+":"+TF_TIME$(3),DEL$(122)=E_TIME$
1550 PRINT (PRT)DEL$
1560 LINE=LINE+1; IF LINE>=60 THEN GOSUB HEADER
1570 GOTO 1380
1580 END_PURGE:
1590 CLOSE (PRT)
1600 CALL "*WINGRP;HIDE",DATES.GRP$
1610 PAGE=0
1620 RETURN 
1630 HEADER:
1640 LINE=5,PAGE+=1
1650 DIM DEL$(126); CIA$=STP(%X3_COMP_NAME$),DEL$(INT((126-LEN(CIA$))/2))=CIA$
1660 IF PAGE>1 THEN PRINT (PRT)'FF'
1670 PRINT (PRT)DEL$
1680 IF REPORT=2 THEN PU$=" Purge" ELSE PU$=""
1690 DEL$(1)="",DEL$(1)="Date: "+DTE(0:"%Ml %Dz,%Yl"),DEL$(55)="Log History"+PU$,DEL$(119)="Page:"+STR(PAGE:"###"); PRINT (PRT)DEL$
1700 PRINT (PRT)"USER    COMPANY    MENU  PROGRAM    DESCRIPTION                                         DATE       STARTING TIME   ENDING TIME"
1710 PRINT (PRT)PAD(NN$,126,"-")
1720 RETURN 
1730 SEL_OPTION:
1740 FOR AA=1 TO 3
1750 AA$=EVS("GRP"+STR(AA)+".GRP$"); CALL "*WINGRP;HIDE",AA$
1760 NEXT AA
1770 AA$=EVS("GRP"+RB_OPTION$+".GRP$"); CALL "*WINGRP;SHOW",AA$
1780 RETURN 
1790 PROCESS_OPT:
1800 PROCESS "ZZGLOG.1","../ZZG/ZZ.EN",OPER_START$,OPER_END$,MENU_START$,MENU_END$,PGM_START$,PGM_END$,DATE_START$,DATE_END$,TIME_START$,TIME_END$,OPTION$
1810 REPORT=NUM(OPTION$)
1820 ON REPORT GOSUB NXT,PURGE,PURGE,SEARCH
1830 NXT:RETURN 
1840 SEARCH:
1850 HIDE CONTROL LB_LINE.CTL
1855 LIST_BOX LOAD LB_LINE.CTL,""; GOTO NXT_STEP
1860 LIST_BOX FIND LB_LINE.CTL,1,LN$,ERR=NXT_STEP; LIST_BOX LOAD LB_LINE.CTL,1,*,ERR=NXT_STEP
1870 GOTO 1860
1880 NXT_STEP:
1890 SHOW CONTROL LB_LINE.CTL
1900 GOSUB PROCESS_OPTION
1910 RETURN 
1920 CHECK_OPT:
1930 NOREC=0
1940 IF OPER_START$<>"" AND STP(WHO$)<STP(OPER_START$) THEN NOREC=1; RETURN 
1950 IF OPER_END$<>"" AND STP(WHO$)>STP(OPER_END$) THEN NOREC=1; RETURN 
1960 IF MENU_START$<>"" AND TF_MODULE$<MENU_START$ THEN NOREC=1; RETURN 
1970 IF MENU_END$<>"" AND TF_MODULE$>MENU_END$ THEN NOREC=1; RETURN 
1980 IF PGM_START$<>"" AND MID(PRG$,1,LEN(PGM_START$))<PGM_START$ THEN NOREC=1; RETURN 
1990 IF PGM_END$<>"" AND MID(PRG$,1,LEN(PGM_END$))>PGM_END$ THEN NOREC=1; RETURN 
2000 IF DATE_START$<>"" AND TF_DATE$<DATE_START$ THEN NOREC=1; RETURN 
2010 IF DATE_END$<>"" AND TF_DATE$>DATE_END$ THEN NOREC=1; RETURN 
2020 IF TIME_START$<>"" AND TF_TIME$<TIME_START$ THEN NOREC=1; RETURN 
2030 IF TIME_END$<>"" AND TF_TIME$>TIME_END$ THEN NOREC=1; RETURN 
2040 RETURN 
2050 SEL_REPORT: VAL=REPORT.CTL
2060 FOR AA=1 TO 3
2070 VAL'ID=AA,VAL'HEIGHT=26
2080 NEXT AA
2090 VAL'ID=NUM(REPORT$),VAL'HEIGHT=42
2100 RETURN 
9999 END 
15000 ! 
15010 EXPORT:
15020 ! 
15030 IF DEC(MID(MSE,22,1))>3 THEN WINDX=1,WDX$="[wdx]" ELSE WINDX=0,WDX$=""
15035 PHASE.CTL'VALUE$="Exporting File...."
15040 SHOW CONTROL PHASE.CTL; GOSUB EXCEL
15050 CALL "*wingrp;hide",EXPORT.GRP$
15060 NEXT_ID=BT_EXPORT.CTL
15065 WRITE RECORD (EXCEL)"[Format.Auto]"
15070 CLOSE (EXCEL,ERR=*NEXT)
15075 HIDE CONTROL PHASE.CTL
15080 RETURN 
15090 EXCEL:
15110 R=0
15120 IF WINDX THEN EXECUTE "[wdx]invoke "+QUO+"c:\program Files\Microsoft Office\Office\excel.exe"+QUO ELSE INVOKE "c:\program Files\Microsoft Office\Office\excel.exe"
15130 WAIT 2
15135 PHASE.CTL'VALUE$="Exporting File....:Creating Header"
15140 GOSUB CREATE_HEADER
15170 EXCEL=HFN; OPEN (EXCEL)"[dde]excel;"
15180 R=1
15190 K$="R"+STR(R)+"C1:R"+STR(R)+"C"+STR(COL)
15195 WRITE RECORD (EXCEL,KEY=K$)HEADER$; COL_LEN=0
15200 TEXT=0 ! len of all column
15201 XX=POS(","=ALL_LEN$); IF XX=0 THEN GOTO 15210
15203 COL_LEN+=1,VAL$=ALL_LEN$(1,XX-1),ALL_LEN$=ALL_LEN$(XX+1)
15205 BB$="[SELECT("+QUO+"R1C"+STR(COL_LEN)+":R"+STR(LB_LINE.CTL'ITEMCOUNT+1)+"C"+STR(COL_LEN)+QUO+","+QUO+"R"+STR(LB_LINE.CTL'ITEMCOUNT+1)+"C"+STR(COL_LEN)+QUO+")]"; WRITE RECORD (EXCEL)BB$
15208 WRITE RECORD (EXCEL)"[Column.width("+VAL$+")]"; IF COL_LEN<=LEN(TEXT$) AND TEXT$(COL_LEN,1)<>" " THEN WRITE RECORD (EXCEL)"[Format.Number("+QUO+TEXT$(COL_LEN,1)+QUO+")]" ! ELSE WRITE RECORD (EXCEL)"[Format.Number("+QUO+"###,###,###.00_);[RED](###,###,###.00)"+QUO+")]"
15209 GOTO 15201
15210 WRITE RECORD (EXCEL)"[SELECT(""R1C1:R1"+X$+"C1"","""+"R1"+"C1"")]"
15215 FOR REC=1 TO LB_LINE.CTL'ITEMCOUNT
15220 LIST_BOX FIND LB_LINE.CTL,REC,TF_VALUE$
15222 ! XX=POS(SEP=TF_VALUE$,-1),TF_VALUE$=TF_VALUE$(1,XX)
15225 ! XX=POS(SEP=TF_VALUE$); IF XX<>0 THEN TF_VALUE$=TF_VALUE$(XX+1)
15230 XX=POS(SEP=TF_VALUE$); IF XX<>0 THEN TF_VALUE$(XX,1)=$09$; GOTO 15230
15240 K$="R"+STR(R+REC)+"C1:R"+STR(R+REC)+"C"+STR(COL)
15242 WRITE RECORD (EXCEL,KEY=K$)TF_VALUE$
15243 IF MOD(REC,500)=0 THEN PHASE.CTL'VALUE$="Exporting File :"+STP(STR(REC:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))
15244 NEXT 
15245 FMT$=B_FMT$
15248 RETURN 
15250 CREATE_HEADER: FMT$=LB_LINE.CTL'FMT$,B_FMT$=FMT$
15255 ! XX=POS(" [Key Information]L30 "=FMT$),FMT$=FMT$(1,XX-1)
15260 HEADER$="",COL=0,ALL_LEN$=""
15270 XX=POS("["=FMT$); IF XX=0 THEN RETURN 
15280 XXX=POS("]"=FMT$(XX)),COL=COL+1
15290 TMP$=FMT$(XX+1,XXX-1-XX),FMT$=FMT$(XXX+XX),HEADER$=HEADER$+TMP$+$09$
15300 XX=POS(" "=FMT$),TMP$=FMT$(1,XX-1),FMT$=FMT$(XX+1)
15500 ! Rutine for len
15510 IF POS(TMP$(1,1)="0123456789")=0 THEN TMP$=TMP$(2); GOTO 15510
15520 ALL_LEN$=ALL_LEN$+TMP$+","
15600 GOTO 15270
16000 HTML_FILE:! 16000,10
16010 SHOW CONTROL PHASE.CTL
16020 PHASE.CTL'VALUE$="Creating Header Information"
16030 GOSUB CREATE_HEADER; FMT$=B_FMT$
16040 ! SYSTEM_HELP "winword.exe"; WAIT 3
16050 ! _WORD=HFN; OPEN (_WORD)"[dde]winword;"
16060 TMP$="/tmp/"+LOG_FILE$+FID(0)+".xml"; ERASE TMP$,ERR=*NEXT
16070 PHASE.CTL'VALUE$="Define Temp File"
16080 SERIAL TMP$; TMP=HFN; OPEN LOCK (TMP)TMP$; GOSUB CREATE_DEF
16090 PRINT (TMP)"<"+LOG_FILE$+">"
16100 FOR REC=1 TO LB_LINE.CTL'ITEMCOUNT
16110 LIST_BOX FIND LB_LINE.CTL,REC,TF_VALUE$
16120 XX=POS(SEP=TF_VALUE$,-1),TF_VALUE$=TF_VALUE$(1,XX-1),XX=POS(SEP=TF_VALUE$,-1),REC_KEY$=TF_VALUE$(XX+1),TF_VALUE$=TF_VALUE$(1,XX)
16130 REC_KEY$=SUB(SUB(SUB(SUB(SUB(REC_KEY$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
16131 YES=0
16135 XX=POS(CHR(127)<=REC_KEY$); IF XX<>0 THEN YES=1,TC$=REC_KEY$(XX,1); REC_KEY$=SUB(REC_KEY$,TC$,"&#"+STR(ASC(TC$))+";"); GOTO *SAME
16140 PRINT (TMP)"<Record Key="+QUO+REC_KEY$+QUO+">"
16150 B_HEADER$=HEADER$,B_HTML_TO_FLD$=HTML_TO_FLD$
16160 NXT_FLD: VAL1=POS(SEP=TF_VALUE$); IF VAL1=0 THEN GOTO END_REC ELSE VAL1$=TF_VALUE$(1,VAL1-1),TF_VALUE$=TF_VALUE$(VAL1+1)
16170 VAL1=POS($09$=HTML_TO_FLD$); IF VAL1=0 THEN CONTINUE ELSE VAL2$=HTML_TO_FLD$(1,VAL1-1),HTML_TO_FLD$=HTML_TO_FLD$(VAL1+1)
16180 VAL1=POS($09$=HEADER$); IF VAL1=0 THEN CONTINUE ELSE VAL3$=HEADER$(1,VAL1-1),HEADER$=HEADER$(VAL1+1)
16190 VAL3$=SUB(SUB(SUB(SUB(SUB(VAL3$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
16200 VAL1$=SUB(SUB(SUB(SUB(SUB(VAL1$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
16205 IF YES THEN XX=POS(CHR(127)<=VAL1$); IF XX<>0 THEN YES=1,TC$=VAL1$(XX,1); VAL1$=SUB(VAL1$,TC$,"&#"+STR(ASC(TC$))+";"); GOTO *SAME
16210 PRINT (TMP)DIM(5)+"<"+LCS(VAL2$)+" Desc="+QUO+STP(VAL3$)+QUO+">"+STP(VAL1$)+"</"+LCS(VAL2$)+">"
16220 GOTO NXT_FLD
16230 END_REC:
16240 PRINT (TMP)"</Record>"
16250 HEADER$=B_HEADER$,HTML_TO_FLD$=B_HTML_TO_FLD$
16260 ! CLIP_BOARD WRITE REC$; REC$=""; WRITE RECORD (_WORD)"[editpaste]"; WRITE RECORD (_WORD)"[InsertPara]"; L=0
16270 IF MOD(REC,500)=0 THEN PHASE.CTL'VALUE$="Creating Records :"+STP(STR(REC:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))
16280 NEXT 
16290 PRINT (TMP)"</"+LOG_FILE$+">"
16300 CLOSE (TMP)
16310 GOSUB SEND_FILES
16320 HIDE CONTROL PHASE.CTL
16330 RETURN 
16340 SEND_FILES:
17100 ! 17100,10
17110 F$="\\"+NID+TMP$
17120 XX=POS("/"=TMP$); IF XX<>0 THEN TMP$(XX,1)="\"; GOTO 17120
17125 MSGBOX "File Done: "+TMP$+SEP+SEP+"Do you Wish to View File?",MSG("CONFIRMING"),"INFO,YESNO",OPT$; IF OPT$="NO" THEN RETURN 
17130 OPEN (1,ERR=*NEXT)"[dde]explorer;\\"+NID+TMP$
17140 RETURN 
17150 SYSTEM_HELP "winword.exe"
17160 WAIT 2
17170 _WINWORD=HFN; OPEN (_WINWORD)"[dde]winword;"
17180 WRITE RECORD (_WINWORD)"[InsertFile .Name="+QUO+F$+QUO+"]"
17190 WAIT 3
17200 WRITE RECORD (_WINWORD)"[EditSelectAll]"
17210 WAIT 1
17220 WRITE RECORD (_WINWORD)"[FormatFont .Points=7, .FONT="+QUO+"Courier New"+QUO+"]"
17230 WAIT 1
17240 WRITE RECORD (_WINWORD)"[FilePageSetup .TopMargin=108.18]"
17250 WRITE RECORD (_WINWORD)"[FIlePageSetup .BottomMargin=36.03]"
17260 WRITE RECORD (_WINWORD)"[FilePageSetup .LeftMargin=18.02]"
17270 WRITE RECORD (_WINWORD)"[FilePageSetup .RightMargin=18.02]"
17280 WRITE RECORD (_WINWORD)"[Viewzoom .zoompercent=125]"
17290 WRITE RECORD (_WINWORD)"[startofdocument(0)]"
17300 WRITE RECORD (_WINWORD,ERR=*NEXT)"[EditReplace.Find="+QUO+CHR(138)+QUO+",.Replace="+QUO+QUO+",.Direction=0,.ReplaceAll,.WRap=0]"
17310 WRITE RECORD (_WINWORD)"[FileSaveAs .name="+QUO+LOG_FILE$+".txt"+QUO+"]"
17320 CLOSE (_WINWORD)
17330 RETURN 
17340 CREATE_DEF:
17350 PHASE.CTL'VALUE$="Creating Definition"
17360 PRINT (TMP)"<?xml version="+QUO+"1.0"+QUO+" standalone="+QUO+"yes"+QUO+"?>"
17370 PRINT (TMP)"<!DOCTYPE "+LOG_FILE$
17380 PRINT (TMP)DIM(5)+"["
17390 PRINT (TMP)DIM(5)+"<!ELEMENT "+LOG_FILE$+" (Record*)>"
17400 B_HTML_TO_FLD$=LCS(HTML_TO_FLD$),B_HTML_TO_FLD$=SUB(B_HTML_TO_FLD$,$09$,","),B_HTML_TO_FLD$=B_HTML_TO_FLD$(1,LEN(B_HTML_TO_FLD$)-1)
17410 PRINT (TMP)DIM(5)+"<!ELEMENT Record ("+B_HTML_TO_FLD$+")>"
17420 PRINT (TMP)DIM(5)+"<!ATTLIST Record Key CDATA #IMPLIED>"
17430 B_HTML_TO_FLD$=B_HTML_TO_FLD$+","
17440 NXT_FIELDS:
17450 XX=POS(","=B_HTML_TO_FLD$); IF XX=0 THEN GOTO END_FIELDS
17460 VAL$=B_HTML_TO_FLD$(1,XX-1),B_HTML_TO_FLD$=B_HTML_TO_FLD$(XX+1)
17470 PRINT (TMP)DIM(5)+"<!ELEMENT "+VAL$+" (#PCDATA)>"
17480 PRINT (TMP)DIM(5)+"<!ATTLIST "+VAL$+" Desc CDATA #IMPLIED>"
17490 GOTO NXT_FIELDS
17500 END_FIELDS:
17510 PRINT (TMP)DIM(5)+"]>"
17520 PHASE.CTL'VALUE$="Ending Definition"
17530 RETURN 
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
