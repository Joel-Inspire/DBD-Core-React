0010 ! ZZGCAA - Company Data Setup
0035 REM "5.5 - 02/28/07 - 16.303055 - mhe - SSP# 205471
0037 REM "205471-Oracle - FFN usage in tf2g progs. to be replaced by FN%FFN  
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0060 PROCESS "ZZGCAA","../ZZG/ZZ.EN"
0070 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ZZPARM"
0170 _FIL_NO=HFN; OPEN (_FIL_NO,ERR=OPEN_ERR)_FILE_NAME$
0180 READ (_FIL_NO,KEY=%C$+"A/R")AR_PARMS$
0190 READ (_FIL_NO,KEY=%C$+"G/B",ERR=*NEXT)GB$; GB$="Y"
0199 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1,_CUR_KEY$=""
0430 DIM _KEYS$[1:1]; _KEYS$[1]="ML_COMP$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 IF %X3_30_1$<>"M" THEN CALL "*WINGRP;HIDE",DISA.GRP$; CALL "*WINGRP;DISABLE",DISA.GRP$ ELSE CALL "*WINGRP;SHOW",DISA.GRP$; CALL "*WINGRP;ENABLE",DISA.GRP$
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1015 _CURKEY=1
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 _KEY$="CMP"+ML_COMP$
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 DIM A$(198)
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1435 GOSUB ASSIGN_PRG
1440 WRITE (_FIL_NO,KEY=_KEY$)A$
1445 WRITE (_FIL_NO,KEY="*viewer*")CB_VIEWER$,VIEWER_VALUE$,HELP_PATH$,CB_WORD$; %CB_WORD=NUM(CB_WORD$)
1448 READ (_FIL_NO,KEY="s"+%X3$(40,3),DOM=*NEXT)*,*,*,USER_CB_WORD$; IF POS(USER_CB_WORD$="01")<>0 THEN %CB_WORD=NUM(USER_CB_WORD$)
1450 GL2=HFN; OPEN (GL2,ERR=DEFINE_FILES)"GL2"+ML_COMP$; CLOSE (GL2)
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1500 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF _KEY$=_CUR_KEY$ THEN _KEY$=KEN(_FIL_NO,END=END_OF_FILE) ! Get past extracted record
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ (_FIL_NO,KEY=_KEY$)A$
3035 A$=PAD(A$,197," ")
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3045 CB_VIEWER$="N"; READ (_FIL_NO,KEY="*viewer*",DOM=*NEXT)CB_VIEWER$,VIEWER_VALUE$,HELP_PATH$,CB_WORD$
3046 IF STP(CB_WORD$)="" THEN CB_WORD$="1"
3047 IF CB_VIEWER$="Y" THEN CALL "*WINGRP;SHOW",VIEWER.GRP$
3050 EXTRACT (_FIL_NO,KEY=_KEY$)
3060 GOSUB ASSIGN_LIB
3070 RETURN 
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=ML_OPER.CTL,_FIRST_FIELD=ML_NAME.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN ML_COMP$=""
13030 CB_REM_LOC$="N",ML_ACCESS$="",ML_ADDR1$="",ML_ADDR2$="",ML_ADDR3$="",ML_CURR_SYMB$="",ML_DIR_DATA$="",ML_EXT$="",ML_NAME$="",ML_PHONE$="",ML_SORT$=""
13040 ML_MASK$="",CB_BATCH$=" "
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1,NEXT_ID=ML_COMP.CTL
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ASSIGN_LIB:
15010 ML_COMP$=A$(4,3),ML_NAME$=A$(7,40),ML_ADDR1$=A$(47,40),ML_ADDR2$=A$(87,40),ML_ADDR3$=A$(127,40),ML_PHONE$=A$(167,10),ML_EXT$=A$(177,4),ML_ACCESS$=A$(181,1),ML_MASK$=A$(183,3),ML_CURR_SYMB$=A$(185,1),CB_LOG_HIST$=A$(197,1)
15020 ML_DIR_DATA$=A$(186,8),CB_BATCH$=A$(194,1),CB_REM_LOC$=A$(195,1),CENTRAL$=A$(196,1); REM SSP 189386
15060 RETURN 
15070 ASSIGN_PRG:
15080 A$(1,3)="CMP",A$(4,3)=ML_COMP$,A$(7,40)=ML_NAME$,A$(47,40)=ML_ADDR1$,A$(87,40)=ML_ADDR2$,A$(127,40)=ML_ADDR3$,A$(167,10)=ML_PHONE$,A$(177,4)=ML_EXT$,A$(181,1)=ML_ACCESS$,A$(183,3)=ML_MASK$,A$(185,1)=ML_CURR_SYMB$
15090 A$(186,8)=ML_DIR_DATA$,A$(194,1)=CB_BATCH$,A$(195,1)=CB_REM_LOC$,A$(197,1)=CB_LOG_HIST$,A$(196,1)=CENTRAL$; REM SSP 189386
15100 RETURN 
15500 DEFINE_FILES:
15510 IF %X3_330_1$="1" THEN GOTO 1500
15520 FIL=HFN; OPEN (FIL,ERR=*NEXT)A$(186,2); Q$=FN%FID$(FIL),D0=ASC(Q$(20)); GOTO 15540 ! [205703]-changed FID() to FN%FID$()
15530 MSGBOX "The disk for file definition cannot be accessed",MSG("WARNING"),"INFO,TIM=5"; NEXT_ID=ML_DIR_DATA.CTL; EXIT 
15540 MSGBOX MSG("DEF_FILES"),MSG("CONFIRMING"),"?,YESNO",OPT$
15550 IF OPT$="NO" THEN GOTO 1500
15560 CALL "ZZ2SYS",%X3$,"D",ML_COMP$,D0
15570 Q$=STP(ML_DIR_DATA$); IF Q$="" THEN MSGBOX MSG("NO_DISK"),MSG("WARNING"),"!"; NEXT_ID=ML_DIR_DATA.CTL; EXIT 
15580 FIL=HFN; OPEN (FIL,ERR=*NEXT)Q$; Q$=FN%FID$(FIL); IF Q$(10,1)=$0A$ THEN GOTO 15600 ! [205703]-changed FID() to FN%FID$()       
15590 MSGBOX MSG("INV_DISK"),MSG("WARNING"),"!,TIM=5"; NEXT_ID=ML_DIR_DATA.CTL; EXIT 
15600 D0=NUM(A$(187,1))
16000 SEL_LOG:
16010 IF CB_LOG_HIST$=" " THEN GOTO DELETE_LOG_FILE
16020 ! Create Files
16030 KEYED %DATAPATH$+DLM+"LOG"+ML_COMP$,20,0,128,ERR=*NEXT
16035 %_LOG_HISTORY=1,_LOG=HFN; OPEN (_LOG)"LOG"+ML_COMP$
16040 DELETE_LOG_FILE:
16042 _LOG=FN%FFN("LOG"+ML_COMP$); IF _LOG>0 THEN CLOSE (_LOG); GOTO 16042 ! [205471]-changed FFN() to FN%FFN()
16050 ERASE %DATAPATH$+DLM+"LOG"+ML_COMP$,ERR=*NEXT
16055 %_LOG_HISTORY=0
16060 RETURN 
56000 REM + Modification History
56002 REM "189386-Add flag to company record to designate TopForm Central     
56004 REM "205471-Oracle - FFN usage in tf2g progs. to be replaced by FN%FFN  
