0010 ! SPGSP1 - File Maintenance Program for SP0_Spec_Price  (="SP0"+%C$)
0035 REM "5.6 - 08/25/08 - 11.040833 - jvv - SSP# 210376
0037 REM "210376-OLD 3799 Special Pricing Plan needs to be tested in both    
0040 REM "Copyright 2008 DemandBridge, Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0052 IF TCB(88)=0 THEN {
0055 MSGBOX "You must be using Windx to access this program" } ELSE {
0060 CLEAR 
0090 SETERR 0100; ENTER X3$,X4$,CUSTOMER$,ITEM_CUSTOMER$,TF_ITEM$,PRE_SELECT$
0180 PROCESS "SPGSP1","tf2g/SPG/SP.EN",CUSTOMER$,ITEM_CUSTOMER$,TF_ITEM$,PRE_SELECT$
0185  }
0190 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10899 ! 
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12090 RETURN 
12098 ! 
12099 ! 
12500 CHECK_PRE_SELECT:
12505 IF PRE_SELECT$="" THEN GOTO *RETURN
12510 TF_TYPE$=PRE_SELECT$; DROP_BOX WRITE TF_TYPE.CTL,TF_TYPE$
12520 GOSUB SELECT_TYPE
12530 IF TF_TYPE$="C" THEN GOSUB SELECT_CUSTOMER ELSE GOSUB SELECT_ITEM_CUSTOMER; GOSUB SELECT_ITEM_CODE
12535 CALL "*wingrp;disable",TF_TYPE.GRP$; REFRESH_FLG=1
12540 NEXT_ID=GPP.CTL
12550 RETURN 
12600 PROCESS_READ:
12602 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
12605 CUSTOMER$=CUST_DIV$+CUST_CODE$
12610 ITEM_CUSTOMER$=ITEM_CUST_DIV$+ITEM_CUST_CODE$
12615 CUST_NAME$="",ITEM_DESC$="",CUST_NAME1$=""
12620 SWITCH PRICE_TYPE$
12625 CASE "CGP"
12630 TF_TYPE$="C"; BREAK
12635 CASE "IGP"
12640 TF_TYPE$="I"; BREAK
12650 CASE "AFM"
12655 TF_TYPE$="A"
12660 END SWITCH 
12665 DROP_BOX WRITE TF_TYPE.CTL,TF_TYPE$
12670 REFRESH_FLG=1
12675 GOSUB SELECT_TYPE
12680 IF TF_TYPE$="C" THEN GOSUB SELECT_CUSTOMER ELSE GOSUB SELECT_ITEM_CUSTOMER; GOSUB SELECT_ITEM_CODE
12685 CALL "*wingrp;disable",TF_TYPE.GRP$; REFRESH_FLG=1
12800 RETURN 
13000 SELECT_TYPE:
13003 EN_UPDATE$="Y",EN_BUTTONS$="N",SHOW_ALL$="N",EN_TYPE$="Y",EN_ALL$="N"; GOSUB ENABLE_GROUPS
13005 REFRESH_FLG=1
13006 IF PRE_SELECT$="C" AND POS(TF_TYPE$="C")=0 THEN TF_TYPE$="" ELSE IF PRE_SELECT$="I" AND POS(TF_TYPE$="IA")=0 THEN TF_TYPE$=""
13010 SWITCH TF_TYPE$
13020 CASE "C"
13026 SHOW_ADD_CGP$="Y",PRICE_TYPE$="CGP"; GOSUB ENABLE_GROUPS
13028 NEXT_ID=CUSTOMER.CTL
13029 BREAK
13030 CASE "I"
13035 SHOW_ADD_IGP$="Y",PRICE_TYPE$="IGP"; GOSUB ENABLE_GROUPS
13036 NEXT_ID=ITEM_CUSTOMER.CTL
13039 BREAK
13040 CASE "A"
13044 SHOW_AFM$="Y",SHOW_A$="Y",PRICE_TYPE$="AFM",EN_AFM$="Y"; GOSUB ENABLE_GROUPS
13045 SHOW_ADD_AFM$="Y",PRICE_TYPE$="AFM"; GOSUB ENABLE_GROUPS
13046 NEXT_ID=ITEM_CUSTOMER.CTL
13049 BREAK
13090 END SWITCH 
13100 EN_UPDATE$="N"; GOSUB ENABLE_GROUPS
13390 RETURN 
13398 ! 
13399 ! 
13500 SELECT_UPDATE_SELL:
13510 MSGBOX MSG("UPDATE_NOW"),MSG("CONFIRM"),"YesNo",ANS$
13515 IF ANS$="YES" THEN {
13520 UPDTYPE$="P"; CALL "UPDIC0;UPD_SP0",UPDTYPE$; CALL "UPDFM1;UPD_SP0",UPDTYPE$
13530 CMD_STR$="END"
13550  } ELSE NEXT_ID=TF_TYPE.CTL
13590 RETURN 
13598 ! 
13599 ! 
13600 SELECT_UPDATE_FMS:
13610 MSGBOX MSG("UPDATE_NOW"),MSG("CONFIRM"),"YesNo",ANS$
13615 IF ANS$="YES" THEN {
13620 UPDTYPE$="F"; CALL "UPDFM1;UPD_SP0",UPDTYPE$
13625 CMD_STR$="END"
13640  } ELSE NEXT_ID=TF_TYPE.CTL
13645 RETURN 
13648 ! 
13649 ! 
13650 SELECT_UPDATE_BOTH:
13655 MSGBOX MSG("UPDATE_NOW"),MSG("CONFIRM"),"YesNo",ANS$
13657 IF ANS$="YES" THEN {
13660 UPDTYPE$="B"; CALL "UPDIC0;UPD_SP0",UPDTYPE$; CALL "UPDFM1;UPD_SP0",UPDTYPE$
13665 CMD_STR$="END"
13670  } ELSE NEXT_ID=TF_TYPE.CTL
13690 RETURN 
13698 ! 
13699 ! 
13800 FIND_REC:
13805 SKEY$=PRICE_TYPE$+SKEY$
13810 READ (Z[1],KEY=SKEY$,KNO=KEYNO,DOM=NEW_RECORD,ERR=CHK_ERR)IOL=0310
13870 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
13875 OLDREC$=A$; EN_KEYS$="N",EN_BUTTONS$="Y"; GOSUB ENABLE_GROUPS
13880 GOSUB SET_STR; REFRESH_FLG=1
13885 RETURN 
13998 ! 
13999 ! 
14000 NEW_RECORD:
14020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"YesNo",ANS$; IF ANS$="NO" THEN IF PRE_SELECT$<>"" THEN CMD_STR$="END"; GOTO *RETURN ELSE GOSUB RESTART; GOTO *RETURN
14030 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310
14035 CALL "UPDSP0;INSERT",Z[1],A$,A{ALL},OK
14038 IF NOT(OK) THEN MSGBOX MSG("CANT_WRITE"),""; IF PRE_SELECT$<>"" THEN CMD_STR$="END"; GOTO *RETURN ELSE GOSUB RESTART; GOTO *RETURN
14040 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
14045 NEW=1,OLDREC$=A$; EN_KEYS$="N",EN_BUTTONS$="Y"; GOSUB ENABLE_GROUPS
14050 RETURN 
14100 CHK_ERR:
14110 IF ERR<>0 THEN EXIT ERR
14120 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,""; GOSUB RESTART; GOTO *RETURN
14150 RETURN 
14500 SELECT_VENDOR:
14505 IF NUL(VENDOR$) THEN GOTO *RETURN
14510 CALL "ZZWLKU;parse_vend",VENDOR$,VEND_DIV$,VEND_CODE$
14515 FIND (Z[2],KEY=VEND_DIV$+VEND_CODE$,DOM=*RETURN)IOL=0320
14520 TF_NAME$=AP4$(11,35),TOPFORM_REF$=PAD(VEND_DIV$+VEND_CODE$,20)
14525 EN_SEQ$="Y"; GOSUB ENABLE_GROUPS
14530 VENDOR$=VEND_CODE$
14535 REFRESH_FLG=1,NEXT_ID=PLANT.CTL
14590 RETURN 
14598 ! 
14599 ! 
18099 ! 
18199 ! 
18200 SELECT_CUSTOMER:
18202 SEG3$="",SEG4$="",SEG5$=""
18215 IF CUSTOMER$<>"" THEN {
18220 CALL "ZZWLKU;parse_cust",CUSTOMER$,CUST_DIV$,CUST_CODE$
18225 READ (Z[2],KEY=CUST_DIV$+CUST_CODE$,DOM=*NEXT)AR1$; GOTO 18232
18230 IF NOT(FOUND) THEN MSGBOX MSG("NOT_FOUND"); NEXT_ID=CUSTOMER.CTL; CUSTOMER$=""; GOTO 18285
18232 CUST_NAME$=AR1$(11,35)
18240 KEYNO=1
18245 SKEY$=CUST_DIV$+CUST_CODE$
18250 GOSUB FIND_REC
18280  }
18285 REFRESH_FLG=1
18290 RETURN 
18298 ! 
18299 ! 
18300 SELECT_ITEM_CODE:
18305 SEG4$="",SEG5$="",ITEM_CODE$=PAD(ITEM_CODE$,10)
18307 ! F ITEM_CUSTOMER$<>"" THEN CALL "ZZWLKU;parse_cust",ITEM_CUSTOMER$,ITEM_CUST_DIV$,ITEM_CUST_CODE$
18310 CIKEY$=ITEM_CUST_DIV$+ITEM_CUST_CODE$+ITEM_CODE$
18320 READ (Z[3],KEY=CIKEY$,DOM=*NEXT)IC0$; ITEM_DESC$=IC0$(21,40); GOTO 18350
18325 READ (Z[4],KEY=CIKEY$,DOM=*NEXT)FM1$; ITEM_DESC$=FM1$(42,40); GOTO 18350
18335 MSGBOX MSG("NOT_FOUND"); NEXT_ID=ITEM_CODE.CTL; GOTO *RETURN
18350 KEYNO=2
18360 SKEY$=CIKEY$
18365 GOSUB FIND_REC
18370 REFRESH_FLG=1
18390 RETURN 
18398 ! 
18399 ! 
18400 SELECT_ITEM_CUSTOMER:
18402 SEG3$="",SEG4$="",SEG5$="",%QRY_CUST$=DIM(10)
18405 QRY_PANEL$="QRY_IC0"
18415 IF ITEM_CUSTOMER$<>"" AND ITEM_CUSTOMER$<>DIM(10) THEN {
18420 CALL "ZZWLKU;parse_cust",ITEM_CUSTOMER$,ITEM_CUST_DIV$,ITEM_CUST_CODE$
18425 READ (Z[2],KEY=ITEM_CUST_DIV$+ITEM_CUST_CODE$,DOM=*NEXT)AR1$; GOTO 18432
18430 IF NOT(FOUND) THEN MSGBOX MSG("NOT_FOUND"); NEXT_ID=ITEM_CUSTOMER.CTL; GOTO *RETURN
18432 CUST_NAME1$=AR1$(11,35),REFRESH_FLG=1
18434 QRY_PANEL$="QRY_FM1",%QRY_CUST$=ITEM_CUST_DIV$+ITEM_CUST_CODE$
18435  } ELSE {
18440 DIM ITEM_CUST_DIV$(2),ITEM_CUST_CODE$(8); ITEM_CUSTOMER$=DIM(10)
18450  }
18490 RETURN 
18498 ! 
18499 ! 
18600 SET_NUM:
18610 STD_GP_PER=NUM(STD_GP_PER$,ERR=*NEXT)
18620 PER_OF_CST=NUM(PER_OF_CST$,ERR=*NEXT)
18690 RETURN 
18698 ! 
18699 ! 
18700 SET_STR:
18710 STD_GP_PER$=STR(STD_GP_PER)
18720 PER_OF_CST$=STR(PER_OF_CST)
18790 RETURN 
18798 ! 
18799 ! 
20098 ! 
20099 ! 
21000 INIT:
21001 X0$="SPGSP1",X1$="Special Pricing Maintenance"
21002 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOSUB WRAPUP; GOTO *RETURN
21003 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=*NEXT)
21004 DIM Z[NUM(X3$(60,3))]
21005 CUSTOMER$=ARG_1$,ITEM_CUSTOMER$=ARG_2$,ITEM_CODE$=ARG_3$,PRE_SELECT$=ARG_4$
21006 SEQ4$="",SEQ5$=""
21008 CALL "UPDSP0;CLEAR_FIELDS",A$,A{ALL}
21010 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
21020 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
21040 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
21070 Z$="01X SP0... 02O AR1... 030 IC0... 040 FM1... 13O ZZPARM  "
21080 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; IF Z0>0 THEN GOSUB WRAPUP; GOTO *RETURN
21190 RETURN 
21198 ! 
21199 ! 
21200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
21210 CMD_STR$="END"
21290 RETURN 
21298 ! 
21299 ! 
21300 SETUP_LIBRARY:
21320 _SV_MSGLIB$=MSG(*)
21330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
21340 MESSAGE_LIB "*tfmsglib."+_LANG$,ERR=*NEXT; GOTO 0360
21350 MESSAGE_LIB "*tfmsglib.en"
21360 SET_MSG:GOSUB SETUP_MESSAGES
21390 RETURN 
21398 ! 
21399 ! 
22000 MAIN_POST_DISPLAY:
22005 MESSAGE_LIB _SV_MSGLIB$
22090 RETURN 
22098 ! 
22099 ! 
22100 WRAPUP:
22120 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
22160 SET_PARAM 'KR'=_SV_KR
22190 RETURN 
22198 ! 
22199 ! 
22300 RESTART:
22310 TF_TYPE$="",OLDREC$="",CUSTOMER$="",ITEM_CUST_CODE$="",ITEM_CODE$="",PRIORITY$="",STD_GP_PER$="",PER_OF_CST$="",CUST_NAME$="",ITEM_DESC$="",CUST_NAME1$="",ITEM_CUSTOMER$="",PRICE_TYPE$=""
22315 DIM A$(1044),A[12]; READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
22380 TF_TYPE.CTL'CURRENTITEM=0
22382 NEXT_ID=TF_TYPE.CTL
22385 EN_UPDATE$="Y",EN_BUTTONS$="N",SHOW_ALL$="N",EN_TYPE$="Y",EN_ALL$="N"; GOSUB ENABLE_GROUPS
22387 ! ENABLE CONTROL PRICE_TYPE.CTL
22388 REFRESH_FLG=1
22390 RETURN 
22398 ! 
22399 ! 
22500 SELECT_EXIT:
22510 IF OLDREC$="" THEN {
22515 CMD_STR$="END" } ELSE {
22520 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310; ANS$=""; IF OLDREC$<>A$ AND NOT(NEW) THEN MSGBOX MSG("REC_ALTERD"),MSG("UPDATED"),"YESNO",ANS$
22525 IF ANS$="NO" THEN {
22527 CALL "UPDSP0;CLEAR_LOCK",Z[1]; CMD_STR$="END" } ELSE {! 22570 }
22530 GOSUB SELECT_SAVE
22540 IF MSG$="" AND NOT(BUSY) THEN CMD_STR$="END"
22570  }
22580  }
22590 RETURN 
22598 ! 
22599 ! 
22600 SELECT_SAVE:
22604 GOSUB SET_NUM
22605 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310
22610 ! ALL "UPDSP0;VALIDATE",A$,A{ALL},MSG$; IF MSG$<>"" THEN MSGBOX MSG$,""; NEXT_ID=SAVE.CTL; GOTO *RETURN
22620 CALL "UPDSP0;UPDATE",Z[1],A$,A{ALL},BUSY; IF BUSY THEN MSGBOX MSG("ERR_W"),""; NEXT_ID=SAVE.CTL; GOTO *RETURN
22630 IF PRE_SELECT$<>"" THEN CMD_STR$="END" ELSE GOSUB RESTART
22690 RETURN 
22698 ! 
22699 ! 
22800 SELECT_CLEAR:
22810 IF NEW THEN CALL "UPDSP0;DELETE",Z[1],A$,A{ALL},FOUND,BUSY; IF FOUND AND BUSY THEN MSGBOX MSG("ERR_W"),""; NEXT_ID=SAVE.CTL
22820 IF PRE_SELECT$<>"" THEN CMD_STR$="END" ELSE GOSUB RESTART
22890 RETURN 
22898 ! 
22899 ! 
22900 SELECT_DELETE:
22910 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"YESNO",ANS$
22915 IF ANS$="YES" THEN {
22920 CALL "UPDSP0;DELETE",Z[1],A$,A{ALL},FOUND,BUSY; IF FOUND AND BUSY THEN MSGBOX MSG("ERR_W"),""; NEXT_ID=SAVE.CTL; GOTO *RETURN
22930 CALL "UPDSP0;CLEAR_FIELDS",A$,A{ALL}; READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
22940 EN_ALL$="N"; GOSUB ENABLE_GROUPS
22950 NEXT_ID=TF_TYPE.CTL,REFRESH_FLG=1
22960  } ELSE {
22970 NEXT_ID=SAVE.CTL
22980  }
22985 IF PRE_SELECT$<>"" THEN CMD_STR$="END" ELSE GOSUB RESTART
22990 RETURN 
22998 ! 
22999 ! 
23000 SELECT_FIRST:
23010 _KEY$=KEF(Z[1],KNO=0,ERR=NO_FIRST)
23020 READ (Z[1],KEY=_KEY$)IOL=0310; GOTO PROCESS_READ
23040 NO_FIRST: MSGBOX "NO FIRST"; EXIT 
23090 RETURN 
23098 ! 
23099 ! 
23100 SELECT_PREV:
23110 _KEY$=KEP(Z[1],KNO=0,ERR=START_OF_FILE)
23120 READ (Z[1],KEY=_KEY$)IOL=0310; GOTO PROCESS_READ
23140 START_OF_FILE: MSGBOX "START"; EXIT 
23190 RETURN 
23198 ! 
23199 ! 
23598 ! 
23599 ! 
24100 SELECT_NEXT:
24110 _KEY$=KEY(Z[1],KNO=0,END=END_OF_FILE); READ (Z[1],KEY=_KEY$)IOL=0310
24120 GOTO PROCESS_READ
24130 END_OF_FILE:
24140 MSGBOX "END OF FILE"; EXIT 
24190 RETURN 
24198 ! 
24199 ! 
24200 SELECT_LAST:
24210 _KEY$=KEL(Z[1],KNO=0,END=END_OF_FILE); READ (Z[1],KEY=_KEY$)IOL=0310
24220 GOTO PROCESS_READ
24290 RETURN 
24298 ! 
24299 ! 
55000 ENABLE_GROUPS:
55005 IF SHOW_ADD_CGP$="Y" THEN CALL "*wingrp;show",ADD_CGP.GRP$; CALL "*wingrp;enable",ADD_CGP.GRP$; SHOW_ADD_CGP$=""
55006 IF SHOW_ADD_IGP$="Y" THEN CALL "*wingrp;show",ADD_IGP.GRP$; CALL "*wingrp;enable",ADD_IGP.GRP$; SHOW_ADD_IGP$=""
55007 IF SHOW_IGP$="Y" THEN CALL "*wingrp;show",IGP.GRP$; SHOW_IGP$=""
55008 IF SHOW_ADD_AFM$="Y" THEN CALL "*wingrp;show",ADD_AFM.GRP$; CALL "*wingrp;enable",ADD_AFM.GRP$; SHOW_ADD_AFM$=""
55009 IF SHOW_ALL$="N" THEN CALL "*wingrp;hide",ALL.GRP$; SHOW_ALL$=""
55010 IF EN_TYPE$="Y" THEN CALL "*wingrp;enable",TF_TYPE.GRP$; EN_TYPE$=""
55011 IF SHOW_AFM$="Y" THEN CALL "*wingrp;show",AFM.GRP$; SHOW_AFM$=""
55015 IF EN_TYPE$="N" THEN CALL "*wingrp;disable",TF_TYPE.GRP$; EN_TYPE$=""
55058 IF EN_BUTTONS$="N" THEN CALL "*wingrp;disable",BUTTONS.GRP$; EN_BUTTONS$=""
55060 IF EN_BUTTONS$="Y" THEN CALL "*wingrp;enable",BUTTONS.GRP$; EN_BUTTONS$=""
55062 IF SHOW_I$="Y" THEN CALL "*wingrp;show",I.GRP$; SHOW_I$=""
55064 IF SHOW_C$="Y" THEN CALL "*wingrp;show",C.GRP$; SHOW_C$=""
55066 IF SHOW_A$="Y" THEN CALL "*wingrp;show",A.GRP$; SHOW_A$=""
55070 IF EN_ALL$="N" THEN CALL "*wingrp;disable",ALL.GRP$; EN_ALL$=""
55075 IF EN_KEYS$="N" THEN CALL "*wingrp;disable",KEYS.GRP$; EN_KEYS$=""
55080 IF EN_I$="Y" THEN CALL "*wingrp;enable",I.GRP$; EN_I$=""
55082 IF EN_A$="Y" THEN CALL "*wingrp;enable",A.GRP$; EN_A$=""
55084 IF EN_C$="Y" THEN CALL "*wingrp;enable",C.GRP$; EN_C$=""
55090 IF EN_CGP$="Y" THEN CALL "*wingrp;enable",CGP.GRP$; EN_CGP$=""
55092 IF EN_IGP$="Y" THEN CALL "*wingrp;enable",IGP.GRP$; EN_IGP$=""
55094 IF EN_AFM$="Y" THEN CALL "*wingrp;enable",AFM.GRP$; EN_AFM$=""
55096 IF EN_CGP$="N" THEN CALL "*wingrp;disable",CGP.GRP$; EN_CGP$=""
55098 IF EN_IGP$="N" THEN CALL "*wingrp;disable",IGP.GRP$; EN_IGP$=""
55100 IF EN_AFM$="N" THEN CALL "*wingrp;disable",AFM.GRP$; EN_AFM$=""
55105 IF EN_UPDATE$="N" THEN CALL "*wingrp;disable",UPDATE.GRP$; EN_UPDATE$=""
55110 IF EN_UPDATE$="Y" THEN CALL "*wingrp;enable",UPDATE.GRP$; EN_UPDATE$=""
55290 RETURN 
55298 ! 
55299 ! 
56000 REM "188067-New Pricing changes. Standard GP Percentage for a           
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56004 REM "221551-Oracle related changes broke some GUI maintanance pgms.     
