0010 REM -- RF Functions
0020 SETERR 9000; ENTER TEMP$
0100 PRINT 'CS'
0110 PRINT @(0,1),"TopForm RF Function"
0120 PRINT @(0,2),"-------------------"
0130 PRINT @(0,4)," 1. P/O Receiving"
0140 PRINT @(0,5)," 2. Putaway     "
0150 PRINT @(0,6)," 3. Picking"
0153 PRINT @(0,7)," 4. Physical Inv"
0155 PRINT @(0,8)," 5. Bin Transfer"
0160 PRINT @(0,9)," 6. Exit"
0170 PRINT @(0,11),"   Select: _"
0180 INPUT @(11,11),ANS
0190 IF ANS<1 OR ANS>6 THEN GOTO 0170
0200 ON ANS GOSUB 0210,1000,3000,5000,8000,8000,7000
0205 GOTO 0100
0210 END 
0220 EXIT 
1000 REM --- Purchase Order Receiving ---
1010 PRINT 'CS'
1012 DIM C$(130),I$(260)
1013 DIM B[29],C[14],I[14]
1015 IOLIST A$
1016 IOLIST B$:[LEN(170)],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21],B[22],B[23],B[24],B[25],B[26],B[27],B[28],B[29]
1017 IOLIST C$:[LEN(130)],C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14]
1018 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14]
1019 IOLIST D$
1020 P01=HFN; OPEN (P01)"PO1"+%C$
1030 P02=HFN; OPEN (P02)"PO2"+%C$
1035 P03=HFN; OPEN (P03)"PO3"+%C$
1040 P07=HFN; OPEN (P07)"PO7"+%C$
1050 ICF=HFN; OPEN (ICF)"ICF"+%C$
1060 PRINT 'CS'
1070 PRINT @(0,1),"PO Receiving"
1080 PRINT @(0,2),"------------"
1090 PRINT @(0,5),"P/O #: ",'CE'
1100 INPUT @(6,5),PO_NUM$
1105 IF PO_NUM$="" THEN CLOSE (P01); CLOSE (P02); CLOSE (P03); CLOSE (P07); CLOSE (ICF); GOTO 0100
1110 PO_NUM$=STP(PO_NUM$,3,"-")
1115 IF LEN(PO_NUM$)<9 THEN PO_NUM$=PO_NUM$+" "
1120 READ (P01,KEY=PO_NUM$,DOM=2900)IOL=1015
1130 PRINT @(0,6),A$(21,20)
1140 LINE_NUM$="001"
1180 EXTRACT (P02,KEY=PO_NUM$+LINE_NUM$,DOM=2950)IOL=1016
1185 UM$=B$(77,4)+"/"+STR(B[4])
1187 UM$=STP(UM$,3," ")
1190 PRINT @(0,9),B$(101,10)
1200 PRINT @(0,10),B$(28,20)
1205 IF B[3]<=0 THEN GOTO 2800
1210 PRINT @(0,12),"QTY REC: _______ ",UM$
1220 INPUT @(9,12),QTY_REC
1230 IF QTY_REC=0 THEN GOTO 1520
1240 B[9]=QTY_REC
1250 IF B[14]=0 AND B[3]>B[9] THEN B[14]=(B[3]-B[9])
1255 B[3]=B[3]-B[9]
1260 IF B$(77,4)="M   " THEN B[10]=(B[9]/1000)*B[2] ELSE B[10]=B[9]*B[2]
1270 IF B[14]>0 THEN PRINT @(1,14),"Back Order: ",B[14]," ",UM$
1280 PRINT @(0,16),"[A]ccept [R]eject: _"
1290 INPUT @(19,16),ANS$
1300 IF ANS$<>"a" AND ANS$<>"A" AND ANS$<>"r" AND ANS$<>"R" THEN GOTO 1280
1310 IF ANS$="R" OR ANS$="r" THEN GOTO 1060
1315 WRITE (P02,KEY=PO_NUM$+LINE_NUM$)IOL=1016
1320 C$=PAD(C$,130,0," ")
1330 C$(1,2)=A$(297,2); C$(3,7)=A$(299,7); C$(10,10)="          "
1340 C$(20,3)=B$(7,3); C$(23,1)=" "; C$(24,3)=B$(25,3); C$(27,12)="            "
1350 REC_DATE$=DAY; REC_DATE$=STP(REC_DATE$,3,"/")
1360 IF REC_DATE$(5,2)="02" THEN REC_DATE1$="K2"; REC_DATE1$=REC_DATE1$+REC_DATE$(1,4)
1370 C$(39,6)=REC_DATE1$
1380 C[2]=B[9]; C[3]=B[10]; C[4]=B[16]; C[5]=B[14]
1385 WRITE (P07,KEY=C$(1,23))IOL=1017
1386 IF B$(14,1)="N" OR B$(14,1)=" " THEN {
1387 READ (P03,KEY=PO_NUM$+"    ",DOM=*NEXT)D$ }
1388 IF D$="" THEN D$=PAD(D$,100)
1390 REM --- Lot Record
1395 SN$="01"
1400 I$(1,2)=A$(179,2); I$(3,8)=A$(181,8); I$(11,10)=B$(101,10)
1410 I$(25,6)=C$(39,6); I$(41,2)=A$(297,2); I$(43,7)=A$(299,7)
1420 I$(50,6)=A$(192,6); I$(68,2)=A$(7,2); I$(70,8)=A$(19,8)
1430 I$(78,4)=A$(17,4); I$(100,10)="DOCK      "; I$(110,2)=A$(306,2)
1440 I$(112,6)=A$(308,6); I$(118,3)=B$(7,3); I$(21,4)=D$(12,4)
1450 I$(121,4)=B$(77,4); I$(129,4)=B$(146,4)
1460 I$(133,15)=A$(328,15); I$(31,2)=SN$
1470 I[0]=B[2]; I[3]=B[4]; I[4]=C[2]/B[4]; I[5]=B[23]
1480 I[7]=B[24]; I[8]=B[25]
1490 WRITE (ICF,KEY=I$(1,32),DOM=2700)IOL=1018
1500 PRINT @(0,15),"PO Updated..."
1510 WAIT 3
1515 GOSUB 1600
1520 LINE_NUM=NUM(LINE_NUM$)
1530 LINE_NUM+=1
1540 LINE_NUM$=STR(LINE_NUM)
1550 LINE_NUM$=PAD(LINE_NUM$,3,0,"0")
1560 GOTO 1180
1600 REM --- BARCODE LABELS ---
1610 PRINT @(0,14),'CE',"PRINT LABELS(Y/N): "
1620 INPUT @(19,14),ANS$
1630 IF ANS$<>"y" AND ANS$<>"Y" AND ANS$<>"N" AND ANS$<>"n" THEN GOTO 1610
1640 IF ANS$="N" OR ANS$="n" THEN GOTO 1060
1650 LABEL_AMT=I[4]+1
1660 PRINT @(0,15),'CE',"NUM OF LABELS: ",LABEL_AMT
1670 PRINT @(0,16),'CE',"(P)RINT (M)ODIFY:"
1680 INPUT @(19,16),ANS$
1690 IF ANS$<>"P" AND ANS$<>"p" AND ANS$<>"m" AND ANS$<>"M" THEN GOTO 1670
1700 IF ANS$="m" OR ANS$="M" THEN {
1710 INPUT @(15,15),'CL',NEW_AMT
1720 IF NEW_AMT<>0 THEN LABEL_AMT=NEW_AMT
1730 GOTO 1660 }
1740 REM --- PRINTING LABELS ----
1750 PRINT @(0,14),'CE'
1760 PRINT @(0,16),'CE',"LABELS PRINTING..."
1770 WAIT 5
1780 RETURN 
2700 REM --- Sequence Number Increment ---
2710 SN=NUM(SN$); SN=SN+1
2720 SN$=STR(SN)
2730 SN$=PAD(SN$,2,0,"0")
2740 I$(31,2)=SN$
2750 GOTO 1490
2800 REM --- RECEIVE STATUS ----
2810 PRINT @(0,15),"LINE ",LINE_NUM$," ALREADY REC'D"
2820 WAIT 4
2830 GOTO 1520
2840 RETURN 
2900 REM --- Invalid PO ---
2910 PRINT @(0,15),'BB',"Invalid PO",'EB'
2920 WAIT 2
2930 GOTO 1090
2940 RETURN 
2945 REM ---  End of Order ---
2950 PRINT @(0,15),'CE',"End of Order #",PO_NUM$
2960 WAIT 2
2970 GOTO 1060
3000 REM --- Inventory Transfer ---
3002 DIM I[14]
3008 ICF=HFN; OPEN (ICF)"ICF"+%C$
3010 PRINT 'CS'
3020 PRINT @(0,0),"Bin-Loc Transfer"
3030 PRINT @(0,1),"----------------"
3040 PRINT @(0,2),"P/O NUM: "
3050 INPUT @(8,2),POLINE_NUM$
3060 IF POLINE_NUM$="" THEN CLOSE (*); RETURN 
3065 POLINE_NUM$=STP(POLINE_NUM$,3,"-")
3070 POLINE_NUM$=PAD(POLINE_NUM$,9,0,"0")
3080 K1$=KEY(ICF,END=DONE)
3090 READ (ICF,KEY=K1$)IOL=1018
3100 IF I$(41,9)<>POLINE_NUM$ THEN GOTO 3080
3105 PRINT 'CE'
3110 PRINT @(0,4),"LOC CODE: ",I$(21,4)
3112 PRINT @(0,5),'CE',"CUSTOMER: ",I$(3,8)
3115 D1$=I$(25,6)
3120 IF D1$(1,1)="K" THEN D1$(1,1)="0"
3130 PRINT @(0,6),"REC DATE: ",D1$(3,2),"/",D1$(5,2),"/",D1$(1,2)
3140 PRINT @(0,7),"P/O NUM : ",I$(43,7)
3150 PRINT @(0,8),"BIN LOC : ",I$(100,10)
3160 PRINT @(0,9),'CE',"QTY:"
3170 PRINT @(0,10),"----"
3180 PRINT @(0,11),I[4]," ",I$(121,4)," of ",I[3]
3200 PRINT @(0,16),'CE',"(N)EXT (M)OD E(X)IT: _"
3210 INPUT @(21,16),ANS$
3220 IF ANS$<>"N" AND ANS$<>"n" AND ANS$<>"M" AND ANS$<>"m" AND ANS$<>"x" AND ANS$<>"X" THEN GOTO 3200
3230 IF ANS$="N" OR ANS$="n" THEN GOTO 3080
3240 IF ANS$="X" OR ANS$="x" THEN {
3250 CLOSE (ICF)
3260 GOTO 0100 }
3270 IF ANS$="M" OR ANS$="m" THEN {
3280 PRINT @(0,15),'CE',"TRANS QTY: "
3290 INPUT @(11,15),TRAN_QTY
3300 IF TRAN_QTY=0 THEN PRINT @(0,15),'CE'; GOTO 3160
3310 IF TRAN_QTY>I[4] THEN {
3320 PRINT @(0,15),'CE'
3330 PRINT @(0,16),"REQ. QTY > LOT QTY"
3340 WAIT 2
3350 PRINT @(0,15),'CE'; GOTO 3160 }
3360 PRINT @(0,13),'CE',"TRANS. ",TRAN_QTY," ",I$(121,4)
3370 PRINT @(0,15),"NEW BIN LOC: "
3380 INPUT @(13,15),BIN_LOC$
3390 IF BIN_LOC$="" THEN GOTO 3160
3400 IF TRAN_QTY=I[4] THEN {
3405 EXTRACT (ICF,KEY=K1$)IOL=1018
3410 I$(100,10)=BIN_LOC$
3420 PRINT @(0,16),'CE',"LOT PROCESSED"
3430 WAIT 2
3440 WRITE (ICF,KEY=K1$)IOL=1018
3445 CLOSE (ICF)
3450 RETURN  }
3460 EXTRACT (ICF,KEY=K1$)IOL=1018
3470 I[4]=I[4]-TRAN_QTY
3480 WRITE (ICF,KEY=K1$)IOL=1018
3490 I[4]=TRAN_QTY
3500 I$(100,10)=BIN_LOC$
3510 SN=NUM(K1$(31,2))
3520 SN=SN+1
3530 SN$=STR(SN)
3540 SN$=PAD(SN$,2,0,"0")
3550 K1$(31,2)=SN$
3560 I$(31,2)=SN$
3570 WRITE (ICF,KEY=K1$)IOL=1018
3580 PRINT @(0,16),'CE',"LOT PROCESSED"
3590 WAIT 2
3600 CLOSE (ICF)
3610 RETURN 
3900 DONE:
3910 PRINT "DO not exsist..."
3915 CLOSE (ICF)
3920 RETURN 
5000 REM --- Order Picking ---
5010 DIM A1[15],B1[31],I[14]
5020 IOLIST A1$,A1[1],A1[2],A1[3],A1[4],A1[5],A1[6],A1[7],A1[8],A1[9],A1[10],A1[11],A1[12],A1[13],A1[14],A1[15]
5030 IOLIST B1$,B1[1],B1[2],B1[3],B1[4],B1[5],B1[6],B1[7],B1[8],B1[9],B1[10],B1[11],B1[12],B1[13],B1[14],B1[15],B1[16],B1[17],B1[18],B1[19],B1[20],B1[21],B1[22],B1[23],B1[24],B1[25],B1[26],B1[27],B1[28],B1[29],B1[30],B1[31]
5040 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14]
5050 FS1=HFN; OPEN (FS1)"FS1"+%C$
5060 FS2=HFN; OPEN (FS2)"FS2"+%C$
5070 AR1=HFN; OPEN (AR1)"AR1"+%C$
5080 ICF=HFN; OPEN (ICF)"ICF"+%C$
5090 PRINT 'CS'
5100 PRINT @(0,0),"ORDER PICKING"
5110 PRINT @(0,1),"-------------"
5120 KEY_FS1$=KEY(FS1,END=6900)
5130 READ (FS1,KEY=KEY_FS1$)IOL=5020
5140 IF A1$(272,1)="Y" THEN GOTO 5120
5150 PRINT @(0,3),"ORDER #: ",KEY_FS1$
5160 FIND (AR1,KEY=A1$(6,10),DOM=5800)C1$
5170 PRINT @(0,4),C1$(11,20)
5180 KEY_FS2$=KEY(FS2,END=5700)
5190 READ (FS2,KEY=KEY_FS2$)IOL=5030
5200 IF KEY_FS2$(1,8)<>KEY_FS1$ THEN GOTO 5180
5205 IF B1[26]>=B1[1] THEN GOTO 5180
5207 SAVE 
5210 PRINT @(0,6),'CE',"LINE: ",KEY_FS2$(9,3)
5240 KEY_ICF$=KEY(ICF,END=5600)
5250 READ (ICF,KEY=KEY_ICF$)IOL=5040
5260 IF KEY_ICF$(1,10)<>"          " AND KEY_ICF$(1,10)<>A1$(6,10) THEN GOTO 5240
5270 IF KEY_ICF$(11,10)<>B1$(19,10) THEN GOTO 5240
5280 IF I$(110,11)<>KEY_FS2$ THEN GOTO 5240
5290 PRINT @(0,8),'CE',"BIN: ",I$(100,10)
5300 PRINT @(0,9),"BIN:"
5310 INPUT @(5,9),BIN_LOC$
5320 BIN_LOC$=PAD(BIN_LOC$,10,1," ")
5330 IF BIN_LOC$<>I$(100,10) THEN {
5340 PRINT @(0,16),'CE',"INVALID BIN..."
5350 WAIT 2; GOTO 5290 }
5351 PRINT @(0,11),'CE',B1$(19,10)
5352 PRINT @(0,12),'CE',B1$(50,20)
5353 PRINT @(0,13),'CE',"ITEM: "
5354 INPUT @(6,13),ITEM_CODE$
5355 ITEM_CODE$=PAD(ITEM_CODE$,10,1," ")
5356 IF ITEM_CODE$<>B1$(19,10) THEN {
5357 PRINT @(0,16),'CE',"INVALID ITEM..."
5358 WAIT 2; GOTO 5353 }
5359 OPEN_QTY=I[4]-(B1[26]/B1[13])
5360 PRINT @(0,14),OPEN_QTY," ",I$(121,4)
5361 PRINT @(0,15),'CE',"QTY PULL:"
5362 INPUT @(10,15),PULL_QTY
5370 IF PULL_QTY>OPEN_QTY THEN {
5375 PRINT @(0,16),'CE',"INVALID QTY AMT"
5380 WAIT 2
5385 GOTO 5361 }
5390 IF PULL_QTY<OPEN_QTY THEN {
5395 EXTRACT (FS2,KEY=KEY_FS2$)IOL=5030
5405 B1[26]=B1[26]+(PULL_QTY*B1[13])
5410 WRITE (FS2,KEY=KEY_FS2$)IOL=5030
5420 PRINT @(0,16),'CE',"ORDER PICKED..."
5430 WAIT 2 }
5431 IF PULL_QTY=OPEN_QTY THEN {
5432 EXTRACT (FS2,KEY=KEY_FS2$)IOL=5030
5433 B1[26]+=PULL_QTY*B1[13]
5434 WRITE (FS2,KEY=KEY_FS2$)IOL=5030
5435 PRINT @(0,16),'CE',"ORDER PICKED..."
5436 WAIT 2 }
5440 GOTO 5240
5600 REM --- END OF LOT ----
5610 PRINT @(0,16),'CE',"(N)EXT  E(X)IT: "
5620 INPUT @(15,16),ANS$
5630 IF ANS$<>"N" AND ANS$<>"n" AND ANS$<>"X" AND ANS$<>"x" THEN GOTO 5610
5640 IF ANS$="X" OR ANS$="x" THEN {
5650 CLOSE (FS1); CLOSE (FS2); CLOSE (AR1); CLOSE (ICF)
5660 RETURN  }
5670 IF ANS$="N" OR ANS$="n" THEN {
5680 CLOSE (ICF); OPEN (ICF)"ICF"+%C$
5690 GOTO 5180 }
5700 REM --- END OF ORDER ---
5710 PRINT @(0,16),'CE',"END OF ORDER"
5720 WAIT 2
5725 CLOSE (FS2); OPEN (FS2)"FS2"+%C$
5730 GOTO 5090
5800 REM --- INVALID CUSTOMER ------
5810 C1$(11,20)="INVALID CUSTOMER"
5820 GOTO 5170
5900 REM ---- NO ORDER ----
5910 PRINT @(0,15),'CE',"INVALID ORDER NUMBER"
5920 WAIT 2
5930 GOTO 5090
6900 REM --- ORDERS COMPLETE ----
6910 CLOSE (FS1); CLOSE (FS2); CLOSE (AR1); CLOSE (ICF)
6920 RETURN 
7000 REM --- Exit RF Menu ---
7010 PRINT 'CS'
7020 PRINT @(1,5),"Thank You for Using"
7030 PRINT @(1,6),"    TopForm RF"
7040 PRINT @(1,7),"     Good Bye"
7050 WAIT 2
7070 EXIT 
8000 REM --- Mot Developed ---
8010 PRINT 'CS'
8020 PRINT " >>>  Under Development  <<<"
8030 WAIT 2
8040 RETURN 
9000 REM ---Error----
9010 PRINT @(0,16),'CE',MSG(ERR),"  ",STR(ERR)
9020 WAIT 2
9040 GOTO 0100
