0010 ! EFGMAD - File Maintenance Program for EF3_EmailNotFax (="EF3"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Apr. 18, 2003 14:28
0030 ! ************************************************************************
0035 REM "5.7 - 09/01/15 - 8.661666 - tma - SSP# 279201
0037 REM "279201-EFGMAD-Reorder Notice type.  Query at the Customer contact  
0040 REM "Copyright 2015 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "EFGMAD","../EFG/EF.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="EF3"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 _FILE_NAME$="EF1"+%C$,_EF1=HFN; OPEN (_EF1,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0186 GOSUB FAX_TYPE_VALUES
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=2
0430 DIM _KEYS$[1:2]; _KEYS$[1]="FAX_TYPE$",_KEYS$[2]="KEY_TO_DATA$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 GOSUB LOAD_FAX_VALUES
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 KEY_TO_DATA$=PAD(KEY_TO_DATA$,20)
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1066 IF LEN(STP(_KEY$))=1 THEN NEXT_ID=FAX_TYPE.CTL; RETURN ! SSP235061 jdf
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",ANSWER$
1230 IF ANSWER$="NO" THEN GOTO CLEAR_REC
1250 ! _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1265 SET_FOCUS EMAIL_ADDR.CTL
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=EMAIL_ADDR.CTL
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=FAX_TYPE.CTL
1705 GOSUB CLEAR_REC; NEXT_ID=FAX_TYPE.CTL
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1855 IF ANSWER$="NO" THEN NEXT_ID=FAX_TYPE.CTL ! SSP235061 jdf
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0,REFRESH_FLG=1
3065 ON POS(_KEY$(1,1)="CVSPTWRUYA") GOTO *NEXT,CUST1,VEND1,SALES1,PLAN1,SHIP1,WARE1,CONT1,SHIP1,LETTE1,CSR1
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:! IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1,FAX_TYPE$=" ",EF3_DESC$=""; GOSUB CLEAR_FIELDS
3365 ON POS(_KEY$(1,1)="CVSPTWRUYA") GOTO *NEXT,CUST,VEND,SALES,PLAN,SHIP,WARE,CONT,SHIP,LETTE,CSRH ! 271319
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=FAX_TYPE.CTL,_FIRST_FIELD=EMAIL_ADDR.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN FAX_TYPE$=""
13030 IF _CLR_FLG$="R" THEN KEY_TO_DATA$=""
13035 IF _CLR_FLG$="R" THEN VENDOR$="",%VEND_NAME$="",CUSTOMER$="",%CUST_NAME$=""
13040 EMAIL_ADDR$=""
13050 ! VENDOR$="",PLANT$="",CUSTOMER$="",%CUST_NAME$="",%VEND_NAME$="",SALESPERSON$="",VENDOR_P$=""
13501 SHIP_TO$="",CUSTOMER_S$="",WARE$="",EF3_DESC$="",FAX_TYPE$="",FAX_DESC$="",FAX_NUM_TYPE$="",ID_VARNAME$="",SALESPERSON$="",VENDOR_P$="",CUSTOMER_S$="",CUSTOMER_NOT$="",EMAIL_ADDR$="",CSR$="" ! SSP235061 jdf, 271319
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=KEY_TO_DATA.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(3,"N")
15030 IF _ORIG.FAX_TYPE$=_CUR.FAX_TYPE$ OR FAX_TYPE$=_CUR.FAX_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.FAX_TYPE$=FAX_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("FAX_N_T")+" = "+_CUR.FAX_TYPE$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FAX_N_T")+" = "+_CUR.FAX_TYPE$
15040 IF _ORIG.KEY_TO_DATA$=_CUR.KEY_TO_DATA$ OR KEY_TO_DATA$=_CUR.KEY_TO_DATA$ THEN GOTO *NEXT ELSE IF _ORIG.KEY_TO_DATA$=KEY_TO_DATA$ THEN _CHG2$=_CHG2$+SEP+MSG("DATA_KEY")+" = "+_CUR.KEY_TO_DATA$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATA_KEY")+" = "+_CUR.KEY_TO_DATA$
15050 IF _ORIG.EMAIL_ADDR$=_CUR.EMAIL_ADDR$ OR EMAIL_ADDR$=_CUR.EMAIL_ADDR$ THEN GOTO *NEXT ELSE IF _ORIG.EMAIL_ADDR$=EMAIL_ADDR$ THEN _CHG2$=_CHG2$+SEP+MSG("EMAIL_A")+" = "+_CUR.EMAIL_ADDR$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("EMAIL_A")+" = "+_CUR.EMAIL_ADDR$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN FAX_TYPE$=_CUR.FAX_TYPE$
16030 IF _CHG_VAR$(2,1)="Y" THEN KEY_TO_DATA$=_CUR.KEY_TO_DATA$
16040 IF _CHG_VAR$(3,1)="Y" THEN EMAIL_ADDR$=_CUR.EMAIL_ADDR$
16990 RETURN 
17000 SEL_QRY: VAL$="" ! SSP#266525 all of the 17000's added
17010 PROCESS "QRY_EF3","../EFG/EF.EN",VAL$; IF STP(VAL$)="" THEN RETURN 
17020 FAX_TYPE$=VAL$(1,1),KEY_TO_DATA$=VAL$(2),_KEY$=VAL$
17030 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; NEXT_ID=EMAIL_ADDR.CTL; REFRESH_FLG=1; GOTO DISP_REC
17090 GOTO 1070
17100 SEL_RECORD:
17110 ENTER FAX_TYPE$,KEY_TO_DATA$
17120 IF FAX_TYPE$="1" THEN %TYPE$="E-Mail",%KEY_TO_DATA$=KEY_TO_DATA$; EXIT 
17130 IF FAX_TYPE$="C" THEN %TYPE$="Customer",%KEY_TO_DATA$=FN%ZZDISP$(KEY_TO_DATA$,"A/R"); EXIT 
17140 IF FAX_TYPE$="P" THEN %TYPE$="Plant",%KEY_TO_DATA$=FN%ZZDISP$(MID(KEY_TO_DATA$,1,10),"A/P")+" / "+MID(KEY_TO_DATA$,11,4); EXIT 
17150 IF FAX_TYPE$="R" THEN %TYPE$="Reorder Notice",%KEY_TO_DATA$=FN%ZZDISP$(MID(KEY_TO_DATA$,1,10),"A/R")+" / "+MID(KEY_TO_DATA$,11,3); EXIT ! SSP#279201
17160 IF FAX_TYPE$="S" THEN %TYPE$="Salesperson",%KEY_TO_DATA$=FN%ZZDISP$(MID(KEY_TO_DATA$,1,4),"AR3"); EXIT 
17170 IF FAX_TYPE$="T" THEN %TYPE$="Ship To",%KEY_TO_DATA$=FN%ZZDISP$(KEY_TO_DATA$,"A/R")+" / "+MID(KEY_TO_DATA$,11,4); EXIT 
17180 IF FAX_TYPE$="U" THEN %TYPE$="Thank You Ship To",%KEY_TO_DATA$=FN%ZZDISP$(KEY_TO_DATA$,"A/R")+" / "+MID(KEY_TO_DATA$,11,4); EXIT 
17190 IF FAX_TYPE$="V" THEN %TYPE$="Vendor",%KEY_TO_DATA$=FN%ZZDISP$(MID(KEY_TO_DATA$,1,10),"A/P"); EXIT 
17200 IF FAX_TYPE$="W" THEN %TYPE$="Warehouse",%KEY_TO_DATA$=KEY_TO_DATA$; EXIT 
17205 IF FAX_TYPE$="A" THEN %TYPE$="CSR",%KEY_TO_DATA$=KEY_TO_DATA$; EXIT ! 271319
17210 IF FAX_TYPE$="Y" THEN %TYPE$="Thank You Customer",%KEY_TO_DATA$=FN%ZZDISP$(KEY_TO_DATA$,"A/R"); EXIT 
17290 EXIT 123
18000 CLEAR_FAX:! SSP235061 jdf
18010 EMAIL_ADDR$="",%SALES_NAME$="",%VEND_NAME$="",%WHSE_NAME$="",VENDOR$="",CUSTOMER$="",SALESPERSON$="",VENDOR_P$="",CUSTOMER_S$="",CUSTOMER_NOT$="",WARE$="",PLANT$="",%PLANT_NAME$="",%LOC_DESC$="",%CUST_CONT_NAME$="",%CUST_NAME$="",CSR$="" ! SSP235061 jdf,271319
18020 RETURN ! SSP235061 jdf
20000 FAX_TYPE_VALUES:
20010 FAX_VALUES$="",FAX_TRANS$=""
20015 READ (_EF1,END=FAX_TYPE_VALUES_END)
20020 FAX_VALUES$+=STP(FAX_DESC$,1)+"|"
20025 FAX_TRANS$+=FAX_NUM_TYPE$
20030 GOTO 20015
20035 FAX_TYPE_VALUES_END:RETURN 
20040 ! 
20050 LOAD_FAX_VALUES:
20060 DROP_BOX LOAD FAX_TYPE.CTL,""
20070 IF FAX_VALUES$="" THEN GOTO LOAD_FAX_VALUES_END
20080 DROP_BOX LOAD FAX_TYPE.CTL,FAX_VALUES$
20090 LOAD_FAX_VALUES_END:RETURN 
20095 ! 
20100 CREATE_EF3_DESC:
20110 READ (_EF1,KEY=FAX_TYPE$,DOM=*RETURN)
20120 EF3_DESC$=STP(FAX_DESC$,1)+":"
20130 REFRESH_FLG=1
20140 ON POS(FAX_TYPE$="CVSPTWRUYA") GOTO *NEXT,CUSTOMER,VENDOR,SALESPERSON,PLANT,SHIPTO,WAREHOUSE,CONTACT,SHIPTO,LETTER,CSR ! 271319
20145 ! 
20150 ! 
20160 CUSTOMER: NEXT_ID=CUSTOMER.CTL
20170 RETURN 
20180 VENDOR:
20190 RETURN 
20200 SALESPERSON: NEXT_ID=SALESPERSON.CTL; PRINT 'CB'; RETURN 
20210 PLANT:
20220 EF3_DESC$="Vendor:",EF3_DESC1$=STP(FAX_DESC$,1)+":"
20230 NEXT_ID=VENDOR_P.CTL,VENDOR_P$="",PLANT$=""
20235 CALL "*WINGRP;ENABLE",PLANT.GRP$
20240 RETURN 
20250 SHIPTO:
20260 EF3_DESC$="Customer:",EF3_DESC1$=STP(FAX_DESC$,1)+":"
20270 NEXT_ID=CUSTOMER_S.CTL,CUSTOMER_S$="",SHIP_TO$=""
20271 CALL "*WINGRP;SHOW",SHIP_TO.GRP$
20280 RETURN 
20300 CONTACT:
20310 EF3_DESC$="Customer:",EF3_DESC1$="Customer Contact:"
20320 CALL "*WINGRP;SHOW",REORDER.GRP$
20330 NEXT_ID=CUSTOMER_NOT.CTL
20340 RETURN 
20350 LETTER:
20360 EF3_DESC$="Customer:",NEXT_ID=CUSTOMER.CTL
20370 CALL "*WINGRP;SHOW",CUSTOMER.GRP$
20380 RETURN 
20450 CSR:! 271319
20460 EF3_DESC$="CSR:",NEXT_ID=CSR.CTL
20470 CALL "*WINGRP;SHOW",CSR.GRP$
20480 RETURN 
25000 CHECK_WRITE:
25010 ! MSGBOX MSG("WRITE_REC"),MSG("CONFIRM"),"?,YESNO",ANSWER$
25020 GOTO WRITE_REC
25040 CHECK_WRITE_END:RETURN 
25045 ! 
25050 WAREHOUSE:
25060 CALL "*WINGRP;SHOW",WARE.GRP$
25070 NEXT_ID=WARE.CTL
25080 RETURN 
40000 CUST:
40010 CALL "*WINGRP;HIDE",CUSTOMER.GRP$
40020 RETURN 
40030 VEND:
40040 CALL "*WINGRP;HIDE",VENDOR.GRP$
40050 RETURN 
40060 SALES:
40070 CALL "*WINGRP;HIDE",SALESPERS.GRP$
40080 RETURN 
40090 PLAN:
40100 CALL "*WINGRP;HIDE",PLANT.GRP$
40110 RETURN 
40120 SHIP:
40130 CALL "*WINGRP;HIDE",SHIP_TO.GRP$
40140 RETURN 
40150 WARE:
40160 CALL "*WINGRP;HIDE",WARE.GRP$
40170 RETURN 
40180 CONT:
40190 CALL "*WINGRP;HIDE",REORDER.GRP$
40195 CUSTOMER_NOT$="",REORDER$=""
40200 RETURN 
40210 LETTE:
40220 CALL "*WINGRP;HIDE",CUSTOMER.GRP$
40230 CUSTOMER$=""
40240 RETURN 
40250 CSRH:! 271319
40260 CALL "*WINGRP;HIDE",CSR.GRP$
40270 CSR$=""
40280 RETURN 
41000 CUST1: EF3_DESC$="Customer:",CUSTOMER$=KEY_TO_DATA$(1,10); RETURN 
41010 VEND1: EF3_DESC$="Vendor:",VENDOR$=KEY_TO_DATA$(1,10); RETURN 
41020 SALES1: EF3_DESC$="SalesPerson:",SALESPERSON$=KEY_TO_DATA$(1,4); RETURN 
41030 PLAN1: EF3_DESC$="Vendor:",EF3_DESC1$="Plant:",VENDOR_P$=KEY_TO_DATA$(1,10),PLANT$=KEY_TO_DATA$(11,4); RETURN 
41040 SHIP1: EF3_DESC$="Customer:",EF3_DESC1$="Ship To:",CUSTOMER_S$=KEY_TO_DATA$(1,10),SHIP_TO$=KEY_TO_DATA$(11,4); RETURN 
41050 WARE1: EF3_DESC$="Warehouse:",WARE$=KEY_TO_DATA$(1,4); RETURN 
41060 CONT1: EF3_DESC$="Customer:",CUSTOMER_NOT$=KEY_TO_DATA$(1,10),EF3_DECS1$="Customer Contact:",REORDER$=KEY_TO_DATA$(11,3); RETURN ! SSP#279201
41070 LETTE1: EF3_DESC$="Customer:",CUSTOMER$=KEY_TO_DATA$(1,10); RETURN 
41080 CSR1: EF3_DESC$="CSR:",CSR$=KEY_TO_DATA$(1,4); RETURN ! 271319
56000 ! "203043-The Electronic Forms Email setup does not work with types   
56002 REM "235061-The warehouse code field is not displaying under the email  
56003 REM "266525-EFGMAD - Would like to add a query button on this panel     
56004 REM "271319-New fax/email type CSR. Modify PO Printing to honor this new
56005 REM "279201-EFGMAD-Reorder Notice type.  Query at the Customer contact  
