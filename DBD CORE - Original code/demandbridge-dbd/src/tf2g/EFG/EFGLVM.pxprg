0010 ! EFGLVM - E/F Log Viewer
0035 REM "5.7 - 10/24/23 - 16.282375 - jvv - SSP# 307460
0037 REM "307460-EFGLVM  Get log file name from E/F parameter setup          
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0049 ! 
0050 IF TCB(13)=1 THEN BEGIN 
0052 IF NUL(%WDX$) THEN MSGBOX "You must be using Windx to access this feature!"; GOTO 0075
0055 IF NOT(%GUI) THEN CHUI_MODE=1; %GUI=1; PRINT 'SHOW'(0)
0060 PROCESS "EFGLVM","../EFG/EF.EN"
0065 IF CHUI_MODE THEN %GUI=0; PRINT 'SHOW'(1); RUN "ZMENU"
0075 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 INIT_OPEN:
0160 _FILE_NAME$="EFL"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0172 OPEN (HFN)"ZZPARM"; ZZPARM=LFO ! SSP 307460
0174 LFILE$=""; ZZ_KEY$=PAD(%C$,3)+"E/F"; READ (ZZPARM,ERR=*NEXT,KEY=ZZ_KEY$,DOM=*NEXT)EFPARAM$; LFILE$=STP(MID(EFPARAM$,61,30),2) ! ssp 307460
0175 CLOSE (ZZPARM) ! SSP 307460
0180 IF STP(LFILE$,2)="" THEN LOG_PATH$="/usr/unform/",LOG_FILE$="ufdbd.log",LFILE$=LOG_PATH$+LOG_FILE$ ! SSP 307460
0186 QRY_DISP_CNT=30000 ! Nr of records to display at a time in listbox
0192 %QRY_EFL_START$=""
0194 %QRY_EFL_END$=$00$
0198 RETURN 
0199 ! 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0370 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0525 GOSUB SET_REC_CNT
0530 ! OSUB RELOAD_LOG
0550 RELOAD_LOG=0
0560 NEXT_ID=BUTTON_3.CTL
0565 REFRESH_FLG=1
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0962 %QRY_EFL_START$=""
0964 %QRY_EFL_END$=$00$
0970 RETURN 
0999 ! 
1000 RELOAD_LOG:
1010 ANS$="YES"; MSGBOX MSG("EFGLVM_01"),MSG("CONFIRM"),"YESNO,2",ANS$
1020 IF ANS$<>"YES" THEN RELOAD_LOG=0; RETURN 
1030 GOSUB UPDATE_LOG_FILE
1035 GOSUB LOAD_FAX_LOG
1040 GOSUB INIT_UF_LOG
1045 GOSUB SET_REC_CNT
1050 RELOAD_LOG=1,REFRESH_FLG=1
1095 RETURN 
1099 ! 
1100 ! LEAR_LOG:
1195 ! ETURN 
1199 ! 
5000 UPDATE_LOG_FILE:
5010 ! Read log file
5040 ! LFILE$=LOG_PATH$+LOG_FILE$; !SSP 307460
5100 NEW_JOB$=DIM(8)
5200 CLOSE (2,ERR=*NEXT)
5210 OPEN (2)"|grep "+QUO+" \[JOB\]"+QUO+" "+LFILE$
5215 OPEN (HFN)"*MEMORY*"; JOBCHN=LFO
5220 READ RECORD (2,IND=0,ERR=*NEXT)LREC$; GOTO PARSE_REC
5230 GET_NEXT_REC:
5240 READ RECORD (2,END=UPDATE_LOG_EXIT)LREC$
5300 PARSE_REC:
5310 DELIM$="|"; INREC$=LREC$
5320 CALL "ZZ2PRS","","",LREC$,DELIM$,FIELDS${ALL},FIELDS_FOUND
5330 IF FIELDS_FOUND=0 THEN GOTO GET_NEXT_REC
5340 DELIM$=" ",INREC$=FIELDS$[1]
5350 CALL "ZZ2PRS","","",INREC$,DELIM$,JFIELDS${ALL},FIELDS_FOUND
5360 JOB_ID$=PAD(JFIELDS$[4],8,"L") ! SSP#265180
5400 ! Determine if log entry by Job id already exists in EFL file
5420 NEW_JOB$=JOB_ID$; GOSUB CHECK_NEW_JOB
5430 IF JOB_EXISTS THEN GOTO GET_NEXT_REC
5460 GOSUB ADD_LOG_ENTRY
5470 GOTO GET_NEXT_REC
5480 UPDATE_LOG_EXIT:
5485 CLOSE (JOBCHN); JOBCHN=0
5490 RETURN 
5499 ! 
5800 CHECK_NEW_JOB:
5805 GOSUB GET_NEXT_SEQ
5810 NEW_KEY$=NEW_JOB$+SEQ$
5820 FIND (_FIL_NO,KEY=NEW_KEY$,DOM=*NEXT); JOB_EXISTS=1; RETURN 
5830 JOB_EXISTS=0
5845 RETURN 
5849 ! 
5850 GET_NEXT_SEQ:
5855 SEQ$="0"; FIND (JOBCHN,KEY=NEW_JOB$,DOM=*NEXT)SEQ$
5860 SEQ$=STR((NUM(SEQ$)+1):"000")
5870 WRITE (JOBCHN,KEY=NEW_JOB$)SEQ$
5895 RETURN 
5899 ! 
5900 LOAD_FAX_LOG:
5910 OPEN (HFN,ERR=*RETURN)"FX0"+%C$; FX0=LFO
5915 IF NOT(%X3_SET) THEN CALL "ZZWMX3",ERR=*NEXT
5920 CALL "FX2XBA",ERR=*NEXT,%X3$,FX0
5940 CLOSE (FX0); FX0=0
5945 RETURN 
5949 ! 
6000 ADD_LOG_ENTRY:
6005 SETERR 6400
6010 JOB_SEQ_NO$=SEQ$
6015 S_DATE$=JFIELDS$[1]; S_DATE$=S_DATE$(1,4)+S_DATE$(6,2)+S_DATE$(9,2),JJ$=S_DATE$
6018 CALL "ZZWDTE;VALIDATE",JJ$,JJJ$,"DAYFMT=YYYYMMDD"; SUBMIT_DATE$=JJ$
6030 SUBMIT_TIME$=JFIELDS$[2]
6040 COMPANY$=FIELDS$[2]
6050 DRIVER$=FIELDS$[3]
6060 RULE_FILE$=FIELDS$[4]
6070 RULE_SET$=FIELDS$[5]
6080 NUM_OF_PAGES$=FIELDS$[6]
6090 VERSION$=FIELDS$[7]
6100 JOB_TYPE$=FIELDS$[8]
6110 OUTPUT_PATH$=FIELDS$[9]
6120 SUB_DRIVER$=FIELDS$[10]
6130 PRT_MODEL$=FIELDS$[11]
6140 PRT_TRAY$=FIELDS$[12]
6150 FILE_NAME$=FIELDS$[13]
6160 FAX_FROM$=FIELDS$[14]
6170 FAX_F_ADDR$=FIELDS$[15]
6180 FAX_TO$=FIELDS$[16]
6190 MEMO_1$=FIELDS$[17]
6200 MEMO_2$=FIELDS$[18]
6210 FAX_LS$=FIELDS$[19]
6220 FAX_STATUS$=FIELDS$[20]
6230 JOB_STATUS$=FIELDS$[21]
6240 JOB_OPTIONS$=FIELDS$[22]
6250 SUBMITTED_BY$=FIELDS$[23]
6450 LKEY$=JOB_ID$+SEQ$
6460 WRITE (_FIL_NO,KEY=LKEY$,ERR=*NEXT)
6470 SETERR 0000
6490 RETURN 
6499 ! 
7000 SELECT_LINE:
7020 PROCESS "EFGMNL","../EFG/EF.EN",MID(STP(LOG_LIST.CTL'VALUE$,3,SEP),1,11)
7099 RETURN 
9999 END 
10000 INIT_UF_LOG:! Initialize Unform Log
10005 ANS$="NO"; MSGBOX MSG("EFGLVM_02"),MSG("CONFIRM"),"?,YESNO,2",ANS$ ! SSP 242299
10010 IF ANS$="NO" THEN GOTO INIT_EXIT
10020 SETERR INIT_ERR
10030 ! LFILE$=LOG_PATH$+LOG_FILE$; !SSP 307460
10040 INVOKE "echo > "+LFILE$
10050 GOTO INIT_EXIT
10060 INIT_ERR:
10070 ANS$="YES"; MSGBOX MSG("EFGLVM_E01"),MSG("ERROR"),"!,RETRYCANCEL",ANS$
10072 SETERR 0000
10075 IF ANS$="RETRY" THEN GOTO INIT_UF_LOG ELSE GOTO INIT_EXIT
10090 INIT_EXIT:
10095 RETURN 
10099 ! 
11000 CLEAR_LOG:
11010 PROCESS "EFGLGC","../EFG/EF.EN"
11020 RELOAD_LOG=1,REFRESH_FLG=1
11030 NEXT_ID=BUTTON_3.CTL
11090 RETURN 
12000 CLEAR_EFL:! Clear File EFL entries by Date
12010 LIST_BOX SHOW LB_LINE.CTL; LIST_BOX ENABLE LB_LINE.CTL
12020 READ (_FIL_NO,KEY="",DOM=*NEXT)
12030 NXT_REC:
12040 _KEY$=KEY(_FIL_NO,END=END_PROCEED); READ (_FIL_NO)
12050 IF SUBMIT_DATE$>ML_DATE$ THEN GOTO NXT_REC
12060 DDTE$=SUBMIT_DATE$; CALL "ZZWDTE;DISPLAY",DDTE$,""
12070 LIST_BOX LOAD LB_LINE.CTL,0,JOB_ID$+SEP+DDTE$+SEP+SUBMIT_TIME$+SEP+OUTPUT_PATH$
12080 REMOVE (_FIL_NO,KEY=_KEY$,ERR=*NEXT)
12090 GOTO NXT_REC
12099 ! 
12100 END_PROCEED:
12110 DISABLE CONTROL BT_PROCEED.CTL
12120 NEXT_ID=BT_EXIT.CTL
12130 RETURN 
12199 ! 
12200 SET_REC_CNT:
12205 REM " Get current number of records in EFL
12210 RN$=FN%FIN$(_FIL_NO,"NUMREC"); TOT_RNO=NUM(RN$)
12215 IF TOT_RNO=0 THEN MSGBOX ("NO RECORDS TO DISPLAY"); RETURN 
12218 START_RNO=1
12220 IF TOT_RNO<=QRY_DISP_CNT THEN END_RNO=TOT_RNO; %QRY_EFL_START$="",%QRY_EFL_END$=$00$; RETURN 
12240 %QRY_EFL_START$=""
12245 END_RNO=START_RNO+(QRY_DISP_CNT-1)
12250 QRY_KEY$=KEY(_FIL_NO,RNO=END_RNO,KNO=1),%QRY_EFL_END$=QRY_KEY$
12290 RETURN 
12299 ! 
12300 FIRST_PAGE:
12310 START_RNO=1
12320 END_RNO=START_RNO+(QRY_DISP_CNT+1); IF END_RNO>TOT_RNO THEN END_RNO=TOT_RNO
12330 GOSUB SET_QRY_KEYS
12390 RETURN 
12399 ! 
12400 LAST_PAGE:
12410 END_RNO=TOT_RNO
12420 START_RNO=END_RNO-QRY_DISP_CNT; IF START_RNO<1 THEN START_RNO=1
12430 GOSUB SET_QRY_KEYS
12490 RETURN 
12499 ! 
12500 NEXT_PAGE:
12510 NEXT_PG=END_RNO+1
12520 IF NEXT_PG>TOT_RNO THEN MSGBOX ("THIS IS THE LAST PAGE TO DISPLAY"); RETURN 
12530 START_RNO=NEXT_PG
12540 END_RNO=START_RNO+(QRY_DISP_CNT-1)
12550 IF END_RNO>TOT_RNO THEN END_RNO=TOT_RNO
12560 GOSUB SET_QRY_KEYS
12590 RETURN 
12599 ! 
12600 PRIOR_PAGE:
12601 IF START_RNO=1 THEN MSGBOX ("THIS IS THE FIRST PAGE TO DISPLAY"); RETURN 
12610 PREV_PG=START_RNO-QRY_DISP_CNT; IF PREV_PG<1 THEN PREV_PG=1
12620 START_RNO=PREV_PG
12630 END_RNO=START_RNO+(QRY_DISP_CNT-1)
12640 IF END_RNO>TOT_RNO THEN END_RNO=TOT_RNO
12650 GOSUB SET_QRY_KEYS
12690 RETURN 
12699 ! 
12700 SET_QRY_KEYS:
12705 %QRY_EFL_START$="",%QRY_EFL_END$=$FF$
12710 %QRY_EFL_START$=KEY(_FIL_NO,RNO=START_RNO,KNO=1,ERR=*NEXT)
12730 %QRY_EFL_END$=KEY(_FIL_NO,RNO=END_RNO,KNO=1,ERR=*NEXT)
12790 RETURN 
12799 ! 
56000 REM "247032-Using send mail for emailing, how do you check to see if    
56002 REM "258253-E/F Log import has an issue. If jobs are logged out of order
56003 REM "265180-E/F U3 log left justifying job id's                         
56004 REM "265615-E/F log is locking up                                       
56005 REM "307460-EFGLVM  Get log file name from E/F parameter setup          
