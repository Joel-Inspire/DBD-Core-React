0010 ! EFGMAE - E/F Delivery Options
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Sep. 1, 2010 13:41
0030 ! ************************************************************************
0035 REM "5.7 - 08/12/19 - 9.463055 - jvv - SSP# 307196
0037 REM "307196-Additional support features for proxy printing in Electronic
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0049 ! 
0050 IF TCB(13)=1 THEN BEGIN 
0052 IF NUL(%WDX$) THEN MSGBOX "You must be using Windx to access this feature!"; GOTO 0075
0055 IF NOT(%GUI) THEN CHUI_MODE=1; %GUI=1; PRINT 'SHOW'(0)
0060 PROCESS "EFGMAE","../EFG/EF.EN"
0065 IF CHUI_MODE THEN %GUI=0; PRINT 'SHOW'(1); RUN "ZMENU"
0075 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="EF4"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _FN$="EF5"+%C$
0185 _EF5=HFN; OPEN (_EF5,IOL=*,ERR=OPEN_ERR)_FN$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=3
0430 DIM _KEYS$[1:3]; _KEYS$[1]="DOC_CODE$",_KEYS$[2]="DELIVERY_OPT_CODE$",_KEYS$[3]="COPY_NUM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; DOC_CODE$=MID(ARG_1$,1,10),DELIVERY_OPT_CODE$=MID(ARG_1$,11,3),COPY_NUM$=MID(ARG_1$,14,2) ! READ (_FIL_NO,KEY=_KEY$,ERR=NEW_RECORD)
0555 CALL "*WINGRP;ENABLE",FIELDS.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$; GOTO 1070
0560 ! _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1001 FIND_REC:
1002 IF NUL(DOC_CODE$) THEN GOTO CLEAR_REC ELSE IF LEN(DOC_CODE$)=10 THEN GOTO 1010
1010 IF NUL(DELIVERY_OPT_CODE$) OR NUL(COPY_NUM$) THEN GOTO 1020
1012 XX=NUM(DELIVERY_OPT_CODE$,ERR=*NEXT),DELIVERY_OPT_CODE$=STR(XX:"000"); GOTO 1014
1013 DELIVERY_OPT_CODE$=PAD(DELIVERY_OPT_CODE$,3," ")
1014 DELIVERY_OPT_CODE.CTL'VALUE$=DELIVERY_OPT_CODE$
1015 XX=NUM(COPY_NUM$,ERR=*NEXT),COPY_NUM$=STR(XX:"00"); GOTO 1017
1016 COPY_NUM$=PAD(COPY_NUM$,2," ")
1017 COPY_NUM.CTL'VALUE$=COPY_NUM$
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1265 _CLR_FLG$=""; GOSUB CLEAR_FIELDS
1268 PRINT_YN$="N",PDFPRINT_YN$="N"
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE; IF _ABORT_WRITE THEN _ABORT_WRITE=0; RETURN 
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1670 GOSUB CLEAR_REC
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3025 GOSUB LOAD_FAX_OPTS
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3052 IF STP(PDFPRINT_YN$,2)="" THEN PDFPRINT_YN$="N" ! SSP 307196
3054 IF STP(PRINT_YN$,2)="" THEN PRINT_YN$="N" ! SSP 307196
3055 GOSUB LOAD_PRINT_DEV
3056 PRT_DRIVER.CTL'VALUE$=STP(PRT_DRIVER$,2)
3058 GOSUB CHECK_EMAIL_PARMS
3060 CHANGE_FLG=0
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$="",_ABORT_WRITE=0
3225 GOSUB SAVE_FAX_OPTS
3230 EXTRACT (_FIL_NO,KEY=KEC(_FIL_NO),REC=_CUR$,DOM=WRT,ERR=REC_BUSY)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3410 REC_BUSY:
3420 IF ERR=0 THEN MSGBOX _MSG_REC_LOCKED$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG_CANNOT_WRITE$+SEP+MSG(ERR),_ERROR$
3430 _ABORT_WRITE=1
3440 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=DOC_CODE.CTL,_FIRST_FIELD=PRINT_YN.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF UCS(_KEYS$[_CURKEY])=UCS(ID$)+"$" OR UCS(_KEYS$[_CURKEY])=UCS(ID$) THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN DOC_CODE$=""
13030 IF _CLR_FLG$="R" THEN DELIVERY_OPT_CODE$=""
13035 IF _CLR_FLG$="R" THEN COPY_NUM$=""
13050 PRINT_YN$=""
13060 IMGLIB_YN$=""
13070 PDFPRINT_YN$=""
13080 PSPRINT_YN$=""
13090 ARCHIVE_YN$=""
13100 FAX_YN$=""
13110 IMGLIB_LABEL$=""
13120 FAX_OPTS$="",FAX_OPTS_C$="",FAX_OPTS_V$="",FAX_OPTS_P$="",FAX_OPTS_T$="",FAX_OPTS_W$="",FAX_OPTS_S$="",FAX_OPTS_A$="",FAX_OPTS_R$="" ! 271319,279215
13130 PRT_DEV$=""
13140 PRT_CONFIG$=""
13141 JOB_CARD_OVERRIDE$="" ! 246969
13142 PRT_DRIVER$="",PRT_DRIVER.CTL'VALUE$="" ! DROP_BOX WRITE PRT_DRIVER.CTL,"" ! SSP 251148
13145 PRT_MODEL$="" ! ssp 251148
13148 PRT_TRAY$="" ! ssp 251148
13150 FAX_LS$="" ! SSP 251148
13152 DEFER_EMAIL$="" ! SSP 298391
13158 EF4_UNUSED_1$=""
13160 DROP_BOX LOAD RPT_OUTDEV.CTL,""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=DELIVERY_OPT_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=COPY_NUM.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(20,"N") ! 246969 251148 298391
15030 IF _ORIG.DOC_CODE$=_CUR.DOC_CODE$ OR DOC_CODE$=_CUR.DOC_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.DOC_CODE$=DOC_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("DOC_CODE")+" = "+_CUR.DOC_CODE$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DOC_CODE")+" = "+_CUR.DOC_CODE$
15040 IF _ORIG.DELIVERY_OPT_CODE$=_CUR.DELIVERY_OPT_CODE$ OR DELIVERY_OPT_CODE$=_CUR.DELIVERY_OPT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.DELIVERY_OPT_CODE$=DELIVERY_OPT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("DELV_OPCD")+" = "+_CUR.DELIVERY_OPT_CODE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DELV_OPCD")+" = "+_CUR.DELIVERY_OPT_CODE$
15050 IF _ORIG.COPY_NUM$=_CUR.COPY_NUM$ OR COPY_NUM$=_CUR.COPY_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.COPY_NUM$=COPY_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("COPY_NUM")+" = "+_CUR.COPY_NUM$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COPY_NUM")+" = "+_CUR.COPY_NUM$
15060 IF _ORIG.PRINT_YN$=_CUR.PRINT_YN$ OR PRINT_YN$=_CUR.PRINT_YN$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_YN$=PRINT_YN$ THEN _CHG2$=_CHG2$+SEP+MSG("PRINT_YN")+" = "+_CUR.PRINT_YN$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRINT_YN")+" = "+_CUR.PRINT_YN$
15070 IF _ORIG.IMGLIB_YN$=_CUR.IMGLIB_YN$ OR IMGLIB_YN$=_CUR.IMGLIB_YN$ THEN GOTO *NEXT ELSE IF _ORIG.IMGLIB_YN$=IMGLIB_YN$ THEN _CHG2$=_CHG2$+SEP+MSG("IMGLIB_YN")+" = "+_CUR.IMGLIB_YN$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("IMGLIB_YN")+" = "+_CUR.IMGLIB_YN$
15080 IF _ORIG.PDFPRINT_YN$=_CUR.PDFPRINT_YN$ OR PDFPRINT_YN$=_CUR.PDFPRINT_YN$ THEN GOTO *NEXT ELSE IF _ORIG.PDFPRINT_YN$=PDFPRINT_YN$ THEN _CHG2$=_CHG2$+SEP+MSG("PDFPRN_YN")+" = "+_CUR.PDFPRINT_YN$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PDFPRN_YN")+" = "+_CUR.PDFPRINT_YN$
15090 IF _ORIG.PSPRINT_YN$=_CUR.PSPRINT_YN$ OR PSPRINT_YN$=_CUR.PSPRINT_YN$ THEN GOTO *NEXT ELSE IF _ORIG.PSPRINT_YN$=PSPRINT_YN$ THEN _CHG2$=_CHG2$+SEP+MSG("PSPRN_YN")+" = "+_CUR.PSPRINT_YN$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PSPRN_YN")+" = "+_CUR.PSPRINT_YN$
15100 IF _ORIG.ARCHIVE_YN$=_CUR.ARCHIVE_YN$ OR ARCHIVE_YN$=_CUR.ARCHIVE_YN$ THEN GOTO *NEXT ELSE IF _ORIG.ARCHIVE_YN$=ARCHIVE_YN$ THEN _CHG2$=_CHG2$+SEP+MSG("ARCHIVE_YN")+" = "+_CUR.ARCHIVE_YN$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ARCHIVE_YN")+" = "+_CUR.ARCHIVE_YN$
15110 IF _ORIG.FAX_YN$=_CUR.FAX_YN$ OR FAX_YN$=_CUR.FAX_YN$ THEN GOTO *NEXT ELSE IF _ORIG.FAX_YN$=FAX_YN$ THEN _CHG2$=_CHG2$+SEP+MSG("FAX_YN")+" = "+_CUR.FAX_YN$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FAX_YN")+" = "+_CUR.FAX_YN$
15120 IF _ORIG.IMGLIB_LABEL$=_CUR.IMGLIB_LABEL$ OR IMGLIB_LABEL$=_CUR.IMGLIB_LABEL$ THEN GOTO *NEXT ELSE IF _ORIG.IMGLIB_LABEL$=IMGLIB_LABEL$ THEN _CHG2$=_CHG2$+SEP+MSG("LABEL")+" = "+_CUR.IMGLIB_LABEL$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LABEL")+" = "+_CUR.IMGLIB_LABEL$
15130 IF _ORIG.FAX_OPTS$=_CUR.FAX_OPTS$ OR FAX_OPTS$=_CUR.FAX_OPTS$ THEN GOTO *NEXT ELSE IF _ORIG.FAX_OPTS$=FAX_OPTS$ THEN _CHG2$=_CHG2$+SEP+MSG("FAX_OPTS")+" = "+_CUR.FAX_OPTS$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FAX_OPTS")+" = "+_CUR.FAX_OPTS$
15140 IF _ORIG.PRT_DEV$=_CUR.PRT_DEV$ OR PRT_DEV$=_CUR.PRT_DEV$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_DEV$=PRT_DEV$ THEN _CHG2$=_CHG2$+SEP+MSG("PRT_DEV")+" = "+_CUR.PRT_DEV$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRT_DEV")+" = "+_CUR.PRT_DEV$
15150 IF _ORIG.PRT_CONFIG$=_CUR.PRT_CONFIG$ OR PRT_CONFIG$=_CUR.PRT_CONFIG$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_CONFIG$=PRT_CONFIG$ THEN _CHG2$=_CHG2$+SEP+MSG("PRT_CFG")+" = "+_CUR.PRT_CONFIG$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRT_CFG")+" = "+_CUR.PRT_CONFIG$
15152 IF _ORIG.PRT_DRIVER$=_CUR.PRT_DRIVER$ OR PRT_DRIVER$=_CUR.PRT_DRIVER$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_DRIVER$=PRT_DRIVER$ THEN _CHG2$=_CHG2$+SEP+MSG("PRT_DRIVER")+" = "+_CUR.PRT_DRIVER$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRT_DRIVER")+" = "+_CUR.PRT_DRIVER$ ! 251148
15154 IF _ORIG.PRT_MODEL$=_CUR.PRT_MODEL$ OR PRT_MODEL$=_CUR.PRT_MODEL$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_MODEL$=PRT_MODEL$ THEN _CHG2$=_CHG2$+SEP+MSG("PRT_MODEL")+" = "+_CUR.PRT_MODEL$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRT_MODEL")+" = "+_CUR.PRT_MODEL$ ! 251148
15156 IF _ORIG.PRT_TRAY$=_CUR.PRT_TRAY$ OR PRT_TRAY$=_CUR.PRT_TRAY$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_TRAY$=PRT_TRAY$ THEN _CHG2$=_CHG2$+SEP+MSG("PRT_TRAY")+" = "+_CUR.PRT_TRAY$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRT_TRAY")+" = "+_CUR.PRT_TRAY$ ! 251148
15158 IF _ORIG.FAX_LS$=_CUR.FAX_LS$ OR FAX_LS$=_CUR.FAX_LS$ THEN GOTO *NEXT ELSE IF _ORIG.FAX_LS$=FAX_LS$ THEN _CHG2$=_CHG2$+SEP+MSG("FAX_LS")+" = "+_CUR.FAX_LS$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FAX_LS")+" = "+_CUR.FAX_LS$ ! 251148
15159 IF _ORIG.DEFER_EMAIL$=_CUR.DEFER_EMAIL$ OR DEFER_EMAIL$=_CUR.DEFER_EMAIL$ THEN GOTO *NEXT ELSE IF _ORIG.DEFER_EMAIL$=DEFER_EMAIL$ THEN _CHG2$=_CHG2$+SEP+MSG("DEFER_EML")+" = "+_CUR.DEFER_EMAIL$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DEFER_EML")+" = "+_CUR.DEFER_EMAIL$ ! 298391
15160 IF _ORIG.EF4_UNUSED_1$=_CUR.EF4_UNUSED_1$ OR EF4_UNUSED_1$=_CUR.EF4_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.EF4_UNUSED_1$=EF4_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.EF4_UNUSED_1$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.EF4_UNUSED_1$
15161 IF _ORIG.JOB_CARD_OVERRIDE$=_CUR.JOB_CARD_OVERRIDE$ OR JOB_CARD_OVERRIDE$=_CUR.JOB_CARD_OVERRIDE$ THEN GOTO *NEXT ELSE IF _ORIG.JOB_CARD_OVERRIDE$=JOB_CARD_OVERRIDE$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_C_D")+" "+MSG("OVERRIDE")+" = "+_CUR.JOB_CARD_OVERRIDE$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_C_D")+" "+MSG("OVERRIDE")+" = "+_CUR.JOB_CARD_OVERRIDE$ ! 246969
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN DOC_CODE$=_CUR.DOC_CODE$
16030 IF _CHG_VAR$(2,1)="Y" THEN DELIVERY_OPT_CODE$=_CUR.DELIVERY_OPT_CODE$
16040 IF _CHG_VAR$(3,1)="Y" THEN COPY_NUM$=_CUR.COPY_NUM$
16050 IF _CHG_VAR$(4,1)="Y" THEN PRINT_YN$=_CUR.PRINT_YN$
16060 IF _CHG_VAR$(5,1)="Y" THEN IMGLIB_YN$=_CUR.IMGLIB_YN$
16070 IF _CHG_VAR$(6,1)="Y" THEN PDFPRINT_YN$=_CUR.PDFPRINT_YN$
16080 IF _CHG_VAR$(7,1)="Y" THEN PSPRINT_YN$=_CUR.PSPRINT_YN$
16090 IF _CHG_VAR$(8,1)="Y" THEN ARCHIVE_YN$=_CUR.ARCHIVE_YN$
16100 IF _CHG_VAR$(9,1)="Y" THEN FAX_YN$=_CUR.FAX_YN$
16110 IF _CHG_VAR$(10,1)="Y" THEN IMGLIB_LABEL$=_CUR.IMGLIB_LABEL$
16120 IF _CHG_VAR$(11,1)="Y" THEN FAX_OPTS$=_CUR.FAX_OPTS$
16130 IF _CHG_VAR$(12,1)="Y" THEN PRT_DEV$=_CUR.PRT_DEV$
16140 IF _CHG_VAR$(13,1)="Y" THEN PRT_CONFIG$=_CUR.PRT_CONFIG$
16150 IF _CHG_VAR$(14,1)="Y" THEN EF4_UNUSED_1$=_CUR.EF4_UNUSED_1$
16151 IF _CHG_VAR$(15,1)="Y" THEN JOB_CARD_OVERRIDE$=_CUR.JOB_CARD_OVERRIDE$ ! 246969
16990 RETURN 
16999 ! 
17000 LOAD_FAX_OPTS:
17004 FAX_OPTS_C$="",FAX_OPTS_V$="",FAX_OPTS_P$="",FAX_OPTS_T$="",FAX_OPTS_W$="",FAX_OPTS_S$="",FAX_OPTS_A$="",FAX_OPTS_R$="" ! SSP#281974
17005 IF NUL(FAX_OPTS$) THEN RETURN 
17010 IF POS("C"=FAX_OPTS$) THEN FAX_OPTS_C$="C"
17015 IF POS("V"=FAX_OPTS$) THEN FAX_OPTS_V$="V"
17020 IF POS("P"=FAX_OPTS$) THEN FAX_OPTS_P$="P"
17025 IF POS("T"=FAX_OPTS$) THEN FAX_OPTS_T$="T"
17030 IF POS("W"=FAX_OPTS$) THEN FAX_OPTS_W$="W"
17035 IF POS("S"=FAX_OPTS$) THEN FAX_OPTS_S$="S"
17040 IF POS("A"=FAX_OPTS$) THEN FAX_OPTS_A$="A" ! 271319
17045 IF POS("R"=FAX_OPTS$) THEN FAX_OPTS_R$="R" ! 279215
17095 RETURN 
17099 ! 
17100 SAVE_FAX_OPTS:
17110 FAX_OPTS$=STP(FAX_OPTS_C$+FAX_OPTS_V$+FAX_OPTS_P$+FAX_OPTS_T$+FAX_OPTS_W$+FAX_OPTS_S$+FAX_OPTS_A$+FAX_OPTS_R$,3) ! 271319,279215
17195 RETURN 
17199 ! 
17200 EMAIL_PARMS:
17220 PROCESS "EFGMAF","../EFG/EF.EN",_KEY$
17230 GOSUB CHECK_EMAIL_PARMS
17250 RETURN 
17259 ! 
18000 PROCESS_QRY:
18020 VAL$=""; PROCESS "QRY_EF4.2","../EFG/EF.EN",VAL$; IF STP(VAL$)="" THEN NEXT_ID=DOC_CODE.CTL; EXIT 
18050 DOC_CODE$=VAL$(1,10); DELIVERY_OPT_CODE$=VAL$(11,3); COPY_NUM$=VAL$(14,2)
18060 ! GOSUB FIND_DOC_CODE; GOSUB LOAD_FF_LIST
18070 _KEY$=VAL$(1,15)
18080 GOTO 1070
18095 RETURN 
18099 ! 
19000 ! 
19010 LOAD_PRINT_DEV:
19025 RPT_OUTDEV$="",SS$=TSK(0)
19030 OPEN (HFN,ERR=*RETURN)"ZZ9"+%C$; ZZ9=LFO
19040 NEXT_DEV: KEY_ZZ9$=KEY(ZZ9,END=END_LOAD_PRINT_DEV)
19050 READ (ZZ9,KEY=KEY_ZZ9$)ZZ9$
19055 IF POS(ZZ9$(1,2)=SS$)=0 THEN GOTO NEXT_DEV
19060 RPT_OUTDEV$=RPT_OUTDEV$+ZZ9$(1,2)+" - "+ZZ9$(3,30)+SEP
19077 IF ZZ9$(43,1)<>"2" THEN GOTO NEXT_DEV
19090 GOTO NEXT_DEV
19100 END_LOAD_PRINT_DEV:
19105 XX=0,XXX=0; IF NOT(NUL(PRT_DEV$)) THEN XX=POS(SEP+PRT_DEV$=SEP+RPT_OUTDEV$); IF XX<>0 THEN XXX=POS(SEP=SEP+MID(RPT_OUTDEV$,1,XX),1,0)
19110 DROP_BOX LOAD RPT_OUTDEV.CTL,RPT_OUTDEV$
19120 IF XXX THEN DROP_BOX WRITE RPT_OUTDEV.CTL,XXX,ERR=*NEXT
19130 CLOSE (ZZ9); ZZ9=0
19145 RETURN 
19149 ! 
20000 CHECK_EMAIL_PARMS:
20010 IF FAX_YN$<>"Y" THEN RETURN 
20020 %ALREADY_CONFIGURED$=""
20030 FIND (_EF5,KEY=_KEY$,DOM=EMAIL_PARMS_DSP)
20050 %ALREADY_CONFIGURED$="{!Checkmark}"
20060 EMAIL_PARMS_DSP:
20065 BTN_EMAIL.CTL'TEXT$=%ALREADY_CONFIGURED$+" Email Parameters"
20070 REFRESH_FLG=1
20090 RETURN 
20099 ! 
56000 ! 
56001 REM "237164-Install Unform. Implement electronic forms support in Unform
56002 REM "246969-Custom PO in Unform                                         
56003 REM "251148-Make an option available on the E/F S2 screen to change     
56005 REM "269734-Unform Emails: Ability to customize email settings like     
56006 REM "271319-New fax/email type CSR. Modify PO Printing to honor this new
56007 REM "279215-EFGMAD-R types are not emailing thru Unform
56008 REM "281974-When using the arrow keys in the E/F, S2 screen, the screen 
56009 REM "298391-Ability to send E/F emails of Invoices after SJ Update      
56010 REM "307196-Additional support features for proxy printing in Electronic
