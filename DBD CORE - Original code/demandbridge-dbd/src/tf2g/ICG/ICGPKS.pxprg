0010 ! ICGPKS - Physical Count variance Report
0035 REM "5.6 - 04/10/09 - 17.171111 - jir - SSP# 228228
0037 REM "228228-Ability to split a report into multiple PDFs based on sales 
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0045 PROCESS "ICGPKS","../ICG/IC.EN"
0050 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ZZS"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN)_FILE_NAME$
0185 _ZZPARM=HFN; OPEN (_ZZPARM)"ZZPARM"
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="PRG_NAME$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 ARG_1$="IC2PKA"+"            ",%K9$="IC2PKA"
0537 DIM RNG(4)
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT)A$,R0$,W$,RNG{ALL}; GOTO 0560
0551 DIM A$(83),R0$(128),W$(71),RNG(4)
0560 ! _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0562 NXT_OPTION:
0565 GOSUB ASSIGN_LIB
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0941 IF _ZZPARM THEN CLOSE (_ZZPARM); _ZZPARM=0
0942 IF ZZP THEN CLOSE (ZZP,ERR=*NEXT); ZZP=0
0943 IF ZZPARM THEN CLOSE (ZZPARM); ZZPARM=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 _KEY$=PRG_NAME$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 _KEY$=PRG_NAME$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=*NEXT)A$,R0$,W$,RNG{ALL}; GOTO 3360
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=PRG_NAME.CTL,_FIRST_FIELD=RPT_SELEC.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX MSG("UPD_RPT_1")+SEP+MSG("UPD_RPT_2"),MSG("CONFIRM"),"?,YESNO",_YESNO$
3840 IF _YESNO$="YES" THEN GOSUB ASSIGN_PRG; GOTO WRT
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 RPT_NUM1$=STR(RPT_NUM1)
10030 RPT_NUM2$=STR(RPT_NUM2)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="RPT_NUM1",_X=RPT_NUM1.CTL,RPT_NUM1=NUM(RPT_NUM1$,ERR=NON_NUMERIC)
11030 _X$="RPT_NUM2",_X=RPT_NUM2.CTL,RPT_NUM2=NUM(RPT_NUM2$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN PRG_NAME$=""
13030 RPT_SELEC$=""
13040 RPT_DESC$=""
13050 RPT_OPT$=""
13060 RPT_SEQ$=""
13070 RPT_SHIPTO$=" "
13080 RPT_AGEINV$=""
13090 RPT_REPTYPE$=""
13100 RPT_ZEROBAL$=""
13110 RPT_POSTAGE$=""
13120 RPT_NAMEADD$=""
13130 RPT_INVRPT$=""
13140 RPT_FISYR$=""
13150 RPT_PER$=""
13160 RPT_CCINV$=""
13170 RPT_AGEDATE$=""
13180 RPT_PTD$=""
13190 RPT_RECAP$=""
13200 DATE_FLD1$=""
13210 DATE_FLD2$=""
13220 DATE_FLD3$=""
13230 DATE_FLD4$=""
13240 RPT_CMT1$=""
13250 RPT_CMT2$=""
13260 PRT_MODE$=""
13270 RPT_OUTDEV$=""
13280 RPT_VERT$=""
13290 RPT_HORIZ$=""
13300 RPT_AUX1$=""
13310 RPT_AUX2$=""
13320 RPT_AUX3$=""
13330 RPT_AUX4$=""
13340 RPT_LINES$=""
13350 RPT_FORMCODE$=""
13360 NOT_USED$=""
13370 UNUSED_1$=""
13380 UNUSED_2$=""
13390 UNUSED_3$=""
13400 UNUSED_4$=""
13410 UNUSED_5$=""
13420 UNUSED_6$=""
13430 RPT_JOBCARD$=""
13440 RPT_JOBCARD_FLG$=""
13450 RPT_NUM1=0
13460 RPT_NUM2=0
13470 BANK_CODE$=""
13480 PRT_DE_ITEM$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(47,"N")
15030 IF _ORIG.PRG_NAME$=_CUR.PRG_NAME$ OR PRG_NAME$=_CUR.PRG_NAME$ THEN GOTO *NEXT ELSE IF _ORIG.PRG_NAME$=PRG_NAME$ THEN _CHG2$=_CHG2$+SEP+MSG("PROG_N")+" = "+_CUR.PRG_NAME$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROG_N")+" = "+_CUR.PRG_NAME$
15040 IF _ORIG.RPT_SELEC$=_CUR.RPT_SELEC$ OR RPT_SELEC$=_CUR.RPT_SELEC$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_SELEC$=RPT_SELEC$ THEN _CHG2$=_CHG2$+SEP+MSG("SELECTION")+" = "+_CUR.RPT_SELEC$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELECTION")+" = "+_CUR.RPT_SELEC$
15050 IF _ORIG.RPT_DESC$=_CUR.RPT_DESC$ OR RPT_DESC$=_CUR.RPT_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_DESC$=RPT_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("DESC")+" = "+_CUR.RPT_DESC$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DESC")+" = "+_CUR.RPT_DESC$
15060 IF _ORIG.RPT_OPT$=_CUR.RPT_OPT$ OR RPT_OPT$=_CUR.RPT_OPT$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_OPT$=RPT_OPT$ THEN _CHG2$=_CHG2$+SEP+MSG("OPTIONS")+" = "+_CUR.RPT_OPT$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OPTIONS")+" = "+_CUR.RPT_OPT$
15070 IF _ORIG.RPT_SEQ$=_CUR.RPT_SEQ$ OR RPT_SEQ$=_CUR.RPT_SEQ$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_SEQ$=RPT_SEQ$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ")+" = "+_CUR.RPT_SEQ$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ")+" = "+_CUR.RPT_SEQ$
15080 IF _ORIG.RPT_SHIPTO$=_CUR.RPT_SHIPTO$ OR RPT_SHIPTO$=_CUR.RPT_SHIPTO$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_SHIPTO$=RPT_SHIPTO$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_ST_A")+" = "+_CUR.RPT_SHIPTO$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_ST_A")+" = "+_CUR.RPT_SHIPTO$
15090 IF _ORIG.RPT_AGEINV$=_CUR.RPT_AGEINV$ OR RPT_AGEINV$=_CUR.RPT_AGEINV$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AGEINV$=RPT_AGEINV$ THEN _CHG2$=_CHG2$+SEP+"Age Invoice on Inv or Due Date = "+_CUR.RPT_AGEINV$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Age Invoice on Inv or Due Date = "+_CUR.RPT_AGEINV$
15100 IF _ORIG.RPT_REPTYPE$=_CUR.RPT_REPTYPE$ OR RPT_REPTYPE$=_CUR.RPT_REPTYPE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_REPTYPE$=RPT_REPTYPE$ THEN _CHG2$=_CHG2$+SEP+"Report Type = "+_CUR.RPT_REPTYPE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Report Type = "+_CUR.RPT_REPTYPE$
15110 IF _ORIG.RPT_ZEROBAL$=_CUR.RPT_ZEROBAL$ OR RPT_ZEROBAL$=_CUR.RPT_ZEROBAL$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_ZEROBAL$=RPT_ZEROBAL$ THEN _CHG2$=_CHG2$+SEP+"Print Zero Bal Inv = "+_CUR.RPT_ZEROBAL$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Zero Bal Inv = "+_CUR.RPT_ZEROBAL$
15120 IF _ORIG.RPT_POSTAGE$=_CUR.RPT_POSTAGE$ OR RPT_POSTAGE$=_CUR.RPT_POSTAGE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_POSTAGE$=RPT_POSTAGE$ THEN _CHG2$=_CHG2$+SEP+"Post Aged Inv to Mater File = "+_CUR.RPT_POSTAGE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Post Aged Inv to Mater File = "+_CUR.RPT_POSTAGE$
15130 IF _ORIG.RPT_NAMEADD$=_CUR.RPT_NAMEADD$ OR RPT_NAMEADD$=_CUR.RPT_NAMEADD$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_NAMEADD$=RPT_NAMEADD$ THEN _CHG2$=_CHG2$+SEP+"Print Name and Address = "+_CUR.RPT_NAMEADD$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Name and Address = "+_CUR.RPT_NAMEADD$
15140 IF _ORIG.RPT_INVRPT$=_CUR.RPT_INVRPT$ OR RPT_INVRPT$=_CUR.RPT_INVRPT$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_INVRPT$=RPT_INVRPT$ THEN _CHG2$=_CHG2$+SEP+"Invoice to Report = "+_CUR.RPT_INVRPT$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Invoice to Report = "+_CUR.RPT_INVRPT$
15150 IF _ORIG.RPT_FISYR$=_CUR.RPT_FISYR$ OR RPT_FISYR$=_CUR.RPT_FISYR$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_FISYR$=RPT_FISYR$ THEN _CHG2$=_CHG2$+SEP+"Fiscal Year = "+_CUR.RPT_FISYR$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Fiscal Year = "+_CUR.RPT_FISYR$
15160 IF _ORIG.RPT_PER$=_CUR.RPT_PER$ OR RPT_PER$=_CUR.RPT_PER$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_PER$=RPT_PER$ THEN _CHG2$=_CHG2$+SEP+"Period = "+_CUR.RPT_PER$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Period = "+_CUR.RPT_PER$
15170 IF _ORIG.RPT_CCINV$=_CUR.RPT_CCINV$ OR RPT_CCINV$=_CUR.RPT_CCINV$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_CCINV$=RPT_CCINV$ THEN _CHG2$=_CHG2$+SEP+"Print Credit Card Invoices. = "+_CUR.RPT_CCINV$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Credit Card Invoices. = "+_CUR.RPT_CCINV$
15180 IF _ORIG.RPT_AGEDATE$=_CUR.RPT_AGEDATE$ OR RPT_AGEDATE$=_CUR.RPT_AGEDATE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AGEDATE$=RPT_AGEDATE$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.RPT_AGEDATE$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.RPT_AGEDATE$
15190 IF _ORIG.RPT_PTD$=_CUR.RPT_PTD$ OR RPT_PTD$=_CUR.RPT_PTD$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_PTD$=RPT_PTD$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_T_D")+" = "+_CUR.RPT_PTD$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_T_D")+" = "+_CUR.RPT_PTD$
15200 IF _ORIG.RPT_RECAP$=_CUR.RPT_RECAP$ OR RPT_RECAP$=_CUR.RPT_RECAP$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_RECAP$=RPT_RECAP$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_R")+" = "+_CUR.RPT_RECAP$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_R")+" = "+_CUR.RPT_RECAP$
15210 IF _ORIG.DATE_FLD1$=_CUR.DATE_FLD1$ OR DATE_FLD1$=_CUR.DATE_FLD1$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_FLD1$=DATE_FLD1$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD1$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD1$
15220 IF _ORIG.DATE_FLD2$=_CUR.DATE_FLD2$ OR DATE_FLD2$=_CUR.DATE_FLD2$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_FLD2$=DATE_FLD2$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD2$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD2$
15230 IF _ORIG.DATE_FLD3$=_CUR.DATE_FLD3$ OR DATE_FLD3$=_CUR.DATE_FLD3$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_FLD3$=DATE_FLD3$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD3$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD3$
15240 IF _ORIG.DATE_FLD4$=_CUR.DATE_FLD4$ OR DATE_FLD4$=_CUR.DATE_FLD4$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_FLD4$=DATE_FLD4$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD4$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD4$
15250 IF _ORIG.RPT_CMT1$=_CUR.RPT_CMT1$ OR RPT_CMT1$=_CUR.RPT_CMT1$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_CMT1$=RPT_CMT1$ THEN _CHG2$=_CHG2$+SEP+MSG("COMMENTS_1")+" = "+_CUR.RPT_CMT1$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMMENTS_1")+" = "+_CUR.RPT_CMT1$
15260 IF _ORIG.RPT_CMT2$=_CUR.RPT_CMT2$ OR RPT_CMT2$=_CUR.RPT_CMT2$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_CMT2$=RPT_CMT2$ THEN _CHG2$=_CHG2$+SEP+MSG("COMMENTS_2")+" = "+_CUR.RPT_CMT2$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMMENTS_2")+" = "+_CUR.RPT_CMT2$
15270 IF _ORIG.PRT_MODE$=_CUR.PRT_MODE$ OR PRT_MODE$=_CUR.PRT_MODE$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_MODE$=PRT_MODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_MODE")+" = "+_CUR.PRT_MODE$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_MODE")+" = "+_CUR.PRT_MODE$
15280 IF _ORIG.RPT_OUTDEV$=_CUR.RPT_OUTDEV$ OR RPT_OUTDEV$=_CUR.RPT_OUTDEV$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_OUTDEV$=RPT_OUTDEV$ THEN _CHG2$=_CHG2$+SEP+MSG("OUTPUT_DEV")+" = "+_CUR.RPT_OUTDEV$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OUTPUT_DEV")+" = "+_CUR.RPT_OUTDEV$
15290 IF _ORIG.RPT_VERT$=_CUR.RPT_VERT$ OR RPT_VERT$=_CUR.RPT_VERT$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_VERT$=RPT_VERT$ THEN _CHG2$=_CHG2$+SEP+MSG("VERT_P_M")+" = "+_CUR.RPT_VERT$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VERT_P_M")+" = "+_CUR.RPT_VERT$
15300 IF _ORIG.RPT_HORIZ$=_CUR.RPT_HORIZ$ OR RPT_HORIZ$=_CUR.RPT_HORIZ$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_HORIZ$=RPT_HORIZ$ THEN _CHG2$=_CHG2$+SEP+MSG("HORI_P_M")+" = "+_CUR.RPT_HORIZ$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HORI_P_M")+" = "+_CUR.RPT_HORIZ$
15310 IF _ORIG.RPT_AUX1$=_CUR.RPT_AUX1$ OR RPT_AUX1$=_CUR.RPT_AUX1$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AUX1$=RPT_AUX1$ THEN _CHG2$=_CHG2$+SEP+MSG("AUX_PC_1")+" = "+_CUR.RPT_AUX1$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUX_PC_1")+" = "+_CUR.RPT_AUX1$
15320 IF _ORIG.RPT_AUX2$=_CUR.RPT_AUX2$ OR RPT_AUX2$=_CUR.RPT_AUX2$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AUX2$=RPT_AUX2$ THEN _CHG2$=_CHG2$+SEP+MSG("AUX_PC_2")+" = "+_CUR.RPT_AUX2$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUX_PC_2")+" = "+_CUR.RPT_AUX2$
15330 IF _ORIG.RPT_AUX3$=_CUR.RPT_AUX3$ OR RPT_AUX3$=_CUR.RPT_AUX3$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AUX3$=RPT_AUX3$ THEN _CHG2$=_CHG2$+SEP+MSG("AUX_PC_3")+" = "+_CUR.RPT_AUX3$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUX_PC_3")+" = "+_CUR.RPT_AUX3$
15340 IF _ORIG.RPT_AUX4$=_CUR.RPT_AUX4$ OR RPT_AUX4$=_CUR.RPT_AUX4$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AUX4$=RPT_AUX4$ THEN _CHG2$=_CHG2$+SEP+MSG("AUX_PC_4")+" = "+_CUR.RPT_AUX4$,_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUX_PC_4")+" = "+_CUR.RPT_AUX4$
15350 IF _ORIG.RPT_LINES$=_CUR.RPT_LINES$ OR RPT_LINES$=_CUR.RPT_LINES$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_LINES$=RPT_LINES$ THEN _CHG2$=_CHG2$+SEP+MSG("LINE_P_P")+" = "+_CUR.RPT_LINES$,_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_P_P")+" = "+_CUR.RPT_LINES$
15360 IF _ORIG.RPT_FORMCODE$=_CUR.RPT_FORMCODE$ OR RPT_FORMCODE$=_CUR.RPT_FORMCODE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_FORMCODE$=RPT_FORMCODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SPEC_F_C")+" = "+_CUR.RPT_FORMCODE$,_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPEC_F_C")+" = "+_CUR.RPT_FORMCODE$
15370 IF _ORIG.NOT_USED$=_CUR.NOT_USED$ OR NOT_USED$=_CUR.NOT_USED$ THEN GOTO *NEXT ELSE IF _ORIG.NOT_USED$=NOT_USED$ THEN _CHG2$=_CHG2$+SEP+MSG("NOT_IN_USE")+" = "+_CUR.NOT_USED$,_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NOT_IN_USE")+" = "+_CUR.NOT_USED$
15380 IF _ORIG.UNUSED_1$=_CUR.UNUSED_1$ OR UNUSED_1$=_CUR.UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_1$=UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_1$,_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_1$
15390 IF _ORIG.UNUSED_2$=_CUR.UNUSED_2$ OR UNUSED_2$=_CUR.UNUSED_2$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_2$=UNUSED_2$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_2$,_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_2$
15400 IF _ORIG.UNUSED_3$=_CUR.UNUSED_3$ OR UNUSED_3$=_CUR.UNUSED_3$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_3$=UNUSED_3$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_3$,_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_3$
15410 IF _ORIG.UNUSED_4$=_CUR.UNUSED_4$ OR UNUSED_4$=_CUR.UNUSED_4$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_4$=UNUSED_4$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_4$,_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_4$
15420 IF _ORIG.UNUSED_5$=_CUR.UNUSED_5$ OR UNUSED_5$=_CUR.UNUSED_5$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_5$=UNUSED_5$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_5$,_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_5$
15430 IF _ORIG.UNUSED_6$=_CUR.UNUSED_6$ OR UNUSED_6$=_CUR.UNUSED_6$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_6$=UNUSED_6$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_6$,_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_6$
15440 IF _ORIG.RPT_JOBCARD$=_CUR.RPT_JOBCARD$ OR RPT_JOBCARD$=_CUR.RPT_JOBCARD$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_JOBCARD$=RPT_JOBCARD$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_C_D")+" = "+_CUR.RPT_JOBCARD$,_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_C_D")+" = "+_CUR.RPT_JOBCARD$
15450 IF _ORIG.RPT_JOBCARD_FLG$=_CUR.RPT_JOBCARD_FLG$ OR RPT_JOBCARD_FLG$=_CUR.RPT_JOBCARD_FLG$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_JOBCARD_FLG$=RPT_JOBCARD_FLG$ THEN _CHG2$=_CHG2$+SEP+MSG("ALLO_C_M")+" = "+_CUR.RPT_JOBCARD_FLG$,_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALLO_C_M")+" = "+_CUR.RPT_JOBCARD_FLG$
15460 IF _ORIG.RPT_NUM1=_CUR.RPT_NUM1 OR RPT_NUM1=_CUR.RPT_NUM1 THEN GOTO *NEXT ELSE IF _ORIG.RPT_NUM1=RPT_NUM1 THEN _CHG2$=_CHG2$+SEP+MSG("ZZS_N_1")+" = "+STR(_CUR.RPT_NUM1),_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ZZS_N_1")+" = "+STR(_CUR.RPT_NUM1)
15470 IF _ORIG.RPT_NUM2=_CUR.RPT_NUM2 OR RPT_NUM2=_CUR.RPT_NUM2 THEN GOTO *NEXT ELSE IF _ORIG.RPT_NUM2=RPT_NUM2 THEN _CHG2$=_CHG2$+SEP+MSG("ZZS_N_2")+" = "+STR(_CUR.RPT_NUM2),_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ZZS_N_2")+" = "+STR(_CUR.RPT_NUM2)
15480 IF _ORIG.BANK_CODE$=_CUR.BANK_CODE$ OR BANK_CODE$=_CUR.BANK_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.BANK_CODE$=BANK_CODE$ THEN _CHG2$=_CHG2$+SEP+"Bank Code = "+_CUR.BANK_CODE$,_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Bank Code = "+_CUR.BANK_CODE$
15490 IF _ORIG.PRT_DE_ITEM$=_CUR.PRT_DE_ITEM$ OR PRT_DE_ITEM$=_CUR.PRT_DE_ITEM$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_DE_ITEM$=PRT_DE_ITEM$ THEN _CHG2$=_CHG2$+SEP+"Print Datailing of Paid Item = "+_CUR.PRT_DE_ITEM$,_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Datailing of Paid Item = "+_CUR.PRT_DE_ITEM$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN PRG_NAME$=_CUR.PRG_NAME$
16030 IF _CHG_VAR$(2,1)="Y" THEN RPT_SELEC$=_CUR.RPT_SELEC$
16040 IF _CHG_VAR$(3,1)="Y" THEN RPT_DESC$=_CUR.RPT_DESC$
16050 IF _CHG_VAR$(4,1)="Y" THEN RPT_OPT$=_CUR.RPT_OPT$
16060 IF _CHG_VAR$(5,1)="Y" THEN RPT_SEQ$=_CUR.RPT_SEQ$
16070 IF _CHG_VAR$(6,1)="Y" THEN RPT_SHIPTO$=_CUR.RPT_SHIPTO$
16080 IF _CHG_VAR$(7,1)="Y" THEN RPT_AGEINV$=_CUR.RPT_AGEINV$
16090 IF _CHG_VAR$(8,1)="Y" THEN RPT_REPTYPE$=_CUR.RPT_REPTYPE$
16100 IF _CHG_VAR$(9,1)="Y" THEN RPT_ZEROBAL$=_CUR.RPT_ZEROBAL$
16110 IF _CHG_VAR$(10,1)="Y" THEN RPT_POSTAGE$=_CUR.RPT_POSTAGE$
16120 IF _CHG_VAR$(11,1)="Y" THEN RPT_NAMEADD$=_CUR.RPT_NAMEADD$
16130 IF _CHG_VAR$(12,1)="Y" THEN RPT_INVRPT$=_CUR.RPT_INVRPT$
16140 IF _CHG_VAR$(13,1)="Y" THEN RPT_FISYR$=_CUR.RPT_FISYR$
16150 IF _CHG_VAR$(14,1)="Y" THEN RPT_PER$=_CUR.RPT_PER$
16160 IF _CHG_VAR$(15,1)="Y" THEN RPT_CCINV$=_CUR.RPT_CCINV$
16170 IF _CHG_VAR$(16,1)="Y" THEN RPT_AGEDATE$=_CUR.RPT_AGEDATE$
16180 IF _CHG_VAR$(17,1)="Y" THEN RPT_PTD$=_CUR.RPT_PTD$
16190 IF _CHG_VAR$(18,1)="Y" THEN RPT_RECAP$=_CUR.RPT_RECAP$
16200 IF _CHG_VAR$(19,1)="Y" THEN DATE_FLD1$=_CUR.DATE_FLD1$
16210 IF _CHG_VAR$(20,1)="Y" THEN DATE_FLD2$=_CUR.DATE_FLD2$
16220 IF _CHG_VAR$(21,1)="Y" THEN DATE_FLD3$=_CUR.DATE_FLD3$
16230 IF _CHG_VAR$(22,1)="Y" THEN DATE_FLD4$=_CUR.DATE_FLD4$
16240 IF _CHG_VAR$(23,1)="Y" THEN RPT_CMT1$=_CUR.RPT_CMT1$
16250 IF _CHG_VAR$(24,1)="Y" THEN RPT_CMT2$=_CUR.RPT_CMT2$
16260 IF _CHG_VAR$(25,1)="Y" THEN PRT_MODE$=_CUR.PRT_MODE$
16270 IF _CHG_VAR$(26,1)="Y" THEN RPT_OUTDEV$=_CUR.RPT_OUTDEV$
16280 IF _CHG_VAR$(27,1)="Y" THEN RPT_VERT$=_CUR.RPT_VERT$
16290 IF _CHG_VAR$(28,1)="Y" THEN RPT_HORIZ$=_CUR.RPT_HORIZ$
16300 IF _CHG_VAR$(29,1)="Y" THEN RPT_AUX1$=_CUR.RPT_AUX1$
16310 IF _CHG_VAR$(30,1)="Y" THEN RPT_AUX2$=_CUR.RPT_AUX2$
16320 IF _CHG_VAR$(31,1)="Y" THEN RPT_AUX3$=_CUR.RPT_AUX3$
16330 IF _CHG_VAR$(32,1)="Y" THEN RPT_AUX4$=_CUR.RPT_AUX4$
16340 IF _CHG_VAR$(33,1)="Y" THEN RPT_LINES$=_CUR.RPT_LINES$
16350 IF _CHG_VAR$(34,1)="Y" THEN RPT_FORMCODE$=_CUR.RPT_FORMCODE$
16360 IF _CHG_VAR$(35,1)="Y" THEN NOT_USED$=_CUR.NOT_USED$
16370 IF _CHG_VAR$(36,1)="Y" THEN UNUSED_1$=_CUR.UNUSED_1$
16380 IF _CHG_VAR$(37,1)="Y" THEN UNUSED_2$=_CUR.UNUSED_2$
16390 IF _CHG_VAR$(38,1)="Y" THEN UNUSED_3$=_CUR.UNUSED_3$
16400 IF _CHG_VAR$(39,1)="Y" THEN UNUSED_4$=_CUR.UNUSED_4$
16410 IF _CHG_VAR$(40,1)="Y" THEN UNUSED_5$=_CUR.UNUSED_5$
16420 IF _CHG_VAR$(41,1)="Y" THEN UNUSED_6$=_CUR.UNUSED_6$
16430 IF _CHG_VAR$(42,1)="Y" THEN RPT_JOBCARD$=_CUR.RPT_JOBCARD$
16440 IF _CHG_VAR$(43,1)="Y" THEN RPT_JOBCARD_FLG$=_CUR.RPT_JOBCARD_FLG$
16450 IF _CHG_VAR$(44,1)="Y" THEN RPT_NUM1=_CUR.RPT_NUM1
16460 IF _CHG_VAR$(45,1)="Y" THEN RPT_NUM2=_CUR.RPT_NUM2
16470 IF _CHG_VAR$(46,1)="Y" THEN BANK_CODE$=_CUR.BANK_CODE$
16480 IF _CHG_VAR$(47,1)="Y" THEN PRT_DE_ITEM$=_CUR.PRT_DE_ITEM$
16990 RETURN 
20000 VIEW_REPORT:
20005 PRINT_REPORT:
20010 ! View Report Routine.
20020 IOLIST A$
20030 IOLIST R0$,W$
20040 ZZPARM=HFN; OPEN (ZZPARM)"ZZPARM"; READ (ZZPARM,KEY=FID(0)+"      ")IOL=20062
20050 ZZP=HFN; OPEN (ZZP)"ZZP"
20060 ! 
20062 IOLIST X3$,M1$,X4$,D0$,X$,A9$
20070 IF CHANGE_FLG THEN GOSUB CHECK_CHANGES ELSE GOSUB ASSIGN_PRG
20080 A$(1,6)="IC2PKA"
20090 IF ID$="RPT_VEIW" THEN R0$(2,6)="P_    "
20260 K$=X3$(1,8),T1$="IC7   ",%GUI=1
20267 %B_WINDATE_FMT$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD",JJ$=DTE(0:"%Yl%Mz%Dz"); CALL "ZZWDTE;VALIDATE",JJ$,JJJ$,JJJJ$; X3$(21,6)=JJ$; X3$(15,6)=JJ$
20268 X3$(174,4)="",X3$(178,6)="",X3$(146,6)="IC2PKS"; DIM P0$(100); X3$(174,4)="",Q$="IC2PKS"; CALL "ZZAUDT",X3$,Q$+P0$(78),_ZZPARM,X9; X$="I/C-U",X3$(185,1)="A",X3$(188,5)="I/C-U",M1$="ICSI/C   "; WRITE (_ZZPARM,KEY=X3$(1,8))IOL=20062
20270 WRITE (ZZP,KEY=K$)X3$,X4$,T1$,R0$,W$,A$
20275 WIN_D$=FIN(0),WIN_CURR=DEC(WIN_D$(10,1))
20278 PRG_TO_CALL$="IC2PKA" ! SSP 228228
20280 IF RB_PRT$>"0" THEN CALL "ZZ2DRV",PRG_TO_CALL$ ELSE CALL PRG_TO_CALL$ ! SSP 228228
20281 ! ESCAPE ; IF %WIN_ID_GUI THEN PRINT (0)'DROP'(%WIN_ID_GUI)
20285 CMD_STR$="END"
20290 EXIT 
22000 ASSIGN_LIB:
22020 ! Output Option
22030 IF NUM(A$(71,1))=0 THEN A$(71,1)="1"
22120 PRT_MODE$=R0$(1,1),RPT_OUTDEV$=R0$(2,2)
22130 RPT_VERT$=R0$(9,1),RPT_HORIZ$=R0$(10,1)
22140 RPT_AUX1$=R0$(11,1),RPT_AUX2$=R0$(12,1)
22160 RPT_LINES$=R0$(15,2),RPT_FORMCODE$=R0$(17,1)
22170 RPT_JOBCARD$=MID(R0$,65,60),RPT_JOBCARD_FLG$=MID(R0$,125,1)
22180 RPT_AUX3$=R0$(13,1),RPT_AUX4$=R0$(14,1)
22500 ! Selection Options
22510 RPT_SELEC$=A$(7,12),RPT_DESC$=A$(19,40),RPT_OPT$=A$(59,12),RPT_SEQ$=A$(71,1)
22515 IF STP(RPT_OPT$)="" THEN RPT_OPT$=""
22535 IF STP(RPT_SELEC$)="" THEN RPT_SELEC$=""
22536 IF LEN(A$)<81 THEN A$=PAD(A$,81," ")
22537 FY$=A$(72,4),ACCTPD$=A$(76,2),RPT_AGEINV$=A$(79,1),RPT_REPTYPE$=A$(80,1),RPT_REPTYPE1$=A$(81,1)
22538 SWITCH RPT_SEQ$
22541 CASE "1"
22542 FOLDER_FLAG=FLDR.IC1.1.CTL
22544 ML_CUST_START$=STP(W$(1,10)); IF W$(21,10)<>"~~~~~~~~~~" THEN ML_CUST_END$=W$(21,10)
22550 ML_ITEM_START$=STP(W$(11,10)); IF W$(31,10)<>"~~~~~~~~~~" THEN ML_ITEM_END$=W$(31,10)
22553 ML_LOC_START$=STP(W$(41,4)); IF W$(45,4)<>"~~~~" THEN ML_LOC_END$=W$(45,4)
22554 BREAK
22559 CASE "2"
22560 FOLDER_FLAG=FLDR.IC1.3.CTL
22565 ML_PROD_START$=STP(W$(1,3)); IF W$(4,3)<>"~~~" THEN ML_PROD_END$=STP(W$(4,3))
22568 ML_CUST_START$=STP(W$(7,10)); IF W$(27,10)<>"~~~~~~~~~~" THEN ML_CUST_END$=STP(W$(27,10))
22571 ML_ITEM_START$=STP(W$(17,10)); IF W$(37,10)<>"~~~~~~~~~~" THEN ML_ITEM_END$=W$(37,10)
22574 BREAK
22577 CASE "3"
22578 FOLDER_FLAG=FLDR.IC1.4.CTL
22583 ML_LOC_START$=STP(W$(1,4)),ML_PROD_START$=STP(W$(9,3)),ML_CUST_START$=STP(W$(15,10)),ML_ITEM_START$=STP(W$(35,10))
22586 IF W$(5,4)<>"~~~~" THEN ML_LOC_END$=W$(5,4)
22589 IF W$(12,3)<>"~~~" THEN ML_PROD_END$=W$(12,3)
22592 IF W$(25,10)<>"~~~~~~~~~~" THEN ML_CUST_END$=W$(25,10)
22595 IF W$(45,10)<>"~~~~~~~~~~" THEN ML_ITEM_END$=W$(45,10)
22598 BREAK
22601 END SWITCH 
22610 REFRESH_FLG=1
22620 RETURN 
22630 ASSIGN_PRG:
22640 A$(1,6)=ARG_1$,A$(7,12)=RPT_SELEC$,A$(19,40)=RPT_DESC$,A$(59,12)=RPT_OPT$,A$(71,1)=RPT_SEQ$
22650 A$(59,12)=RPT_OPT$; A$(71,1)=RPT_SEQ$
22660 ! 
22670 R0$(1,1)=PRT_MODE$,R0$(2,6)=MID(RPT_OUTDEV$,1,2)+"    ",R0$(9,1)=RPT_VERT$,R0$(10,1)=RPT_HORIZ$
22690 R0$(11,1)=RPT_AUX1$,R0$(12,1)=RPT_AUX2$,R0$(13,1)=RPT_AUX3$,R0$(14,1)=RPT_AUX4$
22700 IF STP(ACCTPD$)="" THEN ACCTPD$=CUR_ACCTPD$
22710 R0$(15,2)=RPT_LINES$,R0$(17,1)=RPT_FORMCODE$,R0$(65,60)=RPT_JOBCARD$
22715 A$(72,4)=FY$,A$(76,2)=ACCTPD$,A$(79,1)=RPT_AGEINV$,A$(80,1)=RPT_REPTYPE$,A$(81,1)=RPT_REPTYPE1$
22720 R0$(125,1)=RPT_JOBCARD_FLG$; DIM W$(71,"~")
22721 SWITCH RPT_SEQ$
22722 CASE "1"
22723 DIM W$(49,"~")
22724 W$(1,10)=ML_CUST_START$; IF ML_CUST_END$<>"" THEN W$(21,10)=ML_CUST_END$
22725 W$(11,10)=ML_ITEM_START$; IF ML_ITEM_END$<>"" THEN W$(31,10)=ML_ITEM_END$
22726 W$(41,4)=ML_LOC_START$; IF ML_LOC_END$<>"" THEN W$(45,4)=ML_LOC_END$
22727 BREAK
22728 CASE "2"
22729 DIM W$(47,"~")
22730 W$(1,3)=ML_PROD_START$; IF ML_PROD_END$<>"" THEN W$(4,3)=ML_PROD_END$
22731 W$(7,10)=ML_CUST_START$; IF ML_CUST_END$<>"" THEN W$(27,10)=ML_CUST_END$
22732 W$(17,10)=ML_ITEM_START$; IF ML_ITEM_END$<>"" THEN W$(37,10)=ML_ITEM_END$
22733 BREAK
22734 CASE "3"
22735 DIM W$(55,"~")
22736 W$(1,4)=ML_LOC_START$,W$(9,3)=ML_PROD_START$,W$(15,10)=ML_CUST_START$,W$(35,10)=ML_ITEM_START$
22737 IF ML_LOC_END$<>"" THEN W$(5,4)=ML_LOC_END$
22738 IF ML_PROD_END$<>"" THEN W$(12,3)=ML_PROD_END$
22739 IF ML_CUST_END$<>"" THEN W$(25,10)=ML_CUST_END$
22740 IF ML_ITEM_END$<>"" THEN W$(45,10)=ML_ITEM_END$
22741 BREAK
22742 END SWITCH 
22760 RETURN 
56000 ! "228228-Ability to split a report into multiple PDFs based on sales 
60000 SELECT_SELECTION:
60010 _KEY$="IC2PKA"+RPT_SELEC$,_KEY$=PAD(_KEY$,18," ")
60020 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD1)A$,R0$,W$,RNG{ALL}
60030 GOTO NXT_OPTION
60500 NEW_RECORD1:
60510 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
60520 IF _YESNO$="NO" THEN GOSUB MAIN_POST_DISPLAY; EXIT 
60530 DIM A$(83),R0$(128),W$(128),RNG(4)
60540 A$(71,1)="1",A$(1,6)="IC2PKA",A$(7,LEN(RPT_SELEC$))=RPT_SELEC$
60550 WRITE (_FIL_NO,KEY=_KEY$)A$,R0$,W$,RNG{ALL}
60560 GOTO NXT_OPTION
