0010 ! ICGLCA - Inventory Lot Selection
0015 ! "NOTE: This program CALLS itself recursively in automatic mode
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 01/21/11 - 10.6375 - jdf - SSP# 243364
0037 REM "243364-Getting a program exception in Inventory Lot Detail         
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0042 ! 
0045 ! M$=mode, blank=entry, D=delete, I=inquiry, A,B=Auto distribute, a=called recursively from auto distribute, C=compute number of uncommitted cartons inthis warehouse, c=uncomitted cartons in all whses
0046 ! M$=d means delete is coming from I/C transactions IC2TB1
0047 ! L0 is line to start display on, L0=0 means no display or entry no matter what
0089 ! Q=QTY, C=COST EXT, F=FREIGHT EXT, S1$=Selling U/M, S1=Unit selling price, S2=Selling Qty/UM,S3$ contains various data - see 7000's, S3=std cost, S4=std cost qty/um
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,M$,L0,I$,Q,C,F,S1,S1$,S2,S3$,S3,S4
0091 ! 
0095 INIT:
0098 ! X3$=ARG_1$,X3$=ARG_2$,M$=ARG_3$,L0=NUM(ARG_4$),I$=ARG_5$,Q=NUM(ARG_6$),C=NUM(ARG_7$),F=NUM(ARG_8$)
0100 SETERR 9000; SETESC 9300
0110 X0$="IC2LCA",X1$="Inventory Lot Selection",K9$="",K9=0,M$="I"
0120 DIM Z0$(80,"-"),S0$(79),T[4]
0121 ! "T() 0=qty not on order, 1=qty on order, 2=temp, 3=cost ext on order, 4=frt on order
0130 Q4=Q
0135 C9=-1
0140 M0$="-###,###",M1$="###,###.00-",M3$="###,##0-",M4$="-#,###,##0 "; DIM M5$(9,"#")
0200 ! "
0201 ZZPARM=HFN; OPEN (ZZPARM)"ZZPARM"; READ (ZZPARM,KEY=FID(0)+"      ")X3$,*,X4$; CLOSE (ZZPARM)
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 ! "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0315 IOLIST A0$,A0[0],A0[1],A0[2],A0[3],A0[4],A0[5],A0[6],A0[7],A0[8],A0[9],A0[10],A0[11],A0[12]
0500 ! "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ICF...  02O AR1...  03O IC0...  04O FM0...  05O AP4...  13O ZZPARM  "
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0540 READ (Z[13],KEY=X3$(9,3)+"I/C")P0$
0541 OPTION$=MSG("MPB_LOTD"),OPTION=POS(P0$(53,1)="ABCD")
0542 FOR WW=1 TO OPTION; XX=POS("|"=OPTION$),TEXT$=OPTION$(1,XX-1),OPTION$=OPTION$(XX+1); NEXT WW
0543 BB$=LB_LINE.CTL'FMT$ ! ,XX=POS("["=BB$,-1),TT$=BB$(XX),BB$=BB$(1,XX-1),BB$=BB$+"["+TEXT$+"]L15.00 ",LB_LINE.CTL'FMT$=BB$
0550 IF L0>0 AND P0$(68,1)="Y" AND MOD(L0,2)=0 THEN L0=L0+1,ADJ_L0$="Y" ! WO95211
1000 ! "
1030 DIM A$(269),A[12],A0$(269),A0[12],A2$(269),A2[12],S$(50),S3$(50)
1039 ! "M(, 0=A(2), 1= A(3), 2= EXTENDED AMOUNT
1040 DIM Q[400],M[400,2],J0$(1600),J1$(1600) ! SSP 197922
1050 T=0,T5=0,S1=0,S2=0,S3=0,S4=0
1060 IF LEN(M$)>1 THEN M9$=M$(2),M$=M$(1,1)
1120 IF POS(M$="AB")>0 AND Q=0 THEN IF L0=0 THEN GOTO 9900 ELSE M$="N" ! "104466
1140 IF L0>0 AND POS(M$="DdABC")=0 THEN GOSUB 6000
1150 GOTO 1520
1500 ! "Setup for lines
1501 SELECT_REC:GOSUB DEL_LINES
1520 I$=""; IF I$<>"" THEN A1$=I$; GOTO 1521 ELSE I$=CUSTOMER$+ITEM_COD$+LOC_CODE$,A1$=MID(I$,1,24)
1525 IF M$="C" THEN GOSUB 6600; GOTO 9900
1530 IF POS(M$="Dd")>0 THEN GOSUB 6500; GOTO 9900
1534 ! "For Auto Distribute, clear old committed lots and recommit.
1535 IF POS(M$="AB")<>0 THEN GOSUB 6500
1570 GOSUB 4200
1900 ! 
1920 GOSUB 4100
1940 GOSUB 7400; GOSUB 7500
2000 ! 
2005 IF COUNTER>LEN(SEQ_KEY$) THEN GOTO 5000 ELSE K$=MID(A1$,1,24)+MID(SEQ_KEY$,COUNTER,8),COUNTER=COUNTER+8
2010 READ (Z[1],KEY=K$,DOM=*NEXT)IOL=0310
2020 IF A$(1,LEN(A1$))<>A1$ THEN GOTO 5000
2025 IF M$="I" THEN GOTO 2040
2030 IF POS(" "<>A$(110,11))>0 AND A$(110,11)<>I$(25,11) THEN GOTO 2000
2035 IF POS(" "<>A$(110,11))=0 AND POS(" "<>A$(221,11))>0 THEN GOTO 2000
2040 IF P0$(68,1)<>"Y" THEN IF POS(M$="AB")=0 THEN IF L>9999 THEN GOSUB 4000; READ (Z[1],KEY=K$)IOL=0310
2042 IF P0$(68,1)="Y" THEN IF POS(M$="AB")=0 THEN IF L>9999 THEN GOSUB 4000; READ (Z[1],KEY=K$)IOL=0310
2050 N=N+1,N0=N0+1,N$=N$+K$; IF POS(" "<>A$(221,11))>0 THEN N1$=N1$+"a" ELSE N1$=N1$+" "
2120 IF POS(M$="AB")<>0 THEN GOSUB 4500; GOTO 2000 ELSE GOSUB 7700
2145 L=L+1; IF P0$(53,1)="A" THEN ML_PO$=A$(41,9) ELSE IF P0$(53,1)="B" THEN ML_PO$=A$(100,10) ELSE IF P0$(53,1)="D" THEN ML_PO$=A$(133,11) ELSE ML_PO$=FNS$(A$(56,12))
2146 ML_UM1$=A$(125,4); IF A$(155,1)="Y" THEN ML_LN$=ML_LN$+"*",BL$='BLUE' ELSE BL$=""
2147 GOSUB CHECK_TYPE; LIST_BOX LOAD LB_LINE.CTL,N,BL$+ML_LN$+SEP+BL$+ML_ORDER$+SEP+BL$+ML_LINES$+SEP+BL$+ML_QTY$+SEP+BL$+ML_UM$+SEP+BL$+ML_OF$+SEP+BL$+ML_UM1$+SEP+BL$+ML_OF1$+SEP+BL$+ML_EXT$+SEP+BL$+STP(A$(100,10))+SEP+BL$+FN%ZZDISP$(A$(41,9),"P/O")+SEP+BL$+STP(A$(56,12))+SEP+BL$+STP(A$(133,11))+SEP+BL$+STP(A$(82,9))+SEP+BL$+STP(A$(91,9))+SEP+BL$+ML_DESC$+SEP
2148 ! LIST_BOX LOAD LB_LINE.CTL,N,ML_LN$+SEP+ML_ORDER$+SEP+ML_LINES$+SEP+ML_DESC$+SEP+ML_QTY$+SEP+ML_UM$+SEP+ML_OF$+SEP+ML_UM1$+SEP+ML_OF1$+SEP+ML_EXT$+SEP+ML_PO$+SEP
2195 ML_ORDER$=" ",ML_LINES$=" "
2200 GOTO 2000
3050 ! "Print total
3055 IF L0=0 OR POS(M$="AB")<>0 THEN RETURN 
3060 IF M$="I" THEN PRINT @(0,21),'CL',"Lot units committed:",T[1]:M4$,@(49,21),"Lot units on-hand:",T[0]:M4$, ELSE PRINT @(0,21),'CL',"Lot units this order:",T[1]:M4$,@(49,21),"Lot units available:",T[0]:M4$,; IF T7<>0 THEN PRINT @(10,20),"Lots temporarily unavailable due to adjustments in process:",T7:M4$,
3070 IF FLAG1$="" AND COUNTER<=LEN(SEQ_KEY$)+1 THEN PRINT @(37,21),"<MORE>",
3090 FLAG1$=""
3095 RETURN 
3300 ! "Display line
3320 CALL "IC2LAB",X3$,X4$,"1",L0,A$,A{ALL}
3330 GOTO 1000
4000 ! "End of Page Routine"
4002 IF EOD$="Y" THEN GOTO 5010
4005 GOSUB 3050
4008 IF M$="I" THEN PROMPT_CODE$="X1IC2ISB" ELSE PROMPT_CODE$="X0IC2ISB"
4010 CALL "ZZPROM",PROMPT_CODE$,X3$,Z,"","","",X0
4020 ON Z GOTO 4021,4021,1000,5090,5100,8000
4025 N=0,N$="",N=0,N0=0,L=L0+1,K0$="",N1$=""
4030 PRINT @(0,L),'CE','SF',
4040 DIM Q[400],M[400,2],J0$(1600),J1$(1600) ! SSP 197922
4045 RETURN 
4100 ! " FIX PAGE FOR INPUT "
4110 K0$=""
4120 L=L0+1
4121 N=0,N$="",N0=0,N1$=""
4130 ! IF L0>0 THEN PRINT @(0,L),'CE','SF'
4190 RETURN 
4200 ! "GET TOTAL AVAILABLE
4205 DIM T[4]; T7=0,F8$=""
4210 READ (Z[1],KEY=A1$,DOM=4211)
4220 READ (Z[1],END=4280)IOL=0310
4230 IF A$(1,LEN(A1$))<>A1$ THEN GOTO 4280
4235 IF A$(125,4)="    " THEN T[2]=A[4]*A[3] ELSE T[2]=A[4]*A[2]*A[3]
4240 IF A$(221,2)="TR" THEN IF A$(125,4)="    " THEN T7=T7+A[4]*A[3] ELSE T7=T7+A[4]*A[2]*A[3]
4245 IF POS(" "<>A$(110,11))<>0 THEN F8$="*"
4250 IF M$="I" THEN T[0]=T[0]+T[2]; IF POS(" "<>A$(110,11))>0 THEN T[1]=T[1]+T[2]; GOTO 4220 ELSE GOTO 4220
4255 IF POS(" "<>A$(110,11))>0 AND A$(110,11)<>I$(25,11) THEN GOTO 4220
4260 T[0]=T[0]+T[2]; IF A$(110,11)=I$(25,11) THEN T[1]=T[1]+T[2],T[3]=T[3]+A[0],T[4]=T[4]+A[1]
4270 GOTO 4220
4280 RETURN 
4500 ! "Auto distribute logic
4501 ! "If Q4=0 we're done, else if line is <= Q4, commit the whole line
4502 ! "else if split makes sense, split the line, else goto entry mode.
4503 ! "committing a line done thru 8400's logic. We will set Q(), N$, and J0$ to look like this is line 1 (index 0) and we have entered the right amount, then we will gosub 8400.
4504 ! "Assumes old lots committed for this order/line have been deleted, see 1535; therefore any adjustments will not be on uncommitted list
4505 IF A$(125,4)="    " THEN L5=A[4]*A[3] ELSE L5=A[4]*A[2]*A[3]
4506 J1$="    "
4508 IF L5<=0 THEN GOTO 4545
4509 ! "Set Q5 to amount to get from line,Q6 = AMOUNT TO SUBTRACT FROM Q4
4510 IF L5<=Q4 THEN GOSUB 4550 ELSE GOSUB 4600
4512 IF Q5=-1 THEN GOTO 4545
4515 X0=1,N$=K$,J0$=J1$,Q[0]=Q5,N1$=" "
4520 GOSUB 8400
4530 Q4=Q4-Q6
4535 IF Q4=0 THEN EXITTO 9900
4539 ! "Reposition for next one
4540 READ (Z[1],KEY=K$)
4546 RETURN 
4550 ! "Check out line that will be completly used to make sure the units make sense
4555 ! "Skip this check if in B auto mode
4556 IF M$="B" THEN Q5=A[4],Q6=L5,J1$=A$(121,4); GOTO 4595
4560 IF A[3]<>0 THEN IF MOD(Q4,A[3])=0 THEN Q5=A[4],Q6=L5; IF A$(125,4)="    " THEN J1$=A$(121,4); GOTO 4595 ELSE J1$=A$(125,4); GOTO 4595
4575 ! "Skip this line, perhaps we can find later to match
4580 Q5=-1
4595 RETURN 
4600 ! "If a reasonable split can be made of the line, set Q5=Q4, otherwise skip this line and keep looking
4601 ! "Reasonable split means the amount requested is evenly divisable by one of the packs
4602 IF I$(25,2)="KT" THEN Q5=Q4,Q6=Q4,J1$="    "; RETURN ! "If a kit then split it no matter what"
4605 IF M$="B" THEN GOTO 4800
4610 IF A[3]<>0 THEN IF MOD(Q4,A[3])=0 THEN Q5=Q4/A[3],Q6=Q4; IF A$(125,4)="    " THEN J1$=A$(121,4); GOTO 4645 ELSE J1$=A$(125,4); GOTO 4645
4615 ! "Skip this line, perhaps we can find later to match
4620 Q5=-1
4645 RETURN 
4700 ! 'HANDLE CALL TO ENTRY
4710 CALL "IC2LCA",X3$,X4$,"a",L0,I$,Q4,C,F,S1,S1$,S2,S3$,S3,S4
4720 T[1]=Q4,T[3]=C,T[4]=F
4730 GOTO 9900
4800 ! "B type auto split of line. We want to split the lot record without splitting the cartons.
4805 IF A$(125,4)="    " THEN D5=A[3] ELSE D5=A[2]*A[3]
4810 IF D5<=0 THEN Q5=-1; GOTO 4845
4815 Q5=Q4/D5
4820 IF FPT(Q5)<>0 THEN Q5=INT(Q5)+1
4822 IF Q5>A[4] THEN Q5=A[4]
4825 Q6=Q4,J1$=A$(121,4)
4845 RETURN 
5000 ! "End of display"
5001 NEXT_ID=LB_LINE.CTL
5002 IF POS(M$="AB")<>0 THEN IF Q4=0 OR L0=0 THEN GOTO 5090 ELSE GOTO 4700
5003 IF N=0 THEN GOTO 5050
5004 FLAG1$="Y"; GOSUB 3050; IF M$="I" THEN GOTO 5150
5005 IF F1$="*" THEN F1$=""; RETURN ELSE EOD$="Y"; GOTO 8000
5006 ML_LOT_UNIT$=STR(T(1)),ML_LOT_HAND$=STR(T(0))
5010 CALL "ZZPROM","X0IC2ISB",X3$,Z,"","","V",X0
5020 ON Z GOTO 5090,5090,1000,5090,5100,8000
5050 IF T7<>0 THEN ! PRINT @(10,20),"Lots temporarily unavailable due to adjustments in process:",T7:M4$,
5060 IF F8$="*" THEN MSGBOX MSG("ICGLCA_M02"),"","" ELSE MSGBOX MSG("ICGLCA_M01"),"",""; T[1]=-1,T[3]=0,T[4]=0
5061 RETURN 
5090 IF Q1$<>"" THEN GOTO 9700 ELSE GOTO 9900
5100 ! "Show the detail of an line number
5104 DIM A9$(4),X$(0)
5105 PRINT @(24,22),'CE',"Line number:",; CALL "ZZENTR","SZUX",A{ALL},A9$,X4$,X3$,38,22,1,2,C0,"",X$,A1$,"IC2MAI12","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 5105,5106
5106 PRINT @(24,22),'CL',; IF C0<0 THEN GOTO 5130
5107 N1=NUM(A9$,ERR=5105); IF N1<=0 OR N1>N0 THEN GOTO 5105
5112 GOTO 5200
5130 GOTO 1000
5150 ! "Inquiry"
5155 ML_LOT_UNIT$=STR(T(1)),ML_LOT_HAND$=STR(T(0)),REFRESH_FLG=1; RETURN 
5160 CALL "ZZPROM","X1IC2ISB",X3$,Z,"","","V",X0
5170 ON Z GOTO 5090,5090,1000,5090,5100
5200 ! "Take N0 & show info
5210 N0$=N$((N1-1)*32+1,32)+"**"
5220 FIND (Z[1],KEY=N0$(1,32))IOL=0310
5230 L=L0+1,N=N1; PRINT @(0,L),'CE',; GOSUB 7700
5240 PRINT @(0,L+1),Z0$,@(1,L+2),"Receipt date:",@(40),"Vendor/Plant:",@(2,L+3),"Receiving #:",@(42),"P/O number:",@(0,L+4),"Item Rev date:",@(44),"P/O date:",@(3,L+5),"Bin number:",@(42),"Total cost:",@(39,L+6),"Ending number:",
5245 PRINT @(0,L+6),"Customer P/O#:",@(0,L+7),"Selling Price:",
5250 PRINT @(15,L+2),FND$(A$(25,6)),@(15,L+3),A$(33,8),@(15,L+4),A$(215,6),@(15,L+5),A$(100,10),@(54,L+6),A$(91,9)
5255 CALL "ZZDISP","A",A$(68,10),"A/P",X3$,"","",54,L+2,X4$
5256 PRINT @(66),A$(78,4),
5260 CALL "ZZDISP","A",A$(41,9),"P/O",X3$,"","",54,L+3,X4$
5270 PRINT @(54,L+4),FND$(A$(50,6)),@(54,L+5),A[0]:M1$,
5280 PRINT @(15,L+6),A$(133,15),
5290 IF A[5]>0 THEN X$=FNR$(FNS$(STR(A[5]:M1$)))+" per "+FNS$(A$(129,4))+"/"+FNS$(STR(A[6])); PRINT @(15,L+7),X$,
5300 IF P0$(65,1)="Y" THEN PRINT @(42,L+7),"Lot Number:",@(54),A$(234,8),
5320 IF P0$(64,1)<>"Y" THEN GOTO 5800 ELSE PRINT @(0,L+8),"Standard Cost:",
5330 IF A[7]<>0 THEN X$=FNR$(FNS$(STR(A[7]:M1$)))+" per "+FNS$(A$(256,4))+"/"+FNS$(STR(A[8])); PRINT @(15,L+8),X$,
5340 PRINT @(43,L+8),"Prod Code:",@(54),A$(242,3),@(61),"Comm Code: ",@(72),A$(245,5),
5350 PRINT @(41,L+9),"Storage Exp:",@(54),FND$(A$(250,6)),
5800 INPUT @(5,23),"<RET> to Continue ",*,
5820 GOTO 1000
6000 ! "BACKGROUND
6010 IF ADJ_L0$="Y" THEN PRINT @(0,L0-1),'CL',
6070 ! PRINT @(0,L0),'CE',"Ln#",@(5),"Quantity",@(20),"Available Inventory (*=Broken Carton)",@(61),"Start#",
6075 ! IF P0$(53,1)="A" THEN PRINT @(68),"P/O Number", ELSE IF P0$(53,1)="B" THEN PRINT @(68),"Bin Loc.", ELSE IF P0$(53,1)="D" THEN PRINT @(68),"Cust P/O", ELSE PRINT @(68),"Job Number", ************************* O J O ****************
6080 ! IF M$="I" THEN PRINT @(4),"Order#  Line#",
6190 RETURN 
6200 ! "DISPLAY DATA
6390 RETURN 
6400 ! "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 ! "DISPLAY KEYS
6490 RETURN 
6500 ! "DE-COMMIT LOT INVENTORY
6510 READ (Z[1],KEY=A1$,DOM=6511)
6520 READ (Z[1],END=6580)IOL=0310
6525 IF A$(1,LEN(A1$))<>A1$ THEN GOTO 6580
6528 IF M$="d" THEN IF A$(221,11)<>I$(25,11) THEN GOTO 6520 ELSE GOTO 6531
6530 IF A$(110,11)<>I$(25,11) THEN GOTO 6520
6540 EXTRACT (Z[1],KEY=A$(1,32))IOL=0310
6550 IF M$="d" THEN A$(221,11)="" ELSE A$(110,11)=""
6555 IF M$="d" THEN IF A$(110,2)="TR" THEN A$(110,11)=""
6560 WRITE (Z[1])IOL=0310
6570 GOTO 6520
6580 RETURN 
6600 ! "Add Non committed cartons - Mode C
6605 IF M9$="A" THEN A1$=A1$(1,20)
6606 IF LEN(M9$)>1 THEN IF M9$(1,1)="B" THEN BIN_LOC$=M9$(2),S1=0 ! "If getting uncommitted by bin location and warehouse then save off BIN_LOC$ and clear S1 which will return the number at that bin location
6609 PREV_KEY$=""; PREV_KEY$=KEP(Z[1],END=6610) ! "Save prev key so we can reset file pointer at 6680
6610 READ (Z[1],KEY=A1$,DOM=6611)
6620 READ (Z[1],END=6680)IOL=0310
6630 IF A$(1,LEN(A1$))<>A1$ THEN GOTO 6680
6640 IF POS(" "<>A$(110,11))=0 THEN T[1]=T[1]+A[4]; IF BIN_LOC$<>"" THEN IF A$(100,LEN(BIN_LOC$))=BIN_LOC$ THEN S1=S1+A[4]
6660 GOTO 6620
6680 READ (Z[1],KEY=PREV_KEY$,DOM=6681); READ (Z[1],END=6681) ! "Restore file pointer
6690 RETURN 
7000 ! "Revised 10/2/91 - The sale price will be set from the first lot that has one.  Then if any subsequent lot with a nonzero price has a different one then the operator will be alerted.
7005 READ (Z[1],KEY=A1$,DOM=7006)
7006 READ (Z[1],END=7045)IOL=0310; IF A$(1,LEN(A1$))<>A1$ THEN GOTO 7045 ELSE IF A$(110,11)<>I$(25,11) THEN GOTO 7006
7010 IF FNS$(S3$(1,8))="" THEN S3$(1,8)=A$(234,8) ! "Lot Number
7011 IF FNS$(S3$(9,3))="" THEN S3$(9,3)=A$(242,3) ! "Product Code
7012 IF FNS$(S3$(12,5))="" THEN S3$(12,5)=A$(245,5) ! "Comm Code
7013 IF FNS$(S3$(17,6))="" THEN S3$(17,6)=A$(250,6) ! "Storage Exp Date
7014 IF S3=0 AND A[7]>0 THEN S3=A[7],S3$(23,4)=A$(256,4),S4=A[8] ! "Standard Cost
7020 IF S1=A[5] AND S1$=A$(129,4) AND S2=A[6] THEN GOTO 7030 ELSE IF S1<>0 AND L0>0 THEN CALL "ZZPROM",".4",X3$,0,"Lots have mixed sell prices: "+STR(A[5]:M1$)+" and "+STR(S1:M1$)+" << will be used","","",0; GOTO 7030 ELSE IF S1<>0 AND L0=0 THEN GOTO 7030
7025 S1=A[5]; IF S1<=0 THEN S1=0 ELSE S1$=A$(129,4),S2=A[6]
7030 GOTO 7006
7045 RETURN 
7200 REM "Prorate storage and finance charges
7201 REM "Given A0 and A (IOL=315 and IOL=310), prorate buckets A0[11] and A0[12], based on current values of A[4] and A0[4]; to be called after finalizing A0[4] ! 
7205 PRO_SAVE_PRC=PRC; PRECISION 14 ! Up the precision, save old precision first
7210 IF NUL(A$(125,4)) THEN PRO_RATE=(A0[3]*A0[4])/(A[3]*A[4]) ELSE PRO_RATE=(A0[3]*A0[2]*A0[4])/(A[3]*A[2]*A[4]) ! SSP#235876
7215 A0[11]=A0[11]*PRO_RATE; A0[12]=A0[12]*PRO_RATE
7240 PRECISION PRO_SAVE_PRC ! Reset precision to saved value
7245 RETURN 
7249 ! 
7400 ! "Processing Sequence Setup - SEQ_KEY$ is Receipt Date + Seq No.
7410 DIM SEQ_KEY$(8,"z"),SEQ_SORT$(30,"z")
7420 COUNTER=1
7440 RETURN 
7500 ! "Build Processing Sequence
7510 READ (Z[1],KEY=A1$,DOM=7511)
7520 K$=KEY(Z[1],END=7545)
7525 READ (Z[1],KEY=K$)IOL=0310
7527 IF A$(1,LEN(A1$))<>A1$ THEN GOTO 7545
7530 IF M$="I" THEN GOTO 7540 ELSE IF POS(" "<>A$(110,11))>0 AND A$(110,11)<>I$(25,11) THEN GOTO 7520
7535 IF POS(" "<>A$(110,11))=0 AND POS(" "<>A$(221,11))>0 THEN GOTO 7520
7540 GOSUB 7550; GOTO 7520
7545 SEQ_KEY$=SEQ_KEY$(1,LEN(SEQ_KEY$)-8),SEQ_SORT$=SEQ_SORT$(1,LEN(SEQ_SORT$)-20); RETURN 
7550 ! "Sort the keys - 1) If Committed to this Order, 2) Numbering 3) Not used (08x) - RESULT: Committed then receipt date order UNLESS there is Numbering, then the sort will be lowest to highest number.   Use Seq# in case two lots committed to the same order and line.
7551 ! "1/16/97 Receipt date now prefixs numbering - for the most part this will solve the case when the numbers are re-set. ie we need to use the higher numbers before the newer lower ones.
7560 DIM Q$(30); Q$(1)=A$(110,11)+A$(25,6)+A$(82,9); IF POS(" "<>Q$(1,11))=0 THEN Q$(1,11)="zzzzzzzzzzz"
7570 I=POS(Q$<SEQ_SORT$,30); SEQ_SORT$=SEQ_SORT$(1,I-1)+Q$+SEQ_SORT$(I)
7575 I=8*((I-1)/30)+1
7580 SEQ_KEY$=SEQ_KEY$(1,I-1)+K$(25,8)+SEQ_KEY$(I)
7595 RETURN 
7700 ! "Print quantity explantion line
7705 Q$=FNR$(STR(A[4]:M4$)),ML_QTY$=FNR$(STR(A(4):M4$)),ML_UM$=A$(121,4),ML_OF$=FNR$(STR(A(3):M3$))
7710 IF A[4]=1 THEN Q$=Q$+FNC$(A$(121,4))+" of " ELSE Q$=Q$+FNC$(A$(121,4))+"s of "
7715 IF A$(125,4)="    " THEN Q$=Q$+FNR$(STR(A[3]:M3$)),ML_OF$=STR(A(3):M3$),ML_OF1$="" ELSE ML_OF$=STR(A(2):M3$),ML_OF1$=STR(A(3):M3$),Q$=Q$+FNR$(STR(A[2]:M3$))+FNC$(A$(125,4)); IF A[2]=1 THEN Q$=Q$+" of "+FNR$(STR(A[3]:M3$)) ELSE Q$=Q$+"s of "+FNR$(STR(A[3]:M3$))
7725 IF A$(125,4)="    " THEN Q=A[4]*A[3] ELSE Q=A[4]*A[2]*A[3]
7730 ! LET T=T+Q
7750 ! "Load J0$ and Q() as necessary
7754 Q1=N-1
7755 IF LEN(I$)>=35 THEN IF A$(110,11)=I$(25,11) THEN Q[Q1]=A[4]
7757 IF (Q1*4+1)>1600 THEN TMP_J0$=J0$(1); DIM J0$(Q1*4+5); J0$(1)=TMP_J0$; TMP_J1$=J1$(1); DIM J1$(Q1*4+5); J1$(1)=TMP_J1$ ! SSP243364 jdf
7760 Q0=Q1*4+1; J0$(Q0)=A$(121,4),J1$(Q0)=A$(125,4)
7762 IF Q1>400 THEN REDIM M[Q1,2]; REDIM Q[Q1] ! SSP243364 jdf
7765 M[Q1,0]=A[2],M[Q1,1]=A[3],M[Q1,2]=Q
7770 Q$=Q$+"= "+FNR$(STR(Q:M4$)); IF A$(155,1)="Y" THEN Q$=Q$+"*"
7771 ML_EXT$=FNR$(STR(Q:M4$))
7775 IF LEN(Q$)>40 THEN X$=Q$ ELSE DIM X$(40,"."); X$(1,LEN(Q$))=Q$
7780 ML_LN$=STR(N:"000") ! PRINT @(0,L),STR(N:"##)"),
7785 IF M$="I" THEN GOSUB 7800 ELSE PRINT @(3),N1$(N,1),Q[N-1]:M0$,@(13),J0$(Q0,4),
7790 ! PRINT @(20),X$,
7791 X$=A$(82,9); IF POS(" "<>X$)>0 THEN X$=FNR$(X$); ML_PO$=STR(FNR$(A$(82,9)):%PORDER_MASK$)
7792 IF P0$(53,1)="A" THEN ML_PO$=A$(41,9) ELSE IF P0$(53,1)="B" THEN ML_PO$=A$(100,10) ELSE IF P0$(53,1)="D" THEN ML_PO$=A$(133,11) ELSE ML_PO$=FNS$(A$(56,12))
7793 IF P0$(68,1)="Y" THEN GOSUB 7850 ! "WO95211
7795 RETURN 
7800 ! 
7810 IF POS(" "<>A$(110,11)+A$(221,11))=0 THEN RETURN 
7815 IF POS(" "<>A$(110,11))=0 THEN ML_ORDER$=" ",ML_LINES$=" "; GOTO 7830 ELSE ML_ORDER$=FN%ZZDISP$(A$(110,8),"O/P"),ML_LINES$=A$(118,3); IF A$(221,2)="PI" THEN ML_ORDER$="p"+ML_ORDER$ ELSE IF A$(221,2)="TR" THEN ML_ORDER$="a"+ML_ORDER$
7820 GOTO 7840
7830 ! IF A$(221,2)="PI" THEN PRINT @(4,L),"Physical Inv.",; GOTO 7840 ELSE IF A$(221,2)="TR" THEN PRINT @(4,L),"Adj in process", ELSE CALL "ZZDISP","A",A$(110,8),"O/P",X3$,"","",4,L,X4$
7840 RETURN 
7850 ! "If parm set display lot comment on second line, WO95211
7855 L=L+1
7860 ML_DESC$=A$(156,40)
7890 RETURN 
8000 ! "Enter quantity stuff
8010 X0=-1,C0=0,X1=0,C9=0,Z9=0
8020 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 4000
8035 L1=INT(X0/2)+L0+1; IF P0$(68,1)="Y" THEN L1=L1+INT(X0/2) ! "ssp97532 related to WO95211
8040 IF X0>(N-1)*2+1 THEN GOTO 4000 ELSE IF MOD(X0,2)=0 THEN GOTO 8100 ELSE GOTO 8150
8100 ! "Quantity
8105 Q1=INT(X0/2)
8107 Q3=Q[Q1]
8108 IF N1$(Q1+1,1)="a" THEN X$="This lot presently being adjusted - qty cannot be changed"
8110 CALL "ZZENTR","N&",Q{ALL},Q$,X4$,X3$,4,L1,Q1,610,C0,M0$,"{3"+X$,"","IC2LCA00","","",""
8111 Q[Q1]=Q[Q1]*SGN(Q[Q1]); PRINT @(4,L1),Q[Q1]:M0$,
8112 IF N1$(Q1+1,1)="a" THEN Q[1]=Q3; PRINT @(4,L1),Q[Q1]:M0$,; F0$=""; GOTO 8020
8115 IF Q3=Q[Q1] THEN F0$=""; GOTO 8140 ELSE F0$="*"
8119 ! "Check if total qty available
8120 GOSUB 8300; IF F9=1 THEN GOTO 8110
8125 IF ABS(C0)>1 THEN GOSUB 8400
8140 GOTO 8020
8150 ! "Packing
8154 Q2=INT(X0/2)*4+1
8155 IF N1$(INT(X0/2)+1,1)="a" THEN GOTO 8020
8156 J2$=J0$(Q2,4)
8159 IF Q[INT(X0/2)]=0 THEN GOTO 8165
8160 CALL "ZZENTR","SU",Q{ALL},J0$,X4$,X3$,13,L1,Q2,4,C0,"","{3"+X$,"","IC2LCA02","","",""
8165 IF J2$=J0$(Q2,4) AND F0$<>"*" THEN GOTO 8190
8166 F0$=""
8168 IF J0$(Q2,4)<>"    " AND J0$(Q2,4)<>J2$ AND J0$(Q2,4)<>J1$(Q2,4) THEN GOTO 8160
8170 F5$="*"; GOSUB 8300; F5$=""
8185 GOSUB 8400
8190 GOTO 8020
8300 ! "Check to see if too many entered
8301 ! "F9=0 means ok, F9=1 means error
8305 I9=Q1,I9$=J0$(Q1*4+1,4); GOSUB 8850
8310 IF T9<=M[Q1,2] THEN F9=0; GOTO 8345
8313 ! "If too many switch to secondary unit automatically and try it
8314 ! "Save old answer in J9$ in case we need to restore
8315 J9$=J0$(Q1*4+1,4),J0$(Q1*4+1,4)=J1$(Q1*4+1,4)
8316 IF POS(" "<>J1$(Q1*4+1,4))=0 THEN GOTO 8331
8320 PRINT @(13,L1),J0$(Q1*4+1,4),
8325 I9=Q1,I9$=J0$(Q1*4+1,4); GOSUB 8850
8330 IF T9<=M[Q1,2] THEN F9=0; GOTO 8345
8333 F9=1; GOTO 8334
8334 ! "IF STILL TOO BIG MAKE IT BLANK
8335 IF F5$="*" THEN F5$=""; GOTO 8345
8336 IF Q[Q1]>M[Q1,2] THEN Z=1; CALL "ZZPROM",".4",X3$,0,"Quantity entered is more than this entire lot! - Try again","","",0 ELSE CALL "ZZPROM",".Y",X3$,Z,"Are you sure you wish to split a case?","","",0
8337 IF Z=0 THEN F9=0 ELSE F9=1,J0$(Q1*4+1,4)=J9$; GOTO 8345
8339 J0$(Q1*4+1,4)=""
8340 PRINT @(13,L1),J0$(Q1*4+1,4),
8345 RETURN 
8400 ! "Split a line
8401 ! "F0$ & F1$ are used as flags for things
8405 Q1=INT(X0/2)
8410 F0$=""
8415 K2$=N$(Q1*32+1,32)
8420 READ (Z[1],KEY=K2$,DOM=8490)IOL=0310
8421 ! "If new amount is zero, then uncommitt.
8425 ! OVE (Z[1],KEY=K2$)
8430 ! "# TO COMMIT
8432 IF J0$(Q1*4+1,4)="    " THEN F3$="*" ELSE F3$=""
8435 IF F3$="*" THEN P8=Q[Q1] ELSE IF J0$(Q1*4+1,4)<>A$(125,4) AND A$(125,4)<>"    " THEN P8=Q[Q1]*A[2]*A[3] ELSE P8=Q[Q1]*A[3]
8437 T[2]=P8; GOSUB 8800
8439 ! "# TO NOT COMMIT
8440 IF A$(125,4)<>"    " THEN P9=A[4]*A[2]*A[3] ELSE P9=A[4]*A[3]
8442 IF POS(" "<>A$(111,10))>0 THEN T[2]=-P9; GOSUB 8800; T[3]=T[3]-A[0],T[4]=T[4]-A[1]
8445 P7=P9,P9=P9-P8
8450 J7=A[0]*P8/P7,J8=A[1]*P8/P7,J9=A[5] ! J9=A(5)*P8/P7
8464 ! "N9 is ending number for this lot
8465 N9=-1; IF POS(" "<>A$(82,9))>0 THEN N9=NUM(A$(82,9),ERR=8466),N9=N9+P8+P9
8470 P0=A[0]-J7,P1=A[1]-J8,P2=A[5],P$="",P3=P9; GOSUB 8700 ! P2=A(5)-J9
8475 P0=J7,P1=J8,P2=J9,P$=I$(25,11),P3=P8; GOSUB 8700
8479 ! "Adjust cost and freight
8480 T[3]=T[3]+J7,T[4]=T[4]+J8
8490 IF POS(M$="AB")=0 THEN IF P8<>0 AND P9<>0 THEN F1$="*",T=0; GOSUB 4040; GOSUB 1900
8494 IF POS(M$="AB")=0 THEN FLAG1$="Y"; GOSUB 3050
8495 RETURN 
8550 ! "Copy line over and prorate cost and freight
8553 Q1=INT(X0/2)
8555 A0$=A$; FOR I=0 TO 12; A0[I]=A[I]; NEXT I
8560 A[4]=Q[Q1]
8565 IF A0[4]=0 THEN A[0]=0,A[1]=0 ELSE A[0]=A0[0]*Q[Q1]/A0[4],A[1]=A0[1]*Q[Q1]/A0[4]
8566 IF A0[4]=0 THEN A[11]=0,A[12]=0 ELSE A[11]=A0[11]*Q[Q1]/A0[4],A[12]=A0[12]*Q[Q1]/A0[4]; REM "200525-Prorate storage and finance charges
8568 A0[4]=A0[4]-A[4]
8570 A0[0]=A0[0]-A[0],A0[1]=A0[1]-A[0]
8572 A0[11]=A0[11]-A[11],A0[12]=A0[12]-A[12]; REM "200525-Prorate storage and finance charges
8575 A$(110,11)=I$(25,11),A0$(110,11)=""
8595 RETURN 
8600 ! "Write out A0$
8602 IF N9>-1 THEN N9=N9-P5,A0$(82,9)=STR(N9:M5$)
8605 IF A0[3]<>A[3] OR A0[2]<>A[2] THEN A0$(155,1)="Y"
8610 IF A0$(110,2)="TR" THEN A0$(221,11)=I$(25,11)
8612 IF A0[4]<0 THEN GOTO 8645
8615 WRITE (Z[1],KEY=A0$(1,32),DOM=8616)IOL=0315; GOTO 8625
8620 KEY$=A0$(1,32); CALL "IC2LCC",X3$,X4$,Z[1],31,2,LAST_ONE$,KEY$; A0$(1,32)=KEY$; GOTO 8615
8625 IF N9>-1 THEN A$(91,9)=STR(N9-1:M5$,ERR=*NEXT)
8645 RETURN 
8700 ! "Given A$ andA() and # to post P3,in eaches,make 0 to 3 lines to post them,P$='' OR ORDER #, LINE #,P0=total cost, P1=total freight, P2=total sales price
8704 P4=P3
8705 PRECISION 4; A2=MOD(P3,A[3]),P3=INT(P3/A[3]); PRECISION 2 ! "Precision added because of problem with rounding
8706 IF A[2]=0 THEN A3=0 ELSE A3=MOD(P3,A[2]),P3=INT(P3/A[2])
8707 T0=0,T1=0,T2=0
8709 ! "Do primary units
8710 IF P3=0 THEN GOTO 8740
8712 IF P4=A2 THEN GOTO 8770
8715 A0$=A$; FOR I=0 TO 12; A0[I]=A[I]; NEXT I
8717 IF A$(125,4)="    " THEN P5=P3*A[3] ELSE P5=P3*A[2]*A[3]
8720 IF A2=0 AND A3=0 THEN A0[0]=P0,A0[1]=P1,A0[5]=A[5] ELSE A0[0]=P0*P5/P4,A0[1]=P1*P5/P4,A0[5]=A[5],T0=A0[0],T1=A0[1]
8725 A0[4]=P3,A0$(110,11)=P$
8727 GOSUB 7200 ! 200525
8730 GOSUB 8600; A$(31,2)=A0$(31,2)
8739 ! "Do primary with less than full secondary
8740 IF A3=0 THEN GOTO 8770
8745 A0$=A$; FOR I=0 TO 12; A0[I]=A[I]; NEXT I
8747 P5=A3*A[3]
8750 IF A2=0 THEN A0[0]=P0-T0,A0[1]=P1-T1,A0[5]=A[5] ELSE A0[0]=P0*P5/P4,A0[1]=P1*P5/P4,A0[5]=A[5],T0=T0+A0[0],T1=T1+A0[1]
8755 A0[4]=1,A0$(110,11)=P$
8756 A0[2]=A3
8758 GOSUB 7200 ! 200525
8760 GOSUB 8600; A$(31,2)=A0$(31,2)
8769 ! "Do primary with leftovers
8770 IF A2=0 THEN GOTO 8795
8775 A0$=A$; FOR I=0 TO 12; A0[I]=A[I]; NEXT I
8780 A0[0]=P0-T0,A0[1]=P1-T1,A0[5]=A[5]
8785 A0[4]=1,A0$(110,11)=P$
8786 A0$(125,4)="",A0[2]=0,A0[3]=A2
8788 P5=A2
8789 GOSUB 7200 ! 200525
8790 GOSUB 8600
8795 RETURN 
8800 ! "Print total of picked in eaches
8810 T[1]=T[1]+T[2]
8840 RETURN 
8850 ! "Given index I9 and Unit, in I9$, calculate total amt T9 in eaches
8853 IF I9$="    " THEN T9=Q[I9]; GOTO 8895
8855 IF I9$=J1$(I9*4+1,4) THEN GOTO 8860 ELSE GOTO 8875
8859 ! " in Secondary Unit
8865 T9=Q[I9]*M[I9,1]
8870 GOTO 8895
8875 ! "in Primary Unit
8880 IF J1$(I9*4+1,4)="    " THEN T9=Q[I9]*M[I9,1] ELSE T9=Q[I9]*M[I9,0]*M[I9,1]
8895 RETURN 
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8925 DEF FNS$(Z9$)=Z9$(1,POS("        "=Z9$+"        ")-1)
8930 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
8949 DEF FNC$(Z9$)=Z9$(1,POS(" "=Z9$+" ")-1)
9000 ! "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 ! 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 ! 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 ! " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 ! "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 ! "PROG FLOW
9710 IF U1$="" THEN ! OVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9730 RUN U1$(1,6)
9740 RETURN 
9750 ! "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 ! "EXIT PROGRAM
9900 ! "END PROGRAM
9901 END_PRO:
9902 IF POS(M$="ABN")<>0 OR M$="" THEN GOSUB 7000
9905 Y8=2
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 CLOS:CLOSE (_FS6,ERR=*NEXT),(_FS8,ERR=*NEXT),(_PO1,ERR=*NEXT)
9930 SETERR 9935; Q=T[1],C=T[3],F=T[4]; EXIT 
9935 IF %GUI THEN EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 SEL_LINES:
10001 ! 
10020 LIST_BOX READ LB_LINE.CTL,IDX,ERR=*RETURN
10030 LIST_BOX FIND LB_LINE.CTL,IDX,VAL$
10100 N0$=N$((IDX-1)*32+1,32)+"**",VAL$=SUB(VAL$,$1B4634$,"")
10105 ZZ$=STR(Z(1)),ZZZ$=STR(Z(5)),ZZZZ$=STR(Z(3))
10107 PROCESS "ICGMAZ.4.2.1","../ICG/IC.EN",N0$,ZZ$,VAL$,ZZZ$,BB$,ZZZZ$
10108 ! IF POS("Adj in process"=LB_LINE$) THEN GOSUB CHECK_ADJ
10109 CHANGE_FLG=0; RETURN 
10110 READ_DATA:
10111 GOSUB CHANGE_HEADER
10112 ICF=NUM(ARG_2$),AP4=NUM(ARG_4$),IC0=NUM(ARG_6$),N0$=ARG_1$; DIM A(12),IC0(40); _FS8=HFN; OPEN (_FS8)"FS8"+%C$; _FS6=HFN; OPEN (_FS6)"FS6"+%C$; _PO1=HFN; OPEN (_PO1)"PO1"+%C$
10113 IF ARG_5$<>"" THEN LB_LINE.CTL'FMT$=ARG_5$
10114 IF IC0=0 THEN IC0=FN%FFN("IC0"+%C$) ! [205471]-changed FFN() to FN%FFN()
10115 FIND (ICF,KEY=N0$(1,32))IOL=0310
10116 FIND (IC0,KEY=N0$(1,20))IC0$,IC0{ALL}
10118 DIM AP4$(426); FIND (AP4,KEY=A$(68,10),DOM=*NEXT)AP4$
10120 GOSUB ASSIGN_LIB
10125 LIST_BOX LOAD LB_LINE.CTL,1,ARG_3$
10126 READ DATA FROM ARG_3$ TO *,ORDER$,*,*,*,*,*,*,*,*,PO_NUM$; GOSUB CHECK_ORDER_PO
10127 IF STP(ORDER$)<>"" AND MID(ORDER$,1,2)<>"TR" THEN BT_ORDER.CTL'TEXT$="&View Order  "+FN%ZZDISP$(ORDER$,"O/P"); BUTTON SHOW BT_ORDER.CTL
10128 IF STP(PO_NUM$)<>"" THEN BT_PO.CTL'TEXT$="Vie&w P/O  "+FN%ZZDISP$(PO_NUM$,"P/O"); BUTTON SHOW BT_PO.CTL
10140 RETURN 
11000 ASSIGN_LIB:
11001 ! 
11010 ML_REC_DATE$=A$(25,6),ML_RECE_NO$=A$(33,8)
11020 ML_BIN$=A$(100,10),ML_CUST_PO$=A$(133,15),ML_SEL_PRICE$=STR(A(5)),ML_STD_COST$=STR(A(7))
11025 ML_TOT_FRT=A[1]
11030 ML_VENDOR$=A$(68,10),ML_PO_NUM$=A$(41,9),ML_PO_DATE$=A$(50,6)
11040 ML_TOTAL_COST$=STR(A(0)),ML_END_NUM$=A$(91,9),ML_LOT_NUM$=A$(234,8)
11050 ML_PROD_CODE$=A$(242,3),ML_COMM_CODE$=A$(245,5),ML_STO_EXP$=A$(250,6)
11055 ML_ITEM_REV_DATE$=A$(215,6) ! SSP#220451
11060 REFRESH_FLG=1,%VEND_NAME$=STP(AP4$(11,35))
11065 IF STP(A$(129,4))<>"" THEN PER$="Per "+STP(A$(129,4))+"/"+STR(A(6))
11070 RETURN 
12000 DEL_LINES:
12001 ! 
12005 IF LB_LINE.CTL'ITEMCOUNT>=15 THEN HIDE CONTROL LB_LINE.CTL
12010 FOR AA=1 TO 199
12020 LIST_BOX LOAD LB_LINE.CTL,1,*,ERR=NO_LINES
12030 NEXT AA
12035 SHOW CONTROL LB_LINE.CTL
12040 GOTO END_DEL
12042 ! 
12050 NO_LINES: SHOW CONTROL LB_LINE.CTL; EXITTO END_DEL
12060 END_DEL:RETURN 
12061 ! 
12100 CHANGE_HEADER:
12101 ! 
12105 WWW=FFN("ZZPARM"); IF WWW<=0 THEN WWW=HFN; OPEN (WWW)"ZZPARM"; SI=1
12108 READ (WWW,KEY=%X3$(9,3)+"I/C")P0$
12110 OPTION$=MSG("MPB_LOTD"),OPTION=POS(P0$(53,1)="ABCD")
12120 FOR WW=1 TO OPTION; XX=POS("|"=OPTION$),TEXT$=OPTION$(1,XX-1),OPTION$=OPTION$(XX+1); NEXT WW
12130 BB$=LB_LINE.CTL'FMT$,XX=POS("["=BB$,-1)
12140 BB$=BB$(1,XX-1)+"["+TEXT$+"]R15.00"
12150 LB_LINE.CTL'FMT$=BB$
12155 IF SI THEN CLOSE (WWW)
12160 RETURN 
13100 CHECK_TYPE:
13101 ! 
13110 IF STP(A$(221,2))="" THEN RETURN 
13120 IF A$(221,2)="TR" THEN ML_ORDER$='SF'+'_RED'+"Adj in process",ML_LINES$='SF'+'_RED'+A$(221,7)
13130 IF A$(221,2)="PI" THEN ML_ORDER$='SF'+'_CYAN'+"Phy Inventory",ML_LINES$='SF'+'_CYAN'+A$(221,7)
13140 RETURN 
14000 CHECK_ADJ:RETURN ! IF WHO<>"jir" THEN RETURN 
14020 IF ADJ$<>"" OR %X3$(145,1)<>"1" THEN GOTO CHECK_ADJ_END
14030 ZY9=HFN; OPEN (ZY9)"ZY9"
14035 READ (ZY9,KEY="",DOM=*NEXT)
14040 READ (ZY9,END=CHECK_ADJ_END)ZY9$
14050 IF MID(ZY9$,6,6)<>"IC2TDA" THEN GOTO 14040
14060 IF MID(ZY9$,110,3)<>%C$ THEN GOTO 14040
14070 ADJ$=ADJ$+ZY9$(1,5)
14080 GOTO 14040
14200 CHECK_ADJ_END:
14210 IF %X3$(145,1)<>"1" THEN FIL$="ICK"+%C$ ELSE FIL$=""
14220 IF FIL$="" THEN FOR AA=1 TO LEN(ADJ$) STEP 5; FIL$="ICK"+STP(ADJ$(AA,5),3," ")
14230 EXIT 
15000 SEL_LINE:
15005 LIST_BOX FIND LB_LINE.CTL,1,LB_LINE$
15010 ! _FS8=HFN; OPEN (_FS8)"FS8"+%C$; _FS6=HFN; OPEN (_FS6)"FS6"+%C$
15020 READ DATA FROM LB_LINE$ TO *,ORDER$,*,*,*,*,*,*,*,*,PO_NUM$; GOSUB CHECK_ORDER_PO
15021 IF STP(LB_LINE$)="" THEN LB_LINE$=ARG_3$; GOTO 15020
15022 IF STP(ORDER$)="" AND STP(PO_NUM$)="" THEN GOTO END_PROC
15025 IF STP(ORDER$)="" THEN ORD_OPT$="" ELSE ORD_OPT$="&View Order :"+FN%ZZDISP$(ORDER$,"O/P")+"=1,,"
15027 IF STP(PO_NUM$)="" THEN PO_OPT$="" ELSE PO_OPT$="View &P/O    :"+FN%ZZDISP$(PO_NUM$,"P/O")+"=2,,"
15030 OPT_MNU$="["+ORD_OPT$+PO_OPT$+"&Exit=3]"
15035 IF ID$="LB_LINE" AND ORDER$<>"" AND PO_NUM$="" THEN GOTO ORDER
15038 IF ID$="LB_LINE" AND ORDER$="" AND PO_NUM$<>"" THEN GOTO PO
15040 IF ID$="LB_LINE" THEN POPUP_MENU OPT_MNU$,OPT
15050 ON OPT GOTO *NEXT,ORDER,PO,*NEXT
15055 CMD_STR$="E"; EXIT 
15060 ORDER:
15070 ORDER$=SUB(ORDER$,"-",""); CALL "ZZWLKU;PARSE_ORD",ORDER$,ORD_DIV$,ORD_NUM$; ORDER$=ORD_DIV$+ORD_NUM$
15080 READ (_FS8,KEY=%CUSTOMER$+ORDER$,DOM=*NEXT)
15090 KEY_FS8$=KEY(_FS8,END=END_PROC); READ (_FS8)
15100 IF MID(KEY_FS8$,1,10)<>%CUSTOMER$ THEN GOTO END_PROC
15110 IF MID(KEY_FS8$,11,8)<>ORDER$ THEN GOTO END_PROC
15120 IF MID(KEY_FS8$,20,10)<>%ITEM_CODE$ THEN GOTO 15090
15130 KEY_FS6$=KEY_FS8$(1,10)+KEY_FS8$(19,1)+KEY_FS8$(20,10)+ORDER$+KEY_FS8$(30,1)
15140 PROCESS "FMGIAI","../FMG/FM.EN",KEY_FS6$
15150 GOTO END_PROC
15500 PO:! 15500,10
15510 %PO_NUM$=SUB(PO_NUM$,"-",""),%NO_DELETE=1,_SAVE_CUSTOMER$=%CUSTOMER$
15520 PROCESS "POGMAA.OR","../POG/PO.EN"
15530 %PO_NUM$="",%NO_DELETE=0
15540 %CUSTOMER$=_SAVE_CUSTOMER$
15800 END_PROC:
15810 ! CLOSE (_FS6,ERR=*NEXT),(_FS8,ERR=*NEXT)
15890 RETURN 
21110 %PO_NUM$=SUB(PO_NUM$,"-",""),%NO_DELETE=1,_SAVE_CUSTOMER$=%CUSTOMER$
21120 PROCESS "POGMAA.OR","../POG/PO.EN"
21130 %PO_NUM$="",%NO_DELETE=0
21135 %CUSTOMER$=_SAVE_CUSTOMER$
21140 RETURN 
21500 CHECK_ORDER:
21510 ORDER$=SUB(ORDER$,"-",""); CALL "ZZWLKU;PARSE_ORD",ORDER$,ORD_DIV$,ORD_NUM$; ORDER$=ORD_DIV$+ORD_NUM$
21515 ! _FS8=FN%FFN("FS8"+C$); IF _FS8<=0 THEN _FS8=HFN; OPEN (_FS8)"FS8"+%C$; CL=1 ELSE CL=0        ! [205471]-changed FFN() to FN%FFN()
21520 READ (_FS8,KEY=%CUSTOMER$+ORDER$,DOM=*NEXT,ERR=*RETURN)
21530 KEY_FS8$=KEY(_FS8,END=END_PROC); READ (_FS8)
21540 IF MID(KEY_FS8$,1,10)<>%CUSTOMER$ THEN ORDER$=""; RETURN 
21550 IF MID(KEY_FS8$,11,8)<>ORDER$ THEN ORDER$=""; RETURN 
21560 IF MID(KEY_FS8$,20,10)<>%ITEM_CODE$ THEN GOTO 21530
21570 RETURN 
21580 CHECK_PO:
21590 ! _PO1=HFN; OPEN (_PO1)"PO1"+%C$
21600 PO_NUM$=SUB(PO_NUM$,"-","")
21610 FIND (_PO1,KEY=PO_NUM$,ERR=NO_PO)
21620 RETURN 
21630 NO_PO: PO_NUM$=""; RETURN 
22000 CHECK_ORDER_PO:
22005 ! IF _FS8=0 THEN CL=1; _FS8=HFN; OPEN (_FS8)"FS8"+%C$ ELSE CL=0
22010 GOSUB CHECK_ORDER
22030 GOSUB CHECK_PO
22100 RETURN 
56000 ! "190612-GUI - Inventory Availability Screen                         
56001 ! "197922-Error message in lot detail for company 585. Item 1POLW11US.
56002 REM "200525-Ability to have storage cost and finance costs for inventory
56004 REM "205471-Oracle - FFN usage in tf2g progs. to be replaced by FN%FFN  
56005 ! "211228-PE in ICGLCA - Reproduced                                   
56006 REM "220451-I was wondering if there was a setting we could change or   
56007 REM "235876-Storage and Finance Charge in ICF is not being split        
