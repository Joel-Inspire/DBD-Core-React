0010 ! Open Sales Order Inquiry <ICGMAJ>
0020 ! Copyright 2003 TopForm Inc.; Norcross, Georgia
0030 ! Licensed Software - All Rights Reserved.
0031 ! By: JIR, 
0035 REM "5.5 - 08/31/07 - 8.471944 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0042 SETERR 0043; ENTER CUSTOMER$,ITEM_CODE$ ! SSP#211822
0049 ARG_1$=CUSTOMER$,ARG_2$=ITEM_CODE$ ! SSP#211822
0050 PROCESS "ICGMAJ","../ICG/IC.EN",ARG_1$,ARG_2$
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="FS2"+%C$
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0171 _FIL_NO1=HFN; OPEN (_FIL_NO1,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0172 _FS1=HFN; OPEN (_FS1,IOL=*,ERR=OPEN_ERR)"FS1"+%C$
0173 _AR1=HFN; OPEN (_AR1,IOL=*,ERR=OPEN_ERR)"AR1"+%C$
0174 _AP4=HFN; OPEN (_AP4,ERR=OPEN_ERR)"AP4"+%C$
0175 _ZZP=HFN; OPEN (_ZZP,ERR=OPEN_ERR)"ZZPARM"; READ (_ZZP,KEY=FID(0)+"      ")X3$,*,X4$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 _FM0=HFN; OPEN (_FM0)"FM0"+%C$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=3
0430 DIM _KEYS$[1:3]; _KEYS$[1]="CUSTOMER$",_KEYS$[2]="ITEM_CODE$",_KEYS$[3]="LOC_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0531 BB$=LB_LINE.CTL'FMT$,BB=POS("MDY"=BB$); IF BB<>0 AND %X3$(48,1)="2" THEN BB$(BB,3)="DMY",LB_LINE.CTL'FMT$=BB$; GOTO *SAME
0535 IF ARG_1$+ARG_2$<>"" THEN %ICGMAJ$=ARG_1$+ARG_2$,CUST_CALL$=ARG_1$,ITEM_CALL$=ARG_2$; ARG_1$="",ARG_2$=""; REFRESH_FLG=1,_KCNT=3,_KEY1=3,NEXT_ID=LOC_CODE.CTL,CUSTOMER$=CUST_CALL$,ID$="CUSTOMER"; PERFORM "ICGMDA;PROCESS_AR1"; ITEM_CODE$=ITEM_CALL$; PERFORM "ICGMDA;PROCESS_IC0"; CALL "*WINGRP;DISABLE",KEY1.GRP$
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; IF ITEM_CALL$<>"" THEN NEXT_ID=LOC_CODE.CTL END_IF ; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0551 %ICGMAJ$=_KEY$(1,20)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0942 CLOSE (_FS1),(_AR1),(_ZZP),(_IC0),(_FM0)
0943 CLOSE (_FIL_NO1),(_AP4)
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0965 %ICGMAJ$=""
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1011 IF STP(LOC_CODE$)="" THEN LOC_CODE$="    "
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 _KEY1$=CUSTOMER$+ITEM_CODE$+LOC_CODE$,IDX=0,BITEM$=ITEM_CODE$,BLOC_CODE$=LOC_CODE$,REC_KEY$=""
1050 READ (_FIL_NO,KNO=1,KEY=_KEY1$,DOM=*NEXT)
1052 _KEY$=KEY(_FIL_NO,END=1100); READ (_FIL_NO)
1055 IF BLOC_CODE$="    " AND _KEY$(1,20)<>MID(_KEY1$,1,20) THEN GOTO 1100
1056 IF STP(BLOC_CODE$)<>"" AND MID(_KEY$,1,24)<>MID(_KEY1$,1,24) THEN GOTO 1100
1058 IF POS("DS"=_KEY$)<>0 THEN LOCC$="DS"; LOC_D$="Direct Shipments"; GOTO 1060
1059 READ (_FM0,KEY="D"+DIM(10)+_KEY$(21,4),DOM=*NEXT)FM0$; LOCC$=_KEY$(21,4),LOC_D$=FM0$(16,35)
1060 ! IF BLOC_CODE$<>"    " AND _KEY$(1,24)<>_KEY1$ THEN GOTO 1100
1065 FIND (_FS1,KEY=_KEY$(25,8),DOM=*NEXT)_FS1$; SO_DATE$=FND$(_FS1$(16,6)),REQ_DATE$=FND$(_FS1$(55,6)),PO$=_FS1$(28,15); FIND (_AP4,KEY=VEND_DIV$+VEND_CODE$,DOM=*NEXT)_AP4$; FIND (_AR1,KEY=_FS1$(6,10),DOM=*NEXT)_AR1$
1066 IF _AP4$="" THEN DIM _AP4$(150)
1067 IF MID(_FS1$,63,1)="Y" THEN INVO=1,BL$='SF'+'_CYAN' ELSE BL$=""
1068 IF INVO=1 AND INVO1=0 THEN CALL "*WINGRP;SHOW",INVO.GRP$; INVO1=1
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1091 IF LEN(LOCC$)=2 THEN PO$=_KEY$(25,2)+"-"+_KEY$(27,6)+"-"+PO_CODE$
1092 IDX=IDX+1,REC_KEY$=REC_KEY$+_KEY$; LIST_BOX LOAD LB_LINE.CTL,IDX,BL$+LOCC$+SEP+BL$+LOC_D$+SEP+BL$+FN%ZZDISP$(_KEY$(25,8),"O/P")+SEP+BL$+_KEY$(33,3)+SEP+BL$+SO_DATE$+SEP+BL$+STR(OPEN_QTY:"###,###.00-")+SEP+BL$+STR(UNIT_SELL_PRICE:"###,###.00-")+SEP+BL$+STR(UNIT_COST:"###,###.00-")+SEP+BL$+PO$+SEP+BL$+REQ_DATE$+SEP+BL$+FN%ZZDISP$(_AP4$(1,10),"A/P")+SEP+BL$+STP(_AP4$(11,35))+" - "+STP(_AP4$(106,15))+","+_AP4$(122,2)+" "+STP(_AP4$(124,9))+SEP
1095 GOTO 1052
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=LB_LINE.CTL,ITEM_CODE$=BITEM$
1193 REFRESH_FLG=1
1199 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1670 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_REMOVE$+_R_KEY$,_FYI$,"INFO"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC: CHANGE_FLG=0
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0,%ICGMAJ$=_KEY$(1,20)
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3330 _R_KEY$=KEC(_FIL_NO); TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO"
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=ORDER_LINE_NUM.CTL,_FIRST_FIELD=CTN_LBL_FORMAT_CD.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 OPEN_QTY$=STR(OPEN_QTY)
10030 UNIT_COST$=STR(UNIT_COST)
10040 COST_QTY_PER$=STR(COST_QTY_PER)
10050 COST_EXT$=STR(COST_EXT)
10060 UNIT_SELL_PRICE$=STR(UNIT_SELL_PRICE)
10070 QTY_IN_SELL_UM$=STR(QTY_IN_SELL_UM)
10080 SELL_PRICE_EXT$=STR(SELL_PRICE_EXT)
10090 QTY_UNBILLED_SHIP$=STR(QTY_UNBILLED_SHIP)
10100 QTY_BO_RCV_FS3$=STR(QTY_BO_RCV_FS3)
10110 NUM_OF_CTN_LBL_PRNT$=STR(NUM_OF_CTN_LBL_PRNT)
10120 ORIG_QTY_ORDERED$=STR(ORIG_QTY_ORDERED)
10130 FIND_FEE_PRCNT$=STR(FIND_FEE_PRCNT)
10140 CTN_PACK$=STR(CTN_PACK)
10150 COMBO_QTY$=STR(COMBO_QTY)
10160 QTY_INV_TO_DATE$=STR(QTY_INV_TO_DATE)
10170 UNBILL_SHIP_UNIT_CST$=STR(UNBILL_SHIP_UNIT_CST)
10180 INVD_TO_DATE_QTY$=STR(INVD_TO_DATE_QTY)
10190 FRT_RETURNS_FROM_LOT$=STR(FRT_RETURNS_FROM_LOT)
10200 REV_UNIT_SELL_PRICE$=STR(REV_UNIT_SELL_PRICE)
10210 UNBILLED_SHIP_EXT$=STR(UNBILLED_SHIP_EXT)
10220 INVD_TO_DATE_EXTCST$=STR(INVD_TO_DATE_EXTCST)
10230 INVD_TO_DATE_EXT$=STR(INVD_TO_DATE_EXT)
10240 UNIT_LIST_PRICE$=STR(UNIT_LIST_PRICE)
10250 LINE_ITEM_DISC_PRCNT$=STR(LINE_ITEM_DISC_PRCNT)
10260 NUM_OF_CART_LBLS_2$=STR(NUM_OF_CART_LBLS_2)
10270 FS2_UNUSED_1$=STR(FS2_UNUSED_1)
10280 FS2_UNUSED_2$=STR(FS2_UNUSED_2)
10290 FS2_UNUSED_3$=STR(FS2_UNUSED_3)
10300 FS2_UNUSED_4$=STR(FS2_UNUSED_4)
10310 FS2_UNUSED_5$=STR(FS2_UNUSED_5)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="OPEN_QTY",_X=OPEN_QTY.CTL,OPEN_QTY=NUM(OPEN_QTY$,ERR=NON_NUMERIC)
11030 _X$="UNIT_COST",_X=UNIT_COST.CTL,UNIT_COST=NUM(UNIT_COST$,ERR=NON_NUMERIC)
11040 _X$="COST_QTY_PER",_X=COST_QTY_PER.CTL,COST_QTY_PER=NUM(COST_QTY_PER$,ERR=NON_NUMERIC)
11050 _X$="COST_EXT",_X=COST_EXT.CTL,COST_EXT=NUM(COST_EXT$,ERR=NON_NUMERIC)
11060 _X$="UNIT_SELL_PRICE",_X=UNIT_SELL_PRICE.CTL,UNIT_SELL_PRICE=NUM(UNIT_SELL_PRICE$,ERR=NON_NUMERIC)
11070 _X$="QTY_IN_SELL_UM",_X=QTY_IN_SELL_UM.CTL,QTY_IN_SELL_UM=NUM(QTY_IN_SELL_UM$,ERR=NON_NUMERIC)
11080 _X$="SELL_PRICE_EXT",_X=SELL_PRICE_EXT.CTL,SELL_PRICE_EXT=NUM(SELL_PRICE_EXT$,ERR=NON_NUMERIC)
11090 _X$="QTY_UNBILLED_SHIP",_X=QTY_UNBILLED_SHIP.CTL,QTY_UNBILLED_SHIP=NUM(QTY_UNBILLED_SHIP$,ERR=NON_NUMERIC)
11100 _X$="QTY_BO_RCV_FS3",_X=QTY_BO_RCV_FS3.CTL,QTY_BO_RCV_FS3=NUM(QTY_BO_RCV_FS3$,ERR=NON_NUMERIC)
11110 _X$="NUM_OF_CTN_LBL_PRNT",_X=NUM_OF_CTN_LBL_PRNT.CTL,NUM_OF_CTN_LBL_PRNT=NUM(NUM_OF_CTN_LBL_PRNT$,ERR=NON_NUMERIC)
11120 _X$="ORIG_QTY_ORDERED",_X=ORIG_QTY_ORDERED.CTL,ORIG_QTY_ORDERED=NUM(ORIG_QTY_ORDERED$,ERR=NON_NUMERIC)
11130 _X$="FIND_FEE_PRCNT",_X=FIND_FEE_PRCNT.CTL,FIND_FEE_PRCNT=NUM(FIND_FEE_PRCNT$,ERR=NON_NUMERIC)
11140 _X$="CTN_PACK",_X=CTN_PACK.CTL,CTN_PACK=NUM(CTN_PACK$,ERR=NON_NUMERIC)
11150 _X$="COMBO_QTY",_X=COMBO_QTY.CTL,COMBO_QTY=NUM(COMBO_QTY$,ERR=NON_NUMERIC)
11160 _X$="QTY_INV_TO_DATE",_X=QTY_INV_TO_DATE.CTL,QTY_INV_TO_DATE=NUM(QTY_INV_TO_DATE$,ERR=NON_NUMERIC)
11170 _X$="UNBILL_SHIP_UNIT_CST",_X=UNBILL_SHIP_UNIT_CST.CTL,UNBILL_SHIP_UNIT_CST=NUM(UNBILL_SHIP_UNIT_CST$,ERR=NON_NUMERIC)
11180 _X$="INVD_TO_DATE_QTY",_X=INVD_TO_DATE_QTY.CTL,INVD_TO_DATE_QTY=NUM(INVD_TO_DATE_QTY$,ERR=NON_NUMERIC)
11190 _X$="FRT_RETURNS_FROM_LOT",_X=FRT_RETURNS_FROM_LOT.CTL,FRT_RETURNS_FROM_LOT=NUM(FRT_RETURNS_FROM_LOT$,ERR=NON_NUMERIC)
11200 _X$="REV_UNIT_SELL_PRICE",_X=REV_UNIT_SELL_PRICE.CTL,REV_UNIT_SELL_PRICE=NUM(REV_UNIT_SELL_PRICE$,ERR=NON_NUMERIC)
11210 _X$="UNBILLED_SHIP_EXT",_X=UNBILLED_SHIP_EXT.CTL,UNBILLED_SHIP_EXT=NUM(UNBILLED_SHIP_EXT$,ERR=NON_NUMERIC)
11220 _X$="INVD_TO_DATE_EXTCST",_X=INVD_TO_DATE_EXTCST.CTL,INVD_TO_DATE_EXTCST=NUM(INVD_TO_DATE_EXTCST$,ERR=NON_NUMERIC)
11230 _X$="INVD_TO_DATE_EXT",_X=INVD_TO_DATE_EXT.CTL,INVD_TO_DATE_EXT=NUM(INVD_TO_DATE_EXT$,ERR=NON_NUMERIC)
11240 _X$="UNIT_LIST_PRICE",_X=UNIT_LIST_PRICE.CTL,UNIT_LIST_PRICE=NUM(UNIT_LIST_PRICE$,ERR=NON_NUMERIC)
11250 _X$="LINE_ITEM_DISC_PRCNT",_X=LINE_ITEM_DISC_PRCNT.CTL,LINE_ITEM_DISC_PRCNT=NUM(LINE_ITEM_DISC_PRCNT$,ERR=NON_NUMERIC)
11260 _X$="NUM_OF_CART_LBLS_2",_X=NUM_OF_CART_LBLS_2.CTL,NUM_OF_CART_LBLS_2=NUM(NUM_OF_CART_LBLS_2$,ERR=NON_NUMERIC)
11270 _X$="FS2_UNUSED_1",_X=FS2_UNUSED_1.CTL,FS2_UNUSED_1=NUM(FS2_UNUSED_1$,ERR=NON_NUMERIC)
11280 _X$="FS2_UNUSED_2",_X=FS2_UNUSED_2.CTL,FS2_UNUSED_2=NUM(FS2_UNUSED_2$,ERR=NON_NUMERIC)
11290 _X$="FS2_UNUSED_3",_X=FS2_UNUSED_3.CTL,FS2_UNUSED_3=NUM(FS2_UNUSED_3$,ERR=NON_NUMERIC)
11300 _X$="FS2_UNUSED_4",_X=FS2_UNUSED_4.CTL,FS2_UNUSED_4=NUM(FS2_UNUSED_4$,ERR=NON_NUMERIC)
11310 _X$="FS2_UNUSED_5",_X=FS2_UNUSED_5.CTL,FS2_UNUSED_5=NUM(FS2_UNUSED_5$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13015 ML_LOC_DESC$=""
13016 LIST_BOX LOAD LB_LINE.CTL,""; GOTO 13020
13018 FOR AA=1 TO IDX; LIST_BOX LOAD LB_LINE.CTL,AA,*,ERR=*PROCEED; NEXT AA
13019 LIST_BOX LOAD LB_LINE.CTL,1,*,ERR=*NEXT
13020 CTN_LBL_FORMAT_CD$=""
13030 LOT_INV_ORDER_LINE$=""
13040 ORDER_LINE_COMPLETE$=""
13050 FIXED_PRICE$=""
13060 CSTM_ITEM_LINE_TYPE$=""
13070 IF _CLR_FLG$="R" THEN ORDER_LINE_NUM$=""
13080 PO_CODE$=""
13090 WHSE$=""
13100 CUSTOM$=""
13110 QUOTE_LINE_NUM$=""
13120 SPECIAL_SHIPPING$=""
13140 PROD_CODE$=""
13150 LEFT_RIGHT$=""
13160 TOP_BOTTOM$=""
13170 PLYS$=""
13180 TF_DESC$=""
13190 PLANT_CODE$=""
13200 VEND_DIV$=""
13210 VEND_CODE$=""
13220 STARTING_NUM$=""
13230 RO_DATE$=""
13240 SPECS_REQ$=""
13250 COST_UM$=""
13260 SELL_UM$=""
13270 COMM_CODE$=""
13280 SKIP_ORDER_HIST$=""
13290 RUSH_CHARGE$=""
13300 FIND_FEE$=""
13310 IS_LINE_TAXABLE$=""
13320 FIND_FEE_VEND_DIV$=""
13330 FIND_FEE_VEND_CODE$=""
13340 IF _CLR_FLG$="R" THEN ORDER_DIV$=""
13350 IF _CLR_FLG$="R" THEN ORDER_NUM$=""
13360 LINE_TYPE$=""
13370 PRINT_FLAGS$=""
13380 CUST_DIV$=""
13390 CUST_CODE$=""
13400 JOB_NUM$=""
13410 JOB_DATE$=""
13420 ENDING_NUM$=""
13430 CTN_WT$=""
13440 COST_CODE$=""
13450 ITEM_CLASS$=""
13460 WHSE_CODE_PKLIST$=""
13470 PO_LINE_RCV_COMP$=""
13480 CTN_LBL_CODE_2ND$=""
13490 QUOTE_DIV$=""
13500 QUOTE_NUM$=""
13510 OPEN_QTY=0
13520 UNIT_COST=0
13530 COST_QTY_PER=0
13540 COST_EXT=0
13550 UNIT_SELL_PRICE=0
13560 QTY_IN_SELL_UM=0
13570 SELL_PRICE_EXT=0
13580 QTY_UNBILLED_SHIP=0
13590 QTY_BO_RCV_FS3=0
13600 NUM_OF_CTN_LBL_PRNT=0
13610 ORIG_QTY_ORDERED=0
13620 FIND_FEE_PRCNT=0
13630 CTN_PACK=0
13640 COMBO_QTY=0
13650 QTY_INV_TO_DATE=0
13660 UNBILL_SHIP_UNIT_CST=0
13670 INVD_TO_DATE_QTY=0
13680 FRT_RETURNS_FROM_LOT=0
13690 REV_UNIT_SELL_PRICE=0
13700 UNBILLED_SHIP_EXT=0
13710 INVD_TO_DATE_EXTCST=0
13720 INVD_TO_DATE_EXT=0
13730 UNIT_LIST_PRICE=0
13740 LINE_ITEM_DISC_PRCNT=0
13750 NUM_OF_CART_LBLS_2=0
13760 FS2_UNUSED_1=0
13770 FS2_UNUSED_2=0
13780 FS2_UNUSED_3=0
13790 FS2_UNUSED_4=0
13800 FS2_UNUSED_5=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=ORDER_DIV.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=ORDER_NUM.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(79,"N")
15030 IF _ORIG.CTN_LBL_FORMAT_CD$=_CUR.CTN_LBL_FORMAT_CD$ OR CTN_LBL_FORMAT_CD$=_CUR.CTN_LBL_FORMAT_CD$ THEN GOTO *NEXT ELSE IF _ORIG.CTN_LBL_FORMAT_CD$=CTN_LBL_FORMAT_CD$ THEN _CHG2$=_CHG2$+SEP+MSG("CTN_L_F_C")+" = "+_CUR.CTN_LBL_FORMAT_CD$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_L_F_C")+" = "+_CUR.CTN_LBL_FORMAT_CD$
15040 IF _ORIG.LOT_INV_ORDER_LINE$=_CUR.LOT_INV_ORDER_LINE$ OR LOT_INV_ORDER_LINE$=_CUR.LOT_INV_ORDER_LINE$ THEN GOTO *NEXT ELSE IF _ORIG.LOT_INV_ORDER_LINE$=LOT_INV_ORDER_LINE$ THEN _CHG2$=_CHG2$+SEP+MSG("LOT_I_O_L")+" = "+_CUR.LOT_INV_ORDER_LINE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOT_I_O_L")+" = "+_CUR.LOT_INV_ORDER_LINE$
15050 IF _ORIG.ORDER_LINE_COMPLETE$=_CUR.ORDER_LINE_COMPLETE$ OR ORDER_LINE_COMPLETE$=_CUR.ORDER_LINE_COMPLETE$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_LINE_COMPLETE$=ORDER_LINE_COMPLETE$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_L_C")+" = "+_CUR.ORDER_LINE_COMPLETE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_L_C")+" = "+_CUR.ORDER_LINE_COMPLETE$
15060 IF _ORIG.FIXED_PRICE$=_CUR.FIXED_PRICE$ OR FIXED_PRICE$=_CUR.FIXED_PRICE$ THEN GOTO *NEXT ELSE IF _ORIG.FIXED_PRICE$=FIXED_PRICE$ THEN _CHG2$=_CHG2$+SEP+MSG("FIXE_P")+" = "+_CUR.FIXED_PRICE$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIXE_P")+" = "+_CUR.FIXED_PRICE$
15070 IF _ORIG.CSTM_ITEM_LINE_TYPE$=_CUR.CSTM_ITEM_LINE_TYPE$ OR CSTM_ITEM_LINE_TYPE$=_CUR.CSTM_ITEM_LINE_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.CSTM_ITEM_LINE_TYPE$=CSTM_ITEM_LINE_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("CSTM_I_L_T")+" = "+_CUR.CSTM_ITEM_LINE_TYPE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CSTM_I_L_T")+" = "+_CUR.CSTM_ITEM_LINE_TYPE$
15080 IF _ORIG.ORDER_LINE_NUM$=_CUR.ORDER_LINE_NUM$ OR ORDER_LINE_NUM$=_CUR.ORDER_LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_LINE_NUM$=ORDER_LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_L_N")+" = "+_CUR.ORDER_LINE_NUM$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_L_N")+" = "+_CUR.ORDER_LINE_NUM$
15090 IF _ORIG.PO_CODE$=_CUR.PO_CODE$ OR PO_CODE$=_CUR.PO_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PO_CODE$=PO_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_CODE")+" = "+_CUR.PO_CODE$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_CODE")+" = "+_CUR.PO_CODE$
15100 IF _ORIG.WHSE$=_CUR.WHSE$ OR WHSE$=_CUR.WHSE$ THEN GOTO *NEXT ELSE IF _ORIG.WHSE$=WHSE$ THEN _CHG2$=_CHG2$+SEP+MSG("WHSE")+" = "+_CUR.WHSE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WHSE")+" = "+_CUR.WHSE$
15110 IF _ORIG.CUSTOM$=_CUR.CUSTOM$ OR CUSTOM$=_CUR.CUSTOM$ THEN GOTO *NEXT ELSE IF _ORIG.CUSTOM$=CUSTOM$ THEN _CHG2$=_CHG2$+SEP+MSG("CUSTOM")+" = "+_CUR.CUSTOM$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUSTOM")+" = "+_CUR.CUSTOM$
15120 IF _ORIG.QUOTE_LINE_NUM$=_CUR.QUOTE_LINE_NUM$ OR QUOTE_LINE_NUM$=_CUR.QUOTE_LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.QUOTE_LINE_NUM$=QUOTE_LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("QUOT_L_N")+" = "+_CUR.QUOTE_LINE_NUM$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QUOT_L_N")+" = "+_CUR.QUOTE_LINE_NUM$
15130 IF _ORIG.SPECIAL_SHIPPING$=_CUR.SPECIAL_SHIPPING$ OR SPECIAL_SHIPPING$=_CUR.SPECIAL_SHIPPING$ THEN GOTO *NEXT ELSE IF _ORIG.SPECIAL_SHIPPING$=SPECIAL_SHIPPING$ THEN _CHG2$=_CHG2$+SEP+MSG("SPEC_S")+" = "+_CUR.SPECIAL_SHIPPING$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPEC_S")+" = "+_CUR.SPECIAL_SHIPPING$
15140 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15150 IF _ORIG.PROD_CODE$=_CUR.PROD_CODE$ OR PROD_CODE$=_CUR.PROD_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PROD_CODE$=PROD_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PROD_CODE")+" = "+_CUR.PROD_CODE$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROD_CODE")+" = "+_CUR.PROD_CODE$
15160 IF _ORIG.LEFT_RIGHT$=_CUR.LEFT_RIGHT$ OR LEFT_RIGHT$=_CUR.LEFT_RIGHT$ THEN GOTO *NEXT ELSE IF _ORIG.LEFT_RIGHT$=LEFT_RIGHT$ THEN _CHG2$=_CHG2$+SEP+MSG("LEFT_RIGHT")+" = "+_CUR.LEFT_RIGHT$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LEFT_RIGHT")+" = "+_CUR.LEFT_RIGHT$
15170 IF _ORIG.TOP_BOTTOM$=_CUR.TOP_BOTTOM$ OR TOP_BOTTOM$=_CUR.TOP_BOTTOM$ THEN GOTO *NEXT ELSE IF _ORIG.TOP_BOTTOM$=TOP_BOTTOM$ THEN _CHG2$=_CHG2$+SEP+MSG("TOP_BOTTOM")+" = "+_CUR.TOP_BOTTOM$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOP_BOTTOM")+" = "+_CUR.TOP_BOTTOM$
15180 IF _ORIG.PLYS$=_CUR.PLYS$ OR PLYS$=_CUR.PLYS$ THEN GOTO *NEXT ELSE IF _ORIG.PLYS$=PLYS$ THEN _CHG2$=_CHG2$+SEP+MSG("PLYS")+" = "+_CUR.PLYS$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLYS")+" = "+_CUR.PLYS$
15190 IF _ORIG.TF_DESC$=_CUR.TF_DESC$ OR TF_DESC$=_CUR.TF_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.TF_DESC$=TF_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("DESC")+" = "+_CUR.TF_DESC$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DESC")+" = "+_CUR.TF_DESC$
15200 IF _ORIG.PLANT_CODE$=_CUR.PLANT_CODE$ OR PLANT_CODE$=_CUR.PLANT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_CODE$=PLANT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$
15210 IF _ORIG.VEND_DIV$=_CUR.VEND_DIV$ OR VEND_DIV$=_CUR.VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV$=VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$
15220 IF _ORIG.VEND_CODE$=_CUR.VEND_CODE$ OR VEND_CODE$=_CUR.VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE$=VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$
15230 IF _ORIG.STARTING_NUM$=_CUR.STARTING_NUM$ OR STARTING_NUM$=_CUR.STARTING_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.STARTING_NUM$=STARTING_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("STAR_N")+" = "+_CUR.STARTING_NUM$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("STAR_N")+" = "+_CUR.STARTING_NUM$
15240 IF _ORIG.RO_DATE$=_CUR.RO_DATE$ OR RO_DATE$=_CUR.RO_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.RO_DATE$=RO_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("RO_DATE")+" = "+_CUR.RO_DATE$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RO_DATE")+" = "+_CUR.RO_DATE$
15250 IF _ORIG.SPECS_REQ$=_CUR.SPECS_REQ$ OR SPECS_REQ$=_CUR.SPECS_REQ$ THEN GOTO *NEXT ELSE IF _ORIG.SPECS_REQ$=SPECS_REQ$ THEN _CHG2$=_CHG2$+SEP+MSG("SPECS_REQ")+" = "+_CUR.SPECS_REQ$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPECS_REQ")+" = "+_CUR.SPECS_REQ$
15260 IF _ORIG.COST_UM$=_CUR.COST_UM$ OR COST_UM$=_CUR.COST_UM$ THEN GOTO *NEXT ELSE IF _ORIG.COST_UM$=COST_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("COST_UM")+" = "+_CUR.COST_UM$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_UM")+" = "+_CUR.COST_UM$
15270 IF _ORIG.SELL_UM$=_CUR.SELL_UM$ OR SELL_UM$=_CUR.SELL_UM$ THEN GOTO *NEXT ELSE IF _ORIG.SELL_UM$=SELL_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("SELL_UM")+" = "+_CUR.SELL_UM$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_UM")+" = "+_CUR.SELL_UM$
15280 IF _ORIG.COMM_CODE$=_CUR.COMM_CODE$ OR COMM_CODE$=_CUR.COMM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.COMM_CODE$=COMM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("COMM_CODE")+" = "+_CUR.COMM_CODE$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_CODE")+" = "+_CUR.COMM_CODE$
15290 IF _ORIG.SKIP_ORDER_HIST$=_CUR.SKIP_ORDER_HIST$ OR SKIP_ORDER_HIST$=_CUR.SKIP_ORDER_HIST$ THEN GOTO *NEXT ELSE IF _ORIG.SKIP_ORDER_HIST$=SKIP_ORDER_HIST$ THEN _CHG2$=_CHG2$+SEP+MSG("SKIP_O_H")+" = "+_CUR.SKIP_ORDER_HIST$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SKIP_O_H")+" = "+_CUR.SKIP_ORDER_HIST$
15300 IF _ORIG.RUSH_CHARGE$=_CUR.RUSH_CHARGE$ OR RUSH_CHARGE$=_CUR.RUSH_CHARGE$ THEN GOTO *NEXT ELSE IF _ORIG.RUSH_CHARGE$=RUSH_CHARGE$ THEN _CHG2$=_CHG2$+SEP+MSG("RUSH_C")+" = "+_CUR.RUSH_CHARGE$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RUSH_C")+" = "+_CUR.RUSH_CHARGE$
15310 IF _ORIG.FIND_FEE$=_CUR.FIND_FEE$ OR FIND_FEE$=_CUR.FIND_FEE$ THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE$=FIND_FEE$ THEN _CHG2$=_CHG2$+SEP+MSG("FIND_FEE")+" = "+_CUR.FIND_FEE$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIND_FEE")+" = "+_CUR.FIND_FEE$
15320 IF _ORIG.IS_LINE_TAXABLE$=_CUR.IS_LINE_TAXABLE$ OR IS_LINE_TAXABLE$=_CUR.IS_LINE_TAXABLE$ THEN GOTO *NEXT ELSE IF _ORIG.IS_LINE_TAXABLE$=IS_LINE_TAXABLE$ THEN _CHG2$=_CHG2$+SEP+MSG("I_L_T")+" = "+_CUR.IS_LINE_TAXABLE$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("I_L_T")+" = "+_CUR.IS_LINE_TAXABLE$
15330 IF _ORIG.FIND_FEE_VEND_DIV$=_CUR.FIND_FEE_VEND_DIV$ OR FIND_FEE_VEND_DIV$=_CUR.FIND_FEE_VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_VEND_DIV$=FIND_FEE_VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("FIND_F_V_D")+" = "+_CUR.FIND_FEE_VEND_DIV$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIND_F_V_D")+" = "+_CUR.FIND_FEE_VEND_DIV$
15340 IF _ORIG.FIND_FEE_VEND_CODE$=_CUR.FIND_FEE_VEND_CODE$ OR FIND_FEE_VEND_CODE$=_CUR.FIND_FEE_VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_VEND_CODE$=FIND_FEE_VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("FIND_F_V_C")+" = "+_CUR.FIND_FEE_VEND_CODE$,_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIND_F_V_C")+" = "+_CUR.FIND_FEE_VEND_CODE$
15350 IF _ORIG.ORDER_DIV$=_CUR.ORDER_DIV$ OR ORDER_DIV$=_CUR.ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DIV$=ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$,_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$
15360 IF _ORIG.ORDER_NUM$=_CUR.ORDER_NUM$ OR ORDER_NUM$=_CUR.ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_NUM$=ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$,_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$
15370 IF _ORIG.LINE_TYPE$=_CUR.LINE_TYPE$ OR LINE_TYPE$=_CUR.LINE_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.LINE_TYPE$=LINE_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("LINE_TYPE")+" = "+_CUR.LINE_TYPE$,_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_TYPE")+" = "+_CUR.LINE_TYPE$
15380 IF _ORIG.PRINT_FLAGS$=_CUR.PRINT_FLAGS$ OR PRINT_FLAGS$=_CUR.PRINT_FLAGS$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_FLAGS$=PRINT_FLAGS$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_FLG")+" = "+_CUR.PRINT_FLAGS$,_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_FLG")+" = "+_CUR.PRINT_FLAGS$
15390 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15400 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15410 IF _ORIG.JOB_NUM$=_CUR.JOB_NUM$ OR JOB_NUM$=_CUR.JOB_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.JOB_NUM$=JOB_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_NUM")+" = "+_CUR.JOB_NUM$,_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_NUM")+" = "+_CUR.JOB_NUM$
15420 IF _ORIG.JOB_DATE$=_CUR.JOB_DATE$ OR JOB_DATE$=_CUR.JOB_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.JOB_DATE$=JOB_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_DATE")+" = "+_CUR.JOB_DATE$,_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_DATE")+" = "+_CUR.JOB_DATE$
15430 IF _ORIG.ENDING_NUM$=_CUR.ENDING_NUM$ OR ENDING_NUM$=_CUR.ENDING_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ENDING_NUM$=ENDING_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ENDING_NUM")+" = "+_CUR.ENDING_NUM$,_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ENDING_NUM")+" = "+_CUR.ENDING_NUM$
15440 IF _ORIG.CTN_WT$=_CUR.CTN_WT$ OR CTN_WT$=_CUR.CTN_WT$ THEN GOTO *NEXT ELSE IF _ORIG.CTN_WT$=CTN_WT$ THEN _CHG2$=_CHG2$+SEP+MSG("CTN_WT")+" = "+_CUR.CTN_WT$,_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_WT")+" = "+_CUR.CTN_WT$
15450 IF _ORIG.COST_CODE$=_CUR.COST_CODE$ OR COST_CODE$=_CUR.COST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.COST_CODE$=COST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("COST_CODE")+" = "+_CUR.COST_CODE$,_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_CODE")+" = "+_CUR.COST_CODE$
15460 IF _ORIG.ITEM_CLASS$=_CUR.ITEM_CLASS$ OR ITEM_CLASS$=_CUR.ITEM_CLASS$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CLASS$=ITEM_CLASS$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CLASS")+" = "+_CUR.ITEM_CLASS$,_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CLASS")+" = "+_CUR.ITEM_CLASS$
15470 IF _ORIG.WHSE_CODE_PKLIST$=_CUR.WHSE_CODE_PKLIST$ OR WHSE_CODE_PKLIST$=_CUR.WHSE_CODE_PKLIST$ THEN GOTO *NEXT ELSE IF _ORIG.WHSE_CODE_PKLIST$=WHSE_CODE_PKLIST$ THEN _CHG2$=_CHG2$+SEP+MSG("WHSE_C_P")+" = "+_CUR.WHSE_CODE_PKLIST$,_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WHSE_C_P")+" = "+_CUR.WHSE_CODE_PKLIST$
15480 IF _ORIG.PO_LINE_RCV_COMP$=_CUR.PO_LINE_RCV_COMP$ OR PO_LINE_RCV_COMP$=_CUR.PO_LINE_RCV_COMP$ THEN GOTO *NEXT ELSE IF _ORIG.PO_LINE_RCV_COMP$=PO_LINE_RCV_COMP$ THEN _CHG2$=_CHG2$+SEP+MSG("P_L_R_C")+" = "+_CUR.PO_LINE_RCV_COMP$,_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("P_L_R_C")+" = "+_CUR.PO_LINE_RCV_COMP$
15490 IF _ORIG.CTN_LBL_CODE_2ND$=_CUR.CTN_LBL_CODE_2ND$ OR CTN_LBL_CODE_2ND$=_CUR.CTN_LBL_CODE_2ND$ THEN GOTO *NEXT ELSE IF _ORIG.CTN_LBL_CODE_2ND$=CTN_LBL_CODE_2ND$ THEN _CHG2$=_CHG2$+SEP+MSG("CTN_L_C_2")+" = "+_CUR.CTN_LBL_CODE_2ND$,_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_L_C_2")+" = "+_CUR.CTN_LBL_CODE_2ND$
15500 IF _ORIG.QUOTE_DIV$=_CUR.QUOTE_DIV$ OR QUOTE_DIV$=_CUR.QUOTE_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.QUOTE_DIV$=QUOTE_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("QUOTE_DIV")+" = "+_CUR.QUOTE_DIV$,_CHG_VAR$(48,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QUOTE_DIV")+" = "+_CUR.QUOTE_DIV$
15510 IF _ORIG.QUOTE_NUM$=_CUR.QUOTE_NUM$ OR QUOTE_NUM$=_CUR.QUOTE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.QUOTE_NUM$=QUOTE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("QUOTE_NUM")+" = "+_CUR.QUOTE_NUM$,_CHG_VAR$(49,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QUOTE_NUM")+" = "+_CUR.QUOTE_NUM$
15520 IF _ORIG.OPEN_QTY=_CUR.OPEN_QTY OR OPEN_QTY=_CUR.OPEN_QTY THEN GOTO *NEXT ELSE IF _ORIG.OPEN_QTY=OPEN_QTY THEN _CHG2$=_CHG2$+SEP+MSG("OPEN_QTY")+" = "+STR(_CUR.OPEN_QTY),_CHG_VAR$(50,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OPEN_QTY")+" = "+STR(_CUR.OPEN_QTY)
15530 IF _ORIG.UNIT_COST=_CUR.UNIT_COST OR UNIT_COST=_CUR.UNIT_COST THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST=UNIT_COST THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_COST")+" = "+STR(_CUR.UNIT_COST),_CHG_VAR$(51,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_COST")+" = "+STR(_CUR.UNIT_COST)
15540 IF _ORIG.COST_QTY_PER=_CUR.COST_QTY_PER OR COST_QTY_PER=_CUR.COST_QTY_PER THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_PER=COST_QTY_PER THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_PUM")+" = "+STR(_CUR.COST_QTY_PER),_CHG_VAR$(52,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_PUM")+" = "+STR(_CUR.COST_QTY_PER)
15550 IF _ORIG.COST_EXT=_CUR.COST_EXT OR COST_EXT=_CUR.COST_EXT THEN GOTO *NEXT ELSE IF _ORIG.COST_EXT=COST_EXT THEN _CHG2$=_CHG2$+SEP+MSG("COST_EXT")+" = "+STR(_CUR.COST_EXT),_CHG_VAR$(53,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_EXT")+" = "+STR(_CUR.COST_EXT)
15560 IF _ORIG.UNIT_SELL_PRICE=_CUR.UNIT_SELL_PRICE OR UNIT_SELL_PRICE=_CUR.UNIT_SELL_PRICE THEN GOTO *NEXT ELSE IF _ORIG.UNIT_SELL_PRICE=UNIT_SELL_PRICE THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_S_P")+" = "+STR(_CUR.UNIT_SELL_PRICE),_CHG_VAR$(54,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_S_P")+" = "+STR(_CUR.UNIT_SELL_PRICE)
15570 IF _ORIG.QTY_IN_SELL_UM=_CUR.QTY_IN_SELL_UM OR QTY_IN_SELL_UM=_CUR.QTY_IN_SELL_UM THEN GOTO *NEXT ELSE IF _ORIG.QTY_IN_SELL_UM=QTY_IN_SELL_UM THEN _CHG2$=_CHG2$+SEP+MSG("QTY_I_S_UM")+" = "+STR(_CUR.QTY_IN_SELL_UM),_CHG_VAR$(55,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_I_S_UM")+" = "+STR(_CUR.QTY_IN_SELL_UM)
15580 IF _ORIG.SELL_PRICE_EXT=_CUR.SELL_PRICE_EXT OR SELL_PRICE_EXT=_CUR.SELL_PRICE_EXT THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_EXT=SELL_PRICE_EXT THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_E")+" = "+STR(_CUR.SELL_PRICE_EXT),_CHG_VAR$(56,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_E")+" = "+STR(_CUR.SELL_PRICE_EXT)
15590 IF _ORIG.QTY_UNBILLED_SHIP=_CUR.QTY_UNBILLED_SHIP OR QTY_UNBILLED_SHIP=_CUR.QTY_UNBILLED_SHIP THEN GOTO *NEXT ELSE IF _ORIG.QTY_UNBILLED_SHIP=QTY_UNBILLED_SHIP THEN _CHG2$=_CHG2$+SEP+MSG("QTY_U_S")+" = "+STR(_CUR.QTY_UNBILLED_SHIP),_CHG_VAR$(57,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_U_S")+" = "+STR(_CUR.QTY_UNBILLED_SHIP)
15600 IF _ORIG.QTY_BO_RCV_FS3=_CUR.QTY_BO_RCV_FS3 OR QTY_BO_RCV_FS3=_CUR.QTY_BO_RCV_FS3 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BO_RCV_FS3=QTY_BO_RCV_FS3 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_R_F")+" = "+STR(_CUR.QTY_BO_RCV_FS3),_CHG_VAR$(58,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_R_F")+" = "+STR(_CUR.QTY_BO_RCV_FS3)
15610 IF _ORIG.NUM_OF_CTN_LBL_PRNT=_CUR.NUM_OF_CTN_LBL_PRNT OR NUM_OF_CTN_LBL_PRNT=_CUR.NUM_OF_CTN_LBL_PRNT THEN GOTO *NEXT ELSE IF _ORIG.NUM_OF_CTN_LBL_PRNT=NUM_OF_CTN_LBL_PRNT THEN _CHG2$=_CHG2$+SEP+MSG("N_O_C_L_P")+" = "+STR(_CUR.NUM_OF_CTN_LBL_PRNT),_CHG_VAR$(59,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("N_O_C_L_P")+" = "+STR(_CUR.NUM_OF_CTN_LBL_PRNT)
15620 IF _ORIG.ORIG_QTY_ORDERED=_CUR.ORIG_QTY_ORDERED OR ORIG_QTY_ORDERED=_CUR.ORIG_QTY_ORDERED THEN GOTO *NEXT ELSE IF _ORIG.ORIG_QTY_ORDERED=ORIG_QTY_ORDERED THEN _CHG2$=_CHG2$+SEP+MSG("ORIG_Q_O")+" = "+STR(_CUR.ORIG_QTY_ORDERED),_CHG_VAR$(60,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORIG_Q_O")+" = "+STR(_CUR.ORIG_QTY_ORDERED)
15630 IF _ORIG.FIND_FEE_PRCNT=_CUR.FIND_FEE_PRCNT OR FIND_FEE_PRCNT=_CUR.FIND_FEE_PRCNT THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_PRCNT=FIND_FEE_PRCNT THEN _CHG2$=_CHG2$+SEP+MSG("FIND_F_P")+" = "+STR(_CUR.FIND_FEE_PRCNT),_CHG_VAR$(61,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIND_F_P")+" = "+STR(_CUR.FIND_FEE_PRCNT)
15640 IF _ORIG.CTN_PACK=_CUR.CTN_PACK OR CTN_PACK=_CUR.CTN_PACK THEN GOTO *NEXT ELSE IF _ORIG.CTN_PACK=CTN_PACK THEN _CHG2$=_CHG2$+SEP+MSG("CTN_PACK")+" = "+STR(_CUR.CTN_PACK),_CHG_VAR$(62,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_PACK")+" = "+STR(_CUR.CTN_PACK)
15650 IF _ORIG.COMBO_QTY=_CUR.COMBO_QTY OR COMBO_QTY=_CUR.COMBO_QTY THEN GOTO *NEXT ELSE IF _ORIG.COMBO_QTY=COMBO_QTY THEN _CHG2$=_CHG2$+SEP+MSG("COMBO_QTY")+" = "+STR(_CUR.COMBO_QTY),_CHG_VAR$(63,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMBO_QTY")+" = "+STR(_CUR.COMBO_QTY)
15660 IF _ORIG.QTY_INV_TO_DATE=_CUR.QTY_INV_TO_DATE OR QTY_INV_TO_DATE=_CUR.QTY_INV_TO_DATE THEN GOTO *NEXT ELSE IF _ORIG.QTY_INV_TO_DATE=QTY_INV_TO_DATE THEN _CHG2$=_CHG2$+SEP+MSG("QTY_I_T_D")+" = "+STR(_CUR.QTY_INV_TO_DATE),_CHG_VAR$(64,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_I_T_D")+" = "+STR(_CUR.QTY_INV_TO_DATE)
15670 IF _ORIG.UNBILL_SHIP_UNIT_CST=_CUR.UNBILL_SHIP_UNIT_CST OR UNBILL_SHIP_UNIT_CST=_CUR.UNBILL_SHIP_UNIT_CST THEN GOTO *NEXT ELSE IF _ORIG.UNBILL_SHIP_UNIT_CST=UNBILL_SHIP_UNIT_CST THEN _CHG2$=_CHG2$+SEP+MSG("UNBI_S_U_C")+" = "+STR(_CUR.UNBILL_SHIP_UNIT_CST),_CHG_VAR$(65,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNBI_S_U_C")+" = "+STR(_CUR.UNBILL_SHIP_UNIT_CST)
15680 IF _ORIG.INVD_TO_DATE_QTY=_CUR.INVD_TO_DATE_QTY OR INVD_TO_DATE_QTY=_CUR.INVD_TO_DATE_QTY THEN GOTO *NEXT ELSE IF _ORIG.INVD_TO_DATE_QTY=INVD_TO_DATE_QTY THEN _CHG2$=_CHG2$+SEP+MSG("INVD_T_D_Q")+" = "+STR(_CUR.INVD_TO_DATE_QTY),_CHG_VAR$(66,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INVD_T_D_Q")+" = "+STR(_CUR.INVD_TO_DATE_QTY)
15690 IF _ORIG.FRT_RETURNS_FROM_LOT=_CUR.FRT_RETURNS_FROM_LOT OR FRT_RETURNS_FROM_LOT=_CUR.FRT_RETURNS_FROM_LOT THEN GOTO *NEXT ELSE IF _ORIG.FRT_RETURNS_FROM_LOT=FRT_RETURNS_FROM_LOT THEN _CHG2$=_CHG2$+SEP+MSG("FRT_R_F_L")+" = "+STR(_CUR.FRT_RETURNS_FROM_LOT),_CHG_VAR$(67,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRT_R_F_L")+" = "+STR(_CUR.FRT_RETURNS_FROM_LOT)
15700 IF _ORIG.REV_UNIT_SELL_PRICE=_CUR.REV_UNIT_SELL_PRICE OR REV_UNIT_SELL_PRICE=_CUR.REV_UNIT_SELL_PRICE THEN GOTO *NEXT ELSE IF _ORIG.REV_UNIT_SELL_PRICE=REV_UNIT_SELL_PRICE THEN _CHG2$=_CHG2$+SEP+MSG("REV_U_S_P")+" = "+STR(_CUR.REV_UNIT_SELL_PRICE),_CHG_VAR$(68,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REV_U_S_P")+" = "+STR(_CUR.REV_UNIT_SELL_PRICE)
15710 IF _ORIG.UNBILLED_SHIP_EXT=_CUR.UNBILLED_SHIP_EXT OR UNBILLED_SHIP_EXT=_CUR.UNBILLED_SHIP_EXT THEN GOTO *NEXT ELSE IF _ORIG.UNBILLED_SHIP_EXT=UNBILLED_SHIP_EXT THEN _CHG2$=_CHG2$+SEP+MSG("UNBI_S_E")+" = "+STR(_CUR.UNBILLED_SHIP_EXT),_CHG_VAR$(69,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNBI_S_E")+" = "+STR(_CUR.UNBILLED_SHIP_EXT)
15720 IF _ORIG.INVD_TO_DATE_EXTCST=_CUR.INVD_TO_DATE_EXTCST OR INVD_TO_DATE_EXTCST=_CUR.INVD_TO_DATE_EXTCST THEN GOTO *NEXT ELSE IF _ORIG.INVD_TO_DATE_EXTCST=INVD_TO_DATE_EXTCST THEN _CHG2$=_CHG2$+SEP+MSG("INVD_T_D_E")+" = "+STR(_CUR.INVD_TO_DATE_EXTCST),_CHG_VAR$(70,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INVD_T_D_E")+" = "+STR(_CUR.INVD_TO_DATE_EXTCST)
15730 IF _ORIG.INVD_TO_DATE_EXT=_CUR.INVD_TO_DATE_EXT OR INVD_TO_DATE_EXT=_CUR.INVD_TO_DATE_EXT THEN GOTO *NEXT ELSE IF _ORIG.INVD_TO_DATE_EXT=INVD_TO_DATE_EXT THEN _CHG2$=_CHG2$+SEP+MSG("INV_T_D_EX")+" = "+STR(_CUR.INVD_TO_DATE_EXT),_CHG_VAR$(71,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_T_D_EX")+" = "+STR(_CUR.INVD_TO_DATE_EXT)
15740 IF _ORIG.UNIT_LIST_PRICE=_CUR.UNIT_LIST_PRICE OR UNIT_LIST_PRICE=_CUR.UNIT_LIST_PRICE THEN GOTO *NEXT ELSE IF _ORIG.UNIT_LIST_PRICE=UNIT_LIST_PRICE THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_L_P")+" = "+STR(_CUR.UNIT_LIST_PRICE),_CHG_VAR$(72,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_L_P")+" = "+STR(_CUR.UNIT_LIST_PRICE)
15750 IF _ORIG.LINE_ITEM_DISC_PRCNT=_CUR.LINE_ITEM_DISC_PRCNT OR LINE_ITEM_DISC_PRCNT=_CUR.LINE_ITEM_DISC_PRCNT THEN GOTO *NEXT ELSE IF _ORIG.LINE_ITEM_DISC_PRCNT=LINE_ITEM_DISC_PRCNT THEN _CHG2$=_CHG2$+SEP+MSG("LINE_I_D_P")+" = "+STR(_CUR.LINE_ITEM_DISC_PRCNT),_CHG_VAR$(73,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_I_D_P")+" = "+STR(_CUR.LINE_ITEM_DISC_PRCNT)
15760 IF _ORIG.NUM_OF_CART_LBLS_2=_CUR.NUM_OF_CART_LBLS_2 OR NUM_OF_CART_LBLS_2=_CUR.NUM_OF_CART_LBLS_2 THEN GOTO *NEXT ELSE IF _ORIG.NUM_OF_CART_LBLS_2=NUM_OF_CART_LBLS_2 THEN _CHG2$=_CHG2$+SEP+MSG("N_O_C_L_2")+" = "+STR(_CUR.NUM_OF_CART_LBLS_2),_CHG_VAR$(74,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("N_O_C_L_2")+" = "+STR(_CUR.NUM_OF_CART_LBLS_2)
15770 IF _ORIG.FS2_UNUSED_1=_CUR.FS2_UNUSED_1 OR FS2_UNUSED_1=_CUR.FS2_UNUSED_1 THEN GOTO *NEXT ELSE IF _ORIG.FS2_UNUSED_1=FS2_UNUSED_1 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_1),_CHG_VAR$(75,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_1)
15780 IF _ORIG.FS2_UNUSED_2=_CUR.FS2_UNUSED_2 OR FS2_UNUSED_2=_CUR.FS2_UNUSED_2 THEN GOTO *NEXT ELSE IF _ORIG.FS2_UNUSED_2=FS2_UNUSED_2 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_2),_CHG_VAR$(76,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_2)
15790 IF _ORIG.FS2_UNUSED_3=_CUR.FS2_UNUSED_3 OR FS2_UNUSED_3=_CUR.FS2_UNUSED_3 THEN GOTO *NEXT ELSE IF _ORIG.FS2_UNUSED_3=FS2_UNUSED_3 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_3),_CHG_VAR$(77,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_3)
15800 IF _ORIG.FS2_UNUSED_4=_CUR.FS2_UNUSED_4 OR FS2_UNUSED_4=_CUR.FS2_UNUSED_4 THEN GOTO *NEXT ELSE IF _ORIG.FS2_UNUSED_4=FS2_UNUSED_4 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_4),_CHG_VAR$(78,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_4)
15810 IF _ORIG.FS2_UNUSED_5=_CUR.FS2_UNUSED_5 OR FS2_UNUSED_5=_CUR.FS2_UNUSED_5 THEN GOTO *NEXT ELSE IF _ORIG.FS2_UNUSED_5=FS2_UNUSED_5 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_5),_CHG_VAR$(79,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS2_UNUSED_5)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN CTN_LBL_FORMAT_CD$=_CUR.CTN_LBL_FORMAT_CD$
16030 IF _CHG_VAR$(2,1)="Y" THEN LOT_INV_ORDER_LINE$=_CUR.LOT_INV_ORDER_LINE$
16040 IF _CHG_VAR$(3,1)="Y" THEN ORDER_LINE_COMPLETE$=_CUR.ORDER_LINE_COMPLETE$
16050 IF _CHG_VAR$(4,1)="Y" THEN FIXED_PRICE$=_CUR.FIXED_PRICE$
16060 IF _CHG_VAR$(5,1)="Y" THEN CSTM_ITEM_LINE_TYPE$=_CUR.CSTM_ITEM_LINE_TYPE$
16070 IF _CHG_VAR$(6,1)="Y" THEN ORDER_LINE_NUM$=_CUR.ORDER_LINE_NUM$
16080 IF _CHG_VAR$(7,1)="Y" THEN PO_CODE$=_CUR.PO_CODE$
16090 IF _CHG_VAR$(8,1)="Y" THEN WHSE$=_CUR.WHSE$
16100 IF _CHG_VAR$(9,1)="Y" THEN CUSTOM$=_CUR.CUSTOM$
16110 IF _CHG_VAR$(10,1)="Y" THEN QUOTE_LINE_NUM$=_CUR.QUOTE_LINE_NUM$
16120 IF _CHG_VAR$(11,1)="Y" THEN SPECIAL_SHIPPING$=_CUR.SPECIAL_SHIPPING$
16130 IF _CHG_VAR$(12,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16140 IF _CHG_VAR$(13,1)="Y" THEN PROD_CODE$=_CUR.PROD_CODE$
16150 IF _CHG_VAR$(14,1)="Y" THEN LEFT_RIGHT$=_CUR.LEFT_RIGHT$
16160 IF _CHG_VAR$(15,1)="Y" THEN TOP_BOTTOM$=_CUR.TOP_BOTTOM$
16170 IF _CHG_VAR$(16,1)="Y" THEN PLYS$=_CUR.PLYS$
16180 IF _CHG_VAR$(17,1)="Y" THEN TF_DESC$=_CUR.TF_DESC$
16190 IF _CHG_VAR$(18,1)="Y" THEN PLANT_CODE$=_CUR.PLANT_CODE$
16200 IF _CHG_VAR$(19,1)="Y" THEN VEND_DIV$=_CUR.VEND_DIV$
16210 IF _CHG_VAR$(20,1)="Y" THEN VEND_CODE$=_CUR.VEND_CODE$
16220 IF _CHG_VAR$(21,1)="Y" THEN STARTING_NUM$=_CUR.STARTING_NUM$
16230 IF _CHG_VAR$(22,1)="Y" THEN RO_DATE$=_CUR.RO_DATE$
16240 IF _CHG_VAR$(23,1)="Y" THEN SPECS_REQ$=_CUR.SPECS_REQ$
16250 IF _CHG_VAR$(24,1)="Y" THEN COST_UM$=_CUR.COST_UM$
16260 IF _CHG_VAR$(25,1)="Y" THEN SELL_UM$=_CUR.SELL_UM$
16270 IF _CHG_VAR$(26,1)="Y" THEN COMM_CODE$=_CUR.COMM_CODE$
16280 IF _CHG_VAR$(27,1)="Y" THEN SKIP_ORDER_HIST$=_CUR.SKIP_ORDER_HIST$
16290 IF _CHG_VAR$(28,1)="Y" THEN RUSH_CHARGE$=_CUR.RUSH_CHARGE$
16300 IF _CHG_VAR$(29,1)="Y" THEN FIND_FEE$=_CUR.FIND_FEE$
16310 IF _CHG_VAR$(30,1)="Y" THEN IS_LINE_TAXABLE$=_CUR.IS_LINE_TAXABLE$
16320 IF _CHG_VAR$(31,1)="Y" THEN FIND_FEE_VEND_DIV$=_CUR.FIND_FEE_VEND_DIV$
16330 IF _CHG_VAR$(32,1)="Y" THEN FIND_FEE_VEND_CODE$=_CUR.FIND_FEE_VEND_CODE$
16340 IF _CHG_VAR$(33,1)="Y" THEN ORDER_DIV$=_CUR.ORDER_DIV$
16350 IF _CHG_VAR$(34,1)="Y" THEN ORDER_NUM$=_CUR.ORDER_NUM$
16360 IF _CHG_VAR$(35,1)="Y" THEN LINE_TYPE$=_CUR.LINE_TYPE$
16370 IF _CHG_VAR$(36,1)="Y" THEN PRINT_FLAGS$=_CUR.PRINT_FLAGS$
16380 IF _CHG_VAR$(37,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16390 IF _CHG_VAR$(38,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16400 IF _CHG_VAR$(39,1)="Y" THEN JOB_NUM$=_CUR.JOB_NUM$
16410 IF _CHG_VAR$(40,1)="Y" THEN JOB_DATE$=_CUR.JOB_DATE$
16420 IF _CHG_VAR$(41,1)="Y" THEN ENDING_NUM$=_CUR.ENDING_NUM$
16430 IF _CHG_VAR$(42,1)="Y" THEN CTN_WT$=_CUR.CTN_WT$
16440 IF _CHG_VAR$(43,1)="Y" THEN COST_CODE$=_CUR.COST_CODE$
16450 IF _CHG_VAR$(44,1)="Y" THEN ITEM_CLASS$=_CUR.ITEM_CLASS$
16460 IF _CHG_VAR$(45,1)="Y" THEN WHSE_CODE_PKLIST$=_CUR.WHSE_CODE_PKLIST$
16470 IF _CHG_VAR$(46,1)="Y" THEN PO_LINE_RCV_COMP$=_CUR.PO_LINE_RCV_COMP$
16480 IF _CHG_VAR$(47,1)="Y" THEN CTN_LBL_CODE_2ND$=_CUR.CTN_LBL_CODE_2ND$
16490 IF _CHG_VAR$(48,1)="Y" THEN QUOTE_DIV$=_CUR.QUOTE_DIV$
16500 IF _CHG_VAR$(49,1)="Y" THEN QUOTE_NUM$=_CUR.QUOTE_NUM$
16510 IF _CHG_VAR$(50,1)="Y" THEN OPEN_QTY=_CUR.OPEN_QTY
16520 IF _CHG_VAR$(51,1)="Y" THEN UNIT_COST=_CUR.UNIT_COST
16530 IF _CHG_VAR$(52,1)="Y" THEN COST_QTY_PER=_CUR.COST_QTY_PER
16540 IF _CHG_VAR$(53,1)="Y" THEN COST_EXT=_CUR.COST_EXT
16550 IF _CHG_VAR$(54,1)="Y" THEN UNIT_SELL_PRICE=_CUR.UNIT_SELL_PRICE
16560 IF _CHG_VAR$(55,1)="Y" THEN QTY_IN_SELL_UM=_CUR.QTY_IN_SELL_UM
16570 IF _CHG_VAR$(56,1)="Y" THEN SELL_PRICE_EXT=_CUR.SELL_PRICE_EXT
16580 IF _CHG_VAR$(57,1)="Y" THEN QTY_UNBILLED_SHIP=_CUR.QTY_UNBILLED_SHIP
16590 IF _CHG_VAR$(58,1)="Y" THEN QTY_BO_RCV_FS3=_CUR.QTY_BO_RCV_FS3
16600 IF _CHG_VAR$(59,1)="Y" THEN NUM_OF_CTN_LBL_PRNT=_CUR.NUM_OF_CTN_LBL_PRNT
16610 IF _CHG_VAR$(60,1)="Y" THEN ORIG_QTY_ORDERED=_CUR.ORIG_QTY_ORDERED
16620 IF _CHG_VAR$(61,1)="Y" THEN FIND_FEE_PRCNT=_CUR.FIND_FEE_PRCNT
16630 IF _CHG_VAR$(62,1)="Y" THEN CTN_PACK=_CUR.CTN_PACK
16640 IF _CHG_VAR$(63,1)="Y" THEN COMBO_QTY=_CUR.COMBO_QTY
16650 IF _CHG_VAR$(64,1)="Y" THEN QTY_INV_TO_DATE=_CUR.QTY_INV_TO_DATE
16660 IF _CHG_VAR$(65,1)="Y" THEN UNBILL_SHIP_UNIT_CST=_CUR.UNBILL_SHIP_UNIT_CST
16670 IF _CHG_VAR$(66,1)="Y" THEN INVD_TO_DATE_QTY=_CUR.INVD_TO_DATE_QTY
16680 IF _CHG_VAR$(67,1)="Y" THEN FRT_RETURNS_FROM_LOT=_CUR.FRT_RETURNS_FROM_LOT
16690 IF _CHG_VAR$(68,1)="Y" THEN REV_UNIT_SELL_PRICE=_CUR.REV_UNIT_SELL_PRICE
16700 IF _CHG_VAR$(69,1)="Y" THEN UNBILLED_SHIP_EXT=_CUR.UNBILLED_SHIP_EXT
16710 IF _CHG_VAR$(70,1)="Y" THEN INVD_TO_DATE_EXTCST=_CUR.INVD_TO_DATE_EXTCST
16720 IF _CHG_VAR$(71,1)="Y" THEN INVD_TO_DATE_EXT=_CUR.INVD_TO_DATE_EXT
16730 IF _CHG_VAR$(72,1)="Y" THEN UNIT_LIST_PRICE=_CUR.UNIT_LIST_PRICE
16740 IF _CHG_VAR$(73,1)="Y" THEN LINE_ITEM_DISC_PRCNT=_CUR.LINE_ITEM_DISC_PRCNT
16750 IF _CHG_VAR$(74,1)="Y" THEN NUM_OF_CART_LBLS_2=_CUR.NUM_OF_CART_LBLS_2
16760 IF _CHG_VAR$(75,1)="Y" THEN FS2_UNUSED_1=_CUR.FS2_UNUSED_1
16770 IF _CHG_VAR$(76,1)="Y" THEN FS2_UNUSED_2=_CUR.FS2_UNUSED_2
16780 IF _CHG_VAR$(77,1)="Y" THEN FS2_UNUSED_3=_CUR.FS2_UNUSED_3
16790 IF _CHG_VAR$(78,1)="Y" THEN FS2_UNUSED_4=_CUR.FS2_UNUSED_4
16800 IF _CHG_VAR$(79,1)="Y" THEN FS2_UNUSED_5=_CUR.FS2_UNUSED_5
16990 RETURN 
17000 CHECK_FS2:
17010 READ (_FS2,KNO=1,KEY=_KEY1$,DOM=*NEXT)
17020 _KEYFS2$=KEY(_FS2,END=9999); READ (_FS2)
17030 IF _KEYFS2$(1,20)<>_KEY1$(1,20) THEN GOTO 9999
17040 READ DATA FROM _KEYFS2$ TO IOL=IOL(__FS2:KEY,ERR=*NEXT) ! load fields from external key
17050 IDX=IDX+1,REC_KEY$=REC_KEY$+_KEYFS2$; LIST_BOX LOAD LB_LINE.CTL,IDX,ORDER_DIV$+"-"+ORDER_NUM$+SEP+ORDER_LINE_NUM$+SEP+RP_DATE$+SEP+STR(OPEN_QTY:"###,###.00-")+SEP+STR(UNIT_SELL_PRICE:"###,###.00-")+SEP+STR(UNIT_COST:"###,###.00-")+SEP,ERR=*NEXT
17100 CHECK_DS:
17110 _KEYDS$=_KEY$(25)
17120 READ (_FIL_NO1,KNO=1,KEY=_KEYDS$,DOM=*RETURN)
17130 READ DATA FROM _KEYDS$ TO IOL=IOL(_FIL_NO1:KEY,ERR=*NEXT) ! load fields from external key
20000 SEL_LINE:
20010 LIST_BOX READ LB_LINE.CTL,IDX,ERR=*NEXT
20020 LIST_BOX FIND LB_LINE.CTL,IDX,REC$,ERR=*PROCEED; REC$=REC$(POS(SEP=REC$)+1),REC$=REC$(POS(SEP=REC$)+1)
20023 IF HTA(REC$(1,6))="1B53461B4236" THEN REC$=REC$(7)
20024 ORD$=REC$(1,POS(SEP=REC$)-1),XXX=POS("-"=ORD$); IF XXX<>0 THEN ORD$=ORD$(1,XXX-1)+ORD$(XXX+1) END_IF ; ORD$=PAD(ORD$,8,0,"0")
20025 IDXX=POS(ORD$=REC_KEY$),IDX=INT((IDXX-20)/35)+1
20030 ARG_1$=REC_KEY$(IDX*35-34,35),ARG_1$=ARG_1$(25)
20040 PROCESS "ICGMAJ.1","../ICG/IC.EN",ARG_1$,_FS1$,_AR1$
20045 NEXT_ID=LB_LINE.CTL
20050 RETURN 
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56001 REM "211822-On dev can no longer look at open orders for item ICGMAJ displays blank customer number 
