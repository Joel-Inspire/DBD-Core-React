0010 REM "Physical Inventory Setup  <ICGPIA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 10/21/11 - 12.920833 - crg - SSP# 240206
0037 REM "240206-WMS: WMS Inventory Count process reworked.                  
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ICGPIA","../ICG/IC.EN"
0060 EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0095 INIT:
0100 SETERR 9000
0110 X0$="IC2PIA",X1$="Physical Inventory Setup",K9$="",K9=0
0120 DIM Z0$(80,"-"),S$(30)
0125 NUM$="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
0130 K0=24,K1=2
0135 C9=-1
0140 M0$="##,###,##0-",M1$="###,###.00-",M2$="##,###,###.00-"
0160 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
0165 DEF FND$(Z9$)=Z9$(3,2)+"/"+Z9$(5,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0175 DEF FNR$(Z8$)=Z8$(POS(" "<>Z8$))
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$(1),A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19]
0330 IOLIST C$
0340 IOLIST D$,STR(D[0]),D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9],D[10],D[11],D[12],D[13]
0370 IOLIST G$
0390 IOLIST E$,E[0],E[1]
0400 IOLIST L$,L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X IC1...  02O IC0...  03O FM0...  04L ICL...  05O IC6...  06O IC7...  07O AR1...  08O FMP...  09O ICF...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 FIND (Z[13],KEY=X3$(9,3)+"I/C")P0$
0540 IF P0$(54,1)="Y" THEN CALL "*WINGRP;SHOW",PIA.GRP$
0600 REM "
0625 DIM A$(46),A[10],B$(128),B[19],C$(53),D$(53),D[4],L9$(8),E$(21),E[1],L1$(2),L2$(10),L6$(1),L3$(2)
0630 L0=7,WL$=""
0700 READ (Z[4],END=0701); GOTO 8900
0720 IF P0$(44,1)="Y" THEN MSGBOX MSG("PIA_QUE1"),MSG("VERIFY"),"?,YESNO",OPT$; IF OPT$="YES" THEN PRINT 'DIALOGUE'(5,5,85,27,MSG("ICGPIA")),'CS'; CALL "IC2UT5",X3$,X4$,"",""; PRINT 'POP',
0730 ! MSGBOX MSG("PIA_QUE2"),MSG("VERIFY"),"?,YESNO",OPT$; IF OPT$="YES" THEN PRINT 'DIALOGUE'(5,5,85,27,MSG("ICGPIA")),'CS'; CALL "IC2UT8",X3$,X4$,"","A"; PRINT 'POP',
0731 MSGBOX MSG("PIA_QUE2"),MSG("VERIFY"),"?,YESNO",OPT$; IF OPT$="YES" THEN %YES=1; PROCESS "ICGUT8","../ICG/IC.EN",OPT$; %YES=0,OPT$="E"; EXIT 
0990 GOSUB 6000
1000 GOTO 2000
1800 REM "
1820 CALL "ZZPROM","0",X3$,Z,"","","V",X0; ON Z GOTO 2500,9900,2000
1830 GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2040 ON X0 GOTO 2150,2300,2450,2350,2400,2100,1800
2100 REM "no counts updated as zero on-hand quantity?
2110 CALL "ZZENTR","Y",A{ALL},L6$,X4$,X3$,38,13+L0,1,1,C0,"","{3"+X$,"","ICPVS20","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2110,2111
2140 GOTO 2020
2150 REM "Warehouse code set, WO100174
2155 X$="Enter warehouse code set (OPS,C4) or leave blank"
2156 RETURN 
2157 SEL_WHSE_SET:
2160 REFRESH_FLG=1,L3$=ML_WHSE_SET$; IF L3$="" THEN L3$="  " ! CALL "ZZENTR","SUZ",A{ALL},L3$,X4$,X3$,38,6+L0,1,2,C0,"","{3"+X$,"","IC2PIA04","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2160,2161
2165 IF L3$="  " THEN CALL "*WINGRP;ENABLE",NOLOC.GRP$; GOTO 2190 ELSE CALL "*WINGRP;DISABLE",NOLOC.GRP$; ML_LOC_FROM$="",ML_LOC_TO$="",ML_LOC_DESC1$="",ML_LOC_DESC2$="",REFRESH_FLG=1
2170 DIM WCS$(144); FIND (Z[8],KEY="eW"+L3$,DOM=*NEXT)WCS$; GOTO 2175
2171 ML_WHSE_SET$="",NEXT_ID=ML_WHSE_SET.CTL; RETURN 
2175 IF WCS$(35,1)="Y" THEN INCLUDE$="Y" ELSE INCLUDE$="N"
2180 WCS$=WCS$(36,108)
2182 FOR X=0 TO 11
2183 IF WCS$(1,1)<>" " THEN WL$=WL$+WCS$(1,4)
2184 IF X<>11 THEN WCS$=WCS$(10)
2185 NEXT X
2186 IF WL$="" THEN NEXT_ID=ML_WHSE_SET.CTL,ML_WHSE_SET$=""; EXIT 
2190 RETURN 
2300 REM "Location to print
2303 IF WL$>"" THEN GOTO 2020; REM "WO100174, using whse code set
2305 X$="(leave blank to combine all)"
2308 SEL_LOC:IF ML_LOC_FROM$<>"" THEN ML_LOC_FROM$=PAD(ML_LOC_FROM$,4,0,"0")
2310 REFRESH_FLG=1,L9$(1,4)=ML_LOC_FROM$ ! CALL "ZZENTR","SZ^",A{ALL},L9$,X4$,X3$,38,7+L0,1,4,C0,"","{3"+X$,"D"+S$(1,10),"IC2PVS08","FM0D","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2310,2311
2315 IF STP(L9$(1,4),3," ")="" THEN L9$(5,4)="    "; PRINT @(38,8+L0),L9$(5,4),@(44,8+L0),S$(1,30),
2320 DIM C$(50); IF L9$(1,4)<>"    " THEN FIND (Z[3],KEY="D"+S$(1,10)+L9$(1,4),DOM=NO_REC)IOL=0330
2325 ML_LOC_DESC1$=C$(16,35)
2340 RETURN 
2341 NO_REC: ML_LOC_FROM$="",ML_LOC_DESC1$="",NEXT_ID=ML_LOC_FROM.CTL; RETURN 
2350 REM "Cycle to print"
2351 SEL_CYCLE:
2352 X$="(leave blank to combine all)"
2360 L1$=ML_CYCLE$ ! CALL "ZZENTR","SZ^",A{ALL},L1$,X4$,X3$,38,9+L0,1,2,C0,"","{3"+X$,"","IC2PVS08","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2360,2361
2390 RETURN 
2400 REM "Count Date
2401 SEL_CUSTOMER:IF ML_CUSTOMER$<>"" THEN ML_CUSTOMER$=PAD(ML_CUSTOMER$,10,1,"0")
2405 IF L2$="" THEN DIM L2$(10)
2410 REFRESH_FLG=1,L2$=ML_CUSTOMER$ ! CALL "ZZENTR","AU^",A{ALL},L2$,X4$,X3$,38,10+L0,1,10,C0,"A/R","{3"+X$,"","IC2MAC12","AR1","",""; IF ABS(C0)>4 THEN GOSUB 6400; GOTO 2410
2430 DIM G$(200); IF L2$<>S$(1,10) THEN READ (Z[7],KEY=L2$,DOM=NO_CUSTOMER)IOL=0370
2435 ML_CUST_NAME$=G$(11,30) ! PRINT @(38,L0+11),G$(11,30),
2440 RETURN 
2442 NO_CUSTOMER: ML_CUSTOMER$="",ML_CUST_NAME$="",NEXT_ID=ML_CUSTOMER.CTL; RETURN 
2450 REM "Through location
2451 SEL_LOC_TO:IF ML_LOC_TO$<>"" THEN ML_LOC_TO$=PAD(ML_LOC_TO$,4,0,"0")
2452 IF WL$>"" THEN GOTO 2020; REM "WO100174, using whse code set
2453 IF STP(L9$(1,4),3," ")="" THEN GOTO 2020; REM "Don't need through location if doing all warehouses
2455 X$="(Leave blank if only one location)"
2460 REFRESH_FLG=1,L9$(5,4)=ML_LOC_TO$ ! CALL "ZZENTR","SZ",A{ALL},L9$,X4$,X3$,38,8+L0,5,4,C0,"","{3"+X$,"D"+S$(1,10),"IC2PIA02","FM0D","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON CO GOTO 2460,2461
2470 DIM C$(50); IF L9$(5,4)<>"    " THEN FIND (Z[3],KEY="D"+S$(1,10)+L9$(5,4),DOM=NO_REC_TO)IOL=0330
2475 ML_LOC_DESC2$=C$(16,35) ! PRINT @(44,8+L0),C$(16,30),
2490 RETURN 
2495 NO_REC_TO: ML_LOC_TO$="",ML_LOC_DESC2$="",NEXT_ID=ML_LOC_TO.CTL; RETURN 
2500 CALL "ZZPROM","9",X3$,Z,"","","",0; ON Z GOTO 2501,9900
3000 REM "Freeze Inventory & Build ICL"
3001 PROCEED:PRINT 'CURSOR'(1),; SET_FOCUS 0
3002 PRINT 'MESSAGE'('_BLUE'+'WHITE'+"<-----Checking Data----->"); WAIT 1
3003 SET_FOCUS 0; L2$=PAD(L2$,10," "),L1$=PAD(L1$,2," "),L9$=PAD(L9$,8," ")
3005 IF FN%FFN("IC6"+%C$)<0 THEN OPEN (Z(5))"IC6"+%C$ ! [205471]-changed FFN() to FN%FFN()
3010 READ (Z[5],KEY=L9$(1,4),DOM=3011)
3020 K$=KEY(Z[5],END=4000); READ (Z[5])
3025 PRINT 'MESSAGE'('_BLUE'+'WHITE'+"Checking Data..:"+A$(1,20)+"-"+A$(21,4)),; IF MOD(COUNT,5)=0 THEN SET_FOCUS 0
3027 IF WL$<>"" THEN IF POS(K$(1,4)=WL$,4)=0 THEN GOTO 3020; REM "WO100174
3030 IF L9$<>S$(1,8) THEN IF (STP(L9$(5,4),3," ")="" AND K$(1,4)<>L9$(1,4)) OR (L9$(5,4)<>S$(1,4) AND K$(1,4)>L9$(5,4)) THEN GOTO 4000
3032 IF L2$<>S$(1,10) THEN IF K$(8,10)<>L2$ THEN READ (Z[5],KEY=K$(1,17)+$FF$,DOM=3020)
3040 READ (Z[1],KEY=K$(8,20)+K$(1,4),DOM=3020)IOL=0310
3050 REM "CYCLE
3055 IF L1$="  " THEN GOTO 3070 ELSE IF A$(45,2)<>"  " THEN IF L1$<>A$(45,2) THEN GOTO 3020
3065 IF A$(45,2)<>L1$ THEN GOTO 3020
3070 FIND (Z[2],KEY=A$(1,20))IOL=0320
3072 EXTRACT (Z[1],KEY=K$(8,20)+K$(1,4))IOL=0310
3075 PRINT 'MESSAGE'('_RED'+'WHITE'+"Written........"+A$(1,20)+"-"+A$(21,4)),; COUNT=COUNT+1; IF MOD(COUNT,10)=0 THEN SET_FOCUS 0
3080 FIND (Z[13],KEY="U/M"+B$(124,4),DOM=3081)IOL=0390
3085 IF X3$(9,3)="027" THEN E$(20,1)="N"
3090 IF B$(112,1)="Y" THEN GOSUB 3400 ELSE GOSUB 3300
3095 GOTO 3020
3300 REM "Build ICL record from IC0 & IC1 records
3305 DIM D$(292),D[13]
3310 IF E$(20,1)<>"Y" THEN D$(121,4)=B$(124,4),D[2]=B[15] ELSE D$(121,4)="CASE",D[2]=B[19]
3315 D[4]=A[3]+A[4]-A[5]+A[6]
3320 IF A$(21,1)<>"9" THEN IF A[2]<>0 THEN D[0]=A[2] ELSE D[0]=B[18]
3325 D$(1,24)=A$(1,24),D$(100,10)=A$(35,10),D$(41,2)="00"
3326 D$(221,1)="N",D$(222,1)=L6$
3327 IF P0$(54,1)="Y" THEN DIM D9$(10) ELSE D9$=D$(100,10); REM 'CFM CHANGE TO IGNORE BIN LOCATION DURING PROCESSING OF PI
3330 WRITE (Z[4],KEY=D$(21,4)+D9$+D$(1,20)+D$(25,8))IOL=0340
3395 RETURN 
3400 REM "Build ICL records from lot detail file ICF
3405 DIM L[12]; N9=0,N10=0
3410 READ (Z[9],KEY=A$(1,24),DOM=3411)
3415 K1$=KEY(Z[9],END=3490)
3420 IF K1$(1,24)<>A$(1,24) THEN GOTO 3490
3425 EXTRACT (Z[9],KEY=K1$)IOL=0400
3430 N9X=N9; GOSUB 3700; REM "GET N9X$
3431 L$(232,2)=N9X$,N9=N9+1
3435 WRITE (Z[9])IOL=0400
3455 GOSUB 3600
3465 GOTO 3415
3490 REM "Done with ICF records
3495 RETURN 
3600 REM "Take ICF record convert to ICL and write out
3605 DIM D$(292),D[13]
3610 D$(1,220)=L$(1,220),D$(221,1)="Y",D$(110,11)="",D$(222,1)=L6$,D$(257,2)=L$(232,2)
3615 D$(285,4)=L$(263,4)
3616 D$(289,2)=L$(31,2) ! 240206
3620 FOR I=0 TO 6; D[I]=L[I]; NEXT I
3624 REM "adjust sign of cost and freight based on qty (for PI type lot handling)
3625 D[0]=D[0]*SGN(D[4]),D[1]=D[1]*SGN(D[4])
3627 REM "If PI lot, then set qty counted to the qty & flag as counted, 250159/240206 - Also do the same for committed orders
3628 IF NOT(NUL(L$(110,11))) THEN D[8]=D[4],D$(222,1)="Y",D$(110,11)=L$(110,11) ! Used to be just for "PI" type records, made to work for all committed orders
3630 D$(31,2)="00"; IF D$(21,1)="9" THEN D[0]=0
3635 N9X=N10; GOSUB 3700; REM "Get N9X$
3636 D$(31,2)=N9X$,N10=N10+1
3637 IF P0$(54,1)="Y" THEN DIM D9$(10) ELSE D9$=D$(100,10); REM 'CFM CHANGE TO IGNORE BIN LOCATION DURING PROCESSING OF PI
3640 WRITE (Z[4],KEY=D$(21,4)+D9$+D$(1,20)+D$(25,8),DOM=3635)IOL=0340
3645 RETURN 
3700 REM "Given N9X return N9X$, if N9X <100 then N9X=str N9X else N9X is composed of letters going from AA -> ZZ given approx 625 more entries for a total    somewhere near 725 total lots
3705 IF N9X<100 THEN N9X$=STR(N9X:"00"); GOTO 3745
3710 TMP=N9X-100; TMPX=INT(TMP/26),TMPY=MOD(TMP,26)
3715 N9X$=NUM$(TMPX+1,1)+NUM$(TMPY+1,1)
3745 RETURN 
4000 REM "EOJ"
4020 GOTO 9900
6000 REM "BACKGROUND
6002 GOTO 6190
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(0,4),"This program will 'freeze' the computer count for the quantity on-hand",'LF',"against which the physical count will be compared."
6030 PRINT @(0,7),"Also, the physical inventory count sheet file will be created in bin location",'LF',"sequence."
6060 PRINT @(30,9),"IMPORTANT--------->  Each time run, the",'LF',"program will reset the computer count against which the physical count",'LF',"variance will be computed and ultimately posted to the inventory file."
6075 PRINT @(18,6+L0),"Warehouse code set:",
6080 PRINT @(28,7+L0),"Location:",@(20,8+L0),"Through Location:",@(24,9+L0),"Cycle Number:",
6085 PRINT @(28,10+L0),"Customer:",
6090 PRINT @(0,12+L0),"If no count is entered for an item, should the physical count be",@(0,13+L0),"updated with a zero on-hand quantity?",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "FOREGROUND"
6210 PRINT (0,ERR=6211)'CF',
6213 PRINT @(38,6+L0),L3$,
6215 PRINT @(38,7+L0),L9$(1,4),@(38,8+L0),L9$(5,4),@(38,9+L0),L1$,
6220 IF L$>"" THEN PRINT @(38,8+L0),L$(1,4),
6290 RETURN 
6400 REM "WHOLE SCREEN
6405 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 GOSUB 6200
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
8900 REM "CLEAR FILE
8905 PROCESS "ICGPIA.1","../ICG/IC.EN",OPT$
8915 ! PRINT @(12,5),"You currently have entries in the Physical Inventory Files."
8916 ! PRINT @(12,7),"The CLEAR option will remove all previous entries which"
8917 ! PRINT @(12,9),"have not been updated!"
8920 S3=NUM(OPT$) ! CALL "ZZPROM","X0AP2CBA",X3$,S3,"","","",0
8930 ON S3 GOTO 8960,8940,9800
8940 ! PRINT 'CF',@(12,10),"Files now being cleared.",@(12,12),"Do not Interrupt!!",
8950 CALL "ZZINIT",STR(Z[4]:"00")+STR(Z[6]:"00")
8960 ! PRINT @(0,3),'CE',
8970 WRITE (Z[13],KEY="RFPHY")""
8990 GOTO 0701
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 REM "PROG FLOW
9710 IF U1$="" THEN REMOVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9730 RUN U1$(1,6)
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9901 PRINT 'CURSOR'(0),
9905 END_PROG: CMD_STR$="END",CMD_STR$="E"
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 RETURN 
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM Revision History
56010 REM SSP#189680 - Need sequence 2"
56012 REM "205471-Oracle - FFN usage in tf2g progs. to be replaced by FN%FFN  
