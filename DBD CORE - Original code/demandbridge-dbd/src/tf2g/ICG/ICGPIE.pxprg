0010 REM "Physical Count Entry <ICGPIE>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 12/29/17 - 12.531111 - tma - SSP# 294549
0037 REM "294549-Getting stuck in the Item Code field in Physical Inventory  
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ICGPIE","../ICG/IC.EN"
0060 EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0095 INIT:
0100 SETERR 9000
0105 PERFORM "ICGMAZ;SETUP_LIBRARY"; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$ ! SSP 207881
0110 X0$="IC2PIE",X1$="Physical Count Entry",K9$="",K9=0
0120 DIM Z0$(80,"-"),S$(40),S0$(80)
0130 K0=35,K1=4
0135 C9=-1
0140 M0$="##,###,###.0000-",M1$="##,##0-",Z2$="##,##0",Z1$="##,##0.00",M3$="#,###,##0-  ",M4$="###,###.00-"
0145 M2$=M0$(1,LEN(M0$)-1)+"+"
0160 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
0165 DEF FND$(Z9$)=Z9$(3,2)+"/"+Z9$(5,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
0175 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0180 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 REM "IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=00246)
0250 PRECISION 4; REM "ssp 103665
0270 DEF FNL(Z1,Z2,Z3)=Z1*Z2*(MOD(Z3+1,Z3+2)-SGN(Z3))
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0311 IOLIST A$(1),A[0],A[1],A[2],A[3],STR(A[4]),A[5],A[6],A[7],STR(A[8]),A[9],A[10],A[11],A[12]
0320 IOLIST B$
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19]
0340 IOLIST D$,D[0],D[1],D[2],D[3],D[4],D[5],D[6],D[7],D[8],D[9]
0375 IOLIST G5$,G5[0],G5[1]
0380 IOLIST L$,L[0],L[1],L[2],L[3],L[4],L[5],L[6]
0390 IOLIST E$,E[0],E[1]
0395 IOLIST F$,F[0],F[1]
0400 IOLIST F$,F[0],F[1]
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ICL...  02O FM0...  03O IC0...  04O IC1...  05O IC7...  06O ICF...  07O AR1...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0590 READ (Z[1],KEY=K9$,DOM=0591)
0595 READ (Z[13],KEY=X3$(9,3)+"I/C")P0$
0600 REM "
0680 GOSUB 6000
1000 REM "
1010 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1030 DIM B$(53),B[8],C$(139),C0$(46),C[19],D$(45),E$(21),E[1],D[9],F$(21),F[1],L$(270),L[6],G5[1]
1035 DIM A$(292),A[13]
1045 IF LEN(A1$)>=42 THEN A$(21,4)=A1$(1,4),A$(100,10)=A1$(5,10),A$(1,20)=A1$(15,20),A$(25,8)=A1$(35,8)
1060 GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1250,1400,1300,1450,1350,1500
1200 REM "Location
1201 IF C0=2 THEN GOTO 1210
1202 RETURN 
1205 IF LEN(A1$)>0 THEN A$(21,4)=A1$(1,4); GOTO 1212
1206 SEL_LOC:
1208 X$="Press the down arrow key to retreive the entry in the physical count file"
1210 REFRESH_FLG=1,ML_LOC$=PAD(ML_LOC$,4,0,"0"),A$(21,4)=ML_LOC$ ! CALL "ZZENTR","SZUX",A{ALL},A$,X4$,X3$,11,3,21,4,C0,"","{1"+X$,"D","IC2PIE00","FM0D","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1210,1211
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1220 FIND (Z[2],KEY="D"+S$(1,10)+A$(21,4),DOM=*NEXT)IOL=0320; ML_LOC_DESC$=B$(16,35); GOTO 1240
1225 ML_LOC$="",ML_LOC_DESC$="",NEXT_ID=ML_LOC.CTL ! PRINT @(24,3),B$(16,30),
1227 CHANGE_FLG=0
1240 RETURN 
1250 REM "Bin Location
1255 IF LEN(A1$)>4 THEN A$(100,10)=A1$(5,10); GOTO 1262
1257 Q$=A$(21,4)
1258 SEL_BIN:
1260 REFRESH_FLG=1,A$(100,10)=ML_BIN$ ! CALL "ZZENTR","SX",A{ALL},A$,X4$,X3$,11,4,100,10,C0,"","{2"+X$,Q$,"IC2PIE02","ICL","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1260,1261
1262 IF ABS(C0)=2 AND LEN(A1$)>0 THEN A1$=A1$(1,0)
1290 RETURN 
1300 REM "Item Code
1305 REM IF LEN(A1$)>14 THEN LET A$(1,20)=A1$(15,20); GOTO 01312
1307 A0=2
1308 X$="Press the down arrow key to retreive next entry in the physical count file"
1309 SEL_ITEM:; IF ML_ITEM$="" THEN GOTO *RETURN
1310 ! ML_ITEM$=STR(NUM(ML_ITEM$):"0000000",ERR=*NEXT) SSP 224710
1311 REFRESH_FLG=1,ML_ITEM$=PAD(ML_ITEM$,10,1," "),A$(11,10)=ML_ITEM$ ! CALL "ZZENTR","AUX",A{ALL},A$,X4$,X3$,11,6,11,10,C0,"ICE","{3"+X$,J$,"IC2PIE04","IC0","X",""; IF ABS(C0)=102 THEN J9=3,Q1$=J$,Z8$="IC2MAB"; RUN "ZZ2STP" ELSE IF ABS(C0)>4 THEN GOSUB 6400
1312 IF ABS(C0)=2 THEN IF LEN(A1$)>15 THEN A1$=A1$(1,14); GOTO 1120 ELSE GOTO 1120
1315 IF INT(ABS(C0))=3 THEN GOTO 6800
1320 FIND (Z[3],KEY=A$(1,20),DOM=NO_ITEM)IOL=0330
1321 H8$=C$; GOSUB 7750
1325 ML_ITEM_DESC$=H9$ ! PRINT @(24,6),S$,@(24,6),H9$,
1330 DIM D$(45),D[9]; FIND (Z[4],KEY=A$(1,20)+A$(21,4),DOM=1342)IOL=0340
1335 IF C$(112,1)<>"Y" THEN GOSUB 8000
1340 RETURN 
1342 D$(35,10)="{New}"; IF ABS(C0)<>2 THEN IF LEN(A1$)<=14 THEN MSGBOX "Item has no activity for this location!",MSG("WARNING"),"!,OK,TIM=5"; GOTO 1331
1343 GOTO 1331
1350 REM "Sequence
1352 SEL_SEQ: REFRESH_FLG=1,A$(31,2)=ML_SEQ$,X0=5
1353 IF C$(112,1)<>"Y" THEN A$(31,2)="",ML_SEQ$=""; GOTO 1390
1357 Q$=A$(21,4)+A$(100,10)+A$(1,20)+A$(25,6)
1360 ! CALL "ZZENTR","SUXZ",A{ALL},A$,X4$,X3$,11,8,31,2,C0,"","{2"+X$,Q$,"IC2PIE06","ICL","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1360,1361
1362 IF ABS(C0)=2 AND LEN(A1$)>14 THEN A1$=A1$(1,14)
1364 IF INT(ABS(C0))=3 THEN GOTO 6800
1365 IF C0<0 THEN C0=ABS(C0)
1366 REM IF C0<0 THEN IF -C0=1 THEN GOTO 06800 ELSE LET C0=ABS(C0)
1390 X0=5; GOTO 1120
1400 REM "Customer
1405 IF LEN(A1$)>14 THEN A$(1,10)=A1$(15,10); GOTO 1312
1410 SEL_CUST:; IF ML_CUST$<>"" THEN ML_CUST$=PAD(ML_CUST$,10,1,"0")
1420 REFRESH_FLG=1,A$(1,10)=ML_CUST$ ! CALL "ZZENTR","AXU",A{ALL},A$,X4$,X3$,11,5,1,10,C0,"A/R","{2"+X$,"","IC2PIE33","AR1","X",""; IF ABS(C0)=102 THEN J9=6,Q1$="",Z8$="AR2MAB"; RUN "ZZ2STP" ELSE IF ABS(C0)>4 THEN GOSUB 6400
1425 IF ABS(C0)=2 AND LEN(A1$)>5 THEN A1$=A1$(1,4)
1430 IF POS(" "<>A$(1,10))=0 THEN GOTO 1440
1432 FIND (Z[7],KEY=A$(1,10),DOM=*NEXT)C0$; ML_CUST_DESC$=C0$(11,35); GOTO *RETURN
1434 ML_CUST_DESC$="",NEXT_ID=ML_CUST.CTL,ML_CUST$=""
1440 RETURN 
1450 REM "Receipt date
1452 SEL_LOT_REC: A$(25,6)=ML_LOT_REC$,REFRESH_FLG=1
1455 IF C$(112,1)<>"Y" THEN A$(25,6)=""; ML_LOT_REC$="",REFRESH_FLG=1 ! PRINT @(11,7),S$(1,10),; GOTO 1120
1457 Q$=A$(1,24)
1460 ! CALL "ZZENTR","DX",A{ALL},A$,X4$,X3$,11,7,25,6,C0,"","{3"+X$,Q$,"IC2PIE34","ICF","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1460,1461
1490 RETURN 
1500 REM "
1505 Z9=-1,A2$="",A3$="",A4$="",A5$=""
1507 A$(31,2)=STR(NUM(A$(31,2)):"00") ! SSP243464 jdf
1510 A1$=A$(21,4)+A$(100,10)+A$(1,20)+A$(25,6)+A$(31,2); _KEY$=A1$ ! SSP 224710
1520 EXTRACT (Z[1],KEY=A1$,DOM=NEW_RECORD)IOL=0310
1522 IF ABS(INT(C0))=3 AND A$(110,2)="PI" THEN GOTO 6800
1525 Z9=1
1528 IF A$(222,1)="S" THEN GOSUB DISABLE_COUNTED ELSE GOSUB ENABLE_COUNTED
1530 FIND (Z[3],KEY=A$(1,20),DOM=1531)IOL=0330
1535 H8$=C$; GOSUB 7750
1540 ! PRINT @(24,6),S$,@(24,6),H9$,
1550 DIM C0$(46); FIND (Z[7],KEY=A$(1,10),DOM=1551)C0$
1560 GOSUB 6600
1570 GOSUB ENABLE_FIELDS
1590 GOTO 1700
1600 NEW_RECORD:
1605 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1610 MSGBOX _MSG_REC_MISS1$+A1$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1615 IF _YESNO$="YES" THEN GOSUB ENABLE_FIELDS ELSE GOSUB CLEAR_REC; GOTO *RETURN ! SSP246055 jdf
1620 ! CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 DIM A[13]; A$=A$(1,32)+DIM(67)+A$(100,10)+DIM(183) ! SSP246055 jdf
1650 IF C$(112,1)="Y" THEN GOSUB 3400 ELSE GOSUB 3300
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1792 GOSUB ASSIGN_LIB
1793 GOSUB CHECK_UOM; NEXT_ID=ML_PHY_COUNT.CTL ! SSP246055 jdf
1795 GOTO 1850
1800 REM "
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 EXTRACT (Z[1],KEY=A1$,DOM=1870)IOL=0310
1865 C9=1
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X1=1; IF A[4]=0 AND A[0]=0 AND A[8]=0 THEN X0=-1 ELSE IF POS(" "<>A$(121,4))=0 THEN X0=2 ELSE X0=6
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2040 ON X0 GOTO 2400,2200,2100,2750,2850,2800,2900,2250,2350,2300,2250,2350,2300,2250,1800
2100 REM "Inventory Tag
2107 IF A$(222,1)="S" THEN GOTO 2020
2110 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,22,12,235,12,C0,"","{3"+X$,"","IC2PIE09","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2110,2111
2140 GOTO 2020
2150 REM "No Count
2156 J$="Not Counted"
2157 X$="F2 key to enter count for item"
2160 CALL "ZZENTR","SF",A{ALL},J$,X4$,X3$,38,15,1,11,C0,"","{3"+X$,"","IC2PIE11","","",""; IF ABS(C0)<10 THEN IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2110,2111
2165 IF C0<>11 THEN PRINT @(38,15),"Not Counted" ELSE A$(222,1)=" "; GOSUB 6200; GOTO 2250
2190 GOTO 2020
2200 REM "New Bin Location
2205 IF A$(222,1)="S" THEN GOTO 2020
2206 RETURN 
2210 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,22,11,247,10,C0,"","{3"+X$,"","IC2PIE11","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2210,2211
2240 GOTO 2020
2250 REM "Physical count
2251 RETURN 
2252 PRECISION 4
2254 IF X0>7 AND A$(221,1)="Y" THEN GOTO 2020
2255 IF X0=7 THEN H0=1,H1=2 ELSE IF X0=10 THEN H0=2,H1=9 ELSE IF X0=13 THEN H0=3,H1=11
2256 IF H0=1 THEN IF A$(222,1)="S" THEN GOTO 2150 ELSE X$="F2 key to set item to Not Counted"
2258 IF H0>1 AND (A$(222,1)="S" OR POS(" "<>A$(223+4*(H0-1),4))=0) THEN GOTO 2020
2259 DIM J[1]; IF A$(221,1)="Y" THEN J[0]=A[6+2*H0],J0$=M3$,J1=820 ELSE GOSUB 4700
2260 CALL "ZZENTR","NF.",J{ALL},A$,X4$,X3$,45,13+2*H0,0,J1,C0,J0$,"{3"+X$,Q$,"IC2PIE14","","",""; IF ABS(C0)<10 THEN IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2260,2261
2262 IF C0=11 THEN GOSUB 4800; GOTO 2290
2265 PRINT @(44,13+2*H0),J[0]:J0$,
2270 IF A$(221,1)="Y" THEN A[6+2*H0]=J[0] ELSE IF F$(20,1)<>"Y" THEN A[6+2*H0]=J[0]*A[H1] ELSE A[6+2*H0]=J[0]
2280 GOSUB 7500
2290 GOTO 2020
2300 REM "Physical Count Packing
2302 IF A$(222,1)="S" OR A$(221,1)="Y" THEN GOTO 2020
2305 IF X0=9 THEN U0=1 ELSE IF X0=12 THEN U0=2 ELSE GOTO 2020
2306 IF POS(" "<>A$(223+4*U0,4))=0 THEN GOTO 2020 ELSE READ (Z[13],KEY="U/M"+A$(223+4*U0,4),DOM=2020)IOL=0395; IF F$(20,1)="Y" THEN GOTO 2020
2308 U9=2; GOSUB 4600; REM 'THIS SHOULD SET U8
2310 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,U8,15+2*U0,7+2*U0,501,C0,Z2$,"{3"+X$,Q$,"IC2PIE16","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2310,2311
2330 U9=0; GOSUB 4600
2340 GOTO 2020
2350 REM "Physical Count U/M
2352 IF A$(222,1)="S" OR A$(221,1)="Y" THEN GOTO 2020
2354 IF X0=11 AND POS(" "<>A$(227,4))=0 THEN GOTO 2020
2355 IF X0=8 THEN U0=1,U1=227,U2=9 ELSE IF X0=11 THEN U0=2,U1=231,U2=11 ELSE GOTO 2020
2357 U9=1; GOSUB 4600
2360 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,16,15+2*U0,U1,4,C0,"","{3"+X$,"U/M","IC2PIE18","U/M","ZZ2MUA",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2360,2361
2365 IF POS(" "<>A$(U1,4))=0 THEN A[U2]=0,A[8+2*U0]=0; GOSUB 7500; PRINT @(6,15+2*U0),'CL',; GOTO 2020
2370 FIND (Z[13],KEY="U/M"+A$(U1,4),DOM=2360)IOL=0395
2380 IF F$(20,1)<>"Y" THEN GOTO 2020
2385 IF A[U2]=0 THEN IF F[0]<>0 THEN A[U2]=F[0] ELSE A[U2]=F[1]
2387 U9=0; GOSUB 4600
2390 GOTO 2020
2400 REM "Frozen average cost
2401 GOTO 2020; REM "Disable for now since this only costs the variance and does not post it back to inventory files.
2405 IF A$(222,1)="S" THEN GOTO 2020
2407 IF A$(221,1)="Y" THEN GOSUB 7850; GOTO 2440
2410 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,22,10,0,621,C0,M4$,"{3"+X$,"","IC2PIE20","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2410,2411
2440 GOTO 2020
2750 REM "Primary unit
2753 IF A$(221,1)<>"Y" THEN IF ABS(C0)=2 THEN GOTO 2020 ELSE X0=X0+3; GOTO 2020
2755 J1=1; GOSUB 8500
2760 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,J0,15,121,4,C0,"","{3"+X$,"","IC2LAB36","","",""
2762 FIND (Z[13],KEY="U/M"+A$(121,4),DOM=2760)IOL=0375; IF G5$(20,1)="Y" THEN GOTO 2760
2765 IF ABS(C0)>2 THEN J1=-1; GOSUB 8500 ELSE IF ABS(C0)=2 THEN GOSUB 6245
2790 GOTO 2020
2800 REM "Packaging unit
2803 IF A[2]=0 OR A$(221,1)<>"Y" THEN GOTO 2840
2804 IF ABS(C0)>1 AND POS(" "<>A$(125,4))=0 THEN GOTO 2840
2805 J1=3; GOSUB 8500
2810 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,J0,15,125,4,C0,"","{3"+X$,"","IC2LAB38","","",""
2812 IF A$(125,4)<>"    " THEN FIND (Z[13],KEY="U/M"+A$(125,4),DOM=2810)IOL=0375; IF G5$(20,1)="Y" THEN GOTO 2810
2815 IF A$(125,4)="    " THEN IF A[3]=0 THEN A[3]=A[2],A[2]=0,F0$="*"; J1=-1; GOSUB 8500 ELSE A[2]=0,J1=-1; GOSUB 8500
2820 IF ABS(C0)>2 THEN J1=-1; GOSUB 8500
2840 GOTO 2020
2850 REM "Units per package
2853 IF A$(221,1)<>"Y" THEN GOTO 2020
2854 IF ABS(C0)=2 AND A[2]=0 THEN GOTO 2020
2855 J1=2; GOSUB 8500
2860 CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,J0,15,2,601,C0,M3$,"{3"+X$,"","IC2LAB40","","",""
2862 IF C0=4 THEN C0=1
2864 IF C0>0 AND A[2]=0 THEN A$(125,4)="",J1=-1; GOSUB 8500
2865 IF ABS(C0)>2 THEN J1=-1; GOSUB 8500
2890 GOTO 2020
2900 REM "Units per primary/package unit
2901 SEL_UM:
2903 IF A$(221,1)<>"Y" THEN GOTO 2020
2904 IF F0$="*" THEN F0$=""; GOTO 2940
2905 J1=4; GOSUB 8500
2908 J8=A[4]*A[3]; IF A[2]<>0 THEN J8=J8*A[2]
2910 A(3)=ML_UNIT_VALUE2 ! CALL "ZZENTR","N",A{ALL},A$,X4$,X3$,J0,15,3,601,C0,M3$,"{3"+X$,"","IC2LAB42","","",""
2914 IF A$(125,4)="    " THEN T9=A[4]*A[3] ELSE T9=A[4]*A[2]*A[3]
2915 IF T9<>0 THEN A[4]=A[4]*J8/T9 ELSE A[4]=0
2920 J1=-1; GOSUB 8500
2925 GOSUB 6245
2930 ML_COMP_COUNT=A(4),REFRESH_FLG=1
2940 RETURN 
3300 REM "Build ICL record from IC0 & IC1 records
3305 DIM F$(21),F[1]; FIND (Z[13],KEY="U/M"+C$(124,4),DOM=3306)IOL=0400
3310 IF F$(20,1)<>"Y" THEN A$(121,4)=C$(124,4),A[2]=C[15] ELSE A$(121,4)="CASE",A[2]=C[19]
3315 A[4]=D[3]+D[4]-D[5]+D[6]
3320 IF D[2]<>0 THEN A[0]=D[2] ELSE A[0]=C[18]
3326 A$(221,1)="N"
3327 IF STP(A$(259,3),1)="" THEN A$(259,13)=X3$(40,3)+X3$(21,6)+STR(DTE(0:"%Hz%mz")) ! SSP#235373     
3328 A$(272,13)=X3$(40,3)+X3$(21,6)+STR(DTE(0:"%Hz%mz")) ! SSP#235373     
3330 WRITE (Z[1],KEY=A$(21,4)+A$(100,10)+A$(1,20)+A$(25,8))IOL=0311
3340 GOSUB 6200
3395 RETURN 
3400 REM "Build ICL records from lot detail file ICF
3402 REM "Default ICL from any existing Lot record for this item on the same receipt date
3405 DIM L[6]; A$(221,1)="Y"
3410 READ (Z[6],KEY=A$(1,24),DOM=3411)
3415 K1$=KEY(Z[6],END=3460)
3420 IF K1$(1,30)<>A$(1,30) THEN GOTO 3460
3425 READ (Z[6],KEY=K1$)IOL=0380
3430 REM "Set ICL data from ICF data
3440 A$(33,49)=L$(33,49),A$(133,15)=L$(133,15),A$(215,6)=L$(215,6)
3445 A$(285,4)=L$(263,4); REM ssp 189680
3460 REM "Done with ICF records -now set up ICL
3490 A$(257,2)="**"; REM "New Entry
3495 IF STP(A$(259,3),1)="" THEN A$(259,13)=X3$(40,3)+X3$(21,6)+STR(DTE(0:"%Hz%mz")) ! SSP#235373     
3497 A$(272,13)=X3$(40,3)+X3$(21,6)+STR(DTE(0:"%Hz%mz")) ! SSP#235373     
3500 IF NUM(A$(31,2),ERR=3501)=0 THEN GOTO 3530
3510 A$(31,2)="01"; REM ,ML_SEQ$=A$(31,2),REFRESH_FLG=1 ! SSP243464 jdf
3520 WRITE (Z[1],KEY=A$(21,4)+A$(100,10)+A$(1,20)+A$(25,8),DOM=3521)IOL=0311; ML_SEQ$=A$(31,2); REFRESH_FLG=1; GOTO 3535 ! SSP243464 jdf   
3530 A$(31,2)=STR(NUM(A$(31,2))+1:"00"); GOTO 3520
3535 GOSUB 6400
3540 RETURN 
4000 CHECK_UOM:! SSP246055 jdf
4010 DIM S_UM$(25),S_UM[1]; S_UM$(4,4)=ML_UNIT$; A$(121,4)=ML_UNIT$; FIND (Z[13],KEY="U/M"+S_UM$(4,4),DOM=*NEXT)S_UM$,S_UM[0],S_UM[1] ! SSP246055 jdf
4015 IF MID(S_UM$,20,1)="Y" AND CHECK_UM THEN RETURN ! SSP246055 jdf
4020 IF MID(S_UM$,20,1)="Y" THEN ML_UNIT_VALUE2=S_UM[0]; CALL "*wingrp;disable",ML_UNIT_QTY.GRP$; NEXT_ID=ML_PHY_COUNT.CTL ELSE CALL "*wingrp;enable",ML_UNIT_QTY.GRP$; NEXT_ID=ML_UNIT_VALUE2.CTL; IF ML_UNIT_VALUE2=0 THEN ML_UNIT_VALUE2=S_UM[1] ! SSP246055 jdf
4022 IF MID(S_UM$,20,1)="Y" AND ML_UNIT_VALUE2=0 THEN ML_UNIT_VALUE2=S_UM[1] ! SSP#254876
4025 REFRESH_FLG=1 ! SSP246055 jdf
4030 RETURN ! SSP246055 jdf
4500 REM "Load X$ with desc of units
4505 X$=""
4508 IF A$(221,1)<>"Y" THEN GOTO 4550
4510 REM IF A(4)<>0 THEN LET X$=X$+FNR$(STR(A(4):Z2$))+" "
4512 ML_UNIT1$="",ML_UNIT_VALUE=0 ! SSP#256165
4515 IF POS(" "<>A$(121,4))=0 THEN GOTO 4525
4520 ML_UNIT$=A$(121,4); IF A[4]>1 THEN X$=X$+FNS$(A$(121,4))+"s of " ELSE X$=X$+FNS$(A$(121,4))+" of "
4525 IF A[2]=0 OR POS(" "<>A$(125,4))=0 THEN GOTO 4540
4530 ML_UNIT_VALUE=A(2),ML_UNIT1$=A$(125,4),X$=X$+FNR$(STR(A[2]:Z2$))+" " ! SSP#256165
4531 REM LET X$=""
4535 IF A[2]>1 THEN X$=X$+FNS$(A$(125,4))+"s of " ELSE X$=X$+FNS$(A$(125,4))+" of "
4540 X$=X$+FNR$(STR(A[3]:Z2$)),ML_UNIT_VALUE2=A(3)
4545 RETURN 
4550 REM "Unit of measure for non lot item
4555 IF A[2]=0 THEN A[2]=1
4565 IF A[4]/A[2]>1 THEN X$=X$+FNS$(A$(121,4))+" of " ELSE X$=X$+FNS$(A$(121,4))+" of "
4570 X$=X$+FNR$(STR(A[2]:Z2$))
4580 IF LEN(X$)<14 THEN X$=X$+" "; GOTO 4580
4595 RETURN 
4600 REM "Print alt units, U0=1 is first alt u/m, U0=2 is 2nd alt u/m
4601 REM "U9=0, compressed display, U9=1 display for U/M entry, U9=2 display for amount entry
4602 REM "Set U8 to starting point of numeric
4604 PRINT @(16,15+2*U0),'CL',
4605 IF A$(223+U0*4,4)="    " THEN RETURN 
4607 IF F$(4,4)<>A$(223+U0*4,4) THEN READ (Z[13],KEY="U/M"+A$(223+U0*4,4),DOM=4645)IOL=0395
4610 IF U9=1 THEN X$=A$(223+U0*4,4) ELSE X$=FNS$(A$(223+U0*4,4))
4615 IF A[7+2*U0]=0 THEN A[7+2*U0]=1
4620 X$=X$+" of "
4624 U8=16+LEN(X$)
4625 IF U9=2 THEN X$=X$+STR(A[7+2*U0]:Z2$) ELSE X$=X$+FNR$(STR(A[7+2*U0]:Z2$))
4630 PRINT @(16,15+2*U0),X$
4631 X$=""
4634 IF A[7+2*U0]=0 THEN A[7+2*U0]=1
4635 IF F$(20,1)<>"Y" THEN N0=A[8+2*U0]/A[7+2*U0] ELSE N0=A[8+2*U0]
4640 IF N0<>0 THEN IF F$(20,1)<>"Y" THEN PRINT @(45,15+2*U0),N0:M0$, ELSE PRINT @(45,15+2*U0),N0:M3$,
4642 U9=0
4645 RETURN 
4700 REM "Set J0$ and J(0) for non lotted items
4701 REM "Read in F$ and F() for later processing in 2250's
4705 IF H0=1 AND POS(" "<>A$(223,4))=0 THEN A$(223,4)=A$(121,4)
4707 IF F$(4,4)<>A$(219+H0*4,4) THEN READ (Z[13],KEY="U/M"+A$(219+H0*4,4),DOM=4708)IOL=0395
4715 IF F$(20,1)<>"Y" THEN J[0]=A[8+2*(H0-1)]/A[H1],J0$=M0$,J1=842 ELSE J[0]=A[8+2*(H0-1)],J0$=M3$,J1=802
4745 RETURN 
4800 REM "Handle No count entered state
4805 NOT_COUNTED:
4806 TXT$=BT_COUNTED.CTL'TEXT$; IF MID(TXT$,1,1)="C" THEN GOTO ENABLE_COUNTED
4807 DISABLE_COUNTED:
4810 CALL "*WINGRP;HIDE",NOCOUNTE.GRP$; MULTI_LINE SHOW ML_COMP_COUNT1.CTL; ML_COMP_COUNT1.CTL'VALUE$=MSG("NOT_COUNTE"),BT_COUNTED.CTL'TEXT$=MSG("COUNT"),BT_COUNTED.CTL'TIP$=MSG("PRESS_S")+" "+MSG("COUNT")
4815 A$(222,1)="S",A[8]=0,A[10]=0,A[12]=0
4845 RETURN 
4846 ENABLE_COUNTED:
4850 MULTI_LINE HIDE ML_COMP_COUNT.CTL; CALL "*WINGRP;SHOW",NOCOUNTE.GRP$; BT_COUNTED.CTL'TEXT$=MSG("NOT_COUNTE"),BT_COUNTED.CTL'TIP$=MSG("PRESS_S")+" "+%NOCOUNTED$
4860 A$(222,1)="Y"
4870 RETURN 
6000 REM "BACKGROUND
6001 GOTO 6190
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(1,3),"Location:",@(6,4),"Bin:",@(1,5),"Customer:",@(0,6),"Item Code:",@(0,7),"  Lot Rec:",@(28,7),"Lot P/O No:",@(1,8)," Lot Seq:",@(20,8),"Lot Factory Job No:",@(58),"U/M:",@(0,9),Z0$,
6070 PRINT @(0,10),"Frozen average cost:",@(3,11),"New Bin Location:",@(3,12),"Inventory Tag No:",@(36,13),"Computer",@(50,13),"Physical",
6080 PRINT @(8,14),"Units",@(37,14),"count",@(51,14),"count",@(63,14),"Variance",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6210 DIM J[1]
6215 GOSUB 6450
6216 IF A$(221,1)="Y" THEN ! CALL "ZZDISP","A",A$(41,9),"P/O",X3$,"","",40,7,X4$
6217 ! PRINT @(40,8),A$(56,12),
6245 GOSUB 4500
6250 B_X$=X$ ! PRINT @(0,15),'CL',@(30-LEN(X$),15),X$,
6255 IF A$(221,1)="Y" THEN XXX$=FNQ$(A[4],M0$); IF A$(222,1)="S" THEN GOTO 6280 ELSE XXX=A[8]; GOTO 6260
6256 IF FPT(A[4]/A[2])<>0 THEN ! PRINT @(31,15),A[4]/A[2]:M0$, ELSE PRINT @(31,15),A[4]/A[2]:M3$,
6257 IF A$(222,1)="S" THEN GOTO 6280
6258 IF FPT(A[8]/A[2])<>0 THEN ! PRINT @(45,15),A[8]/A[2]:M0$, ELSE PRINT @(45,15),A[8]/A[2]:M3$,
6260 GOSUB 7500 ! PRINT @(22,11),A$(247,10),
6265 ! PRINT @(22,12),A$(235,12),
6270 IF A$(221,1)<>"Y" THEN U9=0,U0=1; GOSUB 4600; U0=2; GOSUB 4600
6280 IF A$(221,1)="Y" THEN GOSUB 7800 ! PRINT @(22,10),U5:M4$, ELSE PRINT @(22,10),A[0]:M4$,
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6460 ! PRINT @(11,3),A$(21,4),@(11,4),A$(100,10),
6461 REM IF POS(" "<>A$(1,10))=0 THEN CALL "ZZDISP","AX",A$(1,20),"I/C",X3$,D8$,"",0,0,X4$; GOTO 06470
6464 ! CALL "ZZDISP","AX",A$(1,10),"A/R",X3$,D7$,"",0,0,X4$
6465 ! CALL "ZZDISP","AX",A$(11,10),"ICE",X3$,D8$,"",0,0,X4$
6467 ! PRINT @(11,5),D7$,
6468 IF C0$(11,35)<>S$(1,35) THEN ! PRINT @(24,5),C0$(11,35),
6470 ! PRINT @(11,6),D8$,
6473 ! PRINT @(24,3),B$(16,30),@(24,6),H9$,
6474 IF POS(" "<>A$(25,6))=0 THEN ! PRINT @(11,7),S$(1,10), ELSE PRINT @(11,7),FND$(A$(25,6)),
6475 ! PRINT @(11,8),A$(31,2),@(64,8),FNS$(C$(124,4)),"/",FNR$(STR(C[15]:M1$)),
6480 IF NOT(NUL(A$(110,11))) THEN ORDER$=FN%ZZDISP$(A$(110,8),"O/P")+" "+A$(118,3) ELSE ORDER$=""
6490 RETURN 
6500 DELETE_REC:
6502 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
6505 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
6508 IF _X$="NO" THEN GOTO *RETURN
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 NEXT_ID=ML_LOC.CTL; RETURN 
6600 REM "ALT KEY DATA READS
6605 FIND (Z[2],KEY="D"+S$(1,10)+A$(21,4),DOM=6606)IOL=0320
6610 FIND (Z[3],KEY=A$(1,20),DOM=6611)IOL=0330
6615 FIND (Z[4],KEY=A$(1,20)+A$(21,4),DOM=6616)IOL=0340
6690 RETURN 
6700 REM "ADD ENTRY
6702 WRTE:
6705 IF A$(222,1)<>"S" THEN A$(222,1)="Y"
6707 IF STP(A$(259,3),1)="" THEN A$(259,13)=X3$(40,3)+X3$(21,6)+STR(DTE(0:"%Hz%mz")) ! SSP#235373     
6708 A$(272,13)=X3$(40,3)+X3$(21,6)+STR(DTE(0:"%Hz%mz")) ! SSP#235373     
6710 WRITE (Z[1],KEY=A1$)IOL=0311
6730 WRITE (Z[5],KEY=A1$(1,4)+C$(61,3)+A1$(15,21)+A1$(5,10))
6790 RETURN 
6800 REM "NEXT ENTRY IN FILE
6804 ON 10*FPT(C0)+2 GOTO 6850,6805
6805 IF A1$<>"" THEN IF Z9=0 THEN READ (Z[1],KEY=A1$,DOM=6806,END=6895)
6810 A1$=KEY(Z[1],END=6895); IF LEN(A1$)<42 THEN READ (Z[1],END=6895); GOTO 6810
6820 IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(21,4)=A1$(1,4),A$(100,10)=A1$(5,10),A$(1,20)=A1$(15,20),A$(25,8)=A1$(35,8)
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6870 GOTO 6895
6890 GOTO 1515
6895 PRINT 'RB',; A1$=""; EXTRACT (Z[1],KEY=K9$,DOM=1140); GOTO 1140
7500 REM "Print variance, correct rounding if non lotted item
7502 SEL_VARIANCE:
7505 IF A$(221,1)="Y" THEN N1=A[8]-A[4],ML_VARIANCE=N1; GOTO 7575
7510 REM "Cast all SKUs into the computer qty to compare to A(4)
7515 N1=A[8]/A[2]+A[10]/A[2]+A[12]/A[2]-A[4]/A[2],ML_VARIANCE=N1
7575 IF N1=0 THEN ! PRINT @(59,15),S$(1,LEN(M2$)), ELSE PRINT @(59,15),N1:M2$,
7590 RETURN 
7750 REM "Build desc from H8$
7760 H9$=FNS$(H8$(64,8)); IF H9$<>"" THEN H9$=H9$+QUO; IF POS(" "<>H8$(72,8))<>0 THEN H9$=H9$+"x"
7770 H9$=H9$+FNS$(H8$(72,8)); IF H9$<>"" THEN IF POS(" "<>H8$(72,8))<>0 THEN H9$=H9$+QUO+" " ELSE H9$=H9$+" "
7775 IF NUM(H8$(80,2))<>0 THEN H9$=H9$+H8$(80,2)+" Ply "
7780 H9$=H9$+FNS$(H8$(21,40)); H8$=""
7785 IF LEN(H9$)>40 THEN H9$=H9$(1,40)
7790 RETURN 
7800 REM "Given total cost A(0), figure cost in inv u/m & put into U5
7804 IF A[4]<>0 THEN T9=FNL(A[4],A[3],A[2]) ELSE T9=FNL(A[8],A[3],A[2])
7810 CALL "FM2EXT",Z[13],1,C$(124,4),C[15],T9,U5,A[0],2
7845 RETURN 
7850 REM "Entry of avg cost for lots.
7852 X$="Enter cost in inventory UM - "+FNS$(C$(124,4))+"/"+STR(C[15]); IF A[8]=0 AND A[4]=0 AND A$(221,1)="Y" THEN X$="Since the computer & physical counts are 0, enter after physical count entered"
7855 DIM N[1]; GOSUB 7800; N[0]=U5
7860 CALL "ZZENTR","N",N{ALL},A$,X4$,X3$,22,10,0,621,C0,M4$,"{3"+X$,"","IC2PIE20","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 7860,7861
7863 IF C0<0 THEN GOTO 7895
7864 REM "Get new extended cost
7865 IF A[4]<>0 THEN T9=FNL(A[4],A[3],A[2]) ELSE T9=FNL(A[8],A[3],A[2])
7870 CALL "FM2EXT",Z[13],0,C$(124,4),C[15],T9,N[0],C,2
7875 A[0]=C
7895 RETURN 
8000 REM "Check bin number
8001 REM "If item is non-lotted, then read ICL with current bin number and
8002 REM "item number, if not found, replace bin number with bin number from the IC1 file and continue. The rec. date and seq number will both be blank
8005 READ (Z[1],KEY=A$(21,4)+A$(100,10)+A$(1,20)+"        ",DOM=8006); GOTO 8045
8010 A$(100,10)=D$(35,10)
8015 PRINT @(11,4),A$(100,10),
8045 RETURN 
8200 REM "Setup ending number based on starting number
8210 SEL_START_NUM:! IDB#024368                   
8220 A$(82,9)=PAD(ML_STARTING_NUM$,9,0); IF POS(" "<>A$(82,9))=0 THEN GOTO *RETURN
8230 J2=NUM(A$(82,9),ERR=*NEXT)
8240 IF A$(125,4)="    " THEN N2=ML_PHY_COUNT*A[3] ELSE N2=ML_PHY_COUNT*A[2]*A[3]
8250 J2=J2+N2-1
8260 J2$=STR(J2)
8270 J2$=PAD(J2$,9,0),A$(91,9)=J2$,ML_ENDING_NUM$=J2$; REFRESH_FLG=1
8280 RETURN 
8500 REM "Display Qty and set J0 to xpos of input of field J1
8501 REM "J1 -1=display, 0=qty, 1=primary unit, 2=units/package, 3=package, 4=unit/primary/package
8505 J0$="",J0=0
8510 REM IF J1=0 THEN LET J0$=STR(A(4):M4$) ELSE LET J0$=FNR$(STR(A(4):M4$))
8512 IF J1=1 THEN J0=1+LEN(J0$)
8515 IF POS(" "<>A$(121,4))<>0 THEN IF A[4]>1 THEN J0$=J0$+FNS$(A$(121,4))+"s of " ELSE J0$=J0$+FNS$(A$(121,4))+" of "
8517 IF J1=2 THEN J0=1+LEN(J0$); IF A[3]<>0 AND POS(" "<>A$(125,4))=0 THEN J0$=J0$+S0$(1,LEN(M3$))+" of "
8520 IF A[2]<>0 THEN IF J1=2 THEN J0$=J0$+STR(A[2]:M3$) ELSE J0$=J0$+FNR$(STR(A[2]:M3$))
8522 IF J1=3 THEN J0=1+LEN(J0$); IF A[3]<>0 AND POS(" "<>A$(125,4))=0 THEN J0$=J0$+"     of "
8525 IF POS(" "<>A$(125,4))<>0 THEN IF A[2]>1 THEN J0$=J0$+FNS$(A$(125,4))+"s of " ELSE J0$=J0$+FNS$(A$(125,4))+" of "
8527 IF J1=4 THEN J0=1+LEN(J0$)
8530 IF J1<>4 AND A[3]<>0 THEN J0$=J0$+FNR$(STR(A[3]:M3$))
8535 IF A$(125,4)="    " THEN Q=A[4]*A[3] ELSE Q=A[4]*A[2]*A[3]
8540 ! PRINT @(1,15),J0$,S0$(1,45-LEN(J0$)),
8545 RETURN 
8950 DEF FNQ$(Z8,Z9$)=STR(Z8:Z9$(1,POS(".00"=STR(Z8:Z9$)+".00")-1))
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 REM "PROG FLOW
9710 IF U1$="" THEN REMOVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9730 RUN U1$(1,6)
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 END_PROG:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 WRITE_REC:
10010 GOSUB ASSIGN_PROG
10020 A1$=A$(21,4)+A$(100,10)+A$(1,20)+A$(25,6)+A$(31,2); IF P0$(54,1)="Y" THEN A1$(5,10)="          " ! SSP243464 jdf !SSP#257202
10030 GOSUB WRTE
10040 NEXT_ID=ML_LOC.CTL,CHANGE_FLG=0
10045 GOSUB NEXT_REC; NEXT_ID=ML_PHY_COUNT.CTL
10050 RETURN 
11000 ASSIGN_PROG:
11010 A$(1,10)=ML_CUST$,A$(11,10)=ML_ITEM$,A$(100,10)=ML_BIN$
11020 A$(21,4)=ML_LOC$,A$(25,6)=ML_LOT_REC$,A$(41,9)=ML_LOT_PO$,A$(56,12)=ML_FACT$,A(4)=ML_COMP_COUNT,A(8)=ML_PHY_COUNT,A$(247,10)=ML_NEW_BIN$,A$(235,12)=ML_INV_TAG$
11030 A$(82,9)=ML_STARTING_NUM$,A$(91,9)=ML_ENDING_NUM$ ! IDB#024368
11040 A$(31,2)=ML_SEQ$,REFRESH_FLG=1,A$(121,4)=ML_UNIT$,A(3)=ML_UNIT_VALUE2
11050 RETURN 
40000 ! 40000 - Browsing mode
40010 ! - Next
40020 NEXT_REC:
40030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
40035 READ (Z(1),KEY=_KEY$,DOM=*NEXT)
40040 _KEY$=KEY(Z(1),END=END_OF_FILE)
40050 READ (Z(1),KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
40060 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
40070 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
40080 _KEY$=KEN(Z(1),KEY=_KEY$,END=END_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
40090 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; GOSUB CLEAR_REC; EXIT ! SSP246055 jdf
40200 ! 40200 - Prior record
40210 PRIOR_REC:
40220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
40230 _KEY$=KEP(Z(1),END=START_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
40240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
40250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
40260 _KEY$=KEP(Z(1),KEY=_KEY$,END=START_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
40270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
40400 ! 40400 - First record
40410 FIRST_REC:
40420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
40430 _KEY$=KEF(Z(1),ERR=NO_FIRST); IF LEN(_KEY$)<42 THEN READ (Z[1],ERR=NO_FIRST); _KEY$=KEY(Z(1),ERR=NO_FIRST) ! SSP#259675
40440 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
40450 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
40600 ! 40600 - Last record
40610 LAST_REC:
40620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
40630 _KEY$=KEL(Z(1),ERR=NO_LAST)
40640 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
40650 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
40700 CHECK_CHANGES:
40705 IF CHANGE_FLG=0 THEN READ (Z(1),KEY=A1$,DOM=*NEXT)
40708 IF CHANGE_FLG=0 THEN GOTO *RETURN
40710 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
40715 IF _YESNO$="YES" THEN CHANGE_FLG=0; GOSUB WRITE_REC
40720 RETURN 
40730 PROCESS_READ:
40735 CALL "*WINGRP;ENABLE",BUTTONS.GRP$
40736 CALL "*WINGRP;DISABLE",KEY1.GRP$ ! SSP#272182
40740 A2$="",A3$="",A4$="",A5$="",A1$=_KEY$,A$(21,4)=A1$(1,4),A$(100,10)=A1$(5,10),A$(1,20)=A1$(15,20),A$(25,6)=A1$(35,6),A$(31,2)=A1$(41,2); GOTO 1520
40750 RETURN 
40760 RETURN 
40800 DISP_REC:
40810 GOTO ASSIGN_LIB
40820 RETURN 
41910 BUSY_CHK:
41920 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
41930 IF _D$="NO" THEN EXIT 
41940 RETURN 
42000 ! 
42010 ASSIGN_LIB:
42020 ML_CUST$=A$(1,10),ML_ITEM$=A$(11,10),ML_BIN$=A$(100,10),ML_LOC_DESC$=B$(16,35),ML_STARTING_NUM$=A$(82,9),ML_ENDING_NUM$=A$(91,9) ! IDB#024368
42030 ML_LOC$=A$(21,4),ML_LOT_REC$=A$(25,6),ML_LOT_PO$=A$(41,9),ML_FACT$=A$(56,12),ML_UNITS$=B_X$,ML_COMP_COUNT=A(4),ML_PHY_COUNT=A(8),ML_NEW_BIN$=A$(247,10),ML_INV_TAG$=A$(235,12),CHANGE_FLG=0
42040 ML_SEQ$=A$(31,2),ML_ITEM_DESC$=H9$,ML_CUST_DESC$=C0$(11,35),ML_UM$=FNS$(C$(124,4))+"/"+FNR$(STR(C(15):M1$)),REFRESH_FLG=1,NEXT_ID=ML_PHY_COUNT.CTL
42050 IF A$(221,1)="Y" THEN ML_AVG_COST=U5 ELSE ML_AVG_COST=A(0)
42055 %ML_LOC$=ML_LOC$,%ML_BIN$=ML_BIN$,%CUSTOMER$=ML_CUST$,%ITEM$=ML_ITEM$,%ML_LOT_REC$=ML_LOT_REC$
42060 GOSUB SEL_VARIANCE
42100 RETURN 
42500 ! 
42510 CLEAR_REC:
42520 ML_CUST$="",ML_ITEM$="",ML_BIN$="",ML_LOC_DESC$=""
42530 ML_LOC$="",ML_LOT_REC$="",ML_LOT_PO$="",ML_FACT$="",ML_UNITS$="",ML_COMP_COUNT=0,ML_PHY_COUNT=0,ML_NEW_BIN$="",ML_INV_TAG$=""
42540 ML_SEQ$="",ML_ITEM_DESC$="",ML_CUST_DESC$="",ML_UM$="",REFRESH_FLG=1,ML_AVG_COST=0,NEXT_ID=ML_LOC.CTL
42542 ML_UNIT$="",ML_UNIT1$="",ML_UNIT_VALUE=0,ML_UNIT_VALUE2=0,ML_VARIANCE=0,REFRESH_FLG=1 ! SSP246055 jdf!SSP#256165
42543 CALL "*WINGRP;ENABLE",KEY1.GRP$ ! SSP#272182
42545 GOSUB DISABLE_FIELDS
42550 RETURN 
42600 DISABLE_FIELDS:
42610 CALL "*WINGRP;DISABLE",FIELDS.GRP$
42620 CALL "*WINGRP;DISABLE",BUTTONS.GRP$
42625 CALL "*WINGRP;DISABLE",KEY2.GRP$ ! SSP#294549
42630 RETURN 
42640 ENABLE_FIELDS:
42650 CALL "*WINGRP;ENABLE",FIELDS.GRP$
42660 CALL "*WINGRP;ENABLE",BUTTONS.GRP$
42665 CALL "*WINGRP;ENABLE",KEY2.GRP$ ! SSP#294549
42670 RETURN 
43000 NO_ITEM:
43010 ML_ITEM$="",ML_ITEM_DESC$="",NEXT_ID=ML_ITEM.CTL
43020 RETURN 
56000 REM Revision History
56010 REM SSP#189680 - Need sequence 2"
56020 ! "207881-In Physical Inventory Count Entry, enter whse location 9001 
56030 ! "224710-Physical Count Entry. Will not allow entry of item code     
56031 REM "235373-Time stamp is not printing on the Physical Count Checklist  
56032 REM "243464-Physical Inventory issue with adding new lots               
56034 REM "250159-Enhancement to Physical Inventory process to allow committed
56035 REM "254876-Physical Inventory count entry the inventory uom is showing 
56036 REM "259675-Program exception during the entry of physical count entry  
