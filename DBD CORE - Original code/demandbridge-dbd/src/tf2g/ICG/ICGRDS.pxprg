0010 ! ICGRDS - Valued Inventory Report
0035 REM "5.7 - 03/23/21 - 7.629843 - tma - SSP# 307337
0037 REM "307337-DBSPT-111591 Inventory balance based on specific period     
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0045 PROCESS "ICGRDS","../ICG/IC.EN"
0050 EXIT 
0060 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ZZS"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 _ZZPARM=HFN; OPEN (_ZZPARM)"ZZPARM"
0188 PRT_MODES$="QS" ! SSP 240570
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="PRG_NAME$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 DIM RNG(4)
0536 ARG_1$="IC2RDA            ",%K9$="IC2RDA"
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT)A$,R0$,W$,RNG{ALL}; GOTO 0560
0551 DIM A$(128),R0$(128),W$(71),RNG(4)
0560 ! _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0561 NXT_OPTION:
0565 EXECUTE "next_folder=FLDR."+_F_OBJ$[NUM(A$(71,1))]+".CTL,REFRESH_FLG=1"
0566 NEXT_ID=RPT_VEIW.CTL,REFRESH_FLG=1,RPT_SEQ=NUM(A$(71,1))
0567 LIST_BOX WRITE LB_CODES.CTL,MID(A$,80,1)
0570 B_START_FISCAL$=STP(A$(74,4)),B_START_ACCTPD$=STP(A$(78,2)); GLGJRA=1; PERFORM "GLGMDA;LOAD_FISCAL_YEAR" ! SSP236972 jdf!SSP#307337 DBSPT-111591
0580 IF B_START_FISCAL$<>"" THEN START_FISCAL$=B_START_FISCAL$
0590 IF B_START_ACCTPD$<>"" THEN START_ACCTPD$=B_START_ACCTPD$
0600 REFRESH_FLG=1
0610 GOSUB SEL_DATE; GOSUB ASSIGN_LIB
0650 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0945 IF _ZZPARM<>0 THEN CLOSE (_ZZPARM); _ZZPARM=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$; _KEY$=STP(_KEY$,1)
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$; _KEY$=STP(_KEY$,1)
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1670 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_REMOVE$+_R_KEY$,_FYI$,"INFO"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2215 T1$="IC6"
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2275 T1$="IC1   "
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=*NEXT)A$,R0$,W$,RNG{ALL}; GOTO 3360
3330 _R_KEY$=KEC(_FIL_NO); TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO"
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1,CHANGE_FLG=0
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=PRG_NAME.CTL,_FIRST_FIELD=RPT_SELEC.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX MSG("UPD_RPT_1")+SEP+MSG("UPD_RPT_2"),MSG("CONFIRM"),"?,YESNO",_YESNO$
3840 IF _YESNO$="YES" THEN GOSUB ASSIGN_PRG; IF SET_CB=0 THEN A$(73,1)="N" ELSE A$(73,1)="Y"; END_IF ; GOTO WRT ! SSP236972 jdf
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 RPT_NUM1$=STR(RPT_NUM1)
10030 RPT_NUM2$=STR(RPT_NUM2)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="RPT_NUM1",_X=RPT_NUM1.CTL,RPT_NUM1=NUM(RPT_NUM1$,ERR=NON_NUMERIC)
11030 _X$="RPT_NUM2",_X=RPT_NUM2.CTL,RPT_NUM2=NUM(RPT_NUM2$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN PRG_NAME$=""
13030 RPT_SELEC$=""
13040 RPT_DESC$=""
13050 RPT_OPT$=""
13060 RPT_SEQ$=""
13070 RPT_SHIPTO$=" "
13080 RPT_AGEINV$=""
13090 RPT_REPTYPE$=""
13100 RPT_ZEROBAL$=""
13110 RPT_POSTAGE$=""
13120 RPT_NAMEADD$=""
13130 RPT_INVRPT$=""
13140 RPT_FISYR$=""
13150 RPT_PER$=""
13160 RPT_CCINV$=""
13170 RPT_AGEDATE$=""
13180 RPT_PTD$=""
13190 RPT_RECAP$=""
13200 DATE_FLD1$=""
13210 DATE_FLD2$=""
13220 DATE_FLD3$=""
13230 DATE_FLD4$=""
13240 RPT_CMT1$=""
13250 RPT_CMT2$=""
13260 COMMENTS_3$=""
13270 COMMENTS_4$=""
13280 PRT_MODE$=""
13290 RPT_OUTDEV$=""
13300 RPT_VERT$=""
13310 RPT_HORIZ$=""
13320 RPT_AUX1$=""
13330 RPT_AUX2$=""
13340 RPT_AUX3$=""
13350 RPT_AUX4$=""
13360 RPT_LINES$=""
13370 RPT_FORMCODE$=""
13380 NOT_USED$=""
13390 UNUSED_1$=""
13400 UNUSED_2$=""
13410 UNUSED_3$=""
13420 UNUSED_4$=""
13430 UNUSED_5$=""
13440 UNUSED_6$=""
13450 RPT_JOBCARD$=""
13460 RPT_JOBCARD_FLG$=""
13470 RPT_NUM1=0
13480 RPT_NUM2=0
13490 BANK_CODE$=""
13500 PRT_DE_ITEM$=""
13510 GL_START$=""
13520 GL_END$=""
13530 START_FISCAL$=""
13540 START_ACCTPD$=""
13550 END_ACCTPD$=""
13560 ML_SOURCE_JOUR$=""
13570 ML_AUDIT_NO$=""
13580 PRT_EXT_POS$=""
13590 PRT_IND_DEPT$=""
13600 CONS_STA_DEPT$=""
13610 INA_ACCT_PRT$=""
13620 INC_STA_PRT_SUBACCT$=""
13630 INC_STA_FMT$=""
13640 BAL_SHE_FMT$=""
13650 BAL_SHE_SUBACT$=""
13660 FS_REPRT_RECA$=""
13670 MAIL_CODE_1$=""
13680 MAIL_CODE_2$=""
13690 MAIL_CODE_3$=""
13700 MAIL_CODE_4$=""
13710 MAIL_CODE_5$=""
13720 MAIL_CODE_6$=""
13730 MAIL_CODE_7$=""
13740 MAIL_CODE_8$=""
13750 MAIL_CODE_9$=""
13760 CB_PR_COMP_COUNT$=""
13770 CB_PAGE_BREAK$=""
13780 CB_VARIANCE$=""
13790 CB_ITEM_NO$=""
13800 CB_ONLY_ITEM$=""
13810 CB_VAL_VAR$=""
13815 CB_LOT_SP$=""; REM SSP 187353
13816 CB_ELIM_NEG$="" ! SSP#289922
13820 ML_LOC_START$=""
13830 ML_LOC_END$=""
13840 ML_BIN_START$=""
13850 ML_BIN_END$=""
13860 ML_CUST_START$=""
13870 ML_CUST_END$=""
13880 ML_ITEM_START$=""
13890 ML_ITEM_END$=""
13900 ML_SEQ_START$=""
13910 ML_SEQ_END$=""
13920 ML_PROD_START$=""
13930 ML_PROD_END$=""
13940 VEND_START$=""
13950 VEND_END$=""
13960 PLANT_START$=""
13970 PLANT_END$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(97,"N"); REM SSP 157353 I added one..was 76 when I started????
15030 IF _ORIG.PRG_NAME$=_CUR.PRG_NAME$ OR PRG_NAME$=_CUR.PRG_NAME$ THEN GOTO *NEXT ELSE IF _ORIG.PRG_NAME$=PRG_NAME$ THEN _CHG2$=_CHG2$+SEP+MSG("PROG_N")+" = "+_CUR.PRG_NAME$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROG_N")+" = "+_CUR.PRG_NAME$
15040 IF _ORIG.RPT_SELEC$=_CUR.RPT_SELEC$ OR RPT_SELEC$=_CUR.RPT_SELEC$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_SELEC$=RPT_SELEC$ THEN _CHG2$=_CHG2$+SEP+MSG("SELECTION")+" = "+_CUR.RPT_SELEC$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELECTION")+" = "+_CUR.RPT_SELEC$
15050 IF _ORIG.RPT_DESC$=_CUR.RPT_DESC$ OR RPT_DESC$=_CUR.RPT_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_DESC$=RPT_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("DESC")+" = "+_CUR.RPT_DESC$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DESC")+" = "+_CUR.RPT_DESC$
15060 IF _ORIG.RPT_OPT$=_CUR.RPT_OPT$ OR RPT_OPT$=_CUR.RPT_OPT$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_OPT$=RPT_OPT$ THEN _CHG2$=_CHG2$+SEP+MSG("OPTIONS")+" = "+_CUR.RPT_OPT$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OPTIONS")+" = "+_CUR.RPT_OPT$
15070 IF _ORIG.RPT_SEQ$=_CUR.RPT_SEQ$ OR RPT_SEQ$=_CUR.RPT_SEQ$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_SEQ$=RPT_SEQ$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ")+" = "+_CUR.RPT_SEQ$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ")+" = "+_CUR.RPT_SEQ$
15080 IF _ORIG.RPT_SHIPTO$=_CUR.RPT_SHIPTO$ OR RPT_SHIPTO$=_CUR.RPT_SHIPTO$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_SHIPTO$=RPT_SHIPTO$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_ST_A")+" = "+_CUR.RPT_SHIPTO$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_ST_A")+" = "+_CUR.RPT_SHIPTO$
15090 IF _ORIG.RPT_AGEINV$=_CUR.RPT_AGEINV$ OR RPT_AGEINV$=_CUR.RPT_AGEINV$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AGEINV$=RPT_AGEINV$ THEN _CHG2$=_CHG2$+SEP+"Age Invoice on Inv or Due Date = "+_CUR.RPT_AGEINV$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Age Invoice on Inv or Due Date = "+_CUR.RPT_AGEINV$
15100 IF _ORIG.RPT_REPTYPE$=_CUR.RPT_REPTYPE$ OR RPT_REPTYPE$=_CUR.RPT_REPTYPE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_REPTYPE$=RPT_REPTYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("REPO_T")+" = "+_CUR.RPT_REPTYPE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REPO_T")+" = "+_CUR.RPT_REPTYPE$
15110 IF _ORIG.RPT_ZEROBAL$=_CUR.RPT_ZEROBAL$ OR RPT_ZEROBAL$=_CUR.RPT_ZEROBAL$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_ZEROBAL$=RPT_ZEROBAL$ THEN _CHG2$=_CHG2$+SEP+"Print Zero Bal Inv = "+_CUR.RPT_ZEROBAL$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Zero Bal Inv = "+_CUR.RPT_ZEROBAL$
15120 IF _ORIG.RPT_POSTAGE$=_CUR.RPT_POSTAGE$ OR RPT_POSTAGE$=_CUR.RPT_POSTAGE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_POSTAGE$=RPT_POSTAGE$ THEN _CHG2$=_CHG2$+SEP+"Post Aged Inv to Mater File = "+_CUR.RPT_POSTAGE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Post Aged Inv to Mater File = "+_CUR.RPT_POSTAGE$
15130 IF _ORIG.RPT_NAMEADD$=_CUR.RPT_NAMEADD$ OR RPT_NAMEADD$=_CUR.RPT_NAMEADD$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_NAMEADD$=RPT_NAMEADD$ THEN _CHG2$=_CHG2$+SEP+"Print Name and Address = "+_CUR.RPT_NAMEADD$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Name and Address = "+_CUR.RPT_NAMEADD$
15530 IF _ORIG.GL_END$=_CUR.GL_END$ OR GL_END$=_CUR.GL_END$ THEN GOTO *NEXT ELSE IF _ORIG.GL_END$=GL_END$ THEN _CHG2$=_CHG2$+SEP+MSG("GL_ACCT")+" "+MSG("ENDING")+" = "+_CUR.GL_END$,_CHG_VAR$(51,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GL_ACCT")+" "+MSG("ENDING")+" = "+_CUR.GL_END$
15540 IF _ORIG.START_FISCAL$=_CUR.START_FISCAL$ OR START_FISCAL$=_CUR.START_FISCAL$ THEN GOTO *NEXT ELSE IF _ORIG.START_FISCAL$=START_FISCAL$ THEN _CHG2$=_CHG2$+SEP+MSG("FY")+" = "+_CUR.START_FISCAL$,_CHG_VAR$(52,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FY")+" = "+_CUR.START_FISCAL$
15550 IF _ORIG.START_ACCTPD$=_CUR.START_ACCTPD$ OR START_ACCTPD$=_CUR.START_ACCTPD$ THEN GOTO *NEXT ELSE IF _ORIG.START_ACCTPD$=START_ACCTPD$ THEN _CHG2$=_CHG2$+SEP+MSG("PERIOD")+" "+MSG("STARTING")+" = "+_CUR.START_ACCTPD$,_CHG_VAR$(53,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PERIOD")+" "+MSG("STARTING")+" = "+_CUR.START_ACCTPD$
15560 IF _ORIG.END_ACCTPD$=_CUR.END_ACCTPD$ OR END_ACCTPD$=_CUR.END_ACCTPD$ THEN GOTO *NEXT ELSE IF _ORIG.END_ACCTPD$=END_ACCTPD$ THEN _CHG2$=_CHG2$+SEP+MSG("PERIOD")+" "+MSG("ENDING")+" = "+_CUR.END_ACCTPD$,_CHG_VAR$(54,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PERIOD")+" "+MSG("ENDING")+" = "+_CUR.END_ACCTPD$
15570 IF _ORIG.ML_SOURCE_JOUR$=_CUR.ML_SOURCE_JOUR$ OR ML_SOURCE_JOUR$=_CUR.ML_SOURCE_JOUR$ THEN GOTO *NEXT ELSE IF _ORIG.ML_SOURCE_JOUR$=ML_SOURCE_JOUR$ THEN _CHG2$=_CHG2$+SEP+MSG("SRC_JRNL")+" = "+_CUR.ML_SOURCE_JOUR$,_CHG_VAR$(55,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SRC_JRNL")+" = "+_CUR.ML_SOURCE_JOUR$
15580 IF _ORIG.ML_AUDIT_NO$=_CUR.ML_AUDIT_NO$ OR ML_AUDIT_NO$=_CUR.ML_AUDIT_NO$ THEN GOTO *NEXT ELSE IF _ORIG.ML_AUDIT_NO$=ML_AUDIT_NO$ THEN _CHG2$=_CHG2$+SEP+MSG("GLGRBS_04")+" = "+_CUR.ML_AUDIT_NO$,_CHG_VAR$(56,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GLGRBS_04")+" = "+_CUR.ML_AUDIT_NO$
15590 IF _ORIG.PRT_EXT_POS$=_CUR.PRT_EXT_POS$ OR PRT_EXT_POS$=_CUR.PRT_EXT_POS$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_EXT_POS$=PRT_EXT_POS$ THEN _CHG2$=_CHG2$+SEP+MSG("GLGRBS_01")+" = "+_CUR.PRT_EXT_POS$,_CHG_VAR$(57,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GLGRBS_01")+" = "+_CUR.PRT_EXT_POS$
15600 IF _ORIG.PRT_IND_DEPT$=_CUR.PRT_IND_DEPT$ OR PRT_IND_DEPT$=_CUR.PRT_IND_DEPT$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_IND_DEPT$=PRT_IND_DEPT$ THEN _CHG2$=_CHG2$+SEP+MSG("FRS_LN1")+" = "+_CUR.PRT_IND_DEPT$,_CHG_VAR$(58,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRS_LN1")+" = "+_CUR.PRT_IND_DEPT$
15610 IF _ORIG.CONS_STA_DEPT$=_CUR.CONS_STA_DEPT$ OR CONS_STA_DEPT$=_CUR.CONS_STA_DEPT$ THEN GOTO *NEXT ELSE IF _ORIG.CONS_STA_DEPT$=CONS_STA_DEPT$ THEN _CHG2$=_CHG2$+SEP+MSG("FRS_LN2")+" = "+_CUR.CONS_STA_DEPT$,_CHG_VAR$(59,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRS_LN2")+" = "+_CUR.CONS_STA_DEPT$
15620 IF _ORIG.INA_ACCT_PRT$=_CUR.INA_ACCT_PRT$ OR INA_ACCT_PRT$=_CUR.INA_ACCT_PRT$ THEN GOTO *NEXT ELSE IF _ORIG.INA_ACCT_PRT$=INA_ACCT_PRT$ THEN _CHG2$=_CHG2$+SEP+MSG("FRS_LN3")+" = "+_CUR.INA_ACCT_PRT$,_CHG_VAR$(60,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRS_LN3")+" = "+_CUR.INA_ACCT_PRT$
15630 IF _ORIG.INC_STA_PRT_SUBACCT$=_CUR.INC_STA_PRT_SUBACCT$ OR INC_STA_PRT_SUBACCT$=_CUR.INC_STA_PRT_SUBACCT$ THEN GOTO *NEXT ELSE IF _ORIG.INC_STA_PRT_SUBACCT$=INC_STA_PRT_SUBACCT$ THEN _CHG2$=_CHG2$+SEP+MSG("FRS_LN4")+" = "+_CUR.INC_STA_PRT_SUBACCT$,_CHG_VAR$(61,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRS_LN4")+" = "+_CUR.INC_STA_PRT_SUBACCT$
15640 IF _ORIG.INC_STA_FMT$=_CUR.INC_STA_FMT$ OR INC_STA_FMT$=_CUR.INC_STA_FMT$ THEN GOTO *NEXT ELSE IF _ORIG.INC_STA_FMT$=INC_STA_FMT$ THEN _CHG2$=_CHG2$+SEP+MSG("FRS_LN5")+" = "+_CUR.INC_STA_FMT$,_CHG_VAR$(62,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRS_LN5")+" = "+_CUR.INC_STA_FMT$
15650 IF _ORIG.BAL_SHE_FMT$=_CUR.BAL_SHE_FMT$ OR BAL_SHE_FMT$=_CUR.BAL_SHE_FMT$ THEN GOTO *NEXT ELSE IF _ORIG.BAL_SHE_FMT$=BAL_SHE_FMT$ THEN _CHG2$=_CHG2$+SEP+MSG("FRS_LN6")+" = "+_CUR.BAL_SHE_FMT$,_CHG_VAR$(63,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRS_LN6")+" = "+_CUR.BAL_SHE_FMT$
15660 IF _ORIG.BAL_SHE_SUBACT$=_CUR.BAL_SHE_SUBACT$ OR BAL_SHE_SUBACT$=_CUR.BAL_SHE_SUBACT$ THEN GOTO *NEXT ELSE IF _ORIG.BAL_SHE_SUBACT$=BAL_SHE_SUBACT$ THEN _CHG2$=_CHG2$+SEP+MSG("FRS_LN7")+" = "+_CUR.BAL_SHE_SUBACT$,_CHG_VAR$(64,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRS_LN7")+" = "+_CUR.BAL_SHE_SUBACT$
15670 IF _ORIG.FS_REPRT_RECA$=_CUR.FS_REPRT_RECA$ OR FS_REPRT_RECA$=_CUR.FS_REPRT_RECA$ THEN GOTO *NEXT ELSE IF _ORIG.FS_REPRT_RECA$=FS_REPRT_RECA$ THEN _CHG2$=_CHG2$+SEP+MSG("FRS_LN8")+" = "+_CUR.FS_REPRT_RECA$,_CHG_VAR$(65,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRS_LN8")+" = "+_CUR.FS_REPRT_RECA$
15680 IF _ORIG.MAIL_CODE_1$=_CUR.MAIL_CODE_1$ OR MAIL_CODE_1$=_CUR.MAIL_CODE_1$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_CODE_1$=MAIL_CODE_1$ THEN _CHG2$=_CHG2$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_1$,_CHG_VAR$(66,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_1$
15690 IF _ORIG.MAIL_CODE_2$=_CUR.MAIL_CODE_2$ OR MAIL_CODE_2$=_CUR.MAIL_CODE_2$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_CODE_2$=MAIL_CODE_2$ THEN _CHG2$=_CHG2$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_2$,_CHG_VAR$(67,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_2$
15700 IF _ORIG.MAIL_CODE_3$=_CUR.MAIL_CODE_3$ OR MAIL_CODE_3$=_CUR.MAIL_CODE_3$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_CODE_3$=MAIL_CODE_3$ THEN _CHG2$=_CHG2$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_3$,_CHG_VAR$(68,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_3$
15710 IF _ORIG.MAIL_CODE_4$=_CUR.MAIL_CODE_4$ OR MAIL_CODE_4$=_CUR.MAIL_CODE_4$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_CODE_4$=MAIL_CODE_4$ THEN _CHG2$=_CHG2$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_4$,_CHG_VAR$(69,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_4$
15720 IF _ORIG.MAIL_CODE_5$=_CUR.MAIL_CODE_5$ OR MAIL_CODE_5$=_CUR.MAIL_CODE_5$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_CODE_5$=MAIL_CODE_5$ THEN _CHG2$=_CHG2$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_5$,_CHG_VAR$(70,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_5$
15730 IF _ORIG.MAIL_CODE_6$=_CUR.MAIL_CODE_6$ OR MAIL_CODE_6$=_CUR.MAIL_CODE_6$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_CODE_6$=MAIL_CODE_6$ THEN _CHG2$=_CHG2$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_6$,_CHG_VAR$(71,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_6$
15740 IF _ORIG.MAIL_CODE_7$=_CUR.MAIL_CODE_7$ OR MAIL_CODE_7$=_CUR.MAIL_CODE_7$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_CODE_7$=MAIL_CODE_7$ THEN _CHG2$=_CHG2$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_7$,_CHG_VAR$(72,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_7$
15750 IF _ORIG.MAIL_CODE_8$=_CUR.MAIL_CODE_8$ OR MAIL_CODE_8$=_CUR.MAIL_CODE_8$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_CODE_8$=MAIL_CODE_8$ THEN _CHG2$=_CHG2$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_8$,_CHG_VAR$(73,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_8$
15760 IF _ORIG.MAIL_CODE_9$=_CUR.MAIL_CODE_9$ OR MAIL_CODE_9$=_CUR.MAIL_CODE_9$ THEN GOTO *NEXT ELSE IF _ORIG.MAIL_CODE_9$=MAIL_CODE_9$ THEN _CHG2$=_CHG2$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_9$,_CHG_VAR$(74,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAIL_L_C")+" = "+_CUR.MAIL_CODE_9$
15770 IF _ORIG.CB_PR_COMP_COUNT$=_CUR.CB_PR_COMP_COUNT$ OR CB_PR_COMP_COUNT$=_CUR.CB_PR_COMP_COUNT$ THEN GOTO *NEXT ELSE IF _ORIG.CB_PR_COMP_COUNT$=CB_PR_COMP_COUNT$ THEN _CHG2$=_CHG2$+SEP+MSG("PIS_LN1")+" = "+_CUR.CB_PR_COMP_COUNT$,_CHG_VAR$(75,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PIS_LN1")+" = "+_CUR.CB_PR_COMP_COUNT$
15780 IF _ORIG.CB_PAGE_BREAK$=_CUR.CB_PAGE_BREAK$ OR CB_PAGE_BREAK$=_CUR.CB_PAGE_BREAK$ THEN GOTO *NEXT ELSE IF _ORIG.CB_PAGE_BREAK$=CB_PAGE_BREAK$ THEN _CHG2$=_CHG2$+SEP+MSG("PIS_LN2")+" = "+_CUR.CB_PAGE_BREAK$,_CHG_VAR$(76,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PIS_LN2")+" = "+_CUR.CB_PAGE_BREAK$
15790 IF _ORIG.CB_VARIANCE$=_CUR.CB_VARIANCE$ OR CB_VARIANCE$=_CUR.CB_VARIANCE$ THEN GOTO *NEXT ELSE IF _ORIG.CB_VARIANCE$=CB_VARIANCE$ THEN _CHG2$=_CHG2$+SEP+MSG("PJS_LN1")+" = "+_CUR.CB_VARIANCE$,_CHG_VAR$(77,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PJS_LN1")+" = "+_CUR.CB_VARIANCE$
15800 IF _ORIG.CB_ITEM_NO$=_CUR.CB_ITEM_NO$ OR CB_ITEM_NO$=_CUR.CB_ITEM_NO$ THEN GOTO *NEXT ELSE IF _ORIG.CB_ITEM_NO$=CB_ITEM_NO$ THEN _CHG2$=_CHG2$+SEP+MSG("PJS_LN2")+" = "+_CUR.CB_ITEM_NO$,_CHG_VAR$(78,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PJS_LN2")+" = "+_CUR.CB_ITEM_NO$
15810 IF _ORIG.CB_ONLY_ITEM$=_CUR.CB_ONLY_ITEM$ OR CB_ONLY_ITEM$=_CUR.CB_ONLY_ITEM$ THEN GOTO *NEXT ELSE IF _ORIG.CB_ONLY_ITEM$=CB_ONLY_ITEM$ THEN _CHG2$=_CHG2$+SEP+MSG("PJS_LN3")+" = "+_CUR.CB_ONLY_ITEM$,_CHG_VAR$(79,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PJS_LN3")+" = "+_CUR.CB_ONLY_ITEM$
15820 IF _ORIG.CB_VAL_VAR$=_CUR.CB_VAL_VAR$ OR CB_VAL_VAR$=_CUR.CB_VAL_VAR$ THEN GOTO *NEXT ELSE IF _ORIG.CB_VAL_VAR$=CB_VAL_VAR$ THEN _CHG2$=_CHG2$+SEP+MSG("PJS_LN4")+" = "+_CUR.CB_VAL_VAR$,_CHG_VAR$(80,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PJS_LN4")+" = "+_CUR.CB_VAL_VAR$
15830 IF _ORIG.ML_LOC_START$=_CUR.ML_LOC_START$ OR ML_LOC_START$=_CUR.ML_LOC_START$ THEN GOTO *NEXT ELSE IF _ORIG.ML_LOC_START$=ML_LOC_START$ THEN _CHG2$=_CHG2$+SEP+MSG("LOCATION")+" = "+_CUR.ML_LOC_START$,_CHG_VAR$(81,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOCATION")+" = "+_CUR.ML_LOC_START$
15840 IF _ORIG.ML_LOC_END$=_CUR.ML_LOC_END$ OR ML_LOC_END$=_CUR.ML_LOC_END$ THEN GOTO *NEXT ELSE IF _ORIG.ML_LOC_END$=ML_LOC_END$ THEN _CHG2$=_CHG2$+SEP+MSG("LOCATION")+" = "+_CUR.ML_LOC_END$,_CHG_VAR$(82,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOCATION")+" = "+_CUR.ML_LOC_END$
15850 IF _ORIG.ML_BIN_START$=_CUR.ML_BIN_START$ OR ML_BIN_START$=_CUR.ML_BIN_START$ THEN GOTO *NEXT ELSE IF _ORIG.ML_BIN_START$=ML_BIN_START$ THEN _CHG2$=_CHG2$+SEP+MSG("BIN_LOC")+" = "+_CUR.ML_BIN_START$,_CHG_VAR$(83,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BIN_LOC")+" = "+_CUR.ML_BIN_START$
15860 IF _ORIG.ML_BIN_END$=_CUR.ML_BIN_END$ OR ML_BIN_END$=_CUR.ML_BIN_END$ THEN GOTO *NEXT ELSE IF _ORIG.ML_BIN_END$=ML_BIN_END$ THEN _CHG2$=_CHG2$+SEP+MSG("BIN_LOC")+" = "+_CUR.ML_BIN_END$,_CHG_VAR$(84,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BIN_LOC")+" = "+_CUR.ML_BIN_END$
15870 IF _ORIG.ML_CUST_START$=_CUR.ML_CUST_START$ OR ML_CUST_START$=_CUR.ML_CUST_START$ THEN GOTO *NEXT ELSE IF _ORIG.ML_CUST_START$=ML_CUST_START$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.ML_CUST_START$,_CHG_VAR$(85,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.ML_CUST_START$
15880 IF _ORIG.ML_CUST_END$=_CUR.ML_CUST_END$ OR ML_CUST_END$=_CUR.ML_CUST_END$ THEN GOTO *NEXT ELSE IF _ORIG.ML_CUST_END$=ML_CUST_END$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.ML_CUST_END$,_CHG_VAR$(86,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.ML_CUST_END$
15890 IF _ORIG.ML_ITEM_START$=_CUR.ML_ITEM_START$ OR ML_ITEM_START$=_CUR.ML_ITEM_START$ THEN GOTO *NEXT ELSE IF _ORIG.ML_ITEM_START$=ML_ITEM_START$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ML_ITEM_START$,_CHG_VAR$(87,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ML_ITEM_START$
15900 IF _ORIG.ML_ITEM_END$=_CUR.ML_ITEM_END$ OR ML_ITEM_END$=_CUR.ML_ITEM_END$ THEN GOTO *NEXT ELSE IF _ORIG.ML_ITEM_END$=ML_ITEM_END$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ML_ITEM_END$,_CHG_VAR$(88,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ML_ITEM_END$
15910 IF _ORIG.ML_SEQ_START$=_CUR.ML_SEQ_START$ OR ML_SEQ_START$=_CUR.ML_SEQ_START$ THEN GOTO *NEXT ELSE IF _ORIG.ML_SEQ_START$=ML_SEQ_START$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ")+" = "+_CUR.ML_SEQ_START$,_CHG_VAR$(89,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ")+" = "+_CUR.ML_SEQ_START$
15920 IF _ORIG.ML_SEQ_END$=_CUR.ML_SEQ_END$ OR ML_SEQ_END$=_CUR.ML_SEQ_END$ THEN GOTO *NEXT ELSE IF _ORIG.ML_SEQ_END$=ML_SEQ_END$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ")+" = "+_CUR.ML_SEQ_END$,_CHG_VAR$(90,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ")+" = "+_CUR.ML_SEQ_END$
15930 IF _ORIG.ML_PROD_START$=_CUR.ML_PROD_START$ OR ML_PROD_START$=_CUR.ML_PROD_START$ THEN GOTO *NEXT ELSE IF _ORIG.ML_PROD_START$=ML_PROD_START$ THEN _CHG2$=_CHG2$+SEP+MSG("PROD_CODE")+" = "+_CUR.ML_PROD_START$,_CHG_VAR$(91,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROD_CODE")+" = "+_CUR.ML_PROD_START$
15940 IF _ORIG.ML_PROD_END$=_CUR.ML_PROD_END$ OR ML_PROD_END$=_CUR.ML_PROD_END$ THEN GOTO *NEXT ELSE IF _ORIG.ML_PROD_END$=ML_PROD_END$ THEN _CHG2$=_CHG2$+SEP+MSG("PROD_CODE")+" = "+_CUR.ML_PROD_END$,_CHG_VAR$(92,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROD_CODE")+" = "+_CUR.ML_PROD_END$
15950 IF _ORIG.VEND_START$=_CUR.VEND_START$ OR VEND_START$=_CUR.VEND_START$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_START$=VEND_START$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_START$,_CHG_VAR$(93,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_START$
15960 IF _ORIG.VEND_END$=_CUR.VEND_END$ OR VEND_END$=_CUR.VEND_END$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_END$=VEND_END$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_END$,_CHG_VAR$(94,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_END$
15970 IF _ORIG.PLANT_START$=_CUR.PLANT_START$ OR PLANT_START$=_CUR.PLANT_START$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_START$=PLANT_START$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_START$,_CHG_VAR$(95,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_START$
15980 IF _ORIG.PLANT_END$=_CUR.PLANT_END$ OR PLANT_END$=_CUR.PLANT_END$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_END$=PLANT_END$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_END$,_CHG_VAR$(96,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_END$
15985 IF _ORIG.CB_LOT_SP$=_CUR.CB_LOT_SP$ OR CB_LOT_SP$=_CUR.CB_LOT_SP$ THEN GOTO *NEXT ELSE IF _ORIG.CB_LOT_SP$=CB_LOT_SP$ THEN _CHG2$=_CHG2$+SEP+MSG("PJS_LN4")+" = "+_CUR.CB_LOT_SP$,_CHG_VAR$(97,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PJS_LN4")+" = "+_CUR.CB_LOT_SP$; REM SSP 187353
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
20000 VIEW_REPORT:
20001 PRINT_REPORT:
20010 ! View Report Routine.
20020 IOLIST A$
20030 IOLIST R0$,W$
20040 ZZPARM=HFN; OPEN (ZZPARM)"ZZPARM"; READ (ZZPARM,KEY=FID(0)+"      ")X3$,*,X4$; READ (ZZPARM,KEY="STATI/C")T1$,F0
20050 ZZP=HFN; OPEN (ZZP)"ZZP"
20060 ! 
20070 GOSUB SEL_DATE; IF CHANGE_FLG THEN GOSUB CHECK_CHANGES ELSE GOSUB ASSIGN_PRG
20080 A$(1,6)="ICGRDS"
20090 IF ID$="RPT_VEIW" THEN R0$(2,6)="P_    "
20190 K$=X3$(1,8),%GUI=1
20267 %B_WINDATE_FMT$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD",JJ$=DTE(0:"%Yl%Mz%Dz"); CALL "ZZWDTE;VALIDATE",JJ$,JJJ$,JJJJ$; X3$(21,6)=JJ$
20268 IF POS(PRT_MODE$="QS")>0 THEN GOSUB REPORT_PRINT_MODE; CMD_STR$="END"; RETURN ! SSP 240570
20269 REM IF WHO="jdf" THEN ESCAPE ; IF CB_ONLY_ITEM$="Y" AND SET_CB=1 THEN A$(74,4)="    ",A$(78,2)="  " ! SSP236972 jdf
20270 WRITE (ZZP,KEY=K$)X3$,X4$,T1$,R0$,W$,A$
20275 WIN_D$=FIN(0),WIN_CURR=DEC(WIN_D$(10,1))
20277 IF A$(91,1)="Y" THEN Q1$="S"; PRINT 'DIALOGUE'(5,10,80,24,"Set Average Cost Utility"),'CS'; CALL "IC2UT6",X3$,X4$,Q0$,Q1$; PRINT 'POP',
20278 PRINT 'CURSOR'(1),
20280 PRG_TO_CALL$="IC2RDA" ! SSP 228228
20281 IF RB_PRT$>"0" THEN CALL "ZZ2DRV",PRG_TO_CALL$ ELSE CALL PRG_TO_CALL$ ! SSP 228228
20284 PRINT 'CURSOR'(0),
20285 CMD_STR$="END"
20290 EXIT 
25000 ! 25000,10
25010 ASSIGN_LIB:
25020 ! Output Option
25025 IF LEN(A$)<>125 THEN A$=PAD(A$,125," ")
25030 IF NUM(A$(71,1))=0 THEN A$(71,1)="1"
25040 PRT_MODE$=R0$(1,1),RPT_OUTDEV$=R0$(2,2)
25050 RPT_VERT$=R0$(9,1),RPT_HORIZ$=R0$(10,1)
25060 RPT_AUX1$=R0$(11,1),RPT_AUX2$=R0$(12,1)
25070 RPT_LINES$=R0$(15,2),RPT_FORMCODE$=R0$(17,1)
25080 RPT_JOBCARD$=MID(R0$,65,60),RPT_JOBCARD_FLG$=MID(R0$,125,1)
25090 RPT_AUX3$=R0$(13,1),RPT_AUX4$=R0$(14,1)
25100 ! Selection Options
25110 RPT_SELEC$=A$(7,12),RPT_DESC$=A$(19,40),RPT_OPT$=A$(59,12),RPT_SEQ$=A$(71,1)
25112 CB_ONLY_ITEM$=A$(73,1),CB_PR_COMP_COUNT$=A$(92,1),CB_VAL_VAR$=A$(90,1),CB_ITEM_NO$=A$(91,1),CB_LOT_SP$=A$(93,1),CB_ELIM_NEG$=A$(98,1); REM SSP 187353!SSP#289922
25115 IF CB_ONLY_ITEM$="Y" THEN CALL "*WINGRP;HIDE",FY.GRP$ ELSE CALL "*WINGRP;SHOW",FY.GRP$
25120 IF STP(RPT_OPT$)="" THEN RPT_OPT$=""
25130 IF STP(RPT_SELEC$)="" THEN RPT_SELEC$=""
25370 REFRESH_FLG=1; DIM S$(10,"~")
25390 SWITCH RPT_SEQ$
25400 CASE "5"
25410 VEND_START$=STP(W$(1,10)); IF W$(15,10)<>S$ THEN VEND_END$=W$(15,10)
25430 PLANT_START$=STP(W$(11,4)); IF W$(25,4)<>S$(1,4) THEN PLANT_END$=W$(25,4)
25440 ML_PROD_START$=STP(W$(29,3)); IF W$(32,3)<>S$(1,3) THEN ML_PROD_END$=W$(32,3)
25450 ML_CUST_START$=STP(W$(35,10)); IF W$(55,10)<>S$ THEN ML_CUST_END$=W$(55,10)
25460 ML_ITEM_START$=STP(W$(45,10)); IF W$(65,10)<>S$ THEN ML_ITEM_END$=W$(65,10)
25470 BREAK
25480 CASE "2"
25490 ML_PROD_START$=STP(W$(1,3)); IF W$(4,3)<>S$(1,3) THEN ML_PROD_END$=W$(4,3) ! SSP236972 jdf
25510 ML_CUST_START$=STP(W$(7,10)); IF W$(27,10)<>S$ THEN ML_CUST_END$=W$(27,10)
25520 ML_ITEM_START$=STP(W$(17,10)); IF W$(37,10)<>S$ THEN ML_ITEM_END$=W$(37,10)
25530 T1$="IC5   "
25540 BREAK
25550 CASE "3"
25560 ML_LOC_START$=STP(W$(1,4)); IF W$(5,4)<>S$(1,4) THEN ML_LOC_END$=W$(5,4)
25570 ML_PROD_START$=STP(W$(9,3)); IF W$(12,3)<>S$(1,3) THEN ML_PROD_END$=W$(12,3)
25590 ML_CUST_START$=STP(W$(15,10)); IF W$(25,10)<>S$ THEN ML_CUST_END$=W$(25,10)
25600 ML_ITEM_START$=STP(W$(35,10)); IF W$(45,10)<>S$ THEN ML_ITEM_END$=W$(45,10)
25610 BREAK
25620 CASE "1"
25630 ML_CUST_START$=STP(W$(1,10)); IF W$(21,10)<>S$ THEN ML_CUST_END$=W$(21,10) ELSE IF W$(21,10)=S$ THEN ML_CUST_END$=""
25650 ML_ITEM_START$=STP(W$(11,10)); IF W$(31,10)<>S$ THEN ML_ITEM_END$=W$(31,10) ELSE IF W$(31,10)=S$ THEN ML_ITEM_END$=""
25660 ML_LOC_START$=STP(W$(41,4)); IF W$(45,4)<>S$(1,4) THEN ML_LOC_END$=W$(45,4) ELSE IF W$(45,4)=S$(1,4) THEN ML_LOC_END$=""
25670 T1$="IC1   "
25680 BREAK
25690 CASE "4"
25700 ML_ITEM_START$=STP(W$(29,10)); IF W$(39,10)<>S$ THEN ML_ITEM_END$=W$(39,10)
25720 ML_CUST_START$=STP(W$(9,10)); IF W$(19,10)<>S$ THEN ML_CUST_END$=W$(19,10)
25730 ML_SALESMAN_START$=STP(W$(1,4)); IF W$(5,4)<>S$(1,4) THEN ML_SALESMAN_END$=W$(5,4)
25740 ML_LOC_START$=STP(W$(49,4)); IF W$(53,4)<>S$(1,4) THEN ML_LOC_END$=W$(53,4)
25750 MAIL_CODE_1$=A$(80,3),NOT_USED$=A$(83,7),T1$="ARU   "
25760 BREAK
25770 END SWITCH 
25780 RETURN 
25790 ASSIGN_PRG:
25800 A$(1,6)=ARG_1$,A$(7,12)=RPT_SELEC$,A$(19,40)=RPT_DESC$,A$(59,12)=RPT_OPT$,A$(71,1)=RPT_SEQ$
25810 A$(59,12)=RPT_OPT$; A$(71,1)=RPT_SEQ$
25820 ! 
25830 R0$(1,1)=PRT_MODE$,R0$(2,6)=RPT_OUTDEV$(1,2)+"    ",R0$(9,1)=RPT_VERT$,R0$(10,1)=RPT_HORIZ$
25840 R0$(11,1)=RPT_AUX1$,R0$(12,1)=RPT_AUX2$,R0$(13,1)=RPT_AUX3$,R0$(14,1)=RPT_AUX4$
25850 R0$(15,2)=RPT_LINES$,R0$(17,1)=RPT_FORMCODE$,R0$(65,60)=RPT_JOBCARD$
25860 R0$(125,1)=RPT_JOBCARD_FLG$; DIM W$(71,"~")
25865 A$(74,6)=TF_YEAR$+PER$,A$(73,1)=CB_ONLY_ITEM$,A$(92,1)=CB_PR_COMP_COUNT$,A$(90,1)=CB_VAL_VAR$,A$(91,1)=CB_ITEM_NO$,A$(93,1)=CB_LOT_SP$,A$(98,1)=CB_ELIM_NEG$; REM SSP 187353
25866 IF CB_ONLY_ITEM$="Y" THEN A$(74,6)="      "
25890 SWITCH RPT_SEQ$
25900 CASE "5"
25910 DIM W$(74,"~")
25920 W$(1,10)=VEND_START$; IF VEND_END$<>"" THEN W$(15,10)=VEND_END$
25930 W$(11,4)=PLANT_START$; IF PLANT_END$<>"" THEN W$(25,4)=PLANT_END$
25940 W$(29,3)=ML_PROD_START$; IF ML_PROD_END$<>"" THEN W$(32,3)=ML_PROD_END$
25950 W$(35,10)=ML_CUST_START$; IF ML_CUST_END$<>"" THEN W$(55,10)=ML_CUST_END$
25960 W$(45,10)=ML_ITEM_START$; IF ML_ITEM_END$<>"" THEN W$(65,10)=ML_ITEM_END$
25970 BREAK
25980 CASE "2"
25990 DIM W$(47,"~")
26000 W$(1,3)=ML_PROD_START$; IF ML_PROD_END$<>"" THEN W$(4,3)=ML_PROD_END$ ! SSP236972 jdf
26010 W$(7,10)=ML_CUST_START$; IF ML_CUST_END$<>"" THEN W$(27,10)=ML_CUST_END$
26020 W$(17,10)=ML_ITEM_START$; IF ML_ITEM_END$<>"" THEN W$(37,10)=ML_ITEM_END$
26030 T1$="IC5   "
26035 IF CB_ONLY_ITEM$="N" THEN A$(74,4)=START_FISCAL$,A$(78,2)=START_ACCTPD$ ! SSP236972 jdf
26037 IF CB_ONLY_ITEM$="Y" THEN SET_CB=1 ! SSP236972 jdf
26040 BREAK
26050 CASE "3"
26060 DIM W$(55,"~")
26070 W$(1,4)=ML_LOC_START$; IF ML_LOC_END$<>"" THEN W$(5,4)=ML_LOC_END$
26080 W$(9,3)=ML_PROD_START$; IF ML_PROD_END$<>"" THEN W$(12,3)=ML_PROD_END$
26090 W$(15,10)=ML_CUST_START$; IF ML_CUST_END$<>"" THEN W$(25,10)=ML_CUST_END$
26100 W$(35,10)=ML_ITEM_START$; IF ML_ITEM_END$<>"" THEN W$(45,10)=ML_ITEM_END$
26105 T1$="IC6   "
26107 IF CB_ONLY_ITEM$="N" THEN A$(74,4)=START_FISCAL$,A$(78,2)=START_ACCTPD$ ! SSP236972 jdf
26108 IF CB_ONLY_ITEM$="Y" THEN SET_CB=1 ! SSP236972 jdf
26110 BREAK
26120 CASE "1"
26130 DIM W$(48,"~")
26140 W$(1,10)=ML_CUST_START$; IF ML_CUST_END$<>"" THEN W$(21,10)=ML_CUST_END$
26150 W$(11,10)=ML_ITEM_START$; IF ML_ITEM_END$<>"" THEN W$(31,10)=ML_ITEM_END$
26160 W$(41,4)=ML_LOC_START$; IF ML_LOC_END$<>"" THEN W$(45,4)=ML_LOC_END$
26170 T1$="IC1   "
26175 IF CB_ONLY_ITEM$="N" THEN A$(74,4)=START_FISCAL$,A$(78,2)=START_ACCTPD$ ! SSP236972 jdf
26177 IF CB_ONLY_ITEM$="Y" THEN SET_CB=1 ! SSP236972 jdf
26180 BREAK
26190 CASE "4"
26200 DIM W$(56,"~")
26210 W$(29,10)=ML_ITEM_START$; IF ML_ITEM_END$<>"" THEN W$(39,10)=ML_ITEM_END$
26220 W$(9,10)=ML_CUST_START$; IF ML_CUST_END$<>"" THEN W$(19,10)=ML_CUST_END$
26230 W$(1,4)=ML_SALESMAN_START$; IF ML_SALESMAN_END$<>"" THEN W$(5,4)=ML_SALESMAN_END$
26240 W$(49,4)=ML_LOC_START$; IF ML_LOC_END$<>"" THEN W$(53,4)=ML_LOC_END$
26250 A$(80,3)=MAIL_CODE_1$,A$(83,7)=NOT_USED$,T1$="ARU   "
26255 IF SET_CB=1 THEN A$(74,6)="      " ELSE A$(74,4)=START_FISCAL$,A$(78,2)=START_ACCTPD$ ! SSP236972 jdf
26260 BREAK
26270 END SWITCH 
26280 RETURN 
26290 SEL_DATE:
26300 IF LEN(START_FISCAL$)>4 THEN TF_YEAR$=%CR_YEAR$ ELSE TF_YEAR$=START_FISCAL$; REM SSP THIS WAS AN ORACLE CHANGE...RELEASED ON 187353
26310 IF LEN(START_ACCTPD$)>2 THEN PER$=%CR_PD$ ELSE PER$=START_ACCTPD$
26320 FIND (_ZZPARM,KEY=%C$+"G/LYE"+TF_YEAR$,ERR=26370)REC_DAT$; REC_DAT$=REC_DAT$(21); REM SSP 187353 ! SSP236972 jdf
26330 DIM CUR_DATE$[12]
26340 FOR XX=1 TO 12; CUR_DATE$[XX]=FND$(REC_DAT$(XX*6-5,6)); NEXT XX
26350 ML_ENDING_PERIOD$=CUR_DATE$[NUM(PER$)]
26360 REFRESH_FLG=1
26370 RETURN 
45000 ! 
45005 REPORT_PRINT_MODE:
45010 RPT_PGM$="IC2RDA" ! Report Print Program Name
45015 RPT_SPLIT$="" ! Separate File Option
45020 DIM RPT_OPTIONS$[10,20]
45025 PRT$=R0$,RNG$=W$,ZZS$=A$
45030 ! Set variable names X3$,X4$,T1$,PRT$,RNG$,ZZS$ if required
45070 IF NOT(NUL(RB_PRT$)) AND RB_PRT$>"0" THEN RPT_SPLIT$="Y"
45075 RPT_OPTIONS_COUNT=0 ! Maximum 9 allowed
45080 PERFORM "ZGXOPO;PROCESS_PRINT_MODE"
45090 RETURN 
45099 ! 
56000 REM "187353-Modify Valued Inventory Report (P/O, R4) to have a new sort    
56002 ! "228228-Ability to split a report into multiple PDFs based on sales 
56003 REM "236972-Valued Inventory report - do not have ability to print      
56004 REM "307337-DBSPT-111591 Inventory balance based on specific period     
60000 SELECT_SELECTION:
60010 _KEY$="IC2RDA"+RPT_SELEC$,_KEY$=PAD(_KEY$,18," ")
60020 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD1)A$,R0$,W$,RNG{ALL}
60030 GOTO NXT_OPTION
60500 NEW_RECORD1:
60510 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
60520 IF _YESNO$="NO" THEN GOSUB MAIN_POST_DISPLAY; EXIT 
60530 DIM A$(128),R0$(128),W$(71),RNG(4)
60540 A$(71,1)="1",A$(1,6)="IC2RDA",A$(7,LEN(RPT_SELEC$))=RPT_SELEC$,A$(73,1)="Y",A$(90,2)="NN",W$(21,10)=DIM(10,"~"),W$(31,10)=DIM(10,"~"),W$(45,4)=DIM(4,"~")
60550 WRITE (_FIL_NO,KEY=_KEY$)A$,R0$,W$,RNG{ALL}
60560 GOTO NXT_OPTION
