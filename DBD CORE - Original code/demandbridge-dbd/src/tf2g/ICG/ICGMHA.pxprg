0010 ! Quantity Break Pricing Setup <ICGMHA>
0020 ! Copyright 2003 TopForm Inc.; Norcross, Georgia
0030 ! Licensed Software - All Rights Reserved.
0031 ! By: JIR, 
0035 REM "5.6 - 03/18/09 - 16.154166 - jvv - SSP# 224887
0037 REM "224887-Program ICGMHA Qty break pricing table displaying           
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0042 SETERR 0044; ENTER CUSTOMER$,ITEM_CODE$ ! SSP 224887
0045 ARG_1$=CUSTOMER$,ARG_2$=ITEM_CODE$ ! SSP 224887
0050 PROCESS "ICGMHA","../ICG/IC.EN",ARG_1$,ARG_2$
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="IC0"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0175 _ZZP=FFN("ZZPARM"); IF _ZZP<=0 THEN _ZZP=HFN; OPEN (_ZZP,ERR=OPEN_ERR)"ZZPARM"
0176 FIND (_ZZP,KEY=FID(0)+"      ")X3$,*,X4$; DIM SEC$(255); READ (_ZZP,KEY="osec"+X3$(40,3),DOM=*NEXT)SEC$ ! SSP 224887
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=2
0430 DIM _KEYS$[1:2]; _KEYS$[1]="CUSTOMER$",_KEYS$[2]="ITEM_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 IF ARG_1$+ARG_2$<>"" THEN CUST_CALL$=ARG_1$,ITEM_CALL$=ARG_2$; ARG_1$="",ARG_2$=""; REFRESH_FLG=1,_KCNT=3,NEXT_ID=SELL_UM.CTL; ID$="CUSTOMER",CUSTOMER$=CUST_CALL$; PERFORM "ICGMDA;PROCESS_AR1"; ITEM_CODE$=ITEM_CALL$; PERFORM "ICGMDA;PROCESS_IC0"; CALL "*WINGRP;DISABLE",KEY1.GRP$; ARG_1$=CUSTOMER$+ITEM_CODE$
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0942 IF _AR1 THEN CLOSE (_AR1)
0943 IF _IC0 THEN CLOSE (_IC0)
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB DISP_REC ! SSP 224887
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1418 GOSUB FINISH_BREAK ! SSP 224887
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 ! 
1445 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY,CMD_STR$="E"
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1670 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_REMOVE$+_R_KEY$,_FYI$,"INFO"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3055 BB_SELL_UM$=SELL_UM$,BB_SELL_QTY_PER$=SELL_QTY_PER$ ! SSP 224887
3060 CHANGE_FLG=0
3062 GOSUB DISP_REC ! SSP 224887
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3330 _R_KEY$=KEC(_FIL_NO); TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO"
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3525 GOSUB 20030; GOSUB 20230 ! SSP 224887
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUST_DIV.CTL,_FIRST_FIELD=ITEM_DESC.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 BASE_PRICE$=STR(BASE_PRICE)
10030 QTY_BREAK_1$=STR(QTY_BREAK_1)
10040 QTY_PRICE_1$=STR(QTY_PRICE_1)
10050 QTY_BREAK_2$=STR(QTY_BREAK_2)
10060 QTY_PRICE_2$=STR(QTY_PRICE_2)
10070 QTY_BREAK_3$=STR(QTY_BREAK_3)
10080 QTY_PRICE_3$=STR(QTY_PRICE_3)
10090 QTY_BREAK_4$=STR(QTY_BREAK_4)
10100 QTY_PRICE_4$=STR(QTY_PRICE_4)
10110 QTY_BREAK_5$=STR(QTY_BREAK_5)
10120 QTY_PRICE_5$=STR(QTY_PRICE_5)
10130 QTY_BREAK_6$=STR(QTY_BREAK_6)
10140 QTY_PRICE_6$=STR(QTY_PRICE_6)
10150 AVG_SALE_PR_FOR_FMGT$=STR(AVG_SALE_PR_FOR_FMGT)
10160 SELL_QTY_PER$=STR(SELL_QTY_PER)
10170 INVENTORY_QTY_PER$=STR(INVENTORY_QTY_PER)
10180 CTN_WT$=STR(CTN_WT)
10190 LAST_PURCH_COST$=STR(LAST_PURCH_COST)
10200 AVG_COST$=STR(AVG_COST)
10210 CTN_PACK$=STR(CTN_PACK)
10220 SPER_UNIT_COST$=STR(SPER_UNIT_COST)
10230 QTY_BREAK_7$=STR(QTY_BREAK_7)
10240 QTY_PRICE_7$=STR(QTY_PRICE_7)
10250 QTY_BREAK_8$=STR(QTY_BREAK_8)
10260 QTY_PRICE_8$=STR(QTY_PRICE_8)
10270 QTY_BREAK_9$=STR(QTY_BREAK_9)
10280 QTY_PRICE_9$=STR(QTY_PRICE_9)
10290 QTY_BREAK_10$=STR(QTY_BREAK_10)
10300 QTY_PRICE_10$=STR(QTY_PRICE_10)
10310 QTY_BREAK_11$=STR(QTY_BREAK_11)
10320 QTY_PRICE_11$=STR(QTY_PRICE_11)
10330 QTY_BREAK_12$=STR(QTY_BREAK_12)
10340 QTY_PRICE_12$=STR(QTY_PRICE_12)
10350 IC0_UNUSED_2$=STR(IC0_UNUSED_2)
10360 IC0_UNUSED_3$=STR(IC0_UNUSED_3)
10370 IC0_UNUSED_4$=STR(IC0_UNUSED_4)
10380 IC0_UNUSED_5$=STR(IC0_UNUSED_5)
10390 IC0_UNUSED_6$=STR(IC0_UNUSED_6)
10400 IC0_UNUSED_7$=STR(IC0_UNUSED_7)
10410 IC0_UNUSED_8$=STR(IC0_UNUSED_8)
10420 IC0_UNUSED_9$=STR(IC0_UNUSED_9)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="BASE_PRICE",_X=BASE_PRICE.CTL,BASE_PRICE=NUM(BASE_PRICE$,ERR=NON_NUMERIC)
11030 _X$="QTY_BREAK_1",_X=QTY_BREAK_1.CTL,QTY_BREAK_1=NUM(QTY_BREAK_1$,ERR=NON_NUMERIC)
11040 _X$="QTY_PRICE_1",_X=QTY_PRICE_1.CTL,QTY_PRICE_1=NUM(QTY_PRICE_1$,ERR=NON_NUMERIC)
11050 _X$="QTY_BREAK_2",_X=QTY_BREAK_2.CTL,QTY_BREAK_2=NUM(QTY_BREAK_2$,ERR=NON_NUMERIC)
11060 _X$="QTY_PRICE_2",_X=QTY_PRICE_2.CTL,QTY_PRICE_2=NUM(QTY_PRICE_2$,ERR=NON_NUMERIC)
11070 _X$="QTY_BREAK_3",_X=QTY_BREAK_3.CTL,QTY_BREAK_3=NUM(QTY_BREAK_3$,ERR=NON_NUMERIC)
11080 _X$="QTY_PRICE_3",_X=QTY_PRICE_3.CTL,QTY_PRICE_3=NUM(QTY_PRICE_3$,ERR=NON_NUMERIC)
11090 _X$="QTY_BREAK_4",_X=QTY_BREAK_4.CTL,QTY_BREAK_4=NUM(QTY_BREAK_4$,ERR=NON_NUMERIC)
11100 _X$="QTY_PRICE_4",_X=QTY_PRICE_4.CTL,QTY_PRICE_4=NUM(QTY_PRICE_4$,ERR=NON_NUMERIC)
11110 _X$="QTY_BREAK_5",_X=QTY_BREAK_5.CTL,QTY_BREAK_5=NUM(QTY_BREAK_5$,ERR=NON_NUMERIC)
11120 _X$="QTY_PRICE_5",_X=QTY_PRICE_5.CTL,QTY_PRICE_5=NUM(QTY_PRICE_5$,ERR=NON_NUMERIC)
11130 _X$="QTY_BREAK_6",_X=QTY_BREAK_6.CTL,QTY_BREAK_6=NUM(QTY_BREAK_6$,ERR=NON_NUMERIC)
11140 _X$="QTY_PRICE_6",_X=QTY_PRICE_6.CTL,QTY_PRICE_6=NUM(QTY_PRICE_6$,ERR=NON_NUMERIC)
11150 _X$="AVG_SALE_PR_FOR_FMGT",_X=AVG_SALE_PR_FOR_FMGT.CTL,AVG_SALE_PR_FOR_FMGT=NUM(AVG_SALE_PR_FOR_FMGT$,ERR=NON_NUMERIC)
11160 _X$="SELL_QTY_PER",_X=SELL_QTY_PER.CTL,SELL_QTY_PER=NUM(SELL_QTY_PER$,ERR=NON_NUMERIC)
11170 _X$="INVENTORY_QTY_PER",_X=INVENTORY_QTY_PER.CTL,INVENTORY_QTY_PER=NUM(INVENTORY_QTY_PER$,ERR=NON_NUMERIC)
11180 _X$="CTN_WT",_X=CTN_WT.CTL,CTN_WT=NUM(CTN_WT$,ERR=NON_NUMERIC)
11190 _X$="LAST_PURCH_COST",_X=LAST_PURCH_COST.CTL,LAST_PURCH_COST=NUM(LAST_PURCH_COST$,ERR=NON_NUMERIC)
11200 _X$="AVG_COST",_X=AVG_COST.CTL,AVG_COST=NUM(AVG_COST$,ERR=NON_NUMERIC)
11210 _X$="CTN_PACK",_X=CTN_PACK.CTL,CTN_PACK=NUM(CTN_PACK$,ERR=NON_NUMERIC)
11220 _X$="SPER_UNIT_COST",_X=SPER_UNIT_COST.CTL,SPER_UNIT_COST=NUM(SPER_UNIT_COST$,ERR=NON_NUMERIC)
11230 _X$="QTY_BREAK_7",_X=QTY_BREAK_7.CTL,QTY_BREAK_7=NUM(QTY_BREAK_7$,ERR=NON_NUMERIC)
11240 _X$="QTY_PRICE_7",_X=QTY_PRICE_7.CTL,QTY_PRICE_7=NUM(QTY_PRICE_7$,ERR=NON_NUMERIC)
11250 _X$="QTY_BREAK_8",_X=QTY_BREAK_8.CTL,QTY_BREAK_8=NUM(QTY_BREAK_8$,ERR=NON_NUMERIC)
11260 _X$="QTY_PRICE_8",_X=QTY_PRICE_8.CTL,QTY_PRICE_8=NUM(QTY_PRICE_8$,ERR=NON_NUMERIC)
11270 _X$="QTY_BREAK_9",_X=QTY_BREAK_9.CTL,QTY_BREAK_9=NUM(QTY_BREAK_9$,ERR=NON_NUMERIC)
11280 _X$="QTY_PRICE_9",_X=QTY_PRICE_9.CTL,QTY_PRICE_9=NUM(QTY_PRICE_9$,ERR=NON_NUMERIC)
11290 _X$="QTY_BREAK_10",_X=QTY_BREAK_10.CTL,QTY_BREAK_10=NUM(QTY_BREAK_10$,ERR=NON_NUMERIC)
11300 _X$="QTY_PRICE_10",_X=QTY_PRICE_10.CTL,QTY_PRICE_10=NUM(QTY_PRICE_10$,ERR=NON_NUMERIC)
11310 _X$="QTY_BREAK_11",_X=QTY_BREAK_11.CTL,QTY_BREAK_11=NUM(QTY_BREAK_11$,ERR=NON_NUMERIC)
11320 _X$="QTY_PRICE_11",_X=QTY_PRICE_11.CTL,QTY_PRICE_11=NUM(QTY_PRICE_11$,ERR=NON_NUMERIC)
11330 _X$="QTY_BREAK_12",_X=QTY_BREAK_12.CTL,QTY_BREAK_12=NUM(QTY_BREAK_12$,ERR=NON_NUMERIC)
11340 _X$="QTY_PRICE_12",_X=QTY_PRICE_12.CTL,QTY_PRICE_12=NUM(QTY_PRICE_12$,ERR=NON_NUMERIC)
11350 _X$="IC0_UNUSED_2",_X=IC0_UNUSED_2.CTL,IC0_UNUSED_2=NUM(IC0_UNUSED_2$,ERR=NON_NUMERIC)
11360 _X$="IC0_UNUSED_3",_X=IC0_UNUSED_3.CTL,IC0_UNUSED_3=NUM(IC0_UNUSED_3$,ERR=NON_NUMERIC)
11370 _X$="IC0_UNUSED_4",_X=IC0_UNUSED_4.CTL,IC0_UNUSED_4=NUM(IC0_UNUSED_4$,ERR=NON_NUMERIC)
11380 _X$="IC0_UNUSED_5",_X=IC0_UNUSED_5.CTL,IC0_UNUSED_5=NUM(IC0_UNUSED_5$,ERR=NON_NUMERIC)
11390 _X$="IC0_UNUSED_6",_X=IC0_UNUSED_6.CTL,IC0_UNUSED_6=NUM(IC0_UNUSED_6$,ERR=NON_NUMERIC)
11400 _X$="IC0_UNUSED_7",_X=IC0_UNUSED_7.CTL,IC0_UNUSED_7=NUM(IC0_UNUSED_7$,ERR=NON_NUMERIC)
11410 _X$="IC0_UNUSED_8",_X=IC0_UNUSED_8.CTL,IC0_UNUSED_8=NUM(IC0_UNUSED_8$,ERR=NON_NUMERIC)
11420 _X$="IC0_UNUSED_9",_X=IC0_UNUSED_9.CTL,IC0_UNUSED_9=NUM(IC0_UNUSED_9$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12030 IF STP(SELL_UM$)="" THEN _W_FLG=0; MSGBOX "Please Enter Sell Unit of Measure",MSG("WARNING"),"!,TIM=5"; NEXT_ID=SELL_UM.CTL; GOTO *RETURN
12040 IF STP(SELL_QTY_PER$)="" OR NUM(SELL_QTY_PER$)=0 THEN _W_FLG=0; MSGBOX "The Sell quantity per U/M cannot be zero",MSG("WARNING"),"!,TIM=5"; NEXT_ID=SELL_QTY_PER.CTL; GOTO *RETURN
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN CUST_DIV$=""
13030 IF _CLR_FLG$="R" THEN CUST_CODE$=""
13040 IF _CLR_FLG$="R" THEN ITEM_CODE$=""
13050 ITEM_DESC$="",UM_DESC$=""
13060 PROD_CODE$=""
13070 LEFT_RIGHT$=""
13080 TOP_BOTTOM$=""
13090 PLYS$=""
13100 VEND_DIV$=""
13110 VEND_CODE$=""
13120 PLANT_CODE$=""
13130 LAST_SOLD_DATE$=""
13140 LAST_PURCH_DATE$=""
13150 STAT_FLAG$=""
13160 ITEM_PRICE_CLASS$=""
13170 LOT_INV_FOR_THIS_ITM$=""
13180 QTY_BREAK_PRICE_GRP$=""
13190 SECURE_FOR_REQ$=""
13200 NEVER_BACKORDER$=""
13210 IC0_UNUSED_1$=""
13220 SELL_UM$=""
13230 INVENTORY_UM$=""
13240 DESC_LINE_2$=""
13250 ITEM_GROUP_CODE$=""
13260 PRICING_FEATURES$=""
13270 BASE_PRICE=0
13280 QTY_BREAK_1=0
13290 QTY_PRICE_1=0
13300 QTY_BREAK_2=0
13310 QTY_PRICE_2=0
13320 QTY_BREAK_3=0
13330 QTY_PRICE_3=0
13340 QTY_BREAK_4=0
13350 QTY_PRICE_4=0
13360 QTY_BREAK_5=0
13370 QTY_PRICE_5=0
13380 QTY_BREAK_6=0
13390 QTY_PRICE_6=0
13400 AVG_SALE_PR_FOR_FMGT=0
13410 SELL_QTY_PER=0
13420 INVENTORY_QTY_PER=0
13430 CTN_WT=0
13440 LAST_PURCH_COST=0
13450 AVG_COST=0
13460 CTN_PACK=0
13470 SPER_UNIT_COST=0
13480 QTY_BREAK_7=0
13490 QTY_PRICE_7=0
13500 QTY_BREAK_8=0
13510 QTY_PRICE_8=0
13520 QTY_BREAK_9=0
13530 QTY_PRICE_9=0
13540 QTY_BREAK_10=0
13550 QTY_PRICE_10=0
13560 QTY_BREAK_11=0
13570 QTY_PRICE_11=0
13580 QTY_BREAK_12=0
13590 QTY_PRICE_12=0
13600 IC0_UNUSED_2=0
13610 IC0_UNUSED_3=0
13620 IC0_UNUSED_4=0
13630 IC0_UNUSED_5=0
13640 IC0_UNUSED_6=0
13650 IC0_UNUSED_7=0
13660 IC0_UNUSED_8=0
13670 IC0_UNUSED_9=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13992 FOR AA=1 TO 12; EXECUTE "QTY_TO_"+STR(AA)+"$="""""
13993 NEXT AA
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=ITEM_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=ITEM_CODE.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14985 IF MID(SEC$,86,1)="Y" THEN CALL "*wingrp;Disable",SEC_FIELDS.GRP$ ELSE CALL "*wingrp;Enable",SEC_FIELDS.GRP$ ! SSP 224887
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(66,"N")
15030 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15040 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15050 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15060 IF _ORIG.ITEM_DESC$=_CUR.ITEM_DESC$ OR ITEM_DESC$=_CUR.ITEM_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_DESC$=ITEM_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_DESC")+" = "+_CUR.ITEM_DESC$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_DESC")+" = "+_CUR.ITEM_DESC$
15070 IF _ORIG.PROD_CODE$=_CUR.PROD_CODE$ OR PROD_CODE$=_CUR.PROD_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PROD_CODE$=PROD_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PROD_CODE")+" = "+_CUR.PROD_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROD_CODE")+" = "+_CUR.PROD_CODE$
15080 IF _ORIG.LEFT_RIGHT$=_CUR.LEFT_RIGHT$ OR LEFT_RIGHT$=_CUR.LEFT_RIGHT$ THEN GOTO *NEXT ELSE IF _ORIG.LEFT_RIGHT$=LEFT_RIGHT$ THEN _CHG2$=_CHG2$+SEP+MSG("LEFT_RIGHT")+" = "+_CUR.LEFT_RIGHT$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LEFT_RIGHT")+" = "+_CUR.LEFT_RIGHT$
15090 IF _ORIG.TOP_BOTTOM$=_CUR.TOP_BOTTOM$ OR TOP_BOTTOM$=_CUR.TOP_BOTTOM$ THEN GOTO *NEXT ELSE IF _ORIG.TOP_BOTTOM$=TOP_BOTTOM$ THEN _CHG2$=_CHG2$+SEP+MSG("TOP_BOTTOM")+" = "+_CUR.TOP_BOTTOM$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOP_BOTTOM")+" = "+_CUR.TOP_BOTTOM$
15100 IF _ORIG.PLYS$=_CUR.PLYS$ OR PLYS$=_CUR.PLYS$ THEN GOTO *NEXT ELSE IF _ORIG.PLYS$=PLYS$ THEN _CHG2$=_CHG2$+SEP+MSG("PLYS")+" = "+_CUR.PLYS$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLYS")+" = "+_CUR.PLYS$
15110 IF _ORIG.VEND_DIV$=_CUR.VEND_DIV$ OR VEND_DIV$=_CUR.VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV$=VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$
15120 IF _ORIG.VEND_CODE$=_CUR.VEND_CODE$ OR VEND_CODE$=_CUR.VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE$=VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$
15130 IF _ORIG.PLANT_CODE$=_CUR.PLANT_CODE$ OR PLANT_CODE$=_CUR.PLANT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_CODE$=PLANT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$
15140 IF _ORIG.LAST_SOLD_DATE$=_CUR.LAST_SOLD_DATE$ OR LAST_SOLD_DATE$=_CUR.LAST_SOLD_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.LAST_SOLD_DATE$=LAST_SOLD_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("LAST_S_D")+" = "+_CUR.LAST_SOLD_DATE$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LAST_S_D")+" = "+_CUR.LAST_SOLD_DATE$
15150 IF _ORIG.LAST_PURCH_DATE$=_CUR.LAST_PURCH_DATE$ OR LAST_PURCH_DATE$=_CUR.LAST_PURCH_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.LAST_PURCH_DATE$=LAST_PURCH_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("LAST_P_D")+" = "+_CUR.LAST_PURCH_DATE$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LAST_P_D")+" = "+_CUR.LAST_PURCH_DATE$
15160 IF _ORIG.STAT_FLAG$=_CUR.STAT_FLAG$ OR STAT_FLAG$=_CUR.STAT_FLAG$ THEN GOTO *NEXT ELSE IF _ORIG.STAT_FLAG$=STAT_FLAG$ THEN _CHG2$=_CHG2$+SEP+MSG("STAT_FLAG")+" = "+_CUR.STAT_FLAG$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("STAT_FLAG")+" = "+_CUR.STAT_FLAG$
15170 IF _ORIG.ITEM_PRICE_CLASS$=_CUR.ITEM_PRICE_CLASS$ OR ITEM_PRICE_CLASS$=_CUR.ITEM_PRICE_CLASS$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_PRICE_CLASS$=ITEM_PRICE_CLASS$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_P_C")+" = "+_CUR.ITEM_PRICE_CLASS$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_P_C")+" = "+_CUR.ITEM_PRICE_CLASS$
15180 IF _ORIG.LOT_INV_FOR_THIS_ITM$=_CUR.LOT_INV_FOR_THIS_ITM$ OR LOT_INV_FOR_THIS_ITM$=_CUR.LOT_INV_FOR_THIS_ITM$ THEN GOTO *NEXT ELSE IF _ORIG.LOT_INV_FOR_THIS_ITM$=LOT_INV_FOR_THIS_ITM$ THEN _CHG2$=_CHG2$+SEP+MSG("L_I_F_T_I")+" = "+_CUR.LOT_INV_FOR_THIS_ITM$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("L_I_F_T_I")+" = "+_CUR.LOT_INV_FOR_THIS_ITM$
15190 IF _ORIG.QTY_BREAK_PRICE_GRP$=_CUR.QTY_BREAK_PRICE_GRP$ OR QTY_BREAK_PRICE_GRP$=_CUR.QTY_BREAK_PRICE_GRP$ THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_PRICE_GRP$=QTY_BREAK_PRICE_GRP$ THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_P_G")+" = "+_CUR.QTY_BREAK_PRICE_GRP$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_P_G")+" = "+_CUR.QTY_BREAK_PRICE_GRP$
15200 IF _ORIG.SECURE_FOR_REQ$=_CUR.SECURE_FOR_REQ$ OR SECURE_FOR_REQ$=_CUR.SECURE_FOR_REQ$ THEN GOTO *NEXT ELSE IF _ORIG.SECURE_FOR_REQ$=SECURE_FOR_REQ$ THEN _CHG2$=_CHG2$+SEP+MSG("SECU_F_R")+" = "+_CUR.SECURE_FOR_REQ$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SECU_F_R")+" = "+_CUR.SECURE_FOR_REQ$
15210 IF _ORIG.NEVER_BACKORDER$=_CUR.NEVER_BACKORDER$ OR NEVER_BACKORDER$=_CUR.NEVER_BACKORDER$ THEN GOTO *NEXT ELSE IF _ORIG.NEVER_BACKORDER$=NEVER_BACKORDER$ THEN _CHG2$=_CHG2$+SEP+MSG("NEV_BACK")+" = "+_CUR.NEVER_BACKORDER$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NEV_BACK")+" = "+_CUR.NEVER_BACKORDER$
15220 IF _ORIG.IC0_UNUSED_1$=_CUR.IC0_UNUSED_1$ OR IC0_UNUSED_1$=_CUR.IC0_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.IC0_UNUSED_1$=IC0_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.IC0_UNUSED_1$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.IC0_UNUSED_1$
15230 IF _ORIG.SELL_UM$=_CUR.SELL_UM$ OR SELL_UM$=_CUR.SELL_UM$ THEN GOTO *NEXT ELSE IF _ORIG.SELL_UM$=SELL_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("SELL_UM")+" = "+_CUR.SELL_UM$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_UM")+" = "+_CUR.SELL_UM$
15240 IF _ORIG.INVENTORY_UM$=_CUR.INVENTORY_UM$ OR INVENTORY_UM$=_CUR.INVENTORY_UM$ THEN GOTO *NEXT ELSE IF _ORIG.INVENTORY_UM$=INVENTORY_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("INVT_UM")+" = "+_CUR.INVENTORY_UM$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INVT_UM")+" = "+_CUR.INVENTORY_UM$
15250 IF _ORIG.DESC_LINE_2$=_CUR.DESC_LINE_2$ OR DESC_LINE_2$=_CUR.DESC_LINE_2$ THEN GOTO *NEXT ELSE IF _ORIG.DESC_LINE_2$=DESC_LINE_2$ THEN _CHG2$=_CHG2$+SEP+MSG("DESC_L_2")+" = "+_CUR.DESC_LINE_2$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DESC_L_2")+" = "+_CUR.DESC_LINE_2$
15260 IF _ORIG.ITEM_GROUP_CODE$=_CUR.ITEM_GROUP_CODE$ OR ITEM_GROUP_CODE$=_CUR.ITEM_GROUP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_GROUP_CODE$=ITEM_GROUP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_G_C")+" = "+_CUR.ITEM_GROUP_CODE$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_G_C")+" = "+_CUR.ITEM_GROUP_CODE$
15270 IF _ORIG.PRICING_FEATURES$=_CUR.PRICING_FEATURES$ OR PRICING_FEATURES$=_CUR.PRICING_FEATURES$ THEN GOTO *NEXT ELSE IF _ORIG.PRICING_FEATURES$=PRICING_FEATURES$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIC_F")+" = "+_CUR.PRICING_FEATURES$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIC_F")+" = "+_CUR.PRICING_FEATURES$
15280 IF _ORIG.BASE_PRICE=_CUR.BASE_PRICE OR BASE_PRICE=_CUR.BASE_PRICE THEN GOTO *NEXT ELSE IF _ORIG.BASE_PRICE=BASE_PRICE THEN _CHG2$=_CHG2$+SEP+MSG("BASE_PRICE")+" = "+STR(_CUR.BASE_PRICE),_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BASE_PRICE")+" = "+STR(_CUR.BASE_PRICE)
15290 IF _ORIG.QTY_BREAK_1=_CUR.QTY_BREAK_1 OR QTY_BREAK_1=_CUR.QTY_BREAK_1 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_1=QTY_BREAK_1 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_1")+" = "+STR(_CUR.QTY_BREAK_1),_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_1")+" = "+STR(_CUR.QTY_BREAK_1)
15300 IF _ORIG.QTY_PRICE_1=_CUR.QTY_PRICE_1 OR QTY_PRICE_1=_CUR.QTY_PRICE_1 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_1=QTY_PRICE_1 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_1")+" = "+STR(_CUR.QTY_PRICE_1),_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_1")+" = "+STR(_CUR.QTY_PRICE_1)
15310 IF _ORIG.QTY_BREAK_2=_CUR.QTY_BREAK_2 OR QTY_BREAK_2=_CUR.QTY_BREAK_2 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_2=QTY_BREAK_2 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_2")+" = "+STR(_CUR.QTY_BREAK_2),_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_2")+" = "+STR(_CUR.QTY_BREAK_2)
15320 IF _ORIG.QTY_PRICE_2=_CUR.QTY_PRICE_2 OR QTY_PRICE_2=_CUR.QTY_PRICE_2 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_2=QTY_PRICE_2 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_2")+" = "+STR(_CUR.QTY_PRICE_2),_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_2")+" = "+STR(_CUR.QTY_PRICE_2)
15330 IF _ORIG.QTY_BREAK_3=_CUR.QTY_BREAK_3 OR QTY_BREAK_3=_CUR.QTY_BREAK_3 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_3=QTY_BREAK_3 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_3")+" = "+STR(_CUR.QTY_BREAK_3),_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_3")+" = "+STR(_CUR.QTY_BREAK_3)
15340 IF _ORIG.QTY_PRICE_3=_CUR.QTY_PRICE_3 OR QTY_PRICE_3=_CUR.QTY_PRICE_3 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_3=QTY_PRICE_3 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_3")+" = "+STR(_CUR.QTY_PRICE_3),_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_3")+" = "+STR(_CUR.QTY_PRICE_3)
15350 IF _ORIG.QTY_BREAK_4=_CUR.QTY_BREAK_4 OR QTY_BREAK_4=_CUR.QTY_BREAK_4 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_4=QTY_BREAK_4 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_4")+" = "+STR(_CUR.QTY_BREAK_4),_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_4")+" = "+STR(_CUR.QTY_BREAK_4)
15360 IF _ORIG.QTY_PRICE_4=_CUR.QTY_PRICE_4 OR QTY_PRICE_4=_CUR.QTY_PRICE_4 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_4=QTY_PRICE_4 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_4")+" = "+STR(_CUR.QTY_PRICE_4),_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_4")+" = "+STR(_CUR.QTY_PRICE_4)
15370 IF _ORIG.QTY_BREAK_5=_CUR.QTY_BREAK_5 OR QTY_BREAK_5=_CUR.QTY_BREAK_5 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_5=QTY_BREAK_5 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_5")+" = "+STR(_CUR.QTY_BREAK_5),_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_5")+" = "+STR(_CUR.QTY_BREAK_5)
15380 IF _ORIG.QTY_PRICE_5=_CUR.QTY_PRICE_5 OR QTY_PRICE_5=_CUR.QTY_PRICE_5 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_5=QTY_PRICE_5 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_5")+" = "+STR(_CUR.QTY_PRICE_5),_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_5")+" = "+STR(_CUR.QTY_PRICE_5)
15390 IF _ORIG.QTY_BREAK_6=_CUR.QTY_BREAK_6 OR QTY_BREAK_6=_CUR.QTY_BREAK_6 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_6=QTY_BREAK_6 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_6")+" = "+STR(_CUR.QTY_BREAK_6),_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_6")+" = "+STR(_CUR.QTY_BREAK_6)
15400 IF _ORIG.QTY_PRICE_6=_CUR.QTY_PRICE_6 OR QTY_PRICE_6=_CUR.QTY_PRICE_6 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_6=QTY_PRICE_6 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_6")+" = "+STR(_CUR.QTY_PRICE_6),_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_6")+" = "+STR(_CUR.QTY_PRICE_6)
15410 IF _ORIG.AVG_SALE_PR_FOR_FMGT=_CUR.AVG_SALE_PR_FOR_FMGT OR AVG_SALE_PR_FOR_FMGT=_CUR.AVG_SALE_PR_FOR_FMGT THEN GOTO *NEXT ELSE IF _ORIG.AVG_SALE_PR_FOR_FMGT=AVG_SALE_PR_FOR_FMGT THEN _CHG2$=_CHG2$+SEP+MSG("A_S_P_F_F")+" = "+STR(_CUR.AVG_SALE_PR_FOR_FMGT),_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("A_S_P_F_F")+" = "+STR(_CUR.AVG_SALE_PR_FOR_FMGT)
15420 IF _ORIG.SELL_QTY_PER=_CUR.SELL_QTY_PER OR SELL_QTY_PER=_CUR.SELL_QTY_PER THEN GOTO *NEXT ELSE IF _ORIG.SELL_QTY_PER=SELL_QTY_PER THEN _CHG2$=_CHG2$+SEP+MSG("SELL_Q_P")+" = "+STR(_CUR.SELL_QTY_PER),_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_Q_P")+" = "+STR(_CUR.SELL_QTY_PER)
15430 IF _ORIG.INVENTORY_QTY_PER=_CUR.INVENTORY_QTY_PER OR INVENTORY_QTY_PER=_CUR.INVENTORY_QTY_PER THEN GOTO *NEXT ELSE IF _ORIG.INVENTORY_QTY_PER=INVENTORY_QTY_PER THEN _CHG2$=_CHG2$+SEP+MSG("INVE_Q_P")+" = "+STR(_CUR.INVENTORY_QTY_PER),_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INVE_Q_P")+" = "+STR(_CUR.INVENTORY_QTY_PER)
15440 IF _ORIG.CTN_WT=_CUR.CTN_WT OR CTN_WT=_CUR.CTN_WT THEN GOTO *NEXT ELSE IF _ORIG.CTN_WT=CTN_WT THEN _CHG2$=_CHG2$+SEP+MSG("CTN_WT")+" = "+STR(_CUR.CTN_WT),_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_WT")+" = "+STR(_CUR.CTN_WT)
15450 IF _ORIG.LAST_PURCH_COST=_CUR.LAST_PURCH_COST OR LAST_PURCH_COST=_CUR.LAST_PURCH_COST THEN GOTO *NEXT ELSE IF _ORIG.LAST_PURCH_COST=LAST_PURCH_COST THEN _CHG2$=_CHG2$+SEP+MSG("LAST_P_C")+" = "+STR(_CUR.LAST_PURCH_COST),_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LAST_P_C")+" = "+STR(_CUR.LAST_PURCH_COST)
15460 IF _ORIG.AVG_COST=_CUR.AVG_COST OR AVG_COST=_CUR.AVG_COST THEN GOTO *NEXT ELSE IF _ORIG.AVG_COST=AVG_COST THEN _CHG2$=_CHG2$+SEP+MSG("AVG_COST")+" = "+STR(_CUR.AVG_COST),_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AVG_COST")+" = "+STR(_CUR.AVG_COST)
15470 IF _ORIG.CTN_PACK=_CUR.CTN_PACK OR CTN_PACK=_CUR.CTN_PACK THEN GOTO *NEXT ELSE IF _ORIG.CTN_PACK=CTN_PACK THEN _CHG2$=_CHG2$+SEP+MSG("CTN_PACK")+" = "+STR(_CUR.CTN_PACK),_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_PACK")+" = "+STR(_CUR.CTN_PACK)
15480 IF _ORIG.SPER_UNIT_COST=_CUR.SPER_UNIT_COST OR SPER_UNIT_COST=_CUR.SPER_UNIT_COST THEN GOTO *NEXT ELSE IF _ORIG.SPER_UNIT_COST=SPER_UNIT_COST THEN _CHG2$=_CHG2$+SEP+MSG("SPER_U_C")+" = "+STR(_CUR.SPER_UNIT_COST),_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_U_C")+" = "+STR(_CUR.SPER_UNIT_COST)
15490 IF _ORIG.QTY_BREAK_7=_CUR.QTY_BREAK_7 OR QTY_BREAK_7=_CUR.QTY_BREAK_7 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_7=QTY_BREAK_7 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_7")+" = "+STR(_CUR.QTY_BREAK_7),_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_7")+" = "+STR(_CUR.QTY_BREAK_7)
15500 IF _ORIG.QTY_PRICE_7=_CUR.QTY_PRICE_7 OR QTY_PRICE_7=_CUR.QTY_PRICE_7 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_7=QTY_PRICE_7 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_7")+" = "+STR(_CUR.QTY_PRICE_7),_CHG_VAR$(48,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_7")+" = "+STR(_CUR.QTY_PRICE_7)
15510 IF _ORIG.QTY_BREAK_8=_CUR.QTY_BREAK_8 OR QTY_BREAK_8=_CUR.QTY_BREAK_8 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_8=QTY_BREAK_8 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_8")+" = "+STR(_CUR.QTY_BREAK_8),_CHG_VAR$(49,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_8")+" = "+STR(_CUR.QTY_BREAK_8)
15520 IF _ORIG.QTY_PRICE_8=_CUR.QTY_PRICE_8 OR QTY_PRICE_8=_CUR.QTY_PRICE_8 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_8=QTY_PRICE_8 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_8")+" = "+STR(_CUR.QTY_PRICE_8),_CHG_VAR$(50,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_8")+" = "+STR(_CUR.QTY_PRICE_8)
15530 IF _ORIG.QTY_BREAK_9=_CUR.QTY_BREAK_9 OR QTY_BREAK_9=_CUR.QTY_BREAK_9 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_9=QTY_BREAK_9 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_9")+" = "+STR(_CUR.QTY_BREAK_9),_CHG_VAR$(51,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_9")+" = "+STR(_CUR.QTY_BREAK_9)
15540 IF _ORIG.QTY_PRICE_9=_CUR.QTY_PRICE_9 OR QTY_PRICE_9=_CUR.QTY_PRICE_9 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_9=QTY_PRICE_9 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_9")+" = "+STR(_CUR.QTY_PRICE_9),_CHG_VAR$(52,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_9")+" = "+STR(_CUR.QTY_PRICE_9)
15550 IF _ORIG.QTY_BREAK_10=_CUR.QTY_BREAK_10 OR QTY_BREAK_10=_CUR.QTY_BREAK_10 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_10=QTY_BREAK_10 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_10")+" = "+STR(_CUR.QTY_BREAK_10),_CHG_VAR$(53,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_10")+" = "+STR(_CUR.QTY_BREAK_10)
15560 IF _ORIG.QTY_PRICE_10=_CUR.QTY_PRICE_10 OR QTY_PRICE_10=_CUR.QTY_PRICE_10 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_10=QTY_PRICE_10 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_10")+" = "+STR(_CUR.QTY_PRICE_10),_CHG_VAR$(54,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_10")+" = "+STR(_CUR.QTY_PRICE_10)
15570 IF _ORIG.QTY_BREAK_11=_CUR.QTY_BREAK_11 OR QTY_BREAK_11=_CUR.QTY_BREAK_11 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_11=QTY_BREAK_11 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_11")+" = "+STR(_CUR.QTY_BREAK_11),_CHG_VAR$(55,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_11")+" = "+STR(_CUR.QTY_BREAK_11)
15580 IF _ORIG.QTY_PRICE_11=_CUR.QTY_PRICE_11 OR QTY_PRICE_11=_CUR.QTY_PRICE_11 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_11=QTY_PRICE_11 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_11")+" = "+STR(_CUR.QTY_PRICE_11),_CHG_VAR$(56,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_11")+" = "+STR(_CUR.QTY_PRICE_11)
15590 IF _ORIG.QTY_BREAK_12=_CUR.QTY_BREAK_12 OR QTY_BREAK_12=_CUR.QTY_BREAK_12 THEN GOTO *NEXT ELSE IF _ORIG.QTY_BREAK_12=QTY_BREAK_12 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_B_12")+" = "+STR(_CUR.QTY_BREAK_12),_CHG_VAR$(57,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_B_12")+" = "+STR(_CUR.QTY_BREAK_12)
15600 IF _ORIG.QTY_PRICE_12=_CUR.QTY_PRICE_12 OR QTY_PRICE_12=_CUR.QTY_PRICE_12 THEN GOTO *NEXT ELSE IF _ORIG.QTY_PRICE_12=QTY_PRICE_12 THEN _CHG2$=_CHG2$+SEP+MSG("QTY_P_12")+" = "+STR(_CUR.QTY_PRICE_12),_CHG_VAR$(58,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_P_12")+" = "+STR(_CUR.QTY_PRICE_12)
15610 IF _ORIG.IC0_UNUSED_2=_CUR.IC0_UNUSED_2 OR IC0_UNUSED_2=_CUR.IC0_UNUSED_2 THEN GOTO *NEXT ELSE IF _ORIG.IC0_UNUSED_2=IC0_UNUSED_2 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_2),_CHG_VAR$(59,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_2)
15620 IF _ORIG.IC0_UNUSED_3=_CUR.IC0_UNUSED_3 OR IC0_UNUSED_3=_CUR.IC0_UNUSED_3 THEN GOTO *NEXT ELSE IF _ORIG.IC0_UNUSED_3=IC0_UNUSED_3 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_3),_CHG_VAR$(60,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_3)
15630 IF _ORIG.IC0_UNUSED_4=_CUR.IC0_UNUSED_4 OR IC0_UNUSED_4=_CUR.IC0_UNUSED_4 THEN GOTO *NEXT ELSE IF _ORIG.IC0_UNUSED_4=IC0_UNUSED_4 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_4),_CHG_VAR$(61,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_4)
15640 IF _ORIG.IC0_UNUSED_5=_CUR.IC0_UNUSED_5 OR IC0_UNUSED_5=_CUR.IC0_UNUSED_5 THEN GOTO *NEXT ELSE IF _ORIG.IC0_UNUSED_5=IC0_UNUSED_5 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_5),_CHG_VAR$(62,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_5)
15650 IF _ORIG.IC0_UNUSED_6=_CUR.IC0_UNUSED_6 OR IC0_UNUSED_6=_CUR.IC0_UNUSED_6 THEN GOTO *NEXT ELSE IF _ORIG.IC0_UNUSED_6=IC0_UNUSED_6 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_6),_CHG_VAR$(63,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_6)
15660 IF _ORIG.IC0_UNUSED_7=_CUR.IC0_UNUSED_7 OR IC0_UNUSED_7=_CUR.IC0_UNUSED_7 THEN GOTO *NEXT ELSE IF _ORIG.IC0_UNUSED_7=IC0_UNUSED_7 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_7),_CHG_VAR$(64,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_7)
15670 IF _ORIG.IC0_UNUSED_8=_CUR.IC0_UNUSED_8 OR IC0_UNUSED_8=_CUR.IC0_UNUSED_8 THEN GOTO *NEXT ELSE IF _ORIG.IC0_UNUSED_8=IC0_UNUSED_8 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_8),_CHG_VAR$(65,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_8)
15680 IF _ORIG.IC0_UNUSED_9=_CUR.IC0_UNUSED_9 OR IC0_UNUSED_9=_CUR.IC0_UNUSED_9 THEN GOTO *NEXT ELSE IF _ORIG.IC0_UNUSED_9=IC0_UNUSED_9 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_9),_CHG_VAR$(66,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.IC0_UNUSED_9)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16030 IF _CHG_VAR$(2,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16040 IF _CHG_VAR$(3,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16050 IF _CHG_VAR$(4,1)="Y" THEN ITEM_DESC$=_CUR.ITEM_DESC$
16060 IF _CHG_VAR$(5,1)="Y" THEN PROD_CODE$=_CUR.PROD_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN LEFT_RIGHT$=_CUR.LEFT_RIGHT$
16080 IF _CHG_VAR$(7,1)="Y" THEN TOP_BOTTOM$=_CUR.TOP_BOTTOM$
16090 IF _CHG_VAR$(8,1)="Y" THEN PLYS$=_CUR.PLYS$
16100 IF _CHG_VAR$(9,1)="Y" THEN VEND_DIV$=_CUR.VEND_DIV$
16110 IF _CHG_VAR$(10,1)="Y" THEN VEND_CODE$=_CUR.VEND_CODE$
16120 IF _CHG_VAR$(11,1)="Y" THEN PLANT_CODE$=_CUR.PLANT_CODE$
16130 IF _CHG_VAR$(12,1)="Y" THEN LAST_SOLD_DATE$=_CUR.LAST_SOLD_DATE$
16140 IF _CHG_VAR$(13,1)="Y" THEN LAST_PURCH_DATE$=_CUR.LAST_PURCH_DATE$
16150 IF _CHG_VAR$(14,1)="Y" THEN STAT_FLAG$=_CUR.STAT_FLAG$
16160 IF _CHG_VAR$(15,1)="Y" THEN ITEM_PRICE_CLASS$=_CUR.ITEM_PRICE_CLASS$
16170 IF _CHG_VAR$(16,1)="Y" THEN LOT_INV_FOR_THIS_ITM$=_CUR.LOT_INV_FOR_THIS_ITM$
16180 IF _CHG_VAR$(17,1)="Y" THEN QTY_BREAK_PRICE_GRP$=_CUR.QTY_BREAK_PRICE_GRP$
16190 IF _CHG_VAR$(18,1)="Y" THEN SECURE_FOR_REQ$=_CUR.SECURE_FOR_REQ$
16200 IF _CHG_VAR$(19,1)="Y" THEN NEVER_BACKORDER$=_CUR.NEVER_BACKORDER$
16210 IF _CHG_VAR$(20,1)="Y" THEN IC0_UNUSED_1$=_CUR.IC0_UNUSED_1$
16220 IF _CHG_VAR$(21,1)="Y" THEN SELL_UM$=_CUR.SELL_UM$
16230 IF _CHG_VAR$(22,1)="Y" THEN INVENTORY_UM$=_CUR.INVENTORY_UM$
16240 IF _CHG_VAR$(23,1)="Y" THEN DESC_LINE_2$=_CUR.DESC_LINE_2$
16250 IF _CHG_VAR$(24,1)="Y" THEN ITEM_GROUP_CODE$=_CUR.ITEM_GROUP_CODE$
16260 IF _CHG_VAR$(25,1)="Y" THEN PRICING_FEATURES$=_CUR.PRICING_FEATURES$
16270 IF _CHG_VAR$(26,1)="Y" THEN BASE_PRICE=_CUR.BASE_PRICE
16280 IF _CHG_VAR$(27,1)="Y" THEN QTY_BREAK_1=_CUR.QTY_BREAK_1
16290 IF _CHG_VAR$(28,1)="Y" THEN QTY_PRICE_1=_CUR.QTY_PRICE_1
16300 IF _CHG_VAR$(29,1)="Y" THEN QTY_BREAK_2=_CUR.QTY_BREAK_2
16310 IF _CHG_VAR$(30,1)="Y" THEN QTY_PRICE_2=_CUR.QTY_PRICE_2
16320 IF _CHG_VAR$(31,1)="Y" THEN QTY_BREAK_3=_CUR.QTY_BREAK_3
16330 IF _CHG_VAR$(32,1)="Y" THEN QTY_PRICE_3=_CUR.QTY_PRICE_3
16340 IF _CHG_VAR$(33,1)="Y" THEN QTY_BREAK_4=_CUR.QTY_BREAK_4
16350 IF _CHG_VAR$(34,1)="Y" THEN QTY_PRICE_4=_CUR.QTY_PRICE_4
16360 IF _CHG_VAR$(35,1)="Y" THEN QTY_BREAK_5=_CUR.QTY_BREAK_5
16370 IF _CHG_VAR$(36,1)="Y" THEN QTY_PRICE_5=_CUR.QTY_PRICE_5
16380 IF _CHG_VAR$(37,1)="Y" THEN QTY_BREAK_6=_CUR.QTY_BREAK_6
16390 IF _CHG_VAR$(38,1)="Y" THEN QTY_PRICE_6=_CUR.QTY_PRICE_6
16400 IF _CHG_VAR$(39,1)="Y" THEN AVG_SALE_PR_FOR_FMGT=_CUR.AVG_SALE_PR_FOR_FMGT
16410 IF _CHG_VAR$(40,1)="Y" THEN SELL_QTY_PER=_CUR.SELL_QTY_PER
16420 IF _CHG_VAR$(41,1)="Y" THEN INVENTORY_QTY_PER=_CUR.INVENTORY_QTY_PER
16430 IF _CHG_VAR$(42,1)="Y" THEN CTN_WT=_CUR.CTN_WT
16440 IF _CHG_VAR$(43,1)="Y" THEN LAST_PURCH_COST=_CUR.LAST_PURCH_COST
16450 IF _CHG_VAR$(44,1)="Y" THEN AVG_COST=_CUR.AVG_COST
16460 IF _CHG_VAR$(45,1)="Y" THEN CTN_PACK=_CUR.CTN_PACK
16470 IF _CHG_VAR$(46,1)="Y" THEN SPER_UNIT_COST=_CUR.SPER_UNIT_COST
16480 IF _CHG_VAR$(47,1)="Y" THEN QTY_BREAK_7=_CUR.QTY_BREAK_7
16490 IF _CHG_VAR$(48,1)="Y" THEN QTY_PRICE_7=_CUR.QTY_PRICE_7
16500 IF _CHG_VAR$(49,1)="Y" THEN QTY_BREAK_8=_CUR.QTY_BREAK_8
16510 IF _CHG_VAR$(50,1)="Y" THEN QTY_PRICE_8=_CUR.QTY_PRICE_8
16520 IF _CHG_VAR$(51,1)="Y" THEN QTY_BREAK_9=_CUR.QTY_BREAK_9
16530 IF _CHG_VAR$(52,1)="Y" THEN QTY_PRICE_9=_CUR.QTY_PRICE_9
16540 IF _CHG_VAR$(53,1)="Y" THEN QTY_BREAK_10=_CUR.QTY_BREAK_10
16550 IF _CHG_VAR$(54,1)="Y" THEN QTY_PRICE_10=_CUR.QTY_PRICE_10
16560 IF _CHG_VAR$(55,1)="Y" THEN QTY_BREAK_11=_CUR.QTY_BREAK_11
16570 IF _CHG_VAR$(56,1)="Y" THEN QTY_PRICE_11=_CUR.QTY_PRICE_11
16580 IF _CHG_VAR$(57,1)="Y" THEN QTY_BREAK_12=_CUR.QTY_BREAK_12
16590 IF _CHG_VAR$(58,1)="Y" THEN QTY_PRICE_12=_CUR.QTY_PRICE_12
16600 IF _CHG_VAR$(59,1)="Y" THEN IC0_UNUSED_2=_CUR.IC0_UNUSED_2
16610 IF _CHG_VAR$(60,1)="Y" THEN IC0_UNUSED_3=_CUR.IC0_UNUSED_3
16620 IF _CHG_VAR$(61,1)="Y" THEN IC0_UNUSED_4=_CUR.IC0_UNUSED_4
16630 IF _CHG_VAR$(62,1)="Y" THEN IC0_UNUSED_5=_CUR.IC0_UNUSED_5
16640 IF _CHG_VAR$(63,1)="Y" THEN IC0_UNUSED_6=_CUR.IC0_UNUSED_6
16650 IF _CHG_VAR$(64,1)="Y" THEN IC0_UNUSED_7=_CUR.IC0_UNUSED_7
16660 IF _CHG_VAR$(65,1)="Y" THEN IC0_UNUSED_8=_CUR.IC0_UNUSED_8
16670 IF _CHG_VAR$(66,1)="Y" THEN IC0_UNUSED_9=_CUR.IC0_UNUSED_9
16990 RETURN 
20000 SEL_SELL_UM: REFRESH_FLG=1 ! SSP 224887 (20000-32160)
20010 SELL_UM$=PAD(SELL_UM$,4," ")
20020 IF BB_SELL_UM$=SELL_UM$ AND BB_SELL_QTY$=SELL_QTY_PER$ THEN EXIT 
20030 FIND (_ZZP,KEY="U/M"+SELL_UM$,DOM=NO_UM)SUM$,P0,P1
20040 IF ID$="SELL_UM" AND SUM$(20,1)="Y" THEN SELL_QTY_PER$=STR(P0) ELSE IF ID$="SELL_UM" AND STP(SELL_QTY_PER$)="" AND P1<>0 THEN SELL_QTY_PER$=STR(P1)
20050 IF ID$="SELL_UM" AND NUM(SELL_QTY_PER$)=0 THEN SELL_QTY_PER$=STR(P1)
20060 IF BB_SELL_UM$<>SELL_UM$ OR BB_SELL_QTY_PER$<>SELL_QTY_PER$ THEN GOSUB CHANGE_SELL_UM
20080 IF P0<>0 THEN NEXT_ID=QTY_BREAK_PRICE_GRP.CTL
20090 IF ID$="SELL_QTY_PER" AND NUM(SELL_QTY_PER$)=0 THEN MSGBOX MSG("ENTER_S_UM"),MSG("WARNING"),"!,TIM=5"; NEXT_ID=SELL_QTY_PER.CTL
20100 RETURN 
20110 NO_UM: SELL_UM$="",NEXT_ID=SELL_UM.CTL; RETURN 
20120 CHANGE_SELL_UM:
20130 IF BB_SELL_QTY_PER$=SELL_QTY_PER$ THEN GOTO 20230
20140 IF STP(BB_SELL_QTY_PER$)="" THEN BB_SELL_QTY_PER$=SELL_QTY_PER$
20150 IF NUM(BB_SELL_QTY_PER$)<>0 THEN BASE_PRICE=NUM(BASE_PRICE$)*NUM(SELL_QTY_PER$)/NUM(BB_SELL_QTY_PER$),BASE_PRICE$=STR(BASE_PRICE)
20160 IF NUM(BB_SELL_QTY_PER$)=0 OR NUM(SELL_QTY_PER$)=0 THEN RETURN 
20170 FOR XX=1 TO 12
20180 IF NUM(SELL_QTY_PER$)=0 THEN RETURN 
20190 EXECUTE "QTY_PRICE_"+STR(XX)+"$=STR(NUM(QTY_PRICE_"+STR(XX)+"$)*NUM(SELL_QTY_PER$)/NUM(BB_SELL_QTY_PER$))"
20200 EXECUTE "QTY_BREAK_"+STR(XX)+"$=STR(NUM(QTY_BREAK_"+STR(XX)+"$)*NUM(BB_SELL_QTY_PER$)/NUM(SELL_QTY_PER$))"
20210 NEXT XX
20220 GOTO CREATE_BREAK
20230 FOR XX=1 TO 12
20240 VAL$=EVS("QTY_BREAK_"+STR(XX)+"$"); IF NUM(VAL$)=0 THEN BREAK
20250 IF SUM$(20,1)<>"Y" THEN VAL$=STR(NUM(VAL$)/NUM(SELL_QTY_PER$),ERR=*NEXT) ELSE IF P1<>0 THEN VAL$=STR(NUM(VAL$)/P1)
20260 EXECUTE "QTY_BREAK_"+STR(XX)+"$=VAL$"
20270 NEXT XX
20280 CREATE_BREAK:
20290 FOR AA=12 TO 1 STEP -1
20300 EXECUTE "IF NUM(QTY_BREAK_"+STR(AA)+"$)<>0 THEN QTY_TO_"+STR(AA-1)+"$=STR(NUM(QTY_BREAK_"+STR(AA)+"$)-.01) ELSE QTY_TO_"+STR(AA-1)+"$="""""
20310 EXECUTE "IF NUM(QTY_TO_"+STR(AA-1)+"$) < 0 QTY_TO_"+STR(AA-1)+"$="""""
20320 NEXT AA
20330 RETURN 
31500 CLEAR_QUANTITY:
31510 VAL=NUM(EVS(ID$+"$")); IF VAL<>0 THEN RETURN 
31520 FRMC=POS("_"=ID$,-1)+1,FRM=NUM(ID$(FRMC))
31530 FOR AA=FRM TO 12
31540 EXECUTE "QTY_BREAK_"+STR(AA)+"$="+QUO+QUO+",QTY_BREAK_"+STR(AA)+"=0"
31550 EXECUTE "QTY_TO_"+STR(AA)+"$="+QUO+QUO+",QTY_TO_"+STR(AA)+"=0"
31560 EXECUTE "QTY_PRICE_"+STR(AA)+"$="+QUO+QUO+",QTY_PRICE_"+STR(AA)+"=0"
31570 NEXT AA
31580 REFRESH_FLG=1; NEXT_ID=BASE_PRICE.CTL
31590 RETURN 
32000 RESTORE:
32010 FOR A=1 TO 12
32020 EXECUTE "QTY_BREAK_"+STR(A)+"$=STR(QTY_BREAK_"+STR(A)+")"
32030 NEXT A
32040 RETURN 
32100 FINISH_BREAK:
32110 FOR AA=1 TO 12
32120 VAL$=EVS("QTY_BREAK_"+STR(AA)+"$"); IF NUM(VAL$)=0 THEN BREAK
32130 IF SUM$(20,1)<>"Y" THEN VAL$=STR(NUM(VAL$)*NUM(SELL_QTY_PER$),ERR=*NEXT) ELSE IF P1<>0 THEN VAL$=STR(NUM(VAL$)*P1)
32140 EXECUTE "QTY_BREAK_"+STR(AA)+"$=VAL$"
32150 NEXT AA
32160 RETURN 
56000 REM "224887-Program ICGMHA Qty break pricing table displaying           
