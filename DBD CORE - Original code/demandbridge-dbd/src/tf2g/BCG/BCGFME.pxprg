0010 ! BCGFME - Format Fields Setup
0020 ! Generated by ProvideX® NOMADS II File Maintenance on May. 13, 2003 14:40
0030 ! ************************************************************************
0050 PROCESS "BCGFME","../BCG/BC.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="../tf2z/USR/ZF6"
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=6
0430 DIM _KEYS$[1:6]; _KEYS$[1]="DOC_CODE$",_KEYS$[2]="FLEX_FORMAT_TYPE$",_KEYS$[3]="FIELD_NUM$",_KEYS$[4]="PRINT_ID$",_KEYS$[5]="SET_TYPE$",_KEYS$[6]="OVERRIDE_KEY$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=DOC_CODE.CTL,_FIRST_FIELD=COLUMN_TO_PRINT_DATA.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 COLUMN_TO_PRINT_DATA$=STR(COLUMN_TO_PRINT_DATA)
10030 LINE_TO_PRINT_DATA$=STR(LINE_TO_PRINT_DATA)
10040 ZF6_UNUSED_2$=STR(ZF6_UNUSED_2)
10050 ZF6_UNUSED_3$=STR(ZF6_UNUSED_3)
10060 ZF6_UNUSED_4$=STR(ZF6_UNUSED_4)
10070 ZF6_UNUSED_5$=STR(ZF6_UNUSED_5)
10080 ZF6_UNUSED_6$=STR(ZF6_UNUSED_6)
10090 ZF6_UNUSED_7$=STR(ZF6_UNUSED_7)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="COLUMN_TO_PRINT_DATA",_X=COLUMN_TO_PRINT_DATA.CTL,COLUMN_TO_PRINT_DATA=NUM(COLUMN_TO_PRINT_DATA$,ERR=NON_NUMERIC)
11030 _X$="LINE_TO_PRINT_DATA",_X=LINE_TO_PRINT_DATA.CTL,LINE_TO_PRINT_DATA=NUM(LINE_TO_PRINT_DATA$,ERR=NON_NUMERIC)
11040 _X$="ZF6_UNUSED_2",_X=ZF6_UNUSED_2.CTL,ZF6_UNUSED_2=NUM(ZF6_UNUSED_2$,ERR=NON_NUMERIC)
11050 _X$="ZF6_UNUSED_3",_X=ZF6_UNUSED_3.CTL,ZF6_UNUSED_3=NUM(ZF6_UNUSED_3$,ERR=NON_NUMERIC)
11060 _X$="ZF6_UNUSED_4",_X=ZF6_UNUSED_4.CTL,ZF6_UNUSED_4=NUM(ZF6_UNUSED_4$,ERR=NON_NUMERIC)
11070 _X$="ZF6_UNUSED_5",_X=ZF6_UNUSED_5.CTL,ZF6_UNUSED_5=NUM(ZF6_UNUSED_5$,ERR=NON_NUMERIC)
11080 _X$="ZF6_UNUSED_6",_X=ZF6_UNUSED_6.CTL,ZF6_UNUSED_6=NUM(ZF6_UNUSED_6$,ERR=NON_NUMERIC)
11090 _X$="ZF6_UNUSED_7",_X=ZF6_UNUSED_7.CTL,ZF6_UNUSED_7=NUM(ZF6_UNUSED_7$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN DOC_CODE$=""
13030 IF _CLR_FLG$="R" THEN FLEX_FORMAT_TYPE$=""
13040 IF _CLR_FLG$="R" THEN FIELD_NUM$=""
13050 IF _CLR_FLG$="R" THEN PRINT_ID$=""
13060 IF _CLR_FLG$="R" THEN SET_TYPE$=""
13070 IF _CLR_FLG$="R" THEN OVERRIDE_KEY$=""
13080 PRINT_TYPE$=""
13090 PRINT_HEADING_1$=""
13100 PRINT_HEADING_2$=""
13110 PRINT_OPTION_1$=""
13120 PRINT_OPTION_2$=""
13130 PRINT_OPTION_3$=""
13140 PRINT_OPTION_4$=""
13150 PRINT_OPTION_5$=""
13160 PRINT_OPTION_PARAM_1$=""
13170 PRINT_OPTION_PARAM_2$=""
13180 PRINT_OPTION_PARAM_3$=""
13190 PRINT_OPTION_PARAM_4$=""
13200 PRINT_OPTION_PARAM_5$=""
13210 TEMPLATE_CODE$=""
13220 ZF6_UNUSED_1$=""
13230 COLUMN_TO_PRINT_DATA=0
13240 LINE_TO_PRINT_DATA=0
13250 ZF6_UNUSED_2=0
13260 ZF6_UNUSED_3=0
13270 ZF6_UNUSED_4=0
13280 ZF6_UNUSED_5=0
13290 ZF6_UNUSED_6=0
13300 ZF6_UNUSED_7=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=FLEX_FORMAT_TYPE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=FIELD_NUM.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=PRINT_ID.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14060 IF _ENABLE_FLG=5 THEN CALL "*wingrp;Enable",KEY5.GRP$; NEXT_ID=SET_TYPE.CTL ELSE CALL "*wingrp;Disable",KEY5.GRP$
14070 IF _ENABLE_FLG=6 THEN CALL "*wingrp;Enable",KEY6.GRP$; NEXT_ID=OVERRIDE_KEY.CTL ELSE CALL "*wingrp;Disable",KEY6.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(29,"N")
15030 IF _ORIG.DOC_CODE$=_CUR.DOC_CODE$ OR DOC_CODE$=_CUR.DOC_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.DOC_CODE$=DOC_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("DOC_CODE")+" = "+_CUR.DOC_CODE$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DOC_CODE")+" = "+_CUR.DOC_CODE$
15040 IF _ORIG.FLEX_FORMAT_TYPE$=_CUR.FLEX_FORMAT_TYPE$ OR FLEX_FORMAT_TYPE$=_CUR.FLEX_FORMAT_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.FLEX_FORMAT_TYPE$=FLEX_FORMAT_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("FLEX_F_T")+" = "+_CUR.FLEX_FORMAT_TYPE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FLEX_F_T")+" = "+_CUR.FLEX_FORMAT_TYPE$
15050 IF _ORIG.FIELD_NUM$=_CUR.FIELD_NUM$ OR FIELD_NUM$=_CUR.FIELD_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.FIELD_NUM$=FIELD_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("FIELD_NUM")+" = "+_CUR.FIELD_NUM$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIELD_NUM")+" = "+_CUR.FIELD_NUM$
15060 IF _ORIG.PRINT_ID$=_CUR.PRINT_ID$ OR PRINT_ID$=_CUR.PRINT_ID$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_ID$=PRINT_ID$ THEN _CHG2$=_CHG2$+SEP+MSG("PRINT_ID")+" = "+_CUR.PRINT_ID$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRINT_ID")+" = "+_CUR.PRINT_ID$
15070 IF _ORIG.SET_TYPE$=_CUR.SET_TYPE$ OR SET_TYPE$=_CUR.SET_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.SET_TYPE$=SET_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("SET_TYPE")+" = "+_CUR.SET_TYPE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SET_TYPE")+" = "+_CUR.SET_TYPE$
15080 IF _ORIG.OVERRIDE_KEY$=_CUR.OVERRIDE_KEY$ OR OVERRIDE_KEY$=_CUR.OVERRIDE_KEY$ THEN GOTO *NEXT ELSE IF _ORIG.OVERRIDE_KEY$=OVERRIDE_KEY$ THEN _CHG2$=_CHG2$+SEP+MSG("OVER_K")+" = "+_CUR.OVERRIDE_KEY$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OVER_K")+" = "+_CUR.OVERRIDE_KEY$
15090 IF _ORIG.PRINT_TYPE$=_CUR.PRINT_TYPE$ OR PRINT_TYPE$=_CUR.PRINT_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_TYPE$=PRINT_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("PRINT_TYPE")+" = "+_CUR.PRINT_TYPE$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRINT_TYPE")+" = "+_CUR.PRINT_TYPE$
15100 IF _ORIG.PRINT_HEADING_1$=_CUR.PRINT_HEADING_1$ OR PRINT_HEADING_1$=_CUR.PRINT_HEADING_1$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_HEADING_1$=PRINT_HEADING_1$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_H_1")+" = "+_CUR.PRINT_HEADING_1$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_H_1")+" = "+_CUR.PRINT_HEADING_1$
15110 IF _ORIG.PRINT_HEADING_2$=_CUR.PRINT_HEADING_2$ OR PRINT_HEADING_2$=_CUR.PRINT_HEADING_2$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_HEADING_2$=PRINT_HEADING_2$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_H_2")+" = "+_CUR.PRINT_HEADING_2$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_H_2")+" = "+_CUR.PRINT_HEADING_2$
15120 IF _ORIG.PRINT_OPTION_1$=_CUR.PRINT_OPTION_1$ OR PRINT_OPTION_1$=_CUR.PRINT_OPTION_1$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_1$=PRINT_OPTION_1$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_1")+" = "+_CUR.PRINT_OPTION_1$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_1")+" = "+_CUR.PRINT_OPTION_1$
15130 IF _ORIG.PRINT_OPTION_2$=_CUR.PRINT_OPTION_2$ OR PRINT_OPTION_2$=_CUR.PRINT_OPTION_2$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_2$=PRINT_OPTION_2$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_2")+" = "+_CUR.PRINT_OPTION_2$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_2")+" = "+_CUR.PRINT_OPTION_2$
15140 IF _ORIG.PRINT_OPTION_3$=_CUR.PRINT_OPTION_3$ OR PRINT_OPTION_3$=_CUR.PRINT_OPTION_3$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_3$=PRINT_OPTION_3$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_3")+" = "+_CUR.PRINT_OPTION_3$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_3")+" = "+_CUR.PRINT_OPTION_3$
15150 IF _ORIG.PRINT_OPTION_4$=_CUR.PRINT_OPTION_4$ OR PRINT_OPTION_4$=_CUR.PRINT_OPTION_4$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_4$=PRINT_OPTION_4$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_4")+" = "+_CUR.PRINT_OPTION_4$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_4")+" = "+_CUR.PRINT_OPTION_4$
15160 IF _ORIG.PRINT_OPTION_5$=_CUR.PRINT_OPTION_5$ OR PRINT_OPTION_5$=_CUR.PRINT_OPTION_5$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_5$=PRINT_OPTION_5$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_5")+" = "+_CUR.PRINT_OPTION_5$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_5")+" = "+_CUR.PRINT_OPTION_5$
15170 IF _ORIG.PRINT_OPTION_PARAM_1$=_CUR.PRINT_OPTION_PARAM_1$ OR PRINT_OPTION_PARAM_1$=_CUR.PRINT_OPTION_PARAM_1$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_PARAM_1$=PRINT_OPTION_PARAM_1$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_P_1")+" = "+_CUR.PRINT_OPTION_PARAM_1$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_P_1")+" = "+_CUR.PRINT_OPTION_PARAM_1$
15180 IF _ORIG.PRINT_OPTION_PARAM_2$=_CUR.PRINT_OPTION_PARAM_2$ OR PRINT_OPTION_PARAM_2$=_CUR.PRINT_OPTION_PARAM_2$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_PARAM_2$=PRINT_OPTION_PARAM_2$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_P_2")+" = "+_CUR.PRINT_OPTION_PARAM_2$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_P_2")+" = "+_CUR.PRINT_OPTION_PARAM_2$
15190 IF _ORIG.PRINT_OPTION_PARAM_3$=_CUR.PRINT_OPTION_PARAM_3$ OR PRINT_OPTION_PARAM_3$=_CUR.PRINT_OPTION_PARAM_3$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_PARAM_3$=PRINT_OPTION_PARAM_3$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_P_3")+" = "+_CUR.PRINT_OPTION_PARAM_3$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_P_3")+" = "+_CUR.PRINT_OPTION_PARAM_3$
15200 IF _ORIG.PRINT_OPTION_PARAM_4$=_CUR.PRINT_OPTION_PARAM_4$ OR PRINT_OPTION_PARAM_4$=_CUR.PRINT_OPTION_PARAM_4$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_PARAM_4$=PRINT_OPTION_PARAM_4$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_P_4")+" = "+_CUR.PRINT_OPTION_PARAM_4$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_P_4")+" = "+_CUR.PRINT_OPTION_PARAM_4$
15210 IF _ORIG.PRINT_OPTION_PARAM_5$=_CUR.PRINT_OPTION_PARAM_5$ OR PRINT_OPTION_PARAM_5$=_CUR.PRINT_OPTION_PARAM_5$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_OPTION_PARAM_5$=PRINT_OPTION_PARAM_5$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_O_P_5")+" = "+_CUR.PRINT_OPTION_PARAM_5$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_O_P_5")+" = "+_CUR.PRINT_OPTION_PARAM_5$
15220 IF _ORIG.TEMPLATE_CODE$=_CUR.TEMPLATE_CODE$ OR TEMPLATE_CODE$=_CUR.TEMPLATE_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.TEMPLATE_CODE$=TEMPLATE_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("TEMP_C")+" = "+_CUR.TEMPLATE_CODE$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TEMP_C")+" = "+_CUR.TEMPLATE_CODE$
15230 IF _ORIG.ZF6_UNUSED_1$=_CUR.ZF6_UNUSED_1$ OR ZF6_UNUSED_1$=_CUR.ZF6_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.ZF6_UNUSED_1$=ZF6_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.ZF6_UNUSED_1$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.ZF6_UNUSED_1$
15240 IF _ORIG.COLUMN_TO_PRINT_DATA=_CUR.COLUMN_TO_PRINT_DATA OR COLUMN_TO_PRINT_DATA=_CUR.COLUMN_TO_PRINT_DATA THEN GOTO *NEXT ELSE IF _ORIG.COLUMN_TO_PRINT_DATA=COLUMN_TO_PRINT_DATA THEN _CHG2$=_CHG2$+SEP+MSG("COLU_T_P_D")+" = "+STR(_CUR.COLUMN_TO_PRINT_DATA),_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COLU_T_P_D")+" = "+STR(_CUR.COLUMN_TO_PRINT_DATA)
15250 IF _ORIG.LINE_TO_PRINT_DATA=_CUR.LINE_TO_PRINT_DATA OR LINE_TO_PRINT_DATA=_CUR.LINE_TO_PRINT_DATA THEN GOTO *NEXT ELSE IF _ORIG.LINE_TO_PRINT_DATA=LINE_TO_PRINT_DATA THEN _CHG2$=_CHG2$+SEP+MSG("LINE_T_P_D")+" = "+STR(_CUR.LINE_TO_PRINT_DATA),_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_T_P_D")+" = "+STR(_CUR.LINE_TO_PRINT_DATA)
15260 IF _ORIG.ZF6_UNUSED_2=_CUR.ZF6_UNUSED_2 OR ZF6_UNUSED_2=_CUR.ZF6_UNUSED_2 THEN GOTO *NEXT ELSE IF _ORIG.ZF6_UNUSED_2=ZF6_UNUSED_2 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_2),_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_2)
15270 IF _ORIG.ZF6_UNUSED_3=_CUR.ZF6_UNUSED_3 OR ZF6_UNUSED_3=_CUR.ZF6_UNUSED_3 THEN GOTO *NEXT ELSE IF _ORIG.ZF6_UNUSED_3=ZF6_UNUSED_3 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_3),_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_3)
15280 IF _ORIG.ZF6_UNUSED_4=_CUR.ZF6_UNUSED_4 OR ZF6_UNUSED_4=_CUR.ZF6_UNUSED_4 THEN GOTO *NEXT ELSE IF _ORIG.ZF6_UNUSED_4=ZF6_UNUSED_4 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_4),_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_4)
15290 IF _ORIG.ZF6_UNUSED_5=_CUR.ZF6_UNUSED_5 OR ZF6_UNUSED_5=_CUR.ZF6_UNUSED_5 THEN GOTO *NEXT ELSE IF _ORIG.ZF6_UNUSED_5=ZF6_UNUSED_5 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_5),_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_5)
15300 IF _ORIG.ZF6_UNUSED_6=_CUR.ZF6_UNUSED_6 OR ZF6_UNUSED_6=_CUR.ZF6_UNUSED_6 THEN GOTO *NEXT ELSE IF _ORIG.ZF6_UNUSED_6=ZF6_UNUSED_6 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_6),_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_6)
15310 IF _ORIG.ZF6_UNUSED_7=_CUR.ZF6_UNUSED_7 OR ZF6_UNUSED_7=_CUR.ZF6_UNUSED_7 THEN GOTO *NEXT ELSE IF _ORIG.ZF6_UNUSED_7=ZF6_UNUSED_7 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_7),_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.ZF6_UNUSED_7)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN DOC_CODE$=_CUR.DOC_CODE$
16030 IF _CHG_VAR$(2,1)="Y" THEN FLEX_FORMAT_TYPE$=_CUR.FLEX_FORMAT_TYPE$
16040 IF _CHG_VAR$(3,1)="Y" THEN FIELD_NUM$=_CUR.FIELD_NUM$
16050 IF _CHG_VAR$(4,1)="Y" THEN PRINT_ID$=_CUR.PRINT_ID$
16060 IF _CHG_VAR$(5,1)="Y" THEN SET_TYPE$=_CUR.SET_TYPE$
16070 IF _CHG_VAR$(6,1)="Y" THEN OVERRIDE_KEY$=_CUR.OVERRIDE_KEY$
16080 IF _CHG_VAR$(7,1)="Y" THEN PRINT_TYPE$=_CUR.PRINT_TYPE$
16090 IF _CHG_VAR$(8,1)="Y" THEN PRINT_HEADING_1$=_CUR.PRINT_HEADING_1$
16100 IF _CHG_VAR$(9,1)="Y" THEN PRINT_HEADING_2$=_CUR.PRINT_HEADING_2$
16110 IF _CHG_VAR$(10,1)="Y" THEN PRINT_OPTION_1$=_CUR.PRINT_OPTION_1$
16120 IF _CHG_VAR$(11,1)="Y" THEN PRINT_OPTION_2$=_CUR.PRINT_OPTION_2$
16130 IF _CHG_VAR$(12,1)="Y" THEN PRINT_OPTION_3$=_CUR.PRINT_OPTION_3$
16140 IF _CHG_VAR$(13,1)="Y" THEN PRINT_OPTION_4$=_CUR.PRINT_OPTION_4$
16150 IF _CHG_VAR$(14,1)="Y" THEN PRINT_OPTION_5$=_CUR.PRINT_OPTION_5$
16160 IF _CHG_VAR$(15,1)="Y" THEN PRINT_OPTION_PARAM_1$=_CUR.PRINT_OPTION_PARAM_1$
16170 IF _CHG_VAR$(16,1)="Y" THEN PRINT_OPTION_PARAM_2$=_CUR.PRINT_OPTION_PARAM_2$
16180 IF _CHG_VAR$(17,1)="Y" THEN PRINT_OPTION_PARAM_3$=_CUR.PRINT_OPTION_PARAM_3$
16190 IF _CHG_VAR$(18,1)="Y" THEN PRINT_OPTION_PARAM_4$=_CUR.PRINT_OPTION_PARAM_4$
16200 IF _CHG_VAR$(19,1)="Y" THEN PRINT_OPTION_PARAM_5$=_CUR.PRINT_OPTION_PARAM_5$
16210 IF _CHG_VAR$(20,1)="Y" THEN TEMPLATE_CODE$=_CUR.TEMPLATE_CODE$
16220 IF _CHG_VAR$(21,1)="Y" THEN ZF6_UNUSED_1$=_CUR.ZF6_UNUSED_1$
16230 IF _CHG_VAR$(22,1)="Y" THEN COLUMN_TO_PRINT_DATA=_CUR.COLUMN_TO_PRINT_DATA
16240 IF _CHG_VAR$(23,1)="Y" THEN LINE_TO_PRINT_DATA=_CUR.LINE_TO_PRINT_DATA
16250 IF _CHG_VAR$(24,1)="Y" THEN ZF6_UNUSED_2=_CUR.ZF6_UNUSED_2
16260 IF _CHG_VAR$(25,1)="Y" THEN ZF6_UNUSED_3=_CUR.ZF6_UNUSED_3
16270 IF _CHG_VAR$(26,1)="Y" THEN ZF6_UNUSED_4=_CUR.ZF6_UNUSED_4
16280 IF _CHG_VAR$(27,1)="Y" THEN ZF6_UNUSED_5=_CUR.ZF6_UNUSED_5
16290 IF _CHG_VAR$(28,1)="Y" THEN ZF6_UNUSED_6=_CUR.ZF6_UNUSED_6
16300 IF _CHG_VAR$(29,1)="Y" THEN ZF6_UNUSED_7=_CUR.ZF6_UNUSED_7
16990 RETURN 
