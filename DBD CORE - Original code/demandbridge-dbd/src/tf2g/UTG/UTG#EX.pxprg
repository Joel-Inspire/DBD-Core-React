0010 ! UTG#EX - File and Byte Expand Utility
0015 REM "Prog Type: IP-3.0A
0020 SETESC 9300; SETERR 9000
0035 REM "5.2 - 12/10/03 - 10.528888 - kmc - SSP# 167070
0040 REM "Copyright 2003 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 INIT:
0110 X0$="UT2#EX",X1$="File and Byte Expansion Utility"
0120 DIM Z0$(80,"-")
0130 K0=8,K1=1
0135 C9=-1
0140 M0$="#0",M1$="#,##0",M2$="####,##0",M3$="0"
0200 REM "
0210 DIM T0$(8*4); T0$(1)="Indexed",T0$(9)="???",T0$(17)="Direct",T0$(25)="Sort"
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0290 IOLIST Y[0],Y[1],Y[2],Y[3],Y[4]
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$(1),A[0],A[1],A[2],A[3],A[4]
0320 IOLIST B$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ZZPARM  02O ZZE...  13O ZZPARM  "
0520 GOSUB OPEN_FILES; ON Z0 GOTO 0521,9900
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
0680 GOSUB DISPLAY_BACKGROUND
1000 REM "
1005 RESET 
1010 Y8=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,-1,X1,X2
1030 DIM B$(71),B[1]
1035 DIM A$(9),A[4]
1045 A$(1,LEN(A1$))=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1060 GOTO 1100
1070 GOSUB DISPLAY_BACKGROUND; GOSUB DISPLAY_KEYS
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1500
1200 ! ^1200 Check for key in ZZPARM
1201 RETURN 
1205 SEL_FILE_NAME:IF LEN(STP(FILE_NAME$))=3 THEN FILE_NAME$=STP(FILE_NAME$)+%C$
1206 CALL "*WINGRP;ENABLE",FIELDS.GRP$; CALL "*WINGRP;SHOW",PROCEED.GRP$
1210 A$(1,8)=FILE_NAME$ ! CALL "ZZENTR","SUXUX",A{ALL},A$,X4$,X3$,20,3,1,8,C0,"","{1"+X$,K9$,"UT2*T00","ZZE","ZZ2FAA",""; IF C0=6 THEN GOSUB WHOLE_SCREEN; C0=1
1212 IF INT(ABS(C0))=3 THEN C0=-ABS(C0); READ (Z[1],KEY=A$(1,8),DOM=1213)
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1240 GOTO 1120
1500 ! ^ 1500 Check for key in Disk Master File ZZE
1510 READ (Z[2],KEY=A$(1,8),DOM=1511)IOL=0320; GOTO 1600
1515 READ (Z[2],KEY=A$(1,6),DOM=1516)IOL=0320; GOTO 1600
1520 READ (Z[2],KEY=A$(1,3)+"   ",DOM=1521)IOL=0320; GOTO 1600
1525 CALL "*WINGRP;DISABLE",FIELDS.GRP$; CALL "*WINGRP;HIDE",PROCEED.GRP$; NEXT_ID=FILE_NAME.CTL,FILE_NAME$=""; EXIT 
1550 GOTO 1000
1600 REM "
1605 IF A$(4,3)="   " THEN A$(4,3)="..."
1610 Z$="03CU 03O "+A$; GOSUB OPEN_FILES
1615 IF Z0=1 THEN GOTO 1000 ELSE GOSUB DISPLAY_FILE_DATA
1690 GOTO ENTRY_FIELDS
1700 REM "
1790 GOSUB DISPLAY_NEW_VALUES
1800 REM "
1809 IF A[2]=0 AND A[0]<>0 THEN GOTO 1811; REM "A(2)=0 then ok, we want an auto expanding file. if the keysize (A(0)) is not 0
1810 IF A[2]<R0 THEN GOTO ENTRY_FIELDS
1815 Q$="Do you wish to expand this file?"
1820 CALL "ZZPROM","Y",X3$,S3,Q$,"","",0
1825 ON S3 GOTO 8000,1000
1830 GOTO ENTRY_FIELDS
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 GOSUB EXTRACT_REC
1870 GOSUB DISPLAY_NEW_VALUES
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO ENTRY_FIELDS
2000 ! ^ 2000
2001 ENTRY_FIELDS:
2002 REFRESH_FLG=1
2010 C0=0,X0=-1,X1=1
2020 SETERR 9000; X$="",Q$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2038 IF X0<LEN(V7$) THEN V7$(X0+1,1)=""
2040 ON X0 GOTO 2100,2150,2200,2250,1800
2100 REFRESH_FLG=1; RETURN 
2105 SEL_KEY_SIZE:ESCAPE 
2110 CALL "ZZENTR","N&",A{ALL},A$,X4$,X3$,44,11,0,200,C0,M0$,"{3"+X$,"","UT2*T02","","",""
2140 GOTO 2020
2155 IF T0=3 THEN GOTO 2020
2160 CALL "ZZENTR","N&",A{ALL},A$,X4$,X3$,41,13,1,401,C0,M1$,"{3"+X$,"","UT2*T04","","",""
2162 IF A[1]<B THEN CALL "ZZPROM",".4",X3$,0,"WARNING: Records may be truncated!","","",0
2165 CALL "ZZENTR","N&",A{ALL},A$,X4$,X3$,41,14,4,401,C0,M1$,"{3"+X$,"","UT2*T04","","",""
2170 IF A[4]>=A[1] THEN GOTO 2165
2190 GOTO 2020
2205 X$="0 for Auto expanding, or greater than "+STR(R0)+", F4 to Cancel"
2210 CALL "ZZENTR","N&",A{ALL},A$,X4$,X3$,38,15,2,701,C0,M2$,"{3"+X$,"","UT2*T06","","",""
2215 IF C0=4 THEN GOTO 1000
2240 GOTO 2020
2260 CALL "ZZENTR","N&",A{ALL},A$,X4$,X3$,45,18,3,100,C0,M3$,"{3"+X$,"","UT2*T08","","",""
2290 GOTO 2020
5800 ! ^ 5800
5810 REM "Alt sort keys
5890 RETURN 
6000 ! ^ 6000
6001 DISPLAY_BACKGROUND:
6002 RETURN 
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(4,3+V0),"Disk file name:",@(2,5+V0),"File description:",@(0,6+V0),Z0$,
6070 PRINT @(25,7+V0),"Current (Master)",@(43,7+V0),"New",@(9,9+V0),"File type:",@(10,11+V0),"Key Size:",@(2,13+V0),"Bytes per record:",
6071 PRINT @(1,15+V0),"Number of records:",@(50,15+V0),"(zero for Auto Expanding)",@(4,16),"Records in use:",@(7,18+V0),"Disc number:",
6075 PRINT @(7,14+V0),"String size:",@(50,14+V0),"(Leave zero for no change)"
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 ! ^ 6200
6210 DISPLAY_NEW_VALUES:
6211 RETURN 
6220 CALL "ZZDISP","NM  M",STR(A[0]:M0$),"",X3$,"","",44,11,X4$
6224 CALL "ZZDISP","NM  M",STR(A[1]:M1$),"",X3$,"","",41,13,X4$
6228 CALL "ZZDISP","NM  M",STR(A[2]:M2$),"",X3$,"","",38,15,X4$
6232 CALL "ZZDISP","NM  M",STR(A[3]:M3$),"",X3$,"","",45,18,X4$
6236 PRINT 
6390 RETURN 
6400 ! ^ 6400
6401 WHOLE_SCREEN:
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB DISPLAY_BACKGROUND
6430 IF C9>0 THEN GOSUB DISPLAY_NEW_VALUES ELSE GOSUB DISPLAY_KEYS
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 ! ^ 6450
6451 DISPLAY_KEYS:
6455 IF C9<0 THEN GOTO 6445
6460 PRINT @(20,3),A$(1,8),@(20,5),B$(7,39),
6490 RETURN 
6500 ! ^ 6500
6501 DELETE_REC:
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 A1$=""; GOTO 1630
6600 REM "ALT KEY DATA READS
6605 FIND (Z[2],KEY=A$(1,8),DOM=6606)IOL=0320
6690 RETURN 
6700 ! ^ 6700
6701 ADD_ENTRY:
6705 IF Z9=0 THEN GOTO 6790 ELSE IF V7$>"" THEN X0=POS(" "<>V7$); IF X0>0 THEN X0=X0-1; GOTO 2038
6710 WRITE (Z[1],KEY=A1$)IOL=0310
6790 C9=0; IF Z=6 OR K1=0 THEN GOTO 9900 ELSE IF Z<4 THEN GOTO 1000 ELSE C0=-(3.1+(Z-4)/10); GOTO 6800
6800 GOTO 1000
7200 ! ^ 7200
7201 FORCED_READ:
7210 IF ERR<>0 THEN GOTO 9000
7220 CALL "ZZREAD",Z[1],A1$,A$,A{ALL},S8; ON S8 GOTO 7221,1630
7230 GOSUB DISPLAY_NEW_VALUES
7240 CALL "ZZPROM","E0",X3$,0,"","","",0; GOTO 7290
7250 CALL "ZZPROM","E0A",X3$,0,"","","",0; GOTO 7290
7290 GOTO 1630
7390 IF X0>0 THEN X0=X0-0
7400 ! ^ 7400
7401 EXTRACT_REC:
7410 EXTRACT (Z[1],ERR=FORCED_READ,KEY=A1$,DOM=7440)IOL=0310
7420 C9=1,Z9=1; GOSUB 5800
7440 RETURN 
7450 ! ^ 7450
7451 EXTRACT_NEW_ENTRY:
7460 WRITE (Z[1],KEY=A1$,DOM=7250)IOL=0310; GOTO EXTRACT_REC
7490 RETURN 
7500 ! ^ 7500
7501 DISPLAY_FILE_DATA:
7505 L1=-1; L1=NUM(B$(64,3),ERR=7506)
7510 CALL "ZZINFO",Z[3],X0,X3$,R0,R1,K,B,D,T0,S0,F$
7515 IF T0>0 THEN L0=B; READ (Z[3],END=7516,ERR=7516)Q$; L0=LEN(Q$)
7520 FILE_DESC$=STP(B$(7,39)) ! PRINT @(20,3),F$,@(20,5),B$(7,39),
7525 CURR_FILE_TYPE$=T0$(T0*8+1,8),CURR_FILE_TYPE1$=CURR_FILE_TYPE$ ! PRINT @(25,9),T0$(T0*8+1,8),
7526 ! PRINT @(40,9),T0$(T0*8+1,8),
7530 CURR_KEY_SIZE$=STR(K:M0$),KEY_SIZE$=STR(K:M0$),CURR_BYTE_REC$=STR(B:M1$),BYTE_REC$=STR(B:M1$),CURR_NUM_REC$=STR(R1:M2$),NUM_REC$=STR(R1:M2$) ! PRINT @(29,11),K:M0$,@(26,13),B:M1$,@(23,15),R1:M2$
7531 IF T0>0 THEN CURR_STR$=STR(L0:M1$),STR_LENGHT$=STR(L0:M1$) ! PRINT @(26,14),L0:M1$,; IF L0<>L1 THEN PRINT " (",L1,")",
7532 CURR_REC_USED$=STR(R0:M2$) ! PRINT @(23,16),R0:M2$,; IF R0=R1 AND R1<>0 THEN PRINT " Full!"
7533 REM LET A(4)=L0; IF L1>L0 THEN LET A(4)=L1
7535 CURR_DISK$=STR(D:M3$),DISK$=STR(D:M3$) ! PRINT @(30,18),D:M3$
7540 IF NUM(B$(50,4),ERR=7541)>0 THEN IF NUM(B$(50,4))<>B THEN ! PRINT @(32,13),"(",NUM(B$(50,4)),")",
7550 IF NUM(B$(48,2),ERR=7551)>0 THEN IF NUM(B$(48,2))<>K THEN ! PRINT @(32,11),"(",NUM(B$(48,2)),")",
7560 A[0]=K,A[1]=B,A[2]=R1,A[3]=D; GOSUB DISPLAY_NEW_VALUES
7590 RETURN 
7600 ! ^ 7600
7605 CREATE_TEMP_FILE:! A[0] = KEY, A[1] = BYTES, A[2]=MAX SIZE, A[3] = DEVICE
7610 Q$="#T"+FID(0)
7615 ERASE Q$,ERR=*NEXT; GOTO *SAME
7620 IF ERR<>12 THEN GOTO 9000
7625 SWITCH T0
7630 CASE =0
7635 INDEXED Q$,A[2],A[1]
7640 BREAK
7645 CASE =2
7650 DIRECT Q$,A[0],A[2],A[1]
7655 BREAK
7660 CASE =3
7665 SORT Q$,A[0],A[2]
7670 BREAK
7675 DEFAULT 
7680 GOTO 1000
7685 END SWITCH 
7690 CALL "*conv.tbd/tfdd_updt;Update_Physical",ERR=*NEXT,MID(F$,1,3),Q$,"DN",EMSG$ ! 167070 -N=no embedded i/o
7693 Z$="04O "+Q$; GOSUB OPEN_FILES; ON Z0 GOTO *NEXT,1000
7695 RETURN 
7700 ! ^ 7700
7701 EXPAND_FILE:
7705 GOSUB 8100
7707 IF T0<>0 THEN EXTRACT (Z[3],KEY="",DOM=7708) ELSE EXTRACT (Z[3],IND=0)
7710 IF T0<>0 THEN K$=KEY(Z[3],END=7780) ELSE SETERR 7790; I0=IND(Z[3])
7715 R3=R3+1; READ RECORD (Z[3],END=7780)A$
7718 IF MOD(R3,J0)=0 THEN GOSUB 8155
7720 IF A[4]=0 THEN GOTO 7735 ELSE P0=POS($8A$=A$); IF P0=0 THEN P0=LEN(A$)+1,A$=A$+$8A$
7721 IF P0-1>A[4] THEN CALL "ZZPROM",".5",X3$,A,"String will be truncated!","","",0; ON A GOTO 7722,7900
7722 DIM S$(A[4]); S$(1)=A$(1,P0-1),A$=S$+A$(P0)
7730 IF LEN(A$)>A[1] THEN IF POS($00$<>A$(A[1]))>0 THEN CALL "ZZPROM",".5",X3$,A,"Record will be truncated!","","",0; ON A GOTO 7731,7900
7735 IF LEN(A$)>A[1] THEN A$=A$(1,A[1])
7750 IF T0=0 THEN WRITE RECORD (Z[4])A$ ELSE WRITE RECORD (Z[4],KEY=K$)A$
7760 GOTO 7710
7790 SETERR 9000
7792 J0=R3; GOSUB 8155
7795 RETURN 
7800 ! ^ 7800
7801 RENAME_FILES:
7810 ERASE "T#"+FID(0),ERR=7811; GOTO 7810
7815 IF ERR<>12 THEN GOTO 9000
7820 CLOSE (Z[3]); RENAME F$,"T#"+FID(0)
7825 CLOSE (Z[4]); RENAME Q$,F$; CALL "*conv.tbd/tfdd_updt;Update_Physical",ERR=*PROCEED,MID(F$,1,3),F$,"D",EMSG$; OPEN (Z[3])F$ ! 167070, needed here to set Data rep info, now that we have the correct file name
7830 ERASE "T#"+FID(0)
7890 RETURN 
7900 ! ^ 7900
7950 ! ^ 7950
7951 ERASE_TEMP_FILES:
7955 BEGIN 
7960 ERASE "#T"+FID(0),ERR=7961
7965 ERASE "T#"+FID(0),ERR=7966
7990 GOTO 0010
8000 ! ^ 8000
8001 PROCEED:GOSUB ASSIGN_PRG; ESCAPE 
8005 Q$="Do you wish to expand this file"; MSGBOX Q$,MSG("CONFIRMiNG"),"?,YESNO",OPT$; IF OPT$="NO" THEN CMD_STR$="E"; EXIT 
8010 GOSUB CREATE_TEMP_FILE
8015 LOCK (Z[3],ERR=*PROCEED); LOCK (Z[4],ERR=*NEXT) ! for performance and for safety
8050 GOSUB EXPAND_FILE
8055 GOSUB RENAME_FILES
8057 UNLOCK (Z[3],ERR=*PROCEED); UNLOCK (Z[4],ERR=*NEXT)
8060 IF K=0 THEN GOSUB INDEXED_FILES
8090 GOTO 0010
8100 REM "Set variables
8130 J0=INT(R0*.02); IF J0<=1 THEN J0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",20,10,50,J1,R0,R3
8195 RETURN 
8200 ! ^ 8200  write special topform record 0 to index file
8201 INDEXED_FILES:
8210 DIM Y[6]; EXTRACT (Z[3],IND=0)IOL=0290
8220 Y[3]=A[2]-1
8230 WRITE (Z[3],IND=0)IOL=0290
8290 RETURN 
8900 ! ^ 8900 functions
8901 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNB$(Z9$)=X3$(214-6*NUM(Z9$),1)
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB WHOLE_SCREEN
9520 ON C9 GOTO 1140,2040
9740 RETURN 
9750 OPEN_FILES:
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9770 CLOSE (FLIST_IN,ERR=*NEXT)
9780 CLOSE (FLIST_OUT,ERR=*NEXT)
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 Y8=2
9906 END_PROG:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 ASSIGN_PRG:
