0010 ! UTGFMP - File Maintenance Program for FMP File                      
0015 ! Customer Reference
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Nov. 19, 2007 04:36
0030 ! ************************************************************************
0035 REM "5.6 - 11/19/07 - 16.754444 - jdf - SSP# 211776
0037 REM "211776-Final conversion of customers                               
0040 REM "Copyright 2007 DemandBridge, Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 %GUI=1; PROCESS "UTGFMP","../UTG/UT.EN"
0060 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0090 ! 
0100 ! !100 - Initialization
0110 INIT:
0130 X0=-1,X2=-1
0140 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0150 DIM A$[255]; DIM B$[255] ! dimension array        
0190 DIM Z[NUM(X3$(60,3))]
0200 Z$="03O FM0...  "
0210 GOSUB OPEN_FILE
0400 ! 
0490 RETURN 
0500 ! !500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0880 RETURN 
0890 ! 900 - Wrapup
0900 WRAPUP:
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0920 SET_PARAM 'KR'=_SV_KR
0930 RETURN 
1000 ! Load the default range
1010 LOAD_RANGE:
1020 IF NUL(RNG$(1,10)) THEN CUST_START$="" ELSE CUST_START$=RNG$(1,10)
1030 IF RNG$(11,3)="~~~" THEN CUST_END$="" ELSE CUST_END$=RNG$(11,10)
1500 RETURN 
3790 ! 
3800 CLEAR_FIELDS:
3810 SOURCE_FILE$=""
3820 DEST_FILE$=""
3830 REFRESH_FLG=1
3840 GOTO *RETURN
3880 RETURN 
3890 ! 
5000 ! 5000 - open source file
5010 OPEN_SOURCE:
5020 _FILE_NAME$=SOURCE_FILE$
5022 Z$="01O "+_FILE_NAME$
5024 GOSUB OPEN_FILE
5030 IF Z0>0 THEN NEXT_ID=SOURCE_FILE.CTL; GOTO *RETURN
5032 READ (Z[1],KEY="",DOM=*NEXT) ! Positions the pointer at the beginning
5034 RETURN 
5100 ! 5100 - open destination file
5110 OPEN_DEST:
5112 IF STP(SOURCE_FILE$,3)="" THEN NEXT_ID=SOURCE_FILE.CTL; GOTO *RETURN
5114 _FILE_NAME$=DEST_FILE$
5116 Z$="02O "+_FILE_NAME$
5118 GOSUB OPEN_FILE
5120 IF Z0>0 THEN NEXT_ID=DEST_FILE.CTL; GOTO *RETURN
5121 IF DEST_FILE$="" THEN NEXT_ID=DEST_FILE.CTL; GOTO *RETURN
5122 MSGBOX QUO+SOURCE_FILE$+QUO+SEP+"will be copied to "+QUO+DEST_FILE$+QUO,MSG("CONFIRM"),"YESNO,1,!",ANS$
5124 IF ANS$="NO" THEN GOTO 3800
5132 PATH$=%DATAPATH$,%PATH$=PATH$+"/"+_FILE_NAME$
5134 CPATH$=%DATAPATH$,%CPATH$=CPATH$+"/"+_FILE_NAME$+STP(DAY,3,"/")
5136 INVOKE "cp "+%PATH$+" "+%CPATH$
5138 A1$=KEY(Z[1],END=5180) ! KEY of next record in file
5140 READ RECORD (Z[1],KEY=A1$)A$
5150 IF A1$(1,1)<>"D" AND A1$(1,1)<>"A" THEN GOTO 5138
5160 WRITE RECORD (Z[2],KEY=A1$)A$
5162 IF A$(24,1)<>"Y" THEN GOTO 5138
5164 CUST_NUM$=A1$(2,10)
5166 READ (Z[3],KEY="C"+CUST_NUM$,DOM=*NEXT) ! POINT TO THE FIRST RECORD
5168 K$=KEY(Z[3],END=5138); IF K$(1,1)<>"C" THEN GOTO 5138
5170 IF K$(2,10)<>CUST_NUM$ THEN GOTO 5138
5172 READ RECORD (Z[3],KEY=K$)B$
5174 B$(223,1)="I"
5176 WRITE RECORD (Z[3],KEY=K$)B$
5178 GOTO 5168
5180 MSGBOX "Process complete",MSG("CONFIRMING"),"!,TIM=5"
5190 RETURN 
8000 ! Message
8010 ADD_OPT:
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN CMD_STR$="END"; RETURN 
8040 KEY_1$="AR2ROA"+RPT_SELEC$
8050 DIM ZZS$(72),RNG$(100); ZZS$(1,18)=KEY_1$; ZZS$(71,1)="1"
8070 REFRESH_FLG=1; NEXT_ID=RPT_DESC.CTL
8090 RETURN 
9000 OPEN_FILE:
9010 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9020 RETURN 
9100 OPEN_FILE_ERROR:
9110 MSGBOX QUO+_FILE_NAME$+QUO+" is not available.",MSG("RE-ENTER File Name"),"!"
9120 REFRESH_FLG=1
9130 IF ID=SOURCE_FILE.CTL THEN NEXT_ID=SOURCE_FILE.CTL; GOTO 5000
9140 IF ID=DEST_FILE.CTL THEN NEXT_ID=DEST_FILE.CTL; GOTO 5110
9150 RETURN 
9999 END 
20000 LOAD_OPTIONS:
20010 ! View Report Routine.
20020 ! 
20030 ZZS$(1,6)=PRG_NAME$
20040 ZZS$(7,12)=RPT_SELEC$; ZZS$(19,40)=RPT_DESC$
20050 ZZS$(59,12)=RPT_OPT$; ZZS$(71,1)=RPT_SEQ$
20090 ! 
20100 PRT$(1,1)=PRT_MODE$; PRT$(2,2)=RPT_OUTDEV$
20110 PRT$(9,1)=RPT_VERT$; PRT$(10,1)=RPT_HORIZ$
20120 PRT$(11,1)=RPT_AUX1$; PRT$(12,1)=RPT_AUX2$
20130 PRT$(13,1)=RPT_AUX3$; PRT$(14,1)=RPT_AUX4$
20140 PRT$(15,2)=RPT_LINES$; PRT$(17,1)=RPT_FORMCODE$
20150 PRT$(65,60)=RPT_JOBCARD$; PRT$(125,1)=RPT_JOBCARD_FLG$
20160 ! 
20170 IF RPT_SEQ$="1" THEN {
20180 T1$="AR1..."
20190 GOSUB GET_CUST_RANGE }
20300 IF B_ZZS$=ZZS$ AND B_PRT$=PRT$ AND B_RNG$=RNG$ THEN CHG_FLG=0 ELSE CHG_FLG=1
20390 RETURN 
25000 ! Print Report Routine.
25010 PRINT_REPORT:
25015 IF NOT(NUL(VIEW$)) THEN PRT$(2,2)=VIEW$
25020 K$=X3$(1,8)
25030 WRITE (Z[7],KEY=K$)X3$,X4$,T1$,PRT$,RNG$,IOL=0170
25040 ! PRINT 'DIALOGUE'(5,5,80,25,"Printing Customer Reference Report"); CALL "AR2ROA"; PRINT 'POP'
25041 CALL "AR2ROA"
25050 CMD_STR$="END"
25060 RETURN 
30000 ! 
30010 GET_CUST_RANGE:
30020 IF NUL(CUST_START$) THEN RNG$="          " ELSE RNG$=CUST_START$
30030 IF NUL(CUST_END$) THEN RNG$=RNG$+"~~~~~~~~~~" ELSE RNG$=RNG$+CUST_END$ }
30040 RETURN 
30050 ! 
30060 GET_SLSMAN_RANGE:
30070 IF NUL(SLS_START$) THEN RNG$(1,4)="    " ELSE RNG$(1,4)=SLS_START$
30080 IF NUL(SLS_END$) THEN RNG$(5,4)="~~~~" ELSE RNG$(5,4)=SLS_END$
30090 RETURN 
30100 ! 
30110 GET_CAT_RANGE:
30120 IF NUL(CAT_START$) THEN RNG$=RNG$+"        " ELSE RNG$=RNG$+CAT_START$
30130 IF NUL(CAT_END$) THEN RNG$=RNG$+"~~~~~~~~" ELSE RNG$=RNG$+CAT_END$
30140 RETURN 
30150 ! 
30160 GET_SHIPTO_RANGE:
30170 IF NUL(SHIPTO_START$) THEN RNG$=RNG$+"    " ELSE RNG$=RNG$+SHIPTO_START$
30180 IF NUL(SHIPTO_END$) THEN RNG$=RNG$+"~~~~" ELSE RNG$=RNG$+SHIPTO_END$
30190 RETURN 
30200 ! 
30210 GET_INV_RANGE:
30220 IF NUL(INV_START$) THEN RNG$=RNG$+"        " ELSE RNG$=RNG$+INV_START$
30230 IF NUL(INV_END$) THEN RNG$=RNG$+"~~~~~~~~" ELSE RNG$=RNG$+INV_END$
30240 RETURN 
