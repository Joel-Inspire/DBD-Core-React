0010 ! UTGFS6 - File Maintenance Program for AP4
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Jun. 19, 2002 15:17
0030 ! ************************************************************************
0060 ! 
0070 PROCESS "UTGFS6","../UTG/UT.EN"
0080 ! 
0090 EXIT 
0100 ! 100 - Initialization
0110 INIT:
0120 ! 
0130 X0$="UTGFS6"
0140 X0=-1; X2=-1
0150 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
0160 ! 
0170 ! Dim Variables
0180 DIM Z[NUM(X3$(60,3))],FS6[7],AP5[6]
0190 ! 
0195 DIM VEND_NUM$[100,2],PD_CODE$[100,2],UM_CODE$[100,2],CUST_CODE$[100,2],PL_CODE$[100,2],ITEM_CODE$[100,2]
0200 ! open files
0210 Z$="01O FS6...  02O AP4...  03O FMP...  04O AR1...  05O FM0...  06O ZZPARM  07O IC0...  "
0220 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0300 ! iolist
0310 IOLIST FS6$,FS6{ALL}
0320 IOLIST AP4$,AP4{ALL}
0330 IOLIST AP3$,AP3{ALL}
0340 IOLIST GL1$
0350 IOLIST ZYB$
0400 ! 
0450 PROS_FLG=0
0485 REFRESH_FLG=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 ! 
0530 CALL "$CTL-10;PB_CREATE",0,0,17,1.4,20,1,0
0550 CALL "*wingrp;Show",PROC_1.GRP$
0560 REFESH_FLG=1
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! Get the vendors info
1010 PROCESS_FILE:
1015 IF PROS_FLG=1 THEN PROS_FLG=0; GOTO 1040
1020 KEY_1$=""; COUNT=0
1030 READ (Z[1],KEY=KEY_1$,DOM=*NEXT)
1040 KEY_1$=KEY(Z[1],END=END_ROUTINE); READ (Z[1],KEY=KEY_1$)IOL=0310
1050 IF NOT(NUL(FS6$(87,10))) THEN FIND (Z[2],KEY=FS6$(87,10),DOM=VEND_ERR)
1060 IF NOT(NUL(FS6$(31,3))) THEN FIND (Z[3],KEY="T"+FS6$(31,3),DOM=PROD_ERR)
1070 IF NOT(NUL(FS6$(101,4))) THEN FIND (Z[6],KEY="U/M"+FS6$(101,4),DOM=SELL_ERR)
1075 ! FIND (Z[6],KEY="U/M"+FS6$(124,4),DOM=INV_ERR)
1080 ! IF NOT(NUL(FS6$(97,4))) THEN FIND (Z[4],KEY=FS6$(1,10),DOM=CUST_ERR)
1090 IF NOT(NUL(FS6$(1,10))) THEN FIND (Z[4],KEY=FS6$(1,10),DOM=CUST_ERR)
1095 ++COUNT; CALL "$CTL-10;PB_VALUE",COUNT
1100 GOTO 1030
1300 RETURN 
1500 ! Process Vendor Category
1510 VEND_ERR:
1520 ERR_FLG=1; NOT_FOUND=0
1530 GOSUB FIND_CHANGE
1540 IF NOT_FOUND THEN {
1550 CALL "*wingrp;Show",VEND_1.GRP$; CALL "*wingrp;Show",HEAD.GRP$
1560 OLD_VENDOR$=FS6$(87,10); NEXT_ID=NEW_VENDOR.CTL
1565 REFRESH_FLG=1; RETURN 
1570  }
1580 GOTO 1060
1590 REFRESH_FLG=1
1595 RETURN 
1600 ! Process Bank Code 
1605 PROD_ERR:
1610 ERR_FLG=2; NOT_FOUND=0
1615 GOSUB FIND_CHANGE
1620 IF NOT_FOUND THEN {
1625 CALL "*wingrp;Show",PROD_1.GRP$; CALL "*wingrp;Show",HEAD.GRP$
1630 OLD_PROD_CODE$=FS6$(31,3); NEXT_ID=NEW_PROD_CODE.CTL
1635 REFRESH_FLG=1; RETURN 
1640  }
1645 GOTO 1070
1650 REFRESH_FLG=1
1655 RETURN 
1700 ! Get the Vendor Information
1705 SELL_ERR:
1710 ERR_FLG=3; NOT_FOUND=0
1715 GOSUB FIND_CHANGE
1720 IF NOT_FOUND THEN {
1725 CALL "*wingrp;Show",UM_1.GRP$; CALL "*wingrp;Show",HEAD.GRP$
1730 OLD_UM_CODE$=FS6$(101,4); NEXT_ID=NEW_UM_CODE.CTL
1735 REFRESH_FLG=1; RETURN 
1740  }
1745 GOTO 1075
1750 REFRESH_FLG=1
1755 RETURN 
1800 ! Get the Vendor Information
1805 INV_ERR:
1810 ERR_FLG=4; NOT_FOUND=0
1815 GOSUB FIND_CHANGE
1820 IF NOT_FOUND THEN {
1825 CALL "*wingrp;Show",I_UM_1.GRP$; CALL "*wingrp;Show",HEAD.GRP$
1830 OLD_UM_CODE$=FS6$(124,4); NEXT_ID=NEW_UM_CODE.CTL
1835 REFRESH_FLG=1; RETURN 
1840  }
1845 GOTO 1080
1850 REFRESH_FLG=1
1855 RETURN 
1900 ! Get the Customer Information
1905 CUST_ERR:
1910 ERR_FLG=5; NOT_FOUND=0
1915 GOSUB FIND_CHANGE
1920 IF NOT_FOUND THEN {
1925 CALL "*wingrp;Show",CUST_1.GRP$; CALL "*wingrp;Show",HEAD.GRP$
1930 OLD_CUST_CODE$=FS6$(1,10); NEXT_ID=NEW_CUST_CODE.CTL
1935 REFRESH_FLG=1; RETURN 
1940  }
1945 GOTO 1090
1950 REFRESH_FLG=1
1955 RETURN 
2000 ! Find The changes requested
2010 FIND_CHANGE:
2015 ARRAY_LINE=0
2020 SWITCH ERR_FLG
2030 CASE 1
2040 FOR XX=1 TO 100
2050 IF NUL(VEND_NUM$[XX,1]) THEN NOT_FOUND=1; ARRAY_LINE=XX; XX=100; GOTO 2090
2060 MATCH$=VEND_NUM$[XX,1]
2070 IF MATCH$(1,10)<>FS6$(87,10) THEN GOTO 2090
2080 FS6$(87,10)=VEND_NUM$[XX,2]
2085 GOSUB WRITE_REC
2087 XX=100
2090 NEXT XX
2095 BREAK
2100 CASE 2
2110 FOR XX=1 TO 100
2120 IF NUL(PD_CODE$[XX,1]) THEN NOT_FOUND=1; ARRAY_LINE=XX; XX=100; GOTO 2170
2130 MATCH$=PD_CODE$[XX,1]
2140 IF MATCH$(1,3)<>FS6$(31,3) THEN GOTO 2170
2150 FS6$(31,3)=PD_CODE$[XX,2]
2160 GOSUB WRITE_REC
2165 XX=100
2170 NEXT XX
2180 BREAK
2200 CASE 3
2210 FOR XX=1 TO 100
2220 IF NUL(UM_CODE$[XX,1]) THEN NOT_FOUND=1; ARRAY_LINE=XX; XX=100; GOTO 2270
2230 MATCH$=UM_CODE$[XX,1]
2240 IF MATCH$(1,4)<>FS6$(101,4) THEN GOTO 2270
2250 FS6$(101,4)=T_CODE$[XX,2]
2260 GOSUB WRITE_REC
2265 XX=100
2270 NEXT XX
2280 BREAK
2300 CASE 4
2310 FOR XX=1 TO 100
2320 IF NUL(UM_CODE$[XX,1]) THEN NOT_FOUND=1; ARRAY_LINE=XX; XX=100; GOTO 2370
2330 MATCH$=UM_CODE$[XX,1]
2340 IF MATCH$(1,12)<>FS6$(124,4) THEN GOTO 2370
2350 FS6$(124,4)=UM_CODE$[XX,2]
2360 GOSUB WRITE_REC
2365 XX=100
2370 NEXT XX
2380 BREAK
2400 CASE 5
2410 FOR XX=1 TO 100
2420 IF NUL(CUST_CODE$[XX,1]) THEN NOT_FOUND=1; ARRAY_LINE=XX; XX=100; GOTO 2480
2430 MATCH$=CUST_CODE$[XX,1]
2440 IF MATCH$(1,10)<>FS6$(1,10) THEN GOTO 2480
2450 FS6$(1,10)=CUST_CODE$[XX,2]
2460 GOSUB WRITE_REC
2470 XX=100
2480 NEXT XX
2490 BREAK
2800 END SWITCH 
2900 RETURN 
3000 ! Enter the new Vendor Category
3010 VEND_NUM_ENTRY:
3020 FS6$(87,10)=NEW_VENDOR$
3030 VEND_NUM$[ARRAY_LINE,2]=FS6$(87,10); VEND_NUM$[ARRAY_LINE,1]=OLD_VENDOR$
3040 GOSUB WRITE_REC
3060 CALL "*wingrp;Hide",VEND_1.GRP$; CALL "*wingrp;Hide",HEAD.GRP$
3070 PROS_FLG=1; CALL "*wingrp;show",PROC_1.GRP$
3080 REFRESH_FLG=1
3090 RETURN 
3100 ! Enter the new Bank Code
3110 PROD_CODE_ENTRY:
3120 FS6$(31,3)=NEW_PROD_CODE$
3130 PD_CODE$[ARRAY_LINE,2]=FS6$(31,3); PD_CODE$[ARRAY_LINE,1]=OLD_PROD_CODE$
3140 GOSUB WRITE_REC
3160 CALL "*wingrp;Hide",PROD_1.GRP$; CALL "*wingrp;Hide",HEAD.GRP$
3170 PROS_FLG=1; CALL "*wingrp;show",PROC_1.GRP$
3180 REFRESH_FLG=1
3190 RETURN 
3200 ! Enter the new Terms Code
3210 SELL_UM_ENTRY:
3220 FS6$(101,4)=NEW_UM_CODE$
3230 UM_CODE$[ARRAY_LINE,2]=FS6$(101,4); UM_CODE$[ARRAY_LINE,1]=OLD_UM_CODE$
3240 GOSUB WRITE_REC
3260 CALL "*wingrp;Hide",UM_1.GRP$; CALL "*wingrp;Hide",HEAD.GRP$
3270 PROS_FLG=1; CALL "*wingrp;show",PROC_1.GRP$
3280 REFRESH_FLG=1
3290 RETURN 
3300 ! Enter the new GL Code
3310 INV_UM_ENTRY:
3320 FS6$(124,4)=NEW_INV_UM$
3330 UM_CODE$[ARRAY_LINE,2]=FS6$(124,4)
3340 GOSUB WRITE_REC
3360 CALL "*wingrp;Hide",I_UM_1.GRP$; CALL "*wingrp;Hide",HEAD.GRP$
3370 PROS_FLG=1; CALL "*wingrp;show",PROC_1.GRP$
3380 REFRESH_FLG=1
3390 RETURN 
3400 ! Enter the new GL Code
3410 CUST_CODE_ENTRY:
3420 FS6$(1,10)=NEW_CUST_CODE$
3430 CUST_CODE$[ARRAY_LINE,2]=FS6$(1,10)
3440 GOSUB WRITE_REC
3450 CALL "*wingrp;Hide",CUST_1.GRP$; CALL "*wingrp;Hide",HEAD.GRP$
3460 PROS_FLG=1; CALL "*wingrp;show",PROC_1.GRP$
3470 REFRESH_FLG=1
3480 RETURN 
4000 ! Write record out....
4010 WRITE_REC:
4015 ! 
4020 WRITE (Z[1],KEY=KEY_1$)IOL=0310
4030 ! MSGBOX "The information has been updated...","FYI"
4080 B_AP5$=AP5$
4090 RETURN 
9000 ! End Routine
9010 END_ROUTINE:
9020 ! 
9030 CALL "$CTL-10;PB_DEL"
9050 CMD_STR$="END"
9090 RETURN 
