0010 REM "Providex File Search & Replace Utility <UTGCCR>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 08/02/13 - 13.425833 - crg - SSP# 264200
0037 REM "264200-Utility to scan a Providex file for a given string pattern, 
0040 REM "Copyright 2013 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "This utility is intended for use in search & replace functionality
0051 REM "within selected Providex Files 
0095 INIT:
0100 BEGIN 
0110 X0$="UTGCCR",X1$="Providex File Search and Replace Utility"
0130 K0=20,K1=1
0135 C9=-1
0140 X0=-1
0145 RCNT=0
0150 SAVE_PERCENT_GUI=%GUI; %GUI=1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "IOLISTS
0310 IOLIST A$
0320 IOLIST B$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 ! $="01O FMN...  "
0520 ! ALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 ! IN_FILE$="FMNFT6"
0540 IF MEMCHN<>0 THEN CLOSE (MEMCHN,ERR=*PROCEED); MEMCHN=0
0550 CALL "ZZGFLS",MEMCHN; IF MEMCHN=0 THEN MSGBOX "Error: Files could not be selected!"; GOTO 9900
0599 ! 
0660 ! GOSUB 8100
0670 CALL "ZZPROM","0",X3$,Z,"Proceed?","","",0; ON Z GOTO 0680,9900,0540
0675 ! 
0680 PROCEED:
0950 GOSUB 8150
0960 READ (MEMCHN,KEY="",DOM=*NEXT) ! 237322 Reset to beginning of file list
0970 GOSUB OPEN_LOG
0980 MSG$="Starting UTGCCR process"; GOSUB LOG_MSG
0990 MM$="(4[0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9])|(5[1-5][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9])|(6(011|5[0-9][0-9])[ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9])|(3[457][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9])|(3(0[0-5]|[68][0-9])[0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9])|((2131|1800)[ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][ \-]?[0-9][0-9][0-9])|(3[457][0-9][0-9][ \-]?[0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][0-9])|(3(0[0-5]|[68][0-9])[0-9][ \-]?[0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][ \-]?[0-9][0-9][0-9][0-9][0-9])"
1000 REM "BEGIN MAIN PROCESS
1010 NEXT_FILE:
1011 FKEY$=KEY(MEMCHN,END=5000); READ (MEMCHN,KEY=FKEY$)LOGICAL_FILE$ ! 237322
1020 SEQ_NUMBER=SEQ_NUMBER+1; PRINT @(20,19),STR(SEQ_NUMBER)," of ",FIN(MEMCHN,"NUMREC"),": ",LOGICAL_FILE$, ! ; IF MOD(C,T0)=1 THEN GOSUB 8150 ! 237322
1200 IN_FILE$=UCS(MID(LOGICAL_FILE$,1,3))
1210 CHL=UNT; OPEN (CHL,ERR=9900)IN_FILE$+%C$
1212 STARTBOUND=1; INPUT EDIT @(12,12),"Enter start position for scan: ",STARTBOUND
1215 ENDBOUND=9999; INPUT EDIT @(12,14),"Enter end position for scan: ",ENDBOUND
1220 GOSUB 8100
1240 C=0; READ (CHL,KEY="",ERR=*NEXT)
1242 ! 
1245 NEXT_IN_REC:
1250 KY$=KEY(CHL,END=END_IN_FILE); READ RECORD (CHL,KEY=KY$)INFREC$
1252 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1255 KL=LEN(KY$); IN_REC$=INFREC$(KL+1)
1300 IN_MSK$=MM$ ! MSK_INPUT$
1310 TOTLEN=0,TOTSTR=0
1315 ! 
1320 TEST_MSK:
1350 XX=MSK(IN_REC$,IN_MSK$,ERR=NEXT_IN_REC)
1360 IF XX=0 THEN GOTO NEXT_IN_REC
1370 GOSUB 2500
1375 IF FLAG$="GOOD" THEN GOTO *NEXT ELSE GOTO CHECK_IN_STR
1380 TOTSTR=TOTLEN+XX+KL,TLN=MSL-4
1382 IF TOTSTR>=STARTBOUND AND TOTSTR<=ENDBOUND THEN GOTO *NEXT ELSE GOTO CHECK_IN_STR
1386 STS$=INFREC$(TOTSTR,TLN)
1387 STS$=TBL(STS$,"1234567890","XXXXXXXXXX")
1390 INFREC$(TOTSTR,TLN)=STS$; WRITE RECORD (CHL,KEY=KY$)INFREC$; RCNT=RCNT+1
1393 MSG$="REC"+"|"+IN_FILE$+"|"+KY$+"|"+STR(TOTSTR:"###0")+"|"+STR(MSL:"#0")+"|"+MID(INFREC$,TOTSTR,TLN+4)+"|"; GOSUB LOG_MSG
1395 ! 
1400 CHECK_IN_STR:
1410 TOTLEN=TOTLEN+(XX+MSL-1)
1420 SPOS=XX+MSL
1430 IN_REC$=IN_REC$(SPOS)
1480 GOTO TEST_MSK
1490 ! 
1500 END_IN_FILE:
1510 CLOSE (CHL,ERR=*NEXT)
1520 GOTO NEXT_FILE
1590 ! 
2500 FLAG$="INVALID CARD"
2510 RR$=IN_REC$(XX,MSL)
2520 RRS$=STP(RR$,3,*" -"),ACCT$=RRS$,ACCT_LENGTH=LEN(RRS$)
3000 REM " CHECK DIGIT ALGORITHM 10
3005 REM "ACCT$="340000000000009",ACCT_LENGTH=LEN(ACCT$)
3020 DIM ACT[ACCT_LENGTH],FIRST_TOTAL[ACCT_LENGTH]
3030 FOR I=1 TO ACCT_LENGTH; ACT[ACCT_LENGTH-I]=NUM(ACCT$(I,1)); NEXT I
3050 TOTAL=0
3075 FOR I=1 TO ACCT_LENGTH-1 STEP 2; FIRST_TOTAL[I]=ACT[I]*2; NEXT I
3076 FOR I=0 TO ACCT_LENGTH STEP 2; FIRST_TOTAL[I]=ACT[I]; NEXT I
3100 FOR I=0 TO ACCT_LENGTH-1
3105 SUBTOTAL=0,FIRST_DIGIT=0,SECOND_DIGIT=0
3120 FIRST_DIGIT=INT(FIRST_TOTAL[I]/10)
3130 SECOND_DIGIT=MOD(FIRST_TOTAL[I],10)
3140 TOTAL=TOTAL+FIRST_DIGIT+SECOND_DIGIT
3150 NEXT I
3175 IF MOD(TOTAL,10)=0 THEN FLAG$="GOOD"
3180 RETURN 
4999 ! 
5000 REM "EOJ
5005 PRINT 'CS'; PRINT @(10,10),"Records changed: ",RCNT
5010 C=T; GOSUB 8150
5020 ! SGBOX MSG("COMPLETED")+"!",_FYI$,"!"
5030 MSG$="Ending UTGCCR process"; GOSUB LOG_MSG
5040 END 
5099 ! 
6000 REM "BACKGROUND
6445 RETURN 
7000 OPEN_LOG:
7010 LOG_FILE$="UTGCCR_"+DTE(0:"%Y%Mz%Dz")+"_"+DTE(0:"%Hz%mz%sz")+".log"
7015 OPTIONS$="N" ! New log file every time
7020 CALL "ZZ2LOG;OPEN_LOG",X3$,X4$,LOG_FILE$,OPTIONS$,LOG_CHANNEL
7040 RETURN 
7045 ! 
7050 LOG_MSG:
7060 CALL "ZZ2LOG;LOG_MSG",X3$,X4$,LOG_CHANNEL,MSG$,LOG_LEVEL
7085 MSG$=""
7090 RETURN 
7095 ! 
7100 CLOSE_LOG:
7110 IF LOG_CHANNEL>0 THEN CALL "ZZ2LOG;CLOSE_LOG",X3$,X4$,LOG_CHANNEL
7140 RETURN 
7145 ! 
7500 FILE_OPEN_ERR:! Error opening file
7505 FOE=ERR
7510 CALL "ZZPROM",".4",X3$,Z,"Error "+STR(FOE)+" occurred on file "+STP(DR1$(1,10))+"!","","",0
7545 GOTO 1600
7549 ! 
7950 ! 
8100 REM "Initilaize graph
8110 T=NUM(FIN(CHL,"NUMREC")),T0=2
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Update graph
8155 CALL "ZZBARG",X3$,"HG",23,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9515 GOTO 0640
9520 ON C9 GOTO 1140,2040
9900 WRAPUP:REM "END PROGRAM
9905 ! %GUI=SAVE_PERCENT_GUI
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9925 IF MEMCHN THEN CLOSE (MEMCHN); MEMCHN=0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56001 ! 
56002 REM "249336-Data rep bulk setup utility isssue exporting SQL for AR5
