0010 ! OFGMAA - Order Entry Gateway Header
0035 REM "5.6 - 06/05/08 - 9.819444 - jir - SSP# 215547
0040 REM "Copyright 2008 DemandBridge, Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "OFGMAA","../OFG/OF.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0112 DIM OF2[7] ! SSP 215547
0115 IOLIST OF2$,OF2[0],OF2[1],OF2[2],OF2[3],OF2[4],OF2[5],OF2[6],OF2[7] ! SSP 215547
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="OF1"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="GOE_NUMBER$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1665 GOSUB DELETE_MORE_REC ! SSP 215547
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 REFRESH_FLG=1,_CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3061 REQ_ORDER$=REQ_ORDER_DIV$+REQ_ORDER_NUM$
3062 REP_ORDER$=REPEAT_ORDER_DIV$+REPEAT_ORDER_NUM$
3063 CUSTOMER$=CUST_DIV$+CUST_CODE$
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1,_CLR_FLG$="R"; GOSUB CLEAR_FIELDS
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=GOE_NUMBER.CTL,_FIRST_FIELD=REQ_ORDER_DIV.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 FREIGHT_IN$=STR(FREIGHT_IN)
10030 CRED_AMT_CHRG$=STR(CRED_AMT_CHRG)
10040 OF1_UNUSED_3$=STR(OF1_UNUSED_3)
10050 OF1_UNUSED_4$=STR(OF1_UNUSED_4)
10060 OF1_UNUSED_5$=STR(OF1_UNUSED_5)
10070 OF1_UNUSED_6$=STR(OF1_UNUSED_6)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="FREIGHT_IN",_X=FREIGHT_IN.CTL,FREIGHT_IN=NUM(FREIGHT_IN$,ERR=NON_NUMERIC)
11030 _X$="CRED_AMT_CHRG",_X=CRED_AMT_CHRG.CTL,CRED_AMT_CHRG=NUM(CRED_AMT_CHRG$,ERR=NON_NUMERIC)
11040 _X$="OF1_UNUSED_3",_X=OF1_UNUSED_3.CTL,OF1_UNUSED_3=NUM(OF1_UNUSED_3$,ERR=NON_NUMERIC)
11050 _X$="OF1_UNUSED_4",_X=OF1_UNUSED_4.CTL,OF1_UNUSED_4=NUM(OF1_UNUSED_4$,ERR=NON_NUMERIC)
11060 _X$="OF1_UNUSED_5",_X=OF1_UNUSED_5.CTL,OF1_UNUSED_5=NUM(OF1_UNUSED_5$,ERR=NON_NUMERIC)
11070 _X$="OF1_UNUSED_6",_X=OF1_UNUSED_6.CTL,OF1_UNUSED_6=NUM(OF1_UNUSED_6$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN GOE_NUMBER$=""
13030 CUST_DIV$="",CUSTOMER$=""
13040 CUST_CODE$=""
13050 UPDATE_PO$=""
13060 ORDER_DATE$=""
13070 CUST_PO$=""
13080 DATE_REQUESTED$=""
13090 ORDERED_BY$=""
13100 ORDER_GREETING$=""
13110 REP_ORDER$=""
13120 REPEAT_ORDER_DIV$=""
13130 REPEAT_ORDER_NUM$=""
13140 REC_PROCESSED$=""
13150 ORDER_DIV$=""
13160 ORDER_NUM$=""
13170 REQ_ORDER_DIV$=""
13180 REQ_ORDER_NUM$="",REQ_ORDER$=""
13190 OF1_ERROR_CODE$=""
13200 HOLD_FLAG$=""
13210 VEND_INV_NUM$=""
13220 SALESPERSON$=""
13230 CREDIT_TYPE$=""
13240 CREDIT_NUM$=""
13250 CREDIT_EXP$=""
13260 CREDIT_NAME$=""
13270 FREIGHT_IN=0
13280 CRED_AMT_CHRG=0
13290 OF1_UNUSED_3=0
13300 OF1_UNUSED_4=0
13310 OF1_UNUSED_5=0
13320 OF1_UNUSED_6=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(31,"N")
15030 IF _ORIG.GOE_NUMBER$=_CUR.GOE_NUMBER$ OR GOE_NUMBER$=_CUR.GOE_NUMBER$ THEN GOTO *NEXT ELSE IF _ORIG.GOE_NUMBER$=GOE_NUMBER$ THEN _CHG2$=_CHG2$+SEP+MSG("GOE_NUMBER")+" = "+_CUR.GOE_NUMBER$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GOE_NUMBER")+" = "+_CUR.GOE_NUMBER$
15040 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15050 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15060 IF _ORIG.UPDATE_PO$=_CUR.UPDATE_PO$ OR UPDATE_PO$=_CUR.UPDATE_PO$ THEN GOTO *NEXT ELSE IF _ORIG.UPDATE_PO$=UPDATE_PO$ THEN _CHG2$=_CHG2$+SEP+MSG("UPDATE_PO")+" = "+_CUR.UPDATE_PO$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UPDATE_PO")+" = "+_CUR.UPDATE_PO$
15070 IF _ORIG.ORDER_DATE$=_CUR.ORDER_DATE$ OR ORDER_DATE$=_CUR.ORDER_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DATE$=ORDER_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DATE")+" = "+_CUR.ORDER_DATE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DATE")+" = "+_CUR.ORDER_DATE$
15080 IF _ORIG.CUST_PO$=_CUR.CUST_PO$ OR CUST_PO$=_CUR.CUST_PO$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_PO$=CUST_PO$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$
15090 IF _ORIG.DATE_REQUESTED$=_CUR.DATE_REQUESTED$ OR DATE_REQUESTED$=_CUR.DATE_REQUESTED$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_REQUESTED$=DATE_REQUESTED$ THEN _CHG2$=_CHG2$+SEP+MSG("DATE_R")+" = "+_CUR.DATE_REQUESTED$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATE_R")+" = "+_CUR.DATE_REQUESTED$
15100 IF _ORIG.ORDERED_BY$=_CUR.ORDERED_BY$ OR ORDERED_BY$=_CUR.ORDERED_BY$ THEN GOTO *NEXT ELSE IF _ORIG.ORDERED_BY$=ORDERED_BY$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDERED_BY")+" = "+_CUR.ORDERED_BY$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDERED_BY")+" = "+_CUR.ORDERED_BY$
15110 IF _ORIG.ORDER_GREETING$=_CUR.ORDER_GREETING$ OR ORDER_GREETING$=_CUR.ORDER_GREETING$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_GREETING$=ORDER_GREETING$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_G")+" = "+_CUR.ORDER_GREETING$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_G")+" = "+_CUR.ORDER_GREETING$
15120 IF _ORIG.REPEAT_ORDER$=_CUR.REPEAT_ORDER$ OR REPEAT_ORDER$=_CUR.REPEAT_ORDER$ THEN GOTO *NEXT ELSE IF _ORIG.REPEAT_ORDER$=REPEAT_ORDER$ THEN _CHG2$=_CHG2$+SEP+MSG("REPE_O")+" = "+_CUR.REPEAT_ORDER$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REPE_O")+" = "+_CUR.REPEAT_ORDER$
15130 IF _ORIG.REPEAT_ORDER_DIV$=_CUR.REPEAT_ORDER_DIV$ OR REPEAT_ORDER_DIV$=_CUR.REPEAT_ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.REPEAT_ORDER_DIV$=REPEAT_ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("REPEAT_O_D")+" = "+_CUR.REPEAT_ORDER_DIV$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REPEAT_O_D")+" = "+_CUR.REPEAT_ORDER_DIV$
15140 IF _ORIG.REPEAT_ORDER_NUM$=_CUR.REPEAT_ORDER_NUM$ OR REPEAT_ORDER_NUM$=_CUR.REPEAT_ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.REPEAT_ORDER_NUM$=REPEAT_ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("REPEAT_O_N")+" = "+_CUR.REPEAT_ORDER_NUM$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REPEAT_O_N")+" = "+_CUR.REPEAT_ORDER_NUM$
15150 IF _ORIG.REC_PROCESSED$=_CUR.REC_PROCESSED$ OR REC_PROCESSED$=_CUR.REC_PROCESSED$ THEN GOTO *NEXT ELSE IF _ORIG.REC_PROCESSED$=REC_PROCESSED$ THEN _CHG2$=_CHG2$+SEP+MSG("REC_P")+" = "+_CUR.REC_PROCESSED$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REC_P")+" = "+_CUR.REC_PROCESSED$
15160 IF _ORIG.ORDER_DIV$=_CUR.ORDER_DIV$ OR ORDER_DIV$=_CUR.ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DIV$=ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$
15170 IF _ORIG.ORDER_NUM$=_CUR.ORDER_NUM$ OR ORDER_NUM$=_CUR.ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_NUM$=ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$
15180 IF _ORIG.REQ_ORDER_DIV$=_CUR.REQ_ORDER_DIV$ OR REQ_ORDER_DIV$=_CUR.REQ_ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.REQ_ORDER_DIV$=REQ_ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("REQ_O_D")+" = "+_CUR.REQ_ORDER_DIV$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REQ_O_D")+" = "+_CUR.REQ_ORDER_DIV$
15190 IF _ORIG.REQ_ORDER_NUM$=_CUR.REQ_ORDER_NUM$ OR REQ_ORDER_NUM$=_CUR.REQ_ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.REQ_ORDER_NUM$=REQ_ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("REQ_O_N")+" = "+_CUR.REQ_ORDER_NUM$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REQ_O_N")+" = "+_CUR.REQ_ORDER_NUM$
15200 IF _ORIG.OF1_ERROR_CODE$=_CUR.OF1_ERROR_CODE$ OR OF1_ERROR_CODE$=_CUR.OF1_ERROR_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.OF1_ERROR_CODE$=OF1_ERROR_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("OF1_E_C")+" = "+_CUR.OF1_ERROR_CODE$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OF1_E_C")+" = "+_CUR.OF1_ERROR_CODE$
15210 IF _ORIG.HOLD_FLAG$=_CUR.HOLD_FLAG$ OR HOLD_FLAG$=_CUR.HOLD_FLAG$ THEN GOTO *NEXT ELSE IF _ORIG.HOLD_FLAG$=HOLD_FLAG$ THEN _CHG2$=_CHG2$+SEP+MSG("HOLD_FLAG")+" = "+_CUR.HOLD_FLAG$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HOLD_FLAG")+" = "+_CUR.HOLD_FLAG$
15220 IF _ORIG.VEND_INV_NUM$=_CUR.VEND_INV_NUM$ OR VEND_INV_NUM$=_CUR.VEND_INV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_INV_NUM$=VEND_INV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_I_N")+" = "+_CUR.VEND_INV_NUM$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_I_N")+" = "+_CUR.VEND_INV_NUM$
15230 IF _ORIG.SALESPERSON$=_CUR.SALESPERSON$ OR SALESPERSON$=_CUR.SALESPERSON$ THEN GOTO *NEXT ELSE IF _ORIG.SALESPERSON$=SALESPERSON$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER")+" = "+_CUR.SALESPERSON$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER")+" = "+_CUR.SALESPERSON$
15240 IF _ORIG.CREDIT_TYPE$=_CUR.CREDIT_TYPE$ OR CREDIT_TYPE$=_CUR.CREDIT_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.CREDIT_TYPE$=CREDIT_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("CRED_C_T")+" = "+_CUR.CREDIT_TYPE$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CRED_C_T")+" = "+_CUR.CREDIT_TYPE$
15250 IF _ORIG.CREDIT_NUM$=_CUR.CREDIT_NUM$ OR CREDIT_NUM$=_CUR.CREDIT_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.CREDIT_NUM$=CREDIT_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("CRED_C_N")+" = "+_CUR.CREDIT_NUM$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CRED_C_N")+" = "+_CUR.CREDIT_NUM$
15260 IF _ORIG.CREDIT_EXP$=_CUR.CREDIT_EXP$ OR CREDIT_EXP$=_CUR.CREDIT_EXP$ THEN GOTO *NEXT ELSE IF _ORIG.CREDIT_EXP$=CREDIT_EXP$ THEN _CHG2$=_CHG2$+SEP+MSG("CRED_EXP")+" = "+_CUR.CREDIT_EXP$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CRED_EXP")+" = "+_CUR.CREDIT_EXP$
15270 IF _ORIG.CREDIT_NAME$=_CUR.CREDIT_NAME$ OR CREDIT_NAME$=_CUR.CREDIT_NAME$ THEN GOTO *NEXT ELSE IF _ORIG.CREDIT_NAME$=CREDIT_NAME$ THEN _CHG2$=_CHG2$+SEP+MSG("CRDT_NAME")+" = "+_CUR.CREDIT_NAME$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CRDT_NAME")+" = "+_CUR.CREDIT_NAME$
15280 IF _ORIG.FREIGHT_IN=_CUR.FREIGHT_IN OR FREIGHT_IN=_CUR.FREIGHT_IN THEN GOTO *NEXT ELSE IF _ORIG.FREIGHT_IN=FREIGHT_IN THEN _CHG2$=_CHG2$+SEP+MSG("FREIGHT_IN")+" = "+STR(_CUR.FREIGHT_IN),_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FREIGHT_IN")+" = "+STR(_CUR.FREIGHT_IN)
15290 IF _ORIG.CRED_AMT_CHRG=_CUR.CRED_AMT_CHRG OR CRED_AMT_CHRG=_CUR.CRED_AMT_CHRG THEN GOTO *NEXT ELSE IF _ORIG.CRED_AMT_CHRG=CRED_AMT_CHRG THEN _CHG2$=_CHG2$+SEP+MSG("CRED_CHRG")+" = "+STR(_CUR.CRED_AMT_CHRG),_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CRED_CHRG")+" = "+STR(_CUR.CRED_AMT_CHRG)
15300 IF _ORIG.OF1_UNUSED_3=_CUR.OF1_UNUSED_3 OR OF1_UNUSED_3=_CUR.OF1_UNUSED_3 THEN GOTO *NEXT ELSE IF _ORIG.OF1_UNUSED_3=OF1_UNUSED_3 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF1_UNUSED_3),_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF1_UNUSED_3)
15310 IF _ORIG.OF1_UNUSED_4=_CUR.OF1_UNUSED_4 OR OF1_UNUSED_4=_CUR.OF1_UNUSED_4 THEN GOTO *NEXT ELSE IF _ORIG.OF1_UNUSED_4=OF1_UNUSED_4 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF1_UNUSED_4),_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF1_UNUSED_4)
15320 IF _ORIG.OF1_UNUSED_5=_CUR.OF1_UNUSED_5 OR OF1_UNUSED_5=_CUR.OF1_UNUSED_5 THEN GOTO *NEXT ELSE IF _ORIG.OF1_UNUSED_5=OF1_UNUSED_5 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF1_UNUSED_5),_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF1_UNUSED_5)
15330 IF _ORIG.OF1_UNUSED_6=_CUR.OF1_UNUSED_6 OR OF1_UNUSED_6=_CUR.OF1_UNUSED_6 THEN GOTO *NEXT ELSE IF _ORIG.OF1_UNUSED_6=OF1_UNUSED_6 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF1_UNUSED_6),_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF1_UNUSED_6)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN GOE_NUMBER$=_CUR.GOE_NUMBER$
16030 IF _CHG_VAR$(2,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16040 IF _CHG_VAR$(3,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16050 IF _CHG_VAR$(4,1)="Y" THEN UPDATE_PO$=_CUR.UPDATE_PO$
16060 IF _CHG_VAR$(5,1)="Y" THEN ORDER_DATE$=_CUR.ORDER_DATE$
16070 IF _CHG_VAR$(6,1)="Y" THEN CUST_PO$=_CUR.CUST_PO$
16080 IF _CHG_VAR$(7,1)="Y" THEN DATE_REQUESTED$=_CUR.DATE_REQUESTED$
16090 IF _CHG_VAR$(8,1)="Y" THEN ORDERED_BY$=_CUR.ORDERED_BY$
16100 IF _CHG_VAR$(9,1)="Y" THEN ORDER_GREETING$=_CUR.ORDER_GREETING$
16110 IF _CHG_VAR$(10,1)="Y" THEN REPEAT_ORDER$=_CUR.REPEAT_ORDER$
16120 IF _CHG_VAR$(11,1)="Y" THEN REPEAT_ORDER_DIV$=_CUR.REPEAT_ORDER_DIV$
16130 IF _CHG_VAR$(12,1)="Y" THEN REPEAT_ORDER_NUM$=_CUR.REPEAT_ORDER_NUM$
16140 IF _CHG_VAR$(13,1)="Y" THEN REC_PROCESSED$=_CUR.REC_PROCESSED$
16150 IF _CHG_VAR$(14,1)="Y" THEN ORDER_DIV$=_CUR.ORDER_DIV$
16160 IF _CHG_VAR$(15,1)="Y" THEN ORDER_NUM$=_CUR.ORDER_NUM$
16170 IF _CHG_VAR$(16,1)="Y" THEN REQ_ORDER_DIV$=_CUR.REQ_ORDER_DIV$
16180 IF _CHG_VAR$(17,1)="Y" THEN REQ_ORDER_NUM$=_CUR.REQ_ORDER_NUM$
16190 IF _CHG_VAR$(18,1)="Y" THEN OF1_ERROR_CODE$=_CUR.OF1_ERROR_CODE$
16200 IF _CHG_VAR$(19,1)="Y" THEN HOLD_FLAG$=_CUR.HOLD_FLAG$
16210 IF _CHG_VAR$(20,1)="Y" THEN VEND_INV_NUM$=_CUR.VEND_INV_NUM$
16220 IF _CHG_VAR$(21,1)="Y" THEN SALESPERSON$=_CUR.SALESPERSON$
16230 IF _CHG_VAR$(22,1)="Y" THEN CREDIT_TYPE$=_CUR.CREDIT_TYPE$
16240 IF _CHG_VAR$(23,1)="Y" THEN CREDIT_NUM$=_CUR.CREDIT_NUM$
16250 IF _CHG_VAR$(24,1)="Y" THEN CREDIT_EXP$=_CUR.CREDIT_EXP$
16260 IF _CHG_VAR$(25,1)="Y" THEN CREDIT_NAME$=_CUR.CREDIT_NAME$
16270 IF _CHG_VAR$(26,1)="Y" THEN FREIGHT_IN=_CUR.FREIGHT_IN
16280 IF _CHG_VAR$(27,1)="Y" THEN CRED_AMT_CHRG=_CUR.CRED_AMT_CHRG
16290 IF _CHG_VAR$(28,1)="Y" THEN OF1_UNUSED_3=_CUR.OF1_UNUSED_3
16300 IF _CHG_VAR$(29,1)="Y" THEN OF1_UNUSED_4=_CUR.OF1_UNUSED_4
16310 IF _CHG_VAR$(30,1)="Y" THEN OF1_UNUSED_5=_CUR.OF1_UNUSED_5
16320 IF _CHG_VAR$(31,1)="Y" THEN OF1_UNUSED_6=_CUR.OF1_UNUSED_6
16990 RETURN 
17000 DELETE_MORE_REC:! SSP 215547 from 17000-17180
17010 FOR AA=2 TO 6
17020 DD=HFN; OPEN (DD)"OF"+STR(AA)+%C$
17030 READ (DD,KEY=_KEY$,DOM=*NEXT)
17040 NXT_RECS:
17050 _KEY1$=KEY(DD,END=END_RECS); IF _KEY1$(1,LEN(_KEY$))<>_KEY$ THEN GOTO END_RECS ELSE REMOVE (DD,KEY=_KEY1$); GOTO NXT_RECS
17060 END_RECS:
17070 CLOSE (DD)
17080 NEXT 
17090 RETURN 
17100 CLEAR_RECS:
17110 OF1_ERROR_CODE$=DIM(3)
17120 OF2=HFN; OPEN (OF2)"OF2"+%C$
17130 READ (OF2,KEY=_KEY$,DOM=*NEXT)
17140 OF2_K$=KEY(OF2,END=END_CLEAR_RECS); READ (OF2)IOL=0115
17145 IF OF2_K$(1,LEN(_KEY$))<>_KEY$ THEN GOTO END_CLEAR_RECS
17150 OF2$(144,1)=" "
17160 WRITE (OF2,KEY=OF2_K$)IOL=0115
17170 GOTO 17140
17180 END_CLEAR_RECS:CLOSE (OF2); RETURN 
56000 ! "198574-test OE gateway                                             
56010 ! "215547-DDMS options don't work the same in chui as they do in      
