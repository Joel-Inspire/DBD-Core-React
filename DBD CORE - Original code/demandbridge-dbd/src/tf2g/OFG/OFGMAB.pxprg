0010 ! OFGMAB - Order Entry Gateway Line
0035 REM "5.5 - 08/25/06 - 15.826111 - jir - SSP# 198574
0037 REM "198574-test OE gateway                                             
0040 REM "Copyright 2006 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "OFGMAB","../OFG/OF.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="OF2"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0182 _FS1=HFN,_FILE_NAME$="FS1"+%C$; OPEN (_FS1,ERR=OPEN_ERR)_FILE_NAME$
0185 _FS2=HFN,_FILE_NAME$="FS2"+%C$; OPEN (_FS2,ERR=OPEN_ERR)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=2
0430 DIM _KEYS$[1:2]; _KEYS$[1]="GOE_NUMBER$",_KEYS$[2]="GOE_LINE_NUMBER$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0700 ! 700 - Set up tabbing between folders
0710 INIT_FOLDER:
0720 GOSUB ENABLE_GROUPS
0730 REM IF _ENABLE_FLG<>_KEY1 THEN IF TAB_FLG$="<" THEN NEXT_ID=_LAST_TAB ELSE NEXT_ID=_FIRST_TAB ! SSP210206  jdf
0740 EXIT 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND (STP(QRY_VAL$,3,"-")=EVS(_KEYS$[_CURKEY]) OR STP(QRY_VAL$(3,6),3,"-")=EVS(_KEYS$[_CURKEY])) THEN QRY_VAL$="" ELSE RETURN ! SSP210206 jdf
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1035 REM MSGBOX "jdf mesg: IN FIND_REC : ENABLE_flg="+STR(_ENABLE_FLG)
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1042 FS1$=""; FIND (_FS1,KEY=GOE_NUMBER$,DOM=*NEXT)FS1$; CUSTOMER$=FS1$(6,10)
1045 FIND (_FS2,KEY=GOE_NUMBER$+GOE_LINE_NUMBER$,DOM=*NEXT)FS2$
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 NEXT_FOLDER=_FIRST_FOLDER
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0; REFRESH_FLG=1,_CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3065 FS1$=""; FIND (_FS1,KEY=GOE_NUMBER$,DOM=*NEXT)FS1$; IF NUL(CUSTOMER$) THEN CUSTOMER$=FS1$(6,10)
3066 VENDOR$=VEND_DIV$+VEND_CODE$
3067 CUSTOMER$=CUST_DIV$+CUST_CODE$
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1,_CLR_FLG$="R"; GOSUB CLEAR_FIELDS
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=GOE_NUMBER.CTL,_FIRST_FIELD=LINE_TYPE.CTL,_FIRST_FOLDER=FLDR.OFGMAB.1.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 SELL_QTY_UNIT$=STR(SELL_QTY_UNIT)
10030 PRICE_PER_UNIT$=STR(PRICE_PER_UNIT)
10040 COST_PER_UNIT$=STR(COST_PER_UNIT)
10050 QUANTITY_ORDERED$=STR(QUANTITY_ORDERED)
10060 CARTON_PACK$=STR(CARTON_PACK)
10070 OF2_UNUSED_2$=STR(OF2_UNUSED_2)
10080 OF2_UNUSED_3$=STR(OF2_UNUSED_3)
10090 OF2_UNUSED_4$=STR(OF2_UNUSED_4)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="SELL_QTY_UNIT",_X=SELL_QTY_UNIT.CTL,SELL_QTY_UNIT=NUM(SELL_QTY_UNIT$,ERR=NON_NUMERIC)
11030 _X$="PRICE_PER_UNIT",_X=PRICE_PER_UNIT.CTL,PRICE_PER_UNIT=NUM(PRICE_PER_UNIT$,ERR=NON_NUMERIC)
11040 _X$="COST_PER_UNIT",_X=COST_PER_UNIT.CTL,COST_PER_UNIT=NUM(COST_PER_UNIT$,ERR=NON_NUMERIC)
11050 _X$="QUANTITY_ORDERED",_X=QUANTITY_ORDERED.CTL,QUANTITY_ORDERED=NUM(QUANTITY_ORDERED$,ERR=NON_NUMERIC)
11060 _X$="CARTON_PACK",_X=CARTON_PACK.CTL,CARTON_PACK=NUM(CARTON_PACK$,ERR=NON_NUMERIC)
11070 _X$="OF2_UNUSED_2",_X=OF2_UNUSED_2.CTL,OF2_UNUSED_2=NUM(OF2_UNUSED_2$,ERR=NON_NUMERIC)
11080 _X$="OF2_UNUSED_3",_X=OF2_UNUSED_3.CTL,OF2_UNUSED_3=NUM(OF2_UNUSED_3$,ERR=NON_NUMERIC)
11090 _X$="OF2_UNUSED_4",_X=OF2_UNUSED_4.CTL,OF2_UNUSED_4=NUM(OF2_UNUSED_4$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN GOE_NUMBER$=""
13030 IF _CLR_FLG$="R" THEN GOE_LINE_NUMBER$=""
13040 LINE_TYPE$=""
13050 ITEM_LINE_TYPE$=""
13060 PO_CODE$=""
13070 CUST_DIV$="",CUSTOMER$=""
13080 CUST_CODE$=""
13090 ITEM_CODE$=""
13100 TF_DESC$=""
13110 VEND_DIV$="",VENDOR$=""
13120 VEND_CODE$=""
13130 PLANT_CODE$=""
13140 STARTING_NUM$=""
13150 ENDING_NUMBER$=""
13160 SELLING_UNIT$=""
13170 VEND_JOB_NUMBER$=""
13180 VEND_JOB_DATE$=""
13190 SHIP_FROM_WHSE$=""
13200 SPECIAL_SHIPPING$=""
13205 PRINT_FLAGS$="" ! SSP210206 jdf
13210 OF2_ERROR_CODE$=""
13220 OF2_UNUSED_1$=""
13230 SELL_QTY_UNIT=0
13240 PRICE_PER_UNIT=0
13250 COST_PER_UNIT=0
13260 QUANTITY_ORDERED=0
13270 CARTON_PACK=0
13280 OF2_UNUSED_2=0
13290 OF2_UNUSED_3=0
13300 OF2_UNUSED_4=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14015 REM MSGBOX "jdf mesg: ENABLE_flg="+STR(_ENABLE_FLG)
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=GOE_LINE_NUMBER.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(29,"N")
15030 IF _ORIG.GOE_NUMBER$=_CUR.GOE_NUMBER$ OR GOE_NUMBER$=_CUR.GOE_NUMBER$ THEN GOTO *NEXT ELSE IF _ORIG.GOE_NUMBER$=GOE_NUMBER$ THEN _CHG2$=_CHG2$+SEP+MSG("GOE_NUMBER")+" = "+_CUR.GOE_NUMBER$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GOE_NUMBER")+" = "+_CUR.GOE_NUMBER$
15040 IF _ORIG.GOE_LINE_NUMBER$=_CUR.GOE_LINE_NUMBER$ OR GOE_LINE_NUMBER$=_CUR.GOE_LINE_NUMBER$ THEN GOTO *NEXT ELSE IF _ORIG.GOE_LINE_NUMBER$=GOE_LINE_NUMBER$ THEN _CHG2$=_CHG2$+SEP+MSG("GOE_L_N")+" = "+_CUR.GOE_LINE_NUMBER$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GOE_L_N")+" = "+_CUR.GOE_LINE_NUMBER$
15050 IF _ORIG.LINE_TYPE$=_CUR.LINE_TYPE$ OR LINE_TYPE$=_CUR.LINE_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.LINE_TYPE$=LINE_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("LINE_TYPE")+" = "+_CUR.LINE_TYPE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_TYPE")+" = "+_CUR.LINE_TYPE$
15060 IF _ORIG.ITEM_LINE_TYPE$=_CUR.ITEM_LINE_TYPE$ OR ITEM_LINE_TYPE$=_CUR.ITEM_LINE_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_LINE_TYPE$=ITEM_LINE_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_L_T")+" = "+_CUR.ITEM_LINE_TYPE$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_L_T")+" = "+_CUR.ITEM_LINE_TYPE$
15070 IF _ORIG.PO_CODE$=_CUR.PO_CODE$ OR PO_CODE$=_CUR.PO_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PO_CODE$=PO_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_CODE")+" = "+_CUR.PO_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_CODE")+" = "+_CUR.PO_CODE$
15080 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15090 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CO")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CO")+" = "+_CUR.CUST_CODE$
15100 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15110 IF _ORIG.TF_DESC$=_CUR.TF_DESC$ OR TF_DESC$=_CUR.TF_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.TF_DESC$=TF_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("DESC")+" = "+_CUR.TF_DESC$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DESC")+" = "+_CUR.TF_DESC$
15120 IF _ORIG.VEND_DIV$=_CUR.VEND_DIV$ OR VEND_DIV$=_CUR.VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV$=VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("VEDN_DIV")+" = "+_CUR.VEND_DIV$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEDN_DIV")+" = "+_CUR.VEND_DIV$
15130 IF _ORIG.VEND_CODE$=_CUR.VEND_CODE$ OR VEND_CODE$=_CUR.VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE$=VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_C")+" = "+_CUR.VEND_CODE$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_C")+" = "+_CUR.VEND_CODE$
15140 IF _ORIG.PLANT_CODE$=_CUR.PLANT_CODE$ OR PLANT_CODE$=_CUR.PLANT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_CODE$=PLANT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$
15150 IF _ORIG.STARTING_NUM$=_CUR.STARTING_NUM$ OR STARTING_NUM$=_CUR.STARTING_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.STARTING_NUM$=STARTING_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("STAR_N")+" = "+_CUR.STARTING_NUM$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("STAR_N")+" = "+_CUR.STARTING_NUM$
15160 IF _ORIG.ENDING_NUMBER$=_CUR.ENDING_NUMBER$ OR ENDING_NUMBER$=_CUR.ENDING_NUMBER$ THEN GOTO *NEXT ELSE IF _ORIG.ENDING_NUMBER$=ENDING_NUMBER$ THEN _CHG2$=_CHG2$+SEP+MSG("ENDING_NUM")+" = "+_CUR.ENDING_NUMBER$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ENDING_NUM")+" = "+_CUR.ENDING_NUMBER$
15170 IF _ORIG.SELLING_UNIT$=_CUR.SELLING_UNIT$ OR SELLING_UNIT$=_CUR.SELLING_UNIT$ THEN GOTO *NEXT ELSE IF _ORIG.SELLING_UNIT$=SELLING_UNIT$ THEN _CHG2$=_CHG2$+SEP+MSG("SELL_U")+" = "+_CUR.SELLING_UNIT$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_U")+" = "+_CUR.SELLING_UNIT$
15180 IF _ORIG.VEND_JOB_NUMBER$=_CUR.VEND_JOB_NUMBER$ OR VEND_JOB_NUMBER$=_CUR.VEND_JOB_NUMBER$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_JOB_NUMBER$=VEND_JOB_NUMBER$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_J_N")+" = "+_CUR.VEND_JOB_NUMBER$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_J_N")+" = "+_CUR.VEND_JOB_NUMBER$
15190 IF _ORIG.VEND_JOB_DATE$=_CUR.VEND_JOB_DATE$ OR VEND_JOB_DATE$=_CUR.VEND_JOB_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_JOB_DATE$=VEND_JOB_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_J_D")+" = "+_CUR.VEND_JOB_DATE$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_J_D")+" = "+_CUR.VEND_JOB_DATE$
15200 IF _ORIG.SHIP_FROM_WHSE$=_CUR.SHIP_FROM_WHSE$ OR SHIP_FROM_WHSE$=_CUR.SHIP_FROM_WHSE$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_FROM_WHSE$=SHIP_FROM_WHSE$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_F_W")+" = "+_CUR.SHIP_FROM_WHSE$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_F_W")+" = "+_CUR.SHIP_FROM_WHSE$
15210 IF _ORIG.SPECIAL_SHIPPING$=_CUR.SPECIAL_SHIPPING$ OR SPECIAL_SHIPPING$=_CUR.SPECIAL_SHIPPING$ THEN GOTO *NEXT ELSE IF _ORIG.SPECIAL_SHIPPING$=SPECIAL_SHIPPING$ THEN _CHG2$=_CHG2$+SEP+MSG("SPEC_S")+" = "+_CUR.SPECIAL_SHIPPING$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPEC_S")+" = "+_CUR.SPECIAL_SHIPPING$
15220 IF _ORIG.OF2_ERROR_CODE$=_CUR.OF2_ERROR_CODE$ OR OF2_ERROR_CODE$=_CUR.OF2_ERROR_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.OF2_ERROR_CODE$=OF2_ERROR_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("OF2_E_C")+" = "+_CUR.OF2_ERROR_CODE$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OF2_E_C")+" = "+_CUR.OF2_ERROR_CODE$
15230 IF _ORIG.OF2_UNUSED_1$=_CUR.OF2_UNUSED_1$ OR OF2_UNUSED_1$=_CUR.OF2_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.OF2_UNUSED_1$=OF2_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.OF2_UNUSED_1$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.OF2_UNUSED_1$
15240 IF _ORIG.SELL_QTY_UNIT=_CUR.SELL_QTY_UNIT OR SELL_QTY_UNIT=_CUR.SELL_QTY_UNIT THEN GOTO *NEXT ELSE IF _ORIG.SELL_QTY_UNIT=SELL_QTY_UNIT THEN _CHG2$=_CHG2$+SEP+MSG("SELL_Q_U")+" = "+STR(_CUR.SELL_QTY_UNIT),_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_Q_U")+" = "+STR(_CUR.SELL_QTY_UNIT)
15250 IF _ORIG.PRICE_PER_UNIT=_CUR.PRICE_PER_UNIT OR PRICE_PER_UNIT=_CUR.PRICE_PER_UNIT THEN GOTO *NEXT ELSE IF _ORIG.PRICE_PER_UNIT=PRICE_PER_UNIT THEN _CHG2$=_CHG2$+SEP+MSG("PRIC_P_U")+" = "+STR(_CUR.PRICE_PER_UNIT),_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIC_P_U")+" = "+STR(_CUR.PRICE_PER_UNIT)
15260 IF _ORIG.COST_PER_UNIT=_CUR.COST_PER_UNIT OR COST_PER_UNIT=_CUR.COST_PER_UNIT THEN GOTO *NEXT ELSE IF _ORIG.COST_PER_UNIT=COST_PER_UNIT THEN _CHG2$=_CHG2$+SEP+MSG("COST_P_U")+" = "+STR(_CUR.COST_PER_UNIT),_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_P_U")+" = "+STR(_CUR.COST_PER_UNIT)
15270 IF _ORIG.QUANTITY_ORDERED=_CUR.QUANTITY_ORDERED OR QUANTITY_ORDERED=_CUR.QUANTITY_ORDERED THEN GOTO *NEXT ELSE IF _ORIG.QUANTITY_ORDERED=QUANTITY_ORDERED THEN _CHG2$=_CHG2$+SEP+MSG("QTY_O")+" = "+STR(_CUR.QUANTITY_ORDERED),_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_O")+" = "+STR(_CUR.QUANTITY_ORDERED)
15280 IF _ORIG.CARTON_PACK=_CUR.CARTON_PACK OR CARTON_PACK=_CUR.CARTON_PACK THEN GOTO *NEXT ELSE IF _ORIG.CARTON_PACK=CARTON_PACK THEN _CHG2$=_CHG2$+SEP+MSG("CTN_PACK")+" = "+STR(_CUR.CARTON_PACK),_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_PACK")+" = "+STR(_CUR.CARTON_PACK)
15290 IF _ORIG.OF2_UNUSED_2=_CUR.OF2_UNUSED_2 OR OF2_UNUSED_2=_CUR.OF2_UNUSED_2 THEN GOTO *NEXT ELSE IF _ORIG.OF2_UNUSED_2=OF2_UNUSED_2 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF2_UNUSED_2),_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF2_UNUSED_2)
15300 IF _ORIG.OF2_UNUSED_3=_CUR.OF2_UNUSED_3 OR OF2_UNUSED_3=_CUR.OF2_UNUSED_3 THEN GOTO *NEXT ELSE IF _ORIG.OF2_UNUSED_3=OF2_UNUSED_3 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF2_UNUSED_3),_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF2_UNUSED_3)
15310 IF _ORIG.OF2_UNUSED_4=_CUR.OF2_UNUSED_4 OR OF2_UNUSED_4=_CUR.OF2_UNUSED_4 THEN GOTO *NEXT ELSE IF _ORIG.OF2_UNUSED_4=OF2_UNUSED_4 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF2_UNUSED_4),_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.OF2_UNUSED_4)
15320 IF _ORIG.PRINT_FLAGS$=_CUR.PRINT_FLAGS$ OR PRINT_FLAGS$=_CUR.PRINT_FLAGS$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_FLAGS$=PRINT_FLAGS$ THEN _CHG2$=_CHG2$+SEP+MSG("PRINT FLAGS")+" = "+_CUR.PRINT_FLAGS$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRINT FLAGS")+" = "+_CUR.PRINT_FLAGS$ ! SSP210206 jdf
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN GOE_NUMBER$=_CUR.GOE_NUMBER$
16030 IF _CHG_VAR$(2,1)="Y" THEN GOE_LINE_NUMBER$=_CUR.GOE_LINE_NUMBER$
16040 IF _CHG_VAR$(3,1)="Y" THEN LINE_TYPE$=_CUR.LINE_TYPE$
16050 IF _CHG_VAR$(4,1)="Y" THEN ITEM_LINE_TYPE$=_CUR.ITEM_LINE_TYPE$
16060 IF _CHG_VAR$(5,1)="Y" THEN PO_CODE$=_CUR.PO_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16080 IF _CHG_VAR$(7,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16090 IF _CHG_VAR$(8,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16100 IF _CHG_VAR$(9,1)="Y" THEN TF_DESC$=_CUR.TF_DESC$
16110 IF _CHG_VAR$(10,1)="Y" THEN VEND_DIV$=_CUR.VEND_DIV$
16120 IF _CHG_VAR$(11,1)="Y" THEN VEND_CODE$=_CUR.VEND_CODE$
16130 IF _CHG_VAR$(12,1)="Y" THEN PLANT_CODE$=_CUR.PLANT_CODE$
16140 IF _CHG_VAR$(13,1)="Y" THEN STARTING_NUM$=_CUR.STARTING_NUM$
16150 IF _CHG_VAR$(14,1)="Y" THEN ENDING_NUMBER$=_CUR.ENDING_NUMBER$
16160 IF _CHG_VAR$(15,1)="Y" THEN SELLING_UNIT$=_CUR.SELLING_UNIT$
16170 IF _CHG_VAR$(16,1)="Y" THEN VEND_JOB_NUMBER$=_CUR.VEND_JOB_NUMBER$
16180 IF _CHG_VAR$(17,1)="Y" THEN VEND_JOB_DATE$=_CUR.VEND_JOB_DATE$
16190 IF _CHG_VAR$(18,1)="Y" THEN SHIP_FROM_WHSE$=_CUR.SHIP_FROM_WHSE$
16200 IF _CHG_VAR$(19,1)="Y" THEN SPECIAL_SHIPPING$=_CUR.SPECIAL_SHIPPING$
16210 IF _CHG_VAR$(20,1)="Y" THEN OF2_ERROR_CODE$=_CUR.OF2_ERROR_CODE$
16220 IF _CHG_VAR$(21,1)="Y" THEN OF2_UNUSED_1$=_CUR.OF2_UNUSED_1$
16230 IF _CHG_VAR$(22,1)="Y" THEN SELL_QTY_UNIT=_CUR.SELL_QTY_UNIT
16240 IF _CHG_VAR$(23,1)="Y" THEN PRICE_PER_UNIT=_CUR.PRICE_PER_UNIT
16250 IF _CHG_VAR$(24,1)="Y" THEN COST_PER_UNIT=_CUR.COST_PER_UNIT
16260 IF _CHG_VAR$(25,1)="Y" THEN QUANTITY_ORDERED=_CUR.QUANTITY_ORDERED
16270 IF _CHG_VAR$(26,1)="Y" THEN CARTON_PACK=_CUR.CARTON_PACK
16280 IF _CHG_VAR$(27,1)="Y" THEN OF2_UNUSED_2=_CUR.OF2_UNUSED_2
16290 IF _CHG_VAR$(28,1)="Y" THEN OF2_UNUSED_3=_CUR.OF2_UNUSED_3
16300 IF _CHG_VAR$(29,1)="Y" THEN OF2_UNUSED_4=_CUR.OF2_UNUSED_4
16310 IF _CHG_VAR$(30,1)="Y" THEN PRINT_FLAGS$=_CUR.PRINT_FLAGS$ ! SSP210206 jdf
16990 RETURN 
56000 ! "198574-test OE gateway                                             
