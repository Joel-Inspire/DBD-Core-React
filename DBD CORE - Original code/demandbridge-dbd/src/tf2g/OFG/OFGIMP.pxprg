0010 ! OFGIMP -  Import file into OF2 for Corevision
0020 SETESC 9300; SETERR 9000
0035 REM "5.5 - 08/29/06 - 9.334444 - jir - SSP# 198574
0037 REM "198574-test OE gateway                                             
0040 REM "Copyright 2006 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "OFGIMP","../OFG/OF.EN"
0060 EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 IF %GUI=0 THEN SETERR 9000
0105 INIT:
0110 X0$="OF2IMP",X1$="United Stationers File Import into GOE"
0120 DIM Z0$(80,"-"),FILE$[150]
0125 DIM BLANK$(200," ")
0126 DIM QUOTE$(2,QUO+QUO+QUO)
0130 K0=20,K1=1
0135 C9=-1
0170 IF POS("MS"=UCS(SYS)) THEN ISWIN=1 ELSE ISWIN=0
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,-1,-1
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$; REM "EM1
0320 IOLIST B$
0330 IOLIST C$
0340 IOLIST FS1$,FS1[0],FS1[1],FS1[2],FS1[3],FS1[4],FS1[5],FS1[6],FS1[7],FS1[8],FS1[9],FS1[10],FS1[11],FS1[12],FS1[13]
0350 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24],FS2[25],FS2[26],FS2[27],FS2[28],FS2[29]
0420 IOLIST I$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0509 REM "Slot 1 used for ED0 file opened in 1000's, slot 2 used for text file created in 700's to write to
0510 Z$="13O ZZPARM  20O AR1...  12O FM0...  22O FMP...  25O OSD...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 RETURN 
0600 REM "
0615 DIM A$(100); CALL "ZZENTR","AU",A{ALL},A$,X4$,X3$,28,10,1,10,C0,"A/R","{3"+X$,"","E"+"M2MAA04","AR1","",""; IF C0=6 THEN GOSUB 6400 ELSE IF C0=4 THEN GOTO 9900; REM "SSP 187006
0616 READ (Z[20],KEY=A$(1,10),DOM=0615)B$
0617 PRINT @(40,10),B$(11,35),
0618 X$="1=Generic Master, 2=United Stationers"
0619 CALL "ZZENTR","SRU",A{ALL},A$,X4$,X3$,28,12,11,1,C0,"","{3"+X$,"12","","","",""
0620 X$=""
0621 CALL "ZZENTR","SZ",A{ALL},A$,X4$,X3$,28,14,12,4,C0,"","{3"+X$,"","","","",""
0622 IF C0=4 THEN GOTO 9900; REM SSP 187006
0623 DIM J1$(15); J1$(1,1)="D",J1$(12,4)=A$(12,4)
0625 FIND (Z[12],KEY=J1$,DOM=0620)
0640 IF Q1$="" AND %GUI=0 THEN CALL "ZZPROM",".Y",X3$,Z,"PROCEED?","","",0; ON Z GOTO 0641,9900
0650 PROCEED:
0660 DIM A$(100); A$(1,10)=CUSTOMER$,A$(11,1)=FORMAT$,A$(12,4)=WHSE$
0700 NAME_1$="OFG.",EXT_1=1
0705 TEXT$=%DATAPATH$+DLM+NAME_1$+STR(EXT_1:"000")
0710 SERIAL TEXT$,0,0,ERR=0711; GOTO 0712; REM "Create text file to write to
0711 EXT_1=EXT_1+1; GOTO 0705
0720 Z$="02CU 02O "+TEXT$+" "
0730 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0731,9900
0740 CLOSE (Z[2]); OPEN LOCK (Z[2],OPT="TEXT")TEXT$; REM "Re-open as a text file
0800 REM "Set Prefix
0900 REM "Read ZZPARM file for DIRectory and hex codes
0910 DIM I$(512); READ (Z[13],KEY=PARM$,DOM=0911)IOL=0420
0915 ELEMENT_SEPARATOR$=ATH("2A"),SEGMENT_TERMINATOR$=ATH("5E"); REM "Setup for original values:  * and ^ respectively
0920 REM "IF I$(309,2)<>"  " THEN ELEMENT_SEPARATOR$=ATH(I$(309,2))
0925 REM "IF I$(311,2)<>"  " THEN SEGMENT_TERMINATOR$=ATH(I$(311,2))
1000 REM "Get list of .exp files to process
1005 I=-1,J=0
1010 IF A$(11,1)="2" THEN IMPORT_PATH$=HWD+DLM+"united/" ELSE IMPORT_PATH$=HWD+DLM+"oegateway/"
1011 IF A$(11,1)="2" THEN TF_NAME$="CV" ELSE TF_NAME$="MG"
1012 IF A$(11,1)="2" THEN NAME1$="cv" ELSE NAME1$="mg"
1013 IM_F=HFN; OPEN (IM_F,ERR=*NEXT)IMPORT_PATH$; CLOSE (IM_F); GOTO 1015
1014 MSGBOX "Missing Directory : "+IMPORT_PATH$,MSG("WARNING"),"!"; GOTO END_PROC
1015 SELECT AT$ FROM IMPORT_PATH$
1030 IF AT$<>"." AND AT$<>".." AND POS(TF_NAME$=AT$)>0 OR POS(NAME1$=AT$)>0 THEN FILE$[I+1]=AT$; I=I+1
1035 NEXT RECORD 
1036 SLOT=UNT
1060 CLOSE (SLOT); OPEN LOCK (SLOT,OPT="TEXT",ERR=5000)IMPORT_PATH$+FILE$[J]; REM "Open for reading raw file
1065 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
1075 PRINT 'MESSAGE'('_GREEN'+'WHITE'+"Processing: "+FILE$[J],0),
1080 GOSUB 8100; GOSUB 8150
1100 REM "Process the file
1102 DIM H_REC$(207); H_REC$=PAD(H_REC$,207)
1103 DIM L_REC$(181); L_REC$=PAD(L_REC$,181)
1104 DIM S_REC$(325); S_REC$=PAD(L_REC$,325)
1105 DIM M1_REC$(181); M1_REC$=PAD(M1_REC$,181)
1106 DIM M2_REC$(181); M2_REC$=PAD(M2_REC$,181)
1109 C=0,I$="",TF_ITEM$=""
1110 READ (SLOT,END=1900)I$
1111 IF I$(1,2)="ID" THEN GOTO 1110
1112 HOLD$=STP(I$,3,$0D$); I$=HOLD$
1113 HOLD$=STP(I$,3,$0A$); I$=HOLD$
1114 I$=SUB(I$,QUOTE$,"  ",0),DELIM$=""
1115 IF A$(11,1)="2" THEN Q=POS("|"=I$(1,11)),Q1=POS(","=I$(1,11)),Q2=POS($09$=I$(1,11)); IF Q<>0 THEN DELIM$=I$(Q,1) ELSE IF Q1<>0 THEN DELIM$=I$(Q1,1) ELSE IF Q2<>0 THEN DELIM$=I$(Q2,1); IF DELIM$<>"" THEN GOSUB 7700
1116 IF A$(11,1)="1" THEN DELIM$=","
1117 IF DELIM$<>"" THEN GOSUB 7700
1118 IF A$(11,1)="1" THEN GOTO 7000
1119 IF ID$=I$(1,10) THEN GOTO 1200
1120 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1130 REM "HEADER
1131 ID$=I$(1,10)
1132 H_REC$(1,7)="HEXT103"
1134 H_REC$(14,10)=A$(1,10); REM " CUSTOMER NUMBER - ENTERED
1136 H_REC$(33,15)=I$(256,10)+BLANK$(1,2); REM " FIELD 17 
1138 H_REC$(56,20)=I$(185,10)+I$(148,10); REM SSP 190993 REF #1 AND PHONE
1139 H_REC$(76,20)=I$(195,20); REM SSP 190993 REF 2
1150 PRINT (Z[2])H_REC$
1160 REM " SHIPPING INFORMATION
1161 S_REC$(162,1)=I$(158,1); REM " SHIP VIA
1162 S_REC$(1,1)="S"
1164 S_REC$(2,3)="103"
1165 S_REC$(5,3)="G  "; REM " G FOR GENERAL SHIPPING
1166 S_REC$(8,1)="C"
1168 S_REC$(9,4)="M   "
1169 S_REC$(228,35)=I$(39,26)+BLANK$(1,9); REM DEALER NAME
1170 S_REC$(42,30)=I$(11,28)+BLANK$(1,2); REM SHIP TO ATTN
1172 S_REC$(72,30)=I$(65,26)+BLANK$(1,4); REM SHIP TO ADDR 1
1174 S_REC$(102,30)=I$(91,26)+BLANK$(1,4); REM SHIP TO ADDR 2
1176 S_REC$(132,16)=I$(117,16); REM "SHIP TO CITY
1178 S_REC$(148,2)=I$(138,2); REM " SHIP TO STATE
1180 S_REC$(150,10)=I$(143,5)+BLANK$(1,5); REM " ZIP
1192 S_REC$(193,35)=I$(1,10)+BLANK$(1,25); REM "ID#
1194 S_REC$(278,7)=STR(NUM(I$(268,10)):"0000000")
1196 PRINT (Z[2])S_REC$
1200 REM "LINES
1202 L_REC$(1,1)="L"
1204 L_REC$(2,3)="103"
1206 L_REC$(8,1)="I"
1208 L_REC$(9,1)="E"
1210 TF_ITEM$=STP(I$(278,2),3)+"-"+STR(NUM(I$(282,3)):"000",ERR=*NEXT)+"-"+STR(NUM(I$(255,1)):"00"); REM MASKED MIDDLE SEGMENT TO THREE
1211 IF TF_ITEM$="" THEN TF_ITEM$=STP(I$(278,2),3)+"-"+STP(I$(282,3),2)+"-"+STR(NUM(I$(255,1)):"00"); REM MASKED MIDDLE SEGMENT TO THREE
1212 TF_ITEM$=STP(TF_ITEM$,3)
1213 M1_REC$(178,4)=A$(12,4); REM " WAREHOUSE FOR MESSAGES
1214 L_REC$(21,20)=TF_ITEM$+BLANK$(1,20-LEN(TF_ITEM$)+1)
1216 L_REC$(144,7)=STR(NUM(I$(268,10)):"0000000")
1218 L_REC$(178,4)=A$(12,4); REM "L_REC$(178,4)="9001"
1250 PRINT (Z[2])L_REC$
1300 REM " MESSAGE LINES
1302 IF I$(431,73)=BLANK$(1,73) THEN GOTO 1899
1304 M1_REC$(1,1)="L"
1306 M1_REC$(2,3)="103"
1308 M1_REC$(8,1)="M"
1310 M1_REC$(41,40)=I$(431,40)
1312 M1_REC$(178,4)=A$(12,4); REM "WAREHOUSE FOR MESSAGES
1350 PRINT (Z[2])M1_REC$
1400 IF I$(471,35)=DIM(35) THEN GOTO 1899
1404 M2_REC$(1,1)="L"
1406 M2_REC$(2,3)="103"
1408 M2_REC$(8,1)="M"
1410 M2_REC$(41,40)=STP(I$(481,35),3,$0D$)+BLANK$(1,5)
1412 M2_REC$(178,4)=A$(12,4); REM "WAREHOUSE FOR MESSAGES
1450 PRINT (Z[2])M2_REC$
1899 GOTO 1100
1900 REM "End of file
1930 REM "Remove the file
1931 CLOSE (SLOT,ERR=1932)
1935 REM "IF ISWIN THEN S2$="copy "+FILE$[J]+" "+HWD+DLM+"editmp"+DLM; CALL "ZZ2CMD",X3$,X4$,S2$,"","IN",COMM_CODE,COMM_CODE$; GOTO 1950; REM "SSP146619, If NT call command processor so command will happen on server 
1939 REM "OUT$="."+DTE(0:"%Y-%Mz-%Dz|%Hz:%mz:%sz"); PRECISION 2
1940 IF A$(11,1)="2" THEN RENAME IMPORT_PATH$+FILE$[J] TO HWD+DLM+"united/backup"+DLM+FILE$[J],ERR=*NEXT
1941 IF A$(11,1)="1" THEN RENAME IMPORT_PATH$+FILE$[J] TO HWD+DLM+"oegateway/backup"+DLM+FILE$[J],ERR=*NEXT
1945 ERASE IMPORT_PATH$+FILE$[J],ERR=1946
1985 J=J+1
1995 GOTO 1060
4999 GOTO 1060
5000 REM "EOJ
5001 REM "XFD$=FN%XFD$(Z[2],0),TOT_REC=DEC(XFD$(38,4))
5003 CLOSE (Z[2],ERR=5004)
5004 REM IF TOT_REC=0 THEN ERASE TEXT$; GOTO 5012
5005 NAME_2$="FO1.",EXT_2=1
5007 REM "GOR$=NAME_2$+STR(EXT_2:"000")
5010 REM RENAME TEXT$,GOR$,ERR=5011; GOTO 5012; REM "Rename the ED1 file we wrote to, to an FO1 file to be used in the Order Requisition Gateway
5011 REM EXT_2=EXT_2+1; GOTO 5007
5015 C=T; GOSUB 8150
5020 REM "IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"PROCESS COMPLETE!!","","",0
5040 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(10,4),"Translating Incoming Text File into Order Entry Gateway"
6040 PRINT @(5,10),"Enter Customer Number:",
6042 PRINT @(9,12),"Enter Format Type:",
6044 PRINT @(11,14),"Enter Warehouse:",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6390 PARM$=X3$(9,3)+"O/F"
6400 REM "WHOLE SCREEN                                                       
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS                                     
6451 CALL "ZZDISP","A",A$(1,10),"A/R",X3$,"","",28,10,X4$
6490 RETURN 
7000 REM " STANDARD FORMAT
7010 IF ID$=I$(1,5) THEN GOTO 7160
7131 ID$=I$(1,5)
7132 H_REC$(1,7)="HEXT103"
7133 H_REC$(1,7)="HEXT103"
7134 H_REC$(14,10)=A$(1,10); REM " CUSTOMER NUMBER 
7136 H_REC$(33,15)=I$(6,15); REM " CUSTOMER PO
7150 PRINT (Z[2])H_REC$
7160 REM " SHIPPING INFORMATION 
7162 S_REC$(1,1)="S"
7164 S_REC$(2,3)="103"
7165 S_REC$(5,3)="G  "; REM "G FOR GENERAL SHIPPING
7166 S_REC$(8,1)="C"
7168 S_REC$(9,4)=I$(91,4)
7169 S_REC$(228,35)=I$(21,35); REM DEALER NAME                      
7170 S_REC$(42,30)=I$(56,35); REM SHIP TO ATTN                      
7172 S_REC$(72,30)=I$(95,30); REM SHIP TO ADDR 1                    
7174 S_REC$(102,30)=I$(125,30) REM SHIP TO ADDR 2                   
7176 S_REC$(132,16)=I$(155,16); REM "SHIP TO CITY
7178 S_REC$(148,2)=I$(171,2); REM " SHIP TO STATE
7180 S_REC$(150,10)=I$(173,5)+BLANK$(1,5); REM " ZIP  
7184 S_REC$(285,40)=I$(183,40); REM "EMAIL ADDRESS
7194 REM "S_REC$(278,7)=STR(NUM(I$(233,7)):"0000000")
7195 S_REC$(162,1)=I$(241,1); REM " SHIP VIA
7196 PRINT (Z[2])S_REC$
7200 REM "LINES
7202 L_REC$(1,1)="L"
7204 L_REC$(2,3)="103"
7206 L_REC$(8,1)="I"
7208 L_REC$(9,1)="E"
7209 L_REC$(11,10)=A$(1,10); REM "CUSTOMER
7210 L_REC$(21,20)=I$(223,10); REM " ITEM
7218 L_REC$(178,4)=A$(12,4); REM L_REC$(178,4)="9001"
7294 L_REC$(144,7)=STR(NUM(I$(233,7)):"0000000")
7296 PRINT (Z[2])L_REC$
7300 DIM M1_REC$(181); M1_REC$=BLANK$(1,181)
7303 IF I$(242,73)=BLANK$(1,73) THEN GOTO 7499
7305 M1_REC$(1,1)="L"
7306 M1_REC$(2,3)="103"
7308 M1_REC$(8,1)="M"
7309 REM "M1_REC$(144,7)=STR(1:"0000000")
7310 M1_REC$(41,40)=I$(241,40)
7312 M1_REC$(178,4)=A$(12,4); REM "WAREHOUSE FOR MESSSAGES
7350 PRINT (Z[2])M1_REC$
7390 DIM M2_REC$(181); M2_REC$=BLANK$(1,181)
7400 IF I$(281,35)=DIM(35) THEN GOTO 7499
7404 M2_REC$(1,1)="L"
7406 M2_REC$(2,3)="103"
7408 M2_REC$(8,1)="M"
7409 REM "M2_REC$(144,7)=STR(1:"0000000")
7410 M2_REC$(41,40)=STP(I$(281,35),3,$0D$)+BLANK$(1,5)
7412 M2_REC$(178,4)=A$(12,4); REM " WAREHOUSE FOR MESSAGES
7450 PRINT (Z[2])M2_REC$
7499 GOTO 1100
7500 REM "Convert date q$ into q0$
7501 REM "Q$ in YYYYMMDD format or YYMMDD
7505 Q0$=""
7506 IF STP(Q$,3," ")="" THEN GOTO 7545
7510 IF LEN(Q$)=8 THEN GOTO 7520 ELSE IF LEN(Q$)=6 THEN D1$=STR(NUM(Q$(1,2)):"00") ELSE GOTO 7545
7515 IF D1$<"50" THEN Q$="20"+Q$ ELSE Q$="19"+Q$
7520 Q0$=CHR(NUM(Q$(1,3),ERR=7521)-125)+Q$(4,1)+Q$(5,2)+Q$(7,2)
7545 RETURN 
7600 REM ITEM CODE CROSS REFERENCE LOOK-UP
7610 REM =================================
7615 DIM C$(168)
7620 K$=KEY(Z[5],END=7700)
7630 READ (Z[5],KEY=K$,DOM=7700)
7640 IF K$(1,10)<>VEND$ THEN GOTO 7620
7645 IF K$(15,20)<>ITEM_CODE$ THEN GOTO 7620
7660 READ (Z[20],KEY=PO_NUM$+"   ",DOM=7620)IOL=0330
7670 IF C$(101,10)<>K$(45,10) THEN GOTO 7660
7680 PO_LINE$=PAD(C$(7,3),3,0,"0")
7690 IF PO_LINE$="   " THEN PO_LINE$=PAD(ELEMENT$[2],3,0,"0")
7699 RETURN 
7700 REM "Parse delimeted strings
7705 IF A$(11,1)="1" THEN F_NUM=15,F_LEN$="051535350430301602104010070175"
7710 IF A$(11,1)="2" THEN F_NUM=33,F_LEN$="102826262621050510200710202020011210020203042826262621051075011004"
7720 DIM FIELDS[F_NUM]
7730 FOR F_LOOP=1 TO F_NUM
7740 FIELDS[F_LOOP]=NUM(F_LEN$(2*F_LOOP-1,2))
7750 NEXT F_LOOP
7760 CALL "ZZ2DLM","","",I$,DELIM$,FIELDS{ALL},"",RETURN$,FIELDS_FOUND
7770 I$=RETURN$
7790 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 T=0; CALL "ZZ2FNC;SERIALRECCNT",SLOT,T
8115 PRINT 'MESSAGE'('_RED'+'WHITE'+"There are "+STR(T)+" records to process",0),
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 REM "CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 0615,2040; REM : SSP 187006
9900 REM "END PROGRAM
9901 CMD_STR$="E"; EXIT 
9905 END_PROC:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$
9940 SETESC 9350
9945 EXIT 
9950 RUN "ZMENU"
9999 END 
56000 ! "198574-test OE gateway                                             
