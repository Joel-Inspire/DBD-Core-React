0010 REM "Dashboard Gadget - BIRT Dashboard Viewer <DBGGDB>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 07/15/10 - 18.786388 - crg - SSP# 230158
0037 REM "230158-Dashboards
0040 REM "Copyright 2010 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,CTL_LIST,GADGET_NUMBER,OPTIONS${ALL},RETURN$
0100 SETERR 9000
0110 X0$="DBGGDB",X1$="BIRT DashBoard Viewer"
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "IOLISTS
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0585 READ (Z[13],KEY=X3$(9,3)+"EXTREPORT",DOM=*NEXT)RPTPARM$ ! read module parameters
0599 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0600 ! Initialize anything needed
0601 IF NOT(FN%HAS_MODULE("RP")) THEN GOTO 9900
0605 GADGET_FLAG$="%GADGET_"+%CURR_GADGET.DB_GADGET_INDEX$ ! will be 0 if first time through
0610 FONT$="Arial,-16,B",LARGE_FONT$="Arial,-48,B"
0620 UP_LEFT_X_PIXEL=@X(%CURR_GADGET.UP_LEFT_COL-1),UP_LEFT_Y_PIXEL=@Y(%CURR_GADGET.UP_LEFT_ROW-1) ! -1 To get top left of value
0625 WIDTH_PIXEL=@X(%CURR_GADGET.WIDTH),HEIGHT_PIXEL=@Y(%CURR_GADGET.HEIGHT) ! no minus 1, to get bottom and right edge
0626 WIDTH_COL=%CURR_GADGET.WIDTH,HEIGHT_ROW=%CURR_GADGET.HEIGHT
0630 UP_LEFT_COL=%CURR_GADGET.UP_LEFT_COL,UP_LEFT_ROW=%CURR_GADGET.UP_LEFT_ROW
0635 RIGHT_COL=%CURR_GADGET.UP_LEFT_COL+%CURR_GADGET.WIDTH,BOTTOM_ROW=%CURR_GADGET.UP_LEFT_ROW+%CURR_GADGET.HEIGHT
0665 CUR_CTL=15000+(100*GADGET_NUMBER)
0699 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1000 REM "BEGIN MAIN PROCESS
1005 IF VIN(GADGET_FLAG$)=0 THEN {! First time through
1020 ALERT=0; GOSUB BORDER
1035 GOSUB SETUP_FIELDS
1050 GOSUB SETUP_DASHBOARD_WINDOW
1090 VIA GADGET_FLAG$=SCAN_WINDOW_HANDLE
1095  } ELSE {
1097 SCAN_WINDOW_HANDLE=VIN(GADGET_FLAG$)
1099  }
1100 ! normal processing
1110 GOSUB GET_INFO
1200 ! print info
1215 ! IF WHO="crg" THEN PRINT 'CS'; ESCAPE 
1300 GOSUB VIEW_DASHBOARD
1995 GOTO 9900
1999 ! 
2000 GET_INFO:
2001 ! IF WHO="crg" THEN ESCAPE
2006 ! SET_PARAM 'XI'
2085 ! SET_PARAM -'XI'
2095 RETURN 
2099 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
3000 QRY_BUTTON:! Query button pressed
3003 ENTER X3$,X4$,OPTIONS$
3078 EXIT 
3081 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
5000 SETUP_FIELDS:! Setup fields in the Gadget
5005 ! MULTI_LINE TITLE.CTL,@(FN_COLUMN(0),FN_ROW(0),WIDTH_COL-1.2-%NOMAD_QRY_WIDE,1),OPT="BL",FNT=FONT$; TITLE.CTL'BACKCOLOR$="DARK GRAY",TITLE.CTL'TEXTCOLOR$="WHITE",TITLE.CTL'VALUE$=PGN
5095 RETURN 
5099 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
5100 BORDER:! Border around Gadget, Alert =0 for normal, 1 for Attention, 2 for Alert
5105 SWITCH ALERT
5106 CASE 0; PEN_COLOR=8; BREAK ! Dark Gray
5107 CASE 1; PEN_COLOR=12; BREAK ! Dark Blue
5108 CASE 2; PEN_COLOR=1; BREAK ! Light Red
5114 DEFAULT ; PEN_COLOR=8 ! Dark Gray
5115 END SWITCH 
5120 IF VIN(GADGET_FLAG$)=0 THEN FILL_IT=1 ELSE FILL_IT=0 ! Only fill rectangle if first time through
5150 PRINT 'FILL'(FILL_IT,15),
5155 PRINT 'PEN'(1,2,PEN_COLOR),
5160 PRINT 'RECTANGLE'(UP_LEFT_X_PIXEL,UP_LEFT_Y_PIXEL,UP_LEFT_X_PIXEL+WIDTH_PIXEL,UP_LEFT_Y_PIXEL+HEIGHT_PIXEL),
5195 RETURN 
5199 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
5200 SETUP_DASHBOARD_WINDOW:! setup scan window area based on location of INDEX_BOX control
5205 LINE=0,COLUMN=0
5285 GOSUB SET_WINDOW_SIZE; VIIW_OPT$="A"; CALL "[WDX]*OCX;URL_IN_IE",UP_LEFT_COL,UP_LEFT_ROW,WIDTH_COL,HEIGHT_ROW,"IL_LOGO",SCAN_WINDOW_HANDLE,RET_CODE; VIIW_OPT$=""
5290 OBTAIN (0,ERR=*NEXT,TIM=.1)*
5295 RETURN 
5299 ! 
5300 VIEW_DASHBOARD:! View an external dashboard report in viewer
5310 DASHBOARD_PATH$=STP(MID(RPTPARM$,169,200),2)+STP(OPTIONS$[0],2)
5340 CALL "[wdx]*OCX;URL_IN_IE",ERR=*NEXT,UP_LEFT_COL,UP_LEFT_ROW,WIDTH_COL,HEIGHT_ROW,DASHBOARD_PATH$,SCAN_WINDOW_HANDLE,RETURN_CODE
5395 RETURN 
5399 ! 
5400 SET_WINDOW_SIZE:! Set WIDTH and HEIGHT based on already set COLUMN and LINE to fill out the rest of the window
5410 CALL "*INFO;GETWINDOWVIEWPORT",PANEL_WIDE,PANEL_HIGH
5420 WIDTH=(PANEL_WIDE-COLUMN)
5430 HEIGHT=(PANEL_HIGH-LINE)
5495 RETURN 
5499 ! 
8800 DEF FN_ADD_CTL(LOCAL ACTION$, LOCAL OPTIONS$)
8801 ! Add next control to CTL_LIST, if CTL_LIST blank then start at 5000
8810 LK$="5000"; LK$=KEL(CTL_LIST,ERR=*NEXT)
8815 NEW_CTL=NUM(LK$)+1
8820 WRITE (CTL_LIST,KEY=STR(NEW_CTL))ACTION$,OPTIONS$
8840 RETURN NEW_CTL
8845 END DEF
8849 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8900 DEF FN_COLUMN(LOCAL COLUMN)
8905 ! Correct column including UP_LEFT_COL
8910 IF UP_LEFT_COL+COLUMN<1 THEN RETURN UP_LEFT_COL+COLUMN ELSE RETURN UP_LEFT_COL+COLUMN-1
8915 END DEF
8916 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8950 DEF FN_ROW(LOCAL ROW)
8955 ! Correct Row including UP_LEFT_ROW
8960 IF UP_LEFT_ROW+ROW<1 THEN RETURN UP_LEFT_ROW+ROW ELSE RETURN UP_LEFT_ROW+ROW-1
8965 END DEF
8966 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 3054,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
14000 CENTER_WDW:
14005 GOSUB GET_XYINFO
14010 UP_LEFT_X=INT((_XMAX/_XCHAR-WDW_WIDE)/2)
14015 UP_LEFT_Y=INT((_YMAX/_YCHAR-WDW_HIGH)/2)
14020 RETURN 
14049 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
14050 GET_XYINFO:
14055 IF _XCHAR<>0 THEN RETURN 
14060 _X$=MSE
14065 _XCHAR=DEC($00$+_X$(10,1))
14070 _YCHAR=DEC($00$+_X$(11,1))
14075 _XMAX=DEC(_X$(27,2))
14080 _YMAX=DEC(_X$(29,2))
14085 _WIN_VER=TCB(25)
14090 RETURN 
14099 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
