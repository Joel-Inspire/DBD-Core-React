0010 ! CVGCON - Credit card conversion program  - Vault ID
0035 REM "5.7 - 02/14/15 - 14.831388 - jvv - SSP# 229993
0037 REM "229993-PCI/PA-DSS New CC Module                                    
0040 REM "Copyright 2015 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! 
0051 ! Return values:
0052 ! 
0060 ! SUCCESS_YN : 1 = Approved, -1 = Declined, 0 = Error
0070 ! RESPONSE_MSG$: Holds response message received from processor
0080 ! APPR_CD$ : IF SUCCESS_YN = 1 , then contains the approval code sent by processor, else blank
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="CVGCON",X1$="Credit Card Vault Conversion"
0120 DIM Z0$(80,"-")
0130 K0=12,K1=1
0135 C9=-1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0250 X2=2
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O EDD...  02O FS1...  03O AR1... 04O PO3...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 LOGFILE$="CVGCON.log"; SERIAL LOGFILE$,ERR=*PROCEED; OPEN LOCK (HFN)LOGFILE$; LOGCHAN=LFO
0600 INPUT "Enter CyberSource Merchant account name:",MERCH_ACCT$
0601 INPUT "Enter default email address:",DEFAULT_EMAIL$
0605 PRINT @(0,22),'CE',"EDD credit card to vault ID conversion in progress",
0620 READ (Z[1],KEY="",DOM=*NEXT)
0625 K$=KEY(Z[1],END=EDD_DONE); READ RECORD (Z[1],KEY=K$)EDD$
0626 IF EDD$(300,1)="Y" THEN GOTO 0625 ! Skip if EDD record is already processed
0627 LOGEDD$=STP(EDD$(16,20),2)
0635 READ (Z[2],KEY=EDD$(1,8))FS1$
0640 READ (Z[3],KEY=FS1$(6,10))AR1$
0645 DIM PO3$(430); READ (Z[4],KEY=FS1$(118,8)+DIM(5),DOM=*NEXT)PO3$
0650 GOSUB GENERATE_SUBSCRIPTION
0670 WRITE RECORD (Z[1],KEY=K$)EDD$
0672 GOSUB LOG_MESSAGE
0675 GOTO 0625
0680 EDD_DONE:
0690 RETURN 
0699 ! 
1000 GENERATE_SUBSCRIPTION:
1001 PRINT "Processing: ",K$
1005 TF_VALUE$="",CC_CMD$="",CC_PARAMS$="",CC_EXP$="",REDIRECT_URL$="",SESSION_ID$="",P_RESPMSG$="",P_PNREF$=""
1010 ! 
1050 ! CASE "U" ! Use CyberSource Token Service
1051 CC_CMD$=" -provider U -service P "; VALID_PROVIDER$="Y"
1100 IF VALID_PROVIDER$<>"Y" THEN GOTO 2630 ! Invalid provider, treat as an Error case
1141 CC_CMD$=" -user "+MERCH_ACCT$+" -password "+"NONE"+" "+CC_CMD$
1150 ! 
2100 ! Prepare command line param string; Gather other data
2125 CC_PARAMS$=CC_PARAMS$+"TF_CARDNUM="+STP(EDD$(16,20),2)+"&"
2135 CC_PARAMS$=CC_PARAMS$+"TF_NAME="+STP(EDD$(40,40),2)+"&"; TF_VALUE$=STP(EDD$(40,40),2); GOSUB SET_FIRST_LAST_NAMES
2145 CC_PARAMS$=CC_PARAMS$+"TF_EXPDATE="+EDD$(36,4)+"&"
2155 CC_PARAMS$=CC_PARAMS$+"TF_ADDR="+STP(EDD$(126,30),2)+"&"
2165 CC_PARAMS$=CC_PARAMS$+"TF_CITY="+STP(EDD$(186,16),2)+"&"
2205 CC_PARAMS$=CC_PARAMS$+"TF_STATE="+EDD$(202,2)+"&"
2215 CC_PARAMS$=CC_PARAMS$+"TF_ZIP="+STP(EDD$(204,9),2)+"&"
2245 CC_PARAMS$=CC_PARAMS$+"T_CUSTOMER_NUMBER="+FN%ZZDISP$(AR1$(1,10),"A/R")+"&"
2400 CC_PARAMS$=CC_PARAMS$+"TF_EMAIL="+DEFAULT_EMAIL$+"&" ! ELSE CC_PARAMS$=CC_PARAMS$+"TF_EMAIL="+STP(PO3$(299,40),2)+"&" ! WO239471
2410 IF EDD$(12,4)="M/C " THEN EDD$(12,4)="MAST"; CC_PARAMS$=CC_PARAMS$+"CC_TYPE=MAST&ENDPARAMS=DONE" ELSE CC_PARAMS$=CC_PARAMS$+"CC_TYPE="+STP(EDD$(12,4),2)+"&ENDPARAMS=DONE" ! WO239471
2420 CC_PARAMS$=SUB(CC_PARAMS$," ","+")
2460 ! Finish preparing the command line params
2470 CC_CMD$=CC_CMD$+" -params "+QUO+CC_PARAMS$+QUO
2475 PRINT CC_CMD$
2476 ESCAPE 
2480 ! Store this command line as input in a temp file
2490 TEMP_FILE$="ccauth.in."; GOSUB CREATE_UNIQUE_TEMP_FILE
2500 SLOT=HFN; OPEN LOCK (SLOT,ERR=2630)TEMP_FILE$; PRINT (SLOT)CC_CMD$; CLOSE (SLOT)
2510 ! 
2520 ! Execute the command line
2530 RESP$="",RETURN_CODE=-9999,TEMP_FILE1$=TEMP_FILE$,OLD_GUI=%GUI,%GUI=0
2540 CALL "ZZ2CMD",X3$,X4$,"{CC_CONV_100}",TEMP_FILE1$,"NR",RETURN_CODE,RESP$
2541 %GUI=OLD_GUI
2550 RESP$=SUB(RESP$,SEP,"|")+"|"
2560 ! Remove temporary input file
2570 IF %CC_DEBUG<>1 THEN ERASE TEMP_FILE$,ERR=2590
2580 ! 
2590 IF POS("Result :Approved"=RESP$,ERR=2630)>0 THEN SUCCESS_YN=1; GOTO 2650
2600 IF POS("Result :Declined"=RESP$,ERR=2630)>0 THEN SUCCESS_YN=-1; GOTO 2650
2610 IF POS("Result :Error"=RESP$,ERR=2630)>0 THEN SUCCESS_YN=0; GOTO 2650
2620 ! If here, then error occurred
2630 SUCCESS_YN=-1; RESPONSE_MSG$="Error occurred while processing credit card"; GOTO 2720
2640 ! Extract response message and reference code
2650 INDEX=POS("Message :"=RESP$,ERR=2665); END_INDEX=POS("|"=RESP$(INDEX+9),ERR=2665)
2660 RESPONSE_MSG$=RESP$(INDEX+9,END_INDEX-1)
2670 IF SUCCESS_YN<1 THEN GOTO 2720 ! Transaction NOT approved or error, no approval code
2680 ! Transaction approved
2690 INDEX=POS("Reference :"=RESP$,ERR=2705); END_INDEX=POS("|"=RESP$(INDEX+11),ERR=2720)
2700 APPR_CD$=RESP$(INDEX+11,END_INDEX-1)
2701 EDD$(16,20)=DIM(12,"*")+MID(STP(EDD$(16,20),2),-4); EDD$(235,64)=APPR_CD$; EDD$(300,1)="Y"
2705 PRINT K$,"|SUCCESS|",APPR_CD$,"|",RESP$
2710 RETURN 
2720 PRINT K$,"|FAILED |",RESP$
2721 EDD$(16,20)=DIM(12,"*")+MID(STP(EDD$(16,20),2),-4); EDD$(300,1)="Y"
2725 RETURN 
2730 CREATE_UNIQUE_TEMP_FILE:! take TEMP_FILE$ and make it unique and make it to use, we let caller make the temp_file name so we don't have to be operating system specific
2740 RND$=STR(INT(RND*1000):"0000")
2750 SERV_DIR$=STP(MID(PFX,1,POS(" "=PFX)),2); SERV_DIR$=STP(SERV_DIR$,1,DLM)+DLM
2760 TST=HFN; OPEN (TST,ERR=2770)SERV_DIR$+TEMP_FILE$+RND$; CLOSE (TST); GOTO 2740 ! if opened then go get another random number
2770 TEMP_FILE$=SERV_DIR$+TEMP_FILE$+RND$; SERIAL TEMP_FILE$ ! name is unique, set it & create file to hold it
2780 RETURN 
2790 ! 
2900 SET_FIRST_LAST_NAMES:! WO239471, using cc_name, determine first and last names and set these into parameters list
2910 FULL_NAME$=STP(TF_VALUE$,2),FIRST_NAME$=FULL_NAME$,LAST_NAME$=""
2915 P=POS(" "=FULL_NAME$); IF P=0 THEN GOTO SET_NAMES_INTO_PARAMS
2920 FIRST_NAME$=FULL_NAME$(1,P-1),LAST_NAME$=STP(FULL_NAME$(P+1),0)
2925 P=POS(" "=LAST_NAME$); IF P=0 THEN GOTO SET_NAMES_INTO_PARAMS ELSE FIRST_NAME$=FIRST_NAME$+DIM(1)+STP(LAST_NAME$(1,P-1),0),LAST_NAME$=STP(LAST_NAME$(P+1),0); GOTO *SAME
2975 SET_NAMES_INTO_PARAMS:
2980 CC_PARAMS$=CC_PARAMS$+"TF_FIRSTNAME="+FIRST_NAME$+"&"
2985 CC_PARAMS$=CC_PARAMS$+"TF_LASTNAME="+LAST_NAME$+"&"
2990 RETURN 
2995 ! 
3000 LOG_MESSAGE:
3010 LOGMSG$="EDD|"+K$(1,8)+"|"+K$(9,3)+"|"
3020 LOGMSG$=LOGMSG$+LOGEDD$+"|" ! Cardnum
3030 LOGMSG$=LOGMSG$+STP(EDD$(12,4),2)+"|" ! Card type
3040 LOGMSG$=LOGMSG$+STP(EDD$(40,40),2)+"|" ! Name
3050 LOGMSG$=LOGMSG$+EDD$(36,4)+"|" ! Exp Date
3060 LOGMSG$=LOGMSG$+STP(EDD$(126,30),2)+"|" ! Addr 1
3070 LOGMSG$=LOGMSG$+STP(EDD$(186,16),2)+"|" ! City
3080 LOGMSG$=LOGMSG$+EDD$(202,2)+"|" ! State
3090 LOGMSG$=LOGMSG$+STP(EDD$(204,9),2)+"|" ! Zip
3100 LOGMSG$=LOGMSG$+FN%ZZDISP$(AR1$(1,10),"A/R")+"|" ! Customer code
3140 LOGMSG$=LOGMSG$+RESP$
3190 PRINT (LOGCHAN)LOGMSG$
3195 RETURN 
9000 REM "ERROR PROCESSING
9001 ESCAPE 
9010 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9020 LAST_CC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_CC_ERR$=GBL("LAST_CC_ERR",LAST_CC_ERR$)
9030 GOTO 9040
9040 REM "End
9050 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9055 CLOSE (LOGCHAN)
9060 EXIT 
9999 END 
