0010 REM "Data Replication Target Analysis <DRGUTA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 01/25/19 - 18.125 - crg - SSP# 300759
0037 REM "300759-Data replication server process - enhancements              
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "This utility is intended for use in setting up a predefined set of
0051 REM "files for replication to an external target database and possibly 
0052 REM "generating sQL statements to create the database table objects
0069 ! 
0070 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "DRGUTA","../DRG/DR.EN"
0080 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0085 EXIT 
0090 ! 
0095 INIT:
0110 X0$="DRGUTA",X1$="Data Replication Target Analysis "
0130 K0=20,K1=1
0135 C9=-1
0140 X0=-1
0150 SAVE_PERCENT_GUI=%GUI; %GUI=1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "IOLISTS
0310 IOLIST A$
0320 IOLIST B$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O DR0...  02O DR1...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0595 RETURN 
0599 ! 
0600 PROCEED:
0610 GOSUB GET_CONNECT_STRING; IF NUL(CONNECT_STRING$) THEN MSGBOX MSG("DRGUTA_01"),MSG("WARNING"),"OK,!,TIM=5"; RETURN 
0620 OPEN (HFN)CONNECT_STRING$; EXTDB=LFO
0660 GOSUB 8100
0950 GOSUB 8150
0960 READ (Z[2],KEY="",DOM=*NEXT)
0999 ! 
1000 REM "BEGIN MAIN PROCESS
1010 DIM DR1$(502)
1011 DR1KEY$=KEY(Z[2],END=5000); READ (Z[2],KEY=DR1KEY$)DR1$
1020 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1030 IF MID(DR1$,41,20)<>MID(DR0$,1,20) THEN GOTO 1000 ! Skip this entry if not the same target
1035 PHYSICAL_FILE$=STP(MID(DR1$,1,8)),LOGICAL_FILE$=STP(MID(DR1$,314,32))
1040 IF SKIP_COLS$<>"Y" THEN {
1045 GOSUB GET_COLS_DATADICT
1050 GOSUB GET_COLS_EXTDB
1060 GOSUB COMPARE_COLS
1065  }
1200 GOSUB COMPARE_COUNTS
1600 GOTO 1000
1640 ! 
5000 REM "EOJ
5010 C=T; GOSUB 8150
5020 MSGBOX MSG("COMPLETED")+"!",_FYI$,"!"
5025 GOSUB 8100; GOSUB 8150
5030 CLOSE (EXTDB)
5040 RETURN 
5099 ! 
6000 REM "BACKGROUND
6445 RETURN 
6449 ! 
7500 COMPARE_COLS:
7505 LIST_BOX LOAD DIFF_LIST.CTL,0,LOGICAL_FILE$+SEP+'BR'+"Analyzing table:"+LOGICAL_FILE$+SEP+'BR'+" "+SEP
7510 DIFFSTR$=LOGICAL_FILE$+SEP
7515 IF DDCHAN THEN DIFFSTR$+=LOGICAL_FILE$+" Columns:"+STR(FIN(DDCHAN,"NUMREC",ERR=*PROCEED))+SEP
7520 IF EXTCHAN THEN DIFFSTR$+=TBL(NOT(PHYSICAL_FILE),PHYSICAL_FILE$,LOGICAL_FILE$)+" Columns:"+STR(FIN(EXTCHAN,"NUMREC",ERR=*PROCEED))+SEP
7525 LIST_BOX LOAD DIFF_LIST.CTL,0,DIFFSTR$
7530 READ (DDCHAN,KEY="",ERR=ERR_COMPARE,DOM=*NEXT)
7535 NEXT_COMP: DDKEY$=KEY(DDCHAN,END=DONE_COMPARE); READ (DDCHAN,KEY=DDKEY$)DDNAME$,DDTYPE$
7540 FIND (EXTCHAN,KEY=DDKEY$,ERR=ERR_COMPARE,DOM=*NEXT)EXTNAME$,EXTTYPE$; GOTO COL_FOUND
7545 COL_NOT_FOUND:
7555 LIST_BOX LOAD DIFF_LIST.CTL,0,LOGICAL_FILE$+SEP+DDNAME$+"    "+DDTYPE$+SEP+'_RED'+'YELLOW'+"Column missing"+SEP
7560 GOTO NEXT_COMP
7565 COL_FOUND:
7570 REMOVE (EXTCHAN,KEY=DDKEY$)
7575 GOTO NEXT_COMP
7580 DONE_COMPARE:
7582 READ (EXTCHAN,KEY="",ERR=ERR_COMPARE,DOM=*NEXT)
7585 DDKEY$=KEY(EXTCHAN,END=*NEXT); READ (EXTCHAN,KEY=DDKEY$)EXTNAME$,EXTTYPE$; LIST_BOX LOAD DIFF_LIST.CTL,0,LOGICAL_FILE$+SEP+'_RED'+'YELLOW'+"Unknown column "+SEP+EXTNAME$+"    "+EXTTYPE$+SEP; GOTO *SAME
7595 RETURN 
7596 ERR_COMPARE:
7597 LIST_BOX LOAD DIFF_LIST.CTL,0,LOGICAL_FILE$+SEP+"Error comparing columns for this table"+SEP; RETURN 
7599 ! 
7600 COMPARE_COUNTS:
7620 PVX_COUNT$="-1"; OPEN (HFN)PHYSICAL_FILE$; PVX_FIL=LFO; PVX_COUNT$=FIN(PVX_FIL,"NUMREC"); CLOSE (PVX_FIL)
7630 SQL_STR$="SELECT COUNT(*) TOTAL_REC FROM "+TBL(NOT(PHYSICAL_FILE),PHYSICAL_FILE$,LOGICAL_FILE$)
7635 WRITE RECORD (EXTDB,ERR=ERR_COMPARE_COUNTS)SQL_STR$
7640 EXT_COUNT$="-1"; READ (EXTDB)EXT_COUNT$
7645 LIST_BOX LOAD DIFF_LIST.CTL,0,LOGICAL_FILE$+SEP+"Total rows: "+PVX_COUNT$+SEP+"Total rows: "+EXT_COUNT$+SEP
7690 DONE_COMPARE_COUNTS:
7695 RETURN 
7696 ERR_COMPARE_COUNTS:
7697 LIST_BOX LOAD DIFF_LIST.CTL,0,LOGICAL_FILE$+SEP+"Error comparing counts for this table"+SEP; RETURN 
7699 ! 
7700 GET_CONNECT_STRING:
7710 CONNECT_STRING$=STP(MID(DR0$,51,120))
7720 PHYSICAL_FILE=0; IF POS("&TF"=CONNECT_STRING$) THEN PHYSICAL_FILE=1 ! Target uses physical file name (AR1500), not logical (AR1_Cust)
7730 CONNECT_STRING$=SUB(SUB(CONNECT_STRING$,"&DD",""),"&TF","") ! Strip off table token to leave just the connect string
7745 RETURN 
7749 ! 
7800 GET_COLS_DATADICT:
7805 ERR_MSG$=""; IF DDCHAN THEN CLOSE (DDCHAN); DDCHAN=0
7810 OPEN (HFN)"*MEMORY*"; DDCHAN=LFO
7815 IOL_DDE:IOLIST IOLOBJ$,NAME$,DESC$,TYPE$,LEN$,OCC$,FORMAT$,VALID$,PRINT$,HELP$,NOTES$,KEYDEF$,QUERY$,CLASS$,FLAGS$,DFLT$,ALT_NAME$,USER_TAG$
7820 DDF=HFN; OPEN (DDF,ERR=ERR_DATADICT)"providex.ddf"
7840 READ (DDF,KEY=STP(UCS(LOGICAL_FILE$)),KNO=1,DOM=DDE_DONE)
7860 DDF_K$=KEC(DDF,KNO=0)
7880 DDE=HFN; OPEN (DDE,ERR=ERR_DATADICT)"providex.dde"
7900 READ (DDE,KEY=DDF_K$,DOM=*NEXT)
7920 NEXT_DDE:
7940 K$=KEY(DDE,END=DDE_DONE); IF K$(1,LEN(DDF_K$))<>DDF_K$ THEN GOTO DDE_DONE
7950 READ (DDE,KEY=K$)IOL=IOL_DDE; NAME$=UCS(NAME$)
7955 WRITE (DDCHAN,KEY=PAD(NAME$,40))NAME$,TBL(TYPE$="N",TBL(CLASS$="DATE-KKMMDD","CHAR","DATE"),"NUMBER")+"("+LEN$+")"
7985 GOTO NEXT_DDE
7989 DDE_DONE:
7990 CLOSE (DDF),(DDE)
7995 RETURN 
7996 ERR_DATADICT:
7997 ERR_MSG$="Error reading data dictionary"; GOTO DDE_DONE
7999 ! 
8000 GET_COLS_EXTDB:
8001 ERR_MSG$=""; IF EXTCHAN THEN CLOSE (EXTCHAN); EXTCHAN=0
8002 OPEN (HFN)"*MEMORY*"; EXTCHAN=LFO
8005 IF MID(DR0$,181,1)="M" THEN SQL_STR$="DESC "+TBL(NOT(PHYSICAL_FILE),PHYSICAL_FILE$,LOGICAL_FILE$)
8006 IF MID(DR0$,181,1)="O" THEN SQL_STR$="SELECT COLUMN_NAME,DATA_TYPE||'('||DATA_LENGTH||')' AS DATA_TYPE FROM USER_TAB_COLUMNS WHERE TABLE_NAME ='"+UCS(TBL(NOT(PHYSICAL_FILE),PHYSICAL_FILE$,LOGICAL_FILE$))+"' ORDER BY COLUMN_NAME"
8007 IF NUL(MID(DR0$,181,1)) THEN SQL_STR$="select column_name, CASE WHEN data_type = 'datetime' THEN data_type when data_type = 'decimal'  then data_type+'('+cast(NUMERIC_PRECISION AS varchar(3)) +','+cast(NUMERIC_SCALE AS varchar(3))+')' when DATA_TYPE='varchar' OR DATA_TYPE='char' then data_type+'('+cast(isnull(CHARACTER_MAXIMUM_LENGTH,0)  as varchar(4)) +')'  else data_type END data_type from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME= '"+TBL(NOT(PHYSICAL_FILE),PHYSICAL_FILE$,LOGICAL_FILE$)+"'"
8015 WRITE RECORD (EXTDB,ERR=ERR_EXTDB)SQL_STR$
8020 NEXT_EXTCOL:READ (EXTDB,END=EXTDB_DONE)COLUMN_NAME$,DATA_TYPE$; COLUMN_NAME$=UCS(COLUMN_NAME$)
8025 WRITE (EXTCHAN,KEY=PAD(COLUMN_NAME$,40))COLUMN_NAME$,DATA_TYPE$
8030 GOTO NEXT_EXTCOL
8040 EXTDB_DONE:
8045 RETURN 
8046 ERR_EXTDB:
8047 ERR_MSG$="Error querying external database: "+SQL_STR$+": "+MSG(-1); MSGBOX ERR_MSG$,MSG("ERROR"),"STOP,OK"; GOTO EXTDB_DONE
8049 ! 
8100 REM "Initialize graph
8110 T=NUM(FIN(Z[2],"NUMREC")),T0=2
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Update graph
8155 CALL "ZZBARG",X3$,"HG",23,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9515 GOTO 0640
9520 ON C9 GOTO 1140,2040
9900 WRAPUP:REM "END PROGRAM
9905 %GUI=SAVE_PERCENT_GUI
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 ! 
10050 GET_TARGET:
10060 DIM DR0$(234); IF NOT(NUL(DR_TARGET$)) THEN FIND (Z[1],KEY=PAD(DR_TARGET$,20),DOM=ERR_TARGET)DR0$ ELSE GOTO ERR_TARGET
10070 TARGET_DESC$=DR0$(21,30); REFRESH_FLG=1
10075 RETURN 
10079 ! 
10080 ERR_TARGET:
10085 DR_TARGET$=""; NEXT_ID=DR_TARGET.CTL; REFRESH_FLG=1
10090 RETURN 
10099 ! 
10100 CLEAR_FIELDS:
10110 DR_TARGET$=""
10111 SKIP_COLS$=""
10115 LIST_BOX LOAD DIFF_LIST.CTL,""
10120 REFRESH_FLG=1
10145 RETURN 
10149 ! 
56001 REM "269347-Datarep utility to compare the columns and row counts of    
56002 REM "300759-Data replication server process - enhancements              
