0010 ! ARGEBZ - A/P Check Format Setup
0035 REM "5.7 - 02/15/12 - 12.491388 - dmm - SSP# 252442
0037 REM "252442-Add Vendor Account Number to AP Check Flexible Format and   
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "APGCXA","../APG/AP.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ZZPARM"
0185 _FIL_NO=HFN; OPEN (_FIL_NO,ERR=OPEN_ERR)_FILE_NAME$
0190 IOLIST A$(1,LEN(A$)),A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15],A[16],A[17],A[18],A[19],A[20],A[21],A[22],A[23],A[24],A[25],A[26],A[27],A[28],A[29],A[30],A[31],A[32],A[33],A[34],A[35],A[36],A[37],A[38],A[39],A[40],A[41],A[42] ! WO252442
0199 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="ML_FORMAT$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0720 DIM X9$(M0),X9[M0],Y9[M0]
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0945 IF _GL3 THEN CLOSE (_GL3); _GL3=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0965 %GRID=0
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1015 %GRID=0
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1060 _KEY$="A/PCKF"+ML_FORMAT$
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",ANSWER$
1230 IF ANSWER$="NO" THEN GOTO CLEAR_REC
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD,GL_ACCT_DESC$=""
1280 DIM A$(231),A(42); A$(1,7)="A/PCKF"+ML_FORMAT$ ! WO252442
1285 GOSUB ASSIGN_LIB ! GOSUB LOAD_FIELD_NUMBER; GOSUB LOAD_GRID ! 240329
1288 CALL "*WINGRP;HIDE",TEXT.GRP$; CALL "*WINGRP;SHOW",GRID.GRP$
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 ! GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=*NEXT)
1670 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$ ! MSGBOX _MSG_REC_REMOVE$+_R_KEY$,_FYI$,"INFO"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1855 NEXT_ID=ML_FORMAT.CTL
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2035 IF STP(_KEY$)="" THEN READ (_FIL_NO,KEY="A/PCKF",DOM=*NEXT)
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE); IF MID(_KEY$,1,6)<>"A/PCKF" THEN GOTO END_OF_FILE
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); IF MID(_KEY$,1,6)<>"A/PCKF" THEN GOTO START_OF_FILE ELSE GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2425 READ (_FIL_NO,KEY="A/PCKF",DOM=*NEXT)
2430 _KEY$=KEY(_FIL_NO,ERR=NO_FIRST); IF MID(_KEY$,1,6)<>"A/PCKF" THEN GOTO NO_FIRST
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2625 READ (_FIL_NO,KEY="A/PCKF~",DOM=PRIOR_REC)
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3025 DIM A$(231),A(42) ! WO252442
3030 READ (_FIL_NO,KEY=_KEY$)IOL=0190
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 GOSUB ASSIGN_LIB ! ; GOSUB LOAD_FIELD_NUMBER; GOSUB LOAD_GRID
3060 CHANGE_FLG=0
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""; GOTO WRT
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:GOSUB ASSIGN_PRG; WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)IOL=0190
3330 _R_KEY$=KEC(_FIL_NO); TRANSLATE _R_KEY$," ",$00$ ! MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO"
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=ML_FORMAT.CTL,_FIRST_FIELD=ML_DESC.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 GRID GOTO GRID_FIELDS.CTL,COL,ROW; NEXT_ID=GRID_FIELDS.CTL
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN ML_FORMAT$=""
13030 FOR AA=0 TO 42; EXECUTE "A"+STR(AA)+".CTL'VALUE$="+QUO+QUO; NEXT AA ! WO252442
13040 FOR AA=1 TO 12; EXECUTE "DESC"+STR(AA)+".CTL'VALUE$="+QUO+QUO; NEXT AA ! WO252442
13050 CB_BLANK$="N"
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(6,"N")
15025 RETURN 
15030 IF _ORIG.GL_ACCT$=_CUR.GL_ACCT$ OR GL_ACCT$=_CUR.GL_ACCT$ THEN GOTO *NEXT ELSE IF _ORIG.GL_ACCT$=GL_ACCT$ THEN _CHG2$=_CHG2$+SEP+MSG("GL_ACCT")+" = "+_CUR.GL_ACCT$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GL_ACCT")+" = "+_CUR.GL_ACCT$
15040 IF _ORIG.GL_ACCT_DESC$=_CUR.GL_ACCT_DESC$ OR GL_ACCT_DESC$=_CUR.GL_ACCT_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.GL_ACCT_DESC$=GL_ACCT_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("GL_AC_D")+" = "+_CUR.GL_ACCT_DESC$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GL_AC_D")+" = "+_CUR.GL_ACCT_DESC$
15050 IF _ORIG.ACCT_TYPE$=_CUR.ACCT_TYPE$ OR ACCT_TYPE$=_CUR.ACCT_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.ACCT_TYPE$=ACCT_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("ACCT_TYPE")+" = "+_CUR.ACCT_TYPE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ACCT_TYPE")+" = "+_CUR.ACCT_TYPE$
15060 IF _ORIG.SUB_LEDGER$=_CUR.SUB_LEDGER$ OR SUB_LEDGER$=_CUR.SUB_LEDGER$ THEN GOTO *NEXT ELSE IF _ORIG.SUB_LEDGER$=SUB_LEDGER$ THEN _CHG2$=_CHG2$+SEP+MSG("SUB_LEDGER")+" = "+_CUR.SUB_LEDGER$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SUB_LEDGER")+" = "+_CUR.SUB_LEDGER$
15070 IF _ORIG.COST_CODE_TYPE$=_CUR.COST_CODE_TYPE$ OR COST_CODE_TYPE$=_CUR.COST_CODE_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.COST_CODE_TYPE$=COST_CODE_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("COST_C_T")+" = "+_CUR.COST_CODE_TYPE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_C_T")+" = "+_CUR.COST_CODE_TYPE$
15080 IF _ORIG.GL1_UNUSED_1$=_CUR.GL1_UNUSED_1$ OR GL1_UNUSED_1$=_CUR.GL1_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.GL1_UNUSED_1$=GL1_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.GL1_UNUSED_1$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.GL1_UNUSED_1$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN GL_ACCT$=_CUR.GL_ACCT$
16030 IF _CHG_VAR$(2,1)="Y" THEN GL_ACCT_DESC$=_CUR.GL_ACCT_DESC$
16040 IF _CHG_VAR$(3,1)="Y" THEN ACCT_TYPE$=_CUR.ACCT_TYPE$
16050 IF _CHG_VAR$(4,1)="Y" THEN SUB_LEDGER$=_CUR.SUB_LEDGER$
16060 IF _CHG_VAR$(5,1)="Y" THEN COST_CODE_TYPE$=_CUR.COST_CODE_TYPE$
16070 IF _CHG_VAR$(6,1)="Y" THEN GL1_UNUSED_1$=_CUR.GL1_UNUSED_1$
16990 RETURN 
17000 SEL_QUERY:! 17000,10
17010 ENTER KEY$
17030 CHECK_WRITE:
17040 GOTO WRITE_REC
17050 MSGBOX MSG("WRITE_REC"),MSG("CONFIRM"),"?,YESNO",ANSWER$
17060 IF ANSWER$="YES" THEN GOTO WRITE_REC
17070 CHECK_WRITE_END:RETURN 
17080 ! 
17140 ASSIGN_LIB:
17150 ML_FORMAT$=A$(7,1),ML_DESC$=A$(8,30),LI=1,CB_BLANK$=A$(38,1)
17152 FOR AA=0 TO 42; EXECUTE "a"+STR(AA)+"=a(aa)"; NEXT AA ! WO252442
17154 FOR AA=39 TO 215 STEP 16; EXECUTE "LI=LI+1,DESC"+STR(LI)+"$=A$(AA,16)"; NEXT AA ! WO252442
17170 RETURN 
17180 LOAD_FIELD_NUMBER:
17190 DIM TF_DESC$[166]
17200 TF_DESC$[1]="40 Company Name (A)",TF_DESC$[2]="08 Page Number",TF_DESC$[3]="09 Invoice Number"
17210 TF_DESC$[4]="09 Invoice Number - 2nd printing",TF_DESC$[5]="10 Invoice Date ",TF_DESC$[6]="10 Invoice Date - 2nd printing"
17220 TF_DESC$[7]="35 Ship to Address (4 lines-Upper left corner)",TF_DESC$[8]="35 Sold to Address (4 lines-Upper left corner)",TF_DESC$[9]="11 Customer Code"
17230 TF_DESC$[10]="11 Customer Code - 2nd printing",TF_DESC$[11]="10 Invoice Due Date",TF_DESC$[12]="04 Salesperson Code"
17240 TF_DESC$[13]="10 Salesperson Name (F)",TF_DESC$[14]="15 Customer P/O Number",TF_DESC$[15]="09 Our Order Number"
17250 TF_DESC$[16]="10 Order Date",TF_DESC$[17]="10 Ship Date",TF_DESC$[18]="15 Ship Via"
17260 TF_DESC$[19]="12 Job Number",TF_DESC$[20]="25 Terms Description",TF_DESC$[21]="09 Terms Discount Amount"
17270 TF_DESC$[22]="11 Sales Tax Amount",TF_DESC$[23]="11 Freight Amount",TF_DESC$[24]="11 Invoice Total"
17280 TF_DESC$[25]="50 Comments (4 lines-Upper left corner)",TF_DESC$[26]="06 *Item Revision Date",TF_DESC$[27]="08 *Quantity Ordered-(E)"
17290 TF_DESC$[28]="08 *Quantity Shipped-(E)",TF_DESC$[29]="08 *Quantity Shipped-2nd printing-(E)",TF_DESC$[30]="40 *Description"
17300 TF_DESC$[31]="08 *Unit Price (D)",TF_DESC$[32]="04 *Unit of Measure",TF_DESC$[33]="10 *Item/Item Code"
17310 TF_DESC$[34]="11 *Extended Amount on line",TF_DESC$[35]="11 Net Sales (before freight & tax)",TF_DESC$[36]="08 *Unit Cost"
17320 TF_DESC$[37]="11 *Extended Cost on line",TF_DESC$[38]="11 Total Invoice Cost",TF_DESC$[39]="11 *Gross Profit on line"
17330 TF_DESC$[40]="11 Total Invoice Gross Profit",TF_DESC$[41]="08 *Gross Profit % on line",TF_DESC$[42]="08 Total Invoice Gross Profit %"
17340 TF_DESC$[43]="08 *Commission Amount on Line",TF_DESC$[44]="11 Total Invoice Commission",TF_DESC$[45]="08 *Left-Right Dimensions"
17350 TF_DESC$[46]="08 *Top-Bottom Dimensions",TF_DESC$[47]="02 *Number of Parts",TF_DESC$[48]="04 *Warehouse Location Code"
17360 TF_DESC$[49]="11 'Credit Memo' Heading-(I)",TF_DESC$[50]="37 'IF PAID BY MM/DD/YYYY YOU MAY DEDUCT:' Heading",TF_DESC$[51]="01 *Line Item Tax Exempt Flag"
17370 TF_DESC$[52]="05 *'Pack:' Heading",TF_DESC$[53]="08 *Quantity per Selling Unit of Measure",TF_DESC$[54]="10 '*Continued*'"
17380 TF_DESC$[55]="11 Invoice Total Gross Profit Adjustment",TF_DESC$[56]="08 'Freight:' Heading (S)",TF_DESC$[57]="10 'Sales Tax:' Heading"
17390 TF_DESC$[58]="11 Net Sale (including costed freight",TF_DESC$[59]="08 'Net Sale' Heading",TF_DESC$[60]="10 'Total Cost' Heading"
17400 TF_DESC$[61]="03 'GP$' Heading",TF_DESC$[62]="03 'GP%' Heading",TF_DESC$[63]="11 'Commission:' Heading"
17410 TF_DESC$[64]="xx Substitute Bill-to Addr for Sold-to if col>0",TF_DESC$[65]="35 Customer Name Only",TF_DESC$[66]="04 Salesperson Code - 2nd Printing"
17420 TF_DESC$[67]="08 Lot - Receiving Report Number",TF_DESC$[68]="11 Lot - P/O Number",TF_DESC$[69]="10 Lot - P/O Date"
17430 TF_DESC$[70]="12 Lot - Factory Job Number",TF_DESC$[71]="11 Lot - Vendor Number",TF_DESC$[72]="04 Lot - Plant Number"
17440 TF_DESC$[73]="09 Lot - Starting Number",TF_DESC$[74]="09 Lot - Ending Number",TF_DESC$[75]="10 Lot - Bin Number"
17450 TF_DESC$[76]="04 Lot - Primary Unit",TF_DESC$[77]="04 Lot - Packaging Unit",TF_DESC$[78]="04 Lot - Unit of Measure"
17460 TF_DESC$[79]="15 Lot - Customer P/O",TF_DESC$[80]="01 Lot - Short Carton = 'Y'",TF_DESC$[81]="40 Lot - Comment Field"
17470 TF_DESC$[82]="11 Lot - Total Cost of Lot",TF_DESC$[83]="11 Lot - Total Freight of Lot",TF_DESC$[84]="08 Lot - Units per Package"
17480 TF_DESC$[85]="08 Lot - Units per Unit",TF_DESC$[86]="08 Lot - Quantity",TF_DESC$[87]="11 Lot - Sales Price"
17490 TF_DESC$[88]="08 Lot - Units per Unit of Measure",TF_DESC$[89]="06 Lot - Item Revision Date",TF_DESC$[90]="10 Lot - Receipt Date"
17500 TF_DESC$[91]="08 Lot - Extended Quantity",TF_DESC$[92]="20 Ordered by",TF_DESC$[93]="08 List Price"
17510 TF_DESC$[94]="08 Line Item Discount %",TF_DESC$[95]="11 Line item discount amount",TF_DESC$[96]="11 Total invoice line item discount"
17520 TF_DESC$[97]="40 Heading that goes with total line item disc",TF_DESC$[98]="06 The heading 'Total:",TF_DESC$[99]="11 *Line item extension at list price"
17530 TF_DESC$[100]="40 Description of 1st line item",TF_DESC$[101]="11 Vendor number of 1st line item",TF_DESC$[102]="09 Ending number of 1st line item (H)"
17540 TF_DESC$[103]="08 Unit price of 1st line item",TF_DESC$[104]="04 Unit of measure of 1st line item",TF_DESC$[105]="09 Invoice number - 3rd printing"
17550 TF_DESC$[106]="10 Invoice date - 3rd printing",TF_DESC$[107]="11 Total invoice cost - 2nd printing",TF_DESC$[108]="09 Our order number - 2nd printing"
17560 TF_DESC$[109]="08 Quantity shipped of 1st line item",TF_DESC$[110]="04 *Cartons shipped(qty ship/ord line ctn pack)",TF_DESC$[111]="08 *Carton pack from order line"
17570 TF_DESC$[112]="08 *Quantity backordered from order line-(E)",TF_DESC$[113]="38 'AT' + division address line 2-(N)",TF_DESC$[114]="38 'IN' + division address line 3-(N)"
17580 TF_DESC$[115]="20 Customer credit contact('A' type for ATTN:",TF_DESC$[116]="05 *Commission code on line item",TF_DESC$[117]="09 Starting number from Order Line (H)"
17590 TF_DESC$[118]="09 Ending number from Order Line (H)",TF_DESC$[119]="14 Customer's phone number (H)",TF_DESC$[120]="14 Customer's fax number (H)"
17600 TF_DESC$[121]="10 Reserved for future use (CCC)",TF_DESC$[122]="04 Reserved for future use (DPT)",TF_DESC$[123]="25 Reserved for future use (CCR)"
17610 TF_DESC$[124]="04 Ship To Code in Invoice Header",TF_DESC$[125]="35 Ship To Description in Invoice Header",TF_DESC$[126]="11 Invoice Total Adjusted Gross Profit"
17620 TF_DESC$[127]="11 *Finder's fee vendor code",TF_DESC$[128]="11 *Finder's fee amount",TF_DESC$[129]="10 Estimated reorder date from 1st line item"
17630 TF_DESC$[130]="11 Invoice total - second printing",TF_DESC$[131]="57 Sales Tax must be accrued... Heading",TF_DESC$[132]="17 Custom item code-Revision date combination"
17640 TF_DESC$[133]="25 Reserved for future use (HCM)",TF_DESC$[134]="15 FOB Point",TF_DESC$[135]="10 *1st 10 characters of item desc. (always)"
17650 TF_DESC$[136]="11 Sales Tax Amount - State portion -(H#)",TF_DESC$[137]="11 Sales Tax Amount - County portion -(H#)",TF_DESC$[138]="11 Sales Tax Amount - Local portion -(H#)"
17660 TF_DESC$[139]="12 *Sales Tax Code on line item (2)",TF_DESC$[140]="10 Item Code of the first line item",TF_DESC$[141]="12 Abbrev name of 2nd salesperson (F)"
17670 TF_DESC$[142]="30 General Shipping Ship to Attention Name",TF_DESC$[143]="10 Ship-to zip code",TF_DESC$[144]="10 Sold-to zip code"
17680 TF_DESC$[145]="09 The re-numbered invoice entry invoice number",TF_DESC$[146]="35 Mark For from General Shipping Address",TF_DESC$[147]="09 Location from Ship-to in General Shipping"
17690 TF_DESC$[148]="20 *Customer's Item Code (CIC)",TF_DESC$[149]="07 Invoice Exchange Rate",TF_DESC$[150]="03 Currency Description to Print"
17700 TF_DESC$[151]="20 *Supplier Item Number",TF_DESC$[152]="05 Reserved field (CEXPBU)",TF_DESC$[153]="15 Inside Delivery"
17710 TF_DESC$[154]="35 Ship to address (2nd printing)",TF_DESC$[155]="11 Deposit amount from order header",TF_DESC$[156]="11 Invoice total less deposit amount"
17720 TF_DESC$[157]="35 Sold to address (2nd printing)",TF_DESC$[158]="07 Audit Control Number From Batch",TF_DESC$[159]="05 Batch Number"
17730 TF_DESC$[160]="03 *FS2 Order Line Number",TF_DESC$[161]="26 *Heading for Split Terms",TF_DESC$[162]="55 *Split Terms"
17740 TF_DESC$[163]="20 *Variable Print Field 1",TF_DESC$[164]="50 *Name for PDF File",TF_DESC$[165]="30 *TopForm PDF Filename"
17750 TF_DESC$[166]="02 *Commission Code Brackets"
17770 RETURN 
23000 LOAD_GRID:
23002 GRID HIDE GRID_FIELDS.CTL
23005 LINES=0,_BKEY$=_KEY$,BCUSTOMER$=CUSTOMER$,BITEM_CODE$=ITEM_CODE$,GRIDD$="",OPR$=""
23010 FOR AA=1 TO 166
23045 IF AA>1 AND SETGRID=0 THEN GRIDD$=GRIDD$+"A"; GRID LOAD GRID_FIELDS.CTL,1,0,"A"
23050 LINES=LINES+1,GRID_FIELDS.CTL'ROW=LINES,GRID_FIELDS.CTL'COLUMN=-1,GRID_FIELDS.CTL'VALUE$=STR(AA:"000")
23055 ! GRID WRITE GRID_FIELDS.CTL,0,0,GRIDD$
23060 GRID WRITE GRID_FIELDS.CTL,1,LINES,TF_DESC$[AA]; GRID_FIELDS.CTL'COLUMN=1,GRID_FIELDS.CTL'ROW=LINES,GRID_FIELDS.CTL'LOCK=1
23065 GRID WRITE GRID_FIELDS.CTL,2,LINES,STR(X9(AA)); GRID_FIELDS.CTL'COLUMN=2,GRID_FIELDS.CTL'ROW=LINES,GRID_FIELDS.CTL'LEN=3
23070 GRID WRITE GRID_FIELDS.CTL,3,LINES,STR(Y9(AA)); GRID_FIELDS.CTL'COLUMN=3,GRID_FIELDS.CTL'ROW=LINES,GRID_FIELDS.CTL'LEN=3
23071 GRID WRITE GRID_FIELDS.CTL,4,LINES,X9$(AA,1); GRID_FIELDS.CTL'COLUMN=4,GRID_FIELDS.CTL'ROW=LINES,GRID_FIELDS.CTL'LEN=1
23072 ! GRID_FIELDS.CTL'COLUMN=2,GRID_FIELDS.CTL'ROW=LINES,GRID_FIELDS.CTL'LEN=60
23090 NEXT AA
23095 GRID SHOW GRID_FIELDS.CTL; SETGRID=1; RETURN 
23100 END_LOAD_GRID:
23110 GRID_TR$=MSG("GRID_TR"),GRID_T$=MSG("GRID_T")
23120 IF LINES=0 THEN GOTO PROC_RE
24501 FOR AA=LINES TO 1 STEP -1
24504 X=GRID_FIELDS.CTL,X'COLUMN=1,X'ROW=AA,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
24505 XX=POS(OPR$(AA,1)=GRID_T$),XXX=POS("/"=GRID_T$(XX))-1,TEXT$=GRID_T$(XX,XXX); GRID WRITE GRID_FIELDS.CTL,1,AA,TEXT$
24508 NEXT AA
24509 ! X=GRID_FIELDS.CTL,X'COLUMM=2,X'ROW=-1,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
24510 PROC_RE: _KEY$=_BKEY$
24515 GRID SHOW GRID_FIELDS.CTL
24520 GOSUB PROCESS_READ; FLAG=0; RETURN 
24530 GRID_FOCUS:
24535 IF ID$<>"GRID_FIELDS" THEN GOTO *RETURN
24540 GRID SELECT READ GRID_FIELDS.CTL,COL,ROW
24545 GRID FIND GRID_FIELDS.CTL,COL,ROW,_X$; IF COL<>4 AND NUM(_X$,ERR=NON_NUMERIC) THEN ! 
24550 IF COL=1 THEN GRID GOTO GRID_FIELDS.CTL,2,ROW; NEXT_ID=GRID_FIELDS.CTL
24560 IF COL=2 THEN GRID GOTO GRID_FIELDS.CTL,3,ROW; NEXT_ID=GRID_FIELDS.CTL
24570 IF COL=3 THEN GRID GOTO GRID_FIELDS.CTL,4,ROW; NEXT_ID=GRID_FIELDS.CTL
24590 IF COL=4 AND ROW+1<=166 THEN GRID GOTO GRID_FIELDS.CTL,2,ROW+1; NEXT_ID=GRID_FIELDS.CTL ELSE %GRID=0
24599 RETURN 
24600 ADD_LINES:
24610 LINES=LINES+1
24620 GRID ADD GRID_FIELDS.CTL,0,LINES
24630 GRID_FIELDS.CTL'ROW=LINES,GRID_FIELDS.CTL'COLUMN=-1,GRID_FIELDS.CTL'VALUE$=STR(LINES:"000")
24635 X=GRID_FIELDS.CTL,X'COLUMN=1,X'ROW=LINES,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
24640 TF_PRINT$=GRID_T$(1,POS("/"=GRID_T$)-1); GRID WRITE GRID_FIELDS.CTL,1,LINES,TF_PRINT$; OPR$=OPR$+TF_PRINT$
24645 GRID GOTO X,1,LINES
24650 RETURN 
25700 SEL_GRID:
25705 GOSUB DEL_RECORDS
25710 FOR AA=1 TO LINES
25720 X=GRID_FIELDS.CTL
25730 GRID FIND X,1,AA,TF_PRINT$,ERR=*BREAK
25735 TF_PRINT$=MID(TF_PRINT$,1,1)
25740 GRID FIND X,2,AA,TF_COMMENT$
25750 LINE_NUM$=STR(AA:"000"),_KEY$=%CUSTOMER$+%ITEM_CODE$+LINE_NUM$,ITEM_CODE$=%ITEM_CODE$
25755 CALL "ZZWLKU;PARSE_CUST",%CUSTOMER$,CUST_DIV$,CUST_CODE$
25760 WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
25770 NEXT AA
25771 CHANGE_FLG=0; GOSUB CLEAR_REC
25772 DEL_GRID:IF LINES=0 THEN GOTO *RETURN
25773 FOR AA=2 TO LINES; GRID DELETE GRID_FIELDS.CTL,0,2; NEXT AA
25775 CHANGE_FLG=0,REFRESH_FLG=1,CHANGE_FLG=0
25780 GRID WRITE GRID_FIELDS.CTL,1,1,""
25790 GRID WRITE GRID_FIELDS.CTL,2,1,""
25795 IF ARG_1$+ARG_2$<>"" THEN CMD_STR$="END"
25800 RETURN 
30000 SEL_LB_LINE:
30005 PROCESS "XMGIAW.1","../FMG/FM.EN",STR(_FIL_NO),VAL$
30008 RETURN 
30009 INIT_QRY: _FIL_NO=NUM(ARG_1$)
30010 READ (_FIL_NO,KEY="",DOM=*NEXT)
30020 READ (_FIL_NO,REC=FMV$,END=END_REC)
30025 IDX=IDX+1,LN$=FMV.CUST_DIV$+"-"+FMV.CUST_CODE$+SEP+FMV.ITEM_CODE$+SEP+FMV.LINE_NUM$+SEP+FMV.TF_PRINT$+SEP+FMV.TF_COMMENT$
30026 LN1$=SEP+SEP+FMV.LINE_NUM$+SEP+FMV.TF_PRINT$+SEP+FMV.TF_COMMENT$
30028 IF BKEY$<>FMV.CUST_DIV$+FMV.CUST_CODE$+FMV.ITEM_CODE$ THEN LIST_BOX LOAD LB_LINE.CTL,IDX,LN$; BKEY$=FMV.CUST_DIV$+FMV.CUST_CODE$+FMV.ITEM_CODE$; GOTO 30020
30030 LIST_BOX LOAD LB_LINE.CTL,IDX,LN1$
30040 GOTO 30020
30050 END_REC:
30060 RETURN 
31000 DEL_RECORDS:
31010 READ (_FIL_NO,KEY=%CUSTOMER$+%ITEM_CODE$,DOM=*NEXT)
31020 _KEY$=KEY(_FIL_NO,END=END_DEL_REC); READ (_FIL_NO)
31030 IF MID(_KEY$,1,20)<>%CUSTOMER$+%ITEM_CODE$ THEN GOTO END_DEL_REC
31035 REMOVE (_FIL_NO,KEY=_KEY$)
31040 GOTO 31020
31050 END_DEL_REC:
31060 RETURN 
32000 ASSIGN_PRG: LI=1
32010 A$(1,6)="A/PCKF",A$(7,1)=ML_FORMAT$,A$(8,30)=ML_DESC$,A$(38,1)=CB_BLANK$
32020 FOR AA=0 TO 42; EXECUTE "A(AA)=A"+STR(AA); NEXT AA ! WO252442
32030 FOR AA=39 TO 215 STEP 16; EXECUTE "LI=LI+1,A$(AA,16)=DESC"+STR(LI)+"$"; NEXT AA ! WO252442
32040 RETURN 
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56001 REM "240329-PE if new flex format for AP checks being setup
56002 REM "252442-Add Vendor Account Number to AP Check Flexible Format and   
