0010 REM "A/P GUI Invoice overlay 1 <APGDAD>
0020 SETESC 9300; SETERR 9000
0035 REM "5.4 - 01/24/06 - 16.005277 - dff - SSP# 190031
0037 REM "190031-AP Invoicing Data Entry and Update                          
0040 REM "Copyright 2006 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0085 X0$="APGDAD"
0090 L2=L0; L0=0; ON L2 GOTO 0091,2000,2040
0095 IF J9<>0 THEN GOTO 7500
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0300 REM "IOLISTS
0310 IOLIST A$(1,LEN(A$)),A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11]
0320 IOLIST B$
0330 IOLIST C$,C[0],C[1],C[2]
0340 IOLIST D$,D[0],D[1]
0350 IOLIST E$,E[0],E[1],E[2]
0370 IOLIST G$
0390 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6]
0410 IOLIST K$
0420 IOLIST L$
0430 APL_IOLIST:IOLIST APL$,APL[0],APL[1],APL[2],APL[3]
1800 REM "Return to program
1810 GOTO 9900
2010 C0=0,X0=-1,X1=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF INT(C0)=3 THEN GOSUB 7300 ELSE IF C0>3 OR X0<0 THEN GOTO 1800
2040 ON X0 GOTO 2100,2150,2200,3150,3200,2250,2300,2350,2400,2450,2500,2550,2600,2650,2700,3400,3450,2750,2800,2850,2900,2950,3000,3300,3350,3050,3100,1800
2100 INVOICE_DATE_ENTRY:
2110 ! CALL "ZZENTR","DX",A{ALL},A$,X4$,X3$,31,5+V0,27+K9,6,C0,"","{3"+X$,"","AP2DAA08","","",""
2120 GOSUB CALC_DUE_DATE
2140 INVOICE_DATE_ENTRY_END:EXIT 
2150 GROSS_AMT_ENTRY:GOSUB STR_TO_NUM
2160 ! CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,61,5+V0,1,922,C0,M0$,"{3"+X$,"","AP2DAA10","","",""
2165 ! IF C0<0 THEN GOTO 2020
2170 IF GROSS_INV_AMT<0 THEN INV_TYPE$="C" ! PRINT @(13,8+V0),A$(89+K9,1),
2175 GOSUB COMPUTE_VAT
2180 IF F9>0 THEN IF GROSS_INV_AMT>F9 THEN INV_ON_HOLD$="Y" ! PRINT @(61,19),A$(87,1),
2185 NET_SALES=GROSS_AMT
2190 GROSS_AMT_ENTRY_END:GOSUB NUM_TO_STR; EXIT 
2200 TERMS_CODE_ENTRY:GOSUB STR_TO_NUM
2205 IF TERMS_CODE$<>"  " THEN TERMS$=TERMS_CODE$ ELSE TERMS$=""
2209 IF %SEC$(73,1)="Y" THEN GOTO TERMS_CODE_ENTRY_END
2210 ! CALL "ZZENTR","SZX",A{ALL},A$,X4$,X3$,13,7+V0,33+K9,2,C0,"","{3"+X$,"","AP2DAA12","AP2","X",""; IF ABS(C0)=102 THEN J9=2,Q1$="",Z8$="AP2MPE"; RUN "ZZ2STP" ELSE IF ABS(C0)>4 THEN GOSUB WHOLE_SCREEN; ON C0 GOTO 2210,2211
2220 FIND (_AP2,KEY=TERMS_CODE$,DOM=*NEXT)IOL=0340
2225 ! PRINT @(17,7),D$(3,30),
2227 ! IF C0<0 THEN GOTO 2020
2228 IF TERMS$>"" THEN IF TERMS$<>TERMS$ THEN DISC_AMT_2ND=0,DISC_DATE_2ND$=DIM(6); REM "If terms code is changed then blank out 2nd discount fields so they will recalculate correctly based on the new terms code
2230 GOSUB CALC_DUE_DATE; GOSUB CALC_DISC_AMT
2240 TERMS_CODE_ENTRY_END:GOSUB NUM_TO_STR; EXIT 
2250 SPECIAL_AMT1_ENTRY:GOSUB STR_TO_NUM
2255 X0=5; IF POS(" "<>%F1$((X0-5)*20+8,16))=0 THEN GOTO SPECIAL_AMT1_ENTRY_END
2260 ! CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,19,9+V0,2,922,C0,M0$,"{3"+X$,"","AP2DAA14","","",""
2265 GOSUB CALC_DISC_APPLIES_TO
2290 SPECIAL_AMT1_ENTRY_END:GOSUB NUM_TO_STR; EXIT 
2300 SPECIAL_AMT2_ENTRY:GOSUB STR_TO_NUM
2305 X0=6; IF POS(" "<>%F1$((X0-5)*20+8,16))=0 THEN GOTO SPECIAL_AMT2_ENTRY_END
2307 X=SPECIAL_AMT_2
2310 ! CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,19,10+V0,3,922,C0,M0$,"{3"+X$,"","AP2DAA16","","",""
2315 IF %F0$(71,1)<>"Y" THEN GOSUB CALC_DISC_APPLIES_TO ELSE F9$="*",GROSS_INV_AMT=GROSS_INV_AMT-X,GROSS_INV_AMT=GROSS_INV_AMT+SPECIAL_AMT_2; GOSUB CALC_DISC_APPLIES_TO; GOSUB CALC_NET_INV_AMT ! GOSUB DISPLAY_DATA
2340 SPECIAL_AMT2_ENTRY_END:GOSUB NUM_TO_STR; EXIT 
2350 SPECIAL_AMT3_ENTRY:GOSUB STR_TO_NUM
2355 X0=7; IF POS(" "<>%F1$((X0-5)*20+8,16))=0 THEN GOTO SPECIAL_AMT3_ENTRY_END
2360 ! CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,19,11+V0,4,922,C0,M0$,"{3"+X$,"","AP2DAA18","","",""
2365 IF SPECIAL_AMT_3>0 THEN GOSUB CALC_DISC_APPLIES_TO
2390 SPECIAL_AMT3_ENTRY_END:GOSUB NUM_TO_STR; EXIT 
2400 SPECIAL_AMT4_ENTRY:GOSUB STR_TO_NUM
2405 X0=8; IF POS(" "<>%F1$((X0-5)*20+8,16))=0 THEN GOTO SPECIAL_AMT4_ENTRY_END
2410 ! CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,19,12+V0,5,922,C0,M0$,"{3"+X$,"","AP2DAA20","","",""
2415 GOSUB CALC_DISC_APPLIES_TO
2440 SPECIAL_AMT4_ENTRY_END:GOSUB NUM_TO_STR; EXIT 
2500 DISC_APPLIES_TO_ENTRY:GOSUB STR_TO_NUM
2510 ! CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,61,8+V0,6,922,C0,M0$,"{3"+X$,"","AP2DAA24","","",""
2525 IF DISC_APPLIES_TO>0 THEN GOSUB LABEL_2
2540 DISC_APPLIES_TO_ENTRY_END:GOSUB NUM_TO_STR; EXIT 
2550 DISC_AMT_ENTRY:GOSUB STR_TO_NUM
2560 ! CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,61,9+V0,7,922,C0,M0$,"{3"+X$,"","AP2DAA26","","",""
2570 IF DISC_AMT>0 THEN GOSUB LABEL_1
2590 DISC_AMT_ENTRY_END:GOSUB NUM_TO_STR; EXIT 
2770 SLSPER_ENTRY:ENTER FIELD$,ERR_MSG$,VAR_TAG$,ERR=*NEXT
2775 IF %F0$(70,1)<>"Y" THEN GOTO SLSPER_ENTRY_END
2780 ! CALL "ZZENTR","SUZ",A{ALL},A$,X4$,X3$,67,14,100,4,C0,"","{3"+X$,"","AP2DAA35","AR3","AR2MBB",""; IF ABS(C0)>4 THEN GOSUB WHOLE_SCREEN; ON C0 GOTO 2780,2781
2785 IF FIELD$>"" THEN FIELD$=PAD(FIELD$,4); AR3=UNT; OPEN (AR3)"AR3"+%C$; FIND (AR3,KEY=FIELD$,DOM=*NEXT); CLOSE (AR3); GOTO SLSPER_ENTRY_END
2786 IF FIELD$>"" THEN ERR_MSG$="NOF"; CLOSE (AR3)
2790 SLSPER_ENTRY_END:EXIT 
2800 REF_NUM_ENTRY:
2810 CALL "ZZENTR","AU",A{ALL},A$,X4$,X3$,27,15+V0,62+K9,10,C0,"P/O","{3"+X$,"","AP2DAA36","","",""
2840 REF_NUM_ENTRY_END:RETURN 
2850 BANK_CODE_ENTRY:
2855 IF F0$(16,1)="N" THEN GOTO 2020
2860 CALL "ZZENTR","SUZ",A{ALL},A$,X4$,X3$,27,17+V0,72+K9,3,C0,"","{3"+X$,"","AP2DAA38","ZYB","ZY2BAA",""; IF ABS(C0)>4 THEN GOSUB WHOLE_SCREEN; ON C0 GOTO 2860,2861
2870 FIND (Z[5],KEY=A$(72+K9,3),DOM=2860)IOL=0350
2875 PRINT @(31,17),E$(4,30),
2880 IF A$(108,3)<>E$(105,3) THEN A$(108,3)=E$(105,3),A[12]=0,A[13]=0; CALL "AP2DAF",X3$,X4$,"D",A$,A{ALL}
2890 BANK_CODE_ENTRY_END:RETURN 
2900 CATEGORY_CODE_ENTRY:
2910 CALL "ZZENTR","A",A{ALL},A$,X4$,X3$,27,18+V0,75+K9,9,C0,"AP2","{3"+X$,"","AP2DAA40","AP3","X",""; IF ABS(C0)=102 THEN J9=4,Q1$="",Z8$="AP2MPF"; RUN "ZZ2STP" ELSE IF ABS(C0)>4 THEN GOSUB WHOLE_SCREEN; ON C0 GOTO 2910,2911
2920 FIND (Z[7],KEY=A$(75+K9,9),DOM=2910)IOL=0370
2925 PRINT @(38,18),G$(10,30),
2940 CATEGORY_CODE_ENTRY_END:RETURN 
3050 INVOICE_HOLD_ENTRY:
3055 IF F9>0 THEN IF A[1]>F9 THEN A$(87,1)="Y"; PRINT @(61,19),A$(87,1),; GOTO 2020
3060 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,61,19+V0,87+K9,1,C0,"","{3"+X$,"","AP2DAA46","","",""
3090 INVOICE_HOLD_ENTRY_END:RETURN 
3150 INVOICE_TYPE_ENTRY:
3155 X$="I-Invoice, R-Return, A-Adjustment, D-Debit Memo, C-Credit Memo"
3160 CALL "ZZENTR","SRXU",A{ALL},A$,X4$,X3$,13,8+V0,89+K9,1,C0,"","{3"+X$,"IRADC","AP2DAA12","","",""
3165 IF I1<>0 THEN IF A$(89+K9,1)="I" THEN GOTO 3150
3190 INVOICE_TYPE_ENTRY_END:RETURN 
3200 APPLIES_TO_ENTRY:
3201 IF A$(89+K9,1)="I" THEN A$(90,10)=""; PRINT @(25,8+V0),A$(90,10),; GOTO 2020 ELSE J$=A$(7,10)
3210 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,26,8+V0,90+K9,10,C0,"","{3"+X$,J$,"AP2DAA13","API","X",""; IF ABS(C0)=102 THEN J9=3,Q1$=A$(7,10),Z8$="AP2API"; RUN "ZZ2STP" ELSE IF ABS(C0)>4 THEN GOSUB WHOLE_SCREEN; ON C0 GOTO 3210,3211
3240 APPLIES_TO_ENTRY_END:RETURN 
3300 ALT_CURR_GROSS_AMT_ENTRY:
3301 IF POS(" "<>A$(108,3))=0 THEN GOTO 2020
3310 CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,61,15,12,922,C0,M0$,"{3"+X$,"","AP2DAA33","","",""
3340 ALT_CURR_GROSS_AMT_ENTRY_END:RETURN 
3350 ALT_CURR_DISC_AMT_ENTRY:
3355 IF POS(" "<>A$(108,3))=0 THEN GOTO 2020
3360 CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,61,16,13,922,C0,M0$,"{3"+X$,"","AP2DAA35","","",""
3390 ALT_CURR_DISC_AMT_ENTRY_END:RETURN 
3400 SECOND_DISC_AMT_ENTRY:
3405 IF F0$(80,1)<>"Y" THEN GOTO SECOND_DISC_AMT_ENTRY_END
3410 CALL "ZZENTR","D",A{ALL},A$,X4$,X3$,61,13+V0,111,6,C0,M0$,"{3"+X$,"","AP2DAA52","","",""
3440 SECOND_DISC_AMT_ENTRY_END:RETURN 
3450 SECOND_DISC_DATE_ENTRY:
3455 IF F0$(80,1)<>"Y" THEN GOTO SECOND_DISC_DATE_ENTRY_END
3460 CALL "ZZENTR","D",A{ALL},A$,X4$,X3$,61,13+V0,111,6,C0,"","{3"+X$,"","AP2DAA52","","",""
3490 SECOND_DISC_DATE_ENTRY_END:RETURN 
6000 BACKGROUND:
6070 IF Z9<0 THEN GOTO 6160
6090 IF F0$(16,1)="Y" THEN PRINT @(1,17+V0),"Print check on bank code:",
6120 FOR X=0 TO 3; IF POS(" "<>F1$(X*20+8,16))=0 THEN NEXT X ELSE PRINT @(0,9+X+V0),F1$(8+X*20,16),":",; NEXT X
6130 IF F0$(70,1)="Y" THEN PRINT @(54,14),"Salesperson:"
6190 BACKGROUND_END:RETURN 
6200 DISPLAY_DATA:
6215 GOSUB DISPLAY_KEYS
6224 FOR X=0 TO 3; IF POS(" "<>F1$(8+X*20,16))=0 THEN NEXT X ELSE PRINT @(19,9+X+V0),A[2+X]:M0$,; NEXT X
6238 CALL "ZZDISP","A",A$(62+K9,10),"P/O",X3$,"","",27,15+V0,X4$
6240 IF F0$(16,1)="Y" THEN PRINT @(27,17+V0),A$(72+K9,3),@(31,17),E$(4,30),
6250 CALL "ZZDISP","A",A$(75+K9,9),"AP2",X3$,"","",27,18+V0,X4$
6270 IF F0$(70,1)="Y" THEN PRINT @(67,14),A$(100,4),
6390 DISPLAY_DATA_END:RETURN 
6400 WHOLE_SCREEN:
6410 GOSUB BACKGROUND
6430 IF Z9>=0 THEN GOSUB DISPLAY_DATA ELSE GOSUB DISPLAY_KEYS
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 WHOLE_SCREEN_END:RETURN 
6450 DISPLAY_KEYS:
6455 IF A$="" THEN GOTO DISPLAY_KEYS_END
6464 CALL "ZZDISP","A",A$(7+K9,10),"A/P",X3$,"","",13,4+V0,X4$
6470 GOSUB PRINT_PE_DATE
6490 DISPLAY_KEYS_END:RETURN 
7300 REM 
7310 ON FPT(C0)*10 GOTO 7390,7325,7330,7390
7325 IF V8$="" THEN X0=X0+4; GOTO 7390 ELSE X0=NUM(V8$(POS(STR(X0:"00")<=V8$,2),2)); GOTO 7390
7330 IF V8$="" THEN X0=X0-6; GOTO 7335 ELSE X0=POS(STR(X0-1:"00")<=V8$,2)-2; IF X0<0 THEN X0=0; GOTO 7390 ELSE X0=NUM(V8$(X0,2)); GOTO 7390
7335 IF X0<0 THEN X0=0; GOTO 7390
7390 C0=3; RETURN 
7500 REM "Return from setup control
7505 C0=0
7510 J8=J9,J9=0; ON J8 GOTO 7590,7515,7520,7525,7530
7515 IF Q1$<>"" THEN A$(7,10)=Q1$,C0=1; GOSUB WHOLE_SCREEN; GOTO 1311 ELSE GOSUB WHOLE_SCREEN; GOTO 1310
7520 IF Q1$<>"" THEN A$(33,2)=Q1$,C0=1; GOSUB WHOLE_SCREEN; GOTO 2211 ELSE GOSUB WHOLE_SCREEN; GOTO 2210
7525 IF LEN(Q1$)>10 THEN A$(90,10)=Q1$(11),C0=1; GOSUB WHOLE_SCREEN; GOTO 3211 ELSE GOSUB WHOLE_SCREEN; GOTO 3210
7530 IF Q1$>"" THEN A$(75,9)=Q1$,C0=1; GOSUB WHOLE_SCREEN; GOTO 2911 ELSE GOSUB WHOLE_SCREEN; GOTO 2910
7590 GOTO 0100
7700 PRINT_PE_DATE:
7720 PRINT @(34,3+V0),"Ending ",FND$(P1$(NUM(A$(5+K9,2))*6+15,6)),
7749 PRINT_PE_DATE_END:RETURN 
7800 COMPUTE_VAT:
7810 IF %F0$(71,1)<>"Y" THEN GOSUB CALC_DISC_APPLIES_TO; GOSUB CALC_DISC_AMT; GOTO COMPUTE_VAT_END
7820 SPECIAL_AMT_2=0; GOSUB CALC_DISC_APPLIES_TO
7830 LABEL_1:IF %F0$(71,1)<>"Y" OR F9$="*" THEN GOTO COMPUTE_VAT_END ELSE GROSS_INV_AMT=GROSS_INV_AMT-SPECIAL_AMT_2,SPECIAL_AMT_2=(GROSS_INV_AMT-DISC_AMT)*NUM(%F0$(72,4))*.0001,GROSS_INV_AMT=GROSS_INV_AMT+SPECIAL_AMT_2; GOSUB CALC_NET_INV_AMT ! GOSUB DISPLAY_DATA
7840 COMPUTE_VAT_END:RETURN 
7850 CALC_DISC_AMT:
7860 IF D$="" THEN DIM D$(100),D[1]; FIND (_AP2,KEY=TERMS_CODE$)IOL=0340
7880 DISC_AMT=DISC_APPLIES_TO*D[0]/100
7882 IF %F0$(80,1)="Y" AND D$(43,1)="P" AND D[1]<>0 THEN DISC_AMT_2ND=DISC_APPLIES_TO*D[1]/100; REM "WO131561, 2nd discount amount
7885 ! IF POR_GATEWAY$<>"Y" THEN PRINT @(61,8+V0),A[6]:M0$,@(61,9+V0),A[7]:M0$,
7886 ! IF F0$(80,1)="Y" THEN PRINT @(19,13+V0),A[14]:M0$
7887 GOSUB LABEL_1
7890 CALC_DISC_AMT_END:RETURN 
7900 CALC_DISC_APPLIES_TO:
7910 DISC_APPLIES_TO=GROSS_INV_AMT
7912 IF C$="" THEN DIM C$(426),C[2]; FIND (_AP4,KEY=VENDOR$)IOL=0330
7914 GOSUB SPECIAL_AMT_ARRAY
7915 FOR X=0 TO 3; IF POS(STR(X+1:"0")=C$(294,5))=0 AND %F1$(25+20*X,1)<>"Y" THEN DISC_APPLIES_TO=DISC_APPLIES_TO-A[2+X]
7918 NEXT X
7920 IF %F0$(79,1)="Y" AND POS("1"=C$(294,5))=0 AND %F1$(25,1)<>"Y" THEN DISC_APPLIES_TO=DISC_APPLIES_TO-LINE_FREIGHT; REM "SSP118375, exclude freight on lines from discount
7935 LABEL_2:GOSUB CALC_DISC_AMT
7950 CALC_NET_INV_AMT:
7955 NET_SALE=GROSS_INV_AMT
7959 GOSUB SPECIAL_AMT_ARRAY
7960 FOR X=0 TO 3; IF %F1$(24+X*20,1)="Y" THEN NET_SALE=NET_SALE-A[2+X]; NEXT X ELSE NEXT X
7965 NET_SALE=NET_SALE-WORKMAN_COMP_WH
7970 IF %F0$(15,1)="L" THEN NET_SALE=NET_SALE-DISC_AMT
7985 ! IF POR_GATEWAY$<>"Y" THEN PRINT @(61,12+V0),A[9]:M0$,
7988 IF NEW_REC$="Y" THEN GOSUB CREATE_APL_REC
7990 CALC_DISC_APPLIES_TO_END:RETURN 
8000 SPECIAL_AMT_ARRAY:
8010 DIM A[14]
8015 A[2]=SPECIAL_AMT_1
8016 A[3]=SPECIAL_AMT_2
8017 A[4]=SPECIAL_AMT_3
8018 A[5]=SPECIAL_AMT_4
8040 SPECIAL_AMT_ARRAY_END:RETURN 
8050 CREATE_APL_REC:
8060 APL=UNT; OPEN (APL)"APL"+%C$
8065 APL_KEY$=FY$+ACCTPD$+VENDOR$+INV_NUM$+"001"
8070 DIM APL[3]; READ (APL,KEY=APL_KEY$,DOM=*NEXT)IOL=APL_IOLIST; IF APL_CREATED$<>"Y" THEN GOTO CREATE_APL_REC_END
8072 IF APL$<>"" THEN GOTO SET_NET_SALE ELSE IF STP(T9$,1)="" THEN GOTO CREATE_APL_REC_END
8075 DIM APL$(150),APL[3]
8080 APL$(1,29)=APL_KEY$,APL$(30,6)=%X3_TODAY$,APL$(36,12)=T9$
8084 SET_NET_SALE: APL[3]=NET_SALE
8085 WRITE (APL,KEY=APL_KEY$)IOL=APL_IOLIST; APL_CREATED$="Y"
8090 CREATE_APL_REC_END:CLOSE (APL); RETURN 
8300 CALC_DUE_DATE:
8305 REM "EXTRA DAYS ADDED TO DUE DATE AT PRINT TIME
8306 IF LEN(D$)<100 THEN DIM D$(100),D[1]; FIND (_AP2,KEY=TERMS_CODE$,DOM=*NEXT)IOL=0340
8310 CALL "ZZDISC",X3$,D$,0,0,PAD(INV_DATE$,6),Q4$,Q2$,0,0
8370 INV_DUE_DATE$=Q4$,DISC_EXPIRE_DATE$=Q2$
8372 IF %F0$(80,1)="Y" AND D$(43,1)="P" AND D$(53,3)<>"   " THEN ORIGINAL_D$=D$,D$(44,3)=D$(53,3),Q2$=""; CALL "ZZDISC",X3$,D$,0,0,INV_DUE_DATE$,Q4$,Q2$,0,0; DISC_DATE_2ND$=Q2$,D$=ORIGINAL_D$; REM "W0131561, 2nd discount expires on date
8375 ! IF POR_GATEWAY$<>"Y" THEN PRINT @(61,7+V0),FND$(A$(35+K9,6)),@(61,10+V0),FND$(A$(41+K9,6)),
8377 ! IF F0$(80,1)="Y" THEN PRINT @(61,13+V0),FND$(A$(111,6)),
8395 CALC_DUE_DATE_END:RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9900
9300 SETESC 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB WHOLE_SCREEN
9520 ON C9 GOTO 1140,2040
9700 REM "PROG FLOW
9710 IF U1$="" THEN REMOVE (Z[6],KEY=U0$,DOM=9900); GOTO 9900
9715 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9720 WRITE (Z[6],KEY=U0$)U0$,U1$
9725 L0=0; PRINT @(0,3),'CE',
9730 RUN U1$(1,6)
9900 REM "END PROGRAM
9910 L0=-1
9920 RUN "AP2DAA"
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 ! DISC_DATE_2ND$=STR(DISC_DATE_2ND)
10030 APD_UNUSED_1$=STR(APD_UNUSED_1)
10040 APE_LINK$=STR(APE_LINK)
10050 GROSS_INV_AMT$=STR(GROSS_INV_AMT)
10060 SPECIAL_AMT_1$=STR(SPECIAL_AMT_1)
10070 SPECIAL_AMT_2$=STR(SPECIAL_AMT_2)
10080 SPECIAL_AMT_3$=STR(SPECIAL_AMT_3)
10090 SPECIAL_AMT_4$=STR(SPECIAL_AMT_4)
10100 DISC_APPLIES_TO$=STR(DISC_APPLIES_TO)
10110 DISC_AMT$=STR(DISC_AMT)
10120 WORKMAN_COMP_WH$=STR(WORKMAN_COMP_WH)
10130 NET_SALE$=STR(NET_SALE)
10140 DAYS_TO_EXTEND_DUE$=STR(DAYS_TO_EXTEND_DUE)
10150 INTERAL_USE$=STR(INTERAL_USE)
10160 ALT_CURR_GROSS_AMT$=STR(ALT_CURR_GROSS_AMT)
10170 ALT_CURR_DISC_AMT$=STR(ALT_CURR_DISC_AMT)
10180 DISC_AMT_2ND$=STR(DISC_AMT_2ND)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 ! _X$="DISC_DATE_2ND",_X=DISC_DATE_2ND.CTL,DISC_DATE_2ND=NUM(DISC_DATE_2ND$,ERR=NON_NUMERIC)
11030 _X$="APD_UNUSED_1",_X=APD_UNUSED_1.CTL,APD_UNUSED_1=NUM(APD_UNUSED_1$,ERR=NON_NUMERIC)
11040 _X$="APE_LINK",_X=APE_LINK.CTL,APE_LINK=NUM(APE_LINK$,ERR=NON_NUMERIC)
11050 _X$="GROSS_INV_AMT",_X=GROSS_INV_AMT.CTL,GROSS_INV_AMT=NUM(GROSS_INV_AMT$,ERR=NON_NUMERIC)
11060 _X$="SPECIAL_AMT_1",_X=SPECIAL_AMT_1.CTL,SPECIAL_AMT_1=NUM(SPECIAL_AMT_1$,ERR=NON_NUMERIC)
11070 _X$="SPECIAL_AMT_2",_X=SPECIAL_AMT_2.CTL,SPECIAL_AMT_2=NUM(SPECIAL_AMT_2$,ERR=NON_NUMERIC)
11080 _X$="SPECIAL_AMT_3",_X=SPECIAL_AMT_3.CTL,SPECIAL_AMT_3=NUM(SPECIAL_AMT_3$,ERR=NON_NUMERIC)
11090 _X$="SPECIAL_AMT_4",_X=SPECIAL_AMT_4.CTL,SPECIAL_AMT_4=NUM(SPECIAL_AMT_4$,ERR=NON_NUMERIC)
11100 _X$="DISC_APPLIES_TO",_X=DISC_APPLIES_TO.CTL,DISC_APPLIES_TO=NUM(DISC_APPLIES_TO$,ERR=NON_NUMERIC)
11110 _X$="DISC_AMT",_X=DISC_AMT.CTL,DISC_AMT=NUM(DISC_AMT$,ERR=NON_NUMERIC)
11120 _X$="WORKMAN_COMP_WH",_X=WORKMAN_COMP_WH.CTL,WORKMAN_COMP_WH=NUM(WORKMAN_COMP_WH$,ERR=NON_NUMERIC)
11130 _X$="NET_SALE",_X=NET_SALE.CTL,NET_SALE=NUM(NET_SALE$,ERR=NON_NUMERIC)
11140 _X$="DAYS_TO_EXTEND_DUE",_X=DAYS_TO_EXTEND_DUE.CTL,DAYS_TO_EXTEND_DUE=NUM(DAYS_TO_EXTEND_DUE$,ERR=NON_NUMERIC)
11150 _X$="INTERAL_USE",_X=INTERAL_USE.CTL,INTERAL_USE=NUM(INTERAL_USE$,ERR=NON_NUMERIC)
11160 _X$="ALT_CURR_GROSS_AMT",_X=ALT_CURR_GROSS_AMT.CTL,ALT_CURR_GROSS_AMT=NUM(ALT_CURR_GROSS_AMT$,ERR=NON_NUMERIC)
11170 _X$="ALT_CURR_DISC_AMT",_X=ALT_CURR_DISC_AMT.CTL,ALT_CURR_DISC_AMT=NUM(ALT_CURR_DISC_AMT$,ERR=NON_NUMERIC)
11180 _X$="DISC_AMT_2ND",_X=DISC_AMT_2ND.CTL,DISC_AMT_2ND=NUM(DISC_AMT_2ND$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
