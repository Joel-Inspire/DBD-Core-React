0010 ! APGATP - Remove ATP REcords
0020 SETESC 9300; SETERR 9000
0035 REM "5.5 - 09/10/07 - 15.989722 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0045 IF NUL(%WDX$) THEN MSGBOX "You must be using Windx to access this program"; GOTO 0075
0050 PROCESS "APGATP","../APG/AP.EN"
0075 IF %GUI=0 THEN RUN "ZMENU" ELSE EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0105 INIT:
0110 X0$="APGATP",X1$="Remove ATP Records"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0550 FIND (Z[13],KEY=X3$(9,3)+"A/P",DOM=5000)AP_PARMS$
0600 REM "
0601 GOSUB GET_FISCAL_YEAR
0602 GOSUB GET_ACCOUNT_PERIOD
0604 REM GOSUB LOAD_END_ACCTPD
0606 REM GOSUB LOAD_START_ACCTPD
0630 RETURN 
0640 IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 0641,9900
0641 PROCEED:
1010 IF MID(AP_PARMS$,82,1)="Y" THEN CALL "UPDATP;REMOVE_RECORDS",X3$,X4$,START_FISCAL$,START_ACCTPD$,END_FISCAL$,END_ACCTPD$; REM SSP 186691                 
5000 REM "EOJ
5010 REM "C=T; GOSUB 8150
5020 ! IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5030 MSGBOX "Process complete!!",MSG("CONFIRMING"),"INFO,TIM=3"
5040 GOTO 9900
6000 REM "BACKGROUND
6001 RETURN 
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(0,4),"This CSI utility program will rebuild the Vendor Sort Files AP1, AP6 and AP7."
6030 PRINT @(0,7),"The Vendor User Defined Fields sort file APF will be rebuilt duiring Phase II."
6165 ! PRINT (0,ERR=6166)'SF',
6190 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 CALL "ZZINFO",FILEE,T9,X3$,T,T0,K,B,D,S0,S1,F$
8115 ML_MESS.CTL'VALUE$="There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",6.2,1,28,T1,T,C
8195 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9901 END_PROC: CMD_STR$="E"
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
30000 ! 
30010 GET_FISCAL_YEAR:
30015 START_FISCAL$=""; END_FISCAL$=""
30020 IF NUL(START_FISCAL$) THEN START_FISCAL$+="    "
30030 IF NUL(END_FISCAL$) THEN END_FISCAL$="~~~~"
30035 REM "GOSUB LOAD_FY
30040 RETURN 
30050 ! 
30060 GET_ACCOUNT_PERIOD:
30065 START_ACCTPD$=""; END_ACCTPD$=""
30070 IF NUL(START_ACCTPD$) THEN START_ACCTPD$+="  "
30080 IF NUL(END_ACCTPD$) THEN END_ACCTPD$="~~"
30090 RETURN 
30100 ! 
40000 LOAD_FY:
40010 ! ONLY_OPEN$="Y" means only load open FY's, TF_MODULE$ can be set to second  part of key for that system parameter record, ie A/P, A/R, I/C            
40020 REM "ONLY_OPEN$="Y"
40030 CUR_FY$="",CUR_ACCTPD$=""; READ (Z[13],KEY=%C$+"A/R",DOM=*NEXT)SYS_PARMS$; CUR_FY$=SYS_PARMS$(7,4),CUR_ACCTPD$=SYS_PARMS$(11,2)
40033 IF NOT(NUL(CR_FY$)) THEN CUR_FY$=CR_FY$; CR_FY$=""
40035 IF NOT(NUL(CR_ACCTPD$)) THEN CUR_ACCTPD$=CR_ACCTPD$; CR_ACCTPD$=""
40040 DIM GL$(300); READ (Z[13],KEY=%C$+"G/L")GL$(1)
40050 DIM OSEC$(255); READ (Z[13],KEY="osec"+%X3_OP_ID$,DOM=*NEXT)OSEC$
40060 READ (Z[13],KEY=%C$+"G/LYE",DOM=*NEXT)
40070 K$=KEY(Z[13],END=LOAD_START_FISCAL_DROP_BOX); READ (Z[13],KEY=K$)GLYE$
40080 IF LEN(K$)<8 OR K$(1,8)<>%C$+"G/LYE" THEN GOTO LOAD_START_FISCAL_DROP_BOX
40090 IF ONLY_OPEN$="Y" AND POS(GLYE$(99,1)="CR")>0 THEN GOTO 40070
40100 IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND K$(9,4)<GL$(34,4) THEN GOTO 40070
40110 CR_FY$=CR_FY$+K$(9,4)+"/"
40120 GOTO 40070
40125 LOAD_FY_END:RETURN 
40130 LOAD_START_FISCAL_DROP_BOX:
40140 DROP_BOX LOAD START_FISCAL.CTL,CR_FY$
40141 DROP_BOX LOAD END_FISCAL.CTL,CR_FY$
40150 DROP_BOX WRITE START_FISCAL.CTL,CUR_FY$
40151 DROP_BOX WRITE END_FISCAL.CTL,CUR_FY$
40160 REM "IF CUR_FY$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_FY$<GL$(34,4) THEN CUR_FY$=GL$(34,4),CUR_ACCTPD$=GL$(38,2)
40170 IF CUR_ACCTPD$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_FY$+CUR_ACCTPD$<GL$(34,6) THEN CUR_ACCTPD$=GL$(38,2) ! Fix for 173826       
40180 IF CUR_FY$<>"" THEN DROP_BOX WRITE FY.CTL,CUR_FY$
40190 CR_FY$=CUR_FY$; %FY$=CR_FY$
40200 IF CUR_FY$<>"" THEN FROM_FY$="Y",CR_FY$=CUR_FY$; GOSUB LOAD_START_ACCTPD; GOSUB LOAD_END_ACCTPD
40205 LOAD_START_FISCAL_DROP_BOX_END:
40220 ! 
40230 LOAD_START_ACCTPD:
40240 ! FY$ should be set to a valid fiscal year                                
40250 CR_ACCTPD$=""; FROM_FY$="Y"
40260 IF FROM_FY$="Y" THEN GOTO 40270
40270 READ (Z[13],KEY=%C$+"G/LYE"+CR_FY$,DOM=LOAD_START_ACCTPD_END)GLYE$
40280 PDS=12; PDS=NUM(GLYE$(13,2),ERR=*NEXT) ! Number of periods in this FY     
40290 FOR X=1 TO PDS
40300 REM "X$=STR(X:"00"),FLAG$="NO"; CALL "ARGDTE",%X3$,%X4$,CR_FY$+X$,FLAG$; IF FLAG$<>"*" THEN CR_ACCTPD$=CR_ACCTPD$+X$+"/" ! Checks osec, only load valid  periods                                                                  
40301 X$=STR(X:"00"); CR_ACCTPD$=CR_ACCTPD$+X$+"/" ! Checks osec, only load valid  periods                                                                  
40310 NEXT X
40325 DROP_BOX LOAD START_ACCTPD.CTL,CR_ACCTPD$
40330 IF FROM_FY$="Y" AND START_ACCTPD$<>"" THEN DROP_BOX WRITE START_ACCTPD.CTL,CUR_ACCTPD$
40340 START_ACCTPD$=CUR_ACCTPD$; REM "%AP$=CR_ACCTPD$
40360 LOAD_START_ACCTPD_END:RETURN 
40370 ! 
50230 LOAD_END_ACCTPD:
50240 ! FY$ should be set to a valid fiscal year                                
50250 CR_ACCTPD$=""; FROM_FY$="Y"
50260 IF FROM_FY$="Y" THEN GOTO 50270
50270 READ (Z[13],KEY=%C$+"G/LYE"+CR_FY$,DOM=LOAD_END_ACCTPD_END)GLYE$
50280 PDS=12; PDS=NUM(GLYE$(13,2),ERR=*NEXT) ! Number of periods in this FY     
50290 FOR X=1 TO PDS
50300 REM "X$=STR(X:"00"),FLAG$="NO"; CALL "ARGDTE",%X3$,%X4$,CR_FY$+X$,FLAG$; IF FLAG$<>"*" THEN CR_ACCTPD$=CR_ACCTPD$+X$+"/" ! Checks osec, only load valid  periods                                                                  
50301 X$=STR(X:"00"); CR_ACCTPD$=CR_ACCTPD$+X$+"/" ! Checks osec, only load valid  periods                                                                  
50310 NEXT X
50325 DROP_BOX LOAD END_ACCTPD.CTL,CR_ACCTPD$
50330 IF FROM_FY$="Y" AND END_ACCTPD$<>"" THEN DROP_BOX WRITE END_ACCTPD.CTL,CUR_ACCTPD$
50340 END_ACCTPD$=CUR_ACCTPD$; %AP$=CR_ACCTPD$
50360 LOAD_END_ACCTPD_END:RETURN 
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
