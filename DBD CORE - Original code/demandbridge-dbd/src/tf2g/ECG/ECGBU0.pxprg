0010 ! ECGBU0 - EC Buyer Setup from Text File
0035 REM "5.7 - 10/06/09 - 14.843055 - dmm - SSP# 233339
0037 REM "233339-DBE:  Orders queued up but not transmitting                 
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ECGBU0","../ECG/EC.EN"
0060 EXIT 
0080 ! Copied from AR2ST0, WO154949, will read a tab delimmited text file of ECA information, each field in ECA will be represented in the file, in the same order as ECA.  Will read files starting with BU1.
0085 ! 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0101 INIT:
0110 X0$="EC3BU0",X1$="EC Buyer Setup from Text File"
0120 DIM Z0$(80,"-")
0195 ! 
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,-1,-1; IF X1>0 THEN GOTO 9920
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0299 ! 
0310 IOLIST ECA$(1,LEN(ECA$)),ECA2$
0320 IOLIST AR1$
0330 IOLIST FM0$
0395 ! 
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0509 ! Slot 10 is used for BU1 file opened in 1000's
0510 Z$="01O ECA... 02O AR1... 03O FM0... 04O FMP... 05O ECG... 06O ECH... 07O ECS... 08O EDA...  09O ASP...  11O ECU...  12O AR2...  13O ZZPARM  14O EDF...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 GOSUB 7900; REM "Create if necessary, open BU_LOG file
0550 DIM EC_PARM$(1024); FIND (Z[13],KEY=X3$(9,3)+"E/C")EC_PARM$
0555 DIM ARPARMS$(300); FIND (Z[13],KEY=X3$(9,3)+"A/R")ARPARMS$
0560 ORDERTYPES$="S RW",EMAIL_ACTIONS$=" O"
0595 ! 
0900 ! Display screen, prompt for file format
0915 GOSUB 6000
0950 DIM FILE_FMT$(2); FILE_FMT$="01",X$="Valid formats: 01"
0952 RETURN 
0955 CALL "ZZENTR","SZ",TMP{ALL},FILE_FMT$,X4$,X3$,34,13,1,2,C0,"","{3"+X$,"","FM2UPA00","","",""; IF ABS(C0)=4 THEN GOTO 9900
0960 IF POS(FILE_FMT$="01",2)=0 THEN CALL "ZZPROM",".4",X3$,S3,"This is not a valid file format, please try again.","","",0; GOTO 0955
0961 GOTO 0981 ! No entry of customer code at this time, will get from the file only
0965 DIM CUST$(10); X$="Customer code for shiptos"
0970 CALL "ZZENTR","AXUF",TMP{ALL},CUST$,X4$,X3$,34,14,1,10,C0,"A/R","{1"+X$,"","AR2MAA00","AR1","",""; IF ABS(C0)=4 THEN GOTO 9900 ELSE IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 0970,0971
0975 DIM AR1$(600); READ (Z[2],KEY=CUST$,DOM=0970)AR1$
0977 DIM FMP$(243); READ (Z[4],KEY="D"+CUST$,DOM=*NEXT)FMP$; REM "Customer default record
0980 PRINT @(46,14),AR1$(11,30),
0990 IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 0991,9900
0992 PROCEED: FILE_FMT$=ML_FORMAT$
0995 ! 
1000 REM "Get list of BU1 files to process
1005 ! Logic copied from FO2UBA
1010 CALL "ZZ2BLS","D0:BU1*","S",F$
1012 IF X3$(77,1)="U" THEN CALL "ZZ2BLS","D0:bu1*","S",F_LOWER$; F$=F$+F_LOWER$
1015 P=POS(":"=F$); IF P=0 THEN GOTO 5000
1020 F1$=F$(P+1); P1=POS(":"=F1$); IF P1>0 THEN F$=F1$(P1-2),F1$=F1$(1,P1-3) ELSE F$=""
1050 Z$="10CU 10O "+F1$+" "
1055 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 1056,1995
1060 CLOSE (Z[10]); OPEN LOCK (Z[10],OPT="TEXT")F1$; REM "Open for reading raw file
1065 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
1075 IF Q1$<>"G" THEN PRINT @(15,15),'CE',"Processing: "+F1$,
1080 IF Q1$<>"G" THEN GOSUB 8100; GOSUB 8150
1085 ! L0=227 ! Length of file format 01 records, change accordingly as file formats are added. For BU1, file will be tab delimited, no check for length of record needed.
1095 ! 
1100 REM "Process the file
1105 I9=0,RECORD$="",RCOUNT$=""; DIM RCOUNT[50]
1110 DIM RECORD$[1:100]; READ (Z[10],END=7750)IOL=CPL("IOLIST RECORD$[ALL]:[STR($09$)]")
1112 IF FILE_FMT$="01" THEN IF STP(CVS(RECORD$[1],16),3)="" OR MID(RECORD$[1],1,5)="Buyer" OR STP(RECORD$[1],3)="" THEN GOTO 1110 ! If first five characters indicate this is the headings, then read next record.
1113 I9=I9+1
1115 P=POS("BU1"=RCOUNT$,3); IF P=0 THEN RCOUNT$=RCOUNT$+"BU1"; GOTO 1115; REM "Used to write to /usr/lib/pvx/BU_LOG
1120 P1=(P+2)/3; RCOUNT[P1]=RCOUNT[P1]+1
1125 IF Q1$<>"G" THEN IF MOD(I9,T0)=1 THEN GOSUB 8150
1130 REM PRINT @(0,3),'CE',@(0,4),RECORD$; INPUT *
1145 ! IF LEN(RECORD$)<L0 THEN I9$=RECORD$; DIM RECORD$(L0); RECORD$(1)=I9$; REM "Correct length if short
1195 ! 
1500 REM "Process RECORD$[ALL]
1510 DIM ECA$(1540); RET_CODE=0,MESSAGE$="" ! SSP#226848
1520 ON POS(FILE_FMT$="01") GOTO TYPE_NOT_FOUND,PROCESS_FILE_01
1530 GOTO 9900
1595 ! 
1900 REM "End of file
1901 REM "Close & Rename to BU4 for archiving. Erase an existing BU4 file, if same name
1905 Z$="10CU"+F1$+" "
1906 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
1910 F2$=F1$; IF F2$ LIKE "[Bb][Uu]1*" THEN F2$(1,3)="BU4" ELSE GOTO 1995
1915 ERASE F2$,ERR=1916
1919 REM "Get disk DIRectory of data files
1925 J$=%DATAPATH$
1930 REM "Move the file
1936 ORIGINAL$=J$+DLM+F1$,ARCHIVE$=J$+DLM+F2$; RENAME ORIGINAL$,ARCHIVE$,ERR=*NEXT
1995 GOTO 1015
1999 ! 
2000 TYPE_NOT_FOUND:REM "Record type sent in not found
2010 MESSAGE$="File layout format "+FILE_FMT$+" not found, can't process."
2015 GOSUB PRINT_MSG
2090 TYPE_NOT_FOUND_END:GOTO 9900
2099 ! 
2100 PROCESS_FILE_01:REM "Process file format 01 record (WO154949/377)
2110 KEY$=PAD(RECORD$[1],15)
2115 READ (Z[1],KEY=KEY$,DOM=*NEXT)ECA$; GOTO FOUND_DUPLICATE
2120 ECA$(1,15)=RECORD$[1],ECA$(16,35)=RECORD$[2] ! Buyer ID, Buyer Name
2125 DIM AR1$(599),ECS$(1000),FMPD$(500); ECA$(51,10)=RECORD$[3]; READ (Z[2],KEY=ECA$(51,10),DOM=*NEXT)IOL=0320; GOSUB CUSTOMER_READS; GOTO 2135 ! Customer!SSP#226848
2130 GOTO INVALID_CUSTOMER
2135 DIM FM0$(618); IF NUL(RECORD$[4]) THEN ECA$(92,1)="N"; GOTO 2145 ELSE READ (Z[3],KEY="C"+ECA$(51,10)+RECORD$[4],DOM=*NEXT)IOL=0330; ECA$(61,4)=RECORD$[4]; GOTO 2145 ! Shipto
2140 GOTO INVALID_SHIPTO
2145 ECA$(480,3)=X3$(9,3),ECA$(80,3)="060",ECA$(253,1)="Y" ! TopForm company, sessions expires after minutes, emails converted to 60 chars
2160 GOSUB FILE_01_CREATE
2180 FILE_01_PROCESSED:
2190 PROCESS_FILE_01_END:GOTO 1110
2199 ! 
2200 FILE_01_UPDATE:REM "Existing record, no updating at this time, will leave this area in for the future, see AR2ST0 for an example
2240 FILE_01_UPDATE_END:RETURN 
2245 ! 
2300 FILE_01_CREATE:REM "Create new ECA record
2310 WRITE (Z[1],KEY=ECA$(1,15),DOM=FOUND_DUPLICATE)IOL=0310
2315 EXTRACT (Z[1],KEY=ECA$(1,15))IOL=0310
2320 ECA$(65,15)=RECORD$[5] ! Password
2325 IF NOT(NUL(RECORD$[6])) THEN ECA$(80,3)=STR(NUM(RECORD$[6],ERR=*NEXT):"000") ! Session expires after minutes
2330 ! Buyer type [7] see 2620
2335 ECA$(86,1)="N"; IF RECORD$[8] LIKE "[Yy]" THEN ECA$(86,1)="Y" ! Super user for secore codes
2340 ECA$(87,1)="N"; IF ECS$(586,1)="Y" THEN IF RECORD$[9] LIKE "[Yy]" THEN ECA$(87,1)="Y" ! ignore maximum limits
2345 ECA$(88,1)="Y"; IF RECORD$[10] LIKE "[Nn]" THEN ECA$(88,1)="N" ! Buyer can do order entry
2350 ! Buyer can purchase (no display) [11]
2355 ! Buyer can approve (no display) [12]
2360 ! Buyer can administer (no display) [13]
2365 ECA$(92,1)="N"; IF NOT(NUL(ECA$(61,4))) THEN IF RECORD$[14] LIKE "[Yy]" THEN ECA$(92,1)="Y" ! Order status by identified cust location
2370 ! Order entry types (no display) [15]
2375 ECA$(97,4)=UCS(RECORD$[16]) ! order status types
2376 FOR X=0 TO 4; IF POS(ECA$(97+X,1)=ORDERTYPES$)=0 THEN ECA$(97+X,1)=" " ELSE NEXT X
2380 ! Purchase status types (no display) [17]
2385 ! Approve status (no display) [18]
2390 ECA$(109,60)=RECORD$[19] ! Buyer email address
2395 ECA$(169,60)=RECORD$[20] ! Purchasing agent email address
2400 IF ECS$(586,1)="Y" THEN IF NOT(NUL(RECORD$[21])) THEN ECA$(229,4)=STR(NUM(RECORD$[21])) ! % usage (no display)
2405 IF LEN(RECORD$[22])>20 THEN ECA$(233,20)=RECORD$[22](1,20),ECA$(898,40)=RECORD$[22](21) ELSE ECA$(233,20)=RECORD$[22] ! Secure forms allowed
2410 ! Emails converted to 60 char, already set to Y, no change [23]
2415 ! Credit card required for purchase [24] See 2615-16
2420 ! Unused [25]  
2425 IF NOT(NUL(ECA$(109,60))) THEN ECA$(256,10)=UCS(RECORD$[26]),ESTART=255; GOSUB TEST_EMAIL_ACTIONS ! Buyer email actions
2430 IF NOT(NUL(ECA$(169,60))) THEN ECA$(266,10)=UCS(RECORD$[27]),ESTART=265; GOSUB TEST_EMAIL_ACTIONS ! Purchasing agent email actions
2435 ECA$(276,15)=RECORD$[28] ! Buyer template code
2440 ! Default customer PO - Not used ? [29]
2445 ! Show price in product catalog - Not used? [30]
2450 ECA$(307,15)=UCS(RECORD$[31]) ! Default customer PO
2455 ECA$(322,1)=ECS$(41,1); IF RECORD$[32] LIKE "[YyNn]" THEN ECA$(322,1)=UCS(RECORD$[32]) ! Show price in product catalog
2460 ! Employee login (no display) [33]
2465 ECA$(324,1)="N"; IF RECORD$[34] LIKE "[Yy]" THEN ECA$(324,1)="Y" ! WebEC administrator
2470 IF ECA$(1,7)="DEFAULT" THEN GOTO 2475 ! EC catalog ID
2471 ECA$(325,10)=UCS(RECORD$[35]); READ (Z[8],KEY=ECA$(325,10),DOM=*NEXT)EDA$; ECA$(626,10)=ECA$(325,10); GOTO 2475
2472 EXITTO INVALID_CATALOG
2475 ! Unused [36]
2480 IF NUL(RECORD$[37]) THEN ECA$(336,2)=EC_PARM$(431,2) ELSE ECA$(336,2)=UCS(RECORD$[37]) ! user defined order status sort default
2481 ! IF NOT(NUL(ECA$(336,2))) THEN SORTPOS=POS(ECA$(336,2)="H1H2H3L1L2L3",2); IF SORTPOS=0 THEN ECA$(336,2)=DIM(2) ELSE SORTPOS=INT(SORTPOS/2); IF NUL(ECS$(SORTPOS*10+172,10)) THEN ECA$(336,2)=DIM(2)
2485 ECA$(338,1)="N"; IF RECORD$[38] LIKE "[Yy]" THEN ECA$(338,1)="Y" ! Testing operator
2490 ECA$(339,1)="N"; IF FMPD$(24,1)="Y" THEN IF RECORD$[39] LIKE "[Yy]" THEN ECA$(339,1)="Y" ! Only show active forms
2495 ECA$(340,60)=RECORD$[40]; IF NUL(ECA$(340,60)) THEN ECA$(340,60)=ECS$(42,60),ECA$(460,10)=ECS$(102,10) ! CSR email address
2500 ECA$(400,60)=RECORD$[41]; IF NUL(ECA$(400,60)) THEN ECA$(400,60)=ECS$(384,60),ECA$(470,10)=ECS$(444,10) ! Salesperson email address
2505 IF NOT(NUL(ECA$(340,60))) THEN ECA$(460,10)=UCS(RECORD$[42]); IF NUL(ECA$(460,10)) THEN ECA$(460,10)=ECS$(102,5) END_IF ; ESTART=459; GOSUB TEST_EMAIL_ACTIONS ! CSR email actions
2510 IF NOT(NUL(ECA$(400,60))) THEN ECA$(470,10)=UCS(RECORD$[43]); IF NUL(ECA$(470,10)) THEN ECA$(470,10)=ECS$(107,5) END_IF ; ESTART=469; GOSUB TEST_EMAIL_ACTIONS ! Salesperson email actions
2515 IF NOT(NUL(RECORD$[44])) THEN ECA$(480,3)=RECORD$[44] ! TopForm company
2520 IF ECA$(339,1)<>"Y" THEN GOTO 2525 ELSE ECA$(483,10)=UCS(RECORD$[45]); IF NUL(ECA$(483,10)) THEN IF NUL(ECA$(61,4)) THEN EXITTO MISSING_CATEGORY ELSE GOTO 2525 ! Active item category
2521 FIND (Z[5],KEY=ECA$(483,10),DOM=*NEXT)ECG$; GOTO 2525
2522 EXITTO INVALID_CATEGORY
2525 IF ARPARMS$(130,1)<>"Y" OR (NUL(RECORD$[46])) THEN GOTO 2530 ELSE ECA$(493,4)=UCS(RECORD$[46]); READ (Z[9],KEY=ECA$(493,4),DOM=*NEXT); GOTO 2530 ! Credit card type
2526 EXITTO INVALID_CC_TYPE
2530 IF ARPARMS$(130,1)="Y" AND NOT(NUL(ECA$(493,4))) THEN ECA$(497,20)=RECORD$[47] ! Credit card number
2535 IF ARPARMS$(130,1)="Y" AND NOT(NUL(ECA$(493,4))) THEN ECA$(517,4)=RECORD$[48] ! Credit card expiration date
2540 IF ARPARMS$(130,1)="Y" AND NOT(NUL(ECA$(493,4))) THEN ECA$(521,40)=RECORD$[49] ! Name on credit card
2545 ECA$(561,30)=RECORD$[50] ! Default attention
2550 ECA$(591,35)=RECORD$[51] ! Default mark for
2555 IF NUL(RECORD$[52]) THEN ECA$(626,10)=ECA$(325,10); GOTO 2560 ! Multi catalog 1
2556 ECA$(626,10)=UCS(RECORD$[52]),CAT=626; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="1 "+RECORD$[52]; EXITTO INVALID_MULTI_CATALOG ELSE ECA$(325,10)=ECA$(626,10)
2560 IF NOT(NUL(RECORD$[53])) THEN ECA$(636,10)=UCS(RECORD$[53]),CAT=636; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="2 "+RECORD$[53]; EXITTO INVALID_MULTI_CATALOG ! Multi catalog 2
2565 IF NOT(NUL(RECORD$[54])) THEN ECA$(646,10)=UCS(RECORD$[54]),CAT=646; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="3 "+RECORD$[54]; EXITTO INVALID_MULTI_CATALOG ! Multi catalog 3
2570 IF NOT(NUL(RECORD$[55])) THEN ECA$(656,10)=UCS(RECORD$[55]),CAT=656; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="4 "+RECORD$[55]; EXITTO INVALID_MULTI_CATALOG ! Multi catalog 4
2575 IF NOT(NUL(RECORD$[56])) THEN ECA$(666,10)=UCS(RECORD$[56]),CAT=666; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="5 "+RECORD$[56]; EXITTO INVALID_MULTI_CATALOG ! Multi catalog 5
2580 IF NOT(NUL(RECORD$[57])) THEN ECA$(676,10)=UCS(RECORD$[57]),CAT=676; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="6 "+RECORD$[57]; EXITTO INVALID_MULTI_CATALOG ! Multi catalog 6
2585 IF NOT(NUL(RECORD$[58])) THEN ECA$(686,10)=UCS(RECORD$[58]),CAT=686; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="7 "+RECORD$[58]; EXITTO INVALID_MULTI_CATALOG ! Multi catalog 7
2590 IF NOT(NUL(RECORD$[59])) THEN ECA$(696,10)=UCS(RECORD$[59]),CAT=696; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="8 "+RECORD$[59]; EXITTO INVALID_MULTI_CATALOG ! Multi catalog 8
2595 IF NOT(NUL(RECORD$[60])) THEN ECA$(706,10)=UCS(RECORD$[60]),CAT=706; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="9 "+RECORD$[60]; EXITTO INVALID_MULTI_CATALOG ! Multi catalog 9
2600 IF NOT(NUL(RECORD$[61])) THEN ECA$(716,10)=UCS(RECORD$[61]),CAT=716; GOSUB CHECK_CATALOG; IF CATVALID$<>"Y" THEN CATALOG_NUM$="10 "+RECORD$[61]; EXITTO INVALID_MULTI_CATALOG ! Multi catalog 10
2605 IF ECA$(61,4)<>DIM(4) OR NUL(RECORD$[62]) THEN GOTO 2610 ! Shipto ddl cost center
2606 ECA$(726,9)=UCS(RECORD$[62]); FIND (Z[4],KEY="c"+ECA$(51,10)+ECA$(726,9),DOM=*NEXT); GOTO 2610
2607 EXITTO INVALID_COST_CENTER
2610 IF NUL(RECORD$[63]) THEN GOTO 2615 ELSE ECA$(735,10)=RECORD$[63]; IF ECA$(735,8)<>"SHIP_VIA" THEN EXITTO INVALID_SV_CODESET ELSE READ (Z[11],KEY=ECA$(735,10),DOM=*NEXT); GOTO 2615 ! Shipvia code set
2611 EXITTO INVALID_SV_CODESET
2615 ECA$(254,1)="N"; IF ARPARMS$(130,1)<>"Y" THEN GOTO 2620 ELSE DIM AR2$(100); FIND (Z[12],KEY=AR1$(359,2),DOM=*NEXT)AR2$ ! Credit card required
2616 IF AR2$(57,1)<>"Y" THEN GOTO 2620 ELSE ECA$(254,1)="Y"; IF RECORD$[24] LIKE "[Nn]" THEN ECA$(254,1)=UCS(RECORD$[24])
2620 IF NUL(RECORD$[7]) THEN GOTO 2625 ELSE ECA$(83,3)=UCS(RECORD$[7]); IF FN%NMV(ECA$(83,3))=1 THEN ECA$(83,3)=STR(NUM(ECA$(83,3)):"000") END_IF ; FIND (Z[14],KEY=ECA$(83,3),DOM=*NEXT); GOTO 2625
2621 EXITTO INVALID_BUYER_TYPE
2625 ECA$(745,35)=RECORD$[64] ! Bill to name override
2630 ECA$(780,30)=RECORD$[65] ! Bill to address 1 override
2635 ECA$(810,30)=RECORD$[66] ! Bill to address 2 override
2640 ECA$(840,16)=RECORD$[67] ! Bill to city override
2645 ECA$(856,2)=UCS(RECORD$[68]) ! Bill to state override
2650 ECA$(858,9)=UCS(RECORD$[69]) ! Bill to zip override
2655 ECA$(867,1)="N"; IF RECORD$[70] LIKE "[Yy]" THEN ECA$(867,1)=UCS(RECORD$[70]) ! Can approve orders
2660 ! ECA$(868,1)="N"; IF RECORD$[71] LIKE "[Yy]" THEN ECA$(868,1)=UCS(RECORD$[71]) ! Ignore approval criteria
2665 ! IF ECA$(868,1)="Y" THEN GOTO 2670 ELSE ECA$(869,15)=RECORD$[72]; DIM BUYER$(1200); READ (Z[1],KEY=ECA$(869,15),DOM=*NEXT)BUYER$; GOTO 2667 ! Buyers ID
2666 ! EXITTO INVALID_APPROVAL_BUYER
2667 ! IF ECA$(869,15)=ECA$(1,15) THEN EXITTO INVALID_APPROVAL_BUYER
2668 ! IF BUYER$(51,10)<>ECA$(51,10) THEN EXITTO INVALID_APPROVAL_BUYER
2670 ! Unused [73]
2675 ! Unused [74]
2680 ! Available web category string [75]
2975 GOSUB WRITE_RECORDS
2990 FILE_01_CREATE_END:RETURN 
2999 ! 
4100 WRITE_RECORDS:
4110 WRITE (Z[1],KEY=ECA$(1,15))IOL=0310
4115 DIM OPTIONS$(50); OPTIONS$(1,1)="N"
4120 IF ECA$(61,4)=DIM(4) THEN OPTIONS$(16,1)="Y"
4125 CALL "EC3UT4",X3$,X4$,ECA$(1,15),CATEGORIES$,OPTIONS$
4130 ECA2$=CATEGORIES$
4135 WRITE (Z[1],KEY=ECA$(1,15))IOL=0310
4145 WRITE_RECORDS_END:RETURN 
4199 ! 
5000 REM "EOJ 
5020 MSGBOX "Process complete",MSG("CONFIRMING"),"!,TIM=4"
5040 RETURN 
5099 ! 
6000 REM "BACKGROUND
6001 RETURN 
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(12,4),"This program will read the BU1 text file in the format",@(12,5),"entered below, then for each record read,",
6025 PRINT @(12,6),"a new EC buyer record will be created.  If a ",@(12,7),"duplicate is encountered, or an invalid customer",@(12,8),"code or shipto code is encountered, a message will be ",@(12,9),"written to the BU_LOG file and the ECA record will not",@(12,10),"be created."
6050 PRINT @(12,13),"BU1 text file format:",
6060 ! PRINT @(19,14),"Customer Code:",
6165 PRINT (0,ERR=6066)'SF',
6190 RETURN 
6195 ! 
6200 REM "Display data
6210 GOSUB 6450
6295 RETURN 
6299 ! 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6458 PRINT @(34,13),FILE_FMT$(1,2),
6460 ! CALL "ZZDISP","A",CUST$(1,10),"A/R",X3$,"","",34,14,X4$
6490 RETURN 
6499 ! 
7500 FOUND_DUPLICATE:
7510 MESSAGE$="Duplicate record.  Buyer ID "+STP(RECORD$[1],1)+", Buyer Name "+STP(RECORD$[2],1)
7520 GOSUB PRINT_MSG
7530 ! SSP233339, this was removing a valid buyer record REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
7540 FOUND_DUPLICATE_END:GOTO 1110
7545 ! 
7550 INVALID_CUSTOMER:
7560 MESSAGE$="Invalid customer code.  Buyer ID "+STP(RECORD$[1],1)+", Customer Code "+STP(RECORD$[3],1)
7570 GOSUB PRINT_MSG
7580 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
7590 INVALID_CUSTOMER_END:GOTO 1110
7595 ! 
7600 INVALID_SHIPTO:
7610 MESSAGE$="Invalid shipto code.  Buyer ID "+STP(RECORD$[1],1)+", Shipto Code "+STP(RECORD$[4],1)
7620 GOSUB PRINT_MSG
7630 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
7640 INVALID_SHIPTO_END:GOTO 1110
7645 ! 
7650 CUSTOMER_READS:
7660 READ (Z[7],KEY=ECA$(51,10),DOM=*NEXT)ECS$
7670 READ (Z[4],KEY="D"+ECA$(51,10),DOM=*NEXT)FMPD$
7690 CUSTOMER_READS_END:RETURN 
7695 ! 
7700 TEST_EMAIL_ACTIONS:
7710 FOR X=1 TO 10
7720 IF POS(ECA$(X+ESTART,1)=EMAIL_ACTIONS$)=0 THEN ECA$(X+ESTART,1)=" "
7730 NEXT X
7740 TEST_EMAIL_ACTIONS_END:RETURN 
7745 ! 
7750 REM "End of file
7752 IF LEN(RCOUNT$)<=0 THEN GOTO 7795
7755 FOR X=1 TO LEN(RCOUNT$)-2 STEP 3
7756 S$="BU1|STAT|"+FN%CDS$+"|"+X3$(40,3)+"|"+X3$(9,3)+"|"+FID(0)+"|"+F1$+"|"+RCOUNT$(X,3)+"|"+STR(RCOUNT[(X+2)/3]:"0000")
7758 PRINT (14)S$
7759 NEXT X
7795 GOTO 1900
7799 ! 
7800 INVALID_CATALOG:
7810 MESSAGE$="Invalid catalog.  Buyer ID "+STP(RECORD$[1],1)+", Catalog ID  "+STP(RECORD$[35],1)
7820 GOSUB PRINT_MSG
7830 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
7840 INVALID_CATALOG_END:GOTO 1110
7845 ! 
7850 MISSING_CATEGORY:
7860 MESSAGE$="Missing category.  Buyer ID "+STP(RECORD$[1],1)+", active category is blank and shipto is blank."
7870 GOSUB PRINT_MSG
7880 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
7890 MISSING_CATEGORY_END:GOTO 1110
7895 ! 
7900 REM "Open BU_LOG file, create if not there
7910 CLOSE (14); OPEN LOCK (14,ERR=*NEXT)"BU_LOG"; GOTO 7940
7915 IF ERR=12 THEN SERIAL "BU_LOG"; GOTO 7910
7920 MSGBOX "Log file could not be opened,"+SEP+SEP+"please contact Demandbridge Support.",MSG("WARNING"),"STOP,TIM=8"; CMD_STR$="E"; EXITTO 9900
7940 RETURN 
7949 ! 
7950 PRINT_MSG:
7960 PRINT (14)MESSAGE$
7990 PRINT_MSG_END:RETURN 
7995 ! 
8000 INVALID_CATEGORY:
8010 MESSAGE$="Invalid category.  Buyer ID "+STP(RECORD$[1],1)+", Active category "+STP(RECORD$[45],1)
8020 GOSUB PRINT_MSG
8030 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
8040 INVALID_CATEGORY_END:GOTO 1110
8045 ! 
8050 INVALID_CC_TYPE:
8060 MESSAGE$="Invalid credit card type.  Buyer ID "+STP(RECORD$[1],1)+", type "+STP(RECORD$[46],1)
8070 GOSUB PRINT_MSG
8080 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
8090 INVALID_CC_TYPE_END:GOTO 1110
8095 ! 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8107 T=0
8113 CALL "ZZ2FNC;SERIALRECCNT",Z[10],T
8115 PRINT @(0,11),"There are "+STR(T)+" records to process"
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8135 T1=0
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,I9
8195 RETURN 
8199 ! 
8200 CHECK_CATALOG:
8205 CATVALID$="Y"
8210 CAT$=ECA$(CAT,10); IF CAT$=DIM(10) THEN GOTO CHECK_CATALOG_END
8215 FIND (Z[8],KEY=CAT$,DOM=*NEXT); GOTO 8225
8220 CATVALID$="N"; GOTO CHECK_CATALOG_END
8225 FOR CC=0 TO 9
8230 CCINDEX=CC*10+626; IF CCINDEX=CAT THEN GOTO 8240
8235 IF ECA$(CCINDEX,10)=ECA$(CAT,10) THEN CATVALID$="N"
8240 NEXT CC
8245 CHECK_CATALOG_END:RETURN 
8249 ! 
8250 INVALID_MULTI_CATALOG:
8260 MESSAGE$="Invalid or duplicate catalog.  Buyer ID "+STP(RECORD$[1],1)+", Multi catalog "+CATALOG_NUM$
8270 GOSUB PRINT_MSG
8280 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
8290 INVALID_MULTI_CATALOG_END:GOTO 1110
8295 ! 
8300 INVALID_COST_CENTER:
8310 MESSAGE$="Invalid shipto ddl cost center.  Buyer ID "+STP(RECORD$[1],1)+", cost center "+STP(RECORD$[62],1)
8320 GOSUB PRINT_MSG
8330 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
8340 INVALID_COST_CENTER_END:GOTO 1110
8345 ! 
8350 INVALID_SV_CODESET:
8360 MESSAGE$="Invalid shipvia code set.  Buyer ID "+STP(RECORD$[1],1)+", code set "+STP(RECORD$[63],1)
8370 GOSUB PRINT_MSG
8380 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
8390 INVALID_SV_CODESET_END:GOTO 1110
8395 ! 
8400 INVALID_BUYER_TYPE:
8410 MESSAGE$="Invalid buyer type.  Buyer ID "+STP(RECORD$[1],1)+", buyer type "+STP(RECORD$[7],1)
8420 GOSUB PRINT_MSG
8430 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
8440 INVALID_BUYER_TYPE_END:GOTO 1110
8445 ! 
8450 INVALID_APPROVAL_BUYER:
8460 MESSAGE$="Invalid approval buyer.  Buyer ID "+STP(RECORD$[1],1)+", approval buyer ID "+STP(RECORD$[72],1)
8470 GOSUB PRINT_MSG
8480 REMOVE (Z[1],KEY=ECA$(1,15),DOM=*NEXT)
8490 INVALID_APPROVAL_BUYER_END:GOTO 1110
8495 ! 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "End
9905 END_PROC:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 CLOSE (14)
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 BEGIN ; SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM "226848-File Structure & Documentation for EC Buyer Upload          
56002 ! 233339-Duplicates are removed, should just be ignored
