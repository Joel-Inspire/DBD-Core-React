0010 ! EGCUT3 - WebEC Catalog Category Change Utility
0035 REM "5.7 - 09/17/20 - 9.448888 - crg - SSP# 000001
0037 REM "DBSPT-100133 - ERR 47 clicking on folder tabs with blank catalog
0040 REM "Copyright 2020 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ECGUT3","../ECG/EC.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 ! 
0130 X0$="EC3UT3",X1$="WebEC Catalog Category Change Utility"
0140 ! 
0150 X0=-1,X2=-1
0160 CALL "ZZCOMP",X0$,X11$,X2$,X3$,X4$,X5$,X0,X1,X2; IF X1>0 THEN CMD_STR$="END"; EXIT 
0170 ! 
0190 DIM Z[NUM(X3$(60,3))],ECQ[12]
0200 ! Files
0210 Z$="01O ECQ...  02O EDA...  03O ECG...  05O FMP...  06O ZZPARM  07O ECH...  08O FM1...  10O ECR...  11O IC1...  12O ECI...  15O EDH...  16O IC0...  17O EDK...  18O EDR...  19O EE1...  "
0220 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
0300 ! IOList Section
0310 IOLIST ECQ$
0320 IOLIST EDA$
0330 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0340 IOLIST IC1$,IC1[0],IC1[1],IC1[2],IC1[3],IC1[4],IC1[5],IC1[6],IC1[7],IC1[8],IC1[9],IC1[10],IC1[11],IC1[12],IC1[13],IC1[14],IC1[15],IC1[16],IC1[17],IC1[18],IC1[19],IC1[20]
0350 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0360 IOLIST EDK$
0390 IOLIST EE1$,EE1_2$
0400 ! System Parameters
0410 GOSUB GET_SYS_PARAM
0430 CALL "*wingrp;disable",FIELDS.GRP$; ENABLE_FLG=0
0440 ! 
0450 %FORM_IMG_1$=STP(ECPARM$(261,10))+":"; %FORM_IMG_2$=STP(ECPARM$(271,10))+":"; %FORM_IMG_3$=STP(ECPARM$(281,10))+":"
0460 %FORM_IMG_4$=STP(ECPARM$(291,10))+":"; %FORM_IMG_5$=STP(ECPARM$(301,10))+":"
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0550 ! 
0790 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! READ RECORD
1010 FIND_REC:
1012 ! IF _EOM$=$00$ THEN RETURN 
1013 IF _EOM$=$00$ AND STP(CATALOG_ID$)="" THEN RETURN 
1015 ! IF STP(CATALOG_ID$)="" THEN NEXT_ID=CATALOG_ID.CTL; RETURN 
1018 GOSUB FORMAT_CODE
1020 KEY_1$=CATALOG_ID$
1030 FIND (Z[1],KEY=KEY_1$,DOM=TERM_MSG)IOL=0310; TF_TYPE$="ACCESS"; GOSUB LOG_ACTIVITY
1040 GOSUB GET_EDA
1045 GOSUB SET_PARM
1050 GOSUB LOAD_INFO
1060 CALL "*wingrp;Enable",BUTTONS.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; ENABLE_FLG=1
1070 B_ECQ$=ECQ$
1075 NEXT_ID=SOURCE_TF_CUSTOMER.CTL
1185 REFRESH_FLG=1
1190 RETURN 
1300 ! FORMAT CATALOG CODE
1310 FORMAT_CODE:
1320 IF NUL(CATALOG_ID$) THEN RETURN 
1330 XX=NUM(CATALOG_ID$,ERR=*NEXT); CATALOG_ID$=PAD(CATALOG_ID$,10,0,"0"); GOTO 1380
1340 CATALOG_ID$=PAD(CATALOG_ID$,10,1," ")
1380 REFRESH_FLG=1
1390 RETURN 
1500 ! Write Record
1510 WRITE_REC:
1540 WRITE (Z[1],KEY=KEY_1$)IOL=0310; TF_TYPE$="WRITE"; GOSUB LOG_ACTIVITY
1550 ! MSGBOX "Record Updated!","FYI","!"
1551 GOSUB CLEAR_REC
1580 B_ECQ$=ECQ$
1590 RETURN 
2000 ! Load Information
2010 LOAD_INFO:
2013 IF NUL(ECQ$) THEN RETURN 
2015 CATALOG_ID$=ECQ$(1,10); SOURCE_TF_CUSTOMER$=ECQ$(45,10)
2020 INITIAL_CATALOG_LOAD$=ECQ$(11,1); DATE_LAST_UPDATED$=ECQ$(110,6); CATEGORY_SOURCE$=ECQ$(15,1); IF CATEGORY_SOURCE$="E" THEN GOSUB CAT_S_LOAD ! SSP 197316
2030 CLEAR_CAT_THIS_CUST$=ECQ$(44,1); WEB_CAT_ITEM_CDE_SRC$=ECQ$(55,1); CLEAR_AFTER_UPDATE$=ECQ$(109,1)
2035 IF MID(EDA$,41,1)="S" THEN WEB_CAT_ITEM_CDE_SRC$=" "
2040 FILT_ITEM_W_CIC_CODE$=ECQ$(16,1); FILT_ITEMS_FLAG_FMS$=ECQ$(17,1); FILT_ITEM_FMS_PRICE$=ECQ$(18,1)
2050 FILT_EXCL_ITEM_STOCK$=ECQ$(43,1); INVTRY_LOAD_ITEM_TYP$=ECQ$(108,1)
2060 FUNCTION_FIELD_VALUE_1$=ECQ$(116,12); FUNCTION_FIELD_VALUE_2$=ECQ$(128,12); FUNCTION_FIELD_VALUE_3$=ECQ$(140,12); FUNCTION_FIELD_VALUE_4$=ECQ$(152,12)
2070 FUNCTION_FIELD_VALUE_5$=ECQ$(254,12); FUNCTION_FIELD_VALUE_6$=ECQ$(266,12); FUNCTION_FIELD_VALUE_7$=ECQ$(278,12); FUNCTION_FIELD_VALUE_8$=ECQ$(290,12)
2080 FUNCTION_FIELD_VALUE_9$=ECQ$(302,12); FUNCTION_FIELD_VALUE_10$=ECQ$(314,12); FUNCTION_FIELD_VALUE_11$=ECQ$(326,12); FUNCTION_FIELD_VALUE_12$=ECQ$(338,12)
2090 FUNCTION_FIELD_VALUE_13$=ECQ$(350,12); FUNCTION_FIELD_VALUE_14$=ECQ$(362,12); FUNCTION_FIELD_VALUE_15$=ECQ$(374,12); FUNCTION_FIELD_VALUE_16$=ECQ$(386,12)
2100 FUNCTION_FIELD_VALUE_17$=ECQ$(398,12); FUNCTION_FIELD_VALUE_18$=ECQ$(410,12); FUNCTION_FIELD_VALUE_19$=ECQ$(422,12); FUNCTION_FIELD_VALUE_20$=ECQ$(434,12)
2110 FUNCTION_FIELD_VALUE_21$=ECQ$(446,12); FUNCTION_FIELD_VALUE_22$=ECQ$(458,12)
2120 OVR_EXIST_CAT_ENTRYS$=ECQ$(56,1); IMAGE_FORMAT$=ECQ$(57,1)
2125 IF NUL(ECQ$(58,50)) THEN ECQ$(58,50)=ECPARM$(441,50)
2130 IMAGE_SUFFIX_1$=ECQ$(58,10); IMAGE_SUFFIX_2$=ECQ$(68,10); IMAGE_SUFFIX_3$=ECQ$(78,10)
2140 IMAGE_SUFFIX_4$=ECQ$(88,10); IMAGE_SUFFIX_5$=ECQ$(98,10)
2150 INCLUDE_SEL_CODE_01$=ECQ$(164,3); INCLUDE_SEL_CODE_02$=ECQ$(167,3); INCLUDE_SEL_CODE_03$=ECQ$(170,3); INCLUDE_SEL_CODE_04$=ECQ$(173,3); INCLUDE_SEL_CODE_05$=ECQ$(176,3)
2160 INCLUDE_SEL_CODE_06$=ECQ$(179,3); INCLUDE_SEL_CODE_07$=ECQ$(182,3); INCLUDE_SEL_CODE_08$=ECQ$(185,3); INCLUDE_SEL_CODE_09$=ECQ$(188,3); INCLUDE_SEL_CODE_10$=ECQ$(191,3)
2165 INCLUDE_SEL_CODE_11$=ECQ$(194,3); INCLUDE_SEL_CODE_12$=ECQ$(197,3); INCLUDE_SEL_CODE_13$=ECQ$(200,3); INCLUDE_SEL_CODE_14$=ECQ$(203,3); INCLUDE_SEL_CODE_15$=ECQ$(206,3)
2170 EXCLUDE_SEL_CODE_01$=ECQ$(209,3); EXCLUDE_SEL_CODE_02$=ECQ$(212,3); EXCLUDE_SEL_CODE_03$=ECQ$(215,3); EXCLUDE_SEL_CODE_04$=ECQ$(218,3); EXCLUDE_SEL_CODE_05$=ECQ$(221,3)
2175 EXCLUDE_SEL_CODE_06$=ECQ$(224,3); EXCLUDE_SEL_CODE_07$=ECQ$(227,3); EXCLUDE_SEL_CODE_08$=ECQ$(230,3); EXCLUDE_SEL_CODE_09$=ECQ$(233,3); EXCLUDE_SEL_CODE_10$=ECQ$(236,3)
2180 EXCLUDE_SEL_CODE_11$=ECQ$(239,3); EXCLUDE_SEL_CODE_12$=ECQ$(242,3); EXCLUDE_SEL_CODE_13$=ECQ$(245,3); EXCLUDE_SEL_CODE_14$=ECQ$(248,3); EXCLUDE_SEL_CODE_15$=ECQ$(251,3)
2185 B_ECQ$=ECQ$
2190 REFRESH_FLG=1
2195 CALL "*wingrp;Enable",BUTTONS.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; ENABLE_FLG=1
2196 GOSUB INCLUDE_TIPS
2199 RETURN 
2300 ! Load Slections
2310 LOAD_SELECTION:
2312 IF STP(ECQ$)="" THEN RETURN 
2315 ECQ$(1,10)=CATALOG_ID$; ECQ$(45,10)=SOURCE_TF_CUSTOMER$
2320 ECQ$(11,1)=INITIAL_CATALOG_LOAD$; ECQ$(110,6)=DATE_LAST_UPDATED$; ECQ$(15,1)=CATEGORY_SOURCE$
2330 ECQ$(44,1)=CLEAR_CAT_THIS_CUST$; ECQ$(55,1)=WEB_CAT_ITEM_CDE_SRC$; ECQ$(109,1)=CLEAR_AFTER_UPDATE$
2340 ECQ$(16,1)=FILT_ITEM_W_CIC_CODE$; ECQ$(17,1)=FILT_ITEMS_FLAG_FMS$; ECQ$(18,1)=FILT_ITEM_FMS_PRICE$
2350 ECQ$(43,1)=FILT_EXCL_ITEM_STOCK$; ECQ$(108,1)=INVTRY_LOAD_ITEM_TYP$
2360 ECQ$(116,12)=FUNCTION_FIELD_VALUE_1$; ECQ$(128,12)=FUNCTION_FIELD_VALUE_2$; ECQ$(140,12)=FUNCTION_FIELD_VALUE_3$; ECQ$(152,12)=FUNCTION_FIELD_VALUE_4$
2370 ECQ$(254,12)=FUNCTION_FIELD_VALUE_5$; ECQ$(266,12)=FUNCTION_FIELD_VALUE_6$; ECQ$(278,12)=FUNCTION_FIELD_VALUE_7$; ECQ$(290,12)=FUNCTION_FIELD_VALUE_8$
2380 ECQ$(302,12)=FUNCTION_FIELD_VALUE_9$; ECQ$(314,12)=FUNCTION_FIELD_VALUE_10$; ECQ$(326,12)=FUNCTION_FIELD_VALUE_11$; ECQ$(338,12)=FUNCTION_FIELD_VALUE_12$
2390 ECQ$(350,12)=FUNCTION_FIELD_VALUE_13$; ECQ$(362,12)=FUNCTION_FIELD_VALUE_14$; ECQ$(374,12)=FUNCTION_FIELD_VALUE_15$; ECQ$(386,12)=FUNCTION_FIELD_VALUE_16$
2400 ECQ$(398,12)=FUNCTION_FIELD_VALUE_17$; ECQ$(410,12)=FUNCTION_FIELD_VALUE_18$; ECQ$(422,12)=FUNCTION_FIELD_VALUE_19$; ECQ$(434,12)=FUNCTION_FIELD_VALUE_20$
2410 ECQ$(446,12)=FUNCTION_FIELD_VALUE_21$; ECQ$(458,12)=FUNCTION_FIELD_VALUE_22$
2420 ECQ$(56,1)=OVR_EXIST_CAT_ENTRYS$; ECQ$(57,1)=IMAGE_FORMAT$
2430 ECQ$(58,10)=IMAGE_SUFFIX_1$; ECQ$(68,10)=IMAGE_SUFFIX_2$; ECQ$(78,10)=IMAGE_SUFFIX_3$
2440 ECQ$(88,10)=IMAGE_SUFFIX_4$; ECQ$(98,10)=IMAGE_SUFFIX_5$
2450 ECQ$(164,3)=INCLUDE_SEL_CODE_01$; ECQ$(167,3)=INCLUDE_SEL_CODE_02$; ECQ$(170,3)=INCLUDE_SEL_CODE_03$; ECQ$(173,3)=INCLUDE_SEL_CODE_04$; ECQ$(176,3)=INCLUDE_SEL_CODE_05$
2460 ECQ$(179,3)=INCLUDE_SEL_CODE_06$; ECQ$(182,3)=INCLUDE_SEL_CODE_07$; ECQ$(185,3)=INCLUDE_SEL_CODE_08$; ECQ$(188,3)=INCLUDE_SEL_CODE_09$; ECQ$(191,3)=INCLUDE_SEL_CODE_10$
2465 ECQ$(194,3)=INCLUDE_SEL_CODE_11$; ECQ$(197,3)=INCLUDE_SEL_CODE_12$; ECQ$(200,3)=INCLUDE_SEL_CODE_13$; ECQ$(203,3)=INCLUDE_SEL_CODE_14$; ECQ$(206,3)=INCLUDE_SEL_CODE_15$
2470 ECQ$(209,3)=EXCLUDE_SEL_CODE_01$; ECQ$(212,3)=EXCLUDE_SEL_CODE_02$; ECQ$(215,3)=EXCLUDE_SEL_CODE_03$; ECQ$(218,3)=EXCLUDE_SEL_CODE_04$; ECQ$(221,3)=EXCLUDE_SEL_CODE_05$
2475 ECQ$(224,3)=EXCLUDE_SEL_CODE_06$; ECQ$(227,3)=EXCLUDE_SEL_CODE_07$; ECQ$(230,3)=EXCLUDE_SEL_CODE_08$; ECQ$(233,3)=EXCLUDE_SEL_CODE_09$; ECQ$(236,3)=EXCLUDE_SEL_CODE_10$
2480 ECQ$(239,3)=EXCLUDE_SEL_CODE_11$; ECQ$(242,3)=EXCLUDE_SEL_CODE_12$; ECQ$(245,3)=EXCLUDE_SEL_CODE_13$; ECQ$(248,3)=EXCLUDE_SEL_CODE_14$; ECQ$(251,3)=EXCLUDE_SEL_CODE_15$
2490 RETURN 
2500 ! Delete Record
2510 DELETE_REC:
2520 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YesNo",ANS$
2530 IF ANS$="NO" THEN RETURN 
2540 REMOVE (Z[1],KEY=KEY_1$); TF_TYPE$="DELETE"; GOSUB LOG_ACTIVITY
2550 ! MSGBOX "Record Deleted!","FYI","!"
2570 GOSUB CLEAR_REC
2590 RETURN 
2900 ! get eda record
2910 GET_EDA:
2920 FIND (Z[2],KEY=KEY_1$,DOM=*NEXT)IOL=0320; GOTO *RETURN
2930 DIM EDA$(128)
2990 RETURN 
3000 ! First Record
3010 FIRST_REC:
3015 GOSUB LOAD_SELECTION; GOSUB CHECK_CHANGES
3020 KEY_1$=KEF(Z[1],END=NO_FIRST)
3030 READ (Z[1],KEY=KEY_1$)IOL=0310; TF_TYPE$="ACCESS"; GOSUB LOG_ACTIVITY
3035 GOSUB GET_EDA
3040 GOSUB LOAD_INFO
3090 RETURN 
3200 ! Last Record
3210 LAST_REC:
3215 GOSUB LOAD_SELECTION; GOSUB CHECK_CHANGES
3220 KEY_1$=KEL(Z[1],ERR=NO_LAST)
3230 READ (Z[1],KEY=KEY_1$)IOL=0310; TF_TYPE$="ACCESS"; GOSUB LOG_ACTIVITY
3235 GOSUB GET_EDA
3240 GOSUB LOAD_INFO
3290 RETURN 
3400 ! Prior Record
3410 PRIOR_REC:
3415 GOSUB LOAD_SELECTION; GOSUB CHECK_CHANGES
3420 KEY_1$=KEP(Z[1],END=START_FILE)
3430 READ (Z[1],KEY=KEY_1$)IOL=0310; TF_TYPE$="ACCESS"; GOSUB LOG_ACTIVITY
3435 GOSUB GET_EDA
3440 GOSUB LOAD_INFO
3490 RETURN 
3600 ! Next Record
3610 NEXT_REC:
3615 GOSUB LOAD_SELECTION; GOSUB CHECK_CHANGES
3620 KEY_1$=KEY(Z[1],END=END_FILE)
3630 READ (Z[1],KEY=KEY_1$)IOL=0310; TF_TYPE$="ACCESS"; GOSUB LOG_ACTIVITY
3635 GOSUB GET_EDA
3640 GOSUB LOAD_INFO
3690 RETURN 
4000 ! SET PARAMS
4010 SET_PARM:
4011 IF NUL(CATALOG_ID$) THEN RETURN 
4020 IF EDA$(41,1)="S" THEN %CAT_SOURCE$=MSG("CAT_SRC_2"),%CAT_S_VAL$=MSG("CAT_SRC_V2") ELSE %CAT_SOURCE$=MSG("CAT_SRC"),%CAT_S_VAL$=MSG("CAT_SRC_V")
4030 IF EDA$(41,1)<>"S" THEN CALL "*WINGRP;ENABLE",CAT_S.GRP$ ELSE CALL "*WINGRP;DISABLE",CAT_S.GRP$
4033 DROP_BOX LOAD CATEGORY_SOURCE.CTL,%CAT_SOURCE$; CATEGORY_SOURCE.CTL'TBL$=%CAT_S_VAL$
4035 RETURN 
4037 SET_PARM2:
4038 IF NUL(CATALOG_ID$) THEN RETURN 
4040 IF EDA$(41,1)<>"S" THEN CALL "*WINGRP;ENABLE",CIC.GRP$ ELSE CALL "*WINGRP;DISABLE",CIC.GRP$
4050 IF EDA$(41,1)<>"S" THEN CALL "*WINGRP;ENABLE",FMS_G.GRP$ ELSE CALL "*WINGRP;DISABLE",FMS_G.GRP$
4060 IF EDA$(41,1)<>"S" THEN CALL "*WINGRP;ENABLE",FMS_I.GRP$ ELSE CALL "*WINGRP;DISABLE",FMS_I.GRP$
4070 IF EDA$(41,1)<>"S" THEN CALL "*WINGRP;ENABLE",FMS_F.GRP$ ELSE CALL "*WINGRP;DISABLE",FMS_F.GRP$
4090 RETURN 
4100 ! 
4110 SET_PARM3:
4111 IF NUL(CATALOG_ID$) THEN RETURN 
4120 IF EDA$(41,1)<>"S" THEN CALL "*WINGRP;ENABLE",ST_CODE.GRP$ ELSE CALL "*WINGRP;DISABLE",ST_CODE.GRP$
4130 IF FOLDER_ID$="ECGUT3.4" THEN GOSUB INCLUDE_TIPS
4190 RETURN 
4800 ! 
4810 CAT_S_LOAD:
4820 IF CATEGORY_SOURCE$="E" THEN %CLEAR_C$=MSG("CLEAR_CAT2"),%CLEAR_V$=MSG("CLEAR_C_V2") ELSE %CLEAR_C$=MSG("CLEAR_CAT"),%CLEAR_V$=MSG("CLEAR_C_V") ! SSP221858 jdf
4830 DROP_BOX LOAD CLEAR_CAT_THIS_CUST.CTL,%CLEAR_C$; CLEAR_CAT_THIS_CUST.CTL'TBL$=%CLEAR_V$
4840 CLEAR_CAT_THIS_CUST$="N",REFRESH_FLG=1 ! SSP221858 jdf
4890 RETURN 
5000 ! Check Changes
5010 CHECK_CHANGES:
5020 IF ECQ$=B_ECQ$ THEN RETURN 
5030 MSGBOX MSG("REC_ALTERD"),MSG("UPDATE"),"?,YesNo",ANS$
5040 IF ANS$="NO" THEN RETURN 
5050 GOSUB WRITE_REC
5090 RETURN 
5500 ! CLEAR RECORD
5510 CLEAR_REC:
5515 CATALOG_ID$=""; SOURCE_TF_CUSTOMER$=""
5520 INITIAL_CATALOG_LOAD$=""; DATE_LAST_UPDATED$=""; CATEGORY_SOURCE$=" "; CATEGORY_SOURCE.CTL'VALUE$=" "; WEB_CAT_ITEM_CDE_SRC.CTL'VALUE$=" "; CLEAR_CAT_THIS_CUST.CTL'VALUE$=" " ! SSP221858 jdf
5530 CLEAR_CAT_THIS_CUST$=""; WEB_CAT_ITEM_CDE_SRC$=""; CLEAR_AFTER_UPDATE$=""
5540 FILT_ITEM_W_CIC_CODE$=""; FILT_ITEMS_FLAG_FMS$=""; FILT_ITEM_FMS_PRICE$=""
5550 FILT_EXCL_ITEM_STOCK$=""; INVTRY_LOAD_ITEM_TYP$=""
5560 FUNCTION_FIELD_VALUE_1$=""; FUNCTION_FIELD_VALUE_2$=""; FUNCTION_FIELD_VALUE_3$=""; FUNCTION_FIELD_VALUE_4$=""
5570 FUNCTION_FIELD_VALUE_5$=""; FUNCTION_FIELD_VALUE_6$=""; FUNCTION_FIELD_VALUE_7$=""; FUNCTION_FIELD_VALUE_8$=""
5580 FUNCTION_FIELD_VALUE_9$=""; FUNCTION_FIELD_VALUE_10$=""; FUNCTION_FIELD_VALUE_11$=""; FUNCTION_FIELD_VALUE_12$=""
5590 FUNCTION_FIELD_VALUE_13$=""; FUNCTION_FIELD_VALUE_14$=""; FUNCTION_FIELD_VALUE_15$=""; FUNCTION_FIELD_VALUE_16$=""
5600 FUNCTION_FIELD_VALUE_17$=""; FUNCTION_FIELD_VALUE_18$=""; FUNCTION_FIELD_VALUE_19$=""; FUNCTION_FIELD_VALUE_20$=""
5610 FUNCTION_FIELD_VALUE_21$=""; FUNCTION_FIELD_VALUE_22$=""
5620 OVR_EXIST_CAT_ENTRYS$=""; IMAGE_FORMAT$=""
5630 IMAGE_SUFFIX_1$=""; IMAGE_SUFFIX_2$=""; IMAGE_SUFFIX_3$=""
5640 IMAGE_SUFFIX_4$=""; IMAGE_SUFFIX_5$=""
5650 INCLUDE_SEL_CODE_01$=""; INCLUDE_SEL_CODE_02$=""; INCLUDE_SEL_CODE_03$=""; INCLUDE_SEL_CODE_04$=""; INCLUDE_SEL_CODE_05$=""; INCLUDE_SEL_CODE_06$=""; INCLUDE_SEL_CODE_07$=""; INCLUDE_SEL_CODE_08$=""
5660 INCLUDE_SEL_CODE_09$=""; INCLUDE_SEL_CODE_10$=""; INCLUDE_SEL_CODE_11$=""; INCLUDE_SEL_CODE_12$=""; INCLUDE_SEL_CODE_13$=""; INCLUDE_SEL_CODE_14$=""; INCLUDE_SEL_CODE_15$=""
5670 EXCLUDE_SEL_CODE_01$=""; EXCLUDE_SEL_CODE_02$=""; EXCLUDE_SEL_CODE_03$=""; EXCLUDE_SEL_CODE_04$=""; EXCLUDE_SEL_CODE_05$=""; EXCLUDE_SEL_CODE_06$=""; EXCLUDE_SEL_CODE_07$=""; EXCLUDE_SEL_CODE_08$=""
5680 EXCLUDE_SEL_CODE_09$=""; EXCLUDE_SEL_CODE_10$=""; EXCLUDE_SEL_CODE_11$=""; EXCLUDE_SEL_CODE_12$=""; EXCLUDE_SEL_CODE_13$=""; EXCLUDE_SEL_CODE_14$=""; EXCLUDE_SEL_CODE_15$=""
5685 REFRESH_FLG=1; NEXT_ID=CATALOG_ID.CTL
5687 CALL "*wingrp;DISABLE",FIELDS.GRP$; CALL "*WINGRP;DISABLE",BUTTONS.GRP$; ENABLE_FLG=0
5688 DIM ECQ$(511),ECQ[12]; B_ECQ$=ECQ$
5690 RETURN 
6000 ! Process Copy info
6010 COPY_CATALOG:
6015 %CAT_ID$=""
6020 PROCESS "ECGUT3_COPY","../ECG/EC.EN"
6030 IF NUL(%CAT_ID$) THEN RETURN 
6040 COPYCATALOG$=%CAT_ID$; %CAT_ID$=""
6050 READ (Z[1],KEY=COPYCATALOG$,DOM=NO_CAT)COPYREC$
6060 NEW_REC$=COPYREC$; NEW_REC$(1,10)=KEY_1$; ECQ$=NEW_REC$
6070 GOSUB LOAD_INFO
6080 REFRESH_FLG=1
6090 RETURN 
6200 ! load copy_from Id
6210 COPY_FROM_ID:
6220 %CAT_ID$=PAD(COPY_CAT_ID$,10,1," ")
6290 RETURN 
6300 ! No category found to copy
6310 NO_CAT:
6320 MSGBOX MSG("ECGUT36"),MSG("WARNING"),"STOP"
6360 GOTO COPY_CATALOG
6390 RETURN 
8000 ! Messages
8010 TERM_MSG:
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN CATALOG_ID$=""; NEXT_ID=CATALOG_ID.CTL; EXIT 
8040 DIM ECQ$(511),ECQ[12]; NEXT_ID=SOURCE_TF_CUSTOMER.CTL
8050 CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$
8055 ECQ$(1,10)=CATALOG_ID$,TF_TYPE$="NEW",CLEAR_CAT_THIS_CUST$="N"; GOSUB LOG_ACTIVITY ! SSP221858 jdf   
8060 ENABLE_FLG=1
8070 GOSUB GET_EDA
8075 GOSUB COPY_CATALOG
8080 GOSUB SET_PARM
8090 RETURN 
8100 ! No First Record
8110 NO_FIRST:
8120 MSGBOX MSG("REC_NO_1ST"),"FYI","!"
8130 RETURN 
8200 ! No Last Record
8210 NO_LAST:
8220 MSGBOX MSG("REC_NO_LST$"),"FYI","!"
8230 RETURN 
8300 ! Start of File
8310 START_FILE:
8320 MSGBOX MSG("START_FILE"),"FYI","!"
8330 RETURN 
8400 ! End of File
8410 END_FILE:
8420 MSGBOX MSG("END_OF_FIL"),"FYI","!"
8430 RETURN 
8500 ! Invalid Day Message
8510 INVALID_MSG:
8520 MSGBOX MSG("INVALID_D"),"FYI","!"
8590 RETURN 
8800 ! Invalid Item Code Message
8810 INVALID_ITM:
8820 MSGBOX MSG("INVA_ITEM"),MSG("WARNING"),"STOP"
8830 ITEM_CODE$=""; NEXT_ID=ITEM_CODE.CTL
8890 RETURN 
9000 ! Parameters
9010 GET_SYS_PARAM:
9020 DIM ECPARM$(1000); READ (Z[6],KEY=X3$(9,3)+"E/C",DOM=*NEXT)ECPARM$
9030 FIND (Z[6],KEY=X3$(9,3)+"F/M",DOM=*NEXT)OPPARM$
9090 RETURN 
9200 ! ENABLE FUNCTIONS
9210 ENABLE_FUNCTIONS:
9230 ! IF FILT_EXCL_ITEM_STOCK$<>"N" THEN CALL "*WINGRP;ENABLE",FUNCTIONS.GRP$ ELSE CALL "*WINGRP;DISABLE",FUNCTIONS.GRP$
9280 REFRESH_FLG=1
9290 RETURN 
9999 END 
10000 ! Publish Single Catalog Update
10010 PUBLISH_SINGLE:
10030 WRITE (Z[1],KEY=KEY_1$)IOL=0310; TF_TYPE$="WRITE"; GOSUB LOG_ACTIVITY
10040 UPDATE_CATALOGS$=KEY_1$; PRINT 'DIALOGUE'(5,5,80,25,""); GOSUB LOAD_CATALOG; PRINT 'POP'; IF CLEARCATALOG=1 THEN GOTO 10090; REM "158857
10050 MSGBOX "Updating catalog/category cross reference...","FYI","!"
10060 CALL "EC3UTF",X3$,X4$,KEY_1$,"CALLED"
10070 ! PRINT @(0,22),'CL',
10080 MSGBOX "Generation of Catalog "+KEY_1$+" Complete","FYI","!"
10085 PROCESS "ECGUT5","../ECG/EC.EN"
10090 RETURN 
11000 REM "End of entry
11005 PUBLISH_ALL:
11010 MSGBOX "Generate catalog entries now?",MSG("VERIFY"),"?,YesNo",ANS$
11015 IF ANS$="NO" THEN RETURN 
11020 UPDATE_CATALOGS$=""
11030 READ (Z[1],KEY="",DOM=*NEXT)
11040 ECQ_KEY$=KEY(Z[1],END=11150); READ (Z[1],KEY=ECQ_KEY$)ECQ$
11050 DIM EDA$(128); EDA$(11,30)="Catalog Master Missing"; FIND (Z[2],KEY=ECQ_KEY$,DOM=*NEXT)EDA$
11060 ! PROMPT$="Update ("+ECQ_KEY$+") - "+EDA$(11,30); PRINT 'DIALOGUE'(5,10,10,80,""); PRINT PROMPT$; WAIT 2; PRINT 'POP'
11070 REM "0-No to current  1-Yes to current  2-Yes to ALL  3-Exit to update
11080 ! CALL "ZZPROM","X1EC3UT3",X3$,Z,"","","V",X0; ON Z GOTO 11040,11100,11120,11145
11090 REM "update single catalog
11100 ! UPDATE_CATALOGS$=UPDATE_CATALOGS$+ECQ_KEY$; GOTO 11040
11110 REM "update all catalogs
11120 UPDATE_CATALOGS$=""; READ (Z[1],KEY="",DOM=*NEXT)
11130 ECQ_KEY$=KEY(Z[1],END=11150); READ (Z[1],KEY=ECQ_KEY$)ECQ$
11140 UPDATE_CATALOGS$=UPDATE_CATALOGS$+ECQ_KEY$; GOTO 11130
11150 PRINT 'DIALOGUE'(5,5,80,25,""); GOSUB LOAD_CATALOG; PRINT 'POP'
11180 PROCESS "ECGUT5","../ECG/EC.EN"
11190 RETURN 
12000 REM "load catalog
12005 LOAD_CATALOG:
12010 IF POS(ECQ$(44,1)="BC")<>0 THEN MSGBOX "Loading instructions indicate webec item parameters to be cleared - Proceed?",MSG("VERIFY"),"?,YESNO",ANS$
12015 IF ANS$="NO" THEN RETURN 
12020 IF LEN(UPDATE_CATALOGS$)=0 THEN GOTO 13165
12030 FOR UINDEX=0 TO LEN(UPDATE_CATALOGS$)/10-1; CATALOG_KEY$=UPDATE_CATALOGS$(UINDEX*10+1,10)
12035 ! PRINT 'DIALOGUE'(5,5,80,25,"")
12040 PRINT @(0,20),'CE',
12050 REM "get next update record
12060 EXTRACT (Z[1],KEY=CATALOG_KEY$)IOL=0310; TF_TYPE$="GENERATE"; GOSUB LOG_ACTIVITY
12070 DIM EDA$(100); FIND (Z[2],KEY=CATALOG_KEY$,DOM=12075)EDA$
12080 SOURCE_CUSTOMERS$=ECQ$(45,10)+STP(ECQ$(470,40),3," "); REM "160771
12090 REM "ck if clearing existing catalog
12100 IF ECQ$(44,1)="N" THEN GOTO 12180
12110 PRINT @(0,20),'CE',"Purging catalog ",ECQ$(1,10),
12120 READ (Z[7],KEY=ECQ$(1,10),DOM=*NEXT); REM "160771
12130 ECHKEY$=KEY(Z[7],END=12180); IF ECHKEY$(1,10)<>ECQ$(1,10) THEN GOTO 12180
12140 READ (Z[7],KEY=ECHKEY$)ECH$; IF POS(ECQ$(44,1)="BC")<>0 THEN REMOVE (Z[10],KEY=ECH$(41,20),DOM=12150)
12150 IF POS(ECQ$(44,1)="AC")<>0 THEN REMOVE (Z[7],KEY=ECHKEY$,DOM=12160)
12160 IF POS(ECQ$(44,1)="AC")<>0 THEN REMOVE (Z[12],KEY=ECH$(1,10)+ECH$(21,20)+ECH$(41,20)+ECH$(11,10),DOM=12170)
12170 GOTO 12130
12180 FOR CC=0 TO LEN(SOURCE_CUSTOMERS$)/10-1; CURR_CUSTOMER$=SOURCE_CUSTOMERS$(CC*10+1,10); PRINT @(40,22),'CL',"Processing customer: ",CURR_CUSTOMER; REM "160771
12190 IF EDA$(41,1)<>"S" THEN READ (Z[8],KEY=CURR_CUSTOMER$,DOM=12195) ELSE READ (Z[16],KEY="",DOM=12195); REM "160771
12200 PRINT @(0,20),'CE',"Loading catalog ",ECQ$(1,10),
12210 REM "get next form for customer
12220 DIM FM1$(550),FM1[31],IC0$(200),IC0[40]
12230 IF EDA$(41,1)<>"S" THEN GOTO 12250
12240 ITEMKEY$=KEY(Z[16],END=13120); ICITEMKEY$=ITEMKEY$; READ (Z[16],KEY=ITEMKEY$)IOL=0350; ITEMDESC$=IC0$(21,40); IF IC0$(108,1)="I" OR IC0$(1,10)<>DIM(10) THEN GOTO 12240 ELSE GOTO 12280
12250 ITEMKEY$=KEY(Z[8],END=13120); IF ITEMKEY$(1,10)<>CURR_CUSTOMER$ THEN GOTO 13120; REM "160771
12260 READ (Z[8],KEY=ITEMKEY$)IOL=0330; ITEMDESC$=FM1$(42,40); REM "ssp 154559
12270 IF FM1$(195,1)="I" THEN GOTO 12210; REM "do not load inactive forms
12280 DIM ECR$(1000); FIND (Z[10],KEY=ITEMKEY$,DOM=12290)ECR$
12290 IF FM1$(105,1)="Y" THEN ICITEMKEY$=DIM(10)+ITEMKEY$(11,10) ELSE ICITEMKEY$=ITEMKEY$; REM "if item flagged STOCK? Y then set for inventory to check the stock inventory item
12300 IF EDA$(41,1)<>"S" THEN GOTO 12460
12310 REM "ck for selection codes
12320 REM "INCLUDE selection codes
12330 IF ECQ$(164,45)=DIM(45) THEN SCOK$="Y"; GOTO 12390
12340 SCOK$="N"
12350 FOR SC=0 TO 14
12360 SC$=ECQ$(SC*3+164,3); IF SC$=DIM(3) THEN GOTO 12380
12370 IF POS(SC$=ECR$(475,48),3)<>0 THEN SCOK$="Y"; EXITTO 12385
12380 NEXT SC
12390 REM "exclude
12400 IF ECQ$(209,45)=DIM(45) THEN GOTO 12445
12410 FOR SC=0 TO 14
12420 SC$=ECQ$(SC*3+209,3); IF SC$=DIM(3) THEN GOTO 12440
12430 IF POS(SC$=ECR$(475,48),3)<>0 THEN SCOK$="N"; EXITTO 12445
12440 NEXT SC
12450 IF SCOK$="N" THEN GOTO 12210
12460 REM "qualified item - ck other filtering options
12470 IF ECQ$(16,1)="Y" THEN IF STP(FM1$(350,20),3," ")="" THEN GOTO 12210; REM "cic code must be set
12480 IF ECQ$(17,1)="Y" THEN IF FM1$(108,1)<>"Y" THEN GOTO 12210; REM "must be FMS form
12490 IF ECQ$(18,1)="Y" THEN IF FM1[29]=0 THEN GOTO 12210; REM "FMS price needs to be set
12500 IF POS(ECQ$(43,1)="YX")<>0 THEN GOSUB 14000; IF FUNCTION_MATCH$<>"Y" THEN GOTO 12210; REM "ck for function field
12510 REM "ck for inventoried status
12520 IF ECQ$(108,1)="N" THEN GOTO 12565; REM "ignore inventoried status
12530 ON_HAND_BALANCE=0,IC1_COUNT=0; READ (Z[11],KEY=ICITEMKEY$,DOM=12540)
12540 IC1KEY$=KEY(Z[11],END=12560); IF IC1KEY$(1,LEN(ICITEMKEY$))<>ICITEMKEY$ THEN GOTO 12560 ELSE DIM IC1[20]; READ (Z[11],KEY=IC1KEY$)IOL=0340; IC1_COUNT=IC1_COUNT+1; IF ECQ$(108,1)="A" THEN GOTO 12565; REM "A=load if any warehouse records on file
12550 ON_HAND_BALANCE=ON_HAND_BALANCE+IC1[3]+IC1[4]-IC1[5]+IC1[6]; GOTO 12540
12560 IF ON_HAND_BALANCE=0 THEN GOTO 12210; REM "skip if cumulative on-hand balance is zero
12570 REM "Form passed test - Set up web catalog category
12580 DIM ECG$(120)
12590 ON POS(ECQ$(15,1)="PRFE")-1 GOTO 12600,12650,12670,12720
12600 REM "product code source
12610 IF EDA$(41,1)="S" THEN PC$=IC0$(61,3) ELSE PC$=FM1$(21,3)
12620 FIND (Z[5],KEY="T"+PC$,DOM=12700)PCREC$; DIM EDK$(55); FIND (Z(17),KEY=PC$,DOM=12630)IOL=0360; IF EDK$(54,1)="Y" THEN GOTO 12210; REM "read in product code and category mappings - skip item if told to exclude
12630 PCMAPS$=""; IF EDK$(4,50)<>DIM(50) THEN FOR PCM=0 TO 4; IF EDK$(PCM*10+4,10)<>DIM(10) THEN PCMAPS$=PCMAPS$+EDK$(PCM*10+4,10) END_IF ; NEXT PCM; GOTO 12720; REM "if p/c mappings in effect then do not write category for the product code
12640 ECG$(1,10)=PC$,ECG$(11,30)=PCREC$(5,15); GOTO 12700
12650 REM "Reorder group source
12660 FIND (Z[5],KEY="G"+FM1$(212,3),DOM=12700)ROGROUP$; ECG$(1,10)=FM1$(212,3),ECG$(11,30)=ROGROUP$(5,30); GOTO 12700
12670 REM "function field
12680 IF STP(FM1$(173,10),3," ")="" THEN GOTO 12210; REM "skip if function field is blank
12690 ECG$(1,10)=FM1$(173,10); GOTO 12700
12700 ECG$(1,10)=STR(NUM(ECG$(1,10),ERR=12705):"0000000000")
12710 WRITE (Z[3],KEY=ECG$(1,10),DOM=12715)ECG$
12720 REM "write catalog entry
12730 DIM ECH$(190)
12740 ECH$(1,10)=ECQ$(1,10),ECH$(11,10)=ECG$(1,10),ECH$(41,20)=ITEMKEY$; IF ECH$(61,40)=DIM(40) THEN ECH$(61,40)=ITEMDESC$; REM "ssp 154559/ 158394
12750 IF ECQ$(15,1)<>"E" THEN ECH$(11,10)=ECG$(1,10); GOTO 12790
12760 REM '
12770 REM '
12780 REM '
12790 ON POS(ECQ$(55,1)="FCIG")-1 GOTO 12800,12810,12820,12830
12800 ECH$(21,20)=FM1$(11,10); GOTO 12835
12810 ECH$(21,20)=FM1$(350,20); GOTO 12835
12820 ECH$(21,20)=IC0$(11,10); GOTO 12835
12830 ECH$(21,20)=FM1$(173,12); GOTO 12835
12840 IF ECQ$(15,1)="P" AND PCMAPS$<>"" THEN CATEGORIES$=PCMAPS$; GOTO 12870; REM "if p/c source and mapping in effect then set up multiple categories
12850 IF ECQ$(15,1)<>"E" THEN GOTO 12930
12860 CATEGORIES$=ECR$(21,10)+ECR$(193,40)+ECR$(325,150); GOSUB 14500; CATEGORIES$=CATEGORIES$+ADDL_CATEGORIES$; REM "159049
12870 FOR CATEGORIES_INDEX=0 TO LEN(CATEGORIES$)/10-1
12880 CURR_CATEGORY$=STP(CATEGORIES$(CATEGORIES_INDEX*10+1,10),2); IF CURR_CATEGORY$="" THEN GOTO 12910 ELSE ECH$(11,10)=CURR_CATEGORY$
12890 IF ECQ$(56,1)="Y" THEN WRITE (Z[7],KEY=ECH$(1,40))ECH$ ELSE WRITE (Z[7],KEY=ECH$(1,40),DOM=12900)ECH$
12900 ECIKEY$=ECH$(1,10)+ECH$(21,20)+ECH$(41,20)+ECH$(11,10); IF ECQ$(56,1)="Y" THEN WRITE (Z[12],KEY=ECIKEY$) ELSE WRITE (Z[12],KEY=ECIKEY$,DOM=12905)
12910 NEXT CATEGORIES_INDEX
12920 GOTO 12950
12930 IF ECQ$(56,1)="Y" THEN WRITE (Z[7],KEY=ECH$(1,40))ECH$ ELSE WRITE (Z[7],KEY=ECH$(1,40),DOM=12940)ECH$
12940 ECIKEY$=ECH$(1,10)+ECH$(21,20)+ECH$(41,20)+ECH$(11,10); IF ECQ$(56,1)="Y" THEN WRITE (Z[12],KEY=ECIKEY$) ELSE WRITE (Z[12],KEY=ECIKEY$,DOM=12950)
12950 REM 
12960 PRINT @(0,22),ECH$(1,40)," - ",FM1$(1,20),
12970 REM "set image name
12980 IMAGE_NAME$=""; ON POS(ECQ$(57,1)="CFDN")-1 GOTO 12990,13000,13010,13020
12990 IMAGE_NAME$=ECH$(41,10); GOTO 13020
13000 IMAGE_NAME$=ECH$(51,10); GOTO 13020
13010 CALL "ZZDISP","AX",ECH$(41,10),"A/R",X3$,FMTCC$,"",0,0,X4$; IMAGE_NAME$=STP(FMTCC$,2)+ECH$(51,10); GOTO 13020
13020 REM "write form webec parmeters
13030 GOSUB 14300; REM "stip out special characters from image name
13040 DIM ECR$(1000)
13050 ECR$(1,20)=ECH$(41,20); READ (Z[10],KEY=ECR$(1,20),DOM=13060)ECR$; IF ECQ$(15,1)<>"E" THEN GOSUB 13500; REM "set initial category if source is not E
13060 GOSUB 13500
13070 IF IMAGE_NAME$="" THEN GOTO 13100
13080 FOR IMAGE=0 TO 4; EXTENSION$=STP(ECQ$(IMAGE*10+58,10),2); IF EXTENSION$<>"" THEN ECR$(IMAGE*30+31,30)=IMAGE_NAME$+STP(ECQ$(IMAGE*10+58,10),2)
13090 NEXT IMAGE
13100 IF ECQ$(56,1)="Y" THEN WRITE (Z[10],KEY=ECR$(1,20))ECR$ ELSE WRITE (Z[10],KEY=ECR$(1,20),DOM=13105)ECR$
13110 GOTO 12210; REM "get next form
13120 NEXT CC; REM "get next source customer 160771
13130 IF ECQ$(11,1)="Y" THEN ECQ$(15,1)="E",ECQ$(11,1)="N"; REM "if initial load then set category source to form EC parmaeters automatically
13140 ECQ$(110,6)=X3$(21,6); REM "udpate update date
13150 IF ECQ$(109,1)="Y" THEN REMOVE (Z[1],KEY=CATALOG_KEY$); TF_TYPE$="CLEAR"; GOSUB LOG_ACTIVITY ELSE WRITE (Z[1],KEY=CATALOG_KEY$)IOL=0310; TF_TYPE$="WRITE"; GOSUB LOG_ACTIVITY
13160 NEXT UINDEX
13170 RETURN 
13500 REM "determine categories on item parameters
13510 ON POS(ECQ$(15,1)="PFRE") GOTO 13640,13530,13520,13520,13640
13520 ECR$(21,10)=ECH$(11,10); GOTO 13640
13530 REM "product code assignment
13540 IF PCMAPS$="" THEN GOTO 13520
13550 FOR PCM=0 TO LEN(PCMAPS$)/10-1
13560 CURRMAP$=PCMAPS$(PCM*10+1,10)
13570 ON PCM GOTO 13580,13590,13600,13610,13620
13580 ECR$(21,10)=CURRMAP$; GOTO 13630
13590 ECR$(193,10)=CURRMAP$; GOTO 13630
13600 ECR$(203,10)=CURRMAP$; GOTO 13630
13610 ECR$(213,10)=CURRMAP$; GOTO 13630
13620 ECR$(223,10)=CURRMAP$; GOTO 13630
13630 NEXT PCM
13640 RETURN 
14000 REM "ck for function field filter value
14010 FUNCTION_MATCH$="Y"; IF POS(ECQ$(43,1)="YX")=0 THEN GOTO 14120
14020 FUNCTION_VALUES$=ECQ$(116,48)+ECQ$(254,216); IF FUNCTION_VALUES$<>DIM(264) THEN GOTO 14040
14030 IF FM1$(173,12)=DIM(12) THEN FUNCTION_MATCH$="N"; GOTO 14120 ELSE GOTO 14120
14040 FOR VVV=0 TO 21
14050 FVALUE$=FUNCTION_VALUES$(VVV*12+1,12); IF FVALUE$=DIM(12) THEN GOTO 14110
14060 ON POS(ECQ$(43,1)="YX")-1 GOTO 14070,14080
14070 IF FM1$(173,12) LIKE STP(FVALUE$,1) OR FM1$(173,12)=FVALUE$ THEN EXITTO 14115 ELSE GOTO 14110; REM "matching function values
14080 REM "exclude values
14090 IF FM1$(173,12) LIKE STP(FVALUE$,1) THEN GOTO 14110; REM "if matching skip
14100 IF FM1$(173,12)<>DIM(12) AND POS(FM1$(173,12)=ECQ$(116,48),12)=0 THEN EXITTO 14115; REM "make sure function field set and does not equal value
14110 NEXT VVV; FUNCTION_MATCH$="N"
14120 RETURN 
14300 REM "strip out special characters
14310 IMAGE_NAME$=STP(IMAGE_NAME$,3),IMAGE_LEN=LEN(IMAGE_NAME$)
14320 SCS$=STP(STP(STP(ECPARM$(687,19),1),0),3),SI=1,MAXSI=LEN(SCS$)
14330 IF SCS$="" THEN GOTO 14400; REM "no characters to filter
14340 SCSP=POS(SCS$(SI,1)=IMAGE_NAME$); IF SCSP=0 THEN SI=SI+1; GOTO 14380
14350 IF SCSP=1 THEN IMAGE_NAME$=IMAGE_NAME$(2); GOTO 14380; REM "first character
14360 IF SCSP=10 THEN IMAGE_NAME$=IMAGE_NAME$(1,9); GOTO 14380; REM "last character
14370 IMAGE_NAME$=IMAGE_NAME$(1,SCSP-1)+IMAGE_NAME$(SCSP+1,IMAGE_LEN-SCSP); GOTO 14380
14380 IMAGE_NAME$=PAD(IMAGE_NAME$,IMAGE_LEN); IF SI<MAXSI THEN GOTO 14340
14390 IMAGE_NAME$=STP(STP(STP(IMAGE_NAME$,1),0),3)
14400 RETURN 
14500 REM "get additional category codes; REM "159049
14510 ADDL_CATEGORIES$=""
14520 READ (Z(18),KEY=ECR$(1,20),DOM=*NEXT)
14530 EDRKEY$=KEY(Z(18),END=14555); READ (Z(18)); IF EDRKEY$(1,20)<>ECR$(1,20) THEN GOTO 14555
14540 IF STP(EDRKEY$(21,10),3," ")<>"" THEN ADDL_CATEGORIES$=ADDL_CATEGORIES$+EDRKEY$(21,10)
14550 GOTO 14530
14560 RETURN 
15000 QUERY: VAL$=""
15010 PROCESS "QRY_ECQ","../ECG/EC.EN",VAL$; IF STP(VAL$)="" THEN RETURN 
15020 CATALOG_ID$=VAL$; GOTO FIND_REC
15500 CLEAR_TIPS:
15505 RETURN 
15510 FOR XX=1 TO 15
15520 EXECUTE "INCLUDE_SEL_CODE_"+STR(XX:"00")+".CTL'TIP$="+QUO+QUO
15525 EXECUTE "%EC_ITEM_DESC"+STR(XX)+"$="+QUO+QUO+",%EC_ITEM_DESC"+STR(15+XX)+"$="+QUO+QUO
15530 EXECUTE "EXCLUDE_SEL_CODE_"+STR(XX:"00")+".CTL'TIP$="+QUO+QUO
15540 NEXT XX
15550 FOR XX=1 TO 30
15560 EXECUTE "%EC_ITEM_SEL_DESC"+STR(XX:"00")+"$="+QUO+QUO
15570 NEXT XX
15600 INCLUDE_TIPS:
15605 IF FOLDER_ID$<>"ECGUT3.4" THEN RETURN 
15610 FOR XX=1 TO 15
15615 EXECUTE "CALL "+QUO+"ZZWLKU;EC_ITEM_SEL_VAL"+QUO+","+"INCLUDE_SEL_CODE_"+STR(XX:"00")+"$,GG$,"+QUO+STR(XX)+QUO
15618 EXECUTE "CALL "+QUO+"ZZWLKU;EC_ITEM_SEL_VAL"+QUO+","+"EXCLUDE_SEL_CODE_"+STR(XX:"00")+"$,GG$,"+QUO+STR(15+XX)+QUO
15620 EXECUTE "INCLUDE_SEL_CODE_"+STR(XX:"00")+".CTL'TIP$=%EC_ITEM_SEL_DESC"+STR(XX)+"$"
15625 ! EXECUTE "INCLUDE_SEL_CODE_"+STR(XX:"00")+".CTL'MSG$="+QUO+"Include Selection Code : "+QUO+"+%EC_ITEM_SEL_DESC"+STR(XX)+"$"
15630 EXECUTE "EXCLUDE_SEL_CODE_"+STR(XX:"00")+".CTL'TIP$=%EC_ITEM_SEL_DESC"+STR(15+XX)+"$"
15640 NEXT XX
15650 RETURN 
15700 REFRESH_FLG=1; IF STP(INCLUDE_SEL_CODE_01$)<>"" THEN INCLUDE_SEL_CODE_01.CTL'TIP$=INCLUDE_SEL_CODE_01$+" "+%EC_ITEM_SEL_DESC1$
16000 LOG_ACTIVITY:! Write record to EE1 file for ECQ activity, SSP185129
16005 SET_FOCUS 0; PRINT 'MESSAGE'('_RED'+'WHITE'+"User : "+X3$(40,3)+" Action : "+TF_TYPE$+" Catalog Id: "+MID(ECQ$,1,10),0)
16010 ! TF_TYPE$ will be passed in, ACCESS, NEW, WRITE, DELETE, CLEAR, GENERATE
16020 DIM EE1$(35),EE1_2$(600)
16030 CAT_ID$=ECQ$(1,10),TF_DATE$=X3$(21,6),TF_USER$=X3$(40,3)
16040 TF_TIME$=DTE(0:"%Hz%mz%sz")
16050 EE1$=CAT_ID$+TF_DATE$+TF_TIME$+PAD(TF_TYPE$,10)+TF_USER$
16060 EE1_2$=PAD(ECQ$,600)
16070 WRITE (Z[19],KEY=EE1$,DOM=16040)IOL=0390
16075 PRINT 'MESSAGE'('F8'+'BLACK'+"",0),
16080 LOG_ACTIVITY_END:RETURN 
16090 ! 
56000 ! "197316-On catalog load utility, options for Clearing Controls have 
56001 ! "       disappeared from the drop down list"
56003 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56005 REM "221858-In GUI when I choose " No Clearing" the catalog in CHUI     
56006 REM "DBSPT-100133 - ERR 47 clicking on folder tabs with blank catalog
