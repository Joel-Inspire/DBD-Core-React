0010 ! ECGMYA - Companion Products Setup
0035 REM "5.7 - 03/25/23 - 15.492427 - crg - SSP# 307440
0037 REM "307440-DBD-339: Multi-vendor feature                               
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ECGMYA","../ECG/EC.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 ! 
0130 X0$="EC3MYA",X1$="Companion Products Setup"
0140 ! 
0150 X0=-1,X2=-1
0160 CALL "ZZCOMP",X0$,X11$,X2$,X3$,X4$,X5$,X0,X1,X2; IF X1>0 THEN CMD_STR$="END"; EXIT 
0170 ! 
0190 DIM Z[NUM(X3$(60,3))],EDV[7],AR1[15],IC0[40],FM1[31],FMP[2]
0200 ! Files
0210 Z$="01O EDV...  03O AR1...  04O FM1...  05O IC0...  06O ZZPARM  07O FMP...  "
0220 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
0300 ! IOList Section
0310 IOLIST EDV$,EDV{ALL}
0320 IOLIST AR1$,AR1{ALL}
0330 IOLIST IC0$,IC0{ALL}
0340 IOLIST FM1$,FM1{ALL}
0350 IOLIST FMP$,FMP{ALL}
0400 ! System Parameters
0410 GOSUB GET_SYS_PARAM
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 TF_DESC$=MSG("ITEM_CODE")+":",REFRESH_FLG=1
0550 ! 
0790 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! READ RECORD
1010 FIND_REC:
1015 IF NUL(ITEM_CODE$) OR NUL(SEQUENCE_NUM$) THEN RETURN ! ssp 218819
1020 KEY_1$=CUSTOMER$+ITEM_CODE$+SEQUENCE_NUM$
1030 FIND (Z[1],KEY=KEY_1$,DOM=TERM_MSG)IOL=0310
1040 ! 
1050 GOSUB LOAD_INFO
1060 CALL "*wingrp;Enable",BUTTONS.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$
1070 B_EDV$=EDV$
1185 REFRESH_FLG=1
1190 RETURN 
1300 ! Get Customer Information
1310 CUST_INFO:
1320 IF NUL(CUSTOMER$) THEN CUSTOMER$=DIM(10); GOTO 1360 ! ssp 218819
1330 READ (Z[3],KEY=CUSTOMER$,DOM=*RETURN)IOL=0320
1360 %CUSTOMER$=CUSTOMER$
1370 CALL "*wingrp;Enable",KEY2.GRP$
1380 REFRESH_FLG=1
1390 RETURN 
1400 ! Get Item information
1410 ITEM_INFO:
1415 ITEM_CODE$=PAD(ITEM_CODE$,10)
1420 KEY_5$=ITEM_CODE$
1430 READ (Z[5],KEY=CUSTOMER$+ITEM_CODE$,DOM=READ_FM1)IOL=0330
1440 ITEM_DESC$=IC0$(21,40)
1470 CALL "*wingrp;Enable",KEY3.GRP$
1480 REFRESH_FLG=1
1490 RETURN 
1500 ! Write Record
1510 WRITE_REC:
1520 IF LINE_TYPE$="C" AND STP(CUSTOMER_2$,3)="" THEN MSGBOX MSG("CUST_MISS"),MSG("WARNING"),"STOP"; NEXT_ID=CUSTOMER_2.CTL; REFRESH_FLG=1; RETURN ! SSP#271376
1540 WRITE (Z[1],KEY=KEY_1$)IOL=0310
1550 GOSUB CLEAR_REC ! SGBOX "Record Updated!","FYI","!"
1580 B_EDV$=EDV$
1590 RETURN 
1600 ! format the sequence number.
1610 FORMAT_SEQ:
1620 ! SEQUENCE_NUM$=PAD(SEQUENCE_NUM$,3,0,"0")
1630 SEQUENCE_NUM$=PAD(SEQUENCE_NUM$,3); SEQUENCE_NUM$=STR(NUM(SEQUENCE_NUM$,ERR=*NEXT):"000") ! SSP#264180
1680 REFRESH_FLG=1
1690 RETURN 
1700 ! Get Item information
1710 ITEM_2_INFO: REFRESH_FLG=1
1711 IF ID$="ITEM_CODE_2" AND _EOM$=$00$ AND QRY_VAL$="" THEN RETURN 
1715 ITEM_CODE_2$=PAD(ITEM_CODE_2$,10," ")
1720 SWITCH LINE_TYPE$
1730 CASE "C"
1740 READ (Z[4],KEY=CUSTOMER_2$+ITEM_CODE_2$,DOM=NO_ITEM_CODE)IOL=0340
1750 ITEM_DESC_2$=FM1$(42,40),MSG_ON_INV$=ITEM_DESC_2$,BT_RESTORE.CTL'TIP$=MSG("REST_ORIG")+": "+STP(MSG_ON_INV$)
1760 RETURN 
1780 CASE "I"
1790 READ (Z[5],KEY=DIM(10)+ITEM_CODE_2$,DOM=NO_ITEM_CODE)IOL=0330
1800 ITEM_DESC_2$=IC0$(21,40),MSG_ON_INV$=ITEM_DESC_2$,BT_RESTORE.CTL'TIP$=MSG("REST_ORIG")+": "+STP(MSG_ON_INV$)
1810 RETURN 
1830 CASE "S"
1840 READ (Z[7],KEY="X"+ITEM_CODE_2$,DOM=*RETURN)IOL=0350
1850 ITEM_DESC_2$=FMP$(12,40),MSG_ON_INV$=ITEM_DESC_2$,BT_RESTORE.CTL'TIP$=MSG("REST_ORIG")+": "+STP(MSG_ON_INV$)
1860 RETURN 
1890 END SWITCH 
1895 REFRESH_FLG=1; RETURN 
1896 NO_ITEM_CODE: MSGBOX "Item code not found",MSG("WARNING"),"!,TIM=7"; ITEM_CODE_2$="",NEXT_ID=ITEM_CODE_2.CTL; EXIT ! ssp 218819
1900 ! Line Type Process
1910 LINE_PROC:
1915 CALL "*wingrp;enable",FIELDS.GRP$; CALL "*wingrp;show",FIELDS.GRP$
1920 IF STP(LINE_TYPE$)="M" THEN CALL "*wingrp;Disable",MSG.GRP$; CALL "*wingrp;Disable",SHOW_PR.GRP$ ELSE CALL "*wingrp;enable",SHOW_PR.GRP$
1930 IF STP(LINE_TYPE$)<>"C" THEN CALL "*wingrp;Disable",CUST.GRP$
1940 IF STP(LINE_TYPE$)<>"S" THEN CALL "*wingrp;Disable",NUM.GRP$
1950 IF STP(LINE_TYPE$)="S" THEN TF_DESC$=MSG("SPE_C_C")+":",TF_DESC.CTL'VALUE$=TF_DESC$ ELSE TF_DESC$=MSG("ITEM_CODE")+":",TF_DESC.CTL'VALUE$=TF_DESC$
1955 IF STP(LINE_TYPE$)="I" THEN CUSTOMER_2$=DIM(10),%ITEM_CUST$=DIM(10) ! SSP#271376
1980 REFRESH_FLG=1
1990 RETURN 
2000 ! Load Information
2010 LOAD_INFO:
2013 IF NUL(EDV$) THEN RETURN 
2015 CUSTOMER$=EDV$(1,10)
2020 ITEM_CODE$=EDV$(11,10); SEQUENCE_NUM$=EDV$(21,3); GOSUB ITEM_INFO
2030 LINE_TYPE$=EDV$(35,1)
2040 CUSTOMER_2$=EDV$(38,10); ITEM_CODE_2$=EDV$(48,10); GOSUB ITEM_2_INFO
2050 PRINT_FLAGS$=EDV$(58,5),PRINT_FLAGS_1$=EDV$(58,5); USE_PO_CODE$=EDV$(63,1); SET_SELL_PRICE$=EDV$(64,1) ! SSP#228019
2055 IF NUL(USE_PO_CODE$) THEN USE_PO_CODE$="N"
2056 IF NUL(SET_SELL_PRICE$) THEN SET_SELL_PRICE$="N"
2060 PRINT_ON_INV$=EDV$(168,1); MSG_ON_INV$=EDV$(169,40)
2065 IF NUL(PRINT_ON_INV$) THEN PRINT_ON_INV$="N"
2070 PRICE=EDV[1]; TF_COST=EDV[2] ! SSP#267389
2080 QTY_MULTIPLIER=EDV[5]
2085 OVERRIDE_QTY_MULT$=EDV$(65,1); IF NUL(OVERRIDE_QTY_MULT$) THEN OVERRIDE_QTY_MULT$="N"
2087 VENDOR$=EDV$(66,10),PLANT_CODE$=EDV$(76,4)
2088 CALL "ZZWLKU;PARSE_VEND",VENDOR$,VEND_DIV$,VEND_CODE$
2089 %VENDOR$=VENDOR$,%PLANT_VEND$=VENDOR$
2090 CALL "*wingrp;Enable",BUTTONS.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; ENABLE_FLG=1
2100 GOSUB LINE_PROC
2185 B_EDV$=EDV$
2190 REFRESH_FLG=1
2199 RETURN 
2300 ! Load Slections   
2310 LOAD_SELECTION:
2313 IF LEN(EDV$)=0 THEN RETURN ! SSP218819
2314 KEY_1$=CUSTOMER$+ITEM_CODE$+SEQUENCE_NUM$ ! SSP238094 jdf
2315 EDV$(1,10)=CUSTOMER$
2320 EDV$(11,10)=ITEM_CODE$; EDV$(21,3)=SEQUENCE_NUM$
2330 EDV$(35,1)=LINE_TYPE$
2340 EDV$(38,10)=CUSTOMER_2$; EDV$(48,10)=ITEM_CODE_2$
2350 EDV$(58,5)=PRINT_FLAGS$,PRINT_FLAGS_1$=PRINT_FLAGS$; EDV$(63,1)=USE_PO_CODE$; EDV$(64,1)=SET_SELL_PRICE$ ! SSP#228019
2360 EDV$(168,1)=PRINT_ON_INV$; EDV$(169,40)=MSG_ON_INV$
2370 EDV[1]=PRICE; EDV[2]=TF_COST ! SSP#267389
2380 EDV[5]=QTY_MULTIPLIER
2385 IF EDV[5]>0 THEN OVERRIDE_QTY_MULT$="N"
2390 EDV$(65,1)=OVERRIDE_QTY_MULT$
2395 CALL "ZZWLKU;PARSE_VEND",VENDOR$,VEND_DIV$,VEND_CODE$
2400 EDV$(66,10)=VEND_DIV$+VEND_CODE$; EDV$(76,4)=PLANT_CODE$
2490 RETURN 
2500 ! Delete Record
2510 DELETE_REC:
2520 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YesNo",ANS$
2530 IF ANS$="NO" THEN RETURN 
2540 REMOVE (Z[1],KEY=KEY_1$,DOM=*NEXT)
2550 ! MSGBOX "Record Deleted!","FYI","!"
2570 GOSUB CLEAR_REC
2590 RETURN 
3000 ! First Record
3010 FIRST_REC:
3020 KEY_1$=KEF(Z[1],END=NO_FIRST)
3030 READ (Z[1],KEY=KEY_1$)IOL=0310
3040 GOSUB LOAD_INFO
3050 CALL "*wingrp;Enable",KEY2.GRP$; CALL "*wingrp;Enable",KEY3.GRP$
3090 RETURN 
3200 ! Last Record
3210 LAST_REC:
3220 KEY_1$=KEL(Z[1],ERR=NO_LAST)
3230 READ (Z[1],KEY=KEY_1$)IOL=0310
3240 GOSUB LOAD_INFO
3250 CALL "*wingrp;Enable",KEY2.GRP$; CALL "*wingrp;Enable",KEY3.GRP$
3290 RETURN 
3400 ! Prior Record
3410 PRIOR_REC:
3420 KEY_1$=KEP(Z[1],END=START_FILE)
3430 READ (Z[1],KEY=KEY_1$)IOL=0310
3440 GOSUB LOAD_INFO
3450 CALL "*wingrp;Enable",KEY2.GRP$; CALL "*wingrp;Enable",KEY3.GRP$
3490 RETURN 
3600 ! Next Record
3610 NEXT_REC:
3620 KEY_1$=KEY(Z[1],END=END_FILE)
3630 READ (Z[1],KEY=KEY_1$)IOL=0310
3640 GOSUB LOAD_INFO
3650 CALL "*wingrp;Enable",KEY2.GRP$; CALL "*wingrp;Enable",KEY3.GRP$
3690 RETURN 
5000 ! Check Changes
5010 CHECK_CHANGES:
5015 GOSUB LOAD_SELECTION
5020 IF EDV$=B_EDV$ THEN RETURN 
5025 IF LEN(KEY_1$)<23 THEN RETURN ! SSP238094 jdf
5030 MSGBOX MSG("REC_ALTERD"),MSG("UPDATE"),"?,YesNo",ANS$
5040 IF ANS$="NO" THEN RETURN 
5050 GOSUB WRITE_REC
5090 RETURN 
5500 ! CLEAR RECORD
5510 CLEAR_REC:
5515 CUSTOMER$=""
5520 ITEM_CODE$=""; SEQUENCE_NUM$=""; ITEM_DESC$=""
5530 LINE_TYPE$=""
5540 CUSTOMER_2$=""; ITEM_CODE_2$=""; ITEM_DESC_2$=""
5550 PRINT_FLAGS$="",PRINT_FLAGS_1$=""; USE_PO_CODE$="",SET_SELL_PRICE$="",PRINT_ON_INV$="",MSG_ON_INV$="" ! ssp!SSP#228019
5560 PRINT_ON_INV$=""; MSG_ON_INV$=""
5570 PRICE=0; TF_COST=0,QTY_MULTIPLIER=0 ! SSP#267389
5575 OVERRIDE_QTY_MULT$=""
5576 VEND_DIV$="",VEND_CODE$="",VENDOR$="",PLANT_CODE$="",%PLANT_VEND$="",%VEND_NAME$=""; %PLANT_NAME$="",%VENDOR$=""
5680 CALL "*wingrp;disable",FIELDS.GRP$; CALL "*wingrp;Disable",KEY3.GRP$; CALL "*wingrp;Disable",KEY2.GRP$
5685 REFRESH_FLG=1; NEXT_ID=CUSTOMER.CTL
5686 DIM EDV$(222),EDV[7]
5687 DIM B_EDV$(222),B_EDV[7]
5690 RETURN 
8000 ! Messages
8010 TERM_MSG:
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN CUSTOMER$=""; NEXT_ID=CUSTOMER.CTL; EXIT 
8040 DIM EDV$(222),EDV[7]
8050 CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
8080 REFRESH_FLG=1
8090 RETURN 
8100 ! No First Record
8110 NO_FIRST:
8120 MSGBOX MSG("REC_NO_1ST"),"FYI","!"
8130 RETURN 
8200 ! No Last Record
8210 NO_LAST:
8220 MSGBOX MSG("REC_NO_LST$"),"FYI","!"
8230 RETURN 
8300 ! Start of File
8310 START_FILE:
8320 MSGBOX MSG("START_FILE"),"FYI","!"
8330 RETURN 
8400 ! End of File
8410 END_FILE:
8420 MSGBOX MSG("END_OF_FIL"),"FYI","!"
8430 RETURN 
8500 ! Invalid Day Message
8510 INVALID_MSG:
8520 MSGBOX MSG("INVALID_D"),"FYI","!"
8590 RETURN 
8800 ! Invalid Item Code Message
8810 INVALID_ITM:
8820 MSGBOX MSG("INVA_ITEM"),MSG("WARNING"),"STOP"
8830 ITEM_CODE$=""; NEXT_ID=ITEM_CODE.CTL
8890 RETURN 
9000 ! Parameters
9010 GET_SYS_PARAM:
9020 DIM ECPARM$(1000); READ (Z[6],KEY=X3$(9,3)+"E/C",DOM=*NEXT)ECPARM$
9090 RETURN 
9999 END 
10100 QUERY:
10110 PROCESS "QRY_EDV","../ECG/EC.EN",VAL$; IF STP(VAL$)="" THEN RETURN 
10120 CUSTOMER$=MID(VAL$,1,10); ITEM_CODE$=MID(VAL$,11,10),KEY_1$=VAL$,SEQUENCE_NUM$=MID(VAL$,21) ! SSP238094 jdf
10150 GOSUB FIND_REC
10160 NEXT_ID=LINE_TYPE.CTL
10180 REFRESH_FLG=1
10190 RETURN 
11000 ! Item Query
11010 ITEM_QUERY:
11020 VAL$=""
11030 IF LINE_TYPE$="I" THEN %ITEM_CUST$=DIM(10); PROCESS "QRY_IC0.1.4","../ICG/IC.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
11040 IF LINE_TYPE$="C" THEN %ITEM_CUST$=CUSTOMER_2$; PROCESS "QRY_FM1_ITEM","../ECG/EC.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
11050 IF LINE_TYPE$="F" THEN PROCESS "QRY_FM1","../FMG/FM.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
11060 IF LINE_TYPE$="S" THEN PROCESS "QRY_FMPX","../FMG/FM.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
11070 REFRESH_FLG=1
11080 RETURN 
15000 READ_FM1:
15010 READ (Z(4),KEY=CUSTOMER$+ITEM_CODE$,DOM=NO_FM1)FM1$
15020 ITEM_DESC$=FM1$(42,40)
15030 GOTO 1470
15100 NO_FM1:RETURN 
56002 REM "201270-Quote for companion items to pull only one companion item   
56004 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56005 ! "218819-GUI Panel will not allow a stock item (no customer) to be   
56006 REM "238094-Companion items setup right query  QRY_EDV does not         
56007 REM "264180-GUI Companion Product Set Up Panel allows lower case letters
56008 REM "267389-Companion items are not working in GUI                      
56009 REM "271376-In the GUI companion item setup panel, if you inadvertently 
56010 REM "307440-DBD-339: Multi-vendor feature                               
