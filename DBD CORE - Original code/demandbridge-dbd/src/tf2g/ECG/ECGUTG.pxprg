0010 ! ECGUTG - Catalog Item Chage Utility
0035 REM "5.5 - 08/31/07 - 9.785555 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ECGUTG","../ECG/EC.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 ! 
0130 X0$="EC3UTG",X1$="WebEC Catalog Category Change Utility"
0140 ! 
0150 X0=-1,X2=-1
0160 CALL "ZZCOMP",X0$,X11$,X2$,X3$,X4$,X5$,X0,X1,X2; IF X1>0 THEN CMD_STR$="END"; EXIT 
0170 ! 
0190 DIM Z[NUM(X3$(60,3))],EDJ[12]
0200 ! Files
0210 Z$="01O EDJ...  03O ECG...  04OSECH...  05OSECH...  06O ZZPARM  07O FM1...  09O ECR...  "
0220 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
0300 ! IOList Section
0310 IOLIST EDJ$
0320 IOLIST EDA$
0400 ! System Parameters
0410 GOSUB GET_SYS_PARAM
0430 CALL "*wingrp;disable",FIELDS.GRP$; ENABLE_FLG=0
0440 ! 
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 KEY_1$=KEY(Z[1],END=*RETURN)
0530 MSGBOX MSG("ECGUT1_01")+SEP+MSG("CLEAR_REC")+"?",MSG("VERIFY"),"?,YesNo",ANS$
0540 IF ANS$="NO" THEN RETURN 
0550 CALL "ZZINIT",STR(Z[1]:"00")
0790 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! READ RECORD
1010 FIND_REC:
1015 IF NUL(CATALOG_ID$) OR NUL(ITEM_PATTERN$) THEN RETURN 
1018 ITEM_PATTERN$=PAD(ITEM_PATTERN$,40)
1020 KEY_1$=CATALOG_ID$+ITEM_PATTERN$
1030 FIND (Z[1],KEY=KEY_1$,DOM=TERM_MSG)IOL=0310
1050 GOSUB LOAD_INFO
1060 CALL "*wingrp;Enable",BUTTONS.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*WINGRP;ENABLE",KEY2.GRP$; ENABLE_FLG=1
1070 B_EDJ$=EDJ$
1185 REFRESH_FLG=1
1190 RETURN 
1500 ! Write Record
1510 WRITE_REC:
1540 WRITE (Z[1],KEY=KEY_1$)IOL=0310
1550 ! MSGBOX "Record Updated!","FYI","!"
1560 GOSUB CLEAR_REC
1580 B_EDJ$=EDJ$
1590 RETURN 
2000 ! Load Information
2010 LOAD_INFO:
2013 IF NUL(EDJ$) THEN RETURN 
2015 CATALOG_ID$=EDJ$(1,10); ITEM_PATTERN$=EDJ$(11,40)
2020 DEST_CAT_ID$=EDJ$(51,10); DEST_CATG$=EDJ$(61,10)
2030 COPY_MOVE_CM$=EDJ$(71,1)
2185 B_EDJ$=EDJ$
2190 REFRESH_FLG=1
2195 CALL "*wingrp;Enable",BUTTONS.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*WINGRP;ENABLE",KEY2.GRP$; ENABLE_FLG=1
2199 RETURN 
2300 ! Load Slections   
2310 LOAD_SELECTION:
2315 EDJ$(1,10)=CATALOG_ID$; EDJ$(11,40)=ITEM_PATTERN$
2320 EDJ$(51,10)=DEST_CAT_ID$; EDJ$(61,10)=DEST_CATG$
2330 EDJ$(71,1)=COPY_MOVE_CM$
2490 RETURN 
2500 ! Delete Record
2510 DELETE_REC:
2520 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YesNo",ANS$
2530 IF ANS$="NO" THEN RETURN 
2540 REMOVE (Z[1],KEY=KEY_1$)
2550 ! MSGBOX "Record Deleted!","FYI","!"
2570 GOSUB CLEAR_REC
2590 RETURN 
3000 ! First Record
3010 FIRST_REC:
3020 KEY_1$=KEF(Z[1],END=NO_FIRST)
3030 READ (Z[1],KEY=KEY_1$)IOL=0310
3040 GOSUB LOAD_INFO
3090 RETURN 
3200 ! Last Record
3210 LAST_REC:
3220 KEY_1$=KEL(Z[1],ERR=NO_LAST)
3230 READ (Z[1],KEY=KEY_1$)IOL=0310
3240 GOSUB LOAD_INFO
3290 RETURN 
3400 ! Prior Record
3410 PRIOR_REC:
3420 KEY_1$=KEP(Z[1],END=START_FILE)
3430 READ (Z[1],KEY=KEY_1$)IOL=0310
3440 GOSUB LOAD_INFO
3490 RETURN 
3600 ! Next Record
3610 NEXT_REC:
3620 KEY_1$=KEY(Z[1],END=END_FILE)
3630 READ (Z[1],KEY=KEY_1$)IOL=0310
3640 GOSUB LOAD_INFO
3690 RETURN 
4000 ! UPDATE PROCESS
4010 UPDATE_PROC:
4020 PRINT 'DIALOGUE'(5,5,80,24,"Updating Catalog/Category Cross Reference")
4030 CALL "EC3UTF",X3$,X4$,"","CALLED"
4040 PRINT 'POP'
4090 RETURN 
5000 ! Check Changes
5010 CHECK_CHANGES:
5020 IF EDJ$=B_EDJ$ THEN RETURN 
5030 MSGBOX MSG("REC_ALTERD"),MSG("UPDATE"),"?,YesNo",ANS$
5040 IF ANS$="NO" THEN CMD_STR$="END"; EXIT 
5050 GOSUB WRITE_REC
5090 RETURN 
5500 ! CLEAR RECORD
5510 CLEAR_REC:
5515 CATALOG_ID$=""; ITEM_PATTERN$=""
5520 DEST_CAT_ID$="",DEST_CATG$=""
5530 COPY_MOVE_CM$="",%EC_CATALOG_DESC1$="",%EC_CAT_DESC$=""
5685 REFRESH_FLG=1; NEXT_ID=CATALOG_ID.CTL
5687 CALL "*wingrp;DISABLE",FIELDS.GRP$; CALL "*WINGRP;DISABLE",BUTTONS.GRP$; CALL "*WINGRP;DISABLE",KEY2.GRP$; ENABLE_FLG=0
5690 RETURN 
8000 ! Messages
8010 TERM_MSG:
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN CATALOG_ID$=""; NEXT_ID=CATALOG_ID.CTL; EXIT 
8040 DIM EDJ$(72); NEXT_ID=TO_WEB_CATALOG_CODE.CTL
8050 CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$; CALL "*WINGRP;ENABLE",KEY2.GRP$
8060 ENABLE_FLG=1
8090 RETURN 
8100 ! No First Record
8110 NO_FIRST:
8120 MSGBOX MSG("REC_NO_1ST"),"FYI","!"
8130 RETURN 
8200 ! No Last Record
8210 NO_LAST:
8220 MSGBOX MSG("REC_NO_LST"),"FYI","!"
8230 RETURN 
8300 ! Start of File
8310 START_FILE:
8320 MSGBOX MSG("START_FILE"),"FYI","!"
8330 RETURN 
8400 ! End of File
8410 END_FILE:
8420 MSGBOX MSG("END_OF_FIL"),"FYI","!"
8430 RETURN 
8500 ! Invalid Day Message
8510 INVALID_MSG:
8520 MSGBOX MSG("INVALID_D"),"FYI","!"
8590 RETURN 
8800 ! Invalid Item Code Message
8810 INVALID_ITM:
8820 MSGBOX MSG("INVA_ITEM"),MSG("WARNING"),"STOP"
8830 ITEM_CODE$=""; NEXT_ID=ITEM_CODE.CTL
8890 RETURN 
9000 ! Parameters
9010 GET_SYS_PARAM:
9020 DIM EDJARM$(1000); READ (Z[6],KEY=X3$(9,3)+"E/C",DOM=*NEXT)EDJARM$
9030 FIND (Z[6],KEY=X3$(9,3)+"F/M",DOM=*NEXT)OPPARM$
9090 RETURN 
9800 ! PROCESS THE UPDATE
9810 UPDATE_NOW_PROC:
9820 ! PRINT 'DIALOGUE'(5,5,80,24,"Updating...")
9830 GOSUB UPDATE_NOW
9840 ! PRINT 'POP'
9850 CALL "ZZINIT",STR(Z[1]:"00")
9890 RETURN 
9999 END 
10000 ! Update Now
10010 UPDATE_NOW:
10020 MSGBOX MSG("UPDATE_NOW")+"?",MSG("VERIFY"),"?,YESNO",ANS$
10030 IF ANS$="NO" THEN EXIT 
10050 REM "Update
10060 READ (Z[1],KEY="",DOM=10065)
10070 A1$=KEY(Z[1],END=10240); READ (Z[1],KEY=A1$)A$
10080 FIND (Z[3],KEY=A$(61,10),DOM=10070); REM "if category not on file then skip
10090 TF_CATALOG$=A1$(1,10),PATTERN$=STP(A1$(11,40),2)
10100 READ (Z[4],KEY=TF_CATALOG$,DOM=10105)
10110 REM "process catalog
10120 ECHKEY$=KEY(Z[4],END=10070); IF ECHKEY$(1,LEN(TF_CATALOG$))<>CATALOG$ THEN GOTO 10070 ELSE READ (Z[4],KEY=ECHKEY$)ECH$; PRINT @(0,22),ECHKEY$,
10130 DIM IC0$(1000),FM1$(1000); FIND (Z[7],KEY=ECH$(41,20),DOM=10140)FM1$; ITEMDESC$=FM1$(42,40); GOTO 10150
10140 FIND (Z[7],KEY=ECH$(41,20),DOM=10070)IC0$; ITEMDESC$=IC0$(21,40)
10150 IF UCS(STP(ITEMDESC$,1)) LIKE PATTERN$ AND ECH$(11,10)<>A$(61,10) THEN GOTO 10155 ELSE GOTO 10110
10160 REM "copy to new category
10170 ECHNEW$=ECH$,ECHNEW$(1,10)=A$(51,10),ECHNEW$(11,10)=A$(61,10)
10180 GOSUB 10250; REM "update ECR record
10190 WRITE (Z[5],KEY=ECHNEW$(1,40))ECHNEW$
10200 IF A$(71,1)="C" THEN GOTO 10110
10210 REM "complete move
10220 REMOVE (Z[4],KEY=ECHKEY$); GOTO 10110
10230 GOTO 10110
10240 RETURN 
10250 REM "update ECR record for product
10260 DIM ECR$(1000)
10270 EXTRACT (Z[9],KEY=ECH$(41,20),DOM=10390)ECR$
10280 ON POS(A$(71,1)="MC")-1 GOTO 10290,10320
10290 REM "move - in this situation overwrite the old category with the new
10300 OLDPOS=POS(ECH$(11,10)=ECR$,10); IF OLDPOS=0 THEN GOTO 10380
10310 ECR$(OLDPOS,10)=ECHNEW$(11,10); GOTO 10380
10320 REM "copy - write the new category to the next available category position
10330 CATSTART$="021193203213223325335345355365375385395405415425435445455465"; REM "the starting positions of the category fields on ECR
10340 FOR XX=0 TO LEN(CATSTART$)/3-1
10350 CATPOSITION=NUM(CATSTART$(XX*3+1,3)); IF ECR$(CATPOSITION,10)=DIM(10) THEN EXITTO 10370 ELSE NEXT XX
10360 CATPOSITION=465; REM "if all categories full then assign to last category
10370 ECR$(CATPOSITION,10)=ECHNEW$(11,10); GOTO 10380
10380 WRITE (Z[9],KEY=ECH$(41,20))ECR$
10390 RETURN 
10400 GOTO 10410
10500 SEL_QUERY: VAL$=""
10510 PROCESS "QRY_EDJ","../ECG/EC.EN",VAL$; IF STP(VAL$)="" THEN RETURN 
10520 CATALOG_ID$=VAL$(1,10); ITEM_PATTERN$=VAL$(11); GOTO FIND_REC
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
