0010 REM "Budgets-Open Order Spend Utility <ECGUTS>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 02/29/12 - 11.913611 - crg - SSP# 253245
0037 REM "253245-EC Budgets : Ability to ignore credit card terms in budget  
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="ECGUTS",X1$="Budgets-Open Order Spend Utility"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0200 REM "                                                                 
0240 IF Q1$="" THEN CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=ESC+"BG"+Z0$+ESC+"EG"
0300 REM "IOLISTS                                                          
0330 IOLIST FS2$,FS2{ALL}
0340 IOLIST PO3$,PO3{ALL}
0350 IOLIST GEN$,GEN{ALL}
0360 IOLIST FM1$,FM1{ALL}
0370 IOLIST S$,S{ALL}
0399 ! 
0500 REM "FILES                                                            
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1...  02O FS1...  03O FS2...  04O PO3...  07O FM1...  08O IC0...  09O FMP...  10O FTW...  11O FM3...  12O FSW...  13O ZZPARM  15OSFTW...  16OSFM3...  17OSFSW...  18O AR2...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "                                                                 
0601 DIM ECPARM$(2000); FIND (Z(13),KEY=X3$(9,3)+"E/C",DOM=9900)ECPARM$
0610 ! IF Q1$="" THEN GOSUB 6000
0620 ! IF Q1$="" THEN GOSUB 8100
0640 IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 0641,9900
0700 REM "
1000 PROCESS_START:
1010 REM "Open memory files
1020 OPEN (HFN)"*MEMORY*"; AR1=LFO
1030 OPEN (HFN)"*MEMORY*"; FM3=LFO
1035 OPEN (HFN)"*MEMORY*"; FSW=LFO
1040 OPEN (HFN)"*MEMORY*"; FTW=LFO
1090 ! 
1100 REM "Get all enabled customers
1110 READ (Z[1],KEY="",DOM=*NEXT)
1120 NEXT_CUST:
1130 K$=KEY(Z[1],END=CUST_DONE)
1140 READ (Z[1],KEY=K$,DOM=NEXT_CUST)AR1$; IF MID(AR1$,494,1)<>"Y" OR MID(AR1$,498,1)<>"Y" THEN GOTO NEXT_CUST ! Budgets not enabled for this customer or cutomer excluded from open order sweep
1145 FIND (Z[9],KEY="D"+K$,DOM=NEXT_CUST)FMPD$; IF NUL(MID(FMPD$,52,4)) OR NUL(MID(FMPD$,56,2)) THEN GOTO NEXT_CUST ! Get last print management cycle's FY and period for customer, skip customer if none found
1150 FY=NUM(MID(FMPD$,52,4),ERR=NEXT_CUST); PERIOD=NUM(MID(FMPD$,56,2),ERR=NEXT_CUST)
1151 REM "Figure out next period
1152 FIND (Z[9],KEY="E"+K$+MID(FMPD$,52,4),DOM=NEXT_CUST)FMPE$
1153 NUM_PERIODS=NUM(MID(FMPE$,16,2),ERR=NEXT_CUST)
1154 PERIOD=PERIOD+1; IF PERIOD>NUM_PERIODS THEN PERIOD=1; FY=FY+1
1155 WRITE (AR1,KEY=K$)AR1$,STR(FY) ! Collect enabled customers in memory file, save fiscal year info for later use
1156 IF NOT(NUL(Q1$)) THEN MX=FN%_LOG_MESSAGE_WITH_FLUSH("MESG","CUSTOMER|"+FN%ZZDISP$(K$,"A/R")+"|FY|"+STR(FY)+"|") ! 251330
1160 GOTO NEXT_CUST
1170 CUST_DONE:
1190 IF NOT(NUL(Q1$)) THEN MX=FN%_LOG_MESSAGE_WITH_FLUSH("MESG","TOTAL CUSTOMERS|"+FIN(AR1,"NUMREC")) ! 251330
1199 ! 
1300 REM "Begin reading all orders
1310 READ (Z[2],KEY="",DOM=*NEXT)
1320 NEXT_ORDER:
1330 FS1K$=KEY(Z[2],END=ORDERS_DONE)
1340 SET_PARAM 'XI'; READ (Z[2],KEY=FS1K$,DOM=NEXT_ORDER)FS1$
1342 IF MID(FS1$,54,1)="B" THEN GOTO NEXT_ORDER ! Skip all "B" type orders
1350 FIND (AR1,KEY=MID(FS1$,6,10),DOM=NEXT_ORDER)AR1$,FY$ ! Check if order belongs to an enabled customer, if not skip it
1352 IF AR1$(503,1)="Y" THEN FIND (Z[18],KEY=MID(FS1$,87,2),DOM=*NEXT)AR2$; IF AR2$(57,1)="Y" THEN GOTO NEXT_ORDER ! 253245 - Skip if customer set to ignore cc terms
1355 DIM GEN$(428),GEN[3]; FIND (Z[4],KEY=FS1K$+DIM(5),DOM=*NEXT)IOL=0350
1360 GOSUB GET_ORDER_LINES
1370 GOTO NEXT_ORDER
1395 ORDERS_DONE:
1396 SET_PARAM -'XI'
1399 ! 
1500 REM "Update stats files with memory file data
1505 DO_LOG=1
1510 MEMCHAN=FTW; STATCHAN=Z[10]; SLEN=19; GOSUB UPDATE_OPEN_BALANCES
1515 DO_LOG=0
1520 MEMCHAN=FM3; STATCHAN=Z[11]; SLEN=29; GOSUB UPDATE_OPEN_BALANCES
1530 MEMCHAN=FSW; STATCHAN=Z[12]; SLEN=25; GOSUB UPDATE_OPEN_BALANCES
1599 ! 
1600 REM "Clear open bals for all "V" records that do not appear in memory files
1610 MEMCHAN=FTW; STATCHAN=Z[10]; SLEN=19; DCHAN=Z[15]; DKNO=1; GOSUB CLEAR_OPEN_BALANCES
1620 MEMCHAN=FM3; STATCHAN=Z[11]; SLEN=29; DCHAN=Z[16]; DKNO=2; GOSUB CLEAR_OPEN_BALANCES
1630 MEMCHAN=FSW; STATCHAN=Z[12]; SLEN=25; DCHAN=Z[17]; DKNO=1; GOSUB CLEAR_OPEN_BALANCES
1699 ! 
1700 REM "Update FTW file
5000 REM "EOJ                                                              
5005 CLOSE (AR1),(FM3),(FSW),(FTW)
5010 ! IF Q1$="" THEN C=T; GOSUB 8150
5020 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5040 GOTO 9900
5999 ! 
6000 REM "Update given stats file using memory file data
6005 UPDATE_OPEN_BALANCES:
6010 READ (MEMCHAN,KEY="",DOM=*NEXT) ! Reset memory file
6020 OPENBAL=0; MK$=KEY(MEMCHAN,END=6090); READ (MEMCHAN,KEY=MK$)OPENBAL
6030 DIM S$(SLEN),S[13]; READ (STATCHAN,KEY=MK$,DOM=*NEXT)IOL=0370; GOTO 6040
6035 S$(1,LEN(MK$))=MK$ ! If record missing, then initialize new record
6040 S[0]=OPENBAL; WRITE (STATCHAN,KEY=MK$,ERR=*NEXT)IOL=0370
6050 IF NOT(NUL(Q1$)) AND DO_LOG THEN MX=FN%_LOG_MESSAGE_WITH_FLUSH("MESG","STAT_KEY|"+MK$+"|OPENBAL|"+STR(OPENBAL:"###,###,##0.00")+"|") ! 251330
6080 GOTO 6020
6095 RETURN 
6099 ! 
6100 REM "Clear open bals for all "V" records that do not appear in memory files
6105 CLEAR_OPEN_BALANCES:
6110 READ (DCHAN,KEY="V",KNO=DKNO,DOM=*NEXT)
6115 DK$=KEY(DCHAN,END=6190); DIM S$(SLEN),S[13]; READ (DCHAN,KEY=DK$)IOL=0370
6120 IF MID(DK$,1,1)<>"V" THEN GOTO 6190
6130 FIND (MEMCHAN,KEY=DK$(2)+"V",ERR=*NEXT); GOTO 6115
6150 S[0]=0; WRITE (STATCHAN,KEY=DK$(2)+"V",ERR=*NEXT)IOL=0370
6180 GOTO 6115
6195 RETURN 
6199 ! 
7750 REM "Get value for customer owned goods - logic same as AR2DUC
7755 GET_LINE_VALUE:
7760 DIM FM1[31]; FIND (Z[7],KEY=FS1$(6,10)+FS2$(19,10),DOM=*RETURN)IOL=0360
7770 CO_EXT=0; CALL "FM2EXT",Z[13],0,FM1$(100,4),FM1[4],FS2[10],FM1[3],CO_EXT,2
7795 RETURN 
7799 ! 
7800 REM "Get order line info for customer/location/items
7805 GET_ORDER_LINES:
7810 READ (Z[3],KEY=FS1K$,DOM=*NEXT)
7820 NEXT_ORDER_LINE:
7830 FS2K$=KEY(Z[3],END=ORDER_LINES_DONE)
7840 DIM FS2$(356),FS2[29]; READ (Z[3],KEY=FS2K$,DOM=NEXT_ORDER_LINE,ERR=NEXT_ORDER_LINE)IOL=0330
7845 IF MID(FS2K$,1,8)<>FS1K$ THEN GOTO ORDER_LINES_DONE
7850 IF POS(MID(FS2$,155,1)=" IC")=0 THEN GOTO NEXT_ORDER_LINE ! Skip line if special charge, message line or non-stock
7860 LINE_VALUE=0; IF NUL(MID(FS2$,9,1)) AND MID(FS2$,10,1)="9" THEN GOSUB GET_LINE_VALUE; LINE_VALUE=CO_EXT ELSE LINE_VALUE=FS2[6] ! Calculate line ext if customer owned goods, else use line sell ext
7870 PO3POS$=DIM(4); IF MID(FS2$,18,1)="Y" THEN PO3POS$=" "+MID(FS2$,6,3)
7880 READ (Z[4],KEY=FS1K$+PO3POS$,DOM=*NEXT)
7889 ! Next PO3 shipping record for this line - will be either general shipping or line special shipping
7890 PO3K$=KEY(Z[4],END=NEXT_ORDER_LINE); DIM PO3$(428),PO3[3]; READ (Z[4],KEY=PO3K$,DOM=*NEXT)IOL=0340
7900 IF MID(PO3K$,1,12)<>FS1K$+PO3POS$ THEN GOTO NEXT_ORDER_LINE
7905 IF MID(PO3$,11,1)<>"C" THEN GOTO 7890 ! Skip if not a customer location
7910 FIND (Z[10],KEY=FS1$(6,10)+PO3$(12,4)+FY$+"B",DOM=7890) ! Skip if location has no budget set
7920 IF MID(FS2$,18,1)="Y" THEN LINE_QTY=PO3[0]-PO3[2] ELSE LINE_QTY=FS2[0] ! Get open qty from PO3 or FS2 as applicable
7930 SHIP_VALUE=0; IF FS2[10]<>0 THEN SHIP_VALUE=(LINE_QTY*LINE_VALUE)/FS2[10] ! Prorate open qty value using original ordered qty and line sell ext
7940 CUST_CODE$=FS1$(6,10); ITEM_CODE$=FS2$(19,10); LOC_CODE$=MID(PO3$,12,4); FISC_YEAR$=FY$
7950 FM3TOTAL=0; READ (FM3,KEY=CUST_CODE$+ITEM_CODE$+LOC_CODE$+FISC_YEAR$+"V",DOM=*NEXT)FM3TOTAL
7955 FM3TOTAL+=SHIP_VALUE; WRITE (FM3,KEY=CUST_CODE$+ITEM_CODE$+LOC_CODE$+FISC_YEAR$+"V")FM3TOTAL
7960 FSWTOTAL=0; READ (FSW,KEY=CUST_CODE$+ITEM_CODE$+FISC_YEAR$+"V",DOM=*NEXT)FSWTOTAL
7965 FSWTOTAL+=SHIP_VALUE; WRITE (FSW,KEY=CUST_CODE$+ITEM_CODE$+FISC_YEAR$+"V")FSWTOTAL
7970 FTWTOTAL=0; READ (FTW,KEY=CUST_CODE$+LOC_CODE$+FISC_YEAR$+"V",DOM=*NEXT)FTWTOTAL
7975 FTWTOTAL+=SHIP_VALUE; WRITE (FTW,KEY=CUST_CODE$+LOC_CODE$+FISC_YEAR$+"V")FTWTOTAL
7980 GOTO 7890 ! Get next shipping record for this line
7990 ORDER_LINES_DONE:
7995 RETURN 
7999 ! 
8100 REM "Initialize feedback information
8110 CALL "ZZINFO",Z[1],T9,X3$,T,T0,K,B,D,S0,S1,F$
8115 PRINT @(0,10),"There are "+STR(T)+" records to process"
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Update bar graph
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING                                                 
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL                                
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC                                       
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM                                      
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SET_PARAM -'XI'
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 ! 
56002 REM "249071-EC Budgets-Compute Open Order location and item spend info
56004 REM "251330-Added EC server log message entries
56006 REM "251819-Issue with the Budgets Open Order Balance utility - looking 
56007 REM "253245-EC Budgets : Ability to ignore credit card terms in budget  
