0010 ! ECGMAA - Buyer ID - Setup
0035 REM "5.7 - 04/14/22 - 16.508642 - dmm - SSP# 307309
0037 REM "307309-DBD-113 - Authorize.Net support                             
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0045 ! PROCESS "ECGMAD","../ECG/EC.EN"
0050 RUN "EC3MAD" ! SSP 229993
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 ! 
0130 X0$="EC3MAD",X1$="Credit Card Posting"
0140 ! 
0150 X0=-1,X2=-1
0160 CALL "ZZCOMP",X0$,X11$,X2$,X3$,X4$,X5$,X0,X1,X2; IF X1>0 THEN CMD_STR$="END"; EXIT 
0170 ! 
0190 DIM Z[NUM(X3$(60,3))],EDD[6],B_EDD[6]
0200 ! Files
0210 Z$="01O EDD...  02O AR1...  03O AR6...  04O ASP...  05O FSV...  06O ZZPARM  07O FS1...  "
0220 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
0300 ! IOList Section
0310 IOLIST EDD$,EDD{ALL}
0320 IOLIST AR1$
0330 IOLIST AR6$
0340 IOLIST ASP$
0360 IOLIST FS1$
0370 IOLIST FSV$
0400 ! System Parameters
0410 GOSUB GET_SYS_PARAM
0430 CALL "*wingrp;disable",FIELDS.GRP$; ENABLE_FLG=0
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 IF NOT(NUL(ARG_1$)) THEN CALL "*WINGRP;HIDE",NAV_1.GRP$; ORDER$=ARG_1$; CALL "*WINGRP;DISABLE",KEY2.GRP$; GOTO 0600 ELSE GOTO 0785 ! 235554
0530 IF NOT(NUL(ARG_2$)) THEN {
0532 EDD_ENTRY_EXISTS=0; CALL "UPDEDD;GET_LAST_INVOICE_ENTRY",Z[1],MID(ORDER$,1,2),MID(ORDER$,3,6),ARG_2$,EDD$,EDD{ALL},EDD_ENTRY_EXISTS
0534 IF EDD_ENTRY_EXISTS<>0 THEN SEQ_NUM$=EDD$(9,3); KEY_1$=EDD$(1,11); GOSUB LOAD_INFO
0536  }
0550 ! 
0600 CHECK_EDD:
0610 READ (Z[1],KEY=ARG_1$,DOM=*NEXT)
0620 KK$=KEY(Z[1],END=*NEXT)
0630 IF MID(KK$,1,LEN(ARG_1$))=ARG_1$ THEN HAVE_REC=1 ELSE HAVE_REC=0
0640 IF HAVE_REC=0 AND %SAVE_CC_INFO$="Y" THEN SEQ_NUM$="001"; CALL "ECGMAD;GET_FIRST_CC",%CUSTOMER$,CRED_CARD_TYPE$,CRED_CARD_NUM$,CRED_CARD_EXP$,NAME_ON_CARD$,KEY_1$=ARG_1$+SEQ_NUM$; GOSUB LOAD_SELECTION; GOTO 8040
0785 REFRESH_FLG=1
0790 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! READ RECORD
1010 FIND_REC:
1020 KEY_1$=ORDER$+SEQ_NUM$
1030 FIND (Z[1],KEY=KEY_1$,DOM=TERM_MSG)IOL=0310
1040 IF LEN(EDD$)<476 THEN EDD$+=DIM(476-LEN(EDD$)) ! SSP307309-DBD-113
1050 GOSUB LOAD_INFO
1055 GOSUB GET_ASP
1060 CALL "*wingrp;Enable",BUTTONS.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; NEXT_ID=CRED_CARD_TYPE.CTL
1070 B_EDD$=EDD$; FOR XX=0 TO 6; B_EDD[XX]=EDD[XX]; NEXT XX
1072 IF NUL(EDD$(126,87)) THEN GOSUB GET_BILLING_ADDR ! 204591
1075 CHANGE_FLG=0
1185 REFRESH_FLG=1
1187 NEXT_ID=CRED_CARD_TYPE.CTL
1190 RETURN 
1300 ! GET CREDIT CARD INFORMATION
1310 GET_ASP:
1320 KEY_4$=CRED_CARD_TYPE$,%SAVE_CC_TYPE$=""
1325 DIM ASP$(256)
1330 READ (Z[4],KEY=KEY_4$,DOM=*RETURN)IOL=0340
1380 REFRESH_FLG=1,%SAVE_CC_TYPE$=KEY_4$
1390 RETURN 
1500 ! Write Record
1510 WRITE_REC:
1520 GOSUB VALIDATE_CCNUM; IF FLAG$="EXPIRED DATE" THEN MSGBOX MSG("INVALID")+"  "+MSG("EXP_DATE"),MSG("WARNING"),"!STOP"; NEXT_ID=CRED_CARD_EXP.CTL; EXIT ELSE IF FLAG$<>"GOOD" AND FLAG$<>"NO" THEN MSGBOX "Invalid Credit Card Number",MSG("WARNING"),"!STOP"; NEXT_ID=CRED_CARD_NUM.CTL; EXIT ! SSP#241257, 243414
1522 IF NUL(KEY_1$) THEN KEY_1$=EDD$(1,11)
1530 IF STP(NAME_ON_CARD$,3)="" THEN MSGBOX "The "+MSG("CRDT_NAME")+" is Required",MSG("WARNING"),"!STOP"; NEXT_ID=NAME_ON_CARD.CTL; EXIT ! SSP#241257
1540 WRITE (Z[1],KEY=KEY_1$)IOL=0310
1580 B_EDD$=EDD$; FOR ZZ=0 TO 6; B_EDD[ZZ]=EDD[ZZ]; NEXT ZZ
1585 GOSUB CLEAR_REC ! SGBOX "Record Updated!","FYI","!"
1590 RETURN 
2000 ! Load Information
2010 LOAD_INFO:
2013 IF LEN(EDD$)<476 THEN EDD$+=DIM(476-LEN(EDD$)) ! SSP307309-DBD-113
2015 ORDER$=EDD$(1,8); SEQ_NUM$=EDD$(9,3)
2020 CRED_CARD_TYPE$=EDD$(12,4); CRED_CARD_NUM$=EDD$(16,20)
2025 LAST_FOUR$=STP(CRED_CARD_NUM$),LAST_FOUR$=MID(LAST_FOUR$,LEN(LAST_FOUR$)-3) ! SSP 190139
2030 CRED_CARD_EXP$=EDD$(36,4); NAME_ON_CARD$=EDD$(40,40)
2035 CRED_CARD_CVV$=EDD$(231,4) ! WO227413
2040 INVOICE_NUM$=EDD$(80,8); CRED_APPROVAL$=EDD$(88,30)
2050 INV_DATE$=MID(EDD$,120,6); STATUS$=EDD$(119,1)
2055 BILL_ADDR_1$=EDD$(126,30); BILL_ADDR_2$=EDD$(156,30); BILL_CITY$=EDD$(186,16); BILL_STATE$=EDD$(202,2); BILL_ZIP$=EDD$(204,9) ! 189822
2070 INV_GROSS_TOT=EDD[0]; INV_TAX_AMT=EDD[1]
2075 CRED_AUTH_TOT$=STR(EDD[2]),CRED_INV_NUM$=EDD$(213,8),MERCH_ACCT$=EDD$(221,10) ! SSP 218488
2180 B_EDD$=EDD$; FOR XX=0 TO 6; B_EDD[XX]=EDD[XX]; NEXT XX
2190 REFRESH_FLG=1
2195 CALL "*wingrp;Enable",BUTTONS.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; ENABLE_FLG=1
2199 RETURN 
2300 ! Load Slections
2310 LOAD_SELECTION:
2313 IF LEN(EDD$)=0 OR NUL(ORDER$) THEN RETURN 
2315 EDD$(1,8)=ORDER$; EDD$(9,3)=SEQ_NUM$
2320 EDD$(12,4)=CRED_CARD_TYPE$; EDD$(16,20)=CRED_CARD_NUM$
2330 EDD$(36,4)=CRED_CARD_EXP$; EDD$(40,40)=NAME_ON_CARD$
2340 EDD$(80,8)=INVOICE_NUM$ ! EDD$(88,30)=CRED_APPROVAL$
2345 EDD$(231,4)=CRED_CARD_CVV$ ! WO227413
2350 EDD$(120,6)=INV_DATE$; EDD$(119,1)=STATUS$
2351 EDD$(126,30)=BILL_ADDR_1$; EDD$(156,30)=BILL_ADDR_2$; EDD$(186,16)=BILL_CITY$; EDD$(202,2)=BILL_STATE$; EDD$(204,9)=BILL_ZIP$ ! 189822
2360 EDD[0]=INV_GROSS_TOT; EDD[1]=INV_TAX_AMT
2490 RETURN 
2500 ! Delete Record
2510 DELETE_REC:
2511 ! IF EDD$(88,30)<>DIM(30) THEN MSGBOX MSG("ECGMAD_3"),MSG("WARN"),"!,OK"; RETURN 
2520 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YesNo",ANS$
2530 IF ANS$="NO" THEN RETURN 
2540 REMOVE (Z[1],KEY=KEY_1$,DOM=*NEXT)
2550 ! MSGBOX "Record Deleted!","FYI","!"
2570 GOSUB CLEAR_REC
2590 RETURN 
3000 ! First Record
3010 FIRST_REC:
3020 KEY_1$=KEF(Z[1],END=NO_FIRST)
3030 READ (Z[1],KEY=KEY_1$)IOL=0310
3040 GOSUB LOAD_INFO
3090 RETURN 
3200 ! Last Record
3210 LAST_REC:
3220 KEY_1$=KEL(Z[1],ERR=NO_LAST)
3230 READ (Z[1],KEY=KEY_1$)IOL=0310
3240 GOSUB LOAD_INFO
3290 RETURN 
3400 ! Prior Record
3410 PRIOR_REC:
3420 KEY_1$=KEP(Z[1],END=START_FILE)
3430 READ (Z[1],KEY=KEY_1$)IOL=0310
3440 GOSUB LOAD_INFO
3490 RETURN 
3600 ! Next Record
3610 NEXT_REC:
3620 KEY_1$=KEY(Z[1],END=END_FILE)
3630 READ (Z[1],KEY=KEY_1$)IOL=0310
3640 GOSUB LOAD_INFO
3690 RETURN 
5000 ! Check Changes
5010 CHECK_CHANGES:
5020 GOSUB DO_COMPARE
5021 IF CHANGE_FLG=0 THEN CMD_STR$="END"; EXIT ! SSP#241257
5022 GOSUB VALIDATE_CCNUM; IF FLAG$="EXPIRED DATE" THEN MSGBOX MSG("INVALID")+"  "+MSG("EXP_DATE"),MSG("WARNING"),"!STOP"; NEXT_ID=CRED_CARD_EXP.CTL; EXIT ELSE IF FLAG$<>"GOOD" AND FLAG$<>"NO" THEN MSGBOX "Invalid Credit Card Number",MSG("WARNING"),"!STOP"; NEXT_ID=CRED_CARD_NUM.CTL; EXIT ! SSP#241257, 243414
5025 IF CHANGE_FLG=0 THEN RETURN 
5030 MSGBOX MSG("REC_ALTERD"),MSG("UPDATE"),"?,YesNo",ANS$
5040 IF ANS$="NO" THEN CMD_STR$="END"; EXIT 
5050 GOSUB WRITE_REC
5055 CMD_STR$="END"
5090 RETURN 
5110 DO_COMPARE:
5120 CHANGE_FLG=0
5125 IF EDD$<>"" THEN IF NOT(NUL(EDD$(1,8))) AND NUL(EDD$(9,3)) THEN EDD$(1,8)=DIM(8)
5130 IF MID(EDD$,9,3)<>"000" AND NOT(NUL(MID(EDD$,9,3))) THEN IF EDD$<>B_EDD$ THEN CHANGE_FLG=1; RETURN ! SSP238962 jdf
5140 FOR ZZ=0 TO 6
5150 IF B_EDD[ZZ]<>EDD[ZZ] THEN CHANGE_FLG=1
5160 NEXT ZZ
5190 RETURN 
5500 ! CLEAR RECORD
5510 CLEAR_REC:
5515 IF NUL(ARG_1$) THEN ORDER$=""
5518 SEQ_NUM$=""
5520 CRED_CARD_TYPE$=""; CRED_CARD_NUM$=""
5525 LAST_FOUR$="" ! SSP 190139
5530 CRED_CARD_EXP$=""; NAME_ON_CARD$=""
5540 INVOICE_NUM$=""; CRED_APPROVAL$=""
5550 INV_DATE$=""; STATUS$=""
5551 BILL_ADDR_1$=""; BILL_ADDR_2$=""; BILL_CITY$=""; BILL_STATE$=""; BILL_ZIP$="" ! 189822
5555 CRED_AUTH_TOT$="",CRED_INV_NUM$="",MERCH_ACCT$="" ! SSP 218488
5560 INV_GROSS_TOT=0; INV_TAX_AMT=0
5580 IF NUL(ARG_1$) THEN NEXT_ID=ORDER.CTL ELSE NEXT_ID=SEQ_NUM.CTL
5687 DIM EDD$(476),B_EDD$(476),EDD[6],B_EDD[6] ! SSP307309-DBD-113
5690 REFRESH_FLG=1
5692 %SAVE_CC_TYPE$=""
5693 CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
5695 RETURN 
6000 ! Check the expiration date of the credit card
6010 CHECK_EXP:
6015 IF NUL(CRED_CARD_EXP$) THEN RETURN 
6020 IF NUM(CRED_CARD_EXP$(1,2),ERR=EXP_ERR)<1 THEN GOTO EXP_ERR
6030 IF NUM(CRED_CARD_EXP$(1,2),ERR=EXP_ERR)>12 THEN GOTO EXP_ERR
6040 IF NUM(CRED_CARD_EXP$(3,2),ERR=EXP_ERR)<5 THEN GOTO EXP_ERR
6050 IF NUM(CRED_CARD_EXP$(3,2),ERR=EXP_ERR)>99 THEN GOTO EXP_ERR
6060 ! 
6070 DATE$=DAY
6080 X=NUM(CRED_CARD_EXP$(1,2)); X1=NUM(CRED_CARD_EXP$(3,2))
6090 GOSUB GET_MAX_DAYS
6100 Q$=CRED_CARD_EXP$(3,2)+CRED_CARD_EXP$(1,2)+STR(Q:"00"); GOSUB CONVERT_DATE; EXP_DATE$=Q0$
6110 Q$=DATE$(7,2)+DATE$(1,2)+DATE$(4,2); GOSUB CONVERT_DATE; TODAY_DATE$=Q0$
6120 IF EXP_DATE$<TODAY_DATE$ THEN GOTO EXP_ERR
6190 RETURN 
6300 ! Exp Error Message
6310 EXP_ERR:
6320 MSGBOX MSG("ECGMAD_2"),MSG("WARNING"),"STOP"
6330 CRED_CARD_EXP$=""; NEXT_ID=CRED_CARD_EXP.CTL
6340 MULTI_CTLG_1$=EC_CATALOG_ID$
6390 REFRESH_FLG=1
6395 RETURN 
6400 ! Get the Max Number of Days
6410 GET_MAX_DAYS:
6420 Q=31-SGN(POS(STR(X:"00")="0904061102",2))
6430 IF X=2 THEN Q=28; IF MOD(X1,4)=0 AND MOD(X1,100)<>0 OR MOD(X1,400) THEN Q=29
6440 ! NEXT_ID=EC_CATALOG_ID.CTL
6480 REFRESH_FLG=1
6490 RETURN 
6500 ! Covert Dates
6510 CONVERT_DATE:
6520 Q0$=""
6530 Q$=STP(Q$,1)
6540 IF Q$="" THEN RETURN 
6550 IF LEN(Q$)=8 THEN GOTO 6580 ELSE IF LEN(Q$)=6 THEN D1$=STR(NUM(Q$(1,2)):"00") ELSE RETURN 
6560 IF D1$<"50" THEN Q$="20"+Q$ ELSE Q$="19"+Q$
6570 Q0$=CHR(NUM(Q$(1,3),ERR=*NEXT)-125)+Q$(4,1)+Q$(5,2)+Q$(7,2)
6590 RETURN 
8000 ! Messages
8010 TERM_MSG:
8015 IF SEQ_NUM$="000" THEN RETURN ! SSP238962 jdf
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN SEQ_NUM$=""; NEXT_ID=SEQ_NUM.CTL; EXIT 
8040 DIM EDD$(476),EDD[6]; NEXT_ID=CRED_CARD_TYPE.CTL ! SSP307309-DBD-113
8050 CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
8060 IF NUL(EDD$(126,87)) THEN GOSUB GET_BILLING_ADDR ! 204591
8080 ENABLE_FLG=1,REFRESH_FLG=1
8090 RETURN 
8100 ! No First Record
8110 NO_FIRST:
8120 MSGBOX MSG("REC_NO_1ST"),"FYI","!"
8130 RETURN 
8200 ! No Last Record
8210 NO_LAST:
8220 MSGBOX MSG("REC_NO_LST$"),"FYI","!"
8230 RETURN 
8300 ! Start of File
8310 START_FILE:
8320 MSGBOX MSG("START_FILE"),"FYI","!"
8330 RETURN 
8400 ! End of File
8410 END_FILE:
8420 MSGBOX MSG("END_OF_FIL"),"FYI","!"
8430 RETURN 
8500 ! Invalid Day Message
8510 INVALID_MSG:
8520 MSGBOX MSG("INVALID_D"),"FYI","!"
8590 RETURN 
8800 ! Invalid Item Code Message
8810 INVALID_ITM:
8820 MSGBOX MSG("INVA_ITEM"),MSG("WARNING"),"STOP"
8830 ITEM_CODE$=""; NEXT_ID=ITEM_CODE.CTL
8890 RETURN 
9000 ! Parameters
9010 GET_SYS_PARAM:
9020 DIM ECPARM$(1000); READ (Z[6],KEY=X3$(9,3)+"E/C",DOM=*NEXT)ECPARM$
9030 DIM ARPARM$(255); READ (Z(6),KEY=%C$+"A/R",DOM=*NEXT)ARPARM$
9035 DIM AR3PARAM$(255); READ (Z(6),KEY=%C$+"AR3",DOM=*NEXT)AR3PARAM$
9040 DIM USERPARM$(255); READ (Z(6),KEY="osec"+X3$(40,3),DOM=*NEXT)USERPARM$
9090 RETURN 
9999 END 
18000 SEL_PASSWORD:
18001 RETURN ! SSP 299143
18005 PRINT 'CI',
18010 L=0,OP$=ID'*,XX=ID'COL,YY=ID'LINE,XXX=ID'COLS,YYY=ID'LINES; DIM OP$[200],NA$[200]
18020 ! 
18030 NXT_OPT:
18040 X=POS(","=OP$); IF X=0 THEN GOTO END_OPT
18050 LST$=OP$(1,X-1),OP$=OP$(X+1),L=L+1,OP$[L]=LST$,NA$[L]=EVS("ID'"+LST$+"$")
18060 ! PRINT OP$[L],"  ",NA$[L]
18070 GOTO NXT_OPT
18080 ! 
18090 END_OPT:
18100 MULTI_LINE REMOVE ID
18110 IF REST=0 THEN MULTI_LINE ID,@(XX,YY,XXX,YYY),OPT="H"+OPT$; HIDE CONTROL ID+3000; LAST_FOUR$="",REFRESH_FLG=1 ELSE MULTI_LINE ID,@(XX,YY,XXX,YYY),OPT="H$"+OPT$; HEIGHT$=ID'HEIGHT$; SHOW CONTROL ID+3000; LAST_FOUR$=STP(CRED_CARD_NUM$),LAST_FOUR$=MID(LAST_FOUR$,LEN(LAST_FOUR$)-3,ERR=*PROCEED),REFRESH_FLG=1 ! SSP 190139  ! SSP238962 jdf
18120 FOR AA=1 TO L
18130 BB$=PAD(OP$[AA],6," "); IF POS(BB$="Len   Col   Cols  Line  Lines Width Height",6)<>0 THEN CONTINUE
18140 IF NOT(NUL(NA$[AA])) THEN EXECUTE "id'"+OP$[AA]+"$="+QUO+NA$[AA]+QUO
18150 NEXT AA
18160 RETURN 
18190 ! 
18200 SEL_PASSWORD_2:! WO227413
18205 PRINT 'CI',
18210 L=0,OP$=ID'*,XX=ID'COL,YY=ID'LINE,XXX=ID'COLS,YYY=ID'LINES; DIM OP$[200],NA$[200]
18220 ! 
18230 NXT_OPT_2:
18240 X=POS(","=OP$); IF X=0 THEN GOTO END_OPT_2
18250 LST$=OP$(1,X-1),OP$=OP$(X+1),L=L+1,OP$[L]=LST$,NA$[L]=EVS("ID'"+LST$+"$")
18270 GOTO NXT_OPT_2
18280 ! 
18290 END_OPT_2:
18300 MULTI_LINE REMOVE ID
18310 IF REST=0 THEN MULTI_LINE ID,@(XX,YY,XXX,YYY),OPT="H"+OPT$; HIDE CONTROL ID+3000; REFRESH_FLG=1 ELSE MULTI_LINE ID,@(XX,YY,XXX,YYY),OPT="H$"+OPT$; HEIGHT$=ID'HEIGHT$; SHOW CONTROL ID+3000; REFRESH_FLG=1
18320 FOR AA=1 TO L
18330 BB$=PAD(OP$[AA],6," "); IF POS(BB$="Len   Col   Cols  Line  Lines Width Height",6)<>0 THEN CONTINUE
18340 IF NOT(NUL(NA$[AA])) THEN EXECUTE "id'"+OP$[AA]+"$="+QUO+NA$[AA]+QUO
18350 NEXT AA
18360 RETURN 
18390 ! 
18700 GET_BILLING_ADDR:
18710 FIND (Z[6],KEY=X3$(9,3)+"AR1",DOM=*NEXT)P1$
18730 IF P1$(64,1)<>"Y" THEN GOTO 18780
18740 FIND (Z[5],KEY=ORDER$,DOM=*NEXT)IOL=0370
18750 FSV$=PAD(FSV$,152)
18760 EDD$(126,87)=FSV$(54,87)
18770 IF NOT(NUL(EDD$(126,87))) THEN GOTO 18855
18780 FIND (Z[7],KEY=ORDER$,DOM=*NEXT)IOL=0360; DEF_CUST$=FS1$(6,10); GOTO 18790 ! SSP230634 jdf, 238821
18785 DEF_CUST$=%CUSTOMER$ ! 238821
18790 FIND (Z[2],KEY=DEF_CUST$,DOM=*RETURN)IOL=0320 ! SSP230634 jdf, 238821
18800 EDD$(126,87)=AR1$(56,87)
18855 BILL_ADDR_1$=EDD$(126,30); BILL_ADDR_2$=EDD$(156,30); BILL_CITY$=EDD$(186,16); BILL_STATE$=EDD$(202,2); BILL_ZIP$=EDD$(204,9)
18860 RETURN 
19000 GET_FIRST_CC:
19010 ENTER CUSTOMER$,TYPE$,CC_NUMBER$,CC_EXP_DATE$,CC_NAME$,ERR=*NEXT
19020 _ARZ=HFN; OPEN (_ARZ)"ARZ"+%C$
19030 READ (_ARZ,KEY=CUSTOMER$+%SAVE_CC_TYPE$,DOM=*NEXT)
19040 ARZ_K$=KEY(_ARZ,END=NO_REC); READ (_ARZ)ARZ$
19050 IF ARZ_K$(1,10)<>CUSTOMER$ THEN GOTO NO_REC
19060 TYPE$=ARZ$(11,4),CC_NUMBER$=ARZ$(20,20),CC_EXP_DATE$=ARZ$(40,10),CC_NAME$=ARZ$(50,40)
19100 NO_REC:CLOSE (_ARZ); EXIT 
19500 VALIDATE_CCNUM:
19510 CALL "AR2VCC",%X3$,%X4$,STP(CRED_CARD_NUM$,1)+"|"+PAD(CRED_CARD_EXP$,4),CRED_CARD_TYPE$,FLAG$ ! SSP#241257
19520 RETURN 
56000 ! "190139-Credit Card Information on Orders is showing to all numbers
56001 ! "       should only display the last four digits
56010 ! "189822-Credit Card Processing for webec back orders filled
56012 REM "204591-Billing address does not automatically populate like in CHUI
56014 REM "204668-Credit card invoice processed through Credit Card Plus and  
56015 ! "225020-Populate the order credit card info from the customer credit
56018 REM "227413-Credit card transactions need to support CVV security field
56020 REM "230634-Experienceing issues with the cc name entered in the        
56021 REM "235554-Credit Card file EDD maintanance screen broken in GUI       
56022 REM "238821-Processing credit cards and getting error running credit    
56023 REM "243414-Credit Card Num validation returning "Invalid"  
56024 REM "268862-Requesting changes to ECGMAD CC screen.                     
56025 REM "229993-PCI/PA-DSS New Credit Card Processing - Vault Module        
56026 REM "299143-PVX 2017 windx on PVX 7 data set error in buyer setup at    
56028 REM "307309-DBD-113 - Authorize.Net support                             
