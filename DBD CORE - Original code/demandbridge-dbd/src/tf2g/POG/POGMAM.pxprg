0010 ! POGMAM - Purchase Order Sub Menu
0035 REM "5.7 - 09/03/19 - 13.237222 - jvv - SSP# 307199
0037 REM "307199-Enhancements to GUI Stock PO Entry - DBD-54                 
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "POGMAM","../POG/PO.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0113 OPT$="PO"
0115 %POGMAM=1; PROCESS "FMGODX","../POG/PO.EN",CMD_OPT$,OPT$; %POGMAM=0; IF CMD_OPT$="EXIT" THEN CMD_STR$="END"; RETURN 
0120 X0$="POGMAM",X1$="Cash Receipts Entry"
0125 X2=-1; X0=-1; DEL_FLG=0
0130 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0140 DIM Z[NUM(X3$(60,3))],AP4[1],PO2[27],PO3[3]
0150 Z$="01O PO1...  02O AP4...  03O PO4...  04O PO5...  05O PO2...  06O ZZPARM  07O PO3...  08O PO6...  09ORFS1...  10O POE...  11O FSH...  12O FTO...  "
0153 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0155 ! 
0160 IOLIST PO1$
0170 IOLIST AP4$,AP4{ALL}
0180 IOLIST PO2$,PO2{ALL}
0190 IOLIST PO3$,PO3{ALL}
0300 ! setup messages
0400 ! 
0410 GOSUB GET_PARAM
0430 IF POS("P/O"=X4$(7),12)=0 THEN X4$+="P/O"+" z2Z6A1 "; WRITE (Z[6],KEY=X3$(9,3)+"ZZP")X4$
0450 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,-1,X1,-1
0460 ! 
0470 DIM AP4$(227),AP4[2],PO1$(383)
0480 PO1$(191,1)="N"; %NEW_PO=0; HOLD_NUM$=""
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0560 REFRESH_FLG=1
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 %CUST_DIV$=""; %CUST_CODE$=""; %CUSTOMER$=""
0930 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! Get Purchase Order Information
1010 FIND_REC:
1011 CALL "UPDFTO;CHECK_PO_LOCK",X3$,X4$,"R",NEW_FTO$,ORDER$,FTO_REC$,BATCH_EXISTS$,"Y"; IF BATCH_EXISTS$="Y" THEN RETURN ! SSP 262321
1015 IF NUL(ORDER$) THEN RETURN 
1017 IF ORDER$(9,1)<>" " THEN GOTO INVALID_ORDER
1020 KEY_1$=ORDER$
1025 IF MID(ORDER$,1,2)<>"00" THEN {
1026 FIND (Z(11),KEY=MID(ORDER$,1,2),DOM=*NEXT); GOTO 1028
1027 MSGBOX "Division : "+ORDER$(1,2)+" is not on file",MSG("WARNING"),"stop"; NEXT_ID=ORDER.CTL,ORDER$="",REFRESH_FLG=1; EXIT 
1028  }
1030 READ (Z[1],KEY=ORDER$,DOM=NEW_PO)IOL=0160
1040 IF HOLD_NUM$<>ORDER$ THEN HOLD_NUM$=ORDER$; SA_FLG=1
1050 GOSUB LOAD_INFO
1060 GOSUB LOAD_LINE
1065 IF NOT(%NEW_PO) AND SA_FLG=1 THEN GOSUB SET_AVAIL; SA_FLG=0 ! CALL "POGMAH",X3$,PO1$(173,1),"!"+KEY_1$,"-1"
1068 %NEW_PO=0
1070 CALL "*wingrp;Enable",BUTTONS.GRP$
1075 CALL "*wingrp;Enable",BUTTONS_2.GRP$
1077 NEXT_ID=BUTTON_3.CTL
1080 REFRESH_FLG=1
1090 RETURN 
2000 ! Load the Initial screen
2010 LOAD_INFO:
2020 VENDOR$=PO1$(7,10)
2030 ORDER_DATE$=PO1$(192,6); DATE_REQUESTED$=PO1$(204,6)
2040 PLANT_CODE$=PO1$(17,4)
2050 %SPECS=0
2080 REFRESH_FLG=1
2090 RETURN 
2200 ! Load the LIne information of existing PO's
2210 LOAD_LINE:
2215 LIST_BOX LOAD ORDER_LINES.CTL,""
2220 READ (Z[5],KEY=ORDER$,DOM=*NEXT)
2230 KEY_5$=KEY(Z[5],END=*RETURN); READ (Z[5],KEY=KEY_5$)IOL=0180
2240 IF KEY_5$(1,9)<>ORDER$ THEN RETURN 
2243 QTY=FN%QTY_IN_UM(PO2[1],PO2$(77,4),PO2[2])
2245 IF NUL(PO2$(77,4)) THEN UM_DESC$="" ELSE UM_DESC$=STP(PO2$(77,4),3," ")+"/"+STP(STR(PO2[2]:"###,###"),3," ")
2250 LIST_BOX LOAD ORDER_LINES.CTL,0,PO2$(7,3)+SEP+PO2$(101,10)+SEP+PO2$(28,40)+SEP+STR(QTY:"###,###-")+SEP+UM_DESC$+SEP+STR(PO2[4]:"$,###,###.00")+SEP+""
2255 IF PO2$(81,1)="Y" THEN %SPECS=1
2260 TOT_AMT=PO2[1]
2265 GOSUB LOAD_SHIP_INFO
2270 GOTO 2230
2290 RETURN 
2400 ! List shipping info
2410 LOAD_SHIP_INFO:
2420 ! READ (Z[7],KEY=ORDER$+"    ",DOM=*NEXT)IOL=0190; GOTO 2500
2430 READ (Z[7],KEY=KEY_5$+" ",DOM=*NEXT)
2440 KEY_7$=KEY(Z[7],END=*RETURN); READ (Z[7],KEY=KEY_7$)IOL=0190
2450 IF KEY_7$(1,12)<>KEY_5$ THEN GOTO 2500
2455 TOT_AMT-=PO3[0]
2457 QTY_SHIP=PO3[0]
2460 LIST_BOX LOAD ORDER_LINES.CTL,0,""+SEP+""+SEP+""+SEP+""+SEP+""+SEP+""+SEP+STR(QTY_SHIP:"###,###-")+" - "+PO3$(12,4)+": "+STP(PO3$(16,30))+"-"+STP(PO3$(106,16))+", "+PO3$(122,2)
2490 GOTO 2440
2500 ! Load Shipping Info.
2510 IF TOT_AMT<=0 THEN RETURN 
2520 READ (Z[7],KEY=ORDER$+"    ",DOM=*RETURN)IOL=0190
2525 QTY_SHIP=TOT_AMT
2530 LIST_BOX LOAD ORDER_LINES.CTL,0,""+SEP+""+SEP+""+SEP+""+SEP+""+SEP+""+SEP+STR(QTY_SHIP:"###,###-")+" - "+PO3$(12,4)+": "+STP(PO3$(16,30))+"-"+STP(PO3$(106,16))+", "+PO3$(122,2)
2590 RETURN 
3000 ! Show Lines
3010 SHOW_LINES:
3030 PROCESS "POGMAB","../POG/PO.EN",ORDER$
3050 GOSUB LOAD_LINE
3080 REFRESH_FLG=1
3090 RETURN 
3100 SELECT_LINE:
3120 IF NUL(ORDER_LINES$) THEN RETURN 
3125 LINE_NUM$=MID(ORDER_LINES$,1,3)
3130 PROCESS "POGMAB.2","../POG/PO.EN",ORDER$+LINE_NUM$
3140 GOSUB LOAD_LINE
3150 REFRESH_FLG=1
3190 RETURN 
3200 ! Show the Header
3210 SHOW_HEAD:
3230 PROCESS "POGMAA","../POG/PO.EN",ORDER$
3240 IF %DEL_FLG THEN %DEL_FLG=0; GOSUB CLEAR_REC; NEXT_ID=ORDER.CTL; REFRESH_FLG=1; RETURN 
3250 GOTO FIND_REC
3290 RETURN 
4020 GOSUB CHECK_AUDIT
4200 ! Delete Purchase Order
4210 DELETE_REC:
4220 CALL "UPDFTO;CHECK_PO_LOCK",X3$,X4$,"R",NEW_FTO$,ORDER$,FTO_REC$,BATCH_EXISTS$,"Y"; IF BATCH_EXISTS$="Y" THEN RETURN ! SSP 262321
4250 MSGBOX MSG("DELETE_REC"),MSG("VERIFY"),"?,YesNo",ANS$
4260 IF ANS$="NO" THEN RETURN 
4265 IF DELETE_HIDE THEN MSGBOX "Access Denied, this Purchase Order has been received, you may not delete it",MSG("WARNING"),"!"; RETURN ! SSP229416 jdf 
4270 %DEL_FLG=1
4280 FIND (Z[1],KEY=ORDER$,DOM=*RETURN)PO1_DEL$ ! WO252273, need PO1_DEL$ for FV3
4290 REMOVE (Z[1],KEY=ORDER$); CALL "FM2DEL;WRITE_FV3",X3$,X4$,PO1_DEL$,FM2DEL_OTHER$ ! WO252273
4300 KEY_5$=ORDER$
4310 READ (Z[5],KEY=KEY_5$,DOM=*NEXT)
4320 KEY_5$=KEY(Z[5],END=4360); READ (Z[5],KEY=KEY_5$)
4330 IF KEY_5$(1,9)<>ORDER$ THEN GOTO 4360
4340 REMOVE (Z[5],KEY=KEY_5$)
4350 GOTO 4320
4360 KEY_7$=ORDER$
4370 READ (Z[7],KEY=KEY_7$,DOM=*NEXT)
4380 KEY_7$=KEY(Z[7],END=*RETURN); READ (Z[7],KEY=KEY_7$)
4390 IF KEY_7$(1,9)<>ORDER$ THEN RETURN 
4400 REMOVE (Z[7],KEY=KEY_7$)
4410 GOTO 4380
4420 RETURN 
5000 ! Get the Next P/O Number; 277659 - support for alphanumeric sequences
5010 GET_NEXT_NUM:
5020 PO1$(297,2)="A "
5030 FIND (Z[11],KEY=PO1$(297,2),DOM=5045)
5040 D4$(11,2)=PO1$(297,2)
5045 PO1$(297,2)=D4$(11,2)
5050 ! EXTRACT RECORD (Z[11],KEY=PO1$(297,2),DOM=*RETURN)N$
5060 ! Z=0; PO1$(299,6)=N$(5,6)
5070 ! P0=NUM(PO1$(299,6)),P0+=1; IF P0>999999 THEN P0=1 ELSE IF P0=1 THEN PO1$(299,6)="000001"; GOTO 5070
5080 ! IF Z>0 THEN N$(Z,6)=STR(P0:"000000") ELSE N$(5,6)=STR(P0:"000000")
5090 ! WRITE RECORD (Z[11])N$
5095 ERRMSG$="",NEXT_ORDER$=""; CALL "FMGMPB;GET_NEXT_ORDERNUM",Z[11],PO1$(297,2),"","",NEXT_ORDER$,ERRMSG$
5100 PO1$(297,8)=NEXT_ORDER$
5105 FIND (Z[1],KEY=PO1$(297,9),DOM=*NEXT); GOTO 5095
5110 ORDER$=PO1$(297,9)
5180 REFRESH_FLG=1
5190 RETURN 
5500 ! Clear The Screen
5510 CLEAR_REC:
5515 GOSUB CHECK_AVAIL
5520 ORDER$=""
5530 VENDOR$=""; %VEND_NAME$=""
5540 ORDER_DATE$=""; DATE_REQUESTED$=""
5550 PLANT_CODE$=""; %PLANT_NAME$=""
5560 CALL "*wingrp;Disable",BUTTONS.GRP$
5570 LIST_BOX LOAD ORDER_LINES.CTL,""
5580 REFRESH_FLG=1
5590 RETURN 
6000 ! Check to see if writing to Inventory Availability is needed.
6010 CHECK_AVAIL:
6020 IF NUL(HOLD_KEY$) THEN RETURN 
6030 CALL "POGMAH",X3$,"S","!"+HOLD_KEY$,"1"
6040 HOLD_KEY$=""; HOLD_TYPE$=""
6090 RETURN 
6200 ! Set the Hold values for Inventory Availability.
6210 SET_AVAIL:
6215 CALL "UPDFTO;CHECK_PO_LOCK",X3$,X4$,"R",NEW_FTO$,ORDER$,FTO_REC$,BATCH_EXISTS$,"Y"; IF BATCH_EXISTS$="Y" THEN ORDER.CTL'VALUE$=ORDER$; ORDER$="",REFRESH_FLG=1; LIST_BOX LOAD ORDER_LINES.CTL,""; EXIT ; REM SSP 202849 SSP 262321
6220 HOLD_KEY$=ORDER$; HOLD_TYPE$=PO1$(173,1)
6230 CALL "POGMAH",X3$,HOLD_TYPE$,"!"+HOLD_KEY$,"-1"
6290 RETURN 
7400 ! Check Audit Report
7410 CHECK_AUDIT:
7420 FIND (Z[1],KEY="",DOM=*RETURN)V0$,K0$
7430 IF K4$>"" THEN MSGBOX MSG("UPDATE_ST"),MSG("WARNING"),"STOP"; CMD_STR$="END"; RETURN 
7440 EXTRACT (Z[1],KEY="",ERR=WRAPUP)
7450 MSGBOX MSG("AUDIT_RPT")+" "+V0$(22,4)+"."+V0$(26,2)+MSG("HAS_PRT")+"."+SEP+MSG("CONTINUE?"),MSG("VERIFY"),"?,YesNo",ANS$
7460 IF ANS$="NO" THEN GOTO WRAPUP
7470 REMOVE (Z[1],KEY="")
7490 RETURN 
8000 ! New Order
8010 NEW_PO:
8020 GOSUB CHECK_ORDER
8030 IF PO_FLG THEN PO_FLG=0; EXIT 
8050 %NEW_PO=1
8060 PROCESS "POGMAA","../POG/PO.EN",ORDER$
8063 HOLD_KEY$=ORDER$; HOLD_TYPE$="S" ! CALL "PO2MAH",X3$,"S","!"+ORDER$,"1"
8065 IF %DEL_FLG THEN %DEL_FLG=0; GOSUB CLEAR_REC; NEXT_ID=ORDER.CTL; REFRESH_FLG=1; RETURN 
8070 GOTO FIND_REC
8090 RETURN 
8200 ! Invalid Order with a Suffix
8210 INVALID_ORDER:
8220 MSGBOX MSG("POGMAM_10")+SEP+MSG("POGMAM_11")+".",MSG("FYI"),"!"
8230 ORDER$=""
8240 NEXT_ID=ORDER.CTL
8280 REFRESH_FLG=1
8290 EXIT 
8500 ! Check for Sales Order
8510 CHECK_ORDER:
8520 READ (Z[9],KEY=KEY_1$(1,8),DOM=*RETURN)
8530 MSGBOX MSG("POGMAM_12")+".",MSG("FYI"),"STOP"
8540 ORDER$=""; NEXT_ID=ORDER.CTL
8550 PO_FLG=1
8580 REFRESH_FLG=1
8590 RETURN 
9000 ! SYSTEM PARAMETERS
9010 GET_PARAM:
9020 DIM S6$(256); READ (Z[6],KEY="osec"+X3$(40,3),DOM=*NEXT)S6$
9025 OP_CODE$=X3$(40,3)+DIM(5)
9030 DIM D4$(20); FIND (Z[6],KEY=OP_CODE$+"FD",DOM=*NEXT)D4$
9090 RETURN 
9200 ! Process Query
9210 QRY_PROCESS:
9220 ENTER QRY_VAL$
9230 IF MID(QRY_VAL$,9,1)<>" " THEN EXIT 123
9240 EXIT 
9300 ! Save the Information and clear out.
9310 SAVE_RTN:
9320 ! GOSUB REPRINT_PO
9330 PERFORM "POGMAM;Check_Avail"; PERFORM "POGMAM;Clear_rec"
9390 RETURN 
9500 ! Reprint PO Routine
9510 REPRINT_PO:
9515 IF NUL(ORDER$) THEN RETURN 
9520 IF MID(PO1$,189,1)="P" THEN {
9540 MSGBOX MSG("POGMAM_13")+" - "+ORDER$,MSG("ATTN"),"?,YesNo",ANS$
9550 IF ANS$="YES" THEN KEY_8$="P"+ORDER$; WRITE (Z[8],KEY=KEY_8$)
9560 RETURN  }
9570 KEY_8$="P"+ORDER$
9580 REMOVE (Z[8],KEY=KEY_8$,DOM=*NEXT)
9590 REMOVE (Z[8],KEY=KEY_8$+"P",DOM=*NEXT)
9595 RETURN 
9900 ! Exit Routine
9910 EXIT_RTN:
9915 %VENDOR$=""
9917 GOSUB CHECK_AVAIL ! CALL "POGMAH",X3$,PO1$(173,1),"!"+KEY_1$,"1"
9930 ! GOSUB REPRINT_PO
9985 CMD_STR$="END"
9990 RETURN 
9999 END 
10000 ! First Record
10010 FIRST_REC:
10020 KEY_1$=KEF(Z[1],END=NO_FIRST)
10030 READ (Z[1],KEY=KEY_1$)IOL=0160
10033 IF KEY_1$(9,1)<>DIM(1) THEN GOTO NEXT_REC
10035 GOSUB CHECK_AVAIL
10040 GOSUB LOAD_INFO
10045 ORDER$=KEY_1$; GOSUB LOAD_LINE
10048 GOSUB SET_AVAIL
10050 CALL "*wingrp;Enable",BUTTONS.GRP$
10055 CALL "*wingrp;Enable",BUTTONS_2.GRP$
10059 RETURN 
10060 ! Last Record
10070 LAST_REC:
10080 KEY_1$=KEL(Z[1],ERR=NO_LAST)
10090 READ (Z[1],KEY=KEY_1$)IOL=0160
10093 IF KEY_1$(9,1)<>DIM(1) THEN GOTO PRIOR_REC
10095 GOSUB CHECK_AVAIL
10100 GOSUB LOAD_INFO
10105 ORDER$=KEY_1$; GOSUB LOAD_LINE
10108 GOSUB SET_AVAIL
10110 CALL "*wingrp;Enable",BUTTONS.GRP$
10115 CALL "*wingrp;Enable",BUTTONS_2.GRP$
10119 RETURN 
10120 ! Prior Record
10130 PRIOR_REC:
10140 KEY_1$=KEP(Z[1],END=START_FILE)
10150 READ (Z[1],KEY=KEY_1$)IOL=0160
10153 IF KEY_1$(9,1)<>DIM(1) THEN GOTO 10140
10155 GOSUB CHECK_AVAIL
10160 GOSUB LOAD_INFO
10165 ORDER$=KEY_1$; GOSUB LOAD_LINE
10168 GOSUB SET_AVAIL
10170 CALL "*wingrp;Enable",BUTTONS.GRP$
10175 CALL "*wingrp;Enable",BUTTONS_2.GRP$
10179 RETURN 
10180 ! Next Record
10190 NEXT_REC:
10200 KEY_1$=KEY(Z[1],END=END_FILE)
10210 READ (Z[1],KEY=KEY_1$)IOL=0160
10213 IF KEY_1$(9,1)<>DIM(1) THEN GOTO 10200
10215 GOSUB CHECK_AVAIL
10220 GOSUB LOAD_INFO
10225 ORDER$=KEY_1$; GOSUB LOAD_LINE
10228 GOSUB SET_AVAIL
10230 CALL "*wingrp;Enable",BUTTONS.GRP$
10235 CALL "*wingrp;Enable",BUTTONS_2.GRP$
10239 RETURN 
11000 PERMIT_DELETE:! SSP229416 jdf
11001 DELETE_HIDE=0 ! SSP229416 jdf
11003 PER_KEY$=ORDER$ ! SSP229416 jdf
11004 IF PER_KEY$(9,1)<>" " THEN GOTO 11090 ! SSP229416 jdf
11030 READ (Z[5],KEY=PER_KEY$,DOM=*NEXT) ! SSP229416 jdf
11040 PER_Q1$=KEY(Z[5],END=11090) ! SSP229416 jdf
11050 IF PER_KEY$<>PER_Q1$(1,9) THEN GOTO 11090 ! SSP229416 jdf
11060 READ (Z[5],KEY=PER_Q1$)IOL=0180 ! SSP229416 jdf
11065 IF PO2[6]<>0 THEN DELETE_HIDE=1 ! SSP229416 jdf
11070 IF PO2[7]<>0 THEN DELETE_HIDE=1 ! SSP229416 jdf
11080 GOTO 11040 ! SSP229416 jdf
11150 RETURN ! SSP229416 jdf
12000 ! No First Record
12010 NO_FIRST:
12020 MSGBOX MSG("REC_NO_1ST"),"FYI","!"
12030 RETURN 
12040 ! No Last Record
12050 NO_LAST:
12060 MSGBOX MSG("REC_NO_LST$"),"FYI","!"
12070 RETURN 
12080 ! Start of File
12090 START_FILE:
12100 MSGBOX MSG("START_FILE"),"FYI","!"
12110 RETURN 
12120 ! End of File
12130 END_FILE:
12140 MSGBOX MSG("END_OF_FIL"),"FYI","!"
12150 RETURN 
56000 ! "197905-Program FMGODX Julie feels this panel is clunky. Get rid or 
56001 REM "202849-Ref 198988 - After PO is received, going back into chui and    
56002 ! "216831-Stock PO entry.  This should not allow entry of an order    
56003 REM "229416-Is there a way to restrict users from deleting POs after    
56004 REM "252273-New Deleted Order and Deleted PO file. Modify delete routine
56005 REM "262321-WMS:  While in WMS PO receiving - able to delete po  - stock
56006 REM "277659-Modify Division Next Order# sequence logic, allow for alpha 
56007 REM "284116-Issue with Stock PO when you click Save and then Add New    
