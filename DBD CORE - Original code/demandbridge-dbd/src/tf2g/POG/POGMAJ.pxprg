0010 ! POGMAB - File Maintenance Program for AT5_Stock PO Entry (="AT5"+%C$)
0015 IF ROWS>1 THEN FOR XXX=1 TO ROWS-1; GRID DELETE PO_LINE.CTL,0,1; NEXT XXX
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Nov. 27, 2002 10:15
0030 ! ************************************************************************
0035 REM "5.7 - 08/14/19 - 16.235833 - jvv - SSP# 307199
0037 REM "307199-Enhancements to GUI Stock PO Entry - DBD-54                 
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "POGMAB","../POG/PO.EN",PO_NUM$
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 X0$="POGMAB",X1$="Cash Receipts Entry"
0125 X2=-1; X0=-1; DEL_FLG=0
0130 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0140 DIM Z[NUM(X3$(60,3))],AP4[1],PO2[27],PO3[3],AR1[15],AP2[1],FS2[29],IC2[30],FM1[31],IC0[30],UM[1],PO7[12],FMP[2] ! WO273055
0150 Z$="01O PO2...  02O PO1...  03O FM0...  04O FMP...  05O AR1...  06O IC2...  07O AP4...  08O FM1...  09O FS2...  10O IC0...  11O POA...  12O PO7...  13O ZZPARM  15O PO3...  16O FS1...  17O POH...  "
0153 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0155 ! 
0160 IOLIST PO2$,PO2{ALL}
0170 IOLIST PO1$
0180 IOLIST FM0$
0190 IOLIST FMP$,FMP{ALL}
0200 IOLIST AR1$,AR1{ALL}
0210 IOLIST IC2$,IC2{ALL}
0220 IOLIST AP4$
0230 IOLIST FM1$,FM1{ALL}
0240 IOLIST IC0$,IC0{ALL}
0250 IOLIST UM$,UM{ALL}
0260 IOLIST FS2$,FS2{ALL}
0270 IOLIST PO7$,PO7{ALL}
0300 ! setup messages
0400 ! 
0410 GOSUB GET_PARAM
0460 ! 
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 IF STP(ARG_1$)<>"" THEN PO_NUMBER$=ARG_1$
0530 GOSUB FIND_REC
0560 REFRESH_FLG=1
0565 PO_LINE.CTL'COLUMN=1,PO_LINE.CTL'ROW=1,LINE_TYPE$=MID(PO_LINE.CTL'VALUE$,1,1); PO_LINE.CTL'COLUMN=6; IF STP(PO_LINE.CTL'VALUE$)="" AND LINE_TYPE$<>"M" THEN FOR DD=1 TO 10; GRID DELETE PO_LINE.CTL,0,1,ERR=*BREAK; NEXT ; TFEXT_ID=ADD_L.CTL; CALL "*WINGRP;ENABLE",ADD_LN.GRP$; ROWS=0
0566 IF %NOMAD_XMAX>=1024 THEN PRINT 'MOVE'(1,10),'SIZE'(125,27); PO_LINE.CTL'WIDTH=990,EXT_1.CTL'COL=115
0567 IF %NOMAD_XMAX>=1152 THEN PRINT 'MOVE'(1,10),'SIZE'(142,27); PO_LINE.CTL'WIDTH=1120,EXT_1.CTL'COL=130
0568 NEXT_ID=ADD_L.CTL; CALL "*WINGRP;ENABLE",ADD_LN.GRP$
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 %CUST_DIV$=""; %CUST_CODE$=""; %CUSTOMER$=""; %SFMP$=""; %P4$=""; %SF=0 ! SSP233940 jdf
0930 ! CALL "POGMAH",X3$,"S",PO_NUMBER$,"1"
0950 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! Get Purchase Order Information
1010 FIND_REC:
1015 IF NUL(PO_NUMBER$) THEN RETURN 
1020 KEY_2$=PO_NUMBER$
1030 FIND (Z[2],KEY=PO_NUMBER$,DOM=NEW_PO)IOL=0170
1040 ! 
1050 VENDOR$=PO1$(7,10); PLANT_CODE$=PO1$(17,4); PLANT_NAME$=PO1$(21,35)
1052 CUST_SUP_PO$=PO1$(361,1); REM SSP
1060 GOSUB LOAD_GRID; IF ROWS=0 THEN GOSUB ADD_LINE ELSE CALL "*wingrp;enable",ADD_LN.GRP$; NEXT_ID=ADD_L.CTL ! IF %NEW_PO THEN GOSUB ADD_LINE ELSE GOSUB LOAD_GRID
1070 CALL "*wingrp;Enable",BUTTONS.GRP$
1080 REFRESH_FLG=1
1090 RETURN 
2000 ! Load the Initial screen
2010 LOAD_GRID:
2015 IF ROWS>1 THEN FOR XXX=1 TO ROWS-1; GRID DELETE PO_LINE.CTL,0,1; NEXT XXX
2020 KEY_1$=PO_NUMBER$; ROWS=0; COL=0
2025 ! GRID ADD PO_LINE.CTL,0,0
2030 READ (Z[1],KEY=KEY_1$,DOM=*NEXT)
2040 KEY_1$=KEY(Z[1],END=2180); READ (Z[1],KEY=KEY_1$)IOL=0160
2050 IF KEY_1$(1,9)<>PO_NUMBER$ THEN GOTO 2180
2055 ROWS+=1 ! GOSUB ADD_LINE
2060 IF ROWS>1 THEN GRID ADD PO_LINE.CTL,0,ROWS; PO_LINE.CTL'ROW=ROWS
2062 DIM M6[1]; CALL "IC2PRE",X3$,Z[13],M6$,M6{ALL},"",0,"",0 ! SSP225217 jdf
2063 O0=PO2[11] ! QTY=FN%QTY_IN_UM(PO2[11],PO2$(77,4),PO2[2]) ! SSP225217 jdf
2064 CALL "FM2EXT",Z[13],2,PO2$(77,4),PO2[2],O0,PO2[0],PO2[4],M6[1]; QTY=O0; QTY$=STR(QTY) ! SSP225217 jdf
2065 IF PO2$(81,1)="N" OR PO2$(81,1)=" " THEN SP_SHIP$="0" ELSE IF PO2$(81,1)="Y" THEN SP_SHIP$="1"; %SPEC=1
2066 ITEM_DESC$=PO2$(28,40); REM TEST
2067 IF NUL(PO2$(77,4)) THEN UM_DESC$="" ELSE UM_DESC$=STP(PO2$(77,4),3," ")+"/"+STP(STR(PO2[2]:"###,###"),3," ")
2068 IF PO2$(10,1)<>"C" THEN CUSTOMER$="",TF_NAME$=""; GOTO 2074 ! SSP233925 jdf 
2069 CUSTOMER$=PO2$(91,10)
2070 READ (Z[5],KEY=CUSTOMER$,DOM=INV_CUST)IOL=0200; GOSUB CHECK_DEFAULT; TF_NAME$=AR1$(11,35); REM SSP 200458
2071 REFRESH_FLG=1; REM TEST
2074 GRID WRITE PO_LINE.CTL,-1,ROWS,PO2$(7,3)
2075 GOSUB LINE_TYPE_PROCESS
2080 GRID WRITE PO_LINE.CTL,1,ROWS,LINE_DESC$; ROW=ROWS; LINE_TYPE$=PO2$(10,1); TYPE_FLG=1; GOSUB TYPE_PROCESS
2090 IF ROWS=1 THEN XX=PO_LINE.CTL,XX'COLUMN=2,XX'ROW=1,XX'CELLTYPE$="CheckBox"; GRID WRITE PO_LINE.CTL,2,ROWS,SP_SHIP$
2095 IF ROWS>1 THEN XX=PO_LINE.CTL,XX'COLUMN=2,XX'ROW=ROW,XX'CELLTYPE$="Multi_LINE"; GRID LOCK PO_LINE.CTL,2,ROWS
2100 GRID WRITE PO_LINE.CTL,6,ROWS,PO2$(101,10)
2101 PO_LINE.CTL'COLUMN=3,PO_LINE.CTL'ROW=ROWS,PO_LINE.CTL'UPPERCASE=1
2110 GRID WRITE PO_LINE.CTL,8,ROWS,PO2$(28,40); REM SSP 200458
2111 GRID LOCK PO_LINE.CTL,1,ROWS ! SSP233940 jdf
2112 IF LINE_TYPE$="S" THEN READ (Z[4],KEY="X"+PO2$(101,10),DOM=*NEXT)IOL=0190 ! SSP233940 jdf
2114 DIM P4$(26); READ (Z[13],KEY="U/M"+PO2$(77,4),DOM=*NEXT)P4$,P3,P4 ! SSP233940 jdf
2116 IF LINE_TYPE$="S" AND ((MID(FMP$,1,1)="X" AND MID(FMP$,61,1)="Y") OR MID(P4$,21,1)="Y") THEN GRID LOCK PO_LINE.CTL,9,ROWS ! SSP233940 jdf
2120 GRID WRITE PO_LINE.CTL,9,ROWS,STR(QTY:"###,###"); REM SSP 200458
2130 GRID WRITE PO_LINE.CTL,10,ROWS,UM_DESC$; REM SSP 200458
2131 GRID WRITE PO_LINE.CTL,5,ROWS,TF_NAME$; REM SSP 200458
2132 IF LINE_TYPE$="C" THEN GRID WRITE PO_LINE.CTL,3,ROWS,FN%ZZDISP$(CUSTOMER$,"A/R"); REM SSP 200458
2134 IF LINE_TYPE$<>"C" THEN GRID WRITE PO_LINE.CTL,3,ROWS,FN%ZZDISP$(CUSTOMER$,"A/R") ! SSP233925 jdf
2140 IF LINE_TYPE$="S" AND ((MID(FMP$,1,1)="X" AND MID(FMP$,61,1)="Y") OR MID(P4$,21,1)="Y") THEN GRID WRITE PO_LINE.CTL,11,ROWS,STR(PO2[4]:"###,###.00") ELSE GRID WRITE PO_LINE.CTL,11,ROWS,STR(PO2[0]:"###,###.00"); REM SSP 200458 ! SSP233940 jdf
2142 DIM P4$(26); P3=0,P4=0,FMP$="" ! SSP233940 jdf
2145 IF (P2$(188,1)<>"Y" OR PO2$(10,1)<>"I" OR %SPEC=1) AND ROWS>1 THEN GRID LOCK PO_LINE.CTL,2,ROWS
2150 ! GRID_CTL=PO_LINE.CTL,GRID_CTL'COLUMN=10,GRID_CTL'ROW=ROWS,GRID_CTL'VALUE$=PO2$(7,3)
2155 GRID WRITE PO_LINE.CTL,12,ROWS,STR(PO2[24]:"#0") ! SSP 200130
2160 GOSUB CREATE_BUTTON
2170 IF (XXX+1)<>(ROWS+1) THEN GOTO 2040 ! SSP219164 jdf
2180 REFRESH_FLG=1
2190 RETURN 
2300 ! Load the Record
2310 LOAD_RECORD:
2320 PO1$(7,10)=VENDOR$
2330 PO1$(192,6)=PO_DATE$; PO1$(204,6)=DATE_REQ$
2340 PO1$(17,4)=PLANT_CODE$; PO1$(21,35)=PLANT_NAME$; PO1$(56,30)=PLANT_ATTN$
2350 PO1$(86,30)=PLANT_ADDR_1$; PO1$(116,30)=PLANT_ADDR_2$
2360 PO1$(146,16)=PLANT_CITY$; PO1$(162,2)=PLANT_ST$; PO1$(164,9)=PLANT_ZIP_CODE$
2370 PO1$(173,1)=PO_TYPE$; PO1$(189,1)=PRINT_THIS_PO$; PO1$(190,1)=NEW_REPEAT$
2380 PO1$(191,1)=CONFIRMING$; PO1$(198,6)=GROUPING_CUTOFF_DATE$
2390 PO1$(352,1)=SEND_UNITED_DATA$; PO1$(210,2)=TERMS_CODE$
2400 PO1$(212,12)=PLANT_QUOTE_NUM$; PO1$(224,6)=PLANT_QUOTE_NUM_DATE$
2410 PO1$(314,12)=RUSH_PER$; PO1$(326,2)=RUSH_DAYS$
2420 PO1$(230,12)=PREV_JOB_NUM$; PO1$(242,6)=PREV_JOB_DATE$
2430 PO1$(248,12)=THIS_JOB_NO$; PO1$(260,6)=THIS_JOB_DATE$
2440 PO1$(266,12)=JOB_STATUS$; PO1$(278,6)=JOB_STATUS_DATE$
2450 PO1$(284,1)=PROOF_STATUS$; PO1$(285,6)=PROOF_ST_DATE$
2460 PO1$(291,6)=SCHED_SHIP_DATE$
2470 PO1$(297,9)=PO_NUMBER$
2490 RETURN 
2800 ! CREATE_BUTTON
2810 CREATE_BUTTON:
2820 XX=PO_LINE.CTL,XX'COLUMN=13,XX'ROW=ROWS,XX'CELLTYPE$="Button",XX'BACKCOLOR$="Light Gray",XXX$=MSG("LINE_INFO"),XX'BITMAP$="!Arrow_Left",XX'TEXTCOLOR$="Dark Blue"; GRID WRITE XX,XX'COLUMN,ROWS,XXX$ ! SSP 200130
2830 XX=PO_LINE.CTL,XX'COLUMN=7,XX'ROW=ROWS,XX'CELLTYPE$="Button",XX'BACKCOLOR$="Light Gray",XX'BITMAP$="!LOOKUP" ! GRID WRITE XX,XX'COLUMN,ROWS,XXX$
2840 XX=PO_LINE.CTL,XX'COLUMN=1,XX'ROW=ROWS,XX'CELLTYPE$="DropBox",XX'TEXT$=MSG("TYPE_T")
2880 REFRESH_FLG=1
2890 RETURN 
2900 ! Add a line to the grid
2910 ADD_LINE:
2920 ROWS+=1; IF ROWS=1 THEN LINE_NUM$=PAD(STR(ROWS),3,0,"0"); GOTO 2930
2925 IF ROWS<>1 THEN GRID FIND PO_LINE.CTL,-1,ROWS-1,LN$,ERR=*NEXT; LN=NUM(LN$); LN+=1; LINE_NUM$=PAD(STR(LN),3,0,"0") ELSE LINE_NUM$=PAD(STR(ROWS),3,0,"0")
2926 IF FLAG THEN FLAG=0; ROWS=0; GOTO 2920
2930 GRID ADD PO_LINE.CTL,0,ROWS
2931 XX=PO_LINE.CTL,XX'COLUMN=2,XX'ROW=ROWS; IF ROWS>1 THEN XX'CELLTYPE$="Multi_LINE"; GRID LOCK PO_LINE.CTL,2,ROWS ELSE XX'CELLTYPE$="CheckBox"
2935 IF FLAG THEN FLAG=0; GOTO 2930
2940 PO_LINE.CTL'ROW=ROWS
2950 XX=PO_LINE.CTL,XX'COLUMN=1,XX'ROW=ROWS,XX'CELLTYPE$="DropBox"
2955 TXT$=MSG("TYPE_T"); IF PO1$(361,1)<>"Y" THEN XX'TEXT$=TXT$,XX'VALUE$="Inventory" ELSE TXT$=TXT$(POS("|"=TXT$)+1),XX'TEXT$=TXT$,XX'VALUE$="Special"
2960 XX=PO_LINE.CTL,XX'COLUMN=13,XX'ROW=ROWS,XX'CELLTYPE$="Button",XX'BACKCOLOR$="Light Gray",XXX$=MSG("LINE_INFO"),XX'BITMAP$="!Arrow_Left",XX'TEXTCOLOR$="Dark Blue"; GRID WRITE XX,XX'COLUMN,ROWS,XXX$ ! SSP 200130
2965 XX=PO_LINE.CTL,XX'COLUMN=7,XX'ROW=ROWS,XX'CELLTYPE$="Button",XX'BACKCOLOR$="Light Gray",XX'BITMAP$="!LOOKUP" ! GRID WRITE XX,XX'COLUMN,ROWS,XXX$
2967 XX=PO_LINE.CTL,XX'COLUMN=4,XX'ROW=ROWS,XX'CELLTYPE$="Button",XX'BACKCOLOR$="Light Gray",XX'BITMAP$="!LOOKUP" ! GRID WRITE XX,XX'COLUMN,ROWS,XXX$
2970 XX=PO_LINE.CTL,XX'COLUMN=-1,XX'ROW=ROWS,XX'VALUE$=LINE_NUM$
2973 IF P2$(188,1)<>"Y" OR %SPEC=1 THEN GRID LOCK PO_LIN.CTL,2,ROWS
2975 DIM PO2$(170),PO2[27]
2980 PO2$(7,3)=LINE_NUM$; PO2$(82,9)=PO_NUMBER$; LINE_TYPE$="I"; PO2$(10,1)=LINE_TYPE$
2985 WRITE (Z[1],KEY=PO_NUMBER$+LINE_NUM$)IOL=0160
2990 GRID GOTO PO_LINE.CTL,1,ROWS; NEXT_ID=PO_LINE.CTL
2991 PO_LINE.CTL'COLUMN=3,PO_LINE.CTL'ROW=ROWS,PO_LINE.CTL'UPPERCASE=1
2995 REFRESH_FLG=1
2996 IF ROWS=2 AND LINE_NUM$="001" THEN GRID DELETE PO_LINE.CTL,0,1; ROWS=1
2998 FMP$="",P4$="",P3=0,P4=0 ! SSP233940 jdf
2999 RETURN 
3000 ! Get the Line Information from the Grid.
3010 SEL_GRID:
3020 GRID SELECT READ PO_LINE.CTL,COL_1,ROW_1
3022 ! IF _EOM$=$09$ THEN COL_1=COL_1-1 ! GOTO 3030 ; !ssp 299409
3025 IF ROW_1<>PO_LINE.CTL'CURRENTROW THEN ROW_1=PO_LINE.CTL'CURRENTROW
3026 IF ROW_1<=0 THEN GOTO *RETURN
3030 GRID FIND PO_LINE.CTL,COL_1,ROW_1,PO_VALUE$,ERR=*RETURN ! SSP 218981
3035 IF COL_1=1 AND NUL(PO_VALUE$) THEN GRID GOTO PO_LINE.CTL,COL_1,ROW_1; NEXT_ID=PO_LINE.CTL
3040 IF COL_1=1 THEN ROW=ROW_1; LINE_TYPE$=PO_VALUE$(1,1); GOSUB TYPE_PROCESS
3045 IF COL_1=2 THEN GOSUB SPECS_PROCESS
3050 IF COL_1=6 THEN ITEM_CODE$=PAD(UCS(PO_VALUE$),10,1," "); GOSUB GET_ITEM_INFO; REM SSP 200458
3051 IF COL_1=3 AND LINE_TYPE$="C" THEN CUSTOMER$=PAD(UCS(PO_VALUE$),10,1," "); GOSUB GET_CUST_INFO; REM SSP 200458
3052 IF COL_1=4 THEN GOSUB CUST_QRY; REM SSP 200458
3055 IF COL_1=8 THEN GOSUB DESC_PROCESS; REM SSP 200458
3060 IF COL_1=7 THEN GOSUB PROCESS_QRY; REM SSP 200458
3065 IF COL_1=9 THEN GOSUB QTY_PROCESS; REM SSP 200458
3070 IF COL_1=13 THEN GOSUB WRITE_LINE; GOSUB PROCESS_SCRN; GOTO 3085; REM SSP 200458 200130 SSP199368
3075 IF COL_1=10 THEN GOSUB UM_PROCESS; REM SSP 200458
3080 IF COL_1=11 THEN GOSUB COST_PROCESS; REM SSP 200458
3082 IF COL_1=12 THEN GOSUB CHECK_NUM_STORAGE_MTH ! SSP 200130
3083 IF COL_1=13 THEN GOSUB WRITE_LINE; GOSUB PROCESS_SCRN; REM SSP 200458 200130 SSP199368
3085 GOSUB TAB_HANDLE
3090 RETURN 
3100 ! Tab Handling
3110 TAB_HANDLE:
3115 COL_2=COL_1+1
3120 IF COL_2=4 THEN COL_2+=2
3125 IF COL_2=7 THEN COL_2+=2; REM SSP 200458
3130 IF COL_2=10 THEN COL_2+=1; REM SSP 200458
3140 IF (COL_2=13 OR COL_2=14) THEN COL_2=1; CALL "*WINGRP;ENABLE",ADD_LN.GRP$; NEXT_ID=ADD_L.CTL; EXIT ; REM SSP 200458 200130
3150 IF ROW_1>1 THEN GRID LOCK PO_LINE.CTL,2,ROW_1; IF COL_2=2 THEN COL_2=3
3151 IF POS(LINE_TYPE$="IC")=0 AND COL_2=2 THEN COL_2=3; REM TEST TEST
3155 IF POS(LINE_TYPE$="I")<>0 AND COL_2=3 THEN COL_2=6
3156 IF COL_1<>11 AND POS(LINE_TYPE$="S")<>0 AND ((MID(FMP$,61,1)="Y" AND MID(FMP$,1,1)="X") OR MID(P4$,21,1)="Y") THEN COL_2=11; GRID LOCK PO_LINE.CTL,9,ROWS ! SSP233940 jdf
3157 IF POS(LINE_TYPE$="S")<>0 AND COL_2=3 THEN COL_2=6
3158 IF POS(LINE_TYPE$="M")<>0 AND COL_2=6 THEN COL_2=9; REM SSP
3160 IF POS(LINE_TYPE$="M")<>0 AND COL_2=9 THEN COL_2=13; GOTO 3140 ! ssp 200130
3165 IF POS(LINE_TYPE$="IC")<>0 AND COL_2=8 THEN COL_2=9 ! SSP233940 jdf ! SSP233925 jdf
3180 NEXT_ID=PO_LINE.CTL; GRID GOTO PO_LINE.CTL,COL_2,ROW_1
3190 RETURN 
3200 ! Specs
3210 SPECS_PROCESS:
3220 GRID FIND PO_LINE.CTL,2,ROW_1,SP_SPEC$; GRID FIND PO_LINE.CTL,-1,ROW_1,LN$
3230 IF SP_SPEC$="1" THEN SPEC$="Y" ELSE SPEC$="N"
3235 IF SPEC$="Y" THEN %SPEC=1 ELSE %SPEC=0
3240 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3250 PO2$(81,1)=SPEC$
3260 WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3270 IF SPECS$="Y" THEN %SPECS=1
3290 RETURN 
3300 ! Description
3310 DESC_PROCESS:
3320 GRID FIND PO_LINE.CTL,8,ROW_1,ITEM_DESC$; REM SSP 200458
3330 GRID FIND PO_LINE.CTL,-1,ROW_1,LN$
3340 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3350 PO2$(28,40)=ITEM_DESC$
3360 WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3386 GRID LOCK PO_LINE.CTL,8,ROW_1; REM SSP 200458
3390 RETURN 
3400 ! Process Quantity
3410 QTY_PROCESS:
3420 GRID FIND PO_LINE.CTL,9,ROW_1,QTY$; REM SSP 200458
3425 GRID FIND PO_LINE.CTL,1,ROW_1,LT$; LINE_TYPE$=LT$(1,1)
3430 GRID FIND PO_LINE.CTL,-1,ROW_1,LN$
3431 GOSUB INV_QTY; REM 
3432 CALL "ZZWLKU;PARSE_VEND",VENDOR$,VEND_DIV$,VEND_CODE$; REM SSP 197810
3433 IF STP(CUSTOMER$,3)<>"" THEN READ (Z[6],KEY=CUSTOMER$+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=*NEXT)IOL=0210 ELSE READ (Z[6],KEY="          "+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=*NEXT)IOL=0210 ! SSP216596 jdf  ! SSP224769 jdf
3434 IF IC2[1]=0 THEN READ (Z[6],KEY="          "+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=*NEXT)IOL=0210 ! SSP224769 jdf
3435 IF IC2[1]=0 THEN GOTO 3441; REM SSP
3437 DIM P4$(26); UNIT$=PO2$(77,4); READ (Z[13],KEY="U/M"+UNIT$,DOM=*RETURN)P4$,P3,P4; %P4$=P4$ ! SSP219166 jdf
3440 PROCESS "POGMAB.3","../POG/PO.EN",CUST_DIV$,CUST_CODE$,ITEM_CODE$,VEND_DIV$,VEND_CODE$,PLANT_CODE$
3449 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3450 ! PO2[1]=NUM(QTY$) ! PO2[11]=NUM(QTY$)
3460 GRID FIND PO_LINE.CTL,11,ROW_1,TF_COST$; REM SSP 200458
3463 UNIT$=PO2$(77,4); GOSUB UM_PARAM
3465 TF_COST=NUM(TF_COST$)
3466 GOSUB QTY_BREAK; REM SSP
3467 IF P4$(20,1)="Y" THEN IF P3=0 THEN P3=1; END_IF ; PO2[11]=NUM(QTY$); QTY_CALC=NUM(QTY$)/P3 ELSE PO2[11]=NUM(QTY$)*PO2[2]; QTY_CALC=NUM(QTY$) ! SSP216596 jd SSP 218981 
3468 ! QTY_CALC=FN%QTY_IN_UM(PO2[11],PO2$(77,4),PO2[2]); PO2[1]=PO2[11]
3470 PO2[1]=PO2[11]; REM PO2[4]=QTY_CALC*TF_COST ! SSP217692 jdf
3475 REM LABEL=0; IF LINE_TYPE$="I" AND PO2[5]>0 THEN LABEL=(QTY*PO2[2])/PO2[5]; IF FPT(LABEL)>0 THEN LABEL=INT(LABEL)+1 ! SSP216596 jdf                 
3477 REM PO2[3]=LABEL ! SSP216596 jdf                                           
3478 NEW_LABEL:! SSP217692 jdf
3479 IF PO2[11]=0 OR PO2[5]=0 OR MID(FMPT$,22,1)="N" THEN PO2[3]=0 ELSE PO2[3]=INT(PO2[11]/PO2[5]*1.1+.9); IF PO2[3]<0 THEN PO2[3]=0 ! SSP216596 jdf!SSP#273350
3480 WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3490 RETURN 
3500 ! Process the type...
3510 TYPE_PROCESS:
3515 GRID UNLOCK PO_LINE.CTL,0,ROW
3517 GRID LOCK PO_LINE.CTL,7,ROW; IF P2$(188,1)<>"Y" THEN GRID LOCK PO_LINE.CTL,2,ROW
3518 IF POS(LINE_TYPE$="C")=0 THEN GRID LOCK PO_LINE.CTL,3,ROW; GRID LOCK PO_LINE.CTL,4,ROW; GRID LOCK PO_LINE.CTL,5,ROW
3520 IF LINE_TYPE$="I" THEN GRID LOCK PO_LINE.CTL,8,ROW; REM SSP 200458
3530 IF LINE_TYPE$="M" THEN GRID LOCK PO_LINE.CTL,2,ROW; GRID LOCK PO_LINE.CTL,3,ROW; GRID LOCK PO_LINE.CTL,4,ROW; GRID LOCK PO_LINE.CTL,5,ROW; GRID LOCK PO_LINE.CTL,6,ROW; GRID LOCK PO_LINE.CTL,7,ROW; GRID LOCK PO_LINE.CTL,9,ROW; GRID UNLOCK PO_LINE.CTL,10,ROW; GRID LOCK PO_LINE.CTL,11,ROW; GRID LOCK PO_LINE.CTL,12,ROW; GRID LOCK PO_LINE.CTL,3,ROW; REM GRID GOTO PO_LINE.CTL,8,ROW REM SSP 200458 200130 ! SSP233925 jdf
3540 IF POS(LINE_TYPE$="IC")=0 THEN GRID LOCK PO_LINE.CTL,2,ROW
3545 IF (P2$(188,1)<>"Y" OR %SPEC=1) AND ROW>1 THEN GRID LOCK PO_LIN.CTL,2,ROWS
3547 GRID LOCK PO_LINE.CTL,1,ROWS ! SSP233940 jdf
3550 IF TYPE_FLG THEN TYPE_FLG=0; REFRESH_FLG=1; RETURN 
3555 ! IF LINE_TYPE$="N" THEN GOTO PROCESS_SCRN
3560 GRID FIND PO_LINE.CTL,-1,ROW,LN$
3570 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3575 PO2$(10,1)=LINE_TYPE$
3580 WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3583 IF LINE_TYPE$="N" THEN GOTO PROCESS_SCRN
3585 REFRESH_FLG=1
3586 IF LINE_TYPE$="M" THEN GRID GOTO PO_LINE.CTL,8,ROW; EXIT 
3590 RETURN 
3600 ! get the Item information
3610 GET_ITEM_INFO:
3620 GRID FIND PO_LINE.CTL,1,ROW_1,LINE_TYPE$; LINE_TYPE$=LINE_TYPE$(1,1)
3623 IF PO2$(81,1)="Y" AND POS(" "<>PO2$(91,10))<>0 THEN MSGBOX MSG("FMGODB_47"),MSG("FMGODB_48"),"?,YESNO",_YESNO$; IF _YESNO$="YES" THEN %CUSTOMER$=CUST_DIV$+CUST_CODE$,%ITEM_CODE$=ITEM_CODE$; CALL "FMGIAB" ! SSP233020 jdf
3625 ITEM_DESC$=""
3626 IF STP(CUSTOMER$,3)<>"" THEN READ (Z[8],KEY=CUSTOMER$+ITEM_CODE$,DOM=*NEXT)IOL=0230 ELSE READ (Z[8],KEY="          "+ITEM_CODE$,DOM=*NEXT)IOL=0230 ! SSP216596 jdf                                                             
3627 READ (Z[6],KEY="          "+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=*NEXT)IOL=0210 ! SSP224769 jdf
3628 IF STP(CUSTOMER$,3)<>"" THEN READ (Z[6],KEY=CUSTOMER$+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=*NEXT)IOL=0210 ! ELSE READ (Z[6],KEY="          "+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=*NEXT)IOL=0210 ! SSP216596 jdf  ! SSP224769 jdf
3630 IF LINE_TYPE$="I" THEN IF STP(CUSTOMER$,3)<>"" THEN READ (Z[10],KEY=CUSTOMER$+ITEM_CODE$,DOM=INV_ITEM)IOL=0240 ELSE READ (Z[10],KEY="          "+ITEM_CODE$,DOM=INV_ITEM)IOL=0240; END_IF ; GOSUB CHECK_DEFAULT; ITEM_DESC$=IC0$(21,40); IF STP(IC2$,3)<>"" THEN UOM$=STP(IC2$(55,4))+"/"+STP(STR(IC2[14]:"###,###-")); TF_COST$=STR(IC2[13]:"###,###.00") ELSE UOM$=STP(IC0$(124,4))+"/"+STP(STR(IC0[15]:"### ,###-")); TF_COST$=STR(IC0[17]:"###,###.00"); REM GOSUB LOAD_INV_ITEM   !  SSP216596 jdf ! SSP226648 jdf                                                             
3631 IF LINE_TYPE$="C" THEN READ (Z[10],KEY=CUSTOMER$+ITEM_CODE$,DOM=INV_ITEM)IOL=0240; GOSUB CHECK_DEFAULT; ITEM_DESC$=IC0$(21,40); UOM$=STP(IC0$(124,4))+"/"+STP(STR(IC0[15]:"###,###-")); TF_COST$=STR(IC0[17]:"###,###.00"); REM "GOSUB LOAD_INV_ITEM                                                     
3632 IF POS(LINE_TYPE$="CI")<>0 THEN IC2$=""; DIM IC2[30]; READ (Z[6],KEY=CUSTOMER$+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=3641)IOL=0210 ! SSP216596 jdf  WO273055              
3633 REM IF LINE_TYPE$="I" THEN DIM IC2[16]; READ (Z[6],KEY="          "+ITEM_C ODE$+VENDOR$+PLANT_CODE$,DOM=3641)IOL=0210 ! SSP216596 jdf                 
3634 REM IF LINE_TYPE$="I" THEN DIM IC2[16]; READ (Z[6],KEY=CUSTOMER$+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=3641)IOL=0210 ! SSP216596 jdf                    
3640 IF IC2[0]<>0 THEN PO2$(77,4)=IC2$(55,4),PO2[0]=IC2[0],PO2[2]=IC2[14],PO2[5]=IC2[16],UOM$=IC2$(55,4)+"/"+STP(STR(IC2[14]:"###,###-")),TF_COST$=STR(IC2[0]:"###,###.00"),IC0[19]=IC2[16] ELSE IF IC2[13]<>0 THEN TF_COST$=STR(IC2[13]:"###,###.00"); REM IF POS(LINE_TYPE$="IC")<>0 THEN GOSUB LOAD_INV_ITEM; REM TEST TEST ! SSP226648 jdf
3641 IF POS(LINE_TYPE$="IC")<>0 THEN GOSUB LOAD_INV_ITEM; REM TEST TEST  
3650 IF LINE_TYPE$="S" THEN READ (Z[4],KEY="X"+ITEM_CODE$,DOM=INV_ITEM)IOL=0190; ITEM_DESC$=FMP$(12,40); UOM$=STP(FMP$(55,4))+"/"+STP(STR(FMP[0]:"###,###-")); TF_COST$=STR(FMP[2]:"###,###.00"); GOSUB LOAD_FMP_ITEM
3660 IF LINE_TYPE$="N" THEN GRID WRITE PO_LINE.CTL,3,ROW_1,ITEM_CODE$; GOSUB NONSTOCK_CODE
3680 GRID WRITE PO_LINE.CTL,8,ROW_1,ITEM_DESC$; GRID LOCK PO_LINE.CTL,8,ROW_1; GRID WRITE PO_LINE.CTL,10,ROW_1,UOM$; GRID WRITE PO_LINE.CTL,11,ROW_1,TF_COST$; GRID WRITE PO_LINE.CTL,6,ROW_1,ITEM_CODE$; REM SSP 200489
3685 REFRESH_FLG=1
3690 RETURN 
3700 ! Process Query depends on the Line Type
3710 PROCESS_QRY:
3715 IF _EOM$=$09$ THEN COL_1=3; GOTO 3030
3740 IF LINE_TYPE$="I" THEN %ITEM_CUST$="          "; PROCESS "QRY_IC0.1.4","../ICG/IC.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
3741 IF LINE_TYPE$="C" THEN %ITEM_CUST$=CUSTOMER$; PROCESS "QRY_IC0.1.4","../ICG/IC.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
3750 IF LINE_TYPE$="S" THEN PROCESS "QRY_FMPX","../FMG/FM.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
3760 ITEM_CODE$=QRY_VAL$
3770 GOSUB GET_ITEM_INFO; GRID WRITE PO_LINE.CTL,6,ROW_1,QRY_VAL$; GRID LOCK PO_LINE.CTL,8,ROW_1
3790 RETURN 
3800 ! Process Screen with additional Information
3810 PROCESS_SCRN:
3815 REM LM$=STR(PO_LINE.CTL'CURRENTROW),LN$=LM$; GOTO 3830  ! SSP233925 jdf
3820 GRID FIND PO_LINE.CTL,-1,ROW_1,LM$
3830 LINE_NUM$=PAD(LM$,3,0,"0")
3840 GOSUB CHECK_LINES
3842 LN$=LM$
3850 READ (Z[1],KEY=PO_NUMBER$+STR(NUM(LM$):"000"),DOM=*NEXT)IOL=0160
3852 LINE_TYPE$=MID(PO2$,10,1) ! SSP233940 jdf
3853 IF LINE_TYPE$="S" THEN READ (Z[4],KEY="X"+PO2$(101,10),DOM=*NEXT)IOL=0190 ! SSP233940 jdf
3854 DIM P4$(26); READ (Z[13],KEY="U/M"+PO2$(77,4),DOM=*NEXT)P4$,P3,P4 ! SSP233940 jdf
3856 %SFMP$=FMP$,%P4$=P4$ ! SSP233940 jdf
3860 PROCESS "POGMAB.2","../POG/PO.EN",PO_NUMBER$+LINE_NUM$
3865 %GRID=1,LN$=LM$
3867 READ (Z[1],KEY=PO_NUMBER$+STR(NUM(LM$):"000"),DOM=*NEXT)IOL=0160
3870 IF ROWS=1 AND %DEL_FLG THEN %DEL_FLG=0; GRID DELETE PO_LINE.CTL,0,1; ROWS=0,ROW=0; FLAG=1 ! GRID ADD PO_LINE.CTL,0,ROWS+1
3875 GOSUB LOAD_GRID
3877 READ (Z[1],KEY=PO_NUMBER$+STR(NUM(LM$):"000"),DOM=*NEXT)IOL=0160
3880 REFRESH_FLG=1
3881 IF ROWS=1 THEN NEXT_ID=PO_LINE.CTL; GOTO 3885
3882 GOSUB CHECK_LINES
3884 READ (Z[1],KEY=PO_NUMBER$+STR(NUM(LM$):"000"),DOM=*NEXT)IOL=0160
3885 CALL "*WINGRP;ENABLE",ADD_LN.GRP$; NEXT_ID=ADD_L.CTL,%GRID=0; SET_FOCUS ADD_L.CTL
3890 EXIT 
3900 ! Process the Unit Cost
3910 COST_PROCESS:
3915 ROW_1=PO_LINE.CTL'CURRENTROW ! SSP233940 jdf
3920 GRID FIND PO_LINE.CTL,11,ROW_1,TF_COST$; REM SSP 200458 
3930 GRID FIND PO_LINE.CTL,-1,ROW_1,LN$
3940 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3941 LINE_TYPE$=PO2$(10,1) ! SSP233940 jdf
3942 IF STP(P4$)<>"" THEN %SF=0
3943 IF %SF THEN %SF=0; RETURN ! SSP233940 jdf
3945 REM GOSUB QTY_BREAK; REM SSP
3946 IF LINE_TYPE$="S" THEN READ (Z[4],KEY="X"+PO2$(101,10),DOM=*NEXT)IOL=0190 ! SSP233940 jdf
3947 IF NUM(UM_AMT$)<>0 AND NUM(UM_AMT$)<>PO2[2] THEN PO2[2]=NUM(UM_AMT$) ! SSP235896 jdf
3948 DIM P4$(26); READ (Z[13],KEY="U/M"+PO2$(77,4),DOM=*NEXT)P4$,P3,P4 ! SSP233940 jdf
3949 IF COST_FLG AND TF_COST=PO2[0] THEN TF_COST$=STR(PO2[0]) ! SSP235896 jdf
3950 IF LINE_TYPE$="S" THEN PO2[4]=NUM(TF_COST$)*PO2[1]; END_IF ; IF LINE_TYPE$="S" AND ((MID(FMP$,1,1)="X" AND MID(FMP$,61,1)="Y") OR MID(P4$,21,1)="Y") THEN PO2[4]=NUM(TF_COST$),PO2[0]=0 ELSE PO2[0]=NUM(TF_COST$) ! SSP233940 jdf
3951 IF STP(UNIT$)<>"" AND UNIT$<>PO2$(77,4) THEN PO2$(77,4)=UNIT$ ! SSP235896 jdf
3952 UNIT$=PO2$(77,4); GOSUB UM_PARAM
3955 REM IF P4$(20,1)="Y" THEN IF P3=0 THEN P3=1; END_IF ; QTY_CALC=PO2[11]/P3 ELSE QTY_CALC=PO2[11]/PO2[2] ! SSP217692 jdf
3960 REM PO2[4]=QTY_CALC*PO2[0] ! SSP217692 jdf
3980 WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
3985 IF LINE_TYPE$="S" AND ((MID(FMP$,1,1)="X" AND MID(FMP$,61,1)="Y") OR MID(P4$,21,1)="Y") THEN TF_COST$=STR(PO2(4):"###,###.00-"); GRID WRITE PO_LINE.CTL,11,ROW_1,TF_COST$ ELSE TF_COST$=STR(PO2(0):"###,###.00-"); GRID WRITE PO_LINE.CTL,11,ROW_1,TF_COST$; REM SSP 200458  ! SSP233940 jdf
3986 REFRESH_FLG=1
3988 COST_FLG=0 ! SSP235896 jdf
3990 RETURN 
4000 ! Update Record
4010 WRITE_REC:
4020 MSGBOX MSG("ADD_RECORD"),MSG("VERIFY"),"?,YESNO",ANS$
4030 IF ANS$="NO" THEN RETURN 
4040 ! WRITE (Z[1],KEY=key_2$)IOL=0170
4090 RETURN 
4100 CUST_QRY:; REM SSP 200458                
4110 PROCESS "QRY_AR1.1","../ARG/AR.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE CUSTOMER$=VAL$
4115 GOSUB GET_CUST_INFO
4199 RETURN 
4200 ! Unit of Measure Process
4210 UM_PROCESS:
4211 COST_FLG=1 ! SSP235896 jdf
4212 ROW_1=PO_LINE.CTL'CURRENTROW ! SSP235896 jdf
4213 GRID FIND PO_LINE.CTL,10,ROW_1,UNIT_M$ ! SSP235896 jdf
4214 GRID FIND PO_LINE.CTL,-1,ROW_1,LN$ ! SSP235896 jdf
4215 UNIT_M$=UCS(UNIT_M$,ERR=*NEXT) ! SSP235896 jdf
4220 IF POS("/"=UNIT_M$)>0 THEN {! SSP235896 jdf
4225 UNIT$=UNIT_M$(1,POS("/"=UNIT_M$)-1); UNIT$=PAD(UNIT$,4) ! SSP235896 jdf
4230 UM_AMT$=UNIT_M$(POS("/"=UNIT_M$)+1) ! SSP235896 jdf
4233 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160 ! SSP235896 jdf
4235 DIM P4$(26); READ (Z[13],KEY="U/M"+UNIT$,DOM=*RETURN)P4$,P3,P4 ! SSP235896 jdf
4237 GRID WRITE PO_LINE.CTL,10,ROW_1,UNIT_M$ ! SSP235896 jdf
4240 PO2$(77,4)=UNIT$ ! SSP235896 jdf
4245 PO2[2]=NUM(UM_AMT$,ERR=*NEXT) ! SSP235896 jdf
4246 CALL "FM2EXT",Z[13],1,UNIT$,PO2[2],PO2[1],O0,PO2[4],M6[1]; PO2[0]=O0,TF_COST=O0 ! SSP235896 jdf                       
4247 QTY=FN%QTY_IN_UM(PO2[11],UNIT$,PO2[2]); QTY$=STR(QTY); GRID WRITE PO_LINE.CTL,9,ROW_1,QTY$ ! SSP235896 jdf                       
4248 IF STP(LN$)<>"" THEN WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160 ! SSP235896 jdf
4250  } ! SSP235896 jdf
4290 RETURN 
4400 ! Load additional Information for Inventory Items
4410 LOAD_INV_ITEM:
4430 GRID FIND PO_LINE.CTL,-1,ROW_1,LN$
4440 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
4450 PO2$(15,2)=IC0$(80,2); PO2$(17,8)=IC0$(64,8)
4455 PO2$(25,3)=IC0$(61,3); PO2$(28,40)=IC0$(21,40)
4460 PO2$(77,4)=IC0$(124,4); PO2$(101,10)=IC0$(11,10)
4465 PO2$(111,8)=IC0$(72,8); PO2$(146,4)=IC0$(120,4)
4470 PO2[0]=IC0[18]; PO2[2]=IC0[15] REM PO2$(164,4)=IC0$(124,4) ! SSP226420 jdf
4475 PO2[18]=IC0[16],PO2[20]=IC0[14],PO2[21]=IC0[0] ! SSP217692 jdf SSP 199368
4477 IF STP(CUSTOMER$,3)<>"" THEN READ (Z[6],KEY=CUSTOMER$+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=*NEXT)IOL=0210 ELSE READ (Z[6],KEY="          "+ITEM_CODE$+VENDOR$+PLANT_CODE$,DOM=*NEXT)IOL=0210 ! ssp#273350
4478 FIND (Z[4],KEY="T"+PO2$(25,3),DOM=*NEXT)FMPT$ ! SSP#273350
4480 PO2[5]=IC0[19],PO2[22]=0,PO2[23]=0; IF IC2[16]<>0 THEN PO2[5]=IC2[16] ! PO2[22]=IC0[18],PO2[23]=IC0[15] ! SSP217692 jdf SSP199368  ! SSP226420 jdf !SSP#273350
4483 IF PO2[5]=0 THEN PO2[5]=1
4485 WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
4490 RETURN 
4500 ! load Additional Information For FMP Items
4510 LOAD_FMP_ITEM:
4520 GRID FIND PO_LINE.CTL,-1,ROW_1,LN$
4530 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
4560 PO2$(28,40)=FMP$(12,40); PO2$(101,10)=FMP$(2,10)
4563 PO2$(25,3)=FMP$(52,3)
4565 PO2$(77,4)=FMP$(55,4)
4570 PO2[2]=FMP[0]; PO2[0]=FMP[2]
4580 REM PO2[21]=FMP[1]; PO2[20]=FMP[0] ! SSP217692 jdf
4585 WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
4590 RETURN 
4600 ! Load Non Stock Item Code
4610 NONSTOCK_CODE:
4620 GRID FIND PO_LINE.CTL,-1,ROW_1,LN$
4630 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
4640 PO2$(101,10)=ITEM_CODE$
4685 WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
4690 RETURN 
4700 ! Line Type Resolution....
4710 LINE_TYPE_PROCESS:
4720 LINE_DESC$=""
4730 IF PO2$(10,1)="I" THEN LINE_DESC$="Inventory"
4740 IF PO2$(10,1)="S" THEN LINE_DESC$="Special"
4750 IF PO2$(10,1)="N" THEN LINE_DESC$="Non-Stock"
4760 IF PO2$(10,1)="M" THEN LINE_DESC$="Message"
4761 IF PO2$(10,1)="C" THEN LINE_DESC$="Cust Inv"
4790 RETURN 
4800 REM Quantity Break Costs from IC2 ssp
4805 QTY_BREAK:
4806 IF POS(LINE_TYPE$="IC")=0 THEN GOTO 4899
4815 I=1
4816 IF P4$(20,1)="Y" THEN IC2_QTY=NUM(QTY$) ELSE IC2_QTY=NUM(QTY$)*IC2[14] ! SSP219166 jdf ! SSP224769 jdf
4817 IF IC2[I]=0 THEN GOTO 4855
4820 DIM C[12,1] ! WO 273055
4825 FOR I=1 TO 6; C[I,0]=IC2[1+(I-1)*2],C[I,1]=IC2[2+(I-1)*2]; NEXT I
4830 FOR I=7 TO 12; C[I,0]=IC2[1+(I+1)*2],C[I,1]=IC2[2+(I+1)*2]; NEXT I ! WO273055, breaks 7 through 12 are in IC2[17] through [28]
4835 FOR I=1 TO 12 ! WO273055, additional 6 cost breaks
4840 IF ABS(IC2_QTY)<C[I,0] THEN EXITTO 4855
4845 IF C[I,0]<>0 THEN TF_COST=C[I,1]*1,TF_COST$=STR(TF_COST)
4850 NEXT I
4855 IF LINE_TYPE$="S" THEN PO2[4]=NUM(TF_COST$)*PO2[1]; END_IF ; IF LINE_TYPE$="S" AND ((MID(FMP$,1,1)="X" AND MID(FMP$,61,1)="Y") OR MID(P4$,21,1)="Y") THEN PO2[4]=NUM(TF_COST$),PO2[0]=0 ELSE PO2[0]=NUM(TF_COST$) ! SSP233940 jdf
4860 IF LINE_TYPE$="S" AND ((MID(FMP$,1,1)="X" AND MID(FMP$,61,1)="Y") OR MID(P4$,21,1)="Y") THEN GRID WRITE PO_LINE.CTL,11,ROW,STR(PO2[4]:"###,###.00") ELSE GRID WRITE PO_LINE.CTL,11,ROWS,STR(PO2[0]:"###,###.00"); REM SSP 200458 ! SSP233940 jdf  
4865 PRECISION 2
4899 RETURN 
5000 GET_CUST_INFO:
5020 REM "GRID FIND PO_LINE.CTL,1,ROW_1,LINE_TYPE$; LINE_TYPE$=LINE_TYPE$(1,1)
5025 TF_NAME$="",CUST_DIV$="",CUST_CODE$="",CUSTOMER$=STP(CUSTOMER$)
5027 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$
5030 IF POS(LINE_TYPE$="CI")<>0 THEN READ (Z[5],KEY=CUSTOMER$,DOM=INV_CUST)IOL=0200; GOSUB CHECK_DEFAULT; TF_NAME$=AR1$(11,35); GOSUB LOAD_INV_CUST; REM SSP 200458 ! SSP226648 jdf
5080 GRID WRITE PO_LINE.CTL,5,ROW_1,TF_NAME$; GRID LOCK PO_LINE.CTL,5,ROW_1; GRID WRITE PO_LINE.CTL,3,ROW_1,FN%ZZDISP$(CUSTOMER$,"A/R"); REM SSP 200489
5085 REFRESH_FLG=1
5090 RETURN 
5100 LOAD_INV_CUST:
5110 GRID FIND PO_LINE.CTL,-1,ROW_1,LN$
5120 READ (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
5130 PO2$(91,10)=CUSTOMER$
5140 IF PO2[24]=0 THEN IF MID(AR1$,524,2)<>DIM(2) THEN PO2[24]=NUM(MID(AR1$,524,2),ERR=*NEXT); GRID WRITE PO_LINE.CTL,12,ROW_1,STR(PO2[24]:"#0") ! WO264206, default number of storage months
5199 WRITE (Z[1],KEY=PO_NUMBER$+LN$)IOL=0160
7400 ! Check Audit Report
7410 CHECK_AUDIT:
7420 FIND (Z[1],KEY="",DOM=*RETURN)V0$,K0$
7430 IF K4$>"" THEN MSGBOX MSG("UPDATE_ST"),MSG("WARNING"),"STOP"; CMD_STR$="END"; RETURN 
7440 EXTRACT (Z[1],KEY="",ERR=WRAPUP)
7450 MSGBOX MSG("AUDIT_RPT")+" "+V0$(22,4)+"."+V0$(26,2)+MSG("HAS_PRT")+"."+SEP+MSG("CONTINUE?"),MSG("VERIFY"),"?,YesNo",ANS$
7460 IF ANS$="NO" THEN GOTO WRAPUP
7470 REMOVE (Z[1],KEY="")
7490 RETURN 
8000 ! New Order
8010 NEW_PO:
8020 DIM PO1$(384)
8030 NEW_PO=1
8040 PO_TYPE$="S"; PRINT_THIS_PO$="Y"
8050 PO_DATE$=%X3_TODAY$; DATE_REQ$=%X3_TODAY$
8060 NEXT_ID=VENDOR.CTL
8080 REFRESH_FLG=1
8090 RETURN 
8200 ! Invalid Item
8210 INV_ITEM:
8220 MSGBOX MSG("INVA_ITEM"),MSG("WARNING"),"STOP,TIM=6"
8230 PO_LINE.CTL'ROW=ROW_1,PO_LINE.CTL'CURRENTCOLUMN=COL_1,NEXT_ID=PO_LINE.CTL; GRID GOTO PO_LINE.CTL,COL_1,ROW_1
8290 EXIT 
8300 REM Invalid Customer
8310 INV_CUST:
8320 MSGBOX MSG("INV_CUST"),MSG("WARNING"),"STOP,TIM=6"
8330 PO_LINE.CTL'ROW=ROW_1,PO_LINE.CTL'CURRENTCOLUMN=COL_1,NEXT_ID=PO_LINE.CTL; GRID GOTO PO_LINE.CTL,COL_1,ROW_1
8390 EXIT 
8400 REM "Invalid Quantity
8410 INV_QTY:
8411 TEST=NUM(QTY$,ERR=8420); GOTO 8490
8420 MSGBOX MSG("INVA_QTY"),MSG("WARNING"),"STOP,TIM=6"
8430 PO_LINE.CTL'ROW=ROW_1,PO_LINE.CTL'CURRENTCOLUMN=COL_1,NEXT_ID=PO_LINE.CTL; GRID GOTO PO_LINE.CTL,COL_1,ROW_1
8440 EXIT 
8490 RETURN 
8900 ! UNIT OD MEASURE CALCULATION
8910 UM_PARAM:
8915 DIM M6[1]; CALL "IC2PRE",X3$,Z[13],M6$,M6{ALL},"",0,"",0 ! SSP217692 jdf
8920 DIM P4$(26); READ (Z[13],KEY="U/M"+UNIT$,DOM=*RETURN)P4$,P3,P4
8925 IF P4$(20,1)="Y" THEN IF P3<>0 THEN PO2[2]=P3 ELSE PO2[2]=P4 ! SSP217692
8930 IF PO2[2]=0 THEN PO2[2]=1
8935 IF LINE_TYPE$<>"S" AND ((MID(FMP$,1,1)<>"X" AND MID(FMP$,61,1)<>"Y") OR MID(P4$,21,1)<>"Y") THEN CALL "FM2EXT",Z[13],0,UNIT$,PO2[2],PO2[1],PO2[0],O0,M6[1]; PO2[4]=O0 ! SSP217692 jdf ! SSP233940 jdf
8950 IF P4$(21,1)="Y" THEN RETURN ! SSP217692 jdf
8970 GOSUB NEW_LABEL ! SSP217692 jdf
8990 RETURN 
9000 ! SYSTEM PARAMETERS
9010 GET_PARAM:
9020 READ (Z[13],KEY=X3$(9,3)+"I/C")P0$
9030 READ (Z[13],KEY=X3$(9,3)+"F/M")P2$
9040 READ (Z[13],KEY=X3$(9,3)+"OSP",DOM=*NEXT)OSP_PARMS$
9050 READ (Z[13],KEY=X3$(9,3)+"A/R")AR_PARMS$
9090 RETURN 
9900 ! EXIT ROUTINE
9910 EXIT_ROUTINE:
9912 GOSUB CHECK_LINES
9920 IF %NEW_PO THEN PROCESS "POGMAE","../POG/PO.EN",PO_NUMBER$
9950 CMD_STR$="END"
9990 RETURN 
9999 END 
10000 CHECK_LINES:
10010 CUR_ROW=PO_LINE.CTL'ROW
10020 FOR AA=1 TO CUR_ROW
10025 GRID FIND PO_LINE.CTL,1,AA,LN$,ERR=*NEXT; IF MID(LN$,1,1)<>"I" THEN GOTO *CONTINUE
10030 GRID FIND PO_LINE.CTL,6,AA,LN$,ERR=*NEXT; IF STP(LN$)="" THEN COL_1=6,ROW=AA; EXITTO 8220
10040 NEXT 
10050 RETURN 
10100 CHECK_DEFAULT:
10110 RETURN 
11000 CHECK_NUM_STORAGE_MTH:! SSP 200130
11005 GRID FIND PO_LINE.CTL,-1,ROW_1,LN$ ! SSP219164 jdf
11010 XX=NUM(PO_VALUE$,ERR=NO_NUM),LINE_NUM$=LN$ ! SSP219164 jdf
11020 IF XX<0 OR XX>99 THEN GOTO 11060
11030 PO2(24)=NUM(PO_VALUE$)
11035 WRITE_LINE:IF STP(LINE_NUM$)<>"" AND PO_NUMBER$=PO2$(82,9) AND LINE_NUM$=PO2$(7,3) THEN WRITE (Z[1],KEY=PO_NUMBER$+LINE_NUM$)IOL=0160 ! SSP233925 jdf ! SSP233940 jdf
11040 RETURN 
11050 NO_NUM:
11060 MSGBOX "Invalid Numeric"+SEP+SEP+"Valid Number 00-99",MSG("WARNING"),"STOP,TIM=10)"; GRID WRITE PO_LINE.CTL,COL_1,ROW_1,""; GRID GOTO PO_LINE.CTL,COL_1,ROW_1; NEXT_ID=PO_LINE.CTL; EXIT 
11070 RETURN 
50000 GRID_TAB:
50005 GOSUB SEL_GRID; RETURN 
50010 GRID SELECT READ PO_LINE.CTL,COL,ROW
50020 IF AROW+ACOL<>0 THEN PO_LINE.CTL'COLUMN=ACOL,PO_LINE.CTL'ROW=AROW ! PO_LINE.CTL'TEXTCOLOR$="Black",PO_LINE.CTL'BACKCOLOR$="Gray"
50030 COL+=1; IF COL>12 THEN COL=1,ROW+=1; REM SSP 200458
50040 IF COL=4 THEN COL+=1
50041 IF COL=7 THEN COL+=1; REM SSP 200458
50043 IF COL=10 THEN COL+=1; REM SSP 200458
50045 IF COL=12 THEN COL=1,ROW+=1; REM SSP 200458
50050 IF ROW>ROWS THEN %GRID=0,ROW=ROWS,NEXT_ID=ADD_L.CTL; GOTO *RETURN
50060 PO_LINE.CTL'COLUMN=COL,PO_LINE.CTL'ROW=ROW ! PO_LINE.CTL'TEXTCOLOR$="Light Blue" ! ,po_line.ctl'BACKCOLOR$="White"
50070 AROW=ROW,ACOL=COL
50080 NEXT_ID=PO_LINE.CTL; GRID GOTO PO_LINE.CTL,COL,ROW
50090 RETURN 
56000 ! "197829-Program POGMAB PO Stock Entry will allow you to generate    
56001 ! "       blank lines using the Add Line Button.
56005 ! "200130-Storage Expiration Date (SED) needs to be entered at the    
56006 REM "203803-PO/P1 orders closing if received in full 
56008 REM "216596-Stock PO entered thru GUI.  When PO receiving is done, it is
56009 ! "218981-Purchase Order Entry. Trying to add a new line and quantity 
56011 REM "219166-Issue with the Quantity break pricing that is used in       
56012 REM "219164-Issue w/ Stock PO entry.  When you delete a line, the Key   
56015 ! "199368-How to enter sell price for stock items in gui order entry. 
56017 ! "226287-GUI-Stock PO entry.  POGMAB.  System is using the Inventory 
56019 REM "224769-GRID entry of Stock PO in POGMAB.  when a stock item follows
56021 REM "226420-GUI Stock PO-Is incorrectly populating the Standard Unit    
56023 REM "233925-Stock PO Modification Issue - incorrect focus, couple with  
56024 REM "264206-Customer default parameter; Number of months for lot storage
56025 REM "273055-Expand IC2 for 6 additional cost breaks, allow entry in GUI 
56026 REM "263584-Providex version upgrade from Pvx 7.1 to PxPlus 2017        
56027 REM "299409-Trying to enter a stock purchase order, item code will only 
