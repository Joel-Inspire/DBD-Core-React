0010 ! POGMAZ - File Maintenance Program for PO1_POHdr (="PO1"+%C$)
0035 REM "5.7 - 03/17/22 - 16.157244 - crg - SSP# 307397
0037 REM "307397-DBD-255 - Impending Whse Receipt notification - 943 XML     
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="PO1"+%C$; MSG_FILE_NAME$=_FILE_NAME$ ! SSP#203834
0170 _PO1=HFN; OPEN (_PO1,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0172 _AP4=HFN,MSG_FILE_NAME$="AP4"+%C$; OPEN (_AP4,IOL=*,ERR=OPEN_ERR)"AP4"+%C$ ! SSP#203834
0173 _ZY1=HFN,MSG_FILE_NAME$="ZY1"+%C$; OPEN (_ZY1,IOL=*,ERR=OPEN_ERR)"ZY1"+%C$ ! SSP#203834
0175 _FM0=HFN,MSG_FILE_NAME$="FM0"+%C$; OPEN (_FM0,ERR=OPEN_ERR)"FM0"+%C$ ! SSP#203834
0177 _AP2=HFN,MSG_FILE_NAME$="AP2"+%C$; OPEN (_AP2,ERR=OPEN_ERR)"AP2"+%C$ ! SSP#203834
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0182 _FS2=HFN,MSG_FILE_NAME$="FS2"+%C$; OPEN (_FS2,ERR=OPEN_ERR)"FS2"+%C$ ! SSP#203834
0185 _QSD=HFN,MSG_FILE_NAME$="QSD"+%C$; OPEN (_QSD,ERR=OPEN_ERR)"QSD"+%C$ ! SSP#197645  jdf
0186 IF NOT(NUL(%AR1_PARM$)) THEN GOTO 0190
0187 _ZZP=FN%FFN("ZZPARM"); IF _ZZP<0 THEN _ZZP=HFN ! SSP 226284
0188 READ (_ZZP,KEY=%C$+"A/R",DOM=*NEXT)%AR1_PARM$ ! SSP 226284
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+MSG_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!" ! SSP#203834
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*tfmsglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*tfmsglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="PO_NUMBER$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0531 IF %NO_DELETE THEN CALL "*WINGRP;HIDE",NO_DELETE.GRP$
0533 FROM_FMGODB_FLG=0
0535 IF %PO_NUM$<>"" THEN ARG_1$=%PO_NUM$,NEXT_ID=VENDOR.CTL,FROM_FMGODB_FLG=1
0537 IF %ORDER_NUM_PO$<>"" THEN FS2_KEY$=%ORDER_NUM_PO$
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; IF NOT(NUL(%SALES_ORDER_PREFIX$)) THEN PO_DIV$=MID(%SALES_ORDER_PREFIX$,1,2),PO_NUM$=MID(%SALES_ORDER_PREFIX$,3),PO_NUMBER$=MID(%SALES_ORDER_PREFIX$,1,%OP_DIV_LEN)+MID(%SALES_ORDER_PREFIX$,3,8),PO_NUMBER.CTL'VALUE$=PO_NUMBER$; NEXT_ID=PO_NUMBER.CTL; CALL "*wingrp;Enable",KEY1.GRP$ END_IF ; GOTO *RETURN
0550 _KEY$=PAD(ARG_1$,9); READ (_PO1,KEY=_KEY$,ERR=OPT)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0563 IF FROM_FMGODB_FLG THEN CALL "*WINGRP;ENABLE",FROM_FMGODB.GRP$
0565 NEXT_ID=VENDOR.CTL
0570 RETURN 
0580 OPT:IF %PO_NUM$<>"" THEN CMD_STR$="E" ELSE GOTO NEXT_REC
0700 ! 700 - Set up tabbing between folders
0710 INIT_FOLDER:
0720 GOSUB ENABLE_GROUPS
0730 IF _ENABLE_FLG<>_KEY1 THEN IF TAB_FLG$="<" THEN NEXT_ID=_LAST_TAB ELSE NEXT_ID=_FIRST_TAB
0735 IF POGMAA AND NUL(%SALES_ORDER_PREFIX$) THEN NEXT_ID=VENDOR.CTL; CALL "*WINGRP;DISABLE",KEY1.GRP$; CALL "*WINGRP;HIDE",ARROW.GRP$ ELSE NEXT_ID=PO_NUMBER.CTL ! SSP249656 jdf   
0737 GOSUB CHECK_TOPS
0740 IF FROM_FMGODB_FLG THEN CALL "*WINGRP;ENABLE",FROM_FMGODB.GRP$
0790 EXIT 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_PO1,ERR=*NEXT)
0930 IF _PO1<>0 THEN CLOSE (_PO1); _PO1=0
0935 IF _AP4<>0 THEN CLOSE (_AP4); _AP4=0; REM SSP 220929
0936 IF _FM0<>0 THEN CLOSE (_FM0); _FM0=0; REM SSP 220929
0937 IF _AP4<>0 THEN CLOSE (_AP2); _AP2=0; REM SSP 220929
0938 IF _ZY1<>0 THEN CLOSE (_ZY1); _ZY1=0; REM SSP 220929
0939 IF _FS2<>0 THEN CLOSE (_FS2); _FS2=0; REM SSP 220929
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0965 %PO_NUM$="",%SALES_ORDER_PREFIX$=""
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1012 IF %PO_DIV_LEN=0 AND LEN(PO_NUMBER$)=6 THEN PO_NUMBER$=MID(%SALES_ORDER_PREFIX$,1,2)+PO_NUMBER$ ! SSP#281954
1015 PO_NUMBER$=PAD(PO_NUMBER$,9," ")
1018 QRY_VAL$=PAD(STP(QRY_VAL$,3,"-"),9," ") ! SSP228290 jdf
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 ! PO_DIV$=PO_NUMBER$(1,%PO_DIV_LEN),PO_NUM$=PO_NUMBER$(%PO_DIV_LEN+1)
1047 CALL "ZZWLKU;PARSE_PORDER",PO_NUMBER$,PO_DIV$,PO_NUM$
1050 READ DATA FROM REC(IOL(_PO1:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_PO1,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1225 IF NOT(NUL(%SALES_ORDER_PREFIX$)) THEN IF STP(_KEY$,1)=%SALES_ORDER_PREFIX$ THEN _YESNO$="NO"; GOTO 1240
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 NEXT_FOLDER=_FIRST_FOLDER
1285 VEND_XML_SENT$="N" ! 204283
1286 IWR_XML_SENT$="N" ! DBD-255
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1415 IF B_KEY$<>"" THEN _KEY$=B_KEY$
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1435 GOSUB PARSE_VAR
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=PO_NUMBER.CTL,NEXT_FOLDER=FLDR.POGMAZ.1.CTL
1484 GOSUB SET_FROM_SALES_ORDER_PREFIX
1485 IF POGMAA AND NUL(%SALES_ORDER_PREFIX$) THEN CMD_STR$="E"
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_PO1:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_PO1,KEY=_KEY$,ERR=NO_SUCH)
1670 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_REMOVE$+_R_KEY$,_FYI$,"INFO"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1695 GOSUB SET_FROM_SALES_ORDER_PREFIX
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1854 GOSUB SET_FROM_SALES_ORDER_PREFIX
1855 IF POGMAA AND NUL(%SALES_ORDER_PREFIX$) THEN CMD_STR$="E"
1856 IF NOT(NUL(%SALES_ORDER_PREFIX$)) THEN NEXT_ID=PO_NUMBER.CTL
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_PO1,END=END_OF_FILE)
2060 READ (_PO1,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_PO1,KEY=_KEY$,END=END_OF_FILE); READ (_PO1,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_PO1,END=START_OF_FILE); READ (_PO1,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_PO1,KEY=_KEY$,END=START_OF_FILE); READ (_PO1,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_PO1,ERR=NO_FIRST)
2450 READ (_PO1,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_PO1,ERR=NO_LAST)
2650 READ (_PO1,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3025 DIM FS2[29]; FIND (_FS2,KEY=FS2_KEY$,DOM=*NEXT)IOL=17070 ! SSP#284030
3030 READ DATA FROM _KEY$ TO IOL=IOL(_PO1:KEY,ERR=*NEXT) ! load fields from external key
3031 B_TERMS_CODE$=TERMS_CODE$; GOSUB SEL_TERM_CODE
3032 AP4_KEY$=VEND_DIV$+VEND_CODE$,VENDOR$=AP4_KEY$,VENDOR1$=VENDOR$,%ML_VEND_CODE$=VENDOR$; READ (_AP4,KEY=AP4_KEY$,DOM=*NEXT)
3035 READ DATA FROM AP4_KEY$ TO IOL=IOL(_AP4:KEY,ERR=*NEXT) ! load fields from external key
3036 IF VEND_XML_SENT$=" " THEN VEND_XML_SENT$="N" ! 204283
3037 IF STP(SPC$)="PO2XML" AND POS("P"=OPTIONS$)=0 THEN IF POS("E"=OPTIONS$)>0 AND MID(FS2$,5,1)<>"E" THEN GOTO *NEXT; END_IF ; PRINT_THIS_PO$="N" ! [193783,189102] set the print this po flag!SSP#284030
3038 IF IWR_XML_SENT$=" " THEN IWR_XML_SENT$="N" ! DBD-255
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_PO1,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_PO1) ! Save record for review
3060 CHANGE_FLG=0,PO_NUMBER$=PO_DIV$+PO_NUM$,VEND_NAME1$=VEND_NAME$,PLANT_CODE1$=PLANT_CODE$,PLANT_NAME1$=PLANT_NAME$,CUSTOMER$=CUST_DIV$+CUST_CODE$,ORDER$=ORDER_DIV$+ORDER_NUM$
3065 IF FOLDER_ID$="POGMAZ.3" THEN B_KEY$=_KEY$,_KEY$=PO_NUMBER$+"    "; PERFORM "POGMAZ.3;MAIN_POST_DISPLAY"; REFRESH_FLG=1
3066 IF ARG_1$<>"" THEN NEXT_ID=VENDOR.CTL
3070 IF FOLDER_ID$="POGMAZ.2" THEN C_KEY$=_KEY$,_KEY$=PO_NUMBER$; PERFORM "POGMAZ.2;MAIN_POST_DISPLAY"; REFRESH_FLG=1,NEXT_ID=LINE_TYPE.CTL
3080 IF FOLDER_ID$="POGMAZ.5" THEN Z_KEY$=_KEY$,_KEY$=PO_NUMBER$; PERFORM "POGMAZ.5;MAIN_POST_DISPLAY"; REFRESH_FLG=1
3090 TERMS_CODE$=B_TERMS_CODE$
3095 GOSUB SEL_PLANT_PHONE
3097 GOSUB FIND_PLANT_QUOTE ! SSP197645 jdf
3100 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_PO1),DOM=WRT)
3240 ! GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3255 IF B_KEY$<>"" THEN _KEY$=B_KEY$
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_PO1,KEY=_KEY$,ERR=WRITE_ERROR)
3330 _R_KEY$=KEC(_PO1); TRANSLATE _R_KEY$," ",$00$ ! ; MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO"
3340 READ DATA FROM REC(IOL(_PO1,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_PO1) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3805 IF ID$="PO_NUMBER" AND CHANGE_FLG=1 AND QRY_VAL$<>"" THEN RETURN ! SSP 216247
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=PO_NUMBER.CTL,_FIRST_FIELD=VENDOR.CTL,_FIRST_FOLDER=FLDR.POGMAZ.1.CTL; IF ARG_1$<>"" THEN _FIRST_FIELD=VENDOR.CTL
3815 IF ARG_1$<>"" THEN GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT ! SSP 302575
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12030 IF STP(VENDOR$,2)="" THEN MSGBOX MSG("CD3ERR_04"),MSG("MB_ATTN"),"!"; NEXT_ID=VENDOR.CTL; _W_FLG=0 ! SSP 273626
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 NUM_TIMES_PO_PRINTED$="",PO_NUMBER$=""
13030 PO1_UNUSED_1$=""
13040 VEND_DIV$=""
13050 VEND_CODE$=""
13060 PLANT_CODE$="",VENDOR$="",%ML_VEND_CODE$="",VENDOR1$=""
13070 PLANT_NAME$="",VEND_NAME$="",ORDER$="",CUSTOMER$="",VEND_NAME1$=""
13080 PLANT_ATTN$="",VEND_CONT_PERSON$=""
13090 PLANT_ADDR_1$="",VEND_ADDR_1$=""
13100 PLANT_ADDR_2$="",VEND_ADDR_2$=""
13110 PLANT_CITY$="",VEND_CITY$=""
13120 PLANT_ST$="",VEND_ST$=""
13130 PLANT_ZIP_CODE$="",VEND_ZIP$=""
13135 PLANT_COUNTRY$="",VEND_COUNTRY$="" ! 307210
13140 PO_TYPE$=""
13150 DISC_TO_APPLY_LINES$=""
13160 CUST_DIV$=""
13170 CUST_CODE$=""
13180 PRINT_THIS_PO$=""
13190 NEW_REPEAT$=""
13200 CONFIRMING$="",SEND_UNITED_DATA$=""
13210 PO_DATE$=""
13220 GROUPING_CUTOFF_DATE$=""
13230 DATE_REQ$=""
13240 TERMS_CODE$=""
13250 PLANT_QUOTE_NUM$=""
13260 PLANT_QUOTE_NUM_DATE$=""
13270 PREV_JOB_NUM$=""
13280 PREV_JOB_NUM_DATE$=""
13290 JOB_NUM$=""
13300 JOB_DATE$=""
13310 JOB_STATUS$=""
13320 JOB_STATUS_DATE$=""
13330 PROOF_STATUS$=""
13340 PROOF_STATUS_DATE$=""
13350 SCHED_SHIP_DATE$=""
13360 IF _CLR_FLG$="R" THEN PO_DIV$=""
13370 IF _CLR_FLG$="R" THEN PO_NUM$=""
13380 ORDER_DIV$=""
13390 ORDER_NUM$=""
13400 RUSH_SERVICE_PER$=""
13410 RUSH_SERV_WORK_DAYS$=""
13420 CUST_PO$=""
13430 SPER_CODE$=""
13440 CUST_SERV_REP$=""
13450 NEW_ORDER_TYPE_OP$=""
13460 PO1_UNUSED_2$=""
13461 TOPS_TRN$=""; REM " TOPS
13465 VEND_XML_SENT$="N" ! ssp 200962 204283
13466 IWR_XML_SENT$="N" ! DBD-255
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=PO_NUM.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14985 REM IF USING_TOPS=1 THEN CALL "*WINGRP;SHOW",TOPS.GRP$ ELSE CALL "*WINGRP;HIDE",TOPS.GRP$; REM SSP 202876"
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(48,"N") ! ssp 307210
15030 IF _ORIG.NUM_TIMES_PO_PRINTED$=_CUR.NUM_TIMES_PO_PRINTED$ OR NUM_TIMES_PO_PRINTED$=_CUR.NUM_TIMES_PO_PRINTED$ THEN GOTO *NEXT ELSE IF _ORIG.NUM_TIMES_PO_PRINTED$=NUM_TIMES_PO_PRINTED$ THEN _CHG2$=_CHG2$+SEP+MSG("NUM_T_PO_P")+" = "+_CUR.NUM_TIMES_PO_PRINTED$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NUM_T_PO_P")+" = "+_CUR.NUM_TIMES_PO_PRINTED$
15040 IF _ORIG.PO1_UNUSED_1$=_CUR.PO1_UNUSED_1$ OR PO1_UNUSED_1$=_CUR.PO1_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.PO1_UNUSED_1$=PO1_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.PO1_UNUSED_1$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.PO1_UNUSED_1$
15050 IF _ORIG.VEND_DIV$=_CUR.VEND_DIV$ OR VEND_DIV$=_CUR.VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV$=VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$
15060 IF _ORIG.VEND_CODE$=_CUR.VEND_CODE$ OR VEND_CODE$=_CUR.VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE$=VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$
15070 IF _ORIG.PLANT_CODE$=_CUR.PLANT_CODE$ OR PLANT_CODE$=_CUR.PLANT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_CODE$=PLANT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$
15080 IF _ORIG.PLANT_NAME$=_CUR.PLANT_NAME$ OR PLANT_NAME$=_CUR.PLANT_NAME$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_NAME$=PLANT_NAME$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_NAME")+" = "+_CUR.PLANT_NAME$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_NAME")+" = "+_CUR.PLANT_NAME$
15090 IF _ORIG.PLANT_ATTN$=_CUR.PLANT_ATTN$ OR PLANT_ATTN$=_CUR.PLANT_ATTN$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_ATTN$=PLANT_ATTN$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_ATTN")+" = "+_CUR.PLANT_ATTN$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_ATTN")+" = "+_CUR.PLANT_ATTN$
15100 IF _ORIG.PLANT_ADDR_1$=_CUR.PLANT_ADDR_1$ OR PLANT_ADDR_1$=_CUR.PLANT_ADDR_1$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_ADDR_1$=PLANT_ADDR_1$ THEN _CHG2$=_CHG2$+SEP+MSG("PLAN_A_1")+" = "+_CUR.PLANT_ADDR_1$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLAN_A_1")+" = "+_CUR.PLANT_ADDR_1$
15110 IF _ORIG.PLANT_ADDR_2$=_CUR.PLANT_ADDR_2$ OR PLANT_ADDR_2$=_CUR.PLANT_ADDR_2$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_ADDR_2$=PLANT_ADDR_2$ THEN _CHG2$=_CHG2$+SEP+MSG("PLAN_A_2")+" = "+_CUR.PLANT_ADDR_2$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLAN_A_2")+" = "+_CUR.PLANT_ADDR_2$
15120 IF _ORIG.PLANT_CITY$=_CUR.PLANT_CITY$ OR PLANT_CITY$=_CUR.PLANT_CITY$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_CITY$=PLANT_CITY$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CITY")+" = "+_CUR.PLANT_CITY$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CITY")+" = "+_CUR.PLANT_CITY$
15130 IF _ORIG.PLANT_ST$=_CUR.PLANT_ST$ OR PLANT_ST$=_CUR.PLANT_ST$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_ST$=PLANT_ST$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_ST")+" = "+_CUR.PLANT_ST$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_ST")+" = "+_CUR.PLANT_ST$
15140 IF _ORIG.PLANT_ZIP_CODE$=_CUR.PLANT_ZIP_CODE$ OR PLANT_ZIP_CODE$=_CUR.PLANT_ZIP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_ZIP_CODE$=PLANT_ZIP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ZIP_CODE")+" = "+_CUR.PLANT_ZIP_CODE$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ZIP_CODE")+" = "+_CUR.PLANT_ZIP_CODE$
15150 IF _ORIG.PO_TYPE$=_CUR.PO_TYPE$ OR PO_TYPE$=_CUR.PO_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.PO_TYPE$=PO_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_TYPE")+" = "+_CUR.PO_TYPE$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_TYPE")+" = "+_CUR.PO_TYPE$
15160 IF _ORIG.DISC_TO_APPLY_LINES$=_CUR.DISC_TO_APPLY_LINES$ OR DISC_TO_APPLY_LINES$=_CUR.DISC_TO_APPLY_LINES$ THEN GOTO *NEXT ELSE IF _ORIG.DISC_TO_APPLY_LINES$=DISC_TO_APPLY_LINES$ THEN _CHG2$=_CHG2$+SEP+MSG("DISC_T_A_L")+" = "+_CUR.DISC_TO_APPLY_LINES$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DISC_T_A_L")+" = "+_CUR.DISC_TO_APPLY_LINES$
15170 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15180 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15190 IF _ORIG.PRINT_THIS_PO$=_CUR.PRINT_THIS_PO$ OR PRINT_THIS_PO$=_CUR.PRINT_THIS_PO$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_THIS_PO$=PRINT_THIS_PO$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_T_P")+" = "+_CUR.PRINT_THIS_PO$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_T_P")+" = "+_CUR.PRINT_THIS_PO$
15200 IF _ORIG.NEW_REPEAT$=_CUR.NEW_REPEAT$ OR NEW_REPEAT$=_CUR.NEW_REPEAT$ THEN GOTO *NEXT ELSE IF _ORIG.NEW_REPEAT$=NEW_REPEAT$ THEN _CHG2$=_CHG2$+SEP+MSG("NEW_REPEAT")+" = "+_CUR.NEW_REPEAT$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NEW_REPEAT")+" = "+_CUR.NEW_REPEAT$
15210 IF _ORIG.CONFIRMING$=_CUR.CONFIRMING$ OR CONFIRMING$=_CUR.CONFIRMING$ THEN GOTO *NEXT ELSE IF _ORIG.CONFIRMING$=CONFIRMING$ THEN _CHG2$=_CHG2$+SEP+MSG("CONFIRMING")+" = "+_CUR.CONFIRMING$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CONFIRMING")+" = "+_CUR.CONFIRMING$
15220 IF _ORIG.PO_DATE$=_CUR.PO_DATE$ OR PO_DATE$=_CUR.PO_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.PO_DATE$=PO_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_DATE")+" = "+_CUR.PO_DATE$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_DATE")+" = "+_CUR.PO_DATE$
15230 IF _ORIG.GROUPING_CUTOFF_DATE$=_CUR.GROUPING_CUTOFF_DATE$ OR GROUPING_CUTOFF_DATE$=_CUR.GROUPING_CUTOFF_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.GROUPING_CUTOFF_DATE$=GROUPING_CUTOFF_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("GROU_C_D")+" = "+_CUR.GROUPING_CUTOFF_DATE$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GROU_C_D")+" = "+_CUR.GROUPING_CUTOFF_DATE$
15240 IF _ORIG.DATE_REQ$=_CUR.DATE_REQ$ OR DATE_REQ$=_CUR.DATE_REQ$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_REQ$=DATE_REQ$ THEN _CHG2$=_CHG2$+SEP+MSG("DATE_REQ")+" = "+_CUR.DATE_REQ$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATE_REQ")+" = "+_CUR.DATE_REQ$
15250 IF _ORIG.TERMS_CODE$=_CUR.TERMS_CODE$ OR TERMS_CODE$=_CUR.TERMS_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.TERMS_CODE$=TERMS_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("TERMS_CODE")+" = "+_CUR.TERMS_CODE$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TERMS_CODE")+" = "+_CUR.TERMS_CODE$
15260 IF _ORIG.PLANT_QUOTE_NUM$=_CUR.PLANT_QUOTE_NUM$ OR PLANT_QUOTE_NUM$=_CUR.PLANT_QUOTE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_QUOTE_NUM$=PLANT_QUOTE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("PLAN_Q_N")+" = "+_CUR.PLANT_QUOTE_NUM$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLAN_Q_N")+" = "+_CUR.PLANT_QUOTE_NUM$
15270 IF _ORIG.PLANT_QUOTE_NUM_DATE$=_CUR.PLANT_QUOTE_NUM_DATE$ OR PLANT_QUOTE_NUM_DATE$=_CUR.PLANT_QUOTE_NUM_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_QUOTE_NUM_DATE$=PLANT_QUOTE_NUM_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("PLAN_Q_N_D")+" = "+_CUR.PLANT_QUOTE_NUM_DATE$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLAN_Q_N_D")+" = "+_CUR.PLANT_QUOTE_NUM_DATE$
15280 IF _ORIG.PREV_JOB_NUM$=_CUR.PREV_JOB_NUM$ OR PREV_JOB_NUM$=_CUR.PREV_JOB_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.PREV_JOB_NUM$=PREV_JOB_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("PREV_J_N")+" = "+_CUR.PREV_JOB_NUM$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PREV_J_N")+" = "+_CUR.PREV_JOB_NUM$
15290 IF _ORIG.PREV_JOB_NUM_DATE$=_CUR.PREV_JOB_NUM_DATE$ OR PREV_JOB_NUM_DATE$=_CUR.PREV_JOB_NUM_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.PREV_JOB_NUM_DATE$=PREV_JOB_NUM_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("PREV_J_N_D")+" = "+_CUR.PREV_JOB_NUM_DATE$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PREV_J_N_D")+" = "+_CUR.PREV_JOB_NUM_DATE$
15300 IF _ORIG.JOB_NUM$=_CUR.JOB_NUM$ OR JOB_NUM$=_CUR.JOB_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.JOB_NUM$=JOB_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_NUM")+" = "+_CUR.JOB_NUM$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_NUM")+" = "+_CUR.JOB_NUM$
15310 IF _ORIG.JOB_DATE$=_CUR.JOB_DATE$ OR JOB_DATE$=_CUR.JOB_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.JOB_DATE$=JOB_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_DATE")+" = "+_CUR.JOB_DATE$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_DATE")+" = "+_CUR.JOB_DATE$
15320 IF _ORIG.JOB_STATUS$=_CUR.JOB_STATUS$ OR JOB_STATUS$=_CUR.JOB_STATUS$ THEN GOTO *NEXT ELSE IF _ORIG.JOB_STATUS$=JOB_STATUS$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_STATUS")+" = "+_CUR.JOB_STATUS$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_STATUS")+" = "+_CUR.JOB_STATUS$
15330 IF _ORIG.JOB_STATUS_DATE$=_CUR.JOB_STATUS_DATE$ OR JOB_STATUS_DATE$=_CUR.JOB_STATUS_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.JOB_STATUS_DATE$=JOB_STATUS_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_S_D")+" = "+_CUR.JOB_STATUS_DATE$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_S_D")+" = "+_CUR.JOB_STATUS_DATE$
15340 IF _ORIG.PROOF_STATUS$=_CUR.PROOF_STATUS$ OR PROOF_STATUS$=_CUR.PROOF_STATUS$ THEN GOTO *NEXT ELSE IF _ORIG.PROOF_STATUS$=PROOF_STATUS$ THEN _CHG2$=_CHG2$+SEP+MSG("PROO_S")+" = "+_CUR.PROOF_STATUS$,_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROO_S")+" = "+_CUR.PROOF_STATUS$
15350 IF _ORIG.PROOF_STATUS_DATE$=_CUR.PROOF_STATUS_DATE$ OR PROOF_STATUS_DATE$=_CUR.PROOF_STATUS_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.PROOF_STATUS_DATE$=PROOF_STATUS_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("PROO_S_D")+" = "+_CUR.PROOF_STATUS_DATE$,_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROO_S_D")+" = "+_CUR.PROOF_STATUS_DATE$
15360 IF _ORIG.SCHED_SHIP_DATE$=_CUR.SCHED_SHIP_DATE$ OR SCHED_SHIP_DATE$=_CUR.SCHED_SHIP_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.SCHED_SHIP_DATE$=SCHED_SHIP_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("SCHE_S_D")+" = "+_CUR.SCHED_SHIP_DATE$,_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SCHE_S_D")+" = "+_CUR.SCHED_SHIP_DATE$
15370 IF _ORIG.PO_DIV$=_CUR.PO_DIV$ OR PO_DIV$=_CUR.PO_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.PO_DIV$=PO_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_DIV")+" = "+_CUR.PO_DIV$,_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_DIV")+" = "+_CUR.PO_DIV$
15380 IF _ORIG.PO_NUM$=_CUR.PO_NUM$ OR PO_NUM$=_CUR.PO_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.PO_NUM$=PO_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_NUM")+" = "+_CUR.PO_NUM$,_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_NUM")+" = "+_CUR.PO_NUM$
15390 IF _ORIG.ORDER_DIV$=_CUR.ORDER_DIV$ OR ORDER_DIV$=_CUR.ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DIV$=ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$,_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$
15400 IF _ORIG.ORDER_NUM$=_CUR.ORDER_NUM$ OR ORDER_NUM$=_CUR.ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_NUM$=ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$,_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$
15410 IF _ORIG.RUSH_SERVICE_PER$=_CUR.RUSH_SERVICE_PER$ OR RUSH_SERVICE_PER$=_CUR.RUSH_SERVICE_PER$ THEN GOTO *NEXT ELSE IF _ORIG.RUSH_SERVICE_PER$=RUSH_SERVICE_PER$ THEN _CHG2$=_CHG2$+SEP+MSG("RUSH_S_P")+" = "+_CUR.RUSH_SERVICE_PER$,_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RUSH_S_P")+" = "+_CUR.RUSH_SERVICE_PER$
15420 IF _ORIG.RUSH_SERV_WORK_DAYS$=_CUR.RUSH_SERV_WORK_DAYS$ OR RUSH_SERV_WORK_DAYS$=_CUR.RUSH_SERV_WORK_DAYS$ THEN GOTO *NEXT ELSE IF _ORIG.RUSH_SERV_WORK_DAYS$=RUSH_SERV_WORK_DAYS$ THEN _CHG2$=_CHG2$+SEP+MSG("RUSH_S_W_D")+" = "+_CUR.RUSH_SERV_WORK_DAYS$,_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RUSH_S_W_D")+" = "+_CUR.RUSH_SERV_WORK_DAYS$
15430 IF _ORIG.CUST_PO$=_CUR.CUST_PO$ OR CUST_PO$=_CUR.CUST_PO$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_PO$=CUST_PO$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$,_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$
15440 IF _ORIG.SPER_CODE$=_CUR.SPER_CODE$ OR SPER_CODE$=_CUR.SPER_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE$=SPER_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_CODE")+" = "+_CUR.SPER_CODE$,_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_CODE")+" = "+_CUR.SPER_CODE$
15450 IF _ORIG.CUST_SERV_REP$=_CUR.CUST_SERV_REP$ OR CUST_SERV_REP$=_CUR.CUST_SERV_REP$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_SERV_REP$=CUST_SERV_REP$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_S_R")+" = "+_CUR.CUST_SERV_REP$,_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_S_R")+" = "+_CUR.CUST_SERV_REP$
15460 IF _ORIG.NEW_ORDER_TYPE_OP$=_CUR.NEW_ORDER_TYPE_OP$ OR NEW_ORDER_TYPE_OP$=_CUR.NEW_ORDER_TYPE_OP$ THEN GOTO *NEXT ELSE IF _ORIG.NEW_ORDER_TYPE_OP$=NEW_ORDER_TYPE_OP$ THEN _CHG2$=_CHG2$+SEP+MSG("NEW_O_T_O")+" = "+_CUR.NEW_ORDER_TYPE_OP$,_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NEW_O_T_O")+" = "+_CUR.NEW_ORDER_TYPE_OP$
15470 IF _ORIG.TOPS_TRN$=_CUR.TOPS_TRN$ OR TOPS_TRN$=_CUR.TOPS_TRN$ THEN GOTO *NEXT ELSE IF _ORIG.TOPS_TRN$=TOPS_TRN$ THEN _CHG2$=_CHG2$+SEP+MSG("TOPS_TRN")+" = "+_CUR.TOPS_TRN$,_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOPS_TRN")+" = "+_CUR.TOPS_TRN$
15472 IF _ORIG.PO1_UNUSED_2$=_CUR.PO1_UNUSED_2$ OR PO1_UNUSED_2$=_CUR.PO1_UNUSED_2$ THEN GOTO *NEXT ELSE IF _ORIG.PO1_UNUSED_2$=PO1_UNUSED_2$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.PO1_UNUSED_2$,_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.PO1_UNUSED_2$
15475 IF _ORIG.VEND_XML_SENT$=_CUR.VEND_XML_SENT$ OR VEND_XML_SENT$=_CUR.VEND_XML_SENT$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_XML_SENT$=VEND_XML_SENT$ THEN _CHG2$=_CHG2$+SEP+MSG("XML_SENT")+" = "+_CUR.VEND_XML_SENT$,_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("XML_SENT")+" = "+_CUR.VEND_XML_SENT$
15478 IF _ORIG.PLANT_COUNTRY$=_CUR.PLANT_COUNTRY$ OR PLANT_COUNTRY$=_CUR.PLANT_COUNTRY$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_COUNTRY$=PLANT_COUNTRY$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_COUNTRY$,_CHG_VAR$(48,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_COUNTRY$ ! SSP 307210
15479 IF _ORIG.IWR_XML_SENT$=_CUR.IWR_XML_SENT$ OR IWR_XML_SENT$=_CUR.IWR_XML_SENT$ THEN GOTO *NEXT ELSE IF _ORIG.IWR_XML_SENT$=IWR_XML_SENT$ THEN _CHG2$=_CHG2$+SEP+MSG("IWR_SENT")+" = "+_CUR.IWR_XML_SENT$,_CHG_VAR$(49,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("IWR_SENT")+" = "+_CUR.IWR_XML_SENT$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN NUM_TIMES_PO_PRINTED$=_CUR.NUM_TIMES_PO_PRINTED$
16030 IF _CHG_VAR$(2,1)="Y" THEN PO1_UNUSED_1$=_CUR.PO1_UNUSED_1$
16040 IF _CHG_VAR$(3,1)="Y" THEN VEND_DIV$=_CUR.VEND_DIV$
16050 IF _CHG_VAR$(4,1)="Y" THEN VEND_CODE$=_CUR.VEND_CODE$
16060 IF _CHG_VAR$(5,1)="Y" THEN PLANT_CODE$=_CUR.PLANT_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN PLANT_NAME$=_CUR.PLANT_NAME$
16080 IF _CHG_VAR$(7,1)="Y" THEN PLANT_ATTN$=_CUR.PLANT_ATTN$
16090 IF _CHG_VAR$(8,1)="Y" THEN PLANT_ADDR_1$=_CUR.PLANT_ADDR_1$
16100 IF _CHG_VAR$(9,1)="Y" THEN PLANT_ADDR_2$=_CUR.PLANT_ADDR_2$
16110 IF _CHG_VAR$(10,1)="Y" THEN PLANT_CITY$=_CUR.PLANT_CITY$
16120 IF _CHG_VAR$(11,1)="Y" THEN PLANT_ST$=_CUR.PLANT_ST$
16130 IF _CHG_VAR$(12,1)="Y" THEN PLANT_ZIP_CODE$=_CUR.PLANT_ZIP_CODE$
16140 IF _CHG_VAR$(13,1)="Y" THEN PO_TYPE$=_CUR.PO_TYPE$
16150 IF _CHG_VAR$(14,1)="Y" THEN DISC_TO_APPLY_LINES$=_CUR.DISC_TO_APPLY_LINES$
16160 IF _CHG_VAR$(15,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16170 IF _CHG_VAR$(16,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16180 IF _CHG_VAR$(17,1)="Y" THEN PRINT_THIS_PO$=_CUR.PRINT_THIS_PO$
16190 IF _CHG_VAR$(18,1)="Y" THEN NEW_REPEAT$=_CUR.NEW_REPEAT$
16200 IF _CHG_VAR$(19,1)="Y" THEN CONFIRMING$=_CUR.CONFIRMING$
16210 IF _CHG_VAR$(20,1)="Y" THEN PO_DATE$=_CUR.PO_DATE$
16220 IF _CHG_VAR$(21,1)="Y" THEN GROUPING_CUTOFF_DATE$=_CUR.GROUPING_CUTOFF_DATE$
16230 IF _CHG_VAR$(22,1)="Y" THEN DATE_REQ$=_CUR.DATE_REQ$
16240 IF _CHG_VAR$(23,1)="Y" THEN TERMS_CODE$=_CUR.TERMS_CODE$
16250 IF _CHG_VAR$(24,1)="Y" THEN PLANT_QUOTE_NUM$=_CUR.PLANT_QUOTE_NUM$
16260 IF _CHG_VAR$(25,1)="Y" THEN PLANT_QUOTE_NUM_DATE$=_CUR.PLANT_QUOTE_NUM_DATE$
16270 IF _CHG_VAR$(26,1)="Y" THEN PREV_JOB_NUM$=_CUR.PREV_JOB_NUM$
16280 IF _CHG_VAR$(27,1)="Y" THEN PREV_JOB_NUM_DATE$=_CUR.PREV_JOB_NUM_DATE$
16290 IF _CHG_VAR$(28,1)="Y" THEN JOB_NUM$=_CUR.JOB_NUM$
16300 IF _CHG_VAR$(29,1)="Y" THEN JOB_DATE$=_CUR.JOB_DATE$
16310 IF _CHG_VAR$(30,1)="Y" THEN JOB_STATUS$=_CUR.JOB_STATUS$
16320 IF _CHG_VAR$(31,1)="Y" THEN JOB_STATUS_DATE$=_CUR.JOB_STATUS_DATE$
16330 IF _CHG_VAR$(32,1)="Y" THEN PROOF_STATUS$=_CUR.PROOF_STATUS$
16340 IF _CHG_VAR$(33,1)="Y" THEN PROOF_STATUS_DATE$=_CUR.PROOF_STATUS_DATE$
16350 IF _CHG_VAR$(34,1)="Y" THEN SCHED_SHIP_DATE$=_CUR.SCHED_SHIP_DATE$
16360 IF _CHG_VAR$(35,1)="Y" THEN PO_DIV$=_CUR.PO_DIV$
16370 IF _CHG_VAR$(36,1)="Y" THEN PO_NUM$=_CUR.PO_NUM$
16380 IF _CHG_VAR$(37,1)="Y" THEN ORDER_DIV$=_CUR.ORDER_DIV$
16390 IF _CHG_VAR$(38,1)="Y" THEN ORDER_NUM$=_CUR.ORDER_NUM$
16400 IF _CHG_VAR$(39,1)="Y" THEN RUSH_SERVICE_PER$=_CUR.RUSH_SERVICE_PER$
16410 IF _CHG_VAR$(40,1)="Y" THEN RUSH_SERV_WORK_DAYS$=_CUR.RUSH_SERV_WORK_DAYS$
16420 IF _CHG_VAR$(41,1)="Y" THEN CUST_PO$=_CUR.CUST_PO$
16430 IF _CHG_VAR$(42,1)="Y" THEN SPER_CODE$=_CUR.SPER_CODE$
16440 IF _CHG_VAR$(43,1)="Y" THEN CUST_SERV_REP$=_CUR.CUST_SERV_REP$
16450 IF _CHG_VAR$(44,1)="Y" THEN NEW_ORDER_TYPE_OP$=_CUR.NEW_ORDER_TYPE_OP$
16460 IF _CHG_VAR$(45,1)="Y" THEN PO1_UNUSED_2$=_CUR.PO1_UNUSED_2$
16462 IF _CHG_VAR$(46,1)="Y" THEN TOPS_TRN$=_CUR.TOPS_TRN$
16465 IF _CHG_VAR$(47,1)="Y" THEN VEND_XML_SENT$=_CUR.VEND_XML_SENT$
16468 IF _CHG_VAR$(48,1)="Y" THEN PLANT_COUNTRY$=_CUR.PLANT_COUNTRY$ ! SSP 307210
16469 IF _CHG_VAR$(49,1)="Y" THEN IWR_XML_SENT$=_CUR.IWR_XML_SENT$
16990 RETURN 
17000 SEL_AP4:
17010 CALL "ZZWLKU;PARSE_VEND",VENDOR$,VEND_DIV$,VEND_CODE$; VENDOR$=VEND_DIV$+VEND_CODE$
17020 READ (_AP4,KEY=VENDOR$,ERR=*NEXT); GOTO NXT_FIND
17030 REFRESH_FLG=1,VENDOR1$="",VENDOR$="",VEND_NAME$="",VEND_NAME1$="",NEXT_ID=VENDOR.CTL; GOTO *RETURN
17040 NXT_FIND:
17050 READ DATA FROM VENDOR$ TO IOL=IOL(_AP4:KEY,ERR=*NEXT) ! load fields from external key
17060 REFRESH_FLG=1,VENDOR1$=VENDOR$,VEND_NAME1$=VEND_NAME$,%ML_VEND_CODE$=VENDOR$ ! For Query FMOPC
17065 DIM FS2[29]
17070 IOLIST FS2$,FS2{ALL}
17072 GOSUB NEW_FS2; GOTO 17087 ! SSP 200304
17075 READ (_FS2,KEY=FS2_KEY$,DOM=*RETURN)IOL=17070
17080 FS2$(94,10)=VENDOR$
17085 WRITE (_FS2,KEY=FS2_KEY$)IOL=17070
17087 GOSUB PLANT_CODE_DEFAULT
17090 REFRESH_FLG=1; RETURN 
17100 SEL_PLANT_CODE: REFRESH_FLG=1
17110 FIND (_FM0,KEY="P"+VENDOR$+PLANT_CODE$,DOM=*NEXT)FM0$; GOTO NXT_FM0
17120 PLANT_CODE$="",PLANT_CODE1$="",PLANT_NAME1$="",REFRESH_FLG=1,NEXT_ID=PLANT_CODE.CTL; GOTO *RETURN
17130 NXT_FM0:
17140 PLANT_NAME$=FM0$(16,35),PLANT_NAME1$=PLANT_NAME$,PLANT_CODE1$=PLANT_CODE$
17150 PLANT_ATTN$=FM0$(160,20),PLANT_PHONE$=FM0$(200,14)
17160 PLANT_ADDR_1$=FM0$(51,30),PLANT_ADDR_2$=FM0$(81,30)
17170 PLANT_CITY$=FM0$(111,16),PLANT_ST$=FM0$(127,2),PLANT_ZIP_CODE$=FM0$(129,9),PLANT_COUNTRY$=MID(FM0$,380,2) ! SSP 307210
17172 DIM FS2[29]
17175 READ (_FS2,KEY=FS2_KEY$,DOM=*RETURN)IOL=17070
17180 FS2$(90,4)=PLANT_CODE$
17185 WRITE (_FS2,KEY=FS2_KEY$)IOL=17070
17190 REFRESH_FLG=1
17195 RETURN 
17200 SEL_TERM_CODE:
17210 FIND (_AP2,KEY=TERMS_CODE$,DOM=*NEXT)AP2$; GOTO NXT_AP2
17220 TERMS_CODE$="",NEXT_ID=TERMS_CODE.CTL; GOTO *RETURN
17230 NXT_AP2:
17240 TERM_DESC$=AP2$(3,30),REFRESH_FLG=1
17250 RETURN 
17300 ! Set the Plant Code Default.
17310 PLANT_CODE_DEFAULT:
17320 PLANT_CODE$=DIM(4)
17330 PLANT_NAME$=VEND_NAME$; PLANT_ATTN$=VEND_CONT_PERSON$
17340 PLANT_ADDR_1$=VEND_ADDR_1$; PLANT_ADDR_2$=VEND_ADDR_2$
17350 PLANT_CITY$=VEND_CITY$; PLANT_ST$=VEND_ST$; PLANT_ZIP_CODE$=VEND_ZIP$ ! SSP#222783
17352 PLANT_COUNTRY$=VEND_COUNTRY$ ! SSP 307210
17390 REFRESH_FLG=1
17395 RETURN 
17500 PARSE_VAR:
17510 CALL "ZZWLKU;PARSE_PORDER",PO_NUMBER$,PO_DIV$,PO_NUM$
17520 CALL "ZZWLKU;PARSE_VEND",VENDOR$,VEND_DIV$,VEND_CODE$
17530 CALL "ZZWLKU;PARSE_ORD",ORDER$,ORDER_DIV$,ORDER_NUM$
17540 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$
17599 RETURN 
18000 SEL_ZIP_CODE:
18010 PLANT_ZIP_CODE$=PAD(PLANT_ZIP_CODE$,9," ")
18020 READ (_ZY1,KEY=PLANT_ZIP_CODE$,DOM=NO_ZY1,REC=ZIP$)
18030 PLANT_CITY$=ZIP.CITY$,PLANT_ST$=ZIP.TF_STATE$,REFRESH_FLG=1
18040 RETURN 
18050 NO_ZY1:
18060 PLANT_ZIP_CODE$="",NEXT_ID=PLANT_ZIP_CODE.CTL; RETURN 
20000 SET_FROM_SALES_ORDER_PREFIX:
20050 IF NOT(NUL(%SALES_ORDER_PREFIX$)) THEN PO_DIV$=MID(%SALES_ORDER_PREFIX$,1,2),PO_NUM$=MID(%SALES_ORDER_PREFIX$,3),PO_NUMBER$=MID(%SALES_ORDER_PREFIX$,1,%OP_DIV_LEN)+MID(%SALES_ORDER_PREFIX$,3,8)
20095 RETURN 
20099 ! *******************************************
21000 SEL_PLANT_PHONE:
21010 PLANT_PHONE$="",FM0$=""; FIND (_FM0,KEY="P"+VENDOR$+PLANT_CODE$,DOM=*NEXT)FM0$
21020 PLANT_PHONE$=MID(FM0$,200,14)
21025 IF STP(PLANT_COUNTRY$,2)="" THEN PLANT_COUNTRY$=MID(FM0$,380,2) ! SSP 307210
21030 RETURN 
22000 NEW_FS2:! ssp 200304
22010 READ (_FS2,KEY=PO_DIV$+PO_NUM$(1,LEN(PO_NUM$)-1),DOM=*NEXT)
22020 K_FS2$=KEY(_FS2,END=END_NEW_FS2); READ (_FS2)IOL=17070
22030 IF K_FS2$(1,8)<>PO_DIV$+PO_NUM$(1,6) THEN GOTO END_NEW_FS2
22040 IF FS2$(9,1)<>PO_NUM$(7) THEN GOTO 22020
22050 FS2$(94,10)=VENDOR$
22055 GOSUB NEW_VENDOR_COMM ! SSP 217566
22060 WRITE (_FS2,KEY=K_FS2$)IOL=17070
22065 GOSUB FIND_PLANT_QUOTE_2 ! SSP197645  jdf
22070 GOTO 22020
22100 END_NEW_FS2:
22110 RETURN 
22200 FIND_PLANT_QUOTE:! SSP197645 jdf created subroutine
22201 DIM FS2[29]
22202 READ (_FS2,KEY=PO_DIV$+PO_NUM$(1,LEN(PO_NUM$)-1),DOM=*NEXT)
22204 K_FS2$=KEY(_FS2,END=22340); READ (_FS2)IOL=17070
22206 IF K_FS2$(1,8)<>PO_DIV$+PO_NUM$(1,6) THEN GOTO 22340
22208 IF FS2$(9,1)<>PO_NUM$(7) THEN GOTO 22204
22210 DIM QSD[26]
22220 IOLIST QSD$,QSD{ALL}
22230 ! PLANT_QUOTE_NUM$="" - jdf 218918
22240 READ (_QSD,KEY="",DOM=*NEXT)
22250 Q1$=KEY(_QSD,END=22340)
22260 READ (_QSD,KEY=Q1$)IOL=22220
22270 FS2_K$=FS2$(221,8)+FS2$(15,3)
22280 IF FS2_K$=QSD$(1,11) THEN {
22290 IF VENDOR$=QSD$(12,10) THEN {
22300 IF STP(QSD$(22,10))<>"" THEN PLANT_QUOTE_NUM$=QSD$(22,10) ! SSP218918 jdf
22310  }
22320  }
22330 GOTO 22250
22335 GOTO 22204
22340 RETURN 
22400 FIND_PLANT_QUOTE_2:! SSP197645 jdf created subroutine
22410 DIM QSD[26]
22420 IOLIST QSD$,QSD{ALL}
22430 ! PLANT_QUOTE_NUM$="" - jdf 218918
22440 READ (_QSD,KEY="",DOM=*NEXT)
22445 Q1$=KEY(_QSD,END=22530)
22450 READ (_QSD,KEY=Q1$)IOL=22420
22460 FS2_K$=FS2$(221,8)+FS2$(15,3)
22470 IF FS2_K$=QSD$(1,11) THEN {
22480 IF VENDOR$=QSD$(12,10) THEN {
22490 IF STP(QSD$(22,10))<>"" THEN PLANT_QUOTE_NUM$=QSD$(22,10) ! SSP218918 jdf
22500  }
22510  }
22520 GOTO 22445
22530 RETURN 
22600 NEW_VENDOR_COMM:! SSP217566
22610 IF STP(%AR1_PARM$(75,1),2)="" OR %AR1_PARM$(76,1)="Y" THEN GOTO 22650 ! SSP 217566, SSP 222237 
22635 CC3$=""; CALL "AR2COM","VENDCOM",CC3$,A{ALL},0,0,0,FS2$; COMM_CODE$=CC3$ ! SSP 217566 
22638 IF %MSLC THEN CC3$="",CMKEY$="O"+ORDER$+CUST_DIV$+CUST_CODE$+FS2$(6,3); CALL "AR2MCM","VENDCOM",CC3$,A{ALL},0,0,0,CMKEY$,0,FS2$ ! SSP 217566 SSP 225300
22640 FS2$(128,5)=COMM_CODE$,%COMM_CODE$=COMM_CODE$ ! ssp 217566
22650 RETURN ! ssp 217566
50400 CHECK_TOPS:
50410 CALL "ZZ2PRP","OS",RESULT$,TF_DATE$; IF RESULT$="Y" THEN USING_TOPS=1 ELSE USING_TOPS=0
50412 _ZZP=HFN; OPEN (_ZZP)"ZZPARM"
50415 DIM OSP_PARMS$(512); IF USING_TOPS THEN FIND (_ZZP,KEY=%X3$(9,3)+"OSP",DOM=*NEXT)OSP_PARMS$
50420 CLOSE (_ZZP)
50430 IF MID(OSP_PARMS$,582,1)="Y" AND VEND_DIV$+VEND_CODE$=MID(OSP_PARMS$,58,10) THEN PRINT_THIS_PO$="N"; REFRESH_FLG=1; REM SSP 216413
50480 IF SEND_UNITED_DATA$="N" OR SEND_UNITED_DATA$=" " THEN IF MID(OSP_PARMS$,454,1)="Y" AND MID(OSP_PARMS$,58,10)=VEND_DIV$+VEND_CODE$ AND STP(TOPS_TRN$,3)="" THEN SEND_UNITED_DATA$="Y"; REFRESH_FLG=1 ! SSP208546 jdf
50485 IF VEND_DIV$+VEND_CODE$<>MID(OSP_PARMS$,58,10) THEN SEND_UNITED_DATA$=" "; REM CALL "*wingrp;Disable",TOPS.GRP$  ! SSP208546 jdf
50486 IF USING_TOPS=1 THEN CALL "*WINGRP;SHOW",TOPS.GRP$ ELSE CALL "*WINGRP;HIDE",TOPS.GRP$; REM SSP 202876"
50495 RETURN 
50499 ! *************************************
50500 TOPS_CHECK_CONFIRM:
50510 REM "IF SEND_UNITED_DATA$="Y" AND STP(TOPS_TRN$,3)<>"" THEN MSGBOX "",MSG("TOP_CFM"); NEXT_ID=SEND_UNITED_DATA.CTL
50511 IF SEND_UNITED_DATA$="Y" THEN TOPS_TRN$="     "; REFRESH_FLG=1
50595 RETURN 
50599 ! *************************************
56000 ! "200304-In Purchase Order Setup (POGMAA.OR) screen of Order Entry,  
56002 REM "200962-XML POs to TFP are being retransmitted multiple times       
56003 REM "202876-Shipping Panel FM2ODG should not show the Tops fields if    
56010 ! "204283-OP Purchase order screen when entering a new order with     
56012 REM "193783-189102;Added new field, options, to Vendor Setup, AP4 file  
56014 REM "197645-When using a RFQ Quote on order it is not pulling in the    
56015 ! "216247-Getting an error when going into purchase order setup and   
56016 REM "216413-Is there a way to have the PO's for United not print out th
56017 REM "222783-The supplier ZIP code which is printing on purchase orders  
56018 REM "217566-Commission substitution by vendor to allow house charges
56019 REM "222237-Modification to charge house charges by vendor.             
56020 ! "226284-Getting an error in Gui Order Entry when changing the       
56021 REM "228290-Program POGMAA.OR when select a PO code for the query in    
56022 REM "249656-Since the new release, we have to click the Purchase Order  
56023 REM "273626-Able to edit the Vendor Code for the PO in Order Entry.     
56024 REM "281954-They have 186 records in the PO1 file that are incorrect.   
56025 REM "284030-Vendor Trinity Press set for XML output. If order entered in
56026 REM "302575-In gui and chui, a validation needs to be put in place      
56027 REM "307210-International shipping address - add country code           
56028 REM "307397-DBD-255 - Impending Whse Receipt notification - 943 XML     
