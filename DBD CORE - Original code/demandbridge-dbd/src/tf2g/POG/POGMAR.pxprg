0010 REM "P/O receipt entry <POGMAR>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 08/09/23 - 11.538484 - crg - SSP# 307454
0037 REM "307454-DBD-368:Parameter to disable 10% overruns                   
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 X0$="POGMAR"
0100 SETERR 9000
0200 PRESET_VALUES:
0205 DIM M6[1]; CALL "ICGPRE",X3$,_ZZPARM,M6$,M6{ALL},"",0,"",0
0206 REM IF A[14]=0 THEN A[14]=A[4],A[16]=A[4] ! SSP228997 jdf
0207 REM IF A[17]=0 THEN A[17]=A[4]  ! SSP228997 jdf
0208 REM IF A[7]=0 THEN A[7]=A[1],A[10]=A[1],A[11]=A[1]  ! SSP228997 jdf
0210 PRECISION M6[1]; IF A[8]=0 AND MID(U$,21,1)<>"Y" THEN A[8]=A[0]
0220 PRECISION 2; GOSUB 8100; GOSUB 8165; GOSUB 8200 ! IF A$(10,1)<>"S" OR D1$(61,1)<>"Y" THEN PRINT @(36,15+V0),A[8]:M6$,
0230 DIM CNC$(8); REM "** Used for Carton Label Print #85931
0240 IF %P8$(277,1)<>" " THEN CNC$(1,3)=STR(A[3]:"##0"),CNC$(4,1)=%P8$(277,1)
0250 DIM CNTWHSE$(512)
0260 GB$=""; FIND (_ZZPARM,KEY=%C$+"G/B",DOM=*NEXT)GB$
0270 RECV_ADDITIONAL_QTY=0 ! SSP 239739
0300 SET_GUI_VARS:
0305 REFRESH_FLG=1
0306 IF A[14]=0 AND MID(%D1$,61,1)="Y" AND MID(A$,6,1)="Y" THEN A[14]=0,A[16]=0; GOTO 0308 ! SSP 240415 
0307 IF A[14]=0 AND MID(%D1$,61,1)="Y" THEN A[14]=A[4]-A[13]; IF A[14]<0 THEN A[14]=0 ! IF A[14]=0 AND MID(%D1$,61,1)="Y" THEN A[14]=A[4]-A[13]; IF A[14]<0 THEN A[14]=0  ! SSP224634 jdf  ! SSP233743 jdf
0308 IF RECV_ADDITIONAL_QTY THEN GOTO *NEXT ELSE IF (A[11]-A[6]<0) AND A[11]>0 THEN A[7]=0,A[14]=0 ! SSP237218 jdf SSP 239739
0310 RECV_NOW_COST=A[8],QTY_RECV_NOW=A[7],RECV_NOW_EXT=A[14]
0312 REM IF RECV_NOW_EXT=0 THEN RECV_NOW_EXT=A[4],A[14]=A[4] ! SSP228997 jdf
0315 ! IF R0$<>"r" THEN IF A[16]=0 THEN A[16]=A[4]-A[15] ! SSP# 191817 This line was Rem out because it reset the value of inv_now_cost_ext when the cost is zeroed out.
0318 REM IF NUL(AP_INV_NUM$) THEN INVOICE_NOW=0,INV_NOW_EXT=0,INV_NOW_COST=0; GOTO 0330 ! SSP 229720 ! SSP228997 jdf
0319 REM IF A[16]=0 THEN A[16]=A[14] ! SSP224634 jdf SSP230512 jdf
0320 INVOICE_NOW=A[10],INV_NOW_EXT=A[16],INV_NOW_COST=A[17]
0322 IF NUL(AP_INV_NUM$) THEN INV_NOW_EXT$=".00",INV_NOW_EXT=0,INV_NOW_COST$="",INV_NOW_COST=0,A[16]=0,A[17]=0; DISABLE CONTROL INV_NOW_COST.CTL ELSE ENABLE CONTROL INV_NOW_COST.CTL ! SSP236973 jdf
0325 REM IF INVO_NOW_EXT=0 THEN INV_NOW_EXT=A(4),A[17]=A[4],INV_NOW_EXT$=STR(A(4))  ! SSP228997 jdf  
0330 QTY_BO=A[12],CTN_WT=A[18],COMBO_QTY=A[19],CTN_PACK=A[5]
0350 RECV_NOW_COST$=STR(RECV_NOW_COST),QTY_RECV_NOW$=STR(QTY_RECV_NOW/Q0),RECV_NOW_EXT$=STR(RECV_NOW_EXT)
0355 IF ID$="RECV_NOW_COST" THEN CALL "FM2EXT",_ZZPARM,0,A$(77,4),A[2],QTY_RECV_NOW,RECV_NOW_COST,O0,M6[1]; RECV_NOW_EXT=O0,A[14]=RECV_NOW_EXT,RECV_NOW_EXT$=STR(RECV_NOW_EXT); REFRESH_FLG=1 ! IF NOT(NUL(AP_INV_NUM$)) THEN INV_NOW_EXT=O0,A[16]=INV_NOW_EXT,INV_NOW_EXT$=STR(INV_NOW_EXT),REFRESH_FLG=1 ! SSP237316 jdf SSP 239676
0360 INVOICE_NOW$=STR(INVOICE_NOW/Q0),INV_NOW_EXT$=STR(INV_NOW_EXT),INV_NOW_COST$=STR(INV_NOW_COST)
0361 IF ID$="INV_NOW_COST" THEN CALL "FM2EXT",_ZZPARM,0,A$(77,4),A[2],INVOICE_NOW,INV_NOW_COST,O0,M6[1]; INV_NOW_EXT=O0,A[16]=INV_NOW_EXT,INV_NOW_EXT$=STR(INV_NOW_EXT),REFRESH_FLG=1 ! SSP237316 jdf
0362 IF U$(20,1)="Y" THEN Q0=U[1] ELSE Q0=A[2] ! SSP226608 jdf
0364 IF Q0=0 THEN Q0=1 ! SSP226608 jdf
0370 QTY_BO$=STR(QTY_BO/Q0),LINE_COMPLETE$=A$(6,1); IF LINE_COMPLETE$=" " THEN LINE_COMPLETE$="N" ! SSP226608 jdf
0380 CTN_WT$=STR(CTN_WT),COMBO_QTY$=STR(COMBO_QTY),CTN_PACK$=STR(CTN_PACK),JOB_NUM$=A$(119,12),JOB_DATE$=A$(131,6),ENDING_NUM$=A$(137,9)
0390 PRESET_VALUES_END:RETURN 
0395 ! 
2000 REM "DATA SEQ
2020 X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2024 IF C0=4 AND X0<39 AND (A$(81,1)="Y" OR A$(10,1)="C") THEN GOSUB 7000; X0=39,C0=1
2025 IF INT(C0)=3 THEN GOSUB 7300 ELSE IF C0>3 OR X0<0 THEN X0=999; GOTO 9900
2030 IF X0>=39 AND A$(10,1)="S" THEN C0=4; GOTO 2025
2033 IF X0>=39 AND A$(10,1)="S" THEN C0=4; GOTO 2025
2035 IF X0<39 AND R2$="*" THEN GOSUB 7050
2036 IF X0>=39 AND R2$<>"*" THEN GOSUB 7000
2040 IF X0<=24 THEN GOTO 9900 ELSE ON X0-25 GOTO 2100,2150,2250,2200,2300,2350,2400,2450,2550,2500,2600,2950,2700,2650,2750,2800,2850,2900,3000,3050,3100,9900
2100 REM "Received prev
2105 GOTO 2020
2106 DIM Q[1]; IF U$(20,1)="Y" THEN Q[1]=A[6]/U[1] ELSE Q[1]=A[6]/A[2]
2110 CALL "ZZENTR","NX.",Q{ALL},A$,X4$,X3$,21,14+V0,1,822,C0,M1$,"{3"+X$,"","PO2MAR02","","",""
2115 IF C0<0 THEN GOTO 2140
2120 IF U$(20,1)="Y" THEN A[6]=Q[1]*U[1] ELSE A[6]=Q[1]*A[2]
2140 GOTO 2020
2150 REM "Received prev exten
2155 GOTO 2020
2160 CALL "ZZENTR","NX.",A{ALL},A$,X4$,X3$,50,14+V0,6,621,C0,M0$,"{3"+X$,"","PO2MAR04","","",""
2190 GOTO 2020
2200 RECV_NOW_COST_ENTRY:
2202 ! IF S6$(80,1)="Y" AND A[8]<>0 THEN GOTO 2240; REM " SSP# 142717
2203 ! IF GB$<>"" THEN CALL "ZZPROM","10",X3$,TMP,"Do you wish to change the cost?","","",0; IF TMP>0 THEN GOTO 2240
2204 ! IF MID(U$,21,1)="Y" OR (A$(10,1)="S" AND D1$(61,1)="Y") THEN GOTO 2020
2205 ! IF A[8]=0 THEN A[8]=A[0]
2206 ! IF S6$(69,1)="Y" THEN GOTO 2020; REM "WO113448
2207 REM GOSUB 8100; GOSUB 8165; GOSUB 8200
2208 ! X$="To compute unit cost, enter extension and press F2" !SSP#150085 
2209 ! HOLD_COST=A[8]; REM " SSP#142717
2210 ! PRECISION M6[1]; CALL "ZZENTR","NFX",A{ALL},A$,X4$,X3$,36,15+V0,8,M6[0],C0,M6$,"{3"+X$,"","PO2MAR06","","",""; PRECISION 2
2211 ! IF POS(S6$(80,1)="W")>0 AND A[8]<>HOLD_COST THEN CALL "ZZPROM",".4",X3$,0,"WARNING - You are about to change the vendor cost!","","",0
2215 A[8]=NUM(RECV_NOW_COST$)
2220 ! IF A[7]<>0 THEN PRECISION M6[1]; A[8]=A[8]*U[0]/A[7]; PRECISION 2 ! PRINT @(36,15+V0),A[8]:M6$,
2225 U0=14,U1=7,U2=8; GOSUB 8003; GOSUB 8200 ! PRINT @(50,15+V0),A[14]:M0$,
2230 HOLD_COST=0; REM " SSP# 142717
2235 GOSUB 7800
2237 GOSUB SET_GUI_VARS
2240 RECV_NOW_COST_ENTRY_END:RETURN 
2245 ! 
2250 QTY_RECV_NOW_ENTRY:
2255 RECV_ADDITIONAL_QTY=0 ! SSP 239739
2262 IF NUM(QTY_RECV_NOW$)<>0 THEN LOT_INV=0; POGMAR_FRM_QTY=1; PERFORM "POGMAB.1;CHECK_FOR_LOT_INV"; POGMAR_FRM_QTY=0; IF LOT_INV THEN QTY_RECV_NOW=0,QTY_RECV_NOW$=STR(QTY_RECV_NOW); NEXT_ID=INVOICE_NOW.CTL; REFRESH_FLG=1; LOT_INV=0 ! ,RECV_NOW_EXT=0,RECV_NOW_EXT$=STR(RECV_NOW_EXT); A[7]=0,A[8]=0,A[14]=0; NEXT_ID=INVOICE_NOW.CTL; REFRESH_FLG=1; !SSP 211614
2265 ! IF C0<0 THEN GOTO 2280
2267 ! F NUM(QTY_RECV_NOW$)=0 THEN GOSUB CHECK_FOR_LOTS; IF RESET_QTY THEN QTY_RECV_NOW$=STR(QTY_RECV_NOW); NEXT_ID=QTY_RECV_NOW.CTL; REFRESH_FLG=1; RETURN ! ssp# 170275
2270 DIM Q[1]; Q[1]=NUM(QTY_RECV_NOW$); GOSUB 8160
2271 IF FPT(A(7))<>0 AND A$(10,1)<>"S" THEN A(7)=0,QTY_RECV_NOW=0,QTY_RECV_NOW$=STR(QTY_RECV_NOW); NEXT_ID=QTY_RECV_NOW.CTL; REFRESH_FLG=1; RETURN ! SSP#265146!SSP#270209
2272 IF A[7]<A[11]-A[6] THEN A[12]=A[11]-A[6]-A[7] ELSE A[12]=0
2275 GOSUB 8200
2285 GOSUB 7800
2287 GOSUB SET_GUI_VARS
2288 SHOW CONTROL WZ_NEXT.CTL
2289 REM IF MID(U$,21,1)="Y" THEN CALL "*WINGRP;DISABLE",COST.GRP$; CALL "*WINGRP;ENABLE",FLDS.GRP$; CALL "*WINGRP;UNLOCK",FLDS.GRP$; NEXT_ID=RECV_NOW_EXT.CTL ! SSP228997 jdf
2290 QTY_RECV_NOW_ENTRY_END:RETURN 
2295 ! 
2300 REM "Received now extension
2302 IF MID(U$,21,1)<>"Y" AND A$(10,1)+D1$(61,1)<>"SY" THEN GOTO 2020
2303 IF GB$<>"" THEN CALL "ZZPROM","10",X3$,TMP,"Do you wish to change the cost?","","",0; IF TMP>0 THEN GOTO 2340
2306 IF A[14]=0 THEN A[14]=A[4]-A[13]; IF A[14]<0 THEN A[14]=0
2307 IF R0$<>"r" THEN IF A[16]=0 THEN A[16]=A[4]-A[15]; PRINT @(50,17+V0),A[16]:M0$,
2308 GOSUB 7870
2309 IF (A[11]-A[6]<0) AND A[11]>0 THEN A[14]=0 ! SSP237218 jdf
2310 CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,50,15+V0,14,621,C0,M0$,"{3"+X$,"","PO2MAR10","","",""
2330 IF C0>0 THEN GOSUB 7850
2340 GOTO 2020
2350 QTY_BO_ENTRY:
2352 REM IF U$(21,1)="Y" THEN CALL "ZZPROM",".4",X3$,0,"Cannot backorder a lot unit of measure!","","",0; LET A(12)=0; GOTO 02020
2355 ! IF A$(10,1)="S" THEN IF D1$(61,1)="Y" THEN GOTO 2020
2356 ! IF A[12]=0 THEN A[12]=A[11]-A[6]-A[7]; IF A[12]<0 OR POS(A$(81,1)="YC")<>0 OR A$(10,1)="C" THEN A[12]=0
2357 ! DIM Q[1]; IF U$(20,1)="Y" THEN Q[1]=A[12]/U[1] ELSE Q[1]=A[12]/A[2]
2360 ! CALL "ZZENTR","NX.",Q{ALL},A$,X4$,X3$,65,15+V0,1,822,C0,M1$,"{3"+X$,"","PO2MAR12","","",""
2365 ! IF C0<0 THEN GOTO 2380
2367 DIM Q[1]; Q[1]=NUM(QTY_BO$)
2370 IF U$(20,1)="Y" THEN A[12]=Q[1]*U[1] ELSE A[12]=Q[1]*A[2]
2380 GOSUB 7800
2385 GOSUB SET_GUI_VARS
2390 QTY_BO_ENTRY_END:RETURN 
2395 ! 
2400 REM "Invoiced prev
2405 GOTO 2020
2406 DIM Q[1]; IF U$(20,1)="Y" THEN Q[1]=A[9]/U[1] ELSE Q[1]=A[9]/A[2]
2410 CALL "ZZENTR","NX.",Q{ALL},A$,X4$,X3$,21,16+V0,1,822,C0,M1$,"{3"+X$,"","PO2MAR14","","",""
2415 IF C0<0 THEN GOTO 2440
2420 IF U$(20,1)="Y" THEN A[9]=Q[1]*U[1] ELSE A[9]=Q[1]*A[2]
2440 GOTO 2020
2450 REM "Invoice prev extension
2455 GOTO 2020
2460 CALL "ZZENTR","NX.",A{ALL},A$,X4$,X3$,50,16+V0,6,621,C0,M0$,"{3"+X$,"","PO2MAR16","","",""
2490 GOTO 2020
2500 INV_NOW_COST_ENTRY:
2502 ! IF S6$(80,1)="Y" AND A[17]<>0 THEN GOTO 2240; REM " SSP# 142717
2503 ! IF GB$<>"" THEN CALL "ZZPROM","10",X3$,TMP,"Do you wish to change the cost?","","",0; IF TMP>0 THEN GOTO 2540
2504 ! IF MID(U$,21,1)="Y" OR (MID(A$,10,1)="S" AND MID(D1$,61,1)="Y") THEN GOTO 2020
2505 ! IF R0$<>"R" THEN GOTO 2020
2509 ! HOLD_COST=A[17]; REM " SSP#142717;REM " SSP# 142171
2510 ! PRECISION M6[1]; CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,36,17+V0,17,M6[0],C0,M6$,"{3"+X$,"","PO2MAR18","","",""; PRECISION 2
2511 ! IF POS(S6$(80,1)="W")>0 AND A[17]<>HOLD_COST THEN CALL "ZZPROM",".4",X3$,0,"WARNING - You are about to change the vendor cost!","","",0; REM " SSP# 142717
2512 HOLD_COST=0; REM " SSP# 142717
2513 A[17]=NUM(INV_NOW_COST$)
2515 U0=16,U1=10,U2=17; GOSUB 8003 ! PRINT @(50,17+V0),A[16]:M0$,
2530 GOSUB 7800
2535 GOSUB SET_GUI_VARS
2540 INV_NOW_COST_ENTRY_END:RETURN 
2545 ! 
2550 INVOICE_NOW_ENTRY:
2554 ! IF A$(10,1)="S" THEN IF D1$(61,1)="Y" THEN GOTO 2020
2555 ! IF R0$<>"R" THEN GOTO 2020
2556 ! DIM Q[1]; IF U$(20,1)="Y" THEN Q[1]=A[10]/U[1] ELSE Q[1]=A[10]/A[2]
2560 ! CALL "ZZENTR","NX.",Q{ALL},A$,X4$,X3$,21,17+V0,1,822,C0,M1$,"{3"+X$,"","PO2MAR20","","",""
2565 ! IF C0<0 THEN GOTO 2590
2567 DIM Q[1]; Q[1]=NUM(INVOICE_NOW$)
2570 IF U$(20,1)="Y" THEN A[10]=Q[1]*U[1] ELSE A[10]=Q[1]*A[2]
2572 IF MID(U$,21,1)="Y" THEN GOTO 2580
2575 U0=16,U1=10,U2=17; GOSUB 8000 ! PRINT @(50,17+V0),A[16]:M0$,
2580 GOSUB 7800
2585 GOSUB SET_GUI_VARS
2590 INVOICE_NOW_ENTRY_END:RETURN 
2595 ! 
2600 REM "Invoice now extension
2602 IF R0$<>"R" THEN GOTO 2020
2605 IF MID(U$,21,1)<>"Y" AND A$(10,1)+D1$(61,1)<>"SY" THEN GOTO 2020
2606 IF GB$<>"" THEN CALL "ZZPROM","10",X3$,TMP,"Do you wish to change the cost?","","",0; IF TMP>0 THEN GOTO 2640
2607 IF A[16]=0 THEN A[16]=A[14]
2610 CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,50,17+V0,16,621,C0,M0$,"{3"+X$,"","PO2MAR22","","",""
2630 GOSUB 7870
2640 GOTO 2020
2650 LINE_COMPLETE_ENTRY:
2656 ! IF R0$="r" THEN A$(6,1)="N"; PRINT @(77,17+V0),"N",
2657 ! IF S6$(69,1)="Y" THEN GOTO 2661; REM "WO113448
2660 ! CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,77,17+V0,6,1,C0,"","{3"+X$,"","PO2MAR22","","",""
2680 ! IF A$(10,1)="M" THEN X0=90
2682 A$(6,1)=LINE_COMPLETE.CTL'VALUE$
2685 GOSUB SET_GUI_VARS
2687 NEXT_ID=WZ_NEXT.CTL
2690 LINE_COMPLETE_ENTRY_END:RETURN 
2695 ! 
2700 CTN_WT_ENTRY:
2710 ! CALL "ZZENTR","NX.",A{ALL},A$,X4$,X3$,70,16+V0,18,421,C0,M4$,"{3"+X$,"","PO2MAR28","","",""
2730 A[18]=NUM(CTN_WT$)
2735 GOSUB SET_GUI_VARS
2740 CTN_WT_ENTRY_END:RETURN 
2745 ! 
2750 JOB_NUM_ENTRY:
2760 ! CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,33,14+V0,119,12,C0,"","{3"+X$,"","PO2MAR30","","",""
2780 A$(119,12)=JOB_NUM$
2785 GOSUB SET_GUI_VARS
2790 JOB_NUM_ENTRY_END:RETURN 
2795 ! 
2800 JOB_DATE_ENTRY:
2810 ! CALL "ZZENTR","D",A{ALL},A$,X4$,X3$,33,15+V0,131,6,C0,"","{3"+X$,"","PO2MAR32","","",""
2830 A$(131,6)=JOB_DATE$
2835 GOSUB SET_GUI_VARS
2840 JOB_DATE_ENTRY_END:RETURN 
2845 ! 
2850 ENDING_NUM_ENTRY:
2855 IF H$(104,1)<>"Y" THEN GOTO ENDING_NUM_ENTRY_END ! SSP#229686
2860 ! CALL "ZZENTR","RZ",A{ALL},A$,X4$,X3$,33,16+V0,137,9,C0,"","{3"+X$,"","PO2MAR34","","",""
2865 A$(137,9)=ENDING_NUM$
2866 IF POS($01$=_EOM$)<>0 THEN NEXT_ID=ENDING_NUM.CTL; GOTO ENDING_NUM_ENTRY_END ! SSP#229686
2870 IF POS(" "<>A$(137,9))=0 THEN MSGBOX "WARNING - No ending number was entered!","Attention","!"
2880 IF POS(" "<>A$(68,9))>0 AND A$(137,9)<A$(68,9) THEN MSGBOX "CAUTION - Ending No is less than Starting No: "+A$(68,9),"Attention","!"
2885 GOSUB SET_GUI_VARS
2890 ENDING_NUM_ENTRY_END:RETURN 
2895 ! 
2900 COMBO_QTY_ENTRY:
2906 ! DIM Q[1]; IF U$(20,1)="Y" THEN Q[1]=A[19]/U[1] ELSE Q[1]=A[19]/A[2]
2910 ! CALL "ZZENTR","NX.",Q{ALL},A$,X4$,X3$,33,17+V0,1,822,C0,M1$,"{3"+X$,"","PO2MAR36","","",""
2915 ! IF C0<0 THEN GOTO 2940
2920 ! IF U$(20,1)="Y" THEN A[19]=Q[1]*U[1] ELSE A[19]=Q[1]*A[2]
2930 A[19]=NUM(COMBO_QTY$)
2935 GOSUB SET_GUI_VARS
2937 NEXT_ID=WZ_NEXT.CTL
2940 COMBO_QTY_ENTRY_END:RETURN 
2945 ! 
2950 CTN_PACK_ENTRY:
2960 ! CALL "ZZENTR","NX",A{ALL},A$,X4$,X3$,63,13+V0,5,501,C0,M2$,"{3"+X$,"","PO2MAR38","","",""
2980 A[5]=NUM(CTN_PACK$)
2985 GOSUB SET_GUI_VARS
2990 CTN_PACK_ENTRY_END:RETURN 
2995 ! 
3000 REM "# Whse Lables to print (carton labels)
3010 IF %P8$(277,1)=" " THEN GOTO 2020
3015 X$="Enter Number of carton labels to print. Zero will omit printing."
3020 CALL "ZZENTR","S",A{ALL},CNC$,X4$,X3$,58,14+V0,1,3,C0,"","{3"+X$,"","","","",""
3030 CNC$(1,3)=STR(NUM(CNC$(1,3),ERR=3000):"##0")
3035 PRINT @(58,14+V0),CNC$(1,3),
3040 GOTO 2020
3050 REM "Flexible Carton Label Format
3060 IF %P8$(277,1)=" " OR NUM(CNC$(1,3))=0 THEN GOTO 2020
3070 CALL "ZZENTR","S",A{ALL},CNC$,X4$,X3$,58,15+V0,4,1,C0,"","{3"+X$,"","","","",""
3080 IF NUM(CNC$(1,3))<>0 THEN FIND (Z[13],KEY="FORMATCL"+CNC$(4,1),DOM=3050)
3082 CNC0$=""; FIND (Z[16],KEY=A$(82,8),DOM=3083); CNC0$="O"
3090 GOTO 2020
3100 REM "Whse for carton labels
3105 IF NUM(CNC$(1,3))=0 THEN GOTO 2020
3110 CALL "ZZENTR","ZX",A{ALL},CNC$,X4$,X3$,58,16+V0,5,4,C0,"","{2"+X$,"D          ","","FM0D","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 3110,3111
3120 DIM CTNWHSE$(512); READ (Z[3],KEY="D          "+CNC$(5,4),DOM=3100)CNTWHSE$
3130 PRINT @(64,16+V0),CNTWHSE$(16,16),
3140 GOTO 2020
6000 REM "BACKGROUND
6010 CALL "PO2MA1",X3$,X4$,6000,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
6190 RETURN 
6200 REM "DISPLAY DATA
6205 IF A$(10,1)="S" THEN IF D1$(61,1)="Y" THEN R0$=R0$+"*"
6210 CALL "PO2MA1",X3$,X4$,6210,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
6265 IF A$(90,1)<>" " THEN PRINT @(8,18+V0),'SB',"Fixed price?",'SF',@(21,18+V0),L$(4,1),
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 IF A$(10,1)="S" THEN IF D1$(61,1)="Y" THEN R0$=R0$+"*"
6420 CALL "PO2MA1",X3$,X4$,6400,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6460 CALL "PO2MA1",X3$,X4$,6450,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
6462 GOSUB 7600
6464 PRINT @(10,4+V0),A$(7+K9,3),
6490 RETURN 
7000 REM "Background 2nd screen
7005 PRINT @(0,14+V0),'CE','SB',
7010 PRINT @(21,14+V0),"Job number:",@(23,15+V0),"Job date:",@(18,16+V0),"Ending number:",@(11,17+V0),"Combination quantity:",
7020 PRINT 'SF',
7025 GOSUB 7200
7030 R2$="*"
7040 IF %P8$(277,1)<>" " THEN GOSUB 7100
7045 RETURN 
7050 REM "Return to screen 1
7055 PRINT @(0,14+V0),'CE','SB',
7060 R2$=""
7065 CALL "PO2MA1",X3$,X4$,6085,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
7080 CALL "PO2MA1",X3$,X4$,6240,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
7085 IF A$(90,1)<>" " AND LEN(L$)>4 THEN PRINT @(8,18+V0),'SB',"Fixed price?",'SF',@(21,18+V0),L$(4,1),
7090 RETURN 
7100 REM "Screen for Carton Labels
7110 PRINT @(50,14+V0),"Labels: ",CNC$(1,3),@(50,15+V0),"Format: ",CNC$(4,1),@(52,16+V0),"Whse: ",CNC$(5,4),@(64,16+V0),CNTWHSE$(16,16),
7140 RETURN 
7200 REM "Display 2nd screen
7210 PRINT @(33,14+V0),A$(119,12),
7215 CALL "ZZDISP","D",A$(131,6),"",X3$,"","",33,15+V0,X4$
7220 PRINT @(33,16+V0),A$(137,9),@(33,17+V0),A[19]:M1$,
7290 RETURN 
7300 REM 
7310 ON FPT(C0)*10 GOTO 7390,7325,7330,7390
7325 IF V8$="" THEN X0=X0+4; GOTO 7390 ELSE X0=NUM(V8$(POS(STR(X0:"00")<=V8$,2),2)); GOTO 7390
7330 IF V8$="" THEN X0=X0-6; GOTO 7335 ELSE X0=POS(STR(X0-1:"00")<=V8$,2)-2; IF X0<0 THEN X0=0; GOTO 7390 ELSE X0=NUM(V8$(X0,2)); GOTO 7390
7335 IF X0<0 THEN X0=0; GOTO 7390
7390 C0=3; RETURN 
7800 REM "Set complete if needed
7810 IF MID(B$,361,1)="Y" AND A[7]>=A[1] THEN A$(6,1)="Y"; GOTO 7830; REM SSP 203803 SSP 226154 JDF
7820 IF A[10]+A[9]>=A[7]+A[6] AND A[12]=0 THEN A$(6,1)="Y" ELSE A$(6,1)="N"
7830 ! PRINT @(77,17+V0),A$(6,1),
7840 RETURN 
7850 REM "Set complete if extensions entered
7860 IF R0$<>"r" THEN A[16]=A[14]; PRINT @(50,17+V0),A[16]:M0$,
7870 IF A[16]<>0 THEN A$(6,1)="Y" ELSE A$(6,1)="N"
7880 PRINT @(77,17+V0),A$(6,1),
7890 RETURN 
8000 REM "Figure extension U0=EXT, U1=QTY, U2=COST
8001 REM IF MID(U$,21,1)="Y" THEN Q0=1; RETURN ! SSP228997 jdf ! SSP224634 jdf
8002 IF A$(10,1)="C" THEN IF POS(" "<>H$(291,20))<>0 THEN GOSUB 8500
8003 IF U$(20,1)="Y" THEN Q0=U[1] ELSE Q0=A[2]
8004 IF Q0=0 THEN Q0=1
8010 IF MID(U$,21,1)<>"Y" THEN A[U0]=A[U1]/Q0*A[U2]; REM ELSE A[U0]=0 ! SSP234296 jdf SSP 240392 ! SSP250206 jdf!SSP#253051
8020 IF U[0]<>0 THEN A[U0]=A[U0]/U[0]
8045 RETURN 
8100 REM "Set A(7) if necc.
8105 IF A$(10,1)="S" THEN IF D1$(61,1)="Y" THEN GOTO 8140
8110 IF A[7]<>0 THEN GOTO 8140
8115 A[7]=A[11]-A[6]; IF A[7]<0 THEN A[7]=A[7] ELSE IF POS(A$(81,1)="YC")<>0 OR A$(10,1)="C" AND MID(U$,21,1)<>"Y" AND MID(%P8$,347,1)<>"Y" THEN A[7]=A[7]*1.1; REM SSP 207052;REM"SSP#207730,SSP#227721,SSP#228684!SSP#232522,SSP#232654  ! SSP228994 jdf !SSP#247892 !SSP#251072!SSP#253522!SSP#255305!SSP#259550!SSP#260618!SSP#261121!SSP#262596!SSP#263483SSP#266738!SSP#271055!#277550!SSP#289303!SSP#291012!SSP#294807!SSP#296209!SSP#299690!SSP#304005!SSP#304409!SSP#304224!SSP#307155!SSP#307175!SSP#307254!SSP#307268!SSP#307299 DBSPT-98081!SSP#307346 DBSPT-115953 DBD-269-SSP307405!SSP#307407 DBSPT-143112 DBSPT-147775 SSP#307418 SSP307430-DBD-333-DBSPT-149880!SSP#307449 DBSPT-160876,DBD-368
8120 U0=14,U1=7,U2=8; GOSUB 8000 ! PRINT @(50,15+V0),A[14]:M0$,; IF A$(10,1)<>"S" OR D1$(61,1)<>"Y" THEN PRINT @(21,15+V0),A[7]/Q0:M1$,
8140 RETURN 
8150 REM "Set invoiced
8155 IF A$(10,1)="S" THEN IF D1$(61,1)="Y" THEN GOTO 8190
8160 IF MID(U$,20,1)="Y" THEN A[7]=Q[1]*U[1] ELSE A[7]=Q[1]*A[2]
8165 IF A$(10,1)="S" AND D1$(61,1)="Y" THEN GOTO 8190 ELSE U0=14,U1=7,U2=8; GOSUB 8000 ! PRINT @(50,15+V0),A[14]:M0$,
8170 IF R0$="r" THEN GOTO 8175 ELSE A[10]=A[7]+A[6]-A[9],U0=16,U1=10,U2=17; GOSUB 8000; IF A[10]<0 THEN A[10]=0 ! SSP 211614 SSP241384
8175 IF (A[11]-A[6]<0) AND A[11]>0 THEN IF NUM(QTY_RECV_NOW$)<>0 THEN RECV_ADDITIONAL_QTY=1 ! SSP 239739 ! SSP237218 jdf !SSP#272204
8180 ! PRINT @(21,17+V0),A[10]/Q0:M1$,
8190 RETURN 
8200 REM "Invoice now cost
8205 IF A$(10,1)="S" AND D1$(61,1)="Y" THEN GOTO 8240
8210 IF R0$<>"r" THEN A[17]=A[8],U0=16,U1=10,U2=17; GOSUB 8250; GOSUB 8000 ! PRINT @(50,17+V0),A[16]:M0$,; IF A$(10,1)<>"S" OR D1$(61,1)<>"Y" THEN PRINT @(36,17+V0),A[17]:M6$,
8240 RETURN 
8250 REM " Convert Std Cost U/M to Receiving U/M
8255 IF %P9$(64,1)<>"Y" OR A[22]=0 THEN GOTO 8290
8260 A[17]=A[22]*A[2]/A[23]
8290 RETURN 
8500 REM "Feature Driven Pricing
8505 IF POS(" "<>H$(301,10))=0 THEN O0=A[U2]; GOTO 8525
8510 O0$=H$(82,10)+H$(291,20)
8520 CALL "FM2OB9",X3$,O0$,A$(77,4),A[2],A$(77,4),A[2],A[U1],O0,O1,M6[1]
8525 A[U2]=O0
8545 RETURN 
8550 REM 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 REM 
9710 GOTO 9900
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9910 IF %P8$(277,1)<>" " AND CNC$(1,4)<>"    " AND CNC$(5,4)<>"    " AND NUM(CNC$(1,3))<>0 THEN CALL "PO2PCC",X3$,X4$,CNC$,A1$,CNC0$
9920 IF R2$="*" THEN GOSUB 7050
9940 SETESC 9350
9945 L0=1
9950 RUN "PO2MAB"
9999 END 
10000 CHECK_FOR_LOTS:! have gone from some qty recv'd to 0 qty recv'd, if lots have been entered then ask to remove them or reset qty, set RESET_QTY if reset chosen
10005 RESET_QTY=0
10015 READ (Z[38],KEY=A1$,DOM=*NEXT)
10020 KEY_17$=KEY(Z[38],END=10090); IF MID(KEY_17$,1,12)<>A1$ THEN GOTO 10090
10024 ! if here then we found at least one record, so ask question
10025 MSGBOX MSG("POGMAG_06"),MSG("MB_ATTN"),"?,YESNO",_ANS$
10030 IF _ANS$="NO" THEN RESET_QTY=1; GOTO 10090
10035 ! if here, then remove the records, KEY_17$ is already pointing to the first one, see lien 10020
10050 RM_17_LOOP:REMOVE (Z[38],KEY=KEY_17$,DOM=*NEXT)
10055 KEY_17$=KEY(Z[38],END=*NEXT); IF MID(KEY_17$,1,12)=A1$ THEN GOTO RM_17_LOOP
10095 RETURN 
10099 ! *****************************************************
56000 REM "203803-PO/P1 orders closing if received in full  
56001 ! "224634-I was just informed that we can not use LOT under GUI but   
56002 REM "233743-Issue with PO receiving when one line is completely back    
56003 REM "234296-PO receiving issues for Custom items and Special charges    
56004 REM "236973-Printing Open Purchase Order Report pending A/P and two     
56005 REM "237316-Special charges not extended properly in PO receiving.      
56006 REM "211614-It seems that lots aren't getting setup in PO receiving     
56008 REM "239739-POGMAG - PO receiving will not allow you to receive addt'l  
56010 REM "241384 Does not allow second receiving on overruns
56011 REM "253051-Issue in PO receiving.  When trying to delete the line ext  
56012 REM "261121-Turn off 10% Overrun. Company 092.                          
56013 REM "265146-Why in PO receiving can you enter a qty of 20.75, but lot   
56014 REM "270209-Idea Bank:  Allow fractions in PO Receiving for Special     
56016 REM "271055-Need companies 497 and 575 10% Overrun turned off like was  
56017 REM "272204-GUI - Negative receiving - can't do it - sets the qty to    
56018 REM "291012-If possible, would like the overage default to be 0% and not
56019 REM "294807-PO Receiving Auto Overage - is there a way to turn this off?
56020 REM "296209-PO Receiving question with 10% increase.                    
56021 REM "304005-Company 632. During PO Receiving, it is automatically        calculating overruns
56022 REM "304409-Need to remove the 10% overrun in Purchase Order            
56023 REM "307254-Turn off overruns DBSPT-81846
56025 REM "307268-Disable overruns DBSPT-85051                                
56026 REM "307299-DBSPT-98081 Disable overruns                                
56027 REM "307346-DBDSPT-115853 add company 637 to list to turn off overruns  
56028 REM "307405-DBD-269; Turn off overruns for company 639                  
56029 REM "307407-DBSPT-143112 Turn off 10% overruns                                       
56030 REM "307418-DBSPT-147775 turn off overruns for company 020 and 617      
56031 REM "307425-DBSPT-150085 updating ess F2 to the AY7 file                
56032 REM "307430-DBD-333;Add 101 to some of 288's company specfic code       
56033 REM "307441-DBSPT-158584 Disable the 10% overruns                       
56034 REM "307449-DBSPT-160876 Turn off automatic overrus                     
