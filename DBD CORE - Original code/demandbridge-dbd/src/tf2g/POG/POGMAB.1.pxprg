0010 REM "Purchase Order Entry - Line entry <>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 10/21/22 - 11.44219 - tma - SSP# 307425
0037 REM "307425-DBSPT-150085 updating ess F2 to the AY7 file                
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0100 ! 
0120 DIM L[29]
0140 M0$="###,###.00-",M1$="##,###,###.00-",M2$="#####0-",M4$="#,###.00-"
0160 DEF FNS$(Z9$)=Z9$(1,POS("    "=Z9$+"    ")-1)
0200 REM "
0300 REM "IOLISTS
0309 REM "Change in special shipping also both P/O and S/O
0310 IOLIST A$(1,LEN(A$)),A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15],A[16],A[17],A[18],A[19],A[20],A[21],A[22],A[23],A[24],A[25],A[26],A[27]
0311 IOLIST A$(1,LEN(A$)),STR(A[0]),A[1],A[2],A[3],A[4],A[5],A[6],A[7],STR(A[8]),A[9],A[10],A[11],A[12],A[13],A[14],A[15],A[16],STR(A[17]),A[18],A[19],A[20],STR(A[21]),A[22],A[23],A[24],A[25],A[26],A[27]
0320 IOLIST B$
0330 IOLIST C$
0340 IOLIST D$
0341 IOLIST D1$,D[0],D[1],D[2]
0350 IOLIST E$
0360 IOLIST F$,F[0],F[1],F[2],F[3],F[4],F[5],F[6],F[7],F[8],F[9],F[10],F[11],F[12],F[13],F[14],F[15],F[16]
0370 IOLIST G$
0380 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8],H[9],H[10],H[11],H[12],H[13],H[14],H[15],H[16],H[17],H[18],H[19],H[20],H[21],H[22],H[23],H[24],H[25],H[26],H[27],H[28],H[29],H[30],H[31]
0390 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14],I[15],I[16],I[17],I[18],I[19],I[20],I[21],I[22],I[23],I[24],I[25],I[26],I[27],I[28],I[29],I[30]
0400 IOLIST U$(1),U[0],U[1]
0410 IOLIST L$,L[0],L[1],L[2],L[3],L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12],L[13],L[14],L[15],L[16],L[17],L[18],L[19],L[20],L[21],L[22],L[23],L[24],L[25],L[26],L[27],L[28],L[29]
0411 IOLIST L$,L[0],STR(L[1]),L[2],L[3],STR(L[4]),L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12],L[13],L[14],STR(L[15]),L[16],L[17],STR(L[18]),L[19],L[20],L[21],STR(L[22]),L[23],L[24],L[25],L[26],L[27],L[28],L[29]
0420 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12]
0421 IOLIST J$,J[0],STR(J[1]),J[2],J[3],J[4],STR(J[5]),J[6],J[7],J[8],J[9],J[10],J[11],J[12]
0430 IOLIST JJ$,JJ[0],JJ[1],JJ[2],JJ[3],JJ[4],JJ[5],JJ[6],JJ[7],JJ[8],JJ[9],JJ[10],JJ[11],JJ[12] ! SSP 211614
0500 REM "FILES
0503 GOSUB SETUP_MESSAGES
0510 Z$="01X PO2...  02O PO1...  03O FM0...  04O FMP...  05O AR1...  06O IC2...  07O AP4...  08O FM1...  09O FS2...  10O IC0...  11O POA...  12O PO7...  13O ZZPARM  15O PO3...  16O FS1...  17O POH...  " ! SSP 211614
0512 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1 ! SSP224978 jdf
0515 _PO2=Z[1] REM _FILE_NAME$="PO2"+%C$,_PO2=HFN; OPEN (_PO2,ERR=OPEN_ERR)_FILE_NAME$ ! SSP224978 jdf
0520 _PO1=Z[2] REM _FILE_NAME$="PO1"+%C$,_PO1=HFN; OPEN (_PO1,ERR=OPEN_ERR)_FILE_NAME$ ! SSP224978 jdf
0525 _FM0=Z[3] REM _FILE_NAME$="FM0"+%C$,_FM0=HFN; OPEN (_FM0,ERR=OPEN_ERR)_FILE_NAME$ ! SSP224978 jdf  
0530 _FMP=Z[4] REM _FILE_NAME$="FMP"+%C$,_FMP=HFN; OPEN (_FMP,ERR=OPEN_ERR)_FILE_NAME$  ! SSP224978 jdf
0535 _AR1=Z[5] REM _FILE_NAME$="AR1"+%C$,_AR1=HFN; OPEN (_AR1,ERR=OPEN_ERR)_FILE_NAME$  ! SSP224978 jdf
0540 _IC2=Z[6] REM _FILE_NAME$="IC2"+%C$,_IC2=HFN; OPEN (_IC2,ERR=OPEN_ERR)_FILE_NAME$  ! SSP224978 jdf
0545 _AP4=Z[7] REM _FILE_NAME$="AP4"+%C$,_AP4=HFN; OPEN (_AP4,ERR=OPEN_ERR)_FILE_NAME$ ! SSP224978 jdf
0550 _FM1=Z[8] REM _FILE_NAME$="FM1"+%C$,_FM1=HFN; OPEN (_FM1,ERR=OPEN_ERR)_FILE_NAME$ ! SSP224978 jdf  
0555 _FS2=Z[9] REM _FILE_NAME$="FS2"+%C$,_FS2=HFN; OPEN (_FS2,ERR=OPEN_ERR)_FILE_NAME$ ! SSP224978 jdf
0560 _IC0=Z[10] REM _FILE_NAME$="IC0"+%C$,_IC0=HFN; OPEN (_IC0,ERR=OPEN_ERR)_FILE_NAME$ ! SSP224978 jdf
0565 _POA=Z[11] REM _FILE_NAME$="POA"+%C$,_POA=HFN; OPEN (_POA,ERR=OPEN_ERR)_FILE_NAME$  ! SSP224978 jdf  
0570 _PO7=Z[12] REM _FILE_NAME$="PO7"+%C$,_PO7=HFN; OPEN (_PO7,ERR=OPEN_ERR)_FILE_NAME$  ! SSP224978 jdf
0575 _PO3=Z[15] REM _FILE_NAME$="PO3"+%C$,_PO3=HFN; OPEN (_PO3,ERR=OPEN_ERR)_FILE_NAME$ ! SSP224978 jdf
0580 _FS1=Z[16] REM _FILE_NAME$="FS1"+%C$,_FS1=HFN; OPEN (_FS1,ERR=OPEN_ERR)_FILE_NAME$ ! SSP224978 jdf
0585 _ZZPARM=Z[13] REM _FILE_NAME$="ZZPARM",_ZZPARM=HFN; OPEN (_ZZPARM,ERR=OPEN_ERR)_FILE_NAME$  ! SSP224978 jdf
0600 DIM M6[1]; CALL "ICGPRE",X3$,_ZZPARM,M6$,M6{ALL},"",0,"",0
0605 DIM %SBO$(255); FIND (_ZZPARM,KEY="osec"+%X3_OP_ID$,DOM=0608)%SBO$
0610 READ (_ZZPARM,KEY=%C$+"F/M")%P8$
0615 READ (_ZZPARM,KEY=%C$+"I/C")%P9$
0620 P8=NUM(%P9$(40,2)),P9=NUM(%P9$(42,1))
0625 REM "
0630 GOSUB 6000
0650 GOSUB LOAD_FOB
0690 READ (_PO2,KEY=K9$,DOM=0691)
1000 REM "
1010 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1030 DIM B$(383),C$(126),D$(100),E$(100),G$(100),H$(126),H[31],I$(187),I[30],U$(20),U[1],F$(65),F[16],D[2],S0$(30),D1$(61)
1035 DIM A$(170),A[27]
1045 A$(10,1)="I"
1049 IF F9$="*" THEN A1$=Q1$
1050 IF Q1$<>"" THEN GOTO 1100
1200 PO_NUM_ENTRY:
1202 IF Q1$<>"" THEN A1$=Q1$,A$(82+K9)=Q1$
1205 IF LEN(A1$)>0 THEN A$(82,9)=A1$(1,9); GOTO 1212
1210 ! CALL "ZZENTR","AXUX",A{ALL},A$,X4$,X3$,39,3,82,9,C0,"P/O","{1"+X$,"","PO2MAB00","PO1","PO2MAA",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1210,1211
1220 DIM B$(383); EXTRACT (_PO1,KEY=A$(82+K9,9),DOM=1210)IOL=0320
1225 DIM G$(100); FIND (_AP4,KEY=B$(7,10),DOM=1226)IOL=0370
1230 DIM C$(126); IF POS(" "<>B$(17,4))<>0 THEN FIND (_FM0,KEY="P"+B$(7,14),DOM=1231)IOL=0330
1240 PO_NUM_ENTRY_END:RETURN 
1245 ! 
1250 LINE_NUM_ENTRY:ENTER FIELD$,ERR_MSG$,VAR_TAG$,ERR=*NEXT
1260 FIELD$=STR(NUM(FIELD$,ERR=*NEXT):"000"); GOTO 1285
1265 ERR_MSG$="Line number must be numeric."
1285 REFRESH_FLG=1
1290 LINE_NUM_ENTRY_END:EXIT 
1295 ! 
1300 LINE_NUM_FMT:ENTER FIELD$,VAR_TAG$,ERR=*NEXT
1305 IF NOT(NUL(FIELD$)) THEN FIELD$=STR(NUM(FIELD$,ERR=*NEXT):"000")
1345 EXIT 
1349 ! *******************************************************
1500 LOOKUP_PO2_RECORD:
1503 IF _EOM$=$00$ AND QRY_VAL$<>"" THEN GOTO *NEXT ELSE IF POS(_EOM$=$09$)=0 THEN GOTO 2035 ! SSP226608 jdf
1505 IF NUL(LINE_NUM$) OR NUM(LINE_NUM$)=0 THEN RETURN 
1506 SHOW CONTROL WZ_NEXT.CTL; SHOW CONTROL WZ_BACK.CTL; HIDE CONTROL WZ_FINISH.CTL
1507 Z9=-1,D$="",D1$="",B$="",%D1$=""
1510 DIM A$(170),A[27]; A$(82,9)=PORDER$,A$(7,3)=LINE_NUM$,A1$=K9$+A$(82,9)+A$(7,3),A$(1,LEN(K9$))=K9$
1515 CHANGE_FLG=0
1520 READ (_PO2,KEY=A1$,DOM=INVALID_LINE)IOL=0310
1521 READ (_PO2,KEY=A1$) ! Use internal IOLIST for display of record
1527 CALL "*wingrp;Enable",LINE_1.GRP$; CALL "*WINGRP;ENABLE",PO2_FIELDS.GRP$ ! SSP238506 jdf
1528 ! IF RECVD_PREV_EXT<>0 AND QTY_RECIEVED_P=0 THEN CALL "*wingrp;Disable",LINE_1.GRP$; CALL "*wingrp;Enable",FLDS.GRP$; CALL "*wingrp;Unlock",FLDS.GRP$; NEXT_ID=RECV_NOW_EXT.CTL
1529 SHOW CONTROL DEL_LINE.CTL ! SSP 226114
1530 DIM B$(383); FIND (_PO1,KEY=A$(82,9),DOM=1531)IOL=0320
1535 DIM D$(100); FIND (_FMP,KEY="T"+A$(25+K9,3),DOM=1536)IOL=0340
1536 DIM D1$(61); %D1$=""; IF A$(10,1)="S" THEN FIND (_FMP,KEY="X"+A$(101,10),DOM=1539)D1$; %D1$=D1$
1538 IF MID(D1$,61,1)="Y" THEN CALL "*wingrp;Disable",LINE_1.GRP$; ENABLE CONTROL LINE_COMPLETE.CTL; CALL "*wingrp;Enable",FLDS.GRP$; CALL "*wingrp;Unlock",FLDS.GRP$; NEXT_ID=RECV_NOW_EXT.CTL; CALL "*WINGRP;DISABLE",PO2_FIELDS.GRP$ ! SSP 211614  ! SSP238506 jdf 
1539 IF A$(10,1)="S" AND MID(D1$,61,1)="N" THEN CALL "*wingrp;disable",COST.GRP$; CALL "*wingrp;enable",FLDS.GRP$; CALL "*wingrp;unlock",FLDS.GRP$
1540 DIM H$(126),H[31],I$(187),I[30]; IF A$(10+K9,1)="I" OR A$(10+K9,1)="X" THEN FIND (_IC0,KEY=A$(91,20),DOM=1541)IOL=0390; I9=1; GOSUB 8100 ELSE FIND (_FM1,KEY=A$(91,20),DOM=1541)IOL=0380
1542 DIM G$(100); FIND (_AP4,KEY=B$(7,10),DOM=1545)IOL=0370
1544 DIM C$(126); IF POS(" "<>B$(17,4))<>0 THEN FIND (_FM0,KEY="P"+B$(7,14),DOM=1545)IOL=0330
1545 ! FIND (_AR1,KEY=A$(91,10),DOM=1546)IOL=0350
1550 DIM H[31],H$(325); FIND (_FM1,KEY=A$(91,20),DOM=1551)IOL=0380
1555 DIM U$(21),U[1]; FIND (_ZZPARM,KEY="U/M"+A$(77,4),DOM=1556)IOL=0400
1556 IF U[1]=0 THEN U[1]=1
1560 DIM L[29]; FIND (_FS2,KEY=A$(82,8)+A$(7,3),DOM=1561)IOL=0410
1561 FIXED_PRICE$=MID(L$,4,1)
1562 LOT_INV=0; GOSUB CHECK_FOR_LOT_INV; IF LOT_INV THEN HIDE CONTROL WZ_NEXT.CTL; SHOW CONTROL WZ_FINISH.CTL; RETURN ! IF NOT(NUL(LINE_NUM$)) THEN NEXT_ID=LINE_NUM.CTL; RETURN ELSE NEXT_ID=WZ_FINISH.CTL; RETURN ; !SSP 211614
1563 GOSUB SET_PO2_FIELDS ! String to NUM, calcs, etc for display & entry       
1565 IF X3$(145,1)="1" AND %P8$(280,1)="Y" AND B$(351,1)="B" AND A$(7,3)<>"001" THEN OPTIONS$+="P"+"W"
1570 ! CALL "PO2MAU",X3$,X4$,A$,A{ALL},R1$,S1$,8400,J$,J{ALL},OPTIONS$
1580 IF R0$<>"" THEN J0=0; GOSUB 8400; Z=-1,X0=27; GOTO 1850
1585 IF F9$="*" THEN Q1$=Q1$(1,9); RUN "PO2MA2"
1590 GOTO 1700
1595 ! 
1600 REM "
1605 IF POS(R0$="Rr")>0 THEN GOTO 1621
1610 GOSUB 7800
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 IF Q1$=A1$ THEN GOTO 9700 ELSE A5$=A1$(10),A1$=A1$(1,9); GOTO 1000
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1805 IF R0$="" THEN IF A$(6,1)<>" " THEN CALL "ZZPROM","4",X3$,X,"This line is in PO Receiving and cannot be changed!","","",0; GOTO 1630
1810 IF Q0$="2" THEN CALL "ZZPROM","4",X3$,Z,"","","",X0; GOTO 9900
1815 IF LEN(Q1$)=LEN(A1$) THEN CALL "ZZPROM","1",X3$,Z,"","","V",X0; ON Z+1 GOTO 1850,6700,1850
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700
1830 GOTO 2000
1850 CONTINUE_LOOKUP_PO2_RECORD:
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 IF R0$<>"" THEN EXTRACT (_PO2,KEY=A1$,DOM=1870)A$ ELSE EXTRACT (_PO2,KEY=A1$,DOM=1870)IOL=0310
1861 REM IF r0$<>"" THEN GOSUB 8400
1862 IF R0$<>"" THEN GOSUB 7000
1865 C9=1
1870 REFRESH_FLG=1
1880 IF POS(R0$="Rr")>0 AND %P9$(62,1)="Y" AND POS(A$(10+K9,1)="IX")>0 THEN CALL "POGMA3",X3$,X4$,I$,I{ALL},%P9$,N0; NEXT_ID=QTY_RECV_NOW.CTL
1890 IF Z<0 THEN GOTO 2030 ELSE GOTO 2000
2000 REM 
2010 L0=2; RUN "PO2MA2"
2030 PERFORM "POGMAR;PRESET_VALUES"
2031 IF A$(10,1)="S" AND D1$(61,1)="Y" THEN IF EXT=0 THEN RECV_NOW_EXT$=STR(L[3]),INV_NOW_EXT$=STR(L[3]) ELSE RECV_NOW_EXT$=STR(EXT),INV_NOW_EXT$=STR(EXT) ! SSP201983 jdf 
2032 IF A$(10,1)="S" AND MID(D1$,61,1)="Y" THEN CALL "*wingrp;disable",EXT_ONLY.GRP$; CALL "*wingrp;Unlock",COST.GRP$; CALL "*wingrp;Enable",COST.GRP$ ! CALL "BORDERLESS",0,"",0,FLDS.GRP$; REFRESH_FLG=1  ! 229326 
2033 READ (Z[3],KEY=J$(1,23),DOM=*NEXT)IOL=0420 ! SSP226608 jdf
2034 CHANGE_FLG=0; IF RECV_NOW_EXT$="0" THEN RECV_NOW_EXT$=STR(EXT$),INV_NOW_EXT$=STR(EXT),RECV_NOW_EXT=EXT,INV_NOW_EXT=EXT,A[14]=EXT,A[16]=EXT; END_IF ; IF (A[11]-A[6]<0) AND A[11]>0 THEN A[14]=0,RECV_NOW_EXT=0,RECV_NOW_EXT$="0" ! SSP234296 jdf ! SSP237218 jdf   
2035 IF STP(A$)<>"" THEN { QTY_RECIEVED_P=QTY_RECIEVED_P-J[0]; IF QTY_RECIEVED_P<0 THEN QTY_RECIEVED_P=0; END_IF ; IF MID(U$,20,1)="Y" THEN QTY_RECIEVED_P$=STR(QTY_RECIEVED_P) ELSE IF A[2]<>0 THEN QTY_RECIEVED_P$=STR(A[6]/A[2]) ! SSP226608 jdf    ! SSP233597 jdf
2037 PREV_INVOICED=PREV_INVOICED-J[4]; IF PREV_INVOICED<0 THEN PREV_INVOICED=0; END_IF ; IF MID(U$,20,1)="Y" THEN PREV_INVOICED$=STR(PREV_INVOICED) ELSE IF A[2]<>0 THEN PREV_INVOICED$=STR(A[9]/A[2]) ! SSP226608 jdf ! SSP233597 jdf
2040 RECVD_PREV_EXT=RECVD_PREV_EXT-J[2]; IF RECVD_PREV_EXT<0 THEN RECVD_PREV_EXT=0; END_IF ; RECVD_PREV_EXT$=STR(RECVD_PREV_EXT) ! SSP226608 jdf
2042 INV_PREV_EXT=INV_PREV_EXT-J[6]; IF INV_PREV_EXT<0 THEN INV_PREV_EXT=0; END_IF ; INV_PREV_EXT$=STR(INV_PREV_EXT) ! SSP226608 jdf
2045 REFRESH_FLG=1 } ! SSP226608 jdf
2046 IF MID(U$,21,1)="Y" THEN CALL "*wingrp;Disable",COST2.GRP$; CALL "*wingrp;Enable",EXT2.GRP$,QTY.GRP$; CALL "*wingrp;Unlock",EXT2.GRP$ ! NEXT_ID=RECV_NOW_EXT.CTL ! SSP224634 jdf      
2047 IF MID(U$,21,1)<>"Y" AND MID(A$,10,1)<>"S" AND MID(D1$,61,1)<>"Y" THEN CALL "*WINGRP;DISABLE",EXT2.GRP$ ! SSP224634 jdf ! SSP234296 jdf
2048 IF NUL(AP_INV_NUM$) THEN INV_NOW_EXT$=".00",INV_NOW_EXT=0,INV_NOW_COST$="",INV_NOW_COST=0; DISABLE CONTROL INV_NOW_COST.CTL; DISABLE CONTROL INV_NOW_EXT.CTL ELSE IF MID(A$,10,1)<>"S" THEN ENABLE CONTROL INV_NOW_COST.CTL ! SSP236973 jdf ! SSP237382 jdf!SSP#281301
2049 IF STP(A$)<>"" THEN IF A[6]<>0 AND R0$<>"r" AND QTY_RECIEVED_P=PREV_INVOICED THEN INVOICE_NOW=0,INV_NOW_EXT=0,INVOICE_NOW$=STR(INVOICE_NOW),INV_NOW_EXT$=STR(INV_NOW_EXT); GOTO LOOKUP_PO2_RECORD_END ! SSP 239729
2050 IF STP(A$)<>"" THEN IF A[6]<>0 AND R0$<>"r" AND QTY_RECIEVED_P<>PREV_INVOICED THEN IF U$(20,1)="Y" THEN INVOICE_NOW=A[6]/U[1] ELSE INVOICE_NOW=A[6]/A[2]; END_IF ; INV_NOW_EXT=A[13],INVOICE_NOW$=STR(INVOICE_NOW),INV_NOW_EXT$=STR(INV_NOW_EXT) ! SSP237218 jdf  SSP 239577
2060 LOOKUP_PO2_RECORD_END:RETURN 
6000 REM "BACKGROUND
6005 DIM U[1],H[18]
6010 CALL "PO2MA1",X3$,X4$,6000,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
6190 RETURN 
6200 REM "DISPLAY DATA
6205 RETURN 
6215 IF A$(10,1)="S" THEN IF D1$(61,1)="Y" THEN R0$=R0$+"*"
6220 CALL "PO2MA1",X3$,X4$,6200,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
6265 IF A$(90,1)<>" " AND LEN(L$)>4 THEN PRINT @(8,18+V0),'SB',"Fixed price?",'SF',@(21,18+V0),L$(4,1),
6290 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 IF A$(10,1)="S" THEN IF D1$(61,1)="Y" THEN R0$=R0$+"*"
6420 CALL "PO2MA1",X3$,X4$,6400,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6460 CALL "PO2MA1",X3$,X4$,6450,N0,A$,A{ALL},B$,E$,U$,H$,U[1],H[2],E2$,E4$,R0$
6462 GOSUB 7600
6464 PRINT @(10,4+V0),A$(7+K9,3),
6490 RETURN 
6500 DELETE_LINE:
6501 IF %SBO$(67,1)="Y" AND B$(189,1)="P" AND X0$<>"PO2MAR" THEN CALL "ZZPROM",".4",X3$,0,"Access denied!  Purchase Order previously printed. May not be deleted.","","",0; GOTO 1820; REM "WO105690,SSP117282,SSP117663
6502 REM DIM A[27] ! SSP223795 jdf
6503 A1$=KEC(_PO2) ! SSP223795 jdf
6505 IF R0$<>"" THEN EXTRACT (_PO2,KEY=A1$,DOM=1870)A$ ELSE EXTRACT (_PO2,KEY=A1$,DOM=1870)IOL=0310 ! SSP223795 jdf
6510 IF R0$="" THEN REMOVE (_PO2,KEY=A1$,DOM=6511) ELSE A$(6,1)="",A[7]=0,A[8]=0,A[14]=0,A[12]=0,A[10]=0,A[16]=0,A[17]=0; WRITE (_PO2,KEY=A1$)IOL=0310 ! SSP224978 jdf ! SSP237382 jdf
6512 REM _PO7=FN%FFN("PO7"+%C$); IF _PO7<0 THEN _PO7=HFN; OPEN (_PO7)"PO7"+%C$   ! SSP224978 jdf     
6515 IF R1$="" THEN GOTO 6560
6520 K$=A$(82,9)+R1$(1,10)+A$(7,3); DIM J$(130),J[12]
6525 READ (Z[3],KEY=K$,DOM=6526)
6530 K0$=KEY(Z[3],END=6550); READ (Z[3],KEY=K0$)IOL=0420
6535 IF K0$(1,LEN(K$))<>K$ THEN GOTO 6550
6537 IF J$(66,3)<>"   " THEN CALL "FMGICC",X3$,X4$,"PO2MAB",-1,J$,J{ALL},"",0; REM "WO111482, Inventory Costing, delete FTF record(s) that go with this PO7 rec
6538 REM GOSUB UPDATE_PO2 ! SSP224978 jdf ! SSP237382 jdf
6540 REMOVE (Z[3],KEY=K0$) ! SSP224978 jdf
6545 GOTO 6530
6550 IF %P9$(44,1)="Y" AND LOT_DELETE THEN X$=A1$; CALL "ICGLAC",X3$,X4$,"",X$; LOT_DELETE=0 ! SSP 239950
6560 GOSUB CLEAR_PO2_FIELDS; HIDE CONTROL WZ_NEXT.CTL; SHOW CONTROL WZ_FINISH.CTL; NEXT_ID=LINE_NUM.CTL; CALL "*WINGRP;DISABLE",FIELDS.GRP$
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6605 FIND (_PO1,KEY=A1$(1,9),DOM=6606)IOL=0320
6690 RETURN 
6700 WRITE_PO2_REC:
6705 IF R0$<>"" THEN GOSUB 8450
6710 IF R0$<>"" THEN IF %P8$(272,1)="Y" THEN M$="Reprint Packing List for line "+A$(11,3)+" after PO Receiving Update?"; EXTRACT RECORD (_FS1,KEY=A$(82,8),DOM=6715)FS1$; IF FS1$(128,1)="Y" THEN IF %P8$(335,1)="Y" THEN MSGBOX M$,"Attention","?,YESNO,2",_S3$ ELSE MSGBOX M$,"Attention","?,YESNO",_S3$; END_IF ; IF _S3$="YES" THEN FS1$(128,1)=" "; WRITE RECORD (_FS1,KEY=A$(82,8))FS1$; REM "WO94734, SSP262244-was checking S3$ instead of _S3$. WO262075, if parm set then default answer to NO else leave as is with answer defaulting to YES
6715 REM IF U$(21,1)="Y" OR (A$(10,1)="S" AND D1$(61,1)="Y") THEN LET A(0)=A(4)
6720 WRITE (_PO2,KEY=A1$)IOL=0310 ! SSP226608 jdf
6725 CHANGE_FLG=0
6730 A6$=A1$
6735 DIM I$(188),I[30]; FIND (_IC0,KEY=A$(91,20),DOM=*NEXT)IOL=0390
6740 ! IF POS(A$(10,1)="IC")<>0 AND A$(14,1)<>"Y" THEN CALL "PO2MAC",X3$,X4$,A$(82,9)+A$(7,3),B$(173,1),I$
6745 IF R0$="" THEN IF A$(14,1)="Y" OR (A$(81,1)="Y" AND FNS$(A$(91,10))>"") THEN GOTO 7700
6750 REM " r0$<>""
6755 IF A$(10,1)="S" THEN IF D1$(61,1)="Y" THEN GOTO 6765
6760 IF A$(14,1)="Y" AND NUM(QTY_RECV_NOW$)<>0 THEN {! SSP225453 jdf
6761 GOSUB GET_RECV_NOW_QTY
6762 PROCESS "POGMAF","../POG/PO.EN",X3$,X4$,"",A$(82,9)+R1$(1,10)+A$(7,3),FY$+ACCTPD$,RECEIPT_DATE$
6764  } ELSE {
6765 REM "If still here, then no special shipping, do we need to do lots?
6768 IF A$(10,1)="S" THEN GOTO 6775 ! SSP235877 jdf
6770 IF R1$<>"" THEN IF MID(B$,173,1)<>"C" AND %P9$(44,1)="Y" AND J[0]<>0 AND I$(112,1)="Y" THEN J1$=A$(82,9)+R1$(1,10)+A$(7,3),JLOT$=J1$; CALL "PO2MAU",X3$,X4$,JLOT$,A{ALL},""," ",8800,"",J{ALL},""; PROCESS "ICGLAB","../ICG/IC.EN",X3$,X4$,"",J1$ ! SSP226154 jdf SSP 239950  SSP 241034 SSP 242707
6771 ! F R1$<>"" THEN IF MID(B$,173,1)<>"C" AND %P9$(44,1)="Y" AND J[0]<>0 AND I$(112,1)="Y" THEN J1$=A$(82,9)+R1$(1,10)+A$(7,3),JLOT$=J1$; PROCESS "ICGLAB","../ICG/IC.EN",X3$,X4$,"",J1$; CALL "PO2MAU",X3$,X4$,JLOT$,A{ALL},""," ",8800,"",J{ALL},"" ! SSP226154 jdf SSP 239950  SSP 241034
6775 ! FIRST_TIME$="N"
6776  }
6780 GOSUB CLEAR_PO2_FIELDS
6790 WRITE_PO2_REC_END:RETURN 
6795 ! 
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(_PO2,END=6895)
6815 GOSUB 6600
6820 IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6822 IF Q1$<>"" THEN IF A1$(1,LEN(Q1$))<>Q1$ THEN PRINT 'RB',; READ (_PO2,KEY=Q1$,DOM=1140); GOTO 1140
6825 A$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,_PO2,A1$; GOTO 6820
6860 CALL "ZZKEYL",ERR=6861,_PO2,A1$; GOTO 6820
6870 GOTO 6895
6890 GOTO 1515
6895 PRINT 'RB',; READ (_PO2,KEY=K9$,DOM=1140); GOTO 1140
6902 V9$="1203  6104  7404  1806  6106  0009  1109  3909  1711  1713  1715  5511  6311  5513  5515  "
7000 REM "Preset values if receiving
7010 IF A[18]=0 THEN IF A$(10,1)="I" THEN A[18]=I[16] ELSE IF A$(10,1)="C" THEN A[18]=H[18],A[19]=H[17]
7020 IF POS(" "<>A$(119,12))=0 THEN A$(119,12)=B$(248,12),A$(131,6)=B$(260,6)
7040 RETURN 
7500 GET_NEXT_LINE_NUM:
7502 HIDE CONTROL DEL_LINE.CTL ! SSP 211614
7504 REM "A6$ set @ 6715
7505 IF A6$="" THEN A6$=PORDER$ ! ELSE A6$(10,3)=STR(NUM(A6$(10,3))+1:"000")
7510 READ (_PO2,KEY=A6$,DOM=*NEXT)
7515 K8$=KEY(_PO2,END=EOF) ! SSP224888
7520 IF K8$(1,9)=PORDER$ THEN LINE_NUM$=K8$(10,3) ELSE LINE_NUM$=""
7530 READ (_PO2,KEY=K8$)PO2$
7535 REFRESH_FLG=1
7540 GET_NEXT_LINE_NUM_END:RETURN 
7542 EOF: LINE_NUM$="",REFRESH_FLG=1; RETURN ! SSP224888
7600 REM "Print P/O stuff
7610 CALL "ZZDISP","A",B$(7,10),"A/P",X3$,"","",17,4,X4$
7615 PRINT @(5,5),G$(11,35),@(61,4),B$(17,4),@(44,5),B$(21,35),
7640 RETURN 
7700 REM "P/O Spec Ship & Specs Run Logic
7705 U1$="PO2MAB"+"13"+"#"+A$(82,9)+A$(7,3)+U1$
7720 IF A$(14,1)="Y" THEN U1$="PO2MAD12"+A1$+U1$
7730 IF A$(81,1)="Y" AND FNS$(A$(91,10))>"" THEN Q4$=A$(91,20)+FNS$(A$(101,10))+" - "+FNS$(A$(28,40)),U1$="FM2OB6"+STR(LEN(Q4$):"00")+Q4$+U1$
7740 GOTO 9700
8000 SET_PO2_FIELDS:
8005 IF U$(20,1)="Y" THEN Q0=U[1] ELSE Q0=A[2]
8007 IF Q0=0 THEN Q0=1
8010 CUSTOMER$=CUST_DIV$+CUST_CODE$
8015 TF_COST$=STR(TF_COST),UM_AMT$=STR(UM_AMT),LABEL_NUM$=STR(LABEL_NUM)
8020 EXT$=STR(EXT),CTN_PACK$=STR(CTN_PACK),QTY_RECIEVED_P$=STR(QTY_RECIEVED_P/Q0)
8022 IF A$(10,1)="S" AND D1$(61,1)="Y" THEN IF EXT=0 THEN EXT$=STR(L[3]) ELSE EXT$=STR(EXT) ! SSP201983 jdf
8025 QTY_RECV_NOW$=STR(A[11]/Q0),RECV_NOW_COST$=STR(A[8]),PREV_INVOICED$=STR(A[9]/Q0) ! SSP224634 jdf
8030 INVOICE_NOW$=STR(A[10]/Q0),REAL_QTY_ORDERED$=STR(A[11]/Q0),QTY_BO$=STR(A[12]/Q0) ! SSP224634 jdf
8035 RECVD_PREV_EXT$=STR(A[13]),RECV_NOW_EXT$=STR(A[14]),INV_PREV_EXT$=STR(A[15]) ! SSP224634 jdf     
8037 IF A$(10,1)="S" AND D1$(61,1)="Y" THEN IF EXT=0 THEN RECV_NOW_EXT$=STR(L[3]) ELSE RECV_NOW_EXT$=STR(EXT) ! SSP201983 jdf
8038 IF A$(10,1)="S" AND D1$(61,1)="N" THEN RECV_NOW_EXT$=STR(EXT),RECV_NOW_EXT=EXT
8040 INV_NOW_EXT$=STR(A[16]),INV_NOW_COST$=STR(A[17]),CTN_WT$=STR(A[18]) ! SSP224634 jdf
8042 IF A$(10,1)="S" AND D1$(61,1)="Y" THEN IF EXT=0 THEN INV_NOW_EXT$=STR(L[3]) ELSE INV_NOW_EXT$=STR(EXT) ! SSP201983 jdf
8043 IF A$(10,1)="S" AND D1$(61,1)="N" THEN INV_NOW_EXT$=STR(EXT),INV_NOW_EXT=EXT
8050 IF RECV_NOW_EXT$="0" THEN RECV_NOW_EXT$=STR(EXT$),INV_NOW_EXT$=STR(EXT),RECV_NOW_EXT=EXT,INV_NOW_EXT=EXT,A[14]=EXT,A[16]=EXT ! SSP234296 jdf
8055 IF (A[11]-A[6]<0) AND A[11]>0 THEN A[14]=0,RECV_NOW_EXT=0,RECV_NOW_EXT$="0" ! SSP237218 jdf
8060 IF NUL(AP_INV_NUM$) THEN INV_NOW_EXT$=".00",INV_NOW_EXT=0,INV_NOW_COST$="",INV_NOW_COST=0,A[16]=0,A[17]=0; DISABLE CONTROL INV_NOW_COST.CTL ELSE IF A$(10,1)<>"S" THEN ENABLE CONTROL INV_NOW_COST.CTL ! SSP236973 jdf
8080 IF LINE_COMPLETE$=" " THEN LINE_COMPLETE$="N"
8085 ! F INV_RECV$="Y" THEN RECV_NOW_EXT$=".00",RECV_NOW_EXT=0,RECV_NOW_COST$="",RECV_NOW_COST=0,QTY_RECV_NOW$="",QTY_REV_NOW=0,A[7]=0,A[8]=0; CALL "*WINGRP;DISABLE",LOT_QTY.GRP$ ELSE CALL "*WINGRP;ENABLE",LOT_QTY.GRP$ ! CONTROL INV_NOW_COST.CTL ELSE IF A$(10,1)<>"S" THEN ENABLE CONTROL INV_NOW_COST.CTL ! SSP236973 jdf
8090 SET_PO2_FIELDS_END:RETURN 
8095 ! 
8100 REM "Assign inv values to cust job rec, read in inv-vendor stuff
8110 DIM H$(126); H$(24,18)=I$(64,18),H$(96,4)=I$(124,4),H[2]=I[15],H[0]=I[19]
8115 IF I9=1 THEN I9=0; GOTO 8140
8120 DIM F$(65),F[16]; FIND (_IC2,KEY=A$(91,20)+B$(7,14),DOM=8140)IOL=0360
8125 A$(77+K9,4)=F$(55,4),A[0]=F[13],H$(96,4)=F$(55,4),A[2]=F[14],H[2]=F[14],H[0]=F[16],A[5]=F[16]
8140 RETURN 
8200 CLEAR_PO2_FIELDS:
8210 LINE_COMPLETE$="",LINE_NUM$="",LINE_TYPE$="",SPECIAL_SHIPPING$=""
8215 PLYS$="",LEFT_RIGHT$="",PROD_CODE$="",FIXED_PRICE$=""
8220 TF_DESC$="",STARTING_NUM$="",UM$="",SPECS_REQ$=""
8225 CUSTOMER$="",CUST_DIV$="",CUST_CODE$="",%CUST_NAME$=""
8230 ITEM_CODE$="",TOP_BOTTOM$="",JOB_NUM$="",JOB_DATE$=""
8235 ENDING_NUM$="",TF_COST$="",TF_COST=0,UM_AMT$="",UM_AMT=0,LABEL_NUM$="",LABEL_NUM=0
8240 EXT$="",EXT=0,CTN_PACK$="",CTN_PACK=0,QTY_RECIEVED_P$="",QRY_RECIEVED_P=0,QTY_RECV_NOW$="",QTY_RECV_NOW=0
8245 RECV_NOW_COST$="",RECV_NOW_COST=0,PREV_INVOICED$="",PREV_INVOICED=0,INVOICE_NOW$="",INVOICE_NOW=0,REAL_QTY_ORDERED$="",READ_QTY_ORDERED=0
8250 QTY_BO$="",QTY_BO=0,RECVD_PREV_EXT$="",RECVD_PREV_EXT=0,RECV_NOW_EXT$="",RECV_NOW_EXT=0,INV_PREV_EXT$="",INV_PREV_EXT=0
8255 INV_NOW_EXT$="",INV_NOW_EXT=0,INV_NOW_COST$="",INV_NOW_COST=0,CTN_WT$="",CTN_WT=0,COMBO_QTY$="",COMBO_QTY=0,REFRESH_FLG=1
8260 UM$="",REFRESH_FLG=1 ! SSP238506 jdf
8290 CLEAR_PO2_FIELDS_END:RETURN 
8295 ! 
8300 LOT_INV_STATUS:! SSP 211614
8310 GOSUB CLEAR_PO2_FIELDS
8320 LOT_INV=0
8350 NEXT_FOLDER=FLDR.POGMAG.2.CTL; HIDE CONTROL WZ_NEXT.CTL; SHOW CONTROL WZ_FINISH.CTL; GOSUB GET_NEXT_LINE_NUM; IF NOT(NUL(LINE_NUM$)) THEN NEXT_ID=LINE_NUM.CTL ELSE NEXT_ID=WZ_FINISH.CTL
8352 CALL "*wingrp;Disable",LINE_1.GRP$; CALL "*WINGRP;DISABLE",PO2_FIELDS.GRP$ ! SSP238506 jdf"
8355 REFRESH_FLG=1
8360 RETURN 
8400 REM "Remove PO7, either delete or prepare for PO2 entry
8402 OPTIONS$=""
8403 LOT_DELETE=0 ! SSP 239950
8405 IF %P8$(280,1)="Y" AND B$(351,1)="B" AND A$(7,3)<>"001" THEN OPTIONS$=OPTIONS$+"P"+"W"; REM "WO111482, Inventory costing feature, get product code and warehouse to ship to from FTE record
8406 ! R1$=PAD(R1$,10)
8408 IF A$(10,1)="S" AND D1$(61,1)="Y" THEN IF EXT=0 THEN A[4]=L[3],A[14]=L[3],A[16]=L[3] ELSE A[4]=EXT,A[14]=EXT,A[16]=EXT ! S8408:SP201983 jdf
8409 IF A$(10,1)="S" AND D1$(61,1)="N" THEN A[4]=EXT,A[14]=EXT,A[16]=EXT
8410 IF STP(A$)<>"" THEN CALL "PO2MAU",X3$,X4$,A$,A{ALL},R1$," ",8400,J$,J{ALL},OPTIONS$ ! SSP231906 jdf SSP 239950
8420 IF POS("L"=OPTIONS$)<>0 THEN LOT_DELETE=1 ! SSP 239950
8445 RETURN 
8450 REM "Add back to P07 if after PO2 entry
8452 OPTIONS$=""
8455 IF %P8$(280,1)="Y" AND MID(B$,351,1)="B" AND A$(7,3)<>"001" THEN OPTIONS$=OPTIONS$+"P"+"W" ! SSP226154 jdf
8456 IF MID(A$,10,1)="S" AND D1$(61,1)="Y" THEN IF EXT<>RECV_NOW_EXT THEN EXT=RECV_NOW_EXT ! SSP221289 jdf  ! SSP231906 jdf
8457 IF MID(A$,10,1)="S" AND D1$(61,1)="Y" AND MID(A$,6,1)="Y" THEN IF EXT=0 THEN A[4]=0,A[14]=0,A[16]=0; GOTO 8459 ! SSP 240415
8458 IF MID(A$,10,1)="S" AND D1$(61,1)="Y" THEN IF EXT=0 THEN A[4]=L[3],A[14]=L[3],A[16]=L[3] ELSE A[4]=EXT,A[14]=EXT,A[16]=EXT ! S8457:SP201983 jdf
8459 IF MID(A$,10,1)="S" AND D1$(61,1)="Y" AND NUL(AP_INV_NUM$) THEN A[16]=0 ! SSP#281301
8460 IF STP(A$)<>"" THEN CALL "PO2MAU",X3$,X4$,A$,A{ALL},R1$," ",8450,J$,J{ALL},OPTIONS$ ! SSP231906 jdf  SSP 239950
8465 IF STP(A$)<>"" THEN GOSUB COPY_ARRAY_TO_FIELDS ! SSP231906 jdf
8495 RETURN 
8500 ! Invalid Purchase Order Line Number Message
8510 INVALID_LINE:
8530 MSGBOX MSG("POGMAG_07"),MSG("FYI"),"STOP"
8550 PERFORM "POGMAG;INIT_FOLDER"; NEXT_ID=LINE_NUM.CTL
8580 REFRESH_FLG=1
8590 RETURN 
8600 CLEAR_PO7:! This sub is used to clear PO7 FIELDS when starting over ! SSP226608 jdf
8610 DIM J$(130),J[12] ! SSP226608 jdf
8620 QTY_RECIEVED_P=0,RECVD_PREV_EXT=0,INV_PREV_EXT=0,PREV_INVOICED=0,R0$="",%R0$="",HOLD_R0$="",%PANEL2_BACK=0 ! SSP226608 jdf
8630 RETURN ! SSP226608 jdf
8640 BACK_ADD_PO7:! The Back Button was pressed so we need to add back PO7 RECORD.  ! SSP226608 jdf
8650 REM GOSUB 8450 ! SSP226608 jdf
8660 RETURN ! SSP226608 jdf
8700 REM "Call po2mah
8710 ! CALL "ZZDAPP",X3$,"DZZENTRZZINPT"
8728 ! IF _FS1 THEN CLOSE (_FS1)
8729 ! IF _PO1 THEN CLOSE (_PO1)
8730 CALL "POGMAH",X3$,B$(173,1),B$(297,9),"1"
8731 ! _PO1=HFN; OPEN (_PO1)"PO1"+%C$
8732 ! _FS1=HFN; OPEN (_FS1)"FS1"+%C$
8735 ! CALL "ZZDAPP",X3$,"AALL"
8740 RETURN 
8800 REM "Add a new orderline
8802 IF POS(" "<>B$(306,8))=0 THEN GOTO 8825
8805 U1$="FM2ODB27"+"@"+A$(82,9)+"001"+B$(7,14)+"PO2MAB"+STR(2+LEN(A6$)+LEN(Q4$):"00")+"@"+A6$+"@"+Q4$+U1$; GOTO 9715; REM "Skip call to PO2MAH
8810 GOTO 9715
8825 REM "STOCK P/O -add line
8830 U1$="PO2MAB10"+A6$(1,9)+"*"+"PO2MAB"+STR(2+LEN(A6$)+LEN(Q4$):"00")+"@"+A6$+"@"+Q4$+U1$; GOTO 9715; REM "Skip call to PO2MAH
8950 REM "Program flow logic
8960 DIM U0$(6); U0$(1)=FID(0),U0$=U0$+"PF"
8970 CLOSE (14); OPEN (14)"ZZPARM"; FIND (14,KEY=U0$,DOM=8990)U0$,U1$
8975 IF U1$="" THEN GOTO 8990 ELSE IF U1$(1,6)<>X0$ THEN GOTO 8990
8980 Q1=NUM(U1$(7,2)),Q1$=U1$(9,Q1),U1$=U1$(Q1+9); IF LEN(Q1$)<=9 THEN GOTO 8985
8981 IF Q1$(10)="*" THEN Q1$=Q1$(1,9),F0$="*" ELSE F0$=""
8982 IF Q1$(1,1)="@" THEN Q1$=Q1$(2),Q0=POS("@"=Q1$+"@"),A6$=Q1$(1,Q0-1),Q1$=Q1$(Q0+1)
8983 Q4$=Q1$; IF LEN(Q1$)>=10 AND POS(Q1$(10,1)="Rr")<>0 THEN F0$="*",R1$=Q1$(11),R0$=Q1$(10,1),Q1$=Q1$(1,9) ELSE R0$=""
8985 REM "All refs to len(Q1$)=12 are display from IC2MAI stuff
8987 F9$=""; IF Q1$(1,1)="!" THEN F9$="*",Q1$=Q1$(2),L0=4; IF Q1$(1,1)="!" THEN Q1$=Q1$(2),L0=5
8988 IF Q1$(1,1)="#" THEN Q1$=Q1$(2),A5$=Q1$(10,3),Q1$=Q1$(1,9)
8990 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9900
9200 SETUP_MESSAGES:
9210 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9220 _MSG_DIRECTORY$=MSG("DIRECTORY")
9230 _MSG_PREFIX$=MSG("PREFIX")
9240 SETUP_MESSAGES_END:RETURN 
9245 ! 
9250 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
9255 CMD_STR$="E"
9260 EXIT 
9265 ! 
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 FINISHED:
9705 REM "For call from IC2MAI to PO2MAA
9706 ! IF LEN(Q1$)=12 THEN PRINT @(0,3),'CE',
9710 IF U1$="" THEN GOTO FINISHED_END
9714 IF R0$<>"" THEN GOSUB 8700
9715 ! CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9720 ! WRITE (_ZZPARM,KEY=U0$)U0$,U1$
9725 O1=0
9730 ! RUN U1$(1,6)
9740 FINISHED_END:RETURN 
9745 ! 
9800 CLOSE_FILES:
9810 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9815 REM IF _PO2 THEN CLOSE (_PO2) ! SSP224978 jdf
9820 REM IF _PO1 THEN CLOSE (_PO1) ! SSP224978 jdf
9825 REM IF _FM0 THEN CLOSE (_FM0) ! SSP224978 jdf
9830 REM IF _FMP THEN CLOSE (_FMP) ! SSP224978 jdf
9835 REM IF _AR1 THEN CLOSE (_AR1) ! SSP224978 jdf
9840 REM IF _IC2 THEN CLOSE (_IC2) ! SSP224978 jdf
9845 REM IF _AP4 THEN CLOSE (_AP4) ! SSP224978 jdf
9850 REM IF _FM1 THEN CLOSE (_FM1) ! SSP224978 jdf
9855 REM IF _FS2 THEN CLOSE (_FS2) ! SSP224978 jdf
9860 REM IF _IC0 THEN CLOSE (_IC0) ! SSP224978 jdf
9865 REM IF _POA THEN CLOSE (_POA) ! SSP224978 jdf
9870 REM IF _PO7 THEN CLOSE (_PO7) ! SSP224978 jdf
9875 REM IF _PO3 THEN CLOSE (_PO3) ! SSP224978 jdf
9880 REM IF _FS1 THEN CLOSE (_FS1) ! SSP224978 jdf
9885 REM IF _ZZPARM THEN CLOSE (_ZZPARM) ! SSP224978 jdf
9890 CLOSE_FILES_END:RETURN 
9895 ! 
9900 REM "END PROGRAM
9905 IF R0$<>"" THEN CALL "PO2MAH",X3$,B$(173,1),B$(297,9),"1"
9910 GOSUB CLOSE_FILES
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 IF %GUI THEN EXIT ELSE RUN "ZMENU"
9999 END 
10000 COPY_FIELDS_TO_ARRAY:! Copy fields to A[array] for pocessing            
10045 RETURN 
10049 ! **********************************************
10050 COPY_ARRAY_TO_FIELDS:! Copy from A[array] to fields to write out
10070 TF_COST=A[0],OPEN_QTY=A[1],UM_AMT=A[2],LABEL_NUM=A[3],EXT=A[4],CTN_PACK=A[5],QTY_RECIEVED_P=A[6],QTY_RECV_NOW=A[7],RECV_NOW_COST=A[8],PREV_INVOICED=A[9],INVOICE_NOW=A[10],REAL_QTY_ORDERED=A[11],QTY_BO=A[12],RECVD_PREV_EXT=A[13],RECV_NOW_EXT=A[14],INV_PREV_EXT=A[15],INV_NOW_EXT=A[16],INV_NOW_COST=A[17],CTN_WT=A[18],COMBO_QTY=A[19],SELL_QTY_PER=A[20],SELL_PRICE=A[21],STND_UNIT_COST=A[22],STND_COST_QTY_PER=A[23],PO2_UNUSED_3=A[24],PO2_UNUSED_4=A[25],PO2_UNUSED_5=A[26],PO2_UNUSED_6=A[27]
10071 IF MID(A$,10,1)="S" AND MID(D1$,61,1)="Y" THEN INV_NOW_COST=0,INV_NOEW_COST$=""
10075 ! RECVD_PREV_EXT=NUM(RECVD_PREV_EXT$),RECV_NOW_EXT=NUM(RECV_NOW_EXT$),INV_PREV_EXT=NUM(INV_PREV_EXT$)
10080 INV_NOW_EXT=NUM(INV_NOW_EXT$),INV_NOW_COST=NUM(INV_NOW_COST$),CTN_WT=NUM(CTN_WT$)
10085 IF A$(10,1)="S" AND D1$(61,1)="Y" THEN IF EXT=0 THEN EXT=L[3] ELSE EXT=EXT ! SSP201983 jdf
10095 RETURN 
10099 ! **********************************************
10100 GET_RECV_NOW_QTY:! Look into PO7 and get true RECV_NOW_QTY
10110 RECV_NOW_QTY=0,PO7_KEY$=A$(82,9)+R1$(1,10)+A$(7,3); DIM J$(130),J[12]
10120 READ (Z[3],KEY=PO7_KEY$,DOM=*NEXT)
10125 GRN_LOOP:
10130 PO7_IN$=KEY(Z[3],END=GET_RECV_NOW_END); READ (Z[3],KEY=PO7_IN$)IOL=0420
10135 IF MID(PO7_IN$,1,LEN(PO7_KEY$))<>PO7_KEY$ THEN GOTO GET_RECV_NOW_END
10160 RECV_NOW_QTY+=J[0]
10162 IF NOT(NUL(X$)) THEN J$(45,6)=STR(NUM(X$(45,6)),ERR=*NEXT) ! SSP#307425-DBSPT-150085
10163 WRITE (Z(3),KEY=PO7_IN$)IOL=0420
10175 GOTO GRN_LOOP
10180 GET_RECV_NOW_END:
10195 RETURN 
10199 ! **********************************************
10300 LOAD_FOB:! Get the FOB table
10310 READ (_FMP,KEY="F",DOM=*NEXT)
10320 KEY_FMP$=KEY(_FMP,END=*RETURN); READ (_FMP,KEY=KEY_FMP$)FMP_REC$
10330 IF KEY_FMP$(1,1)<>"F" THEN RETURN 
10340 %PO_FOB$+=FMP_REC$(3,20)+"|"; %PO_FOB_V$+="fmp_rec$(2,1)"
10350 GOTO 10320
10390 RETURN 
10500 UPDATE_PO2:! SSP224978 jdf
10510 A[7]=0,A[8]=0,A[14]=0,A[12]=0,A[10]=0,A[16]=0,A[17]=0 ! SSP224978 jdf
10520 IF A[6]<0 THEN A[6]=0 ! SSP224978 jdf
10530 IF A[13]<0 THEN A[13]=0 ! SSP224978 jdf
10540 IF A[9]<0 THEN A[9]=0 ! SSP224978 jdf
10550 IF A[15]<0 THEN A[15]=0 ! SSP224978 jdf
10560 A[1]=A[11]-A[6] ! SSP224978 jdf
10570 A$(6,1)="" ! SSP224978 jdf
10580 WRITE (_PO2,KEY=A1$)IOL=0310 ! SSP224978 jdf
10590 RETURN ! SSP224978 jdf
10600 CHECK_FOR_LOT_INV:! SSP 211614
10605 LOT_INV=0
10610 IF %P9$(44,1)="Y" AND I$(112,1)="Y" THEN GOTO *NEXT ELSE GOTO *RETURN ! Only do check in POH if inventory SSP 211614
10615 PO7_FIND$=A$(82,9)+R1$(1,10)+A$(7,3)+" "
10620 FIND (Z[3],KEY=PO7_FIND$,DOM=10630)*; GOTO *RETURN
10640 PO7_CNT=0,POH_CNT=0,PO7_PO$="",PO7_HOLD$=A$(82,9)+R1$(1,10)+A$(7,3); DIM JJ$(130),JJ[12]
10645 READ (Z[3],KEY=A$(82,9)+"",DOM=10650)
10650 KEY7$=KEY(Z[3],END=10700); READ (Z[3],KEY=KEY7$)IOL=0430
10660 IF KEY7$(1,9)<>A$(82,9) THEN GOTO 10700
10670 IF KEY7$(20,3)<>A$(7,3) THEN GOTO 10650
10680 IF JJ$(10,10)<>DIM(10) THEN PO7_CNT=PO7_CNT+1,PO7_PO$=PO7_PO$+JJ$(10,10)
10690 GOTO 10650
10700 HOLD_POH$=PORDER$+LINE_NUM$
10710 READ (Z[38],KEY=HOLD_POH$,DOM=*NEXT)POH$
10720 POH_KEY$=KEY(Z[38],END=10750); READ (Z[38],KEY=POH_KEY$)POH$
10730 IF POH_KEY$(1,LEN(HOLD_POH$))<>HOLD_POH$ THEN GOTO 10750
10740 POH_CNT=1
10750 IF PO7_CNT=0 AND POH_CNT=0 THEN GOTO *RETURN
10760 IF R0$="r" THEN IF PO7_CNT>0 THEN GOTO 10810 ELSE GOTO *RETURN
10765 IF POGMAR_FRM_QTY THEN IF POH_CNT AND J$(1,23)=PO7_FIND$ THEN GOTO *RETURN ! SSP 241034
10770 IF POH_CNT AND POS(R1$(1,10)=PO7_PO$,10)=0 THEN GOTO 10800
10782 ! IF POGMAR_FRM_QTY THEN IF POH_CNT<>0 OR POS(R1$(1,10)=PO7_PO$,10)=0 THEN GOTO 10810
10790 GOTO *RETURN
10800 MSGBOX MSG("POGMAB_L1"),MSG("FYI"),"!"; GOTO 10830; REM "WO105690,SSP117282,SSP117663
10810 MSGBOX MSG("POGMAB_L2"),MSG("FYI"),"!" ! WO105690,SSP117282,SSP117663
10830 LOT_INV=1
10840 A6$=A1$
10890 RETURN 
10900 UPDATE_PO2_UNIT:! SSP238506 jdf
10903 A$(77,4)=UM$ ! SSP238506 jdf
10905 DIM U$(21),U[1]; FIND (_ZZPARM,KEY="U/M"+A$(77,4),DOM=1556)IOL=0400 ! SSP238506 jdf
10910 CALL "FM2EXT",_ZZPARM,0,A$(77,4),A[2],A[11],A[0],O0,M6[1]; EXT=O0; EXT$=STR(EXT); CALL "FM2EXT",_ZZPARM,1,A$(77,4),A[2],A[11],O0,A[4],M6[1]; TF_COST=O0; TF_COST$=STR(TF_COST); CALL "FM2EXT",_ZZPARM,2,A$(77,4),A[2],O0,A[0],A[4],M6[1]; REAL_QTY_ORDERED=O0; REAL_QTY_ORDERED$=STR(REAL_QTY_ORDERED); REFRESH_FLG=1 ! SSP238506 jdf
10915 IF MID(U$,20,1)="Y" THEN REAL_QTY_ORDERED$=REAL_QTY_ORDERED$ ELSE REAL_QTY_ORDERED$=STR(NUM(REAL_QTY_ORDERED$)*A[2]); END_IF ; REFRESH_FLG=1 ! SSP238506 jdf
10920 RETURN ! SSP238506 jdf
10930 UPDATE_PO2_QTY_UNIT:! SSP238506 jdf
10940 A[2]=NUM(UM_AMT$); CALL "FM2EXT",_ZZPARM,2,A$(77,4),A[2],O0,A[0],A[4],M6[1],REAL_QTY_ORDERED=O0; REAL_QTY_ORDERED$=STR(REAL_QTY_ORDERED); CALL "FM2EXT",_ZZPARM,1,A$(77,4),A[2],A[11],O0,A[4],M6[1]; TF_COST=O0; TF_COST$=STR(TF_COST); CALL "FM2EXT",_ZZPARM,0,A$(77,4),A[2],A[11],A[0],O0,M6[1]; EXT=O0; EXT$=STR(EXT); REFRESH_FLG=1 ! SSP238506 jdf
10942 REM A[11]=REAL_QTY_ORDERED,A[0]=TF_COST,A[4]=EXT ! SSP238506 jdf
10945 IF MID(U$,20,1)="Y" THEN REAL_QTY_ORDERED$=REAL_QTY_ORDERED$ ELSE REAL_QTY_ORDERED$=STR(NUM(REAL_QTY_ORDERED$)/A[2]); END_IF ; REFRESH_FLG=1 ! SSP238506 jdf
10950 RETURN ! SSP238506 jdf
10960 UPDATE_PO2_QUANTITY:! SSP238506 jdf
10970 IF MID(U$,20,1)="Y" THEN A[11]=NUM(REAL_QTY_ORDERED$) ELSE A[11]=NUM(REAL_QTY_ORDERED$)*A[2]; END_IF ; CALL "FM2EXT",_ZZPARM,0,A$(77,4),A[2],A[11],A[0],O0,M6[1]; EXT=O0; EXT$=STR(EXT); REFRESH_FLG=1 ! SSP238506 jdf
10980 RETURN ! SSP238506 jdf
10990 UPDATE_PO2_UNIT_COST:! SSP238506 jdf
11000 A[0]=NUM(TF_COST$); CALL "FM2EXT",_ZZPARM,0,A$(77,4),A[2],A[11],A[0],O0,M6[1]; EXT=O0; EXT$=STR(EXT); REFRESH_FLG=1 ! SSP238506 jdf
11010 RETURN ! SSP238506 jdf
11500 NEW_LABEL:! SSP238506 jdf
11505 CTN_PACK=NUM(CTN_PACK$) ! SSP238506 jdf
11510 IF A[11]=0 OR NUM(CTN_PACK$)=0 THEN LABEL_NUM=0 ELSE LABEL_NUM=INT(A[11]/NUM(CTN_PACK$)*1.1+.9); IF LABEL_NUM<0 THEN LABEL_NUM=0 ! SSP238506 jdf                             
11515 LABEL_NUM$=STR(LABEL_NUM) ! SSP238506 jdf
11520 REFRESH_FLG=1 ! SSP238506 jdf
11530 RETURN ! SSP238506 jdf
56000 REM "221289-Issue with po receiving when change cost on extension on    
56002 REM "223795-Tried to use the DELETE button in PO receiving and was      
56004 REM "224978-Program POGMAG Delete a PO receiving line and it will       
56005 ! "224634-I was just informed that we can not use LOT under GUI but   
56006 REM "229326-Cannot enter unit cost for spec chg on receiving line.  
56008 REM "226608-Order number 05-965112-1 In  PO receiving, getting order    
56010 REM "226608-Order number 05-965112-1 In  PO receiving, getting order    
56012 REM "233597-PE(040, POGMAB.1 - 2035) when in PO rec'g.                  
56014 REM "234296-PO receiving issues for Custom items and Special charges    
56016 REM "236973-Printing Open Purchase Order Report pending A/P and two     
56018 REM "237218-Why does Demandbridge now populate a negative quantity when 
56020 REM "211614-It seems that lots aren't getting setup in PO receiving     
56021 REM "239950-P/O Receiving-Multiple Vendor bill and Receivings in batch  
56022 REM "240415-Cannot zero out cost on an Extension only Special Charge.   
56024 REM "241034-Trying to PO receive a stock PO and trying to correct a line
56026 REM "239739-POGMAG - PO receiving will not allow you to receive addt'l  
56027 REM "242707-Cannot delete a PO Lot record after receiving has been      
56028 REM "262244-Message to reprint PL in GUI PO Receiving, only N works.    
56030 REM "262075-Parm to change default in PO Rec. reprint PL msg to No      
56031 REM "307425-DBSPT-150085 updating ess F2 to the AY7 file                
