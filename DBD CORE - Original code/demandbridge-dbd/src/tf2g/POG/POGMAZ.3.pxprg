0010 ! POGMAZ.3 - File Maintenance Program for PO3_POShip (="PO3"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Feb. 21, 2003 13:46
0030 ! ************************************************************************
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0115 B_KEY$=_KEY$
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="PO3"+%C$
0170 _PO3=HFN; OPEN (_PO3,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_PO3=HFN; OPEN (_CUR_PO3,IOL=*,REC=_CUR$)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=4
0430 DIM _KEYS$[1:4]; _KEYS$[1]="ORDER_LINE_NUM$",_KEYS$[2]="SEQ_NUM$",_KEYS$[3]="PO_DIV$",_KEYS$[4]="PO_NUM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0532 GOSUB LOAD_FOB; GOSUB LOAD_SHIP_VIA; GOSUB LOAD_SHIP_VIA_CODE
0535 IF PO_NUMBER$<>"" THEN ARG_1$=PO_NUMBER$+"    "
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_PO3,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_PO3,ERR=*NEXT)
0930 IF _PO3<>0 THEN CLOSE (_PO3); _PO3=0
0935 _KEY$=B_KEY$
0940 IF _CUR_PO3<>0 THEN CLOSE (_CUR_PO3); _CUR_PO3=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_PO3:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_PO3,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1415 FOB$=FOB_3$,HOW_TO_SHIP_CODE$=HOW_TO_SHIP_CODE_3$,INSIDE_DELIVERY$=INSIDE_DELIVERY_3$,SHIP_VIA_CODE$=SHIP_VIA_CODE_3$,SHIP_WITH$=SHIP_WITH_3$,MARK_FOR_3$=MARK_FOR$
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_PO3:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_PO3,KEY=_KEY$,ERR=NO_SUCH)
1670 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_REMOVE$+_R_KEY$,_FYI$,"INFO"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_PO3,END=END_OF_FILE)
2050 IF STP(_KEY$(9))<>"" THEN READ (_PO3); GOTO 2040
2060 READ (_PO3,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_PO3,KEY=_KEY$,END=END_OF_FILE); READ (_PO3,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_PO3,END=START_OF_FILE); READ (_PO3,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_PO3,KEY=_KEY$,END=START_OF_FILE); READ (_PO3,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_PO3,ERR=NO_FIRST)
2450 READ (_PO3,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_PO3,ERR=NO_LAST)
2650 READ (_PO3,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_PO3:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_PO3,ERR=*NEXT)),REC=_ORIPO3G$ TO IOL=IOL(_PO3) ! Save record for review
3060 CHANGE_FLG=0
3070 FOB_3$=FOB$,HOW_TO_SHIP_CODE_3$=HOW_TO_SHIP_CODE$,INSIDE_DELIVERY_3$=INSIDE_DELIVERY$,SHIP_VIA_CODE_3$=SHIP_VIA_CODE$,SHIP_WITH_3$=SHIP_WITH$,MARK_FOR$=MARK_FOR_3$
3080 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_PO3,KEY=KEC(_PO3),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:! IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!" 
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_PO3,KEY=_KEY$,ERR=WRITE_ERROR)
3330 _R_KEY$=KEC(_PO3); TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO"
3340 READ DATA FROM REC(IOL(_PO3,ERR=*NEXT)),REC=_ORIPO3G$ TO IOL=IOL(_PO3) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3365 NEXT_FOLDER=FLDR.POGMAZ.1.CTL,REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=LOC_CODE.CTL,_FIRST_FIELD=LOC_CODE.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 SHIP_QTY$=STR(SHIP_QTY)
10030 NUM_OF_LABELS$=STR(NUM_OF_LABELS)
10040 RECVD_TO_DATE$=STR(RECVD_TO_DATE)
10050 RECV_NOW_AMT$=STR(RECV_NOW_AMT)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="SHIP_QTY",_X=SHIP_QTY.CTL,SHIP_QTY=NUM(SHIP_QTY$,ERR=NON_NUMERIC)
11030 _X$="NUM_OF_LABELS",_X=NUM_OF_LABELS.CTL,NUM_OF_LABELS=NUM(NUM_OF_LABELS$,ERR=NON_NUMERIC)
11040 _X$="RECVD_TO_DATE",_X=RECVD_TO_DATE.CTL,RECVD_TO_DATE=NUM(RECVD_TO_DATE$,ERR=NON_NUMERIC)
11050 _X$="RECV_NOW_AMT",_X=RECV_NOW_AMT.CTL,RECV_NOW_AMT=NUM(RECV_NOW_AMT$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 CTN_LABEL_ITEM_CODE$=""
13030 EXPORTED_TO_SHIP$=""
13040 WHSE_CODE$=""
13050 IF _CLR_FLG$="R" THEN ORDER_LINE_NUM$=""
13060 IF _CLR_FLG$="R" THEN SEQ_NUM$=""
13070 LOC_TYPE$=""
13080 LOC_CODE$=""
13090 ATTN_NAME$=""
13100 LOC_ADDR_1$=""
13110 LOC_ADDR_2$=""
13120 LOC_CITY$=""
13130 LOC_ST$=""
13140 LOC_ZIP_CODE$=""
13150 FOB$=""
13160 HOW_TO_SHIP_CODE$=""
13170 INSIDE_DELIVERY$=""
13180 SHIP_VIA_CODE$=""
13190 SHIP_WITH$=""
13200 IF _CLR_FLG$="R" THEN PO_DIV$=""
13210 IF _CLR_FLG$="R" THEN PO_NUM$=""
13220 MARK_FOR$=""
13230 SHIP_VIA_DESC$=""
13240 COMP_NAME_TO_SHIP_TO$=""
13250 COST_CODE$=""
13260 STAX_CODE$=""
13270 TAX$=""
13280 CARTON_LABEL_2$=""
13290 NUMBER_CARTON_2ND_LBL$=""
13300 VENDOR_DIV$=""
13310 VENDOR_CODE$=""
13320 PLANT_CODE$=""
13330 EMAIL_ADDRESS$=""
13340 PO3_UNUSED_1$=""
13350 SHIP_QTY=0
13360 NUM_OF_LABELS=0
13370 RECVD_TO_DATE=0
13380 RECV_NOW_AMT=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=SEQ_NUM.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=PO_DIV.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=PO_NUM.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VARPO3$(37,"N")
15030 IF _ORIPO3G.CTN_LABEL_ITEM_CODE$=_CUR.CTN_LABEL_ITEM_CODE$ OR CTN_LABEL_ITEM_CODE$=_CUR.CTN_LABEL_ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.CTN_LABEL_ITEM_CODE$=CTN_LABEL_ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CTN_L_I_C")+" = "+_CUR.CTN_LABEL_ITEM_CODE$,_CHG_VARPO3$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_L_I_C")+" = "+_CUR.CTN_LABEL_ITEM_CODE$
15040 IF _ORIPO3G.EXPORTED_TO_SHIP$=_CUR.EXPORTED_TO_SHIP$ OR EXPORTED_TO_SHIP$=_CUR.EXPORTED_TO_SHIP$ THEN GOTO *NEXT ELSE IF _ORIPO3G.EXPORTED_TO_SHIP$=EXPORTED_TO_SHIP$ THEN _CHG2$=_CHG2$+SEP+MSG("EXPO_T_S")+" = "+_CUR.EXPORTED_TO_SHIP$,_CHG_VARPO3$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("EXPO_T_S")+" = "+_CUR.EXPORTED_TO_SHIP$
15050 IF _ORIPO3G.WHSE_CODE$=_CUR.WHSE_CODE$ OR WHSE_CODE$=_CUR.WHSE_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.WHSE_CODE$=WHSE_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("WHSE_CODE")+" = "+_CUR.WHSE_CODE$,_CHG_VARPO3$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WHSE_CODE")+" = "+_CUR.WHSE_CODE$
15060 IF _ORIPO3G.ORDER_LINE_NUM$=_CUR.ORDER_LINE_NUM$ OR ORDER_LINE_NUM$=_CUR.ORDER_LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIPO3G.ORDER_LINE_NUM$=ORDER_LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_L_N")+" = "+_CUR.ORDER_LINE_NUM$,_CHG_VARPO3$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_L_N")+" = "+_CUR.ORDER_LINE_NUM$
15070 IF _ORIPO3G.SEQ_NUM$=_CUR.SEQ_NUM$ OR SEQ_NUM$=_CUR.SEQ_NUM$ THEN GOTO *NEXT ELSE IF _ORIPO3G.SEQ_NUM$=SEQ_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$,_CHG_VARPO3$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$
15080 IF _ORIPO3G.LOC_TYPE$=_CUR.LOC_TYPE$ OR LOC_TYPE$=_CUR.LOC_TYPE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.LOC_TYPE$=LOC_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_TYPE")+" = "+_CUR.LOC_TYPE$,_CHG_VARPO3$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_TYPE")+" = "+_CUR.LOC_TYPE$
15090 IF _ORIPO3G.LOC_CODE$=_CUR.LOC_CODE$ OR LOC_CODE$=_CUR.LOC_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.LOC_CODE$=LOC_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_CODE")+" = "+_CUR.LOC_CODE$,_CHG_VARPO3$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_CODE")+" = "+_CUR.LOC_CODE$
15100 IF _ORIPO3G.ATTN_NAME$=_CUR.ATTN_NAME$ OR ATTN_NAME$=_CUR.ATTN_NAME$ THEN GOTO *NEXT ELSE IF _ORIPO3G.ATTN_NAME$=ATTN_NAME$ THEN _CHG2$=_CHG2$+SEP+MSG("ATTN_NAME")+" = "+_CUR.ATTN_NAME$,_CHG_VARPO3$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ATTN_NAME")+" = "+_CUR.ATTN_NAME$
15110 IF _ORIPO3G.LOC_ADDR_1$=_CUR.LOC_ADDR_1$ OR LOC_ADDR_1$=_CUR.LOC_ADDR_1$ THEN GOTO *NEXT ELSE IF _ORIPO3G.LOC_ADDR_1$=LOC_ADDR_1$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_ADDR_1")+" = "+_CUR.LOC_ADDR_1$,_CHG_VARPO3$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_ADDR_1")+" = "+_CUR.LOC_ADDR_1$
15120 IF _ORIPO3G.LOC_ADDR_2$=_CUR.LOC_ADDR_2$ OR LOC_ADDR_2$=_CUR.LOC_ADDR_2$ THEN GOTO *NEXT ELSE IF _ORIPO3G.LOC_ADDR_2$=LOC_ADDR_2$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_ADDR_2")+" = "+_CUR.LOC_ADDR_2$,_CHG_VARPO3$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_ADDR_2")+" = "+_CUR.LOC_ADDR_2$
15130 IF _ORIPO3G.LOC_CITY$=_CUR.LOC_CITY$ OR LOC_CITY$=_CUR.LOC_CITY$ THEN GOTO *NEXT ELSE IF _ORIPO3G.LOC_CITY$=LOC_CITY$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_CITY")+" = "+_CUR.LOC_CITY$,_CHG_VARPO3$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_CITY")+" = "+_CUR.LOC_CITY$
15140 IF _ORIPO3G.LOC_ST$=_CUR.LOC_ST$ OR LOC_ST$=_CUR.LOC_ST$ THEN GOTO *NEXT ELSE IF _ORIPO3G.LOC_ST$=LOC_ST$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_ST")+" = "+_CUR.LOC_ST$,_CHG_VARPO3$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_ST")+" = "+_CUR.LOC_ST$
15150 IF _ORIPO3G.LOC_ZIP_CODE$=_CUR.LOC_ZIP_CODE$ OR LOC_ZIP_CODE$=_CUR.LOC_ZIP_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.LOC_ZIP_CODE$=LOC_ZIP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ZIP_CODE")+" = "+_CUR.LOC_ZIP_CODE$,_CHG_VARPO3$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ZIP_CODE")+" = "+_CUR.LOC_ZIP_CODE$
15160 IF _ORIPO3G.FOB$=_CUR.FOB$ OR FOB$=_CUR.FOB$ THEN GOTO *NEXT ELSE IF _ORIPO3G.FOB$=FOB$ THEN _CHG2$=_CHG2$+SEP+MSG("FOB")+" = "+_CUR.FOB$,_CHG_VARPO3$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FOB")+" = "+_CUR.FOB$
15170 IF _ORIPO3G.HOW_TO_SHIP_CODE$=_CUR.HOW_TO_SHIP_CODE$ OR HOW_TO_SHIP_CODE$=_CUR.HOW_TO_SHIP_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.HOW_TO_SHIP_CODE$=HOW_TO_SHIP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("HOW_T_S_C")+" = "+_CUR.HOW_TO_SHIP_CODE$,_CHG_VARPO3$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HOW_T_S_C")+" = "+_CUR.HOW_TO_SHIP_CODE$
15180 IF _ORIPO3G.INSIDE_DELIVERY$=_CUR.INSIDE_DELIVERY$ OR INSIDE_DELIVERY$=_CUR.INSIDE_DELIVERY$ THEN GOTO *NEXT ELSE IF _ORIPO3G.INSIDE_DELIVERY$=INSIDE_DELIVERY$ THEN _CHG2$=_CHG2$+SEP+MSG("INSI_D")+" = "+_CUR.INSIDE_DELIVERY$,_CHG_VARPO3$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INSI_D")+" = "+_CUR.INSIDE_DELIVERY$
15190 IF _ORIPO3G.SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$ OR SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.SHIP_VIA_CODE$=SHIP_VIA_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_V_C")+" = "+_CUR.SHIP_VIA_CODE$,_CHG_VARPO3$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_V_C")+" = "+_CUR.SHIP_VIA_CODE$
15200 IF _ORIPO3G.SHIP_WITH$=_CUR.SHIP_WITH$ OR SHIP_WITH$=_CUR.SHIP_WITH$ THEN GOTO *NEXT ELSE IF _ORIPO3G.SHIP_WITH$=SHIP_WITH$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_WITH")+" = "+_CUR.SHIP_WITH$,_CHG_VARPO3$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_WITH")+" = "+_CUR.SHIP_WITH$
15210 IF _ORIPO3G.PO_DIV$=_CUR.PO_DIV$ OR PO_DIV$=_CUR.PO_DIV$ THEN GOTO *NEXT ELSE IF _ORIPO3G.PO_DIV$=PO_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_DIV")+" = "+_CUR.PO_DIV$,_CHG_VARPO3$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_DIV")+" = "+_CUR.PO_DIV$
15220 IF _ORIPO3G.PO_NUM$=_CUR.PO_NUM$ OR PO_NUM$=_CUR.PO_NUM$ THEN GOTO *NEXT ELSE IF _ORIPO3G.PO_NUM$=PO_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_NUM")+" = "+_CUR.PO_NUM$,_CHG_VARPO3$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_NUM")+" = "+_CUR.PO_NUM$
15230 IF _ORIPO3G.MARK_FOR$=_CUR.MARK_FOR$ OR MARK_FOR$=_CUR.MARK_FOR$ THEN GOTO *NEXT ELSE IF _ORIPO3G.MARK_FOR$=MARK_FOR$ THEN _CHG2$=_CHG2$+SEP+MSG("MARK_FOR")+" = "+_CUR.MARK_FOR$,_CHG_VARPO3$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MARK_FOR")+" = "+_CUR.MARK_FOR$
15240 IF _ORIPO3G.SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$ OR SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$ THEN GOTO *NEXT ELSE IF _ORIPO3G.SHIP_VIA_DESC$=SHIP_VIA_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_V_D")+" = "+_CUR.SHIP_VIA_DESC$,_CHG_VARPO3$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_V_D")+" = "+_CUR.SHIP_VIA_DESC$
15250 IF _ORIPO3G.COMP_NAME_TO_SHIP_TO$=_CUR.COMP_NAME_TO_SHIP_TO$ OR COMP_NAME_TO_SHIP_TO$=_CUR.COMP_NAME_TO_SHIP_TO$ THEN GOTO *NEXT ELSE IF _ORIPO3G.COMP_NAME_TO_SHIP_TO$=COMP_NAME_TO_SHIP_TO$ THEN _CHG2$=_CHG2$+SEP+MSG("C_N_T_S_T")+" = "+_CUR.COMP_NAME_TO_SHIP_TO$,_CHG_VARPO3$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("C_N_T_S_T")+" = "+_CUR.COMP_NAME_TO_SHIP_TO$
15260 IF _ORIPO3G.COST_CODE$=_CUR.COST_CODE$ OR COST_CODE$=_CUR.COST_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.COST_CODE$=COST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("COST_CODE")+" = "+_CUR.COST_CODE$,_CHG_VARPO3$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_CODE")+" = "+_CUR.COST_CODE$
15270 IF _ORIPO3G.STAX_CODE$=_CUR.STAX_CODE$ OR STAX_CODE$=_CUR.STAX_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.STAX_CODE$=STAX_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("STAX_CODE")+" = "+_CUR.STAX_CODE$,_CHG_VARPO3$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("STAX_CODE")+" = "+_CUR.STAX_CODE$
15280 IF _ORIPO3G.TAX$=_CUR.TAX$ OR TAX$=_CUR.TAX$ THEN GOTO *NEXT ELSE IF _ORIPO3G.TAX$=TAX$ THEN _CHG2$=_CHG2$+SEP+MSG("TAX")+" = "+_CUR.TAX$,_CHG_VARPO3$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TAX")+" = "+_CUR.TAX$
15290 IF _ORIPO3G.CARTON_LABEL_2$=_CUR.CARTON_LABEL_2$ OR CARTON_LABEL_2$=_CUR.CARTON_LABEL_2$ THEN GOTO *NEXT ELSE IF _ORIPO3G.CARTON_LABEL_2$=CARTON_LABEL_2$ THEN _CHG2$=_CHG2$+SEP+MSG("CTN_L_I_C2")+" = "+_CUR.CARTON_LABEL_2$,_CHG_VARPO3$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_L_I_C2")+" = "+_CUR.CARTON_LABEL_2$
15300 IF _ORIPO3G.NUMBER_CARTON_2ND_LBL$=_CUR.NUMBER_CARTON_2ND_LBL$ OR NUMBER_CARTON_2ND_LBL$=_CUR.NUMBER_CARTON_2ND_LBL$ THEN GOTO *NEXT ELSE IF _ORIPO3G.NUMBER_CARTON_2ND_LBL$=NUMBER_CARTON_2ND_LBL$ THEN _CHG2$=_CHG2$+SEP+MSG("NUM_CTN2")+" = "+_CUR.NUMBER_CARTON_2ND_LBL$,_CHG_VARPO3$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NUM_CTN2")+" = "+_CUR.NUMBER_CARTON_2ND_LBL$
15310 IF _ORIPO3G.VENDOR_DIV$=_CUR.VENDOR_DIV$ OR VENDOR_DIV$=_CUR.VENDOR_DIV$ THEN GOTO *NEXT ELSE IF _ORIPO3G.VENDOR_DIV$=VENDOR_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VENDOR_DIV$,_CHG_VARPO3$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VENDOR_DIV$
15320 IF _ORIPO3G.VENDOR_CODE$=_CUR.VENDOR_CODE$ OR VENDOR_CODE$=_CUR.VENDOR_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.VENDOR_CODE$=VENDOR_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VENDOR_CODE$,_CHG_VARPO3$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VENDOR_CODE$
15330 IF _ORIPO3G.PLANT_CODE$=_CUR.PLANT_CODE$ OR PLANT_CODE$=_CUR.PLANT_CODE$ THEN GOTO *NEXT ELSE IF _ORIPO3G.PLANT_CODE$=PLANT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$,_CHG_VARPO3$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$
15340 IF _ORIPO3G.EMAIL_ADDRESS$=_CUR.EMAIL_ADDRESS$ OR EMAIL_ADDRESS$=_CUR.EMAIL_ADDRESS$ THEN GOTO *NEXT ELSE IF _ORIPO3G.EMAIL_ADDRESS$=EMAIL_ADDRESS$ THEN _CHG2$=_CHG2$+SEP+MSG("EMAIL_A")+" = "+_CUR.EMAIL_ADDRESS$,_CHG_VARPO3$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("EMAIL_A")+" = "+_CUR.EMAIL_ADDRESS$
15350 IF _ORIPO3G.PO3_UNUSED_1$=_CUR.PO3_UNUSED_1$ OR PO3_UNUSED_1$=_CUR.PO3_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIPO3G.PO3_UNUSED_1$=PO3_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.PO3_UNUSED_1$,_CHG_VARPO3$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.PO3_UNUSED_1$
15360 IF _ORIPO3G.SHIP_QTY=_CUR.SHIP_QTY OR SHIP_QTY=_CUR.SHIP_QTY THEN GOTO *NEXT ELSE IF _ORIPO3G.SHIP_QTY=SHIP_QTY THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_QTY")+" = "+STR(_CUR.SHIP_QTY),_CHG_VARPO3$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_QTY")+" = "+STR(_CUR.SHIP_QTY)
15370 IF _ORIPO3G.NUM_OF_LABELS=_CUR.NUM_OF_LABELS OR NUM_OF_LABELS=_CUR.NUM_OF_LABELS THEN GOTO *NEXT ELSE IF _ORIPO3G.NUM_OF_LABELS=NUM_OF_LABELS THEN _CHG2$=_CHG2$+SEP+MSG("NUM_O_L")+" = "+STR(_CUR.NUM_OF_LABELS),_CHG_VARPO3$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NUM_O_L")+" = "+STR(_CUR.NUM_OF_LABELS)
15380 IF _ORIPO3G.RECVD_TO_DATE=_CUR.RECVD_TO_DATE OR RECVD_TO_DATE=_CUR.RECVD_TO_DATE THEN GOTO *NEXT ELSE IF _ORIPO3G.RECVD_TO_DATE=RECVD_TO_DATE THEN _CHG2$=_CHG2$+SEP+MSG("RECV_T_D")+" = "+STR(_CUR.RECVD_TO_DATE),_CHG_VARPO3$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RECV_T_D")+" = "+STR(_CUR.RECVD_TO_DATE)
15390 IF _ORIPO3G.RECV_NOW_AMT=_CUR.RECV_NOW_AMT OR RECV_NOW_AMT=_CUR.RECV_NOW_AMT THEN GOTO *NEXT ELSE IF _ORIPO3G.RECV_NOW_AMT=RECV_NOW_AMT THEN _CHG2$=_CHG2$+SEP+MSG("RECV_N_A")+" = "+STR(_CUR.RECV_NOW_AMT),_CHG_VARPO3$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RECV_N_A")+" = "+STR(_CUR.RECV_NOW_AMT)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VARPO3$(1,1)="Y" THEN CTN_LABEL_ITEM_CODE$=_CUR.CTN_LABEL_ITEM_CODE$
16030 IF _CHG_VARPO3$(2,1)="Y" THEN EXPORTED_TO_SHIP$=_CUR.EXPORTED_TO_SHIP$
16040 IF _CHG_VARPO3$(3,1)="Y" THEN WHSE_CODE$=_CUR.WHSE_CODE$
16050 IF _CHG_VARPO3$(4,1)="Y" THEN ORDER_LINE_NUM$=_CUR.ORDER_LINE_NUM$
16060 IF _CHG_VARPO3$(5,1)="Y" THEN SEQ_NUM$=_CUR.SEQ_NUM$
16070 IF _CHG_VARPO3$(6,1)="Y" THEN LOC_TYPE$=_CUR.LOC_TYPE$
16080 IF _CHG_VARPO3$(7,1)="Y" THEN LOC_CODE$=_CUR.LOC_CODE$
16090 IF _CHG_VARPO3$(8,1)="Y" THEN ATTN_NAME$=_CUR.ATTN_NAME$
16100 IF _CHG_VARPO3$(9,1)="Y" THEN LOC_ADDR_1$=_CUR.LOC_ADDR_1$
16110 IF _CHG_VARPO3$(10,1)="Y" THEN LOC_ADDR_2$=_CUR.LOC_ADDR_2$
16120 IF _CHG_VARPO3$(11,1)="Y" THEN LOC_CITY$=_CUR.LOC_CITY$
16130 IF _CHG_VARPO3$(12,1)="Y" THEN LOC_ST$=_CUR.LOC_ST$
16140 IF _CHG_VARPO3$(13,1)="Y" THEN LOC_ZIP_CODE$=_CUR.LOC_ZIP_CODE$
16150 IF _CHG_VARPO3$(14,1)="Y" THEN FOB$=_CUR.FOB$
16160 IF _CHG_VARPO3$(15,1)="Y" THEN HOW_TO_SHIP_CODE$=_CUR.HOW_TO_SHIP_CODE$
16170 IF _CHG_VARPO3$(16,1)="Y" THEN INSIDE_DELIVERY$=_CUR.INSIDE_DELIVERY$
16180 IF _CHG_VARPO3$(17,1)="Y" THEN SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$
16190 IF _CHG_VARPO3$(18,1)="Y" THEN SHIP_WITH$=_CUR.SHIP_WITH$
16200 IF _CHG_VARPO3$(19,1)="Y" THEN PO_DIV$=_CUR.PO_DIV$
16210 IF _CHG_VARPO3$(20,1)="Y" THEN PO_NUM$=_CUR.PO_NUM$
16220 IF _CHG_VARPO3$(21,1)="Y" THEN MARK_FOR$=_CUR.MARK_FOR$
16230 IF _CHG_VARPO3$(22,1)="Y" THEN SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$
16240 IF _CHG_VARPO3$(23,1)="Y" THEN COMP_NAME_TO_SHIP_TO$=_CUR.COMP_NAME_TO_SHIP_TO$
16250 IF _CHG_VARPO3$(24,1)="Y" THEN COST_CODE$=_CUR.COST_CODE$
16260 IF _CHG_VARPO3$(25,1)="Y" THEN STAX_CODE$=_CUR.STAX_CODE$
16270 IF _CHG_VARPO3$(26,1)="Y" THEN TAX$=_CUR.TAX$
16280 IF _CHG_VARPO3$(27,1)="Y" THEN CARTON_LABEL_2$=_CUR.CARTON_LABEL_2$
16290 IF _CHG_VARPO3$(28,1)="Y" THEN NUMBER_CARTON_2ND_LBL$=_CUR.NUMBER_CARTON_2ND_LBL$
16300 IF _CHG_VARPO3$(29,1)="Y" THEN VENDOR_DIV$=_CUR.VENDOR_DIV$
16310 IF _CHG_VARPO3$(30,1)="Y" THEN VENDOR_CODE$=_CUR.VENDOR_CODE$
16320 IF _CHG_VARPO3$(31,1)="Y" THEN PLANT_CODE$=_CUR.PLANT_CODE$
16330 IF _CHG_VARPO3$(32,1)="Y" THEN EMAIL_ADDRESS$=_CUR.EMAIL_ADDRESS$
16340 IF _CHG_VARPO3$(33,1)="Y" THEN PO3_UNUSED_1$=_CUR.PO3_UNUSED_1$
16350 IF _CHG_VARPO3$(34,1)="Y" THEN SHIP_QTY=_CUR.SHIP_QTY
16360 IF _CHG_VARPO3$(35,1)="Y" THEN NUM_OF_LABELS=_CUR.NUM_OF_LABELS
16370 IF _CHG_VARPO3$(36,1)="Y" THEN RECVD_TO_DATE=_CUR.RECVD_TO_DATE
16380 IF _CHG_VARPO3$(37,1)="Y" THEN RECV_NOW_AMT=_CUR.RECV_NOW_AMT
16990 RETURN 
17000 LOAD_FOB: DB_CTL=FOB1.CTL,DB_KEY$="F",DB_CODE$=FOB$; PERFORM "FMGODX;LOAD_FMP_DROP_BOX"; RETURN 
17010 SEL_FOB:
17030 RETURN 
17040 LOAD_SHIP_VIA: DB_CTL=FOB2.CTL,DB_KEY$="H",DB_CODE$=HOW_TO_SHIP_CODE$; PERFORM "FMGODX;LOAD_FMP_DROP_BOX"; RETURN 
17050 LOAD_SHIP_VIA_CODE: DB_CTL=FOB2.CTL,DB_KEY$="S",DB_CODE$=SHIP_VIA_CODE$; PERFORM "FMGODX;LOAD_FMP_DROP_BOX"; RETURN 
17060 SEL_SHIP_VIA_CODE:
17070 TEMP_SHIP$=%SHIP_VIA_CT$,XXX=POS("/"+SHIP_VIA_CODE$=%SHIP_VIA_CT$),TEMP_SHIP$=TEMP_SHIP$(XXX+3),XXX=POS("/"=TEMP_SHIP$),SHIP_VIA_DESC$=TEMP_SHIP$(1,XXX-1),REFRESH_FLG=1
17080 RETURN 
