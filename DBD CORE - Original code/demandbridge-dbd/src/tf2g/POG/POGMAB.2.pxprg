0010 ! POGMAB.2 - File Maintenance Program for AT5_Stock PO Entry (="AT5"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Nov. 27, 2002 10:15
0030 ! ************************************************************************
0035 REM "5.7 - 11/18/14 - 16.136111 - tma - SSP# 273350
0037 REM "273350-Stock PO.  Is not pulling the correct # of Carton Labels.   
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "POGMAB.2","../POG/PO.EN",PO_NUM$
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 X0$="POGMAB.2",X1$="Cash Receipts Entry"
0125 X2=-1; X0=-1; DEL_FLG=0
0130 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0140 DIM Z[NUM(X3$(60,3))],AP4[1],PO2[27],PO3[3],AR1[15],AP2[1],FS2[12],IC0[40],FMP[2]
0150 Z$="01O PO2...  02O AP4...  03O FM0...  04O AR1...  05O AP2...  06O ZZPARM  07O PO4...  08O PO5...  09O PO2...  10O IC0...  11O FS1...  12O FMP...  "
0153 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0155 ! 
0160 IOLIST PO2$,PO2{ALL}
0170 IOLIST AP4$,AP4{ALL}
0180 IOLIST FM0$
0190 IOLIST AR1$,AR1{ALL}
0200 IOLIST AP2$,AP2{ALL}
0210 IOLIST IC0$,IC0{ALL}
0220 IOLIST FMP$,FMP{ALL}
0300 ! setup messages
0400 ! 
0410 GOSUB GET_PARAM
0460 ! 
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 IF STP(ARG_1$)<>"" THEN PO_NUMBER$=ARG_1$ ELSE CMD_STR$="END"; EXIT 
0530 GOSUB FIND_REC
0560 REFRESH_FLG=1
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 %CUST_DIV$=""; %CUST_CODE$=""; %CUSTOMER$=""; %SFMP$=""; %P4$="" ! SSP233940 jdf
0930 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! Get Purchase Order Information
1010 FIND_REC:
1015 IF NUL(PO_NUMBER$) THEN RETURN 
1020 KEY_1$=PO_NUMBER$; %GRID=0
1030 READ (Z[1],KEY=PO_NUMBER$,DOM=NEW_PO)IOL=0160
1040 ! 
1050 UM_AMT=PO2(2); GOSUB LOAD_INFO ! SSP 218981
1060 ! 
1070 CALL "*wingrp;Enable",BUTTONS.GRP$
1080 REFRESH_FLG=1
1090 RETURN 
2000 ! Load the Initial screen
2010 LOAD_INFO:
2020 LINE_NUM$=PO2$(7,3); LINE_TYPE$=PO2$(10,1); SPECS_REQ$=PO2$(81,1)
2025 GOSUB SEL_LINE_TYPE
2030 SPECIAL_SHIPPING$=PO2$(14,1); ITEM_CODE$=PO2$(101,10); PROD_CODE$=PO2$(25,3)
2040 LEFT_RIGHT$=PO2$(17,8); TOP_BOTTOM$=PO2$(111,8); PLYS$=PO2$(15,2)
2050 DESC$=PO2$(28,40); STARTING_NUM$=PO2$(68,9); UM$=PO2$(77,4)
2053 IF STP(LINE_TYPE$)="M" THEN RETURN 
2055 UNIT$=UM$; GOSUB UM_PARAM; IF P4$(20,1)="Y" THEN CALL "*wingrp;Disable",UM_A.GRP$ ELSE CALL "*wingrp;Enable",UM_A.GRP$
2057 QTY=FN%QTY_IN_UM(PO2[11],PO2$(77,4),PO2[2])
2060 UM_AMT=PO2[2]; REAL_QTY_ORDERED=QTY; QTY_ORD=PO2[11]; TF_COST=PO2[0] ! SSP#216590 
2065 IF QTY=0 AND LINE_TYPE$="N" THEN CALL "*wingrp;Disable",SPS.GRP$
2070 EXT=PO2[4]; CTN_PACK=PO2[5]; LABEL_NUM=PO2[3]
2080 STORAGE_EXP_DATE$=PO2$(150,6); PROD_CODE_OVERRIDE$=PO2$(156,3)
2160 IF SPECIAL_SHIPPING$="Y" THEN CALL "*WINGRP;SHOW",SPEC_SHIP.GRP$ ELSE CALL "*WINGRP;HIDE",SPEC_SHIP.GRP$
2170 IF SPECS_REQ$="Y" THEN CALL "*WINGRP;SHOW",SPEC_1.GRP$ ELSE CALL "*WINGRP;HIDE",SPEC_1.GRP$
2180 REFRESH_FLG=1
2182 SELL_UM$=PO2$(146,4),SELL_QTY_UM=PO2[20],SELL_UNIT_PRICE=PO2[21] ! SSP 199368
2185 UNIT$=SELL_UM$; GOSUB UM_PARAM; IF P4$(20,1)="Y" THEN CALL "*wingrp;Disable",UM_S.GRP$ ELSE CALL "*wingrp;Enable",UM_S.GRP$ ! SSP 199368
2187 DB_MONTHS.CTL'CURRENTITEM=PO2[24]+1,COMM_CODE$=PO2$(159,5),STND_COST_UOM$=PO2$(164,4),STND_COST_QTY_PER=PO2(23),STND_UNIT_COST=PO2(22)
2190 RETURN 
2300 ! Load the Record
2310 LOAD_RECORD:
2320 PO2$(7,3)=LINE_NUM$; PO2$(10,1)=LINE_TYPE$; PO2$(81,1)=SPECS_REQ$
2330 PO2$(14,1)=SPECIAL_SHIPPING$; PO2$(101,10)=ITEM_CODE$; PO2$(25,3)=PROD_CODE$
2340 PO2$(17,8)=LEFT_RIGHT$; PO2$(111,8)=TOP_BOTTOM$; PO2$(15,2)=PLYS$
2350 PO2$(28,40)=DESC$; PO2$(68,9)=STARTING_NUM$; PO2$(77,4)=UM$
2360 PO2[2]=UM_AMT; PO2[11]=QTY_ORD; PO2[1]=QTY_ORD; PO2[0]=TF_COST ! SSP#216590    
2370 PO2[4]=EXT; PO2[5]=CTN_PACK; PO2[3]=LABEL_NUM
2380 PO2$(150,6)=STORAGE_EXP_DATE$; PO2$(156,3)=PROD_CODE_OVERRIDE$
2390 PO2$(146,4)=SELL_UM$,PO2[20]=SELL_QTY_UM,PO2[21]=SELL_UNIT_PRICE ! SSP 199368
2490 RETURN 
3000 ! Get the Vendor's Information.
3010 SEL_LINE_TYPE:
3015 IF NUL(LINE_TYPE$) THEN RETURN ELSE CALL "*WINGRP;DISABLE",FIELDS.GRP$
3020 SWITCH LINE_TYPE$
3030 CASE "M"
3040 CALL "*wingrp;Enable",MSG_1.GRP$; CALL "*wingrp;Unlock",MSG_1.GRP$
3045 BREAK
3050 CASE "I"
3055 CALL "*wingrp;Enable",INV.GRP$
3060 CALL "*wingrp;Enable",SPS.GRP$
3065 IF P0$(64,1)="Y" THEN CALL "*wingrp;Enable",OVER.GRP$
3070 IF PO2$(81,1)="Y" THEN CALL "*wingrp;Enable",SPEC.GRP$
3075 BREAK
3080 CASE "N"
3085 CALL "*wingrp;Enable",INV.GRP$
3090 CALL "*wingrp;Disable",SPEC.GRP$
3095 CALL "*wingrp;Unlock",MSG_1.GRP$
3100 CALL "*wingrp;Enable",SPS.GRP$
3105 BREAK
3110 CASE "S"
3115 CALL "*wingrp;Enable",INV.GRP$
3120 CALL "*wingrp;Disable",SPEC.GRP$
3125 CALL "*wingrp;Enable",SPS.GRP$
3130 BREAK
3140 CASE "C" ! SSP234952 jdf
3145 CALL "*wingrp;Enable",SPS.GRP$ ! SSP234952 jdf
3150 BREAK ! SSP234952 jdf
3160 END SWITCH 
3180 REFRESH_FLG=1
3190 RETURN 
3200 ! Get Vendor's Shipping Location
3210 GET_PLANT_CODE:
3215 IF STP(PLANT_CODE$)<>"" THEN PLANT_CODE$=PAD(PLANT_CODE$,4,0,"0") ELSE RETURN 
3220 KEY_3$="P"+VENDOR$+PLANT_CODE$
3230 READ (Z[3],KEY=KEY_3$,DOM=*RETURN)IOL=0180
3240 PLANT_NAME$=FM0$(16,35); PLANT_ATTN$=FM0$(160,20)
3250 PLANT_ADDR_1$=FM0$(51,30); PLANT_ADDR_2$=FM0$(81,30)
3260 PLANT_CITY$=FM0$(111,16); PLANT_ST$=FM0$(127,2); PLANT_ZIP_CODE$=FM0$(129,9)
3280 REFRESH_FLG=1
3290 RETURN 
3400 ! Calculate the Label Pack
3410 CALC_PACK:
3420 IF LINE_TYPE$<>"I" AND LINE_TYPE$<>"N" THEN RETURN 
3430 REM LABEL_NUM=(REAL_QTY_ORDERED*UM_AMT)/CTN_PACK; IF FPT(LABEL_NUM)>0 THEN LABEL_NUM=INT(LABEL_NUM)+1 ! SSP217692 jdf
3470 NEW_LABEL:! SSP217692 jdf
3475 FIND (Z[12],KEY="T"+PO2$(25,3),DOM=*NEXT)FMPT$ ! SSP#273350 
3478 IF REAL_QTY_ORDERED=0 OR CTN_PACK=0 OR MID(FMPT$,22,1)="N" THEN LABEL_NUM=0 ELSE LABEL_NUM=INT(PO2[11]/CTN_PACK*1.1+.9); IF LABEL_NUM<0 THEN LABEL_NUM=0 ! SSP217692 jdf!SSP#273350 
3480 REFRESH_FLG=1
3490 RETURN 
3600 ! get Item Code Information
3610 GET_ITEM_CODE:
3620 ITEM_CODE$=PAD(ITEM_CODE$,10,1," ")
3630 IF LINE_TYPE$="I" THEN READ (Z[10],KEY="          "+ITEM_CODE$,DOM=INV_ITEM)IOL=0210; GOSUB LOAD_INV_ITEM
3650 IF LINE_TYPE$="S" THEN READ (Z[12],KEY="X"+ITEM_CODE$,DOM=INV_ITEM)IOL=0220; GOSUB LOAD_FMP_ITEM
3680 REFRESH_FLG=1
3690 RETURN 
3800 ! Load additional Information for Inventory Items
3810 LOAD_INV_ITEM:
3820 PLYS$=IC0$(80,2); LEFT_RIGHT$=IC0$(64,8)
3830 PROD_CODE$=IC0$(61,3); DESC$=IC0$(21,40)
3840 UM$=IC0$(124,4)
3850 TOP_BOTTOM$=IC0$(72,8)
3860 TF_COST=IC0[18] ! SSP#216590
3870 CTN_PACK=IC0[19]
3890 RETURN 
3900 ! load Additional Information For FMP Items
3910 LOAD_FMP_ITEM:
3920 DESC$=FMP$(12,40)
3930 PROD_CODE$=FMP$(52,3); UM$=FMP$(55,4)
3940 TF_COST=FMP[2] ! SSP#216590
3950 RETURN 
4000 ! Update Record
4010 WRITE_REC:
4040 WRITE (Z[1],KEY=KEY_1$)IOL=0160
4060 IF LINE_TYPE$="N" AND PO2[11]>0 THEN CALL "*wingrp;Enable",SPS.GRP$
4080 REFRESH_FLG=1
4090 RETURN 
4100 ! Delete Line Record
4110 DELETE_REC:
4120 MSGBOX MSG("DELETE_REC"),MSG("VERIFY"),"?,YesNo",ANS$
4130 IF ANS$="NO" THEN RETURN 
4135 IF DELETE_HIDE THEN MSGBOX "Access Denied, this Purchase Order has been received, you may not delete it",MSG("WARNING"),"!"; RETURN ! SSP229416 jdf 
4140 REMOVE (Z[1],KEY=KEY_1$)
4150 CMD_STR$="END"
4160 %DEL_FLG=1
4190 EXIT 
5000 ! Unit of Measure
5010 UM_PROCESS:
5020 UM$=PAD(UM$,4)
5030 UNIT$=UM$
5040 GOSUB UM_PARAM
5050 IF P3=0 THEN P3=1
5060 UM_AMT=P3
5065 REAL_QTY_ORDERED=0,REAL_QTY_ORDERED$=""
5070 IF REAL_QTY_ORDERED<>0 THEN IF P4$(20,1)="Y" THEN IF P3=0 THEN P3=1; END_IF ; QTY=REAL_QTY_ORDERED/P3 ELSE QTY=REAL_QTY_ORDERED*PO2[2] ! SSP 218981
5075 ! IF REAL_QTY_ORDERED<>0 THEN QTY=FN%QTY_IN_UM(REAL_QTY_ORDERED,UM$,UM_AMT)
5076 IF MID(P4$,20,1)="Y" THEN PO2[2]=P3 ! SSP235896 jdf 
5077 CALL "FM2EXT",Z[13],1,UNIT$,PO2[2],PO2[1],O0,PO2[4],M6[1]; PO2[0]=O0,TF_COST=O0 ! SSP235896 jdf 
5078 CALL "FM2EXT",Z[13],1,UNIT$,PO2[2],PO2[7],O0,PO2[14],M6[1]; PO2[8]=O0
5079 CALL "FM2EXT",Z[13],1,UNIT$,PO2[2],PO2[10],O0,PO2[16],M6[1]; PO2[17]=O0
5080 REM EXT=QTY*TF_COST ! SSP#216590  ! SSP217692 jdf
5081 REAL_QTY_ORDERED=PO2[11]
5082 IF ID$<>"UM" THEN CALL "FM2EXT",Z[13],0,UNIT$,PO2[2],PO2[1],TF_COST,O0,M6[1]; PO2[4]=O0 ! SSP217692 jdf  ! SSP225217 jdf ! SSP235896 jdf
5083 EXT=PO2[4] ! SPP217692 jdf
5085 IF P4$(20,1)="Y" THEN CALL "*wingrp;Disable",UM_A.GRP$ ELSE CALL "*wingrp;Enable",UM_A.GRP$
5086 IF P4$(20,1)="Y" THEN REAL_QTY_ORDERED=PO2[11] ELSE REAL_QTY_ORDERED=PO2[11]/P3
5090 REFRESH_FLG=1
5095 RETURN 
5100 ! Unit of Measure Amount
5110 UM_AMT_PROCESS:
5111 IF ID$="UM_AMT" THEN B_UM_AMT=UM_AMT; GOSUB UM_PROCESS; UM_AMT=B_UM_AMT
5112 IF ID$="SELL_QTY_UM" THEN RETURN 
5113 PO2(2)=UM_AMT,P3=PO2(2); GOTO 5077
5140 IF REAL_QTY_ORDERED<>0 THEN IF P4$(20,1)="Y" THEN IF P3=0 THEN P3=1; END_IF ; QTY=REAL_QTY_ORDERED/P3 ELSE QTY=REAL_QTY_ORDERED*UM_AMT ! SSP 218981
5150 REM EXT=QTY*TF_COST ! SSP#216590  ! SSP217692 jdf
5152 PO2[2]=PE
5159 CALL "FM2EXT",Z[13],0,UNIT$,UM_AMT,QTY,TF_COST,O0,M6[1]; PO2[4]=O0 ! SSP217692 jdf
5160 EXT=PO2[4] ! SSP217692 jdf
5166 REAL_QTY_ORDERED$=STR(REAL_QTY_ORDERED)
5180 REFRESH_FLG=1
5190 RETURN 
5200 ! Quantity Process
5210 QTY_PROCESS:
5220 UNIT$=UM$
5230 GOSUB UM_PARAM
5235 IF P3=0 THEN P3=1
5240 IF P4$(20,1)="Y" THEN IF P3=0 THEN P3=1; END_IF ; QTY_ORD=REAL_QTY_ORDERED; QTY_CALC=REAL_QTY_ORDERED/P3 ELSE QTY_ORD=REAL_QTY_ORDERED*UM_AMT; QTY_CALC=REAL_QTY_ORDERED ! SSP 218981
5245 ! QTY=FN%QTY_IN_UM(REAL_QTY_ORDERED,UM$,UM_AMT)
5260 REM EXT=QTY_CALC*TF_COST ! SSP#216590  ! SSP217692 jdf
5264 CALL "FM2EXT",Z[13],0,UNIT$,UM_AMT,QTY_ORD,TF_COST,O0,M6[1]; PO2[4]=O0 ! SSP217692 jdf ! SSP 218981 ! SSP 218981
5266 EXT=PO2[4] ! SSP217692 jdf
5270 REM IF LINE_TYPE$="I" THEN LABEL_NUM=(REAL_QTY_ORDERED*UM_AMT)/CTN_PACK; IF FPT(LABEL_NUM)>0 THEN LABEL_NUM=INT(LABEL_NUM)+1 ! SSP217692 jdf
5275 IF REAL_QTY_ORDERED=0 OR CTN_PACK=0 THEN LABEL_NUM=0 ELSE LABEL_NUM=INT(PO2[11]/CTN_PACK*1.1+.9); IF LABEL_NUM<0 THEN LABEL_NUM=0 ! SSP217692 jdf!SSP#273350
5280 REFRESH_FLG=1
5290 RETURN 
5300 ! Cost 
5310 COST_PROCESS:
5320 UNIT$=UM$
5325 DIM P4$(26); READ (Z[13],KEY="U/M"+UNIT$,DOM=*RETURN)P4$,P3,P4 ! SSP235896 jdf
5330 IF P3=0 THEN P3=1
5340 IF P4$(20,1)="Y" THEN IF P3=0 THEN P3=1; END_IF ; QTY_ORD=REAL_QTY_ORDERED; QTY_CALC=REAL_QTY_ORDERED/P3 ELSE QTY_ORD=REAL_QTY_ORDERED*UM_AMT; QTY_CALC=REAL_QTY_ORDERED/UM_AMT ! SSP225217 jdf
5345 REM QTY=FN%QTY_IN_UM(REAL_QTY_ORDERED,UM$,UM_AMT) ! SSP225217 jdf
5360 REM EXT=QTY_CALC*TF_COST ! SSP#216590 ! SSP217692 jdf
5372 CALL "FM2EXT",Z[13],0,UNIT$,UM_AMT,QTY_ORD,TF_COST,O0,M6[1]; PO2[4]=O0 ! SSP217692 jdf  ! SSP225217 jdf ! SSP235896 jdf
5373 REM CALL "FM2EXT",Z[13],0,UNIT$,UM_AMT,UM_AMT*REAL_QTY_ORDERED,TF_COST,O0,M6[1]; PO2[4]=O0 ! SSP217692 jdf  ! SSP225217 jdf ! SSP235896 jdf
5375 EXT=PO2[4] ! SSP217692 jdf
5380 REFRESH_FLG=1
5390 RETURN 
5400 ! Special Shipping
5410 SPEC_SHIP_PROCESS:
5420 IF SPECIAL_SHIPPING$="Y" THEN PROCESS "POGMAD","../POG/PO.EN",PO_NUMBER$(1,9),LINE_NUM$; CALL "*WINGRP;SHOW",SPEC_SHIP.GRP$ ELSE CALL "*WINGRP;HIDE",SPEC_SHIP.GRP$
5480 REFRESH_FLG=1
5490 RETURN 
5600 ! Specs required Process
5610 SPECS_PROCESS:
5620 IF SPECS_REQ$="Y" THEN %SPECS=1 ELSE %SPECS=0
5670 IF SPECS_REQ$="Y" THEN CALL "*WINGRP;SHOW",SPEC_1.GRP$ ELSE CALL "*WINGRP;HIDE",SPEC_1.GRP$
5680 REFRESH_FLG=1
5690 RETURN 
7400 ! Check Audit Report
7410 CHECK_AUDIT:
7420 FIND (Z[1],KEY="",DOM=*RETURN)V0$,K0$
7430 IF K4$>"" THEN MSGBOX MSG("UPDATE_ST"),MSG("WARNING"),"STOP"; CMD_STR$="END"; RETURN 
7440 EXTRACT (Z[1],KEY="",ERR=WRAPUP)
7450 MSGBOX MSG("AUDIT_RPT")+" "+V0$(22,4)+"."+V0$(26,2)+MSG("HAS_PRT")+"."+SEP+MSG("CONTINUE?"),MSG("VERIFY"),"?,YesNo",ANS$
7460 IF ANS$="NO" THEN GOTO WRAPUP
7470 REMOVE (Z[1],KEY="")
7490 RETURN 
7500 ! Item Specs Processing
7510 ITEM_SPEC_PROCESS:
7520 ! PROD_INFO$=""
7530 ! DIM PROD_INFO$(100); READ (Z[12],KEY="T"+PROD_CODE$,DOM=*RETURN)PROD_INFO$
7540 %CUSTOMER$=DIM(10); %ITEM_CODE$=ITEM_CODE$
7560 ! IF NUL(PROD_INFO$(33,3)) THEN CALL "FMGIAU" ELSE CALL "FMGIAR"
7570 CALL "FMGIAU"
7590 RETURN 
8000 ! New Order
8010 NEW_PO:
8020 DIM PO1$(384)
8030 %NEW_PO=1
8040 PO_TYPE$="S"; PRINT_THIS_PO$="Y"
8050 PO_DATE$=%X3_TODAY$; DATE_REQ$=%X3_TODAY$
8060 NEXT_ID=VENDOR.CTL
8070 CALL "*WINGRP;ENABLE",BUTTONS.GRP$
8080 REFRESH_FLG=1
8090 RETURN 
8200 ! This Determines which Query to use.
8210 SEL_QRY:
8220 IF LINE_TYPE$="I" THEN %ITEM_CUST$="          "; PROCESS "QRY_IC0.1.4","../ICG/IC.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
8230 IF LINE_TYPE$="S" THEN PROCESS "QRY_FMPX","../FMG/FM.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
8260 ITEM_CODE$=QRY_VAL$
8280 REFRESH_FLG=1
8290 RETURN 
8500 ! Invalid Item 
8510 INV_ITEM:
8520 MSGBOX MSG("INVA_ITEM"),MSG("WARNING"),"STOP"
8550 ITEM_CODE$=""; NEXT_ID=ITEM_CODE.CTL
8580 REFRESH_FLG=1
8590 RETURN 
8900 ! UNIT OD MEASURE CALCULATION
8910 UM_PARAM:
8915 DIM M6[1]; CALL "IC2PRE",X3$,Z[13],M6$,M6{ALL},"",0,"",0 ! SSP217692 jdf
8920 DIM P4$(26); READ (Z[13],KEY="U/M"+UNIT$,DOM=*RETURN)P4$,P3,P4
8925 PO2(2)=UM_AMT ! IF P4$(20,1)="Y" THEN IF P3<>0 THEN PO2[2]=P3 ELSE PO2[2]=P4 ! SSP217692 ! SSP 218981
8935 ! CALL "FM2EXT",Z[13],0,UNIT$,PO2[2],PO2[1],PO2[0],O0,M6[1]; PO2[4]=O0 ! SSP217692 jdf
8950 IF P4$(21,1)="Y" THEN RETURN ! SSP217692 jdf
8970 GOSUB NEW_LABEL ! SSP217692 jdf
8990 RETURN 
9000 ! SYSTEM PARAMETERS
9010 GET_PARAM:
9020 READ (Z[6],KEY=X3$(9,3)+"I/C")P0$
9030 READ (Z[6],KEY=X3$(9,3)+"F/M")P2$
9040 READ (Z[6],KEY=X3$(9,3)+"OSP",DOM=*NEXT)OSP_PARMS$
9050 READ (Z[6],KEY=X3$(9,3)+"A/R")AR_PARMS$
9090 RETURN 
9999 END 
10000 SELL_UM:! SSP 199368
10010 S_UNIT$=UNIT$,UNIT$=SELL_UM$
10015 GOSUB UM_PARAM
10020 IF P3=0 THEN P3=1
10030 IF P4$(20,1)="Y" THEN CALL "*wingrp;Disable",UM_S.GRP$ ELSE CALL "*wingrp;Enable",UM_S.GRP$
10040 SELL_QTY_UM=P3
10050 REFRESH_FLG=1
10060 RETURN 
10100 SEL_STND_COST_UM:
10110 PO2$(164,4)=STND_COST_UOM$
10120 DIM P4$(26); READ (Z[13],KEY="U/M"+STND_COST_UOM$,DOM=*RETURN)P4$,P3,P4
10130 IF P3=0 THEN P3=1
10140 IF P4$(20,1)="Y" THEN MULTI_LINE DISABLE STND_COST_QTY_PER.CTL; STND_COST_QTY_PER=P3,PO2(23)=P3 ELSE MULTI_LINE ENABLE STND_COST_QTY_PER.CTL; STND_COST_QTY_PER=P3
10150 REFRESH_FLG=1
10160 RETURN 
11000 PERMIT_DELETE:! SSP229416 jdf
11001 DELETE_HIDE=0 ! SSP229416 jdf
11003 PER_KEY$=ARG_1$(1,9) ! SSP229416 jdf
11004 IF PER_KEY$(9,1)<>" " THEN GOTO 11090 ! SSP229416 jdf
11030 READ (Z[9],KEY=PER_KEY$,DOM=*NEXT) ! SSP229416 jdf
11040 PER_Q1$=KEY(Z[9],END=11090) ! SSP229416 jdf
11050 IF PER_KEY$<>PER_Q1$(1,9) THEN GOTO 11090 ! SSP229416 jdf
11060 READ (Z[9],KEY=PER_Q1$)IOL=0160 ! SSP229416 jdf
11065 IF PO2[6]<>0 THEN DELETE_HIDE=1 ! SSP229416 jdf
11070 IF PO2[7]<>0 THEN DELETE_HIDE=1 ! SSP229416 jdf
11080 GOTO 11040 ! SSP229416 jdf
11150 RETURN ! SSP229416 jdf
56000 ! "218981-Purchase Order Entry. Trying to add a new line and quantity 
56010 ! "199368-How to enter sell price for stock items in gui order entry. 
56012 REM "229416-Is there a way to restrict users from deleting POs after    
56014 REM "233940-GUI - various stock po issues                               
56015 REM "273350-Stock PO.  Is not pulling the correct # of Carton Labels.   
