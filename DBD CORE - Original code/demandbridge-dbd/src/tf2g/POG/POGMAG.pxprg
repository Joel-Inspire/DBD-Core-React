0010 ! POGMAG - Purchase Order Receiving
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Sep. 27, 2001 11:00
0030 ! ************************************************************************
0035 REM "5.7 - 04/07/22 - 13.237544 - crg - SSP# 307399
0037 REM "307399-DBD-259: PO lookup using Sales Order query button in GUI    
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "POGMAG","../POG/PO.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0116 IF WHO="kmc" OR POS(%C$="584",3)<>0 THEN CANADA_TAX=1
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0125 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0130 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0135 GOSUB SETUP_KEYS
0140 %ZZCOMP_SKIP=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; %ZZCOMP_SIP=0
0141 IF %X3_COMP$="584" THEN CANADA_TAX=1 ! 194087
0145 IF X3$(145,1)="1" THEN CALL "ZGBATC",X3$,X4$,"PO2MAG",X9; IF X9=1 THEN CMD_STR$="END"; RETURN ELSE MSG$="> Batch No: "+X3$(174,4)
0150 PERFORM "POGMAG.1;OPEN_FILES"; PERFORM "POGMAG.1;READ_PARMS"
0155 _FILE_NAME$=FIN(Z[3],"FILENAME") ! Get filename of PO7 file, could be batc
0160 _FIL_NO=Z[3]
0164 %PO7_FILE_NAME$=_FILE_NAME$; %R0$="R"
0165 ! _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0170 ADDR "BORDERLESS",ERR=*NEXT
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=4
0430 DIM _KEYS$[1:4]; _KEYS$[1]="PORDER$",_KEYS$[2]="AP_INV_NUM$",_KEYS$[3]="PO_LINE_NUM$",_KEYS$[4]="SHIP_TO_SEQ_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 PERFORM "POGMAG.1;PRE_DISPLAY"
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0700 ! 700 - Set up tabbing between folders
0710 INIT_FOLDER:
0720 GOSUB ENABLE_GROUPS
0730 IF _ENABLE_FLG<>_KEY1 THEN IF TAB_FLG$="<" THEN NEXT_ID=_LAST_TAB ELSE NEXT_ID=_FIRST_TAB
0734 IF FOLDER_ID$="POGMAG.1" THEN HIDE CONTROL WZ_BACK.CTL; SHOW CONTROL WZ_NEXT.CTL; GOSUB LOAD_FY_DROP_BOX
0735 IF FOLDER_ID$="POGMAG.2" THEN SHOW CONTROL WZ_BACK.CTL; SHOW CONTROL WZ_FINISH.CTL; HIDE CONTROL WZ_NEXT.CTL; GOSUB CHECK_ORDER; PERFORM "POGMAB.1;GET_NEXT_LINE_NUM"; IF LINE_NUM$="" THEN NEXT_ID=WZ_FINISH.CTL
0736 IF FOLDER_ID$="POGMAG.3" THEN NEXT_ID=JOB_NUM.CTL
0740 EXIT 
0900 ! 900 - Wrapup
0910 WRAPUP:
0915 %PORDER$="",%P8$="",%P9$="",%SBO$="",%R0$=""
0917 %PANEL2_BACK=0 ! SSP230512 jdf
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 ! IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 ! IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0945 PERFORM "POGMAG.1;CLOSE_FILES"
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0965 DROP "BORDERLESS",ERR=*NEXT
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ! ELSE RETURN ! SSP#279385
1025 IF ID$="PORDER" THEN IF PORDER$="" THEN MSGBOX "P/O Number field may not be blank.","Attention","!"; NEXT_ID=PORDER.CTL; EXIT 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1035 IF ID$="AP_INV_NUM" THEN GOTO 1041 ! For header record, PO_LINE_NUM and SHIP_TO_SEQ_CODE will be blank
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1041 FIND_REC_2:
1045 CALL "ZZWLKU;PARSE_PORDER",PORDER$,PO_DIV$,PO_NUM$
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1065 ! _KEY$=PO_DIV$+PO_NUM$
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1095 GOSUB DO_FOB
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1105 PERFORM "POGMAG.1;EXISTING_RECORD"
1107 SHOW CONTROL WZ_NEXT.CTL
1108 CALL "*wingrp;SHOW",F1_BUTTONS.GRP$
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",ANSWER$
1230 IF ANSWER$="NO" THEN PERFORM "POGMAG.1;REMOVE_FTO"; GOTO CLEAR_REC ! SSP231806 jdf
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 NEXT_FOLDER=_FIRST_FOLDER
1285 PERFORM "POGMAG.1;NEW_RECORD"; GOSUB LOAD_FY_DROP_BOX; GOSUB DO_FOB
1287 SHOW CONTROL WZ_NEXT.CTL; SHOW CONTROL BUTTON_2.CTL
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1412 IF STP(PORDER$,2)="" THEN RETURN ! ssp#289813
1415 IF NUL(A7$) THEN RETURN 
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1435 IF FOLDER_ID$="POGMAG.1" THEN PERFORM "POGMAG.1;WRITE_RECORD"; GOTO 1490
1440 ! GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 RETURN 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX MSG("POGMAG_02",FN%ZZDISP$(MID(_R_KEY$,1,9),"P/O"),STP(MID(_R_KEY$,10,10),1)),_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 ! REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1664 DIM U1$(50) ! Changed from U1$="" by DFF because of err 47 @ line #: 1670
1665 PERFORM "POGMAG.1;DELETE_RECORD"
1667 IF POS(U1$(1,6)="AP2DAAAR2EASAR2EAA",6) THEN PRINT (0,ERR=*NEXT)'SHOW'(0),; MINIMIZED_WINDOW=1 ELSE MINIMIZED_WINDOW=0
1670 IF U1$(1,6)="AP2DAA" THEN Q1=NUM(U1$(7,2)),Q3$=U1$(9,Q1),U1$=U1$(Q1+9); GOSUB DO_AP
1675 IF U1$(1,5)="AR2EA" THEN Q1=NUM(U1$(7,2)),Q1$=U1$(9,Q1),U1$=U1$(Q1+9); GOSUB DO_AR
1678 IF MINIMIZED_WINDOW THEN MINIMIZED_WINDOW=0; PRINT (0,ERR=*NEXT)'SHOW'(1),
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1700 CHANGE_FLG=0; GOSUB CLEAR_REC; NEXT_ID=PORDER.CTL,NEXT_FOLDER=FLDR.POGMAG.1.CTL; SHOW CONTROL BUTTON_3.CTL
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1825 IF %REMOVED_HEADER=1 THEN GOSUB WRITE_REC
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS; GOSUB CLEAR_AP4_PO1_FIELDS; PERFORM "POGMAG.1;PRE_DISPLAY"
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1854 CALL "*wingrp;enable",KEY1.GRP$,KEY2.GRP$
1855 NEXT_ID=PORDER.CTL; NEXT_FOLDER=FLDR.POGMAG.1.CTL; REFRESH_FLG=1
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3061 PORDER$=PO_DIV$+PO_NUM$,%PORDER$=PORDER$
3062 ! PERFORM "POGMAG.1;PO_NUMBER_ENTRY"
3065 GOSUB LOAD_FY_DROP_BOX
3066 CALL "*wingrp;DISABLE",KEY1.GRP$,KEY2.GRP$
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:; WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=PORDER.CTL,_FIRST_FIELD=RECEIPT_DATE.CTL,_FIRST_FOLDER=FLDR.POGMAG.1.CTL
3811 GOTO *RETURN
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 RECV_NOW_AMT$=STR(RECV_NOW_AMT)
10030 RECV_NOW_COST$=STR(RECV_NOW_COST)
10040 RECV_NOW_EXT$=STR(RECV_NOW_EXT)
10050 BO_AMT$=STR(BO_AMT)
10060 INV_NOW_AMT$=STR(INV_NOW_AMT)
10070 INV_NOW_COST$=STR(INV_NOW_COST)
10080 INV_NOW_EXT$=STR(INV_NOW_EXT)
10090 ADDL_GL_AMT_1$=STR(ADDL_GL_AMT_1)
10100 ADDL_GL_AMT_2$=STR(ADDL_GL_AMT_2)
10110 INVOICE_NOW_EXT$=STR(INVOICE_NOW_EXT)
10120 GST_TAX$=STR(GST_TAX)
10130 PST_TAX$=STR(PST_TAX)
10140 QST_TAX$=STR(QST_TAX)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="RECV_NOW_AMT",_X=RECV_NOW_AMT.CTL,RECV_NOW_AMT=NUM(RECV_NOW_AMT$,ERR=NON_NUMERIC)
11030 _X$="RECV_NOW_COST",_X=RECV_NOW_COST.CTL,RECV_NOW_COST=NUM(RECV_NOW_COST$,ERR=NON_NUMERIC)
11040 _X$="RECV_NOW_EXT",_X=RECV_NOW_EXT.CTL,RECV_NOW_EXT=NUM(RECV_NOW_EXT$,ERR=NON_NUMERIC)
11050 _X$="BO_AMT",_X=BO_AMT.CTL,BO_AMT=NUM(BO_AMT$,ERR=NON_NUMERIC)
11060 _X$="INV_NOW_AMT",_X=INV_NOW_AMT.CTL,INV_NOW_AMT=NUM(INV_NOW_AMT$,ERR=NON_NUMERIC)
11070 _X$="INV_NOW_COST",_X=INV_NOW_COST.CTL,INV_NOW_COST=NUM(INV_NOW_COST$,ERR=NON_NUMERIC)
11080 _X$="INV_NOW_EXT",_X=INV_NOW_EXT.CTL,INV_NOW_EXT=NUM(INV_NOW_EXT$,ERR=NON_NUMERIC)
11090 _X$="ADDL_GL_AMT_1",_X=ADDL_GL_AMT_1.CTL,ADDL_GL_AMT_1=NUM(ADDL_GL_AMT_1$,ERR=NON_NUMERIC)
11100 _X$="ADDL_GL_AMT_2",_X=ADDL_GL_AMT_2.CTL,ADDL_GL_AMT_2=NUM(ADDL_GL_AMT_2$,ERR=NON_NUMERIC)
11110 _X$="INVOICE_NOW_EXT",_X=INVOICE_NOW_EXT.CTL,INVOICE_NOW_EXT=NUM(INVOICE_NOW_EXT$,ERR=NON_NUMERIC)
11120 ! _X$="GST_TAX",_X=GST_TAX.CTL,GST_TAX=NUM(GST_TAX$,ERR=NON_NUMERIC)
11130 _X$="PST_TAX",_X=PST_TAX.CTL,PST_TAX=NUM(PST_TAX$,ERR=NON_NUMERIC)
11140 _X$="QST_TAX",_X=QST_TAX.CTL,QST_TAX=NUM(QST_TAX$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN PO_DIV$=""
13030 IF _CLR_FLG$="R" THEN PO_NUM$="",PORDER$="",%PORDER$="",A0=0,A1$="",U1$="",U2$="",U3$="",Q1$="",Q2$="",Q3$=""
13040 IF _CLR_FLG$="R" THEN AP_INV_NUM$=""
13050 IF _CLR_FLG$="R" THEN PO_LINE_NUM$=""
13060 IF _CLR_FLG$="R" THEN SHIP_TO_SEQ_CODE$=""
13070 PROD_CODE$=""
13080 COST_OF_SALE_GL_NUM$=""
13090 RECEIPT_DATE$=""
13100 FY$=""
13105 FOB$=" "
13110 ACCTPD$="",%PE_DATE$=""
13120 FRT_AMT$="",FRT_AMT=0,FRT_AMT$=""
13130 IS_GL_ACCT_AWIP_ACCT$=""
13140 GL_PROD_CD$=""
13150 SEQUENCE_NUM_FTF$=""
13160 ADDL_GL_ACCT_NUM$=""
13170 ADDL_GL_ACCT_NUM2$=""
13180 PO7_UNUSED_1$=""
13190 RECV_NOW_AMT=0
13200 RECV_NOW_COST=0
13210 RECV_NOW_EXT=0
13220 BO_AMT=0
13230 INV_NOW_AMT=0
13240 INV_NOW_COST=0
13250 INV_NOW_EXT=0
13260 ADDL_GL_AMT_1=0
13270 ADDL_GL_AMT_2=0
13280 INVOICE_NOW_EXT=0
13290 GST_TAX=0
13300 PST_TAX=0
13310 QST_TAX=0
13320 %PANEL2_BACK=0 ! SSP230512 jdf
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 ! IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=PO_NUM.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=AP_INV_NUM.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14050 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=PO_LINE_NUM.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14060 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=SHIP_TO_SEQ_CODE.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14985 IF %SBO$(69,1)="Y" THEN DISABLE CONTROL AP_INV_NUM.CTL; DISABLE CONTROL FRT_AMT.CTL
14987 IF NUL(AP_INV_NUM$) THEN DISABLE CONTROL FRT_AMT.CTL ELSE ENABLE CONTROL FRT_AMT.CTL,ERR=*PROCEED
14988 CALL "*wingrp;Hide",SCROLL.GRP$; CALL "*wingrp;Hide",HIDE_BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(30,"N")
15030 IF _ORIG.PO_DIV$=_CUR.PO_DIV$ OR PO_DIV$=_CUR.PO_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.PO_DIV$=PO_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_DIV")+" = "+_CUR.PO_DIV$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_DIV")+" = "+_CUR.PO_DIV$
15040 IF _ORIG.PO_NUM$=_CUR.PO_NUM$ OR PO_NUM$=_CUR.PO_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.PO_NUM$=PO_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_NUM")+" = "+_CUR.PO_NUM$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_NUM")+" = "+_CUR.PO_NUM$
15050 IF _ORIG.AP_INV_NUM$=_CUR.AP_INV_NUM$ OR AP_INV_NUM$=_CUR.AP_INV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.AP_INV_NUM$=AP_INV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("AP_INV_NUM")+" = "+_CUR.AP_INV_NUM$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AP_INV_NUM")+" = "+_CUR.AP_INV_NUM$
15060 IF _ORIG.PO_LINE_NUM$=_CUR.PO_LINE_NUM$ OR PO_LINE_NUM$=_CUR.PO_LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.PO_LINE_NUM$=PO_LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("P_L_N")+" = "+_CUR.PO_LINE_NUM$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("P_L_N")+" = "+_CUR.PO_LINE_NUM$
15070 IF _ORIG.SHIP_TO_SEQ_CODE$=_CUR.SHIP_TO_SEQ_CODE$ OR SHIP_TO_SEQ_CODE$=_CUR.SHIP_TO_SEQ_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_TO_SEQ_CODE$=SHIP_TO_SEQ_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_T_S_C")+" = "+_CUR.SHIP_TO_SEQ_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_T_S_C")+" = "+_CUR.SHIP_TO_SEQ_CODE$
15080 IF _ORIG.PROD_CODE$=_CUR.PROD_CODE$ OR PROD_CODE$=_CUR.PROD_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PROD_CODE$=PROD_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PROD_CODE")+" = "+_CUR.PROD_CODE$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROD_CODE")+" = "+_CUR.PROD_CODE$
15090 IF _ORIG.COST_OF_SALE_GL_NUM$=_CUR.COST_OF_SALE_GL_NUM$ OR COST_OF_SALE_GL_NUM$=_CUR.COST_OF_SALE_GL_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.COST_OF_SALE_GL_NUM$=COST_OF_SALE_GL_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("C_O_S_G_N")+" = "+_CUR.COST_OF_SALE_GL_NUM$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("C_O_S_G_N")+" = "+_CUR.COST_OF_SALE_GL_NUM$
15100 IF _ORIG.RECEIPT_DATE$=_CUR.RECEIPT_DATE$ OR RECEIPT_DATE$=_CUR.RECEIPT_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.RECEIPT_DATE$=RECEIPT_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("RECE_D")+" = "+_CUR.RECEIPT_DATE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RECE_D")+" = "+_CUR.RECEIPT_DATE$
15110 IF _ORIG.FY$=_CUR.FY$ OR FY$=_CUR.FY$ THEN GOTO *NEXT ELSE IF _ORIG.FY$=FY$ THEN _CHG2$=_CHG2$+SEP+MSG("FY")+" = "+_CUR.FY$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FY")+" = "+_CUR.FY$
15120 IF _ORIG.ACCTPD$=_CUR.ACCTPD$ OR ACCTPD$=_CUR.ACCTPD$ THEN GOTO *NEXT ELSE IF _ORIG.ACCTPD$=ACCTPD$ THEN _CHG2$=_CHG2$+SEP+MSG("ACCTPD")+" = "+_CUR.ACCTPD$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ACCTPD")+" = "+_CUR.ACCTPD$
15130 IF _ORIG.FRT_AMT$=_CUR.FRT_AMT$ OR FRT_AMT$=_CUR.FRT_AMT$ THEN GOTO *NEXT ELSE IF _ORIG.FRT_AMT$=FRT_AMT$ THEN _CHG2$=_CHG2$+SEP+MSG("FRT_AMT")+" = "+_CUR.FRT_AMT$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRT_AMT")+" = "+_CUR.FRT_AMT$
15140 IF _ORIG.IS_GL_ACCT_AWIP_ACCT$=_CUR.IS_GL_ACCT_AWIP_ACCT$ OR IS_GL_ACCT_AWIP_ACCT$=_CUR.IS_GL_ACCT_AWIP_ACCT$ THEN GOTO *NEXT ELSE IF _ORIG.IS_GL_ACCT_AWIP_ACCT$=IS_GL_ACCT_AWIP_ACCT$ THEN _CHG2$=_CHG2$+SEP+MSG("I_G_A_A_A")+" = "+_CUR.IS_GL_ACCT_AWIP_ACCT$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("I_G_A_A_A")+" = "+_CUR.IS_GL_ACCT_AWIP_ACCT$
15150 IF _ORIG.GL_PROD_CD$=_CUR.GL_PROD_CD$ OR GL_PROD_CD$=_CUR.GL_PROD_CD$ THEN GOTO *NEXT ELSE IF _ORIG.GL_PROD_CD$=GL_PROD_CD$ THEN _CHG2$=_CHG2$+SEP+MSG("GL_PROD_CD")+" = "+_CUR.GL_PROD_CD$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GL_PROD_CD")+" = "+_CUR.GL_PROD_CD$
15160 IF _ORIG.SEQUENCE_NUM_FTF$=_CUR.SEQUENCE_NUM_FTF$ OR SEQUENCE_NUM_FTF$=_CUR.SEQUENCE_NUM_FTF$ THEN GOTO *NEXT ELSE IF _ORIG.SEQUENCE_NUM_FTF$=SEQUENCE_NUM_FTF$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ_NUM_FT")+" = "+_CUR.SEQUENCE_NUM_FTF$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ_NUM_FT")+" = "+_CUR.SEQUENCE_NUM_FTF$
15170 IF _ORIG.ADDL_GL_ACCT_NUM$=_CUR.ADDL_GL_ACCT_NUM$ OR ADDL_GL_ACCT_NUM$=_CUR.ADDL_GL_ACCT_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ADDL_GL_ACCT_NUM$=ADDL_GL_ACCT_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_GL_A1")+" = "+_CUR.ADDL_GL_ACCT_NUM$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_GL_A1")+" = "+_CUR.ADDL_GL_ACCT_NUM$
15180 IF _ORIG.ADDL_GL_ACCT_NUM2$=_CUR.ADDL_GL_ACCT_NUM2$ OR ADDL_GL_ACCT_NUM2$=_CUR.ADDL_GL_ACCT_NUM2$ THEN GOTO *NEXT ELSE IF _ORIG.ADDL_GL_ACCT_NUM2$=ADDL_GL_ACCT_NUM2$ THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_GL_A2")+" = "+_CUR.ADDL_GL_ACCT_NUM2$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_GL_A2")+" = "+_CUR.ADDL_GL_ACCT_NUM2$
15190 IF _ORIG.PO7_UNUSED_1$=_CUR.PO7_UNUSED_1$ OR PO7_UNUSED_1$=_CUR.PO7_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.PO7_UNUSED_1$=PO7_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.PO7_UNUSED_1$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.PO7_UNUSED_1$
15200 IF _ORIG.RECV_NOW_AMT=_CUR.RECV_NOW_AMT OR RECV_NOW_AMT=_CUR.RECV_NOW_AMT THEN GOTO *NEXT ELSE IF _ORIG.RECV_NOW_AMT=RECV_NOW_AMT THEN _CHG2$=_CHG2$+SEP+MSG("RECV_N_A")+" = "+STR(_CUR.RECV_NOW_AMT),_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RECV_N_A")+" = "+STR(_CUR.RECV_NOW_AMT)
15210 IF _ORIG.RECV_NOW_COST=_CUR.RECV_NOW_COST OR RECV_NOW_COST=_CUR.RECV_NOW_COST THEN GOTO *NEXT ELSE IF _ORIG.RECV_NOW_COST=RECV_NOW_COST THEN _CHG2$=_CHG2$+SEP+MSG("RECV_N_C")+" = "+STR(_CUR.RECV_NOW_COST),_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RECV_N_C")+" = "+STR(_CUR.RECV_NOW_COST)
15220 IF _ORIG.RECV_NOW_EXT=_CUR.RECV_NOW_EXT OR RECV_NOW_EXT=_CUR.RECV_NOW_EXT THEN GOTO *NEXT ELSE IF _ORIG.RECV_NOW_EXT=RECV_NOW_EXT THEN _CHG2$=_CHG2$+SEP+MSG("RECV_N_E")+" = "+STR(_CUR.RECV_NOW_EXT),_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RECV_N_E")+" = "+STR(_CUR.RECV_NOW_EXT)
15230 IF _ORIG.BO_AMT=_CUR.BO_AMT OR BO_AMT=_CUR.BO_AMT THEN GOTO *NEXT ELSE IF _ORIG.BO_AMT=BO_AMT THEN _CHG2$=_CHG2$+SEP+MSG("BO_AMT")+" = "+STR(_CUR.BO_AMT),_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BO_AMT")+" = "+STR(_CUR.BO_AMT)
15240 IF _ORIG.INV_NOW_AMT=_CUR.INV_NOW_AMT OR INV_NOW_AMT=_CUR.INV_NOW_AMT THEN GOTO *NEXT ELSE IF _ORIG.INV_NOW_AMT=INV_NOW_AMT THEN _CHG2$=_CHG2$+SEP+MSG("INV_N_A")+" = "+STR(_CUR.INV_NOW_AMT),_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_N_A")+" = "+STR(_CUR.INV_NOW_AMT)
15250 IF _ORIG.INV_NOW_COST=_CUR.INV_NOW_COST OR INV_NOW_COST=_CUR.INV_NOW_COST THEN GOTO *NEXT ELSE IF _ORIG.INV_NOW_COST=INV_NOW_COST THEN _CHG2$=_CHG2$+SEP+MSG("INV_N_C")+" = "+STR(_CUR.INV_NOW_COST),_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_N_C")+" = "+STR(_CUR.INV_NOW_COST)
15260 IF _ORIG.INV_NOW_EXT=_CUR.INV_NOW_EXT OR INV_NOW_EXT=_CUR.INV_NOW_EXT THEN GOTO *NEXT ELSE IF _ORIG.INV_NOW_EXT=INV_NOW_EXT THEN _CHG2$=_CHG2$+SEP+MSG("INV_N_E")+" = "+STR(_CUR.INV_NOW_EXT),_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_N_E")+" = "+STR(_CUR.INV_NOW_EXT)
15270 IF _ORIG.ADDL_GL_AMT_1=_CUR.ADDL_GL_AMT_1 OR ADDL_GL_AMT_1=_CUR.ADDL_GL_AMT_1 THEN GOTO *NEXT ELSE IF _ORIG.ADDL_GL_AMT_1=ADDL_GL_AMT_1 THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_GL_M1")+" = "+STR(_CUR.ADDL_GL_AMT_1),_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_GL_M1")+" = "+STR(_CUR.ADDL_GL_AMT_1)
15280 IF _ORIG.ADDL_GL_AMT_2=_CUR.ADDL_GL_AMT_2 OR ADDL_GL_AMT_2=_CUR.ADDL_GL_AMT_2 THEN GOTO *NEXT ELSE IF _ORIG.ADDL_GL_AMT_2=ADDL_GL_AMT_2 THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_GL_M2")+" = "+STR(_CUR.ADDL_GL_AMT_2),_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_GL_M2")+" = "+STR(_CUR.ADDL_GL_AMT_2)
15290 IF _ORIG.INVOICE_NOW_EXT=_CUR.INVOICE_NOW_EXT OR INVOICE_NOW_EXT=_CUR.INVOICE_NOW_EXT THEN GOTO *NEXT ELSE IF _ORIG.INVOICE_NOW_EXT=INVOICE_NOW_EXT THEN _CHG2$=_CHG2$+SEP+MSG("INV_N_E_OL")+" = "+STR(_CUR.INVOICE_NOW_EXT),_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_N_E_OL")+" = "+STR(_CUR.INVOICE_NOW_EXT)
15300 IF _ORIG.GST_TAX=_CUR.GST_TAX OR GST_TAX=_CUR.GST_TAX THEN GOTO *NEXT ELSE IF _ORIG.GST_TAX=GST_TAX THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.GST_TAX),_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.GST_TAX)
15310 IF _ORIG.PST_TAX=_CUR.PST_TAX OR PST_TAX=_CUR.PST_TAX THEN GOTO *NEXT ELSE IF _ORIG.PST_TAX=PST_TAX THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.PST_TAX),_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.PST_TAX)
15320 IF _ORIG.QST_TAX=_CUR.QST_TAX OR QST_TAX=_CUR.QST_TAX THEN GOTO *NEXT ELSE IF _ORIG.QST_TAX=QST_TAX THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.QST_TAX),_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.QST_TAX)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN PO_DIV$=_CUR.PO_DIV$
16030 IF _CHG_VAR$(2,1)="Y" THEN PO_NUM$=_CUR.PO_NUM$
16040 IF _CHG_VAR$(3,1)="Y" THEN AP_INV_NUM$=_CUR.AP_INV_NUM$
16050 IF _CHG_VAR$(4,1)="Y" THEN PO_LINE_NUM$=_CUR.PO_LINE_NUM$
16060 IF _CHG_VAR$(5,1)="Y" THEN SHIP_TO_SEQ_CODE$=_CUR.SHIP_TO_SEQ_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN PROD_CODE$=_CUR.PROD_CODE$
16080 IF _CHG_VAR$(7,1)="Y" THEN COST_OF_SALE_GL_NUM$=_CUR.COST_OF_SALE_GL_NUM$
16090 IF _CHG_VAR$(8,1)="Y" THEN RECEIPT_DATE$=_CUR.RECEIPT_DATE$
16100 IF _CHG_VAR$(9,1)="Y" THEN FY$=_CUR.FY$
16110 IF _CHG_VAR$(10,1)="Y" THEN ACCTPD$=_CUR.ACCTPD$
16120 IF _CHG_VAR$(11,1)="Y" THEN FRT_AMT$=_CUR.FRT_AMT$
16130 IF _CHG_VAR$(12,1)="Y" THEN IS_GL_ACCT_AWIP_ACCT$=_CUR.IS_GL_ACCT_AWIP_ACCT$
16140 IF _CHG_VAR$(13,1)="Y" THEN GL_PROD_CD$=_CUR.GL_PROD_CD$
16150 IF _CHG_VAR$(14,1)="Y" THEN SEQUENCE_NUM_FTF$=_CUR.SEQUENCE_NUM_FTF$
16160 IF _CHG_VAR$(15,1)="Y" THEN ADDL_GL_ACCT_NUM$=_CUR.ADDL_GL_ACCT_NUM$
16170 IF _CHG_VAR$(16,1)="Y" THEN ADDL_GL_ACCT_NUM2$=_CUR.ADDL_GL_ACCT_NUM2$
16180 IF _CHG_VAR$(17,1)="Y" THEN PO7_UNUSED_1$=_CUR.PO7_UNUSED_1$
16190 IF _CHG_VAR$(18,1)="Y" THEN RECV_NOW_AMT=_CUR.RECV_NOW_AMT
16200 IF _CHG_VAR$(19,1)="Y" THEN RECV_NOW_COST=_CUR.RECV_NOW_COST
16210 IF _CHG_VAR$(20,1)="Y" THEN RECV_NOW_EXT=_CUR.RECV_NOW_EXT
16220 IF _CHG_VAR$(21,1)="Y" THEN BO_AMT=_CUR.BO_AMT
16230 IF _CHG_VAR$(22,1)="Y" THEN INV_NOW_AMT=_CUR.INV_NOW_AMT
16240 IF _CHG_VAR$(23,1)="Y" THEN INV_NOW_COST=_CUR.INV_NOW_COST
16250 IF _CHG_VAR$(24,1)="Y" THEN INV_NOW_EXT=_CUR.INV_NOW_EXT
16260 IF _CHG_VAR$(25,1)="Y" THEN ADDL_GL_AMT_1=_CUR.ADDL_GL_AMT_1
16270 IF _CHG_VAR$(26,1)="Y" THEN ADDL_GL_AMT_2=_CUR.ADDL_GL_AMT_2
16280 IF _CHG_VAR$(27,1)="Y" THEN INVOICE_NOW_EXT=_CUR.INVOICE_NOW_EXT
16290 IF _CHG_VAR$(28,1)="Y" THEN GST_TAX=_CUR.GST_TAX
16300 IF _CHG_VAR$(29,1)="Y" THEN PST_TAX=_CUR.PST_TAX
16310 IF _CHG_VAR$(30,1)="Y" THEN QST_TAX=_CUR.QST_TAX
16990 RETURN 
20000 ! Custom routines
20010 DISPLAY_PE_DATE:
20015 %P1$=""; FIND (_ZZPARM,KEY=%C$+"G/LYE"+FY$,DOM=*NEXT)%P1$
20020 IF %P1$>"" THEN TF_DATE$=%P1$(NUM(ACCTPD$)*6+15,6); CALL "ZZWDTE;DISPLAY",TF_DATE$; %PE_DATE$="Ending "+TF_DATE$,REFRESH_FLG=1
20040 DISPLAY_PE_DATE_END:RETURN 
20095 ! 
20400 WIZARD_BACK:! They hit the back button in wizard mode
20450 SWITCH FOLDER_ID$
20455 CASE "POGMAG.1"; CMD_STR$="E",ARG_3$="DELETE"; BREAK
20460 CASE "POGMAG.2"; NEXT_FOLDER=FLDR.POGMAG.1.CTL; BREAK
20465 CASE "POGMAG.3"; NEXT_FOLDER=FLDR.POGMAG.2.CTL; BREAK
20480 END SWITCH 
20490 RETURN 
20495 ! 
20500 WIZARD_NEXT:! They hit the next button in wizard mode
20550 SWITCH FOLDER_ID$
20555 CASE "POGMAG.1"; NEXT_FOLDER=FLDR.POGMAG.2.CTL,REFRESH_FLG=1,NEXT_ID=PO_LINE_NUM.CTL; BREAK
20560 CASE "POGMAG.2"; IF A$(81,1)="Y" OR POS(A$(10,1)="CI",1)<>0 THEN NEXT_FOLDER=FLDR.POGMAG.3.CTL,NEXT_ID=JOB_NUM.CTL,REFRESH_FLG=1; BREAK ELSE PERFORM "POGMAB.1;WRITE_PO2_REC"; NEXT_FOLDER=FLDR.POGMAG.2.CTL; HIDE CONTROL WZ_NEXT.CTL; SHOW CONTROL WZ_FINISH.CTL; PERFORM "POGMAB.1;GET_NEXT_LINE_NUM"; IF NOT(NUL(LINE_NUM$)) THEN NEXT_ID=LINE_NUM.CTL; BREAK ELSE NEXT_ID=WZ_FINISH.CTL; BREAK
20565 CASE "POGMAG.3"; PERFORM "POGMAB.1;WRITE_PO2_REC"; NEXT_FOLDER=FLDR.POGMAG.2.CTL; HIDE CONTROL WZ_NEXT.CTL; SHOW CONTROL WZ_FINISH.CTL; NEXT_ID=WZ_NEXT.CTL; BREAK
20580 END SWITCH 
20585 REFRESH_FLG=1
20590 RETURN 
20595 ! 
20600 WIZARD_FINISH:! They hit the finish button in wizard mode
20610 HIDE CONTROL WZ_FINISH.CTL; HIDE CONTROL WZ_NEXT.CTL
20615 IF FOLDER_ID$="POGMAG.1" THEN PERFORM "POGMAG.1;WRITE_RECORD"; U1$="" ELSE IF FOLDER_ID$="POGMAG.3" THEN PERFORM "POGMAB.1;WRITE_PO2_REC"; NEXT_FOLDER=FLDR.POGMAG.2.CTL; HIDE CONTROL WZ_NEXT.CTL; SHOW CONTROL WZ_FINISH.CTL; NEXT_ID=WZ_FINISH.CTL ! ELSE PERFORM "POGMAB.1;FINISHED"    
20620 PERFORM "POGMAG.1;UPDATE_ONPO"
20630 IF U1$="" THEN CHANGE_FLG=0; GOSUB CLEAR_REC; NEXT_ID=PORDER.CTL,NEXT_FOLDER=FLDR.POGMAG.1.CTL; GOTO WIZARD_FINISH_END
20635 HOLD_R0$=R0$
20639 IF POS(U1$(1,6)="AP2DAAAR2EASAR2EAA",6) THEN PRINT (0,ERR=*NEXT)'SHOW'(0),; MINIMIZED_WINDOW=1 ELSE MINIMIZED_WINDOW=0
20640 IF U1$(1,6)="AP2DAA" THEN Q1=NUM(U1$(7,2)),Q3$=U1$(9,Q1),U1$=U1$(Q1+9); GOSUB DO_AP
20650 IF U1$(1,6)="AR2EAS" THEN Q1=NUM(U1$(7,2)),Q1$=U1$(9,Q1),U1$=U1$(Q1+9); GOSUB DO_AR
20655 R0$=HOLD_R0$
20660 IF MINIMIZED_WINDOW THEN MINIMIZED_WINDOW=0; PRINT (0,ERR=*NEXT)'SHOW'(1),
20680 _CHANGE_FLG=0; GOSUB CLEAR_REC; NEXT_ID=PORDER.CTL,NEXT_FOLDER=FLDR.POGMAG.1.CTL; SHOW CONTROL BUTTON_3.CTL
20690 WIZARD_FINISH_END:RETURN 
20695 ! 
21000 DO_AP:
21010 ! Modeled after SM2UAA, 2500's
21015 T5=10; DIM A$(146),A[30],T[T5]
21020 A1$=Q3$(36,17),FY$=A1$(1,4),A$(1,4)=A1$(1,4),ACCTPD$=A1$(5,2),A$(5,2)=A1$(5,2),VEND_DIV$=Q3$(20,2),VEND_CODE$=Q3$(22,8),A$(17,10)=Q3$(20,10),INV_NUM$=Q3$(10,10),A$(27,10)=Q3$(10,10),A1$=FY$+ACCTPD$+VEND_DIV$+VEND_CODE$+INV_NUM$,VENDOR$=VEND_DIV$+VEND_CODE$
21025 Q2$=PORDER$+AP_INV_NUM$+VENDOR$+RECEIPT_DATE$+FY$+ACCTPD$+PO1$(179,2)+DIM(10)+PO1$(210,2)
21060 AP_PANEL: PROCESS "APGDAA","../APG/AP.EN",FY$+SEP+ACCTPD$+SEP+VENDOR$+SEP+INV_NUM$,"BATCH_SET","POGMAG",Q3$
21090 DO_AP_END:RETURN 
21095 ! ***********************************************
21500 DO_AR:
21503 IF STP(MID(PORDER$,9,1))="" THEN GOTO DO_AR_END
21505 CALL "ZZGMSG","C",MSG("ARGEAA_08",FN%ZZDISP$(PORDER$,"O/P")),""
21510 SALES_ORDER$=PO_DIV$+MID(PO_NUM$,1,6)
21515 CALL "ARGEAS",SALES_ORDER$,F5$,CMD$; IF CMD$<>"I" THEN GOTO DO_AR_END
21516 CALL "ZZGMSG","C",MSG("ARGEAA_06",FN%ZZDISP$(PORDER$,"O/P")),""
21520 Q1=NUM(U1$(7,2)),Q1$=U1$(9,Q1),U1$=U1$(Q1+9)
21525 IF LEN(Q1$)=41 THEN Q2$=Q1$(7,8),A1$=Q1$(1,6),D0$=Q1$(15,6),F5$=Q1$(21,11),I5$=Q1$(32,10),Q1$="",F1$=""
21530 IF POS(" "<>%X3_TODAY$)<>0 THEN D0$=%X3_TODAY$
21535 D8$=D0$; IF POS(" "<>D7$)=0 THEN D7$=D0$ ! D8$=Inv Date, D7$=Ship Date
21540 DIM A$(414),A[30],T[9]
21541 A1$=DIM(17); A1$(1,6)=FY$+ACCTPD$,Q2$=ORDER_DIV$+ORDER_NUM$ ! Ssp 228047!231204
21545 A$(1,4)=A1$(1,4),FY$=A1$(1,4),A$(5,2)=A1$(5,2),ACCTPD$=A1$(5,2)
21550 A$(92,8)=Q2$,ORDER_DIV$=A$(92,2),ORDER_NUM$=A$(94,6),A$(86,6)=D8$,INV_DATE$=A$(86,6),A$(180,6)=D7$,SHIP_DATE$=A$(180,6)
21555 A$(338,4)=%C$+%X3_330_1$,SRC_COMP_CODE$=%C$,RL_TYPE$=%X3_330_1$
21558 CALL "ZZGMSG","D","",""
21559 %FREIGHT=FRT_AMT
21560 PROCESS "ARGEAC","../ARG/AR.EN",FY$+SEP+ACCTPD$+SEP+INV_NUM$+SEP+ORDER_DIV$+ORDER_NUM$+SEP+INV_DATE$+SEP+INV_NUM$
21562 %FREIGHT=0
21565 CALL "ZZGMSG","C",MSG("ARGEAA_07",FN%ZZDISP$(PORDER$,"O/P")),""
21570 PERFORM "POGMAG.1;OPEN_FILES"
21575 CALL "ZZGMSG","D","",""
21595 DO_AR_END:RETURN 
21599 ! ***********************************************************
22000 CLEAR_AP4_PO1_FIELDS:
22010 AP4.VEND_NAME$="",AP4.VEND_ADDR_1$="",AP4.VEND_ADDR_2$="",AP4.VEND_CITY$="",AP4.VEND_ST$="",AP4.VEND_ZIP$=""
22015 TERMS_CODE$="",%TERMS_DESC_AP$=""
22020 PLANT_NAME$="",PLANT_ADDR_1$="",PLANT_ADDR_2$="",PLANT_CITY$="",PLANT_ST$="",PLANT_ZIP_CODE$=""
22025 PLANT_ATTN$=""
22030 VENDOR$="",VEND_DIV$="",VEND_CODE$="",PLANT_CODE$=""
22035 A6$=""
22090 CLEAR_AP4_PO1_FIELDS_END:RETURN 
22095 ! 
23000 FS2_LOOKUP:! hit lookup by salesorder ssp#231670
23010 QRY_VAL$=""; NEXT_ID=PORDER.CTL
23015 PROCESS "QRY_FS2.2","../OPG/OP.EN",QRY_VAL$
23020 IF QRY_VAL$="" THEN RETURN ELSE PORDER$=MID(QRY_VAL$,1,9); REFRESH_FLG=1
23022 _EOM$=$01$; ID$="PORDER"; CALL "ZZWLKU;PARSE_PORDER",PORDER$,PO_DIV$,PO_NUM$
23025 PERFORM "POGMAG.1;PORDER_BATCH_CHK"; PERFORM "POGMAG;Find_rec"
23040 PERFORM "POGMAG.1;PO_NUMBER_ENTRY" ! DBD-259 - was commented out
23099 RETURN 
26000 PO7_LOOKUP:! Hit PO7 Query button
26005 VAR$=""; NEXT_ID=PORDER.CTL
26010 PROCESS "QRY_PO7.1","../POG/PO.EN",VAR$
26015 IF VAR$="" THEN RETURN ELSE PORDER$=MID(VAR$,1,9),AP_INV_NUM$=MID(VAR$,10); REFRESH_FLG=1
26020 PERFORM "POGMAG.1;PO_NUMBER_ENTRY"
26035 AP_INV_NUM$=MID(VAR$,10); PO_LINE_NUM$=MID(VAR$,20,3),SHIP_TO_SEQ_CODE$=MID(VAR$,23,1)
26040 IF %SBO$(69,1)<>"Y" THEN PERFORM "POGMAG.1;AP_INV_NUM_ENTRY"; PERFORM "POGMAG;Find_rec_2" ! SSP#291091
26095 RETURN 
26099 ! *************************************************
26100 LOAD_FY_DROP_BOX:
26105 SET_CUR_FY$=FY$,SET_CUR_ACCTPD$=ACCTPD$
26110 ONLY_OPEN$="Y"; PERFORM "ZZWLDB;LOAD_FY" ! SSP#268321
26120 FY$=CUR_FY$,ACCTPD$=CUR_ACCTPD$
26130 GOSUB DISPLAY_PE_DATE
26195 RETURN 
26199 ! **************************************************
26200 CHECK_LINE_CHANGES:
26210 IF NOT(CHANGE_FLG) THEN GOTO SKIP_LINE_WRITE
26220 ! IF CHANGE_FLG THEN MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$; IF _YESNO$<>"YES" THEN GOTO SKIP_LINE_WRITE
26260 PERFORM "POGMAB.1;WRITE_PO2_REC"
26265 SKIP_LINE_WRITE:
26295 RETURN 
26299 ! ************************************
26300 AT_PORDER_FIELD:
26305 HIDE CONTROL WZ_NEXT.CTL,ERR=*NEXT
26310 SHOW CONTROL BUTTON_3.CTL,ERR=*NEXT
26395 RETURN 
26399 ! ***********************************************
27000 DO_FOB:
27010 KEY_PO3$=PORDER$(1,8)+DIM(5)
27020 DIM PO3_REC$(428); READ (_PO3,KEY=KEY_PO3$,DOM=*NEXT)PO3_REC$
27030 IF NUL(MID(PO3_REC$,133,1)) THEN GOTO 27100
27040 FOB$=MID(PO3_REC$,133,1)
27090 RETURN 
27100 KEY_PO3$=KEY(_PO3,END=*RETURN); READ (_PO3,KEY=KEY_PO3$)PO3_REC$
27110 IF KEY_PO3$(1,8)<>PORDER$(1,8) THEN RETURN 
27120 FOB$=MID(PO3_REC$,133,1)
27190 RETURN 
27195 ! ************************************************************
28000 RECV_NOW_RTN:
28010 IF _EOM$="$00$" THEN RETURN 
28020 RECV_NOW_EXT=NUM(RECV_NOW_EXT$,ERR=*NEXT)
28030 IF NOT(NUL(AP_INV_NUM$)) THEN INV_NOW_EXT$=RECV_NOW_EXT$ ! SS[#281301
28040 IF QTY_BO.CTL'ENABLED=1 THEN NEXT_ID=QTY_BO.CTL ELSE NEXT_ID=INV_NOW_EXT.CTL ! SSP234296 jdf 
28041 IF MID(A$,10,1)="S" AND MID(D1$,61,1)="Y" AND NUL(AP_INV_NUM$) THEN IF LINE_COMPLETE.CTL'ENABLED=1 THEN NEXT_ID=LINE_COMPLETE.CTL ! SSP#281301
28045 A[14]=RECV_NOW_EXT; IF NOT(NUL(AP_INV_NUM$)) THEN A[16]=RECV_NOW_EXT ! SSP 224634 ! SSP234296 jdf SSP 239422 !ssp#281301
28050 IF A[16]=0 THEN LINE_COMPLETE$="N",A$(6,1)=LINE_COMPLETE$ ! SSP 239422
28090 REFRESH_FLG=1
28092 REM IF MID(A$,10,1)="S" AND MID(D1$,61,1)="N" THEN A[4]=RECV_NOW_EXT,A[14]=RECV_NOW_EXT,A[16]=RECV_NOW_EXT ! SSP 224634
28095 RETURN 
28099 ! ************************************************************
28200 INV_NOW_RTN:
28210 INV_NOW_EXT=NUM(INV_NOW_EXT$,ERR=*NEXT),A[16]=INV_NOW_EXT ! SSP234296 jdf
28220 NEXT_ID=WZ_NEXT.CTL
28225 IF A[16]=0 THEN LINE_COMPLETE$="N"; GOTO 28290 ! SSP 239422
28230 LINE_COMPLETE$="Y"
28240 A$(6,1)=LINE_COMPLETE$ ! SSP 239422
28290 REFRESH_FLG=1
28295 RETURN 
28299 ! ***********************************************************
28400 ! Allow to add Order lines.
28410 CHECK_ORDER:
28420 IF NUL(ORDER_NUM$) THEN RETURN 
28425 %NO_ORD=1; READ (Z[8],KEY=ORDER_DIV$+ORDER_NUM$,DOM=*NEXT); %NO_ORD=0 ! SSP 224888
28430 CALL "*wingrp;Show",ORD_LINE.GRP$
28440 IF %NO_ORD THEN CALL "*WINGRP;DISABLE",ORD_LINE.GRP$ ELSE CALL "*WINGRP;ENABLE",ORD_LINE.GRP$ ! SSP 224888
28490 REFRESH_FLG=1,%NO_ORD=0 ! SSP 224888
28495 RETURN 
28499 ! *********************************************************
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56010 ! "224888-Getting stuck in a loop in PO rec'g. Next will not go to the
56012 ! "224634-I was just informed that we can not use LOT under GUI but   
56014 REM "234296-PO receiving issues for Custom items and Special charges    
56015 REM "268321-PO recvg-Fiscal year DropDown displays all years.  Can this 
56016 REM "279385-We are doing training on B type orders and got a program    
56017 REM "281301-When PO Receiving without an AP Vendor Invoice,Graphical version is putting a value in Vendor is invoicing
56018 REM "231670-WO227610; Add Lookup by Sales Order button to GUI PO Rec.
56019 REM "291091-ZZGMOB-screen 3.  Restrict From Vendor invoice, cost,       
56020 REM "289813-Stuck in PO receiving batch 5227 with  an invalid vendor    
56021 REM "307399-DBD-259: PO lookup using Sales Order query button in GUI    
