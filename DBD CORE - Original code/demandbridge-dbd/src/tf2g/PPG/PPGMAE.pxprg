0010 ! PPGMAE - EC Promo Code for Item Code
0035 REM "5.7 - 05/21/10 - 15.514722 - tma - SSP# 238647
0037 REM "238647-Item code SJ1, customer TVIINC, when they use the other     
0040 REM "Copyright 2010 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0045 %EC_PROMO=1
0050 PROCESS "PPGMAE","../PPG/PP.EN"
0055 %EC_PROMO=0
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="PP3"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0171 _FILE_NAME$="AR1"+%C$,_AR1=HFN; OPEN (_AR1,IOL=*,REC=AR1$,ERR=OPEN_ERR)_FILE_NAME$
0172 _FILE_NAME$="FMP"+%C$,_FMP=HFN; OPEN (_FMP,ERR=OPEN_ERR)_FILE_NAME$
0173 _FILE_NAME$="FM1"+%C$,_FM1=HFN; OPEN (_FM1,IOL=*,REC=FM1$,ERR=OPEN_ERR)_FILE_NAME$
0174 _FILE_NAME$="IC0"+%C$,_IC0=HFN; OPEN (_IC0,IOL=*,REC=IC0$,ERR=OPEN_ERR)_FILE_NAME$
0175 _FILE_NAME$="ZZPARM",_ZZP=HFN; OPEN (_ZZP,ERR=OPEN_ERR)_FILE_NAME$
0176 _FILE_NAME$="PP0"+%C$,_PP0=HFN; OPEN (_PP0,IOL=*,REC=PP0$,ERR=OPEN_ERR)_FILE_NAME$
0177 _FILE_NAME$="PP1"+%C$,_PP1=HFN; OPEN (_PP1,IOL=*,REC=PP1$,ERR=OPEN_ERR)_FILE_NAME$
0178 _FILE_NAME$="PP2"+%C$,_PP2=HFN; OPEN (_PP2,IOL=*,REC=PP2$,ERR=OPEN_ERR)_FILE_NAME$
0179 _FILE_NAME$="PP3"+%C$,_PP3=HFN; OPEN (_PP3,IOL=*,REC=PP3$,ERR=OPEN_ERR)_FILE_NAME$
0180 _FILE_NAME$="ED0"+%C$,_ED0=HFN; OPEN (_ED0,IOL=*,REC=ED0$,ERR=OPEN_ERR)_FILE_NAME$
0181 _FILE_NAME$="ECR"+%C$,_ECR=HFN; OPEN (_ECR,ERR=OPEN_ERR)_FILE_NAME$
0185 FIND (_ZZP,KEY="osec"+%X3$(40,3),DOM=*NEXT)SEC$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=2,_CUR_KEY$=""
0430 DIM _KEYS$[1:2]; _KEYS$[1]="CUSTOMER$",_KEYS$[2]="ITEM_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 CLOSE (_AR1),(_FMP),(_FM1),(_IC0),(_ZZP),(_PP0),(_PP1),(_PP2),(_PP3),(_ED0),(_ECR)
0999 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC: REFRESH_FLG=1
1015 IF ID$="CUSTOMER" AND STP(CUSTOMER$)="" THEN CUSTOMER$=DIM(10),%PANEL$="QRY_IC0",%STOCK$="Y" ELSE %STOCK$="N",%PANEL$="QRY_FM1"
1018 IF ID$="ITEM_CODE" THEN %ITEM_DESCES.CTL'VALUE$=%ITEM_DESCES$
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$
1047 FM1_ITEM$="N",IC0_ITEM$="N"; FIND (_FMP,KEY="D"+CUSTOMER$,DOM=*NEXT)FMP$; IF MID(FMP$,24,1)="Y" THEN FM1_ITEM$="Y"; GOTO 1050
1048 IC0_ITEM$="Y"; CALL "FS2DAK",%X3$,%X4$,0,CUSTOMER$,CIC$,"",""
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1215 GOSUB CHECK_PP3; IF NO THEN CUSTOMER$="",ITEM_CODE$="",NEXT_ID=CUSTOMER.CTL; EXIT 
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1435 PROMO_CODE$=GROUP_CODE$+PAD(TF_SIZE$,2)+PAD(COLOR$,2)+PAD(OTHER$,2) ! ssp#238647
1440 WRITE (_FIL_NO,KEY=_KEY$)
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1472 IF STP(CUSTOMER$)="" THEN %BCK_STOCK$="Y" ELSE %BCK_STOCK$="N"
1473 IF STP(CUSTOMER$)="" THEN %STOCK$="Y" ELSE %STOCK$="N"
1475 %CUSTOMER$=CUSTOMER$,%ITEM_CODE$=ITEM_CODE$; IF %STOCK$="N" THEN CALL "FMGIAB" ELSE CALL "ICGMAZ"
1480 NEXT_ID=CUSTOMER.CTL,_CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1665 EXTRACT RECORD (_ECR,KEY=_KEY$,DOM=*NEXT)ECR$; ECR$(531,1)="N",ECR$(532,40)=DIM(40); WRITE RECORD (_ECR,KEY=_KEY$)ECR$
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1705 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF _KEY$=_CUR_KEY$ THEN _KEY$=KEN(_FIL_NO,END=END_OF_FILE) ! Get past extracted record
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 EXTRACT (_FIL_NO,KEY=_KEY$)
3060 _CUR_KEY$=_KEY$,CUSTOMER$=CUST_DIV$+CUST_CODE$,GROUP_CODE$=MID(PROMO_CODE$,1,4),TF_SIZE$=MID(PROMO_CODE$,5,2),COLOR$=MID(PROMO_CODE$,7,2),OTHER$=MID(PROMO_CODE$,9,2)
3065 GOSUB COLOR; GOSUB SIZE; GOSUB OTHER; GOSUB GROUP_CODE
3067 CHANGE_FLG=0,GROUP_CODE.CTL'VALUE$=GROUP_CODE$,CUSTOMER.CTL'VALUE$=CUSTOMER$,ITEM_CODE.CTL'VALUE$=ITEM_CODE$
3068 MSGBOX MSG("PPGMAE_M1")+SEP+SEP+"Customer : "+FN%ZZDISP$(CUSTOMER$,"A/R")+" "+%CUST_NAME$+SEP+"        Item : "+ITEM_CODE$+" "+%ITEM_DESCES$+SEP+SEP+MSG("PPGMAE_M2"),MSG("WARNING"),"?,YESNOCANCEL",OPT$ ! SSP218935 jdf
3070 IF OPT$="YES" THEN GOTO DELETE_REC
3075 IF OPT$="CANCEL" THEN CMD_STR$="END"; EXIT 
3080 _CLR_FLG$="R"; GOSUB CLEAR_REC; NEXT_ID=CUSTOMER.CTL; EXIT ! SSP218935 jdf
3090 RETURN 
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUSTOMER.CTL,_FIRST_FIELD=GROUP_CODE.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN CUSTOMER$="",%CUST_NAME$=""
13040 IF _CLR_FLG$="R" THEN ITEM_CODE$="",%ITEM_DESCES$=""
13050 PROMO_CODE$="",COLOR$="",TF_SIZE$="",OTHER$="",GROUP_CODE$=""
13060 PP0.SIZE_DESC$="",PP1.COLOR_DESC$="",PP2.OTHER_DESC$="",ED0.DESC$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=1 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=CUST_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=ITEM_CODE.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 COLOR: REFRESH_FLG=1
15005 IF QRY_VAL$="" AND _EOM$=$00$ THEN RETURN 
15006 IF STP(COLOR$)="" THEN COLOR$="  "; RETURN 
15010 XX=NUM(COLOR$,ERR=*NEXT),COLOR$=STR(NUM(COLOR$):"00"); GOTO 15030
15020 COLOR$=PAD(COLOR$,2," ")
15030 FIND (_PP1,KEY=COLOR$,DOM=NO_COLOR)
15035 COLOR.CTL'VALUE$=COLOR$,PP1.COLOR_DESC.CTL'VALUE$=PP1.COLOR_DESC$
15040 RETURN 
15050 NO_COLOR: NEXT_ID=COLOR.CTL,COLOR$=""; EXIT 
15060 SIZE: REFRESH_FLG=1
15065 IF QRY_VAL$="" AND _EOM$=$00$ THEN RETURN 
15068 IF STP(TF_SIZE$)="" THEN TF_SIZE$="  "; RETURN 
15070 XX=NUM(TF_SIZE$,ERR=*NEXT),TF_SIZE$=STR(NUM(TF_SIZE$):"00"); GOTO 15080
15080 TF_SIZE$=PAD(TF_SIZE$,2," ")
15090 FIND (_PP0,KEY=TF_SIZE$,DOM=NO_SIZE)
15095 TF_SIZE.CTL'VALUE$=TF_SIZE$,PP0.SIZE_DESC.CTL'VALUE$=PP0.SIZE_DESC$
15100 RETURN 
15110 NO_SIZE: NEXT_ID=TF_SIZE.CTL,TF_SIZE$=""; RETURN 
15120 OTHER: REFRESH_FLG=1
15125 IF QRY_VAL$="" AND _EOM$=$00$ THEN RETURN 
15126 IF STP(OTHER$)="" THEN OTHER$="  "; RETURN 
15130 XX=NUM(OTHER$,ERR=*NEXT),OTHER$=STR(NUM(OTHER$):"00"); GOTO 15150
15140 OTHER$=PAD(OTHER$,2," ")
15150 FIND (_PP2,KEY=OTHER$,DOM=NO_OTHER)
15155 OTHER.CTL'VALUE$=OTHER$,PP2.OTHER_DESC.CTL'VALUE$=PP2.OTHER_DESC$
15160 RETURN 
15170 NO_OTHER: NEXT_ID=OTHER.CTL,OTHER$=""; EXIT 
15200 QUERY: VAL$=""
15210 PROCESS "QRY_PP3","../PPG/PP.EN",VAL$
15220 IF STP(VAL$)="" THEN RETURN 
15230 _KEY$=VAL$,CUSTOMER$=VAL$(1,10),ITEM_CODE$=VAL$(11,10)
15240 GOSUB 1045
15250 NEXT_ID=GROUP_CODE.CTL
15260 RETURN 
15270 GROUP_CODE: REFRESH_FLG=1
15290 IF QRY_VAL$="" AND _EOM$=$0000$ THEN GOSUB NO_GROUP_CODE ! RETURN
15300 IF STP(GROUP_CODE$)="" THEN GROUP_CODE$="    "; GOSUB NO_GROUP_CODE ! RETURN
15310 XX=NUM(GROUP_CODE$,ERR=*NEXT),GROUP_CODE$=STR(NUM(GROUP_CODE$):"0000"); GOTO 15330
15320 GROUP_CODE$=PAD(GROUP_CODE$,4," ")
15330 FIND (_ED0,KEY=GROUP_CODE$,DOM=NO_GROUP_CODE)
15340 GROUP_CODE.CTL'VALUE$=GROUP_CODE$,ED0.DESC.CTL'VALUE$=ED0.DESC$
15350 RETURN 
15360 NO_GROUP_CODE: NEXT_ID=GROUP_CODE.CTL,GROUP_CODE$=""; EXIT 
16000 CHECK_PP3: NO=0
16010 READ (_PP3,KNO=1,KEY=CUSTOMER$+ITEM_CODE$,DOM=*NEXT)
16020 K_PP3$=KEY(_PP3,END=16040,KNO=1)
16030 IF MID(K_PP3$,1,20)=CUSTOMER$+ITEM_CODE$ THEN MSGBOX "This promo code is already in use for item "+K_PP3$(21,10)+"."+SEP+"Please try again",MSG("WARNING"),"!,TIM=8);NO=1"
16040 READ (_PP3,KEY="",KNO=0,DOM=*NEXT)
16050 RETURN 
56000 ! "193490-When you are setting up an EC-Promo item that already has
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle.
56020 REM "214128-EC Promo-GUI P0, P1, P2, P3
56022 REM "218935-Promo Existing Item Panel - Exit is Broken                  
56023 REM "238647-Item code SJ1, customer TVIINC, when they use the other     
