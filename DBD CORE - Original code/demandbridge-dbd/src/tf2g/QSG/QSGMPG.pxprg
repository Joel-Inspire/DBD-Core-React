0010 ! QSGMPG - RFQ Vendor Group
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Mar. 15, 2002 9:07
0030 ! ************************************************************************
0035 REM "5.7 - 08/06/09 - 15.161666 - tma - SSP# 231861
0037 REM "231861-Under RFQ Vendor Group Panel QSGMPG allows you to add a     
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "QSGMPG","../QSG/QS.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0114 REM + [202408]-Added the IOLIST for XP3 at line 115
0115 IOLIST A$
0116 DIM A[1]
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="FMP"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,ERR=OPEN_ERR)_FILE_NAME$
0180 _FM0=HFN,_FILE_NAME$="FM0"+%C$; OPEN (_FM0,ERR=OPEN_ERR)_FILE_NAME$
0184 REM + [202408]-Added lines 185-187 to open XP3
0185 _XP3_FILE$="XP3"+%C$
0186 _XP3_CHN=HFN
0187 OPEN (_XP3_CHN,ERR=OPEN_ERR)_XP3_FILE$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="RFQ_VEND_GROUP_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1011 IF STP(RFQ_VEND_GROUP_CODE$)="" THEN NEXT_ID=RFQ_VEND_GROUP_CODE.CTL; CHANGE_FLG=0; RETURN ! SSP#231861
1012 RFQ_VEND_GROUP_CODE$=PAD(RFQ_VEND_GROUP_CODE$,8," "),REFRESH_FLG=1
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 _KEY$="h"+RFQ_VEND_GROUP_CODE$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",ANSWER$
1240 IF ANSWER$="NO" THEN NEXT_ID=RFQ_VEND_GROUP_CODE.CTL,CHANGE_FLG=0; GOSUB CLEAR_FIELDS; REFRESH_FLG=1; RETURN ! SSP#231861
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1255 DIM FMP$(154); FMP$(1,1)="h",FMP$(2,8)=RFQ_VEND_GROUP_CODE$
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1475 GOSUB CLEAR_REC; REFRESH_FLG=1 ! SSP#225725
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+MID(_R_KEY$,2,8)+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$ ! SSP#231861
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1664 REM + [202408]-Added lines 1665-1670 to update XP3
1665 A$=FMP$
1670 CALL "UPDFMP;DUPLICATE_XP3",_XP3_CHN,A$,A{ALL},"D"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 GOSUB CLEAR_REC; REFESH_FLG=1; CHANGE_FLG=0 ! SSP#231861
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1831 GOSUB CLEAR_VENDORS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2035 IF _KEY$="" THEN READ (_FIL_NO,KEY="h",DOM=*NEXT)
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF MID(_KEY$,1,1)<>"h" THEN GOTO END_OF_FILE
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); IF MID(_KEY$,1,1)<>"h" THEN GOTO START_OF_FILE ELSE READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2425 READ (_FIL_NO,KEY="h",DOM=*NEXT)
2430 _KEY$=KEY(_FIL_NO,ERR=NO_FIRST); IF MID(_KEY$,1,1)<>"h" THEN GOTO NO_FIRST
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2625 READ (_FIL_NO,KEY="h~~~~~~~~",DOM=PRIOR_REC)
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ (_FIL_NO,KEY=_KEY$)FMP$; GOSUB ASSIGN_LIB
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3060 CHANGE_FLG=0
3061 GOSUB LOAD_VENDORS
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:GOSUB ASSIGN_PRG; WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)FMP$
3329 REM + [202408]-Added lines 3330-3335 to update XP3
3330 A$=FMP$
3335 CALL "UPDFMP;DUPLICATE_XP3",_XP3_CHN,A$,A{ALL},"U"
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=RFQ_VEND_GROUP_CODE.CTL,_FIRST_FIELD=RFQ_VEND_GROUP_DESC.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN RFQ_VEND_GROUP_CODE$=""
13030 RFQ_VEND_GROUP_DESC$=""
13040 QS3_UNUSED_1$=""
13050 VEND_DIV_1$=""
13060 VEND_CODE_1$=""
13070 VEND_PLANT_1$=""
13080 VEND_DIV_2$=""
13090 VEND_CODE_2$=""
13100 VEND_PLANT_2$=""
13110 VEND_DIV_3$=""
13120 VEND_CODE_3$=""
13130 VEND_PLANT_3$=""
13140 VEND_DIV_4$=""
13150 VEND_CODE_4$=""
13160 VEND_PLANT_4$=""
13170 VEND_DIV_5$=""
13180 VEND_CODE_5$=""
13190 VEND_PLANT_5$=""
13200 VEND_DIV_6$=""
13210 VEND_CODE_6$=""
13220 VEND_PLANT_6$=""
13230 VEND_DIV_7$=""
13240 VEND_CODE_7$=""
13250 VEND_PLANT_7$=""
13260 VEND_DIV_8$=""
13270 VEND_CODE_8$=""
13280 VEND_PLANT_8$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(27,"N")
15030 IF _ORIG.RFQ_VEND_GROUP_CODE$=_CUR.RFQ_VEND_GROUP_CODE$ OR RFQ_VEND_GROUP_CODE$=_CUR.RFQ_VEND_GROUP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.RFQ_VEND_GROUP_CODE$=RFQ_VEND_GROUP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("RFQ_CODE")+" = "+_CUR.RFQ_VEND_GROUP_CODE$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RFQ_CODE")+" = "+_CUR.RFQ_VEND_GROUP_CODE$
15040 IF _ORIG.RFQ_VEND_GROUP_DESC$=_CUR.RFQ_VEND_GROUP_DESC$ OR RFQ_VEND_GROUP_DESC$=_CUR.RFQ_VEND_GROUP_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.RFQ_VEND_GROUP_DESC$=RFQ_VEND_GROUP_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("RFQ_DESC")+" = "+_CUR.RFQ_VEND_GROUP_DESC$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RFQ_DESC")+" = "+_CUR.RFQ_VEND_GROUP_DESC$
15050 IF _ORIG.QS3_UNUSED_1$=_CUR.QS3_UNUSED_1$ OR QS3_UNUSED_1$=_CUR.QS3_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.QS3_UNUSED_1$=QS3_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.QS3_UNUSED_1$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.QS3_UNUSED_1$
15060 IF _ORIG.VEND_DIV_1$=_CUR.VEND_DIV_1$ OR VEND_DIV_1$=_CUR.VEND_DIV_1$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV_1$=VEND_DIV_1$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_1$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_1$
15070 IF _ORIG.VEND_CODE_1$=_CUR.VEND_CODE_1$ OR VEND_CODE_1$=_CUR.VEND_CODE_1$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE_1$=VEND_CODE_1$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_1$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_1$
15080 IF _ORIG.VEND_PLANT_1$=_CUR.VEND_PLANT_1$ OR VEND_PLANT_1$=_CUR.VEND_PLANT_1$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_PLANT_1$=VEND_PLANT_1$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_1$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_1$
15090 IF _ORIG.VEND_DIV_2$=_CUR.VEND_DIV_2$ OR VEND_DIV_2$=_CUR.VEND_DIV_2$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV_2$=VEND_DIV_2$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_2$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_2$
15100 IF _ORIG.VEND_CODE_2$=_CUR.VEND_CODE_2$ OR VEND_CODE_2$=_CUR.VEND_CODE_2$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE_2$=VEND_CODE_2$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_2$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_2$
15110 IF _ORIG.VEND_PLANT_2$=_CUR.VEND_PLANT_2$ OR VEND_PLANT_2$=_CUR.VEND_PLANT_2$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_PLANT_2$=VEND_PLANT_2$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_2$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_2$
15120 IF _ORIG.VEND_DIV_3$=_CUR.VEND_DIV_3$ OR VEND_DIV_3$=_CUR.VEND_DIV_3$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV_3$=VEND_DIV_3$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_3$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_3$
15130 IF _ORIG.VEND_CODE_3$=_CUR.VEND_CODE_3$ OR VEND_CODE_3$=_CUR.VEND_CODE_3$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE_3$=VEND_CODE_3$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_3$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_3$
15140 IF _ORIG.VEND_PLANT_3$=_CUR.VEND_PLANT_3$ OR VEND_PLANT_3$=_CUR.VEND_PLANT_3$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_PLANT_3$=VEND_PLANT_3$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_3$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_3$
15150 IF _ORIG.VEND_DIV_4$=_CUR.VEND_DIV_4$ OR VEND_DIV_4$=_CUR.VEND_DIV_4$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV_4$=VEND_DIV_4$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_4$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_4$
15160 IF _ORIG.VEND_CODE_4$=_CUR.VEND_CODE_4$ OR VEND_CODE_4$=_CUR.VEND_CODE_4$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE_4$=VEND_CODE_4$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_4$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_4$
15170 IF _ORIG.VEND_PLANT_4$=_CUR.VEND_PLANT_4$ OR VEND_PLANT_4$=_CUR.VEND_PLANT_4$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_PLANT_4$=VEND_PLANT_4$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_4$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_4$
15180 IF _ORIG.VEND_DIV_5$=_CUR.VEND_DIV_5$ OR VEND_DIV_5$=_CUR.VEND_DIV_5$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV_5$=VEND_DIV_5$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_5$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_5$
15190 IF _ORIG.VEND_CODE_5$=_CUR.VEND_CODE_5$ OR VEND_CODE_5$=_CUR.VEND_CODE_5$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE_5$=VEND_CODE_5$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_5$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_5$
15200 IF _ORIG.VEND_PLANT_5$=_CUR.VEND_PLANT_5$ OR VEND_PLANT_5$=_CUR.VEND_PLANT_5$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_PLANT_5$=VEND_PLANT_5$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_5$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_5$
15210 IF _ORIG.VEND_DIV_6$=_CUR.VEND_DIV_6$ OR VEND_DIV_6$=_CUR.VEND_DIV_6$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV_6$=VEND_DIV_6$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_6$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_6$
15220 IF _ORIG.VEND_CODE_6$=_CUR.VEND_CODE_6$ OR VEND_CODE_6$=_CUR.VEND_CODE_6$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE_6$=VEND_CODE_6$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_6$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_6$
15230 IF _ORIG.VEND_PLANT_6$=_CUR.VEND_PLANT_6$ OR VEND_PLANT_6$=_CUR.VEND_PLANT_6$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_PLANT_6$=VEND_PLANT_6$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_6$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_6$
15240 IF _ORIG.VEND_DIV_7$=_CUR.VEND_DIV_7$ OR VEND_DIV_7$=_CUR.VEND_DIV_7$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV_7$=VEND_DIV_7$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_7$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_7$
15250 IF _ORIG.VEND_CODE_7$=_CUR.VEND_CODE_7$ OR VEND_CODE_7$=_CUR.VEND_CODE_7$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE_7$=VEND_CODE_7$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_7$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_7$
15260 IF _ORIG.VEND_PLANT_7$=_CUR.VEND_PLANT_7$ OR VEND_PLANT_7$=_CUR.VEND_PLANT_7$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_PLANT_7$=VEND_PLANT_7$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_7$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_7$
15270 IF _ORIG.VEND_DIV_8$=_CUR.VEND_DIV_8$ OR VEND_DIV_8$=_CUR.VEND_DIV_8$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV_8$=VEND_DIV_8$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_8$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV_8$
15280 IF _ORIG.VEND_CODE_8$=_CUR.VEND_CODE_8$ OR VEND_CODE_8$=_CUR.VEND_CODE_8$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE_8$=VEND_CODE_8$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_8$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE_8$
15290 IF _ORIG.VEND_PLANT_8$=_CUR.VEND_PLANT_8$ OR VEND_PLANT_8$=_CUR.VEND_PLANT_8$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_PLANT_8$=VEND_PLANT_8$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_8$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT_8$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN RFQ_VEND_GROUP_CODE$=_CUR.RFQ_VEND_GROUP_CODE$
16030 IF _CHG_VAR$(2,1)="Y" THEN RFQ_VEND_GROUP_DESC$=_CUR.RFQ_VEND_GROUP_DESC$
16040 IF _CHG_VAR$(3,1)="Y" THEN QS3_UNUSED_1$=_CUR.QS3_UNUSED_1$
16050 IF _CHG_VAR$(4,1)="Y" THEN VEND_DIV_1$=_CUR.VEND_DIV_1$
16060 IF _CHG_VAR$(5,1)="Y" THEN VEND_CODE_1$=_CUR.VEND_CODE_1$
16070 IF _CHG_VAR$(6,1)="Y" THEN VEND_PLANT_1$=_CUR.VEND_PLANT_1$
16080 IF _CHG_VAR$(7,1)="Y" THEN VEND_DIV_2$=_CUR.VEND_DIV_2$
16090 IF _CHG_VAR$(8,1)="Y" THEN VEND_CODE_2$=_CUR.VEND_CODE_2$
16100 IF _CHG_VAR$(9,1)="Y" THEN VEND_PLANT_2$=_CUR.VEND_PLANT_2$
16110 IF _CHG_VAR$(10,1)="Y" THEN VEND_DIV_3$=_CUR.VEND_DIV_3$
16120 IF _CHG_VAR$(11,1)="Y" THEN VEND_CODE_3$=_CUR.VEND_CODE_3$
16130 IF _CHG_VAR$(12,1)="Y" THEN VEND_PLANT_3$=_CUR.VEND_PLANT_3$
16140 IF _CHG_VAR$(13,1)="Y" THEN VEND_DIV_4$=_CUR.VEND_DIV_4$
16150 IF _CHG_VAR$(14,1)="Y" THEN VEND_CODE_4$=_CUR.VEND_CODE_4$
16160 IF _CHG_VAR$(15,1)="Y" THEN VEND_PLANT_4$=_CUR.VEND_PLANT_4$
16170 IF _CHG_VAR$(16,1)="Y" THEN VEND_DIV_5$=_CUR.VEND_DIV_5$
16180 IF _CHG_VAR$(17,1)="Y" THEN VEND_CODE_5$=_CUR.VEND_CODE_5$
16190 IF _CHG_VAR$(18,1)="Y" THEN VEND_PLANT_5$=_CUR.VEND_PLANT_5$
16200 IF _CHG_VAR$(19,1)="Y" THEN VEND_DIV_6$=_CUR.VEND_DIV_6$
16210 IF _CHG_VAR$(20,1)="Y" THEN VEND_CODE_6$=_CUR.VEND_CODE_6$
16220 IF _CHG_VAR$(21,1)="Y" THEN VEND_PLANT_6$=_CUR.VEND_PLANT_6$
16230 IF _CHG_VAR$(22,1)="Y" THEN VEND_DIV_7$=_CUR.VEND_DIV_7$
16240 IF _CHG_VAR$(23,1)="Y" THEN VEND_CODE_7$=_CUR.VEND_CODE_7$
16250 IF _CHG_VAR$(24,1)="Y" THEN VEND_PLANT_7$=_CUR.VEND_PLANT_7$
16260 IF _CHG_VAR$(25,1)="Y" THEN VEND_DIV_8$=_CUR.VEND_DIV_8$
16270 IF _CHG_VAR$(26,1)="Y" THEN VEND_CODE_8$=_CUR.VEND_CODE_8$
16280 IF _CHG_VAR$(27,1)="Y" THEN VEND_PLANT_8$=_CUR.VEND_PLANT_8$
16990 RETURN 
20000 ! ^20000,10
20010 LOAD_VENDORS:
20020 FOR X=1 TO 8
20030 VAR1$="VENDOR"+STR(X),VAR2$="VEND_DIV_"+STR(X),VAR3$="VEND_CODE_"+STR(X),VAR4$="%PLANT_VEND"+STR(X)
20040 VIA (VAR1$)=VIS(VAR2$)+VIS(VAR3$)
20041 VIA (VAR4$)=VIS(VAR2$)+VIS(VAR3$)
20050 NEXT X
20060 REFRESH_FLG=1
20070 RETURN 
20200 ! ^20100,10
20210 CLEAR_VENDORS:
20220 FOR X=1 TO 8
20230 VAR1$="VENDOR"+STR(X),VAR2$="%VEND_NAME"+STR(X),VAR3$="%PLANT_VEND"+STR(X)
20240 VIA (VAR1$)=""
20250 VIA (VAR2$)=""
20251 VIA (VAR3$)=""
20260 NEXT X
20270 RETURN 
20300 ! ^20200,10
20310 SET_CUR_VEND:
20311 GET_VEND_DIV$="",GET_VEND_CODE$=""
20320 VAR1$=ID$,VAR2$="VEND_DIV_"+VIS(STR(ID$+".TAG")),VAR3$="VEND_CODE_"+VIS(STR(ID$+".TAG")),VAR4$="%PLANT_VEND"+VIS(STR(ID$+".TAG"))
20330 CALL "ZZWLKU;PARSE_VEND",VIS(VAR1$),GET_VEND_DIV$,GET_VEND_CODE$
20340 VIA (VAR2$)=VIS("GET_VEND_DIV$")
20350 VIA (VAR3$)=VIS("GET_VEND_CODE$")
20355 VIA (VAR4$)=VIS(VAR2$)+VIS(VAR3$)
20360 REFRESH_FLG=1
20370 RETURN 
21000 ASSIGN_LIB:
21010 FOR AA=1 TO 8
21015 A$=FMP$(41+(AA*14-13),14)
21020 EXECUTE "vendor"+STR(AA)+"$=a$(1,10),vend_plant_"+STR(AA)+"$=a$(11,4)"
21025 EXECUTE "CALL "+QUO+"ZZWLKU;PARSE_VEND"+QUO+",VENDOR"+STR(AA)+"$,VEND_DIV_"+STR(AA)+"$,VEND_CODE_"+STR(AA)+"$"
21030 NEXT 
21040 RFQ_VEND_GROUP_CODE$=FMP$(2,8),RFQ_VEND_GROUP_DESC$=FMP$(10,30)
21050 REFRESH_FLG=1
21060 RETURN 
21070 ASSIGN_PRG:
21080 DIM FMP$(154)
21090 FOR AA=1 TO 8
21100 VEN$=EVS("VENDOR"+STR(AA)+"$"),PLA$=EVS("VEND_PLANT_"+STR(AA)+"$")
21110 CALL "ZZWLKU;PARSE_VEND",VEN$,DV$,CO$
21120 VAR$=DV$+CO$+PLA$
21130 EXECUTE "FMP$(41+(AA*14-13),14)=VAR$"
21140 NEXT AA
21150 FMP$(1,1)="h",FMP$(2,8)=RFQ_VEND_GROUP_CODE$,FMP$(10,30)=RFQ_VEND_GROUP_DESC$
21160 RETURN 
56000 REM + Modification History
56001 REM "5.5 - 11/28/06 - 9.557777 - mhe - SSP# 202408
56002 REM "202408-Modify QSGMPG to also call UPDFMP to update XP3 after       
56003 REM "231861-Under RFQ Vendor Group Panel QSGMPG allows you to add a     
