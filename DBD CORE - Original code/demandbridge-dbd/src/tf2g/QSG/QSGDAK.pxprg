0010 ! QSGDAK - File Maintenance Program for QSD-Enquiry Vendor Quote File (="QSD"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Sep. 10, 2001 16:10
0030 ! ************************************************************************
0035 REM "5.7 - 02/05/10 - 11.093055 - jdf - SSP# 229436
0037 REM "229436-If a vendor is listed more than once on an RFQ, it sends the
0040 REM "Copyright 2010 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="QSD"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 _QSE=HFN; OPEN (_QSE)"QSE"+%C$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=3
0430 DIM _KEYS$[1:3]; _KEYS$[1]="QUOTE$",_KEYS$[2]="QUOTE_LINE_NUM$",_KEYS$[3]="VEND_NUM_ON_SCREEN$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 READ DATA FROM ARG_1$ TO QUOTE_DIV$,QUOTE_NUM$,QUOTE_LINE_NUM$,VEND_NUM_ON_SCREEN$
0536 QUOTE$=QUOTE_DIV$+QUOTE_NUM$,ARG_1$=QUOTE_DIV$+QUOTE_NUM$+QUOTE_LINE_NUM$+VEND_NUM_ON_SCREEN$
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=CHK_NEW) ! chg'd for overylay from QSGDAB
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0700 ! 700 - Set up tabbing between folders
0710 INIT_FOLDER:
0720 GOSUB ENABLE_GROUPS
0730 IF _ENABLE_FLG<>_KEY1 THEN IF TAB_FLG$="<" THEN NEXT_ID=_LAST_TAB ELSE NEXT_ID=_FIRST_TAB
0740 EXIT 
0900 ! 900 - Wrapup
0910 WRAPUP:
0911 READ DATA FROM "" TO IOL=GLOBAL_IOL
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 CALL "ZZWLKU;PARSE_QUOTE",QUOTE$,QUOTE_DIV$,QUOTE_NUM$
1046 CALL "ZZWLKU;PARSE_VENDOR",VENDOR$,VEND_DIV$,VEND_CODE$
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1055 CALL "ZZWLKU;PARSE_QUOTE",QUOTE$,QUOTE_DIV$,QUOTE_NUM$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 NEXT_FOLDER=_FIRST_FOLDER
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 IF ARG_1$="" THEN NEXT_ID=_FIRST_KEY; EXIT 
1485 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT) ! chg'd for overylay from QSGDAB
1486 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3061 QUOTE$=QUOTE_DIV$+QUOTE_NUM$
3062 VENDOR$=VEND_DIV$+VEND_CODE$
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""; IF TF_OUTPUT$="1" THEN TF_OUTPUT$="Y" ! SSP#225850
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3325 GOSUB WRITE_QSE
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1,CMD_STR$="END"
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=QUOTE.CTL,_FIRST_FIELD=VENDOR.CTL,_FIRST_FOLDER=FLDR.QSGDAK.1.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 QSD_QTY_PER$=STR(QSD_QTY_PER)
10030 COST_QTY_BREAK_1$=STR(COST_QTY_BREAK_1)
10040 COST_QTY_BREAK_2$=STR(COST_QTY_BREAK_2)
10050 COST_QTY_BREAK_3$=STR(COST_QTY_BREAK_3)
10060 COST_QTY_BREAK_4$=STR(COST_QTY_BREAK_4)
10070 COST_QTY_BREAK_5$=STR(COST_QTY_BREAK_5)
10080 COST_QTY_BREAK_6$=STR(COST_QTY_BREAK_6)
10090 COST_QTY_BREAK_7$=STR(COST_QTY_BREAK_7)
10100 COST_QTY_BREAK_8$=STR(COST_QTY_BREAK_8)
10110 COST_QTY_BREAK_9$=STR(COST_QTY_BREAK_9)
10120 COST_QTY_BREAK_10$=STR(COST_QTY_BREAK_10)
10130 COST_QTY_BREAK_11$=STR(COST_QTY_BREAK_11)
10140 COST_QTY_BREAK_12$=STR(COST_QTY_BREAK_12)
10150 UNUSED_TTL_1$=STR(UNUSED_TTL_1)
10160 UNUSED_TTL_2$=STR(UNUSED_TTL_2)
10170 UNUSED_TTL_3$=STR(UNUSED_TTL_3)
10180 UNUSED_TTL_4$=STR(UNUSED_TTL_4)
10190 UNUSED_TTL_5$=STR(UNUSED_TTL_5)
10200 UNUSED_TTL_6$=STR(UNUSED_TTL_6)
10210 UNUSED_TTL_7$=STR(UNUSED_TTL_7)
10220 UNUSED_TTL_8$=STR(UNUSED_TTL_8)
10230 UNUSED_TTL_9$=STR(UNUSED_TTL_9)
10240 UNUSED_TTL_10$=STR(UNUSED_TTL_10)
10250 UNUSED_TTL_11$=STR(UNUSED_TTL_11)
10260 UNUSED_TTL_12$=STR(UNUSED_TTL_12)
10270 UNUSED_COST$=STR(UNUSED_COST)
10280 UNUSED_EXT$=STR(UNUSED_EXT)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="QSD_QTY_PER",_X=QSD_QTY_PER.CTL,QSD_QTY_PER=NUM(QSD_QTY_PER$,ERR=NON_NUMERIC)
11030 _X$="COST_QTY_BREAK_1",_X=COST_QTY_BREAK_1.CTL,COST_QTY_BREAK_1=NUM(COST_QTY_BREAK_1$,ERR=NON_NUMERIC)
11040 _X$="COST_QTY_BREAK_2",_X=COST_QTY_BREAK_2.CTL,COST_QTY_BREAK_2=NUM(COST_QTY_BREAK_2$,ERR=NON_NUMERIC)
11050 _X$="COST_QTY_BREAK_3",_X=COST_QTY_BREAK_3.CTL,COST_QTY_BREAK_3=NUM(COST_QTY_BREAK_3$,ERR=NON_NUMERIC)
11060 _X$="COST_QTY_BREAK_4",_X=COST_QTY_BREAK_4.CTL,COST_QTY_BREAK_4=NUM(COST_QTY_BREAK_4$,ERR=NON_NUMERIC)
11070 _X$="COST_QTY_BREAK_5",_X=COST_QTY_BREAK_5.CTL,COST_QTY_BREAK_5=NUM(COST_QTY_BREAK_5$,ERR=NON_NUMERIC)
11080 _X$="COST_QTY_BREAK_6",_X=COST_QTY_BREAK_6.CTL,COST_QTY_BREAK_6=NUM(COST_QTY_BREAK_6$,ERR=NON_NUMERIC)
11090 _X$="COST_QTY_BREAK_7",_X=COST_QTY_BREAK_7.CTL,COST_QTY_BREAK_7=NUM(COST_QTY_BREAK_7$,ERR=NON_NUMERIC)
11100 _X$="COST_QTY_BREAK_8",_X=COST_QTY_BREAK_8.CTL,COST_QTY_BREAK_8=NUM(COST_QTY_BREAK_8$,ERR=NON_NUMERIC)
11110 _X$="COST_QTY_BREAK_9",_X=COST_QTY_BREAK_9.CTL,COST_QTY_BREAK_9=NUM(COST_QTY_BREAK_9$,ERR=NON_NUMERIC)
11120 _X$="COST_QTY_BREAK_10",_X=COST_QTY_BREAK_10.CTL,COST_QTY_BREAK_10=NUM(COST_QTY_BREAK_10$,ERR=NON_NUMERIC)
11130 _X$="COST_QTY_BREAK_11",_X=COST_QTY_BREAK_11.CTL,COST_QTY_BREAK_11=NUM(COST_QTY_BREAK_11$,ERR=NON_NUMERIC)
11140 _X$="COST_QTY_BREAK_12",_X=COST_QTY_BREAK_12.CTL,COST_QTY_BREAK_12=NUM(COST_QTY_BREAK_12$,ERR=NON_NUMERIC)
11150 _X$="UNUSED_TTL_1",_X=UNUSED_TTL_1.CTL,UNUSED_TTL_1=NUM(UNUSED_TTL_1$,ERR=NON_NUMERIC)
11160 _X$="UNUSED_TTL_2",_X=UNUSED_TTL_2.CTL,UNUSED_TTL_2=NUM(UNUSED_TTL_2$,ERR=NON_NUMERIC)
11170 _X$="UNUSED_TTL_3",_X=UNUSED_TTL_3.CTL,UNUSED_TTL_3=NUM(UNUSED_TTL_3$,ERR=NON_NUMERIC)
11180 _X$="UNUSED_TTL_4",_X=UNUSED_TTL_4.CTL,UNUSED_TTL_4=NUM(UNUSED_TTL_4$,ERR=NON_NUMERIC)
11190 _X$="UNUSED_TTL_5",_X=UNUSED_TTL_5.CTL,UNUSED_TTL_5=NUM(UNUSED_TTL_5$,ERR=NON_NUMERIC)
11200 _X$="UNUSED_TTL_6",_X=UNUSED_TTL_6.CTL,UNUSED_TTL_6=NUM(UNUSED_TTL_6$,ERR=NON_NUMERIC)
11210 _X$="UNUSED_TTL_7",_X=UNUSED_TTL_7.CTL,UNUSED_TTL_7=NUM(UNUSED_TTL_7$,ERR=NON_NUMERIC)
11220 _X$="UNUSED_TTL_8",_X=UNUSED_TTL_8.CTL,UNUSED_TTL_8=NUM(UNUSED_TTL_8$,ERR=NON_NUMERIC)
11230 _X$="UNUSED_TTL_9",_X=UNUSED_TTL_9.CTL,UNUSED_TTL_9=NUM(UNUSED_TTL_9$,ERR=NON_NUMERIC)
11240 _X$="UNUSED_TTL_10",_X=UNUSED_TTL_10.CTL,UNUSED_TTL_10=NUM(UNUSED_TTL_10$,ERR=NON_NUMERIC)
11250 _X$="UNUSED_TTL_11",_X=UNUSED_TTL_11.CTL,UNUSED_TTL_11=NUM(UNUSED_TTL_11$,ERR=NON_NUMERIC)
11260 _X$="UNUSED_TTL_12",_X=UNUSED_TTL_12.CTL,UNUSED_TTL_12=NUM(UNUSED_TTL_12$,ERR=NON_NUMERIC)
11270 _X$="UNUSED_COST",_X=UNUSED_COST.CTL,UNUSED_COST=NUM(UNUSED_COST$,ERR=NON_NUMERIC)
11280 _X$="UNUSED_EXT",_X=UNUSED_EXT.CTL,UNUSED_EXT=NUM(UNUSED_EXT$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13001 GLOBAL_IOL:IOLIST %PLANT_VEND$
13010 CLEAR_FIELDS:
13011 READ DATA FROM "" TO IOL=GLOBAL_IOL
13020 IF _CLR_FLG$="R" THEN QUOTE_DIV$=""
13030 IF _CLR_FLG$="R" THEN QUOTE_NUM$=""
13040 IF _CLR_FLG$="R" THEN QUOTE_LINE_NUM$=""
13050 VEND_DIV$=""
13060 VEND_CODE$=""
13070 VEND_QUOTE_NUM$=""
13080 DELIVERY$=""
13090 TF_COMMENT$=""
13100 QSD_COST_UM$=""
13110 OUTPUT_TYPE$=""
13120 TF_OUTPUT$=""
13130 IF _CLR_FLG$="R" THEN VEND_NUM_ON_SCREEN$=""
13140 COMMENT_2$=""
13150 PLANT_CODE$=""
13160 QSD_QTY_PER=0
13170 COST_QTY_BREAK_1=0
13180 COST_QTY_BREAK_2=0
13190 COST_QTY_BREAK_3=0
13200 COST_QTY_BREAK_4=0
13210 COST_QTY_BREAK_5=0
13220 COST_QTY_BREAK_6=0
13230 COST_QTY_BREAK_7=0
13240 COST_QTY_BREAK_8=0
13250 COST_QTY_BREAK_9=0
13260 COST_QTY_BREAK_10=0
13270 COST_QTY_BREAK_11=0
13280 COST_QTY_BREAK_12=0
13290 UNUSED_TTL_1=0
13300 UNUSED_TTL_2=0
13310 UNUSED_TTL_3=0
13320 UNUSED_TTL_4=0
13330 UNUSED_TTL_5=0
13340 UNUSED_TTL_6=0
13350 UNUSED_TTL_7=0
13360 UNUSED_TTL_8=0
13370 UNUSED_TTL_9=0
13380 UNUSED_TTL_10=0
13390 UNUSED_TTL_11=0
13400 UNUSED_TTL_12=0
13410 UNUSED_COST=0
13420 UNUSED_EXT=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; ELSE CALL "*wingrp;Disable",KEY4.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(41,"N")
15025 IF TF_OUTPUT$="1" THEN TF_OUTPUT$="Y" ! SSP#225850
15030 IF _ORIG.QUOTE_DIV$=_CUR.QUOTE_DIV$ OR QUOTE_DIV$=_CUR.QUOTE_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.QUOTE_DIV$=QUOTE_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("QUOTE_DIV")+" = "+_CUR.QUOTE_DIV$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QUOTE_DIV")+" = "+_CUR.QUOTE_DIV$
15040 IF _ORIG.QUOTE_NUM$=_CUR.QUOTE_NUM$ OR QUOTE_NUM$=_CUR.QUOTE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.QUOTE_NUM$=QUOTE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("QUOTE_NUM")+" = "+_CUR.QUOTE_NUM$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QUOTE_NUM")+" = "+_CUR.QUOTE_NUM$
15050 IF _ORIG.QUOTE_LINE_NUM$=_CUR.QUOTE_LINE_NUM$ OR QUOTE_LINE_NUM$=_CUR.QUOTE_LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.QUOTE_LINE_NUM$=QUOTE_LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("QUOT_L_N")+" = "+_CUR.QUOTE_LINE_NUM$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QUOT_L_N")+" = "+_CUR.QUOTE_LINE_NUM$
15060 IF _ORIG.VEND_DIV$=_CUR.VEND_DIV$ OR VEND_DIV$=_CUR.VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV$=VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$
15070 IF _ORIG.VEND_CODE$=_CUR.VEND_CODE$ OR VEND_CODE$=_CUR.VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE$=VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$
15080 IF _ORIG.VEND_QUOTE_NUM$=_CUR.VEND_QUOTE_NUM$ OR VEND_QUOTE_NUM$=_CUR.VEND_QUOTE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_QUOTE_NUM$=VEND_QUOTE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_Q_N")+" = "+_CUR.VEND_QUOTE_NUM$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_Q_N")+" = "+_CUR.VEND_QUOTE_NUM$
15090 IF _ORIG.DELIVERY$=_CUR.DELIVERY$ OR DELIVERY$=_CUR.DELIVERY$ THEN GOTO *NEXT ELSE IF _ORIG.DELIVERY$=DELIVERY$ THEN _CHG2$=_CHG2$+SEP+MSG("DELIVERY")+" = "+_CUR.DELIVERY$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DELIVERY")+" = "+_CUR.DELIVERY$
15100 IF _ORIG.TF_COMMENT$=_CUR.TF_COMMENT$ OR TF_COMMENT$=_CUR.TF_COMMENT$ THEN GOTO *NEXT ELSE IF _ORIG.TF_COMMENT$=TF_COMMENT$ THEN _CHG2$=_CHG2$+SEP+MSG("COMMENT")+" = "+_CUR.TF_COMMENT$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMMENT")+" = "+_CUR.TF_COMMENT$
15110 IF _ORIG.QSD_COST_UM$=_CUR.QSD_COST_UM$ OR QSD_COST_UM$=_CUR.QSD_COST_UM$ THEN GOTO *NEXT ELSE IF _ORIG.QSD_COST_UM$=QSD_COST_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("COST_UM")+" = "+_CUR.QSD_COST_UM$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_UM")+" = "+_CUR.QSD_COST_UM$
15120 IF _ORIG.OUTPUT_TYPE$=_CUR.OUTPUT_TYPE$ OR OUTPUT_TYPE$=_CUR.OUTPUT_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.OUTPUT_TYPE$=OUTPUT_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("OUTP_TYP")+" = "+_CUR.OUTPUT_TYPE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OUTP_TYP")+" = "+_CUR.OUTPUT_TYPE$
15130 IF _ORIG.TF_OUTPUT$=_CUR.TF_OUTPUT$ OR TF_OUTPUT$=_CUR.TF_OUTPUT$ THEN GOTO *NEXT ELSE IF _ORIG.TF_OUTPUT$=TF_OUTPUT$ THEN _CHG2$=_CHG2$+SEP+MSG("OUTPUT")+" = "+_CUR.TF_OUTPUT$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OUTPUT")+" = "+_CUR.TF_OUTPUT$
15140 IF _ORIG.VEND_NUM_ON_SCREEN$=_CUR.VEND_NUM_ON_SCREEN$ OR VEND_NUM_ON_SCREEN$=_CUR.VEND_NUM_ON_SCREEN$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_NUM_ON_SCREEN$=VEND_NUM_ON_SCREEN$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_N_O_S")+" = "+_CUR.VEND_NUM_ON_SCREEN$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_N_O_S")+" = "+_CUR.VEND_NUM_ON_SCREEN$
15150 IF _ORIG.COMMENT_2$=_CUR.COMMENT_2$ OR COMMENT_2$=_CUR.COMMENT_2$ THEN GOTO *NEXT ELSE IF _ORIG.COMMENT_2$=COMMENT_2$ THEN _CHG2$=_CHG2$+SEP+MSG("COMMENT_2")+" = "+_CUR.COMMENT_2$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMMENT_2")+" = "+_CUR.COMMENT_2$
15160 IF _ORIG.PLANT_CODE$=_CUR.PLANT_CODE$ OR PLANT_CODE$=_CUR.PLANT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_CODE$=PLANT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$
15170 IF _ORIG.QSD_QTY_PER=_CUR.QSD_QTY_PER OR QSD_QTY_PER=_CUR.QSD_QTY_PER THEN GOTO *NEXT ELSE IF _ORIG.QSD_QTY_PER=QSD_QTY_PER THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_PUM")+" = "+STR(_CUR.QSD_QTY_PER),_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_PUM")+" = "+STR(_CUR.QSD_QTY_PER)
15180 IF _ORIG.COST_QTY_BREAK_1=_CUR.COST_QTY_BREAK_1 OR COST_QTY_BREAK_1=_CUR.COST_QTY_BREAK_1 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_1=COST_QTY_BREAK_1 THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_B_1")+" = "+STR(_CUR.COST_QTY_BREAK_1),_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_B_1")+" = "+STR(_CUR.COST_QTY_BREAK_1)
15190 IF _ORIG.COST_QTY_BREAK_2=_CUR.COST_QTY_BREAK_2 OR COST_QTY_BREAK_2=_CUR.COST_QTY_BREAK_2 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_2=COST_QTY_BREAK_2 THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_B_2")+" = "+STR(_CUR.COST_QTY_BREAK_2),_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_B_2")+" = "+STR(_CUR.COST_QTY_BREAK_2)
15200 IF _ORIG.COST_QTY_BREAK_3=_CUR.COST_QTY_BREAK_3 OR COST_QTY_BREAK_3=_CUR.COST_QTY_BREAK_3 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_3=COST_QTY_BREAK_3 THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_B_3")+" = "+STR(_CUR.COST_QTY_BREAK_3),_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_B_3")+" = "+STR(_CUR.COST_QTY_BREAK_3)
15210 IF _ORIG.COST_QTY_BREAK_4=_CUR.COST_QTY_BREAK_4 OR COST_QTY_BREAK_4=_CUR.COST_QTY_BREAK_4 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_4=COST_QTY_BREAK_4 THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_B_4")+" = "+STR(_CUR.COST_QTY_BREAK_4),_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_B_4")+" = "+STR(_CUR.COST_QTY_BREAK_4)
15220 IF _ORIG.COST_QTY_BREAK_5=_CUR.COST_QTY_BREAK_5 OR COST_QTY_BREAK_5=_CUR.COST_QTY_BREAK_5 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_5=COST_QTY_BREAK_5 THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_B_5")+" = "+STR(_CUR.COST_QTY_BREAK_5),_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_B_5")+" = "+STR(_CUR.COST_QTY_BREAK_5)
15230 IF _ORIG.COST_QTY_BREAK_6=_CUR.COST_QTY_BREAK_6 OR COST_QTY_BREAK_6=_CUR.COST_QTY_BREAK_6 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_6=COST_QTY_BREAK_6 THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_B_6")+" = "+STR(_CUR.COST_QTY_BREAK_6),_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_B_6")+" = "+STR(_CUR.COST_QTY_BREAK_6)
15240 IF _ORIG.COST_QTY_BREAK_7=_CUR.COST_QTY_BREAK_7 OR COST_QTY_BREAK_7=_CUR.COST_QTY_BREAK_7 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_7=COST_QTY_BREAK_7 THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_B_7")+" = "+STR(_CUR.COST_QTY_BREAK_7),_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_B_7")+" = "+STR(_CUR.COST_QTY_BREAK_7)
15250 IF _ORIG.COST_QTY_BREAK_8=_CUR.COST_QTY_BREAK_8 OR COST_QTY_BREAK_8=_CUR.COST_QTY_BREAK_8 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_8=COST_QTY_BREAK_8 THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_B_8")+" = "+STR(_CUR.COST_QTY_BREAK_8),_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_B_8")+" = "+STR(_CUR.COST_QTY_BREAK_8)
15260 IF _ORIG.COST_QTY_BREAK_9=_CUR.COST_QTY_BREAK_9 OR COST_QTY_BREAK_9=_CUR.COST_QTY_BREAK_9 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_9=COST_QTY_BREAK_9 THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_B_9")+" = "+STR(_CUR.COST_QTY_BREAK_9),_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_B_9")+" = "+STR(_CUR.COST_QTY_BREAK_9)
15270 IF _ORIG.COST_QTY_BREAK_10=_CUR.COST_QTY_BREAK_10 OR COST_QTY_BREAK_10=_CUR.COST_QTY_BREAK_10 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_10=COST_QTY_BREAK_10 THEN _CHG2$=_CHG2$+SEP+MSG("C_Q_B_10")+" = "+STR(_CUR.COST_QTY_BREAK_10),_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("C_Q_B_10")+" = "+STR(_CUR.COST_QTY_BREAK_10)
15280 IF _ORIG.COST_QTY_BREAK_11=_CUR.COST_QTY_BREAK_11 OR COST_QTY_BREAK_11=_CUR.COST_QTY_BREAK_11 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_11=COST_QTY_BREAK_11 THEN _CHG2$=_CHG2$+SEP+MSG("C_Q_B_11")+" = "+STR(_CUR.COST_QTY_BREAK_11),_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("C_Q_B_11")+" = "+STR(_CUR.COST_QTY_BREAK_11)
15290 IF _ORIG.COST_QTY_BREAK_12=_CUR.COST_QTY_BREAK_12 OR COST_QTY_BREAK_12=_CUR.COST_QTY_BREAK_12 THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_BREAK_12=COST_QTY_BREAK_12 THEN _CHG2$=_CHG2$+SEP+MSG("C_Q_B_12")+" = "+STR(_CUR.COST_QTY_BREAK_12),_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("C_Q_B_12")+" = "+STR(_CUR.COST_QTY_BREAK_12)
15300 IF _ORIG.UNUSED_TTL_1=_CUR.UNUSED_TTL_1 OR UNUSED_TTL_1=_CUR.UNUSED_TTL_1 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_1=UNUSED_TTL_1 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_1")+" = "+STR(_CUR.UNUSED_TTL_1),_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_1")+" = "+STR(_CUR.UNUSED_TTL_1)
15310 IF _ORIG.UNUSED_TTL_2=_CUR.UNUSED_TTL_2 OR UNUSED_TTL_2=_CUR.UNUSED_TTL_2 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_2=UNUSED_TTL_2 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_2")+" = "+STR(_CUR.UNUSED_TTL_2),_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_2")+" = "+STR(_CUR.UNUSED_TTL_2)
15320 IF _ORIG.UNUSED_TTL_3=_CUR.UNUSED_TTL_3 OR UNUSED_TTL_3=_CUR.UNUSED_TTL_3 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_3=UNUSED_TTL_3 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_3")+" = "+STR(_CUR.UNUSED_TTL_3),_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_3")+" = "+STR(_CUR.UNUSED_TTL_3)
15330 IF _ORIG.UNUSED_TTL_4=_CUR.UNUSED_TTL_4 OR UNUSED_TTL_4=_CUR.UNUSED_TTL_4 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_4=UNUSED_TTL_4 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_4")+" = "+STR(_CUR.UNUSED_TTL_4),_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_4")+" = "+STR(_CUR.UNUSED_TTL_4)
15340 IF _ORIG.UNUSED_TTL_5=_CUR.UNUSED_TTL_5 OR UNUSED_TTL_5=_CUR.UNUSED_TTL_5 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_5=UNUSED_TTL_5 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_5")+" = "+STR(_CUR.UNUSED_TTL_5),_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_5")+" = "+STR(_CUR.UNUSED_TTL_5)
15350 IF _ORIG.UNUSED_TTL_6=_CUR.UNUSED_TTL_6 OR UNUSED_TTL_6=_CUR.UNUSED_TTL_6 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_6=UNUSED_TTL_6 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_6")+" = "+STR(_CUR.UNUSED_TTL_6),_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_6")+" = "+STR(_CUR.UNUSED_TTL_6)
15360 IF _ORIG.UNUSED_TTL_7=_CUR.UNUSED_TTL_7 OR UNUSED_TTL_7=_CUR.UNUSED_TTL_7 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_7=UNUSED_TTL_7 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_7")+" = "+STR(_CUR.UNUSED_TTL_7),_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_7")+" = "+STR(_CUR.UNUSED_TTL_7)
15370 IF _ORIG.UNUSED_TTL_8=_CUR.UNUSED_TTL_8 OR UNUSED_TTL_8=_CUR.UNUSED_TTL_8 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_8=UNUSED_TTL_8 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_8")+" = "+STR(_CUR.UNUSED_TTL_8),_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_8")+" = "+STR(_CUR.UNUSED_TTL_8)
15380 IF _ORIG.UNUSED_TTL_9=_CUR.UNUSED_TTL_9 OR UNUSED_TTL_9=_CUR.UNUSED_TTL_9 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_9=UNUSED_TTL_9 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_9")+" = "+STR(_CUR.UNUSED_TTL_9),_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_9")+" = "+STR(_CUR.UNUSED_TTL_9)
15390 IF _ORIG.UNUSED_TTL_10=_CUR.UNUSED_TTL_10 OR UNUSED_TTL_10=_CUR.UNUSED_TTL_10 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_10=UNUSED_TTL_10 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_10")+" = "+STR(_CUR.UNUSED_TTL_10),_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_10")+" = "+STR(_CUR.UNUSED_TTL_10)
15400 IF _ORIG.UNUSED_TTL_11=_CUR.UNUSED_TTL_11 OR UNUSED_TTL_11=_CUR.UNUSED_TTL_11 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_11=UNUSED_TTL_11 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_11")+" = "+STR(_CUR.UNUSED_TTL_11),_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_11")+" = "+STR(_CUR.UNUSED_TTL_11)
15410 IF _ORIG.UNUSED_TTL_12=_CUR.UNUSED_TTL_12 OR UNUSED_TTL_12=_CUR.UNUSED_TTL_12 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_TTL_12=UNUSED_TTL_12 THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_C_12")+" = "+STR(_CUR.UNUSED_TTL_12),_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_C_12")+" = "+STR(_CUR.UNUSED_TTL_12)
15420 IF _ORIG.UNUSED_COST=_CUR.UNUSED_COST OR UNUSED_COST=_CUR.UNUSED_COST THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_COST=UNUSED_COST THEN _CHG2$=_CHG2$+SEP+MSG("QUOT_C")+" = "+STR(_CUR.UNUSED_COST),_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QUOT_C")+" = "+STR(_CUR.UNUSED_COST)
15430 IF _ORIG.UNUSED_EXT=_CUR.UNUSED_EXT OR UNUSED_EXT=_CUR.UNUSED_EXT THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_EXT=UNUSED_EXT THEN _CHG2$=_CHG2$+SEP+MSG("QUOTED_EXT")+" = "+STR(_CUR.UNUSED_EXT),_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QUOTED_EXT")+" = "+STR(_CUR.UNUSED_EXT)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN QUOTE_DIV$=_CUR.QUOTE_DIV$
16030 IF _CHG_VAR$(2,1)="Y" THEN QUOTE_NUM$=_CUR.QUOTE_NUM$
16040 IF _CHG_VAR$(3,1)="Y" THEN QUOTE_LINE_NUM$=_CUR.QUOTE_LINE_NUM$
16050 IF _CHG_VAR$(4,1)="Y" THEN VEND_DIV$=_CUR.VEND_DIV$
16060 IF _CHG_VAR$(5,1)="Y" THEN VEND_CODE$=_CUR.VEND_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN VEND_QUOTE_NUM$=_CUR.VEND_QUOTE_NUM$
16080 IF _CHG_VAR$(7,1)="Y" THEN DELIVERY$=_CUR.DELIVERY$
16090 IF _CHG_VAR$(8,1)="Y" THEN TF_COMMENT$=_CUR.TF_COMMENT$
16100 IF _CHG_VAR$(9,1)="Y" THEN QSD_COST_UM$=_CUR.QSD_COST_UM$
16110 IF _CHG_VAR$(10,1)="Y" THEN OUTPUT_TYPE$=_CUR.OUTPUT_TYPE$
16120 IF _CHG_VAR$(11,1)="Y" THEN TF_OUTPUT$=_CUR.TF_OUTPUT$
16130 IF _CHG_VAR$(12,1)="Y" THEN VEND_NUM_ON_SCREEN$=_CUR.VEND_NUM_ON_SCREEN$
16140 IF _CHG_VAR$(13,1)="Y" THEN COMMENT_2$=_CUR.COMMENT_2$
16150 IF _CHG_VAR$(14,1)="Y" THEN PLANT_CODE$=_CUR.PLANT_CODE$
16160 IF _CHG_VAR$(15,1)="Y" THEN QSD_QTY_PER=_CUR.QSD_QTY_PER
16170 IF _CHG_VAR$(16,1)="Y" THEN COST_QTY_BREAK_1=_CUR.COST_QTY_BREAK_1
16180 IF _CHG_VAR$(17,1)="Y" THEN COST_QTY_BREAK_2=_CUR.COST_QTY_BREAK_2
16190 IF _CHG_VAR$(18,1)="Y" THEN COST_QTY_BREAK_3=_CUR.COST_QTY_BREAK_3
16200 IF _CHG_VAR$(19,1)="Y" THEN COST_QTY_BREAK_4=_CUR.COST_QTY_BREAK_4
16210 IF _CHG_VAR$(20,1)="Y" THEN COST_QTY_BREAK_5=_CUR.COST_QTY_BREAK_5
16220 IF _CHG_VAR$(21,1)="Y" THEN COST_QTY_BREAK_6=_CUR.COST_QTY_BREAK_6
16230 IF _CHG_VAR$(22,1)="Y" THEN COST_QTY_BREAK_7=_CUR.COST_QTY_BREAK_7
16240 IF _CHG_VAR$(23,1)="Y" THEN COST_QTY_BREAK_8=_CUR.COST_QTY_BREAK_8
16250 IF _CHG_VAR$(24,1)="Y" THEN COST_QTY_BREAK_9=_CUR.COST_QTY_BREAK_9
16260 IF _CHG_VAR$(25,1)="Y" THEN COST_QTY_BREAK_10=_CUR.COST_QTY_BREAK_10
16270 IF _CHG_VAR$(26,1)="Y" THEN COST_QTY_BREAK_11=_CUR.COST_QTY_BREAK_11
16280 IF _CHG_VAR$(27,1)="Y" THEN COST_QTY_BREAK_12=_CUR.COST_QTY_BREAK_12
16290 IF _CHG_VAR$(28,1)="Y" THEN UNUSED_TTL_1=_CUR.UNUSED_TTL_1
16300 IF _CHG_VAR$(29,1)="Y" THEN UNUSED_TTL_2=_CUR.UNUSED_TTL_2
16310 IF _CHG_VAR$(30,1)="Y" THEN UNUSED_TTL_3=_CUR.UNUSED_TTL_3
16320 IF _CHG_VAR$(31,1)="Y" THEN UNUSED_TTL_4=_CUR.UNUSED_TTL_4
16330 IF _CHG_VAR$(32,1)="Y" THEN UNUSED_TTL_5=_CUR.UNUSED_TTL_5
16340 IF _CHG_VAR$(33,1)="Y" THEN UNUSED_TTL_6=_CUR.UNUSED_TTL_6
16350 IF _CHG_VAR$(34,1)="Y" THEN UNUSED_TTL_7=_CUR.UNUSED_TTL_7
16360 IF _CHG_VAR$(35,1)="Y" THEN UNUSED_TTL_8=_CUR.UNUSED_TTL_8
16370 IF _CHG_VAR$(36,1)="Y" THEN UNUSED_TTL_9=_CUR.UNUSED_TTL_9
16380 IF _CHG_VAR$(37,1)="Y" THEN UNUSED_TTL_10=_CUR.UNUSED_TTL_10
16390 IF _CHG_VAR$(38,1)="Y" THEN UNUSED_TTL_11=_CUR.UNUSED_TTL_11
16400 IF _CHG_VAR$(39,1)="Y" THEN UNUSED_TTL_12=_CUR.UNUSED_TTL_12
16410 IF _CHG_VAR$(40,1)="Y" THEN UNUSED_COST=_CUR.UNUSED_COST
16420 IF _CHG_VAR$(41,1)="Y" THEN UNUSED_EXT=_CUR.UNUSED_EXT
16990 RETURN 
17000 WRITE_QSE:
17010 QSE_KEY$="F"+QUOTE$+QUOTE_LINE_NUM$+VENDOR$+VEND_NUM_ON_SCREEN$
17020 REMOVE (_QSE,KEY=QSE_KEY$,DOM=*NEXT)
17030 REMOVE (_QSE,KEY="P"+QSE_KEY$(2),DOM=*NEXT)
17040 IF TF_OUTPUT$="Y" AND POS(OUTPUT_TYPE$="FP")<>0 THEN QSE_KEY$(1,1)=OUTPUT_TYPE$; WRITE (_QSE,KEY=QSE_KEY$)
17050 RETURN 
20000 ! ^20000,10 - Vendor Information
20010 VEND_INFO:
20020 CALL "ZZWLKU;PARSE_VEND",VENDOR$,VEND_DIV$,VEND_CODE$
20025 GOSUB VENDOR_CHECK ! SSP229436 jdf
20030 %PLANT_VEND$=VEND_DIV$+VEND_CODE$
20040 RETURN 
20200 ! ^20200,10 - Check for new entry
20210 CHK_NEW:
20220 IF ARG_1$="" THEN GOTO NEXT_REC
20230 REFRESH_FLG=1
20240 _KCNT=3,_EOM$=$0D$
20250 GOSUB NEW_RECORD
20260 _ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
20270 RETURN 
20300 VENDOR_CHECK:! SSP229436 jdf
20310 IOLIST QSD$,QSD{ALL} ! SSP229436 jdf
20320 DIM QSD$(289),QSD[36] ! SSP229436 jdf
20330 QSD_KEY_CHECK$=_KEY$(1,11) ! SSP229436 jdf
20340 READ (_FIL_NO,KEY="",DOM=*NEXT) ! SSP229436 jdf
20350 QSD_KEY$=KEY(_FIL_NO,END=20445) ! SSP229436 jdf
20360 READ (_FIL_NO,KEY=QSD_KEY$,DOM=*NEXT)IOL=20310 ! SSP229436 jdf
20370 IF QSD_KEY$(1,11)=QSD_KEY_CHECK$ THEN {! SSP229436 jdf
20380 IF QSD$(12,10)=VENDOR$ THEN {! SSP229436 jdf
20390 MSGBOX MSG("VENDOR_RFQ"),MSG("FYI") ! SSP229436 jdf
20400 VENDOR$="" ! SSP229436 jdf
20405 NEXT_ID=VENDOR.CTL ! SSP229436 jdf
20410 RETURN ! SSP229436 jdf
20420  } ! SSP229436 jdf
20430  } ! SSP229436 jdf
20440 GOTO 20350 ! SSP229436 jdf
20446 READ (_FIL_NO,KEY=ARG_1$,DOM=*NEXT)IOL=20310 ! SSP229436 jdf
20450 RETURN ! SSP229436 jdf
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56002 REM "229436-If a vendor is listed more than once on an RFQ, it sends the
