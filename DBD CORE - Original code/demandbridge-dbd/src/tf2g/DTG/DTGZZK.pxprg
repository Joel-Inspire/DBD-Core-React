0010 ! DTGZZK - Output Director ZZK Handler
0035 REM "5.7 - 10/14/11 - 10.748055 - jvv - SSP# 250035
0037 REM "250035-How do I check the logs of when the report scheduler is     
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! 
0060 ! PEN (22)"ZZK500"
0065 ! PEN (UNT)"DTK500"; Z[23]=UNT
0100 IOL_ZZK_S:IOLIST ZZK_KEY_S$,RPT_PGM_NAME$,RPT_DESC$,SCHD_MM$,SCHD_HH$,SCHD_DOM$,SCHD_MTH$,SCHD_DOW$ ! Scheduling Options
0110 IOL_DTK:IOLIST DTK_KEY$,DTK_SCHD_DATE$,DTK_SCHD_TIME$,DTK_RUN_DATE$,DTK_RUN_TIME$
1000 CHECK_SCHEDULED_JOBS:
1005 DIM D[12]; D[1]=31,D[2]=28,D[3]=31,D[4]=30,D[5]=31,D[6]=30,D[7]=31,D[8]=31,D[9]=30,D[10]=31,D[11]=30,D[12]=31
1010 REM "Iterate over all ZZK records
1020 READ (Z[22],KEY="",DOM=*NEXT)
1030 NEXT_SCHD_JOB_REC:
1035 SETERR AFTER_READONLY
1039 SET_PARAM 'XI'
1040 SJK$=KEY(Z[22],END=DONE_CSJ); READ (Z[22],KEY=SJK$)IOL=IOL_ZZK_S
1041 AFTER_READONLY: SET_PARAM -'XI'
1045 REM "Look for "S" type records - these are already scheduled jobs
1050 IF MID(SJK$,32,1)<>"S" THEN GOTO NEXT_SCHD_JOB_REC
1060 REM "Found a job, check if it is time to execute it
1065 OK_TO_EXEC=0
1070 GOSUB CHECK_FOR_TIME ! Check to see if it is time for processing
3500 GOTO NEXT_SCHD_JOB_REC
4000 DONE_CSJ:
4090 SET_PARAM -'XI'
4095 RETURN 
4999 ! 
9999 END 
10000 CHECK_FOR_TIME:
10005 GOSUB GET_CURRENT_TIME
10010 IF STP(SCHD_MM$,2)="" OR SCHD_MM$="*" THEN SCHD_MM$="*"; END_IF ; SUB_MM=FNSET_DIM(SCHD_MM$); DIM DTMM$[SUB_MM]
10015 IF STP(SCHD_HH$,2)="" OR SCHD_HH$="*" THEN SCHD_HH$="*"; END_IF ; SUB_HH=FNSET_DIM(SCHD_HH$); DIM DTHH$[SUB_HH]
10018 IF SCHD_MM$="*" AND SCHD_HH$="*" THEN GOTO CHECK_TIME_EXIT
10020 IF STP(SCHD_MTH$,2)="" THEN SCHD_MTH$="*"; END_IF ; SUB_MTH=FNSET_DIM(SCHD_MTH$); DIM DTMTH$[SUB_MTH]
10025 DOW_DATES$="",DOW_CNT=0
10030 IF STP(SCHD_DOW$,2)="" OR SCHD_DOW$="*" THEN SUB_DOW=0 ELSE GOSUB DOW_DATE
10035 IF STP(SCHD_DOM$,2)="" OR SCHD_DOM$="*" THEN SCHD_DOM$="*",DOM_ALL=1 ELSE DOM_ALL=0
10040 IF DOM_ALL AND SUB_DOW>0 THEN IF DOW_CNT>0 THEN DIM DTDOM$[DOW_CNT]; SUB_DOM=0; GOSUB DOM_SETUP; GOTO 10070 ELSE GOTO CHECK_TIME_EXIT ! SSP 250971
10045 SUB_DOM=FNSET_DIM(SCHD_DOM$); TOT_DOM=SUB_DOM+DOW_CNT; DIM DTDOM$[TOT_DOM]
10050 DIM DTV$[TOT_DOM]; DTS$=SCHD_DOM$; GOSUB LOAD_DIM; DTDOM${ALL}=DTV${ALL}
10060 IF DOW_CNT>0 THEN GOSUB DOM_SETUP
10070 DIM DTV$[SUB_MM]; DTS$=SCHD_MM$; GOSUB LOAD_DIM; DTMM${ALL}=DTV${ALL}
10075 DIM DTV$[SUB_HH]; DTS$=SCHD_HH$; GOSUB LOAD_DIM; DTHH${ALL}=DTV${ALL}
10085 DIM DTV$[SUB_MTH]; DTS$=SCHD_MTH$; GOSUB LOAD_DIM; DTMTH${ALL}=DTV${ALL}
10100 ! 
10110 FOR MM=1 TO SUB_MM
10115 FOR YY=1 TO SUB_HH
10120 FOR DM=1 TO SUB_DOM
10125 FOR MT=1 TO SUB_MTH
10140 DIM CSHD$[4]
10150 CSHD$[1]=DTMM$[MM]
10155 CSHD$[2]=DTHH$[YY]
10160 CSHD$[3]=DTDOM$[DM]
10165 CSHD$[4]=DTMTH$[MT]
10200 IF CSHD$[1]="*" THEN CSHD$[1]=CMM$
10210 IF CSHD$[2]="*" THEN CSHD$[2]=CHH$
10220 IF CSHD$[3]="*" THEN CSHD$[3]=CDOM$
10225 IF CSHD$[4]="*" THEN CSHD$[4]=CMTH$
10250 SCH_DATE$=CURR_YY$+CSHD$[4]+CSHD$[3]
10265 SCH_TIME$=CSHD$[2]+CSHD$[1]
10270 IF SCH_DATE$=CURR_DATE$ THEN GOTO *NEXT ELSE GOTO CONTINUE_LOOP
10280 IF SCH_TIME$>CURR_TIME$ THEN GOTO CONTINUE_LOOP
10300 CHECK_SCHEDULE:
10330 DTK_KEY$=SJK$+SCH_DATE$+SCH_TIME$
10350 FIND (Z[23],KEY=DTK_KEY$,DOM=*NEXT)*; GOTO CONTINUE_LOOP
10360 DTK_SCHD_DATE$=SCH_DATE$,DTK_SCHD_TIME$=SCH_TIME$,DTK_RUN_DATE$=CURR_DATE$,DTK_RUN_TIME$=CURR_TIME$
10370 WRITE (Z[23],KEY=DTK_KEY$)IOL=IOL_DTK
10380 MSG$="DTGZZK|Job ready for processing|"+MID(SJK$,1,31); MX=FN%TOD_LOG("INFO",MSG$,1,1)
10382 GOSUB LOAD_SCHEDULED_JOB
10385 CONTINUE_LOOP:
10395 NEXT MT
10400 NEXT DM
10405 NEXT YY
10410 NEXT MM
10480 CHECK_TIME_EXIT:
10495 RETURN 
10499 ! 
11000 GET_CURRENT_TIME:
11010 CURR_DATE$=DTE(0:"%Y%Mz%Dz")
11012 CURR_YY$=CURR_DATE$(1,4)
11015 CURR_TIME$=DTE(0:"%Hz%mz")
11018 CURR_DAY$=DTE(0:"%Wz")
11020 CMM$=CURR_TIME$(3,2)
11025 CHH$=CURR_TIME$(1,2)
11030 CDOM$=CURR_DATE$(7,2)
11035 CMTH$=CURR_DATE$(5,2)
11040 CDOW$=CURR_DAY$
11090 RETURN 
11099 ! 
13000 DOW_DATE:
13002 DOW_DATES$="",DOW_CNT=0
13005 SUB_DOW=FNSET_DIM(SCHD_DOW$); DIM DTDOW$[SUB_DOW]
13008 DIM DTV$[SUB_DOW]; DTS$=SCHD_DOW$; GOSUB LOAD_DIM; DTDOW${ALL}=DTV${ALL}
13010 LPY=NUM(CURR_YY$); IF MOD(LPY,4)=0 THEN D[2]=29 ! CHECK FOR LEAP YEAR
13020 DWM=NUM(CMTH$),DWD=NUM(CDOM$) ! Current mth and day of mth
13030 FOR DW=1 TO SUB_DOW
13040 S_DOW=NUM(DTDOW$[DW]); IF S_DOW=0 THEN S_DOW=7 ! Sunday day 7 from DTE SSP 250035
13060 FOR DD=DWD TO D[DWM]
13070 CALC_DATE$=CURR_YY$+CMTH$+STR(DD:"00")
13080 Y=NUM(CALC_DATE$(3,2))
13090 M=NUM(CALC_DATE$(5,2))
13100 D=NUM(CALC_DATE$(7,2))
13110 JJ=JUL(Y,M,D,ERR=13150)
13120 JDW$=DTE(JJ:"%Wz")
13130 IF NUM(JDW$)<>S_DOW THEN GOTO 13200
13140 DOW_CNT+=1
13150 DOW_DATES$=DOW_DATES$+CALC_DATE$(7,2)
13200 NEXT DD
13210 NEXT DW
13995 RETURN 
13999 ! 
14000 DOM_SETUP:
14010 IF DOW_CNT=0 THEN RETURN 
14020 FOR DWST=1 TO LEN(DOW_DATES$)/2
14030 SUB_DOM+=1
14040 DTDOM$[SUB_DOM]=DOW_DATES$(DWST*2-1,2)
14050 NEXT DWST
14995 RETURN 
14999 ! 
15000 REM "Loads a job from ZZK into DT6 and DTK for processing
15005 LOAD_SCHEDULED_JOB:
15010 CALL "UPDDT0;GET_NEXT_TRANS_NUM",Z[13],X3$,TOD_TRANS$
15020 MSG$="DTGZZK|Obtain transaction number|"+TOD_TRANS$; MX=FN%TOD_LOG("INFO",MSG$,1,1)
15025 OPEN (HFN,ERR=ERR_DT6_OPEN)"DT6"+%C$; _DT6=LFO
15030 DIM DT6$(530); DT6$(1,10)=TOD_TRANS$,DT6$(11,20)=PAD("SCHEDULED_DBD_RPT",20),DT6$(31,31)=MID(SJK$,1,31)
15040 WRITE (_DT6,KEY=DT6$(1,10))DT6$
15045 MSG$="DTGZZK|Scheduled job for execution|"+TOD_TRANS$+"|"+MID(SJK$,1,31); MX=FN%TOD_LOG("INFO",MSG$,1,1)
15090 CLOSE (_DT6)
15095 RETURN 
15096 ! 
15097 ERR_DT6_OPEN: MSGBOX "Error opening DT6 file","Error","OK"
15098 MSG$="DTGZZK|ERROR: DT6 file could not be opened.|"; MX=FN%TOD_LOG("INFO",MSG$,1,1)
15099 RETURN 
15199 ! 
20000 DEF FNSET_DIM(LOCAL DTV$)
20020 X=POS(","=DTV$,1,0)+1
20090 RETURN X
20095 END DEF
20099 ! 
21000 LOAD_DIM:
21010 DT_SUB=0
21020 P_SUB=POS(","=DTS$),DT_SUB=DT_SUB+1; IF P_SUB=0 THEN IF DTS$="*" THEN DTV$[DT_SUB]=DTS$; GOTO *NEXT ELSE DTT=NUM(DTS$),DTV$[DT_SUB]=STR(DTT:"00"); GOTO *NEXT END_IF ELSE DTT=NUM(DTS$(1,P_SUB-1)),DTV$[DT_SUB]=STR(DTT:"00"); DTS$=DTS$(P_SUB+1); GOTO *SAME
21040 ! P_SUB=POS(","=DTS$),DT_SUB=DT_SUB+1; IF P_SUB=0 THEN DTV$[DT_SUB]=DTS$; GOTO *NEXT ELSE DTV$[DT_SUB]=DTS$(1,P_SUB-1); DTS$=DTS$(P_SUB+1); GOTO *SAME
21095 RETURN 
21099 ! 
50000 ! MSG$="DTGZZK|Report sucessfully sent."; MX=FN%TOD_LOG("INFO",MSG$,1,1)
56000 ! 
56001 REM "240570-GUI Printing - Support for queueing and scheduling reports. 
56002 REM "250035-How do I check the logs of when the report scheduler is     
56004 REM "250971-Report Scheduler sending reports daily instead of weekly    
