0010 ! DTGZ10 - TopForm Output Director
0035 REM "5.7 - 11/18/20 - 9.6425 - crg - SSP# 307318
0037 REM "307318-DBD-146-Prevent duplicate Output Director processes         
0040 REM "Copyright 2020 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 IF TCB(29)<7100000 THEN MSGBOX "You must be using Providex Version 7.1 or Higher to access this program"; IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0052 IF TCB(88)=0 THEN {
0055 MSGBOX "You must be using Windx to access this program"
0057  } ELSE {
0060 PROCESS "DTGZ10V7","../DTG/DT.EN"
0065  }
0075 IF TCB(13)=1 THEN %GUI=0; RUN "ZMENU" ELSE EXIT 
0098 ! 
0099 ! 
0110 INIT:
0115 %FLMAINT_MSG$="./lib/_tfmsglib.en"
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0125 CALL "ZZWMX3"
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0160 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; DIM Z[NUM(X3$(60,3))]
0165 Z$="01O DT0...  02O DT6...  03O DT2...  05O DTR...  06O DTI...  07O DTD...  13O ZZPARM 14O DTW...  15O FM0...  16O IC0...  17O IC1...  19O DT3...  20O DTU...  21O DTP...  22O ZZK...  23O DTK...  24O RPK...  " ! [201588]
0170 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0175 DT0=Z[1],DT2=Z[3],DTR=Z[5],DTI=Z[6],DTD=Z[7],DTW=Z[14],FM0=Z[15],IC0=Z[16],IC1=Z[17],ZZPARM=Z[13],DT3=Z[19],DTU=Z[20]
0176 DTP=Z[21] ! [201588]
0186 LENGTH_OF_TIMEOUT=120
0191 IF TCB(88)<>0 THEN %WDX$="[wdx]" ELSE %WDX$=""
0195 RETURN 
0298 ! 
0299 ! 
0300 ! !300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0398 ! 
0399 ! 
0400 ! !^100 - Retrieve messages from the *msglib.xxx library
0405 SETUP_MESSAGES:
0410 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
0415 _MSG_DIRECTORY$=MSG("DIRECTORY")
0420 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
0425 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
0430 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
0435 _MSG_MANDATORY$=MSG("MANDATORY")
0440 _MSG_NEXT$=MSG("NEXT")
0445 _MSG_NON_NUMER$=MSG("NON_NUMER")
0450 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
0455 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
0460 _MSG_PRECEDING$=MSG("PRECEDING")
0465 _MSG_PREFIX$=MSG("PREFIX")
0470 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
0475 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
0480 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
0485 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
0490 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
0495 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
0500 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
0505 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
0510 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
0515 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
0520 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
0525 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
0530 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
0535 _MSG_START_FILE$=MSG("START_FILE")
0540 _MSG_UPDATE$=MSG("UPDATE")
0545 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
0550 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
0555 _MSG_UPD_SAME$=MSG("UPD_SAME")
0560 _MSG_WARNING$=MSG("WARNING")
0595 RETURN 
0598 ! 
0599 ! 
0600 MAIN_POST_DISPLAY:
0605 RESPCTL=0,PRT=0,STOP_CTL=TERMINATE.CTL
0606 %TOD=1 ! 240570
0607 MON_KEY$="DTGZ10MN"; WRITE (Z[13],KEY=MON_KEY$,ERR=ERR_MULTIPLE)MON_KEY$+FID(0); EXTRACT (Z[13],KEY=MON_KEY$,ERR=ERR_MULTIPLE)MONITOR$ ! 307318 - prevent multiple processes
0610 GOSUB INIT_LOG; IF ERR_LOG_OPEN THEN USRINPUT$=""; MSGBOX MSG("DTGZ10_L1",MSG(ERR_LOG_OPEN)),MSG("ERROR"),"!,YESNO",USRINPUT$; IF USRINPUT$="YES" THEN GOTO *SAME ELSE CMD_STR$="END"; GOTO TOD_DONE
0615 MSG$="DTGZ10|Output Director|START"; MX=FN%TOD_LOG("INFO",MSG$,1,1)
0620 REPEAT 
0622 PERFORM "DTGZZK;CHECK_SCHEDULED_JOBS"
0623 PERFORM "DTGRPK;CHECK_SCHEDULED_JOBS"
0625 GOSUB PRINT_DOCUMENTS
0626 AFTER_PRINT_DOCS:
0627 GOSUB UPDATE_STATUS ! 268710
0630 MSG$="DTGZ10|Waiting "+STR(LENGTH_OF_TIMEOUT)+" sec."; MX=FN%TOD_LOG("INFO",MSG$,1,1)
0635 KEYSTROKE=0; OBTAIN (0,SIZ=1,TIM=LENGTH_OF_TIMEOUT,ERR=*NEXT)'ME',*,'MN'; KEYSTROKE=CTL
0636 FCOUNT=0,PRT=0
0640 STOP_PRINTING:IF KEYSTROKE=STOP_CTL THEN EXITTO SELECT_STOP
0670 GOSUB UPDATE_X3
0680 UNTIL (DONE) ! END REPEAT
0690 TOD_DONE:
0695 RETURN 
0698 ! 
0699 ! 
0900 ! !900 - Wrapup
0910 WRAPUP:
0915 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0975 %TOD=0 ! 240570
0980 IF %TOD_LOG THEN MSG$="DTGZ10|Output Director|STOP"; MX=FN%TOD_LOG("INFO",MSG$,1,1); CLOSE (%TOD_LOG,ERR=*PROCEED); %TOD_LOG=0
0990 RETURN 
0998 ! 
0999 ! 
9999 END 
10100 SELECT_BEGIN:
10150 GOSUB MAIN_POST_DISPLAY
10190 RETURN 
10198 ! 
10199 ! 
10200 SELECT_STOP:
10205 KEYSTROKE=0
10210 BUTTON ENABLE BEGIN.CTL
10215 BUTTON ENABLE BUTTON_3.CTL
10220 BUTTON DISABLE TERMINATE.CTL
10225 PRINT 'MESSAGE'('_BLUE'+'WHITE'+"Stopped!",0)
10230 REFRESH_FLG=1
10245 RETURN 
10249 ! 
11000 PRINT_DOCUMENTS:
11010 READ (Z[2],KEY="",DOM=*NEXT)
11020 MSG$="DTGZ10|Checking output director queue."; MX=FN%TOD_LOG("INFO",MSG$,1,1)
11036 DIM DT6$(530); DT6K$=KEY(Z[2],END=*RETURN) ! 268942
11038 IF PRM('XI') THEN MSG$="DTGZ10|PARAM 'XI' IS SET!"; MX=FN%TOD_LOG("WARN",MSG$,1,1); SET_PARAM 'XI'=0
11040 EXTRACT RECORD (Z[2],KEY=DT6K$,DOM=11030,BSY=*NEXT,TIM=0)DT6$; GOTO 11099
11050 DT6K$=KEN(Z[2],END=*RETURN); GOTO 11040
11152 MSG$="DTGZ10|Retrieving record from the queue."; MX=FN%TOD_LOG("INFO",MSG$,1,1)
11154 TRANS_NUM$=MID(DT6$,1,10),OUTPUT_TYPE$=MID(DT6$,11,20) ! DT6OBJ'GETOUTPUTTYPE$()
11157 MSG$="DTGZ10|Output type: "+OUTPUT_TYPE$+"|Transaction no: "+TRANS_NUM$; MX=FN%TOD_LOG("INFO",MSG$,1,1)
11160 GOSUB OPEN_OBJECT
11200 FIRST_REC=OOP'GETFIRSTREC(TRANS_NUM$)
11210 IF FIRST_REC THEN {
11250 TF_IL1$=OOP'IL_DT1$
11260 TF_IL2$=OOP'IL_DT2$
11300 OK=OOP'FINDDT0MATCH()
15000 IF OK THEN {
15100 SET_YES=OOP'SETYES()
15200 FOUNDDT0=1
15500 WHILE FOUNDDT0 ! 16950 wend
15600 MSG$="DTGZ10|Retrieving output details."; MX=FN%TOD_LOG("INFO",MSG$,1,1)
15700 DT0$=OOP'DT0$
15710 OUTPUT_TYPE$=DT0$(1,20)
15715 REPORT_NAME$=DT0$(407,20) ! 235764
15720 TOD_FILE_NAME$=""; IF DT0$(61,1)="9" THEN GOSUB GET_FILE_NAME ! 235764, 234689
16150 CALL "DTGTOD;GET_FILENAME",DTR,X3$,OUTPUT_TYPE$,REPORT_NAME$,TOD_FILE_NAME$,FILE_NAME$,DT0$(61,1),DT0$(427,1) ! get file name; 235764
16155 MSG$="DTGZ10|Filename :"+FILE_NAME$; MX=FN%TOD_LOG("INFO",MSG$,1,1)
16160 IF LAST_FILE_NAME$=FILE_NAME$ THEN WAIT 2; GOTO 16150
16165 LAST_FILE_NAME$=FILE_NAME$
16170 MSG$="DTGZ10|Generating the report."; MX=FN%TOD_LOG("INFO",MSG$,1,1)
16180 CALL "DTGTOD;CREATE_FILE",DT0,DT0$,FILE_NAME$,FULL_PATH$,DIRECTORY$,SERVER_NUM$ ! create file
16200 CALL "DTGTOD;OPEN_FILE",FULL_PATH$,DT0$,FILE_CHAN,RPT_FILE$,OPEN_ERR ! open file
16210 IF NOT(OPEN_ERR) THEN {
16250 RUN_REPT=OOP'PRT_RPT(FILE_CHAN)
16260 CLOSE (FILE_CHAN)
16300 MSG$="DTGZ10|Sending the report."; MX=FN%TOD_LOG("INFO",MSG$,1,1)
16310 CALL "DTGTOD;BUILD_DIRECTORY",DT0,DT0$,DIRECTORY$,SERVER_NUM$
16320 CALL "DTGTOD;OUTPUT_FILES",X3$,DT0$,DIRECTORY$
16330 MSG$="DTGZ10|Report sucessfully sent."; MX=FN%TOD_LOG("INFO",MSG$,1,1)
16390  }
16800 GOSUB UPDATE_STATUS ! 290452
16900 FOUNDDT0=OOP'GETNEXTDT0SEQ()
16950 WEND ! 15500
17000  } ! 15000
17800 DEL_YES=OOP'DELYES()
17810  }
17820 MX=0; REMOVE (Z[2],KEY=DT6K$,ERR=*NEXT); MX=1
17822 MSG$="DTGZ10|Done|Output type: "+OUTPUT_TYPE$+"|Transaction no: "+TRANS_NUM$+"|"+STR(MX)+"|"; MX=FN%TOD_LOG("INFO",MSG$,1,1)
17840 DROP OBJECT OOP
17850 ! 
19000 GOTO 11030
20000 ! 
24990 RETURN 
25999 ! 
26000 OPEN_OBJECT:
26010 SWITCH STP(OUTPUT_TYPE$,2)
26020 CASE "CUST_PO_RECPT_NOT" ! customer po recpts notfication
26022 OOP=NEW("DTGDT2")
26025 BREAK
26030 CASE "CUST_INVOICE" ! customer invoice
26032 OOP=NEW("DTGDTI")
26035 BREAK
26040 CASE "CUST_WHS_INV_STAT"
26042 OOP=NEW("DTGDTW")
26045 BREAK
26050 CASE "CUST_INV_UPD_NOT"
26052 OOP=NEW("DTGDT3")
26055 BREAK
26060 CASE "CUST_TRACKING" ! customer shipment tracking
26062 OOP=NEW("DTGDTU")
26065 BREAK
26070 CASE "WHS_PACKING_LIST" ! [201588]-Warehouse Packing List
26072 OOP=NEW("DTGDTP")
26075 BREAK
26080 CASE "PURCHASE_ORDER"
26082 OOP=NEW("DTGDTO")
26085 BREAK
26090 CASE "KIT_PO_RECPT_NOT"
26092 OOP=NEW("DTGDT2B")
26094 BREAK
26095 CASE "CSR_PO_RECPT_NOT"
26097 OOP=NEW("DTGDT2C")
26099 BREAK
26100 CASE "SCHEDULED_DBD_RPT"
26101 OOP=NEW("DTGZZK")
26102 BREAK
26110 CASE "SCHEDULED_DBRS_RPT" ! 261434
26111 OOP=NEW("DTGRPK")
26112 BREAK
26450 END SWITCH 
26490 RETURN 
26498 ! 
26499 ! 
28000 GET_FILE_NAME:
28010 TOD_FILE_NAME$=""
28050 SWITCH STP(OUTPUT_TYPE$)
28060 CASE "CUST_INVOICE"
28065 TOD_FILE_NAME$=STP(TF_IL1$)+"_"+STP(TF_IL2$) ! customer + invoice
28069 BREAK
28070 CASE "PURCHASE_ORDER"
28075 TOD_FILE_NAME$=STP(TF_IL1$)+"_"+STP(TF_IL2$,3) ! po + vendor
28079 BREAK
28080 CASE "WHS_PACKING_LIST"
28085 TOD_FILE_NAME$=STP(TF_IL1$)+"_"+STP(TF_IL2$) ! order + whse
28089 BREAK
28470 DEFAULT 
28475 TOD_FILE_NAME$=""
28480 END SWITCH 
28490 RETURN 
28498 ! 
28499 ! 
28500 UPDATE_X3:! 259947
28505 DTMP$=DTE(0:"%Y%Mz%Dz")
28510 TMPDATE$=CHR(INT((NUM(DTMP$(1,4))-1900)/10)+65)+DTMP$(4,5)
28515 X3$(15,6)=TMPDATE$,X3$(21,6)=TMPDATE$
28520 %X3$=X3$
28545 RETURN 
28549 ! 
28600 UPDATE_STATUS:
28610 CALL "UPDSV0;UPDATE_STATUS",ERR=*NEXT,"OUTPUTDIR","OUTPUT DIR "+SERVER_NUM$,STR(NUM(SERVER_NUM$):"000"),"Output Director "+SERVER_NUM$,"DTGZ10",STR(TCB(89))
28645 RETURN 
28649 ! 
50000 REM "Open log file using this TOD id number (multiple TOD could be running)
50010 INIT_LOG:
50020 SERVER_NUM$="1"; ERR_LOG_OPEN=0
50025 PRINT 'MESSAGE'(DEF -40,-15); GOSUB DEFINE_LOG_FUNCTION
50030 OPEN_LOG: OUTDIR_LOG$="OUTDIR"+SERVER_NUM$+"."+FN%PRINT_DATETIME$(0,"%Y%Mz%Dz")+".log"; SERIAL OUTDIR_LOG$,ERR=*NEXT
50040 OPEN LOCK (HFN,ERR=*NEXT)OUTDIR_LOG$; %TOD_LOG=LFO; GOTO AFTER_OPEN ! Global TOD log file channel. SSP270466, change GFN to HFN
50050 IF ERR=0 THEN GOTO ERR_MULTIPLE ! SERVER_NUM$=STR(NUM(SERVER_NUM$,ERR=*NEXT)+1,ERR=*NEXT); GOTO OPEN_LOG ! File busy - Another TOD running? Retry using next higher id; For now, only one Out Dir session is supported
50060 ERR_LOG_OPEN=ERR; GOTO *RETURN ! Unexpected error, return to caller
50065 ERR_MULTIPLE:
50066 CMD_STR$="END"; MSGBOX MSG("DTGZ10_MUL"),MSG("ERROR"),"STOP,OK"; EXITTO TOD_DONE
50070 AFTER_OPEN:! log file is open now
50080 PRINT (0,ERR=*NEXT)'CAPTION'("Output Director "+SERVER_NUM$+" - Log: "+OUTDIR_LOG$),
50090 RETURN 
50099 ! 
50100 DEFINE_LOG_FUNCTION:! define global log function to use - LOG_IT and SHOW_IT control whether message is written to log and/or status bar
50110 DEF FN%TOD_LOG(LOCAL MESSAGE_TYPE$, LOCAL MESSAGE$, LOCAL LOG_IT, LOCAL SHOW_IT)
50112 LOCAL OUT$,OUTMSG$,OUTDATE$
50120 IF NUL(MESSAGE_TYPE$) THEN MESSAGE_TYPE$="INFO"
50125 IF %X3$(48,1)="2" THEN OUTDATE$=DTE(0:"%Y-%Dz-%Mz|%Hz:%mz:%sz") ELSE OUTDATE$=DTE(0:"%Y-%Mz-%Dz|%Hz:%mz:%sz"); END_IF ; OUTMSG$=MESSAGE_TYPE$+"|"+MESSAGE$; OUT$=OUTDATE$+"|"+OUTMSG$
50130 IF NOT(%TOD_NOLOG) THEN IF LOG_IT THEN PRINT (%TOD_LOG,ERR=LOG_MSG_ERROR)OUT$ ! SSP270466, add ERR=
50135 IF NOT(%TOD_NOSTATUS) THEN IF SHOW_IT THEN PRINT 'MESSAGE'('_BLUE'+'WHITE'+SUB(SUB(OUTMSG$,"|",":"),"DTGZ10:"," "),0); PRINT 'MESSAGE'('_BLUE'+'WHITE'+SUB(OUTDATE$,"|",":"),2)
50165 RETURN 1 ! SSP270466, move line 50185 to line 50165
50170 LOG_MSG_ERROR:
50175 ERRNO=ERR,LOG_CHANNEL=%TOD_LOG; IF ERRNO=278 AND FIN(LOG_CHANNEL,"FILELENGTH")>="2147483648" THEN LOG_CHANNEL=FN%TEXT_FILE_ROTATE(LOG_CHANNEL); %TOD_LOG=LOG_CHANNEL; GOTO 50130 ! SSP270466, file has hit limit
50185 RETURN 0
50190 END DEF
50195 RETURN 
50199 ! 
56000 REM "203516-Duplicate file name for 806 xml
56002 REM "200524-Ability to send an email to originator of PO that product
56004 REM "201588-Create XML output of orders to remote warehouse location Mike Ellison wrote:
56006 REM "203099-Enhancements to Output Director.  Provide ability for
56007 REM "230554-Output Director fails every other day! Implement logging
56008 REM "240570-GUI Printing - Support for queueing and scheduling reports.
56009 REM "259947-Report Scheduler - is not printing the correct run date.
56010 REM "261434-DBRS Development - Next Phase - Ability to schedule BIRT rpt
56011 REM "265084-Change daily processed jobs to be triggered by cron
56012 REM "268710-Server status reporting framework
56014 REM "270466-Unattended printing log gets to the maximum size and stops  
56016 REM "261434-DBRS Development - Next Phase - Ability to schedule BIRT rpt
56017 REM "307318-DBD-146-Prevent duplicate Output Director processes         
