0010 ! DTGEMA - File Maintenance Program for EML_EmailAddress (="EML"+%C$)
0011 ! buyer shipment confirmation email
0035 REM "5.7 - 08/20/14 - 9.441666 - tma - SSP# 272128
0037 REM "272128-Data Transport Setup Extra Window - the Data Transport Setup
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0052 IF TCB(88)=0 THEN {
0055 MSGBOX "You must be using Windx to access this program"
0057  } ELSE {
0060 PROCESS "DTGEMA","../DTG/DT.EN"
0065  }
0075 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0310 IOLIST A$
0320 IOLIST AP4$,AP4[0],AP4[1]
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
13700 SELECT_SEQUENCE:
13710 NOF=1; TF_SEQUENCE$=PAD(TF_SEQUENCE$,3); EMAIL_TYPE$="BE"; TF_SEQUENCE$=STR(NUM(TF_SEQUENCE$,ERR=*RETURN):"000"); NOF=0,REFRESH_FLG=1 ! SSP220935 jdf
13720 IF NOF=0 THEN GOSUB FIND_REC
13760 IF ANS$="NO" THEN NEXT_ID=CUSTOMER.CTL ! SSP220935
13790 RETURN 
13798 ! 
13799 ! 
13800 FIND_REC:
13805 NEW=0
13810 CALL "UPDEML;EXTRACTBYKEY",Z[1],1,EMAIL_TYPE$,TOPFORM_REF$,TF_SEQUENCE$,SEQ4$,SEQ5$,A$,A{ALL},FOUND,BUSY
13820 IF NOT(FOUND) THEN MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"YesNo",ANS$; IF ANS$="NO" THEN GOSUB RESTART; GOTO *RETURN
13830 IF BUSY THEN MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,""; GOSUB RESTART; GOTO *RETURN
13840 IF NOT(FOUND) THEN {
13842 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310
13845 CALL "UPDEML;INSERT",Z[1],0,EMAIL_TYPE$,TOPFORM_REF$,TF_SEQUENCE$,SEQ4$,SEQ5$,A$,A{ALL},OK
13850 IF NOT(OK) THEN MSGBOX MSG("CANT_WRITE"),""; GOSUB RESTART; GOTO *RETURN
13855 CALL "UPDEML;EXTRACTBYKEY",Z[1],1,EMAIL_TYPE$,TOPFORM_REF$,TF_SEQUENCE$,SEQ4$,SEQ5$,A$,A{ALL},FOUND,BUSY; READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
13856 IF STP(EMAIL_ADDRESS$,2)="" THEN EMAIL_ADDRESS$=PAD(MID(ECA$,109,60),60)
13857 NEW=1,OLDREC$=A$; EN_KEYS$="N"; GOSUB ENABLE_GROUPS
13860  } ELSE {
13870 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
13875 OLDREC$=A$; EN_KEYS$="N"; GOSUB ENABLE_GROUPS
13880  }
13931 CALL "UPDEML;CREATE_DIR",Z[1],A$,A{ALL},SEND_FROM_DIR$
13932 XFER_TYPE$="E",REFRESH_FLG=1
13940 ADDRESS_TYPE$=PAD("SMGPAA",10)
13960 EN_B$="Y",EN_ALL$="N",EN_BUTTON$="Y"; GOSUB ENABLE_GROUPS
13990 RETURN 
13998 ! 
13999 ! 
18000 SELECT_BUYER:
18010 IF STP(BUYER$,2)<>"" THEN {
18017 BUYER$=PAD(BUYER$,15)
18020 CALL "UPDECA;READBYKEY",Z[5],0,BUYER$,SEG2$,SEG3$,SEG4$,SEG5$,ECA$,ECA2$,FOUNDECA
18025 IF FOUNDECA THEN {
18030 EN_SEQ$="Y"; GOSUB ENABLE_GROUPS
18035 TOPFORM_REF$=PAD(BUYER$,20),XFER_TYPE$="E"
18040 TF_NAME$=ECA$(16,35)
18050 REFRESH_FLG=1,NEXT_ID=SEQUENCE.CTL
18080  } ELSE {
18085 REM MSGBOX MSG("NOT_FOUND") } ! SSP220935 jdf
18087  }
18090 RETURN 
18098 ! 
18099 ! 
18286  } ! SSP220935 jdf
20098 ! 
20099 ! 
21000 INIT:
21001 X0$="DTGEMA",X1$="Data Transport Maintenance"
21002 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOSUB WRAPUP; GOTO *RETURN ! SSP#272128
21003 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=*NEXT)
21004 DIM Z[NUM(X3$(60,3))]
21005 DIM AP4[1],A[1]
21006 SEG2$="",SEG3$="",SEG4$="",SEG5$=""
21040 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
21070 Z$="01O EML...  05O ECA...  06O EML...  13O ZZPARM  "
21080 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; IF Z0>0 THEN GOTO OPEN_ERR
21090 RETURN 
21098 ! 
21099 ! 
21200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
21210 CMD_STR$="END"
21290 RETURN 
21298 ! 
21299 ! 
22000 MAIN_POST_DISPLAY:
22090 RETURN 
22098 ! 
22099 ! 
22100 WRAPUP:
22120 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
22150 REPLACEMENT_SCRN$="DTGEMA"
22190 RETURN 
22198 ! 
22199 ! 
22300 RESTART:
22310 TF_TYPE$="",TF_NAME$="",OLDREC$="",CUSTOMER$="",TF_SEQUENCE$="",BUYER$="",TF_NAME$=""
22315 CALL "UPDEML;CLEAR_FIELDS",A$,A{ALL}; READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
22387 REM CMD_STR$="END"  ! SSP220935 jdf
22388 CALL "*WINGRP;DISABLE",ALL.GRP$ ! SSP220935 jdf
22389 CALL "*WINGRP;ENABLE",CUST.GRP$; NEXT.ID=CUSTOMER.CTL,REFRESH_FLG=1 ! SSP220935 jdf
22390 RETURN 
22398 ! 
22399 ! 
22500 SELECT_EXIT:
22510 IF OLDREC$="" THEN {
22515 GOSUB RESTART } ELSE {! SSP220935 jdf
22520 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310; ANS$=""; IF OLDREC$<>A$ THEN MSGBOX MSG("REC_ALTERD"),MSG("UPDATED"),"YESNO",ANS$ ! SSP220935 jdf
22525 IF ANS$="NO" THEN {
22527 CALL "UPDEML;CLEAR_LOCK",Z[1]; GOSUB RESTART } ELSE {! 22570 }
22530 GOSUB SELECT_SAVE
22531 IF MSG$<>"" THEN GOTO *RETURN ! SSP220935 jdf
22532 GOSUB RESTART ! SSP220935 jdf
22540 REM IF MSG$="" AND NOT(BUSY) THEN CMD_STR$="END"  ! SSP220935 jdf
22570  }
22580  }
22590 RETURN 
22598 ! 
22599 ! 
22600 SELECT_SAVE:
22605 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310
22610 CALL "UPDEML;VALIDATE",A$,A{ALL},MSG$; IF MSG$<>"" THEN MSGBOX MSG$,""; NEXT_ID=EMAIL_ADDRESS.CTL; EMAIL_ADDRESS$="",REFRESH_FLG=1; GOTO *RETURN ! SSP220935 jdf
22615 A$(8,15)=BUYER$ ! SSP220935 jdf
22620 CALL "UPDEML;UPDATE",Z[1],A$,A{ALL},BUSY; IF BUSY THEN MSGBOX MSG("ERR_W"),""; NEXT_ID=SAVE.CTL; GOTO *RETURN
22630 GOSUB RESTART
22690 RETURN 
22698 ! 
22699 ! 
22800 SELECT_CLEAR:
22805 IF NEW THEN {
22810 CALL "UPDEML;DELETE",Z[1],A$,A{ALL},FOUND,BUSY; IF FOUND AND BUSY THEN MSGBOX MSG("ERR_W"),""; NEXT_ID=SAVE.CTL ELSE GOSUB RESTART
22815  } ELSE {
22820 GOSUB SELECT_EXIT
22850  }
22890 RETURN 
22898 ! 
22899 ! 
22900 SELECT_DELETE:
22910 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"YESNO",ANS$
22915 IF ANS$="YES" THEN {
22920 CALL "UPDEML;DELETE",Z[1],A$,A{ALL},FOUND,BUSY; IF FOUND AND BUSY THEN MSGBOX MSG("ERR_W"),""; NEXT_ID=SAVE.CTL; GOTO *RETURN
22930 CALL "UPDEML;CLEAR_FIELDS",A$,A{ALL}; READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
22940 EN_ALL$="N"; GOSUB ENABLE_GROUPS
22950 NEXT_ID=TYPE.CTL,REFRESH_FLG=1
22960  } ELSE {
22970 NEXT_ID=SAVE.CTL
22980  }
22985 GOSUB RESTART
22990 RETURN 
22998 ! 
22999 ! 
23000 SELECT_FIRST:
23005 READ (Z[6],KNO=1,KEY="BE",DOM=*NEXT) ! SSP220935 jdf
23010 _KEY1$=KEY(Z[6],END=START_OF_FILE1); READ (Z[6],KEY=_KEY1$,DOM=*NEXT)IOL=0310 ! SSP220935 jdf
23030 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[6]); GOSUB GET_TYPE; GOSUB FIND_REC; GOSUB ASSIGN_LIB ! SSP220935 jdf
23035 REFRESH_FLG=1,NEXT_ID=EMAIL_ADDRESS.CTL ! SSP220935 jdf
23040 REM RETURN ! SSP220935 jdf
23050 START_OF_FILE1: _FYI$=MSG("FYI"),_MSG_START_FIL$=MSG("START_FILE"); MSGBOX _MSG_START_FIL$,_FYI$,"!"; EXIT ! SSP220935 jdf      
23090 RETURN 
23098 ! 
23099 ! 
23100 SELECT_PREV:
23105 READ (Z[6],KNO=1,KEY="BE"+BUYER$+DIM(5," ")+TF_SEQUENCE$,DOM=*NEXT) ! SSP220935 jdf
23110 _KEY1$=KEP(Z[6],END=START_OF_FILE); READ (Z[6],KEY=_KEY1$,DOM=*NEXT)IOL=0310 ! SSP220935 jdf
23115 IF _KEY1$(1,2)<>"BE" THEN GOTO START_OF_FILE ! SSP220935 jdf
23120 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[6]); GOSUB GET_TYPE; GOSUB FIND_REC; GOSUB ASSIGN_LIB ! SSP220935 jdf
23130 NEXT_ID=EMAIL_ADDRESS.CTL ! SSP220935 jdf
23190 RETURN 
23192 START_OF_FILE: _FYI$=MSG("FYI"),_MSG_START_FIL$=MSG("START_FILE"); MSGBOX _MSG_START_FIL$,_FYI$,"!"; EXIT ! SSP220935 jdf      
23194 RETURN ! SSP220935 jdf
23198 ! 
23199 ! 
23500 GET_TYPE:
23510 SWITCH EMAIL_TYPE$
23520 CASE "VN"
23525 TF_TYPE$="V"; BREAK
23530 CASE "SH"
23535 TF_TYPE$="S"; BREAK
23540 CASE "CS"
23545 TF_TYPE$="C"; BREAK
23550 CASE "CR"
23555 TF_TYPE$="W"; BREAK
23560 CASE "BE"
23565 TF_TYPE$="B"; BREAK
23570 CASE "CE"
23572 TF_TYPE$="T"; BREAK
23580 END SWITCH 
23590 RETURN 
23598 ! 
23599 ! 
24100 SELECT_NEXT:
24105 READ (Z[6],KNO=1,KEY="BE"+BUYER$+DIM(5," ")+TF_SEQUENCE$,DOM=*NEXT) ! SSP220935 jdf
24110 _KEY1$=KEY(Z[6],END=END_OF_FILE); READ (Z[6],KEY=_KEY1$,DOM=*NEXT)IOL=0310 ! SSP220935 jdf
24115 IF _KEY1$(1,2)<>"BE" THEN GOTO 24110 ! SSP220935 jdf
24120 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[6]); GOSUB GET_TYPE; GOSUB FIND_REC; GOSUB ASSIGN_LIB ! SSP220935 jdf
24130 NEXT_ID=EMAIL_ADDRESS.CTL ! SSP220935 jdf
24140 RETURN ! SSP220935 jdf
24150 END_OF_FILE: MSGBOX MSG("END_OF_FIL"),"FYI","!"; EXIT ! SSP220935 jdf
24190 RETURN 
24198 ! 
24199 ! 
24200 SELECT_LAST:
24205 READ (Z[6],KNO=1,KEY="zzz",DOM=*NEXT) ! SSP220935 jdf
24210 _KEY1$=KEP(Z[6],END=END_OF_FILE1); READ (Z[6],KEY=_KEY1$,DOM=*NEXT)IOL=0310 ! SSP220935 jdf
24215 IF _KEY1$(1,2)<>"BE" THEN GOTO 24210 ELSE GOTO *NEXT ! SSP220935 jdf
24220 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[6]); GOSUB GET_TYPE; GOSUB FIND_REC; GOSUB ASSIGN_LIB ! SSP220935 jdf
24230 REFRESH_FLG=1,NEXT_ID=EMAIL_ADDRESS.CTL ! SSP220935 jdf
24290 REM RETURN  ! SSP220935 jdf
24295 END_OF_FILE1: MSGBOX MSG("END_OF_FIL"),"FYI","!"; EXIT ! SSP220935 jdf
24298 ! 
24299 ! 
24300 SELECT_ALL_BUYER:
24320 CALL "UPDEML;UPDATE_ALL_BUYER",Z[1],Z[5],Z[13]
24350 MSGBOX MSG("UPD_CPL"),""
24360 GOSUB RESTART
24390 RETURN 
24398 ! 
24399 ! 
25000 ASSIGN_LIB:! SSP220935 jdf
25010 BUYER$=A$(8,15); GOSUB SELECT_BUYER ! SSP220935 jdf
25100 RETURN ! SSP220935 jdf
30000 SELECT_RECORD:! SSP220935 jdf
30010 ENTER K$ ! SSP220935 jdf
30020 IF K$(1,2)<>"BE" THEN EXIT 123 ! SSP220935 jdf
30030 EXIT ! SSP220935 jdf
31000 SELECT_QRY: VAL$="" ! SSP220935 jdf
31010 PROCESS "QRY_EML_B","../DTG/DT.EN",VAL$; IF STP(VAL$)="" THEN EXIT ! SSP220935 jdf
31020 READ (Z[1],KNO=0,KEY=VAL$,DOM=*NEXT)A$ ! SSP220935 jdf
31030 BUYER$=A$(8,15),NAME1$=A$(23,5),TF_SEQUENCE$=A$(28,3) ! SSP220935 jdf
31040 GOSUB SELECT_BUYER ! SSP220935 jdf
31060 GOSUB SELECT_SEQUENCE ! SSP220935 jdf
31070 REFRESH_FLG=1,NEXT_ID=EMAIL_ADDRESS.CTL ! SSP220935 jdf
31080 RETURN ! SSP220935 jdf
55000 ENABLE_GROUPS:
55028 IF EN_BE$="Y" THEN CALL "*wingrp;enable",BE.GRP$; EN_BE$=""
55029 IF EN_SE$="Y" THEN CALL "*wingrp;enable",SE.GRP$; EN_SE$=""
55030 IF EN_KEY$="N" THEN CALL "*wingrp;disable",KEY.GRP$; EN_KEY$=""
55040 IF EN_SEQ$="Y" THEN CALL "*wingrp;enable",SEQ.GRP$; EN_SEQ$=""
55050 IF EN_V$="Y" THEN CALL "*wingrp;enable",V.GRP$; EN_V$=""
55060 IF EN_BUTTON$="Y" THEN CALL "*wingrp;enable",BUTTONS.GRP$; EN_BUTTON$=""
55070 IF EN_ALL$="N" THEN CALL "*wingrp;disable",ALL.GRP$; EN_ALL$=""
55075 IF EN_KEYS$="N" THEN CALL "*wingrp;disable",KEYS.GRP$; EN_KEYS$=""
55080 IF EN_S$="Y" THEN CALL "*wingrp;enable",S.GRP$; EN_S$=""
55082 IF EN_C$="Y" THEN CALL "*wingrp;enable",C.GRP$; EN_C$=""
55084 IF EN_B$="Y" THEN CALL "*wingrp;enable",B.GRP$; EN_B$=""
55086 IF EN_W$="Y" THEN CALL "*wingrp;enable",W.GRP$; EN_W$=""
55290 RETURN 
55298 ! 
55299 ! 
56000 REM "186852-Email Order Shipping Confirmations                          
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56004 REM "220935-Cosmetic changes to Data transport Setup Buyer Shipment     
56005 REM "272128-Data Transport Setup Extra Window - the Data Transport Setup
