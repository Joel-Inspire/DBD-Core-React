0010 ! DTGEMA - File Maintenance Program for EML_EmailAddress (="EML"+%C$)
0011 ! Vendor Proof Email
0035 REM "5.7 - 02/10/17 - 16.907222 - tma - SSP# 290002
0037 REM "290002-Issue with Data Transport Setup panel when you have a blank 
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0310 IOLIST A$
0320 IOLIST AP4$,AP4[0],AP4[1]
9999 END 
13500 SELECT_VENDOR:
13502 DIM TOPFORM_REF$(20)
13505 IF NUL(VENDOR$) THEN GOTO *RETURN
13510 CALL "ZZWLKU;parse_vend",VENDOR$,VEND_DIV$,VEND_CODE$
13520 CALL "UPDAP4;READBYKEY",Z[2],0,VEND_DIV$,VEND_CODE$,SEG3$,SEG4$,SEG5$,AP4$,AP4{ALL},FOUNDAP4
13525 IF FOUNDAP4 THEN {
13530 TF_NAME$=AP4$(11,35),TOPFORM_REF$=PAD(VEND_DIV$+VEND_CODE$,20)
13550 EN_SEQ$="Y"; GOSUB ENABLE_GROUPS
13560 VENDOR$=VEND_DIV$+VEND_CODE$
13565 TF_NAME$=AP4$(11,35)
13580 REFRESH_FLG=1,NEXT_ID=PLANT.CTL
13585  } ELSE {
13587 MSGBOX "Vendor "+MSG("NOT_FOUND"),"Input validation failure","!"; VENDOR$=""; REFRESH_FLG=1,NEXT_ID=VENDOR.CTL }
13590 RETURN 
13598 ! 
13599 ! 
13600 SELECT_PLANT:
13605 IF PLANT$="" THEN {
13607 NOF=0,PLANT$=PAD(PLANT$,4) } ELSE {
13610 PLANT$=PAD(PLANT$,4); IF STP(PLANT$,3)<>"" THEN PLANT$=STR(NUM(PLANT$,ERR=13611):"0000") ! SSP#290002
13640 IF PLANT$="" THEN NOF=0 ELSE NOF=1; FIND (Z[3],KEY="P"+VENDOR$+PAD(PLANT$,4),DOM=*NEXT); NOF=0,REFRESH_FLG=1
13650  }
13680 IF NOF THEN NEXT_ID=PLANT.CTL ELSE TOPFORM_REF$(11,4)=PLANT$,NEXT_ID=SEQ.CTL
13690 RETURN 
13698 ! 
13699 ! 
13700 SELECT_SEQUENCE:
13710 NOF=1; IF TF_SEQUENCE$<>"" THEN TF_SEQUENCE$=STR(NUM(TF_SEQUENCE$,ERR=*NEXT):"000"); NOF=0
13720 IF NOF=0 THEN GOSUB FIND_REC
13790 RETURN 
13798 ! 
13799 ! 
13800 FIND_REC:
13805 NEW=0
13810 CALL "UPDEML;EXTRACTBYKEY",Z[1],1,EMAIL_TYPE$,TOPFORM_REF$,TF_SEQUENCE$,SEQ4$,SEQ5$,A$,A{ALL},FOUND,BUSY
13820 IF NOT(FOUND) THEN MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$; IF ANS$="NO" THEN GOSUB RESTART; NEXT_ID=VENDOR.CTL; GOTO *RETURN ! SSP 198933
13830 IF BUSY THEN MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,""; GOSUB RESTART; GOTO *RETURN
13840 IF NOT(FOUND) THEN {
13842 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310
13845 CALL "UPDEML;INSERT",Z[1],0,EMAIL_TYPE$,TOPFORM_REF$,TF_SEQUENCE$,SEQ4$,SEQ5$,A$,A{ALL},OK
13850 IF NOT(OK) THEN MSGBOX MSG("CANT_WRITE"),""; GOSUB RESTART; GOTO *RETURN
13855 CALL "UPDEML;EXTRACTBYKEY",Z[1],1,EMAIL_TYPE$,TOPFORM_REF$,TF_SEQUENCE$,SEQ4$,SEQ5$,A$,A{ALL},FOUND,BUSY; READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
13857 NEW=1,OLDREC$=A$; EN_KEYS$="N"; GOSUB ENABLE_GROUPS
13860  } ELSE {
13870 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
13875 OLDREC$=A$; EN_KEYS$="N"; GOSUB ENABLE_GROUPS
13880  }
13906 XFER_TYPE$="E",ADDRESS_TYPE$=PAD("PROOF",10),REFRESH_FLG=1; NEXT_ID=EMAIL_ADDRESS.CTL
13907 EN_V$="Y"; GOSUB ENABLE_GROUPS
13960 EN_BUTTON$="Y"; GOSUB ENABLE_GROUPS
13970 VENDOR$=A$(8,10); GOSUB SELECT_VENDOR
13990 RETURN 
13998 ! 
13999 ! 
21000 INIT:
21001 X0$="DTGEMA",X1$="Data Transport Maintenance"
21002 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOSUB WRAPUP; GOTO *RETURN ! SSP#272128
21003 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=*NEXT)
21004 DIM Z[NUM(X3$(60,3))]
21005 DIM AP4[1],A[1]
21006 SEG2$="",SEG3$="",SEG4$="",SEG5$=""
21040 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
21070 Z$="01O EML...  02O AP4...  03O FM0...  04O EML...  13O ZZPARM  "
21080 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; IF Z0>0 THEN GOTO OPEN_ERR
21085 READ (Z[4],KNO=1,KEY="",DOM=*NEXT)
21090 RETURN 
21098 ! 
21099 ! 
21200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
21210 CMD_STR$="END"
21290 RETURN 
21298 ! 
21299 ! 
22000 MAIN_POST_DISPLAY:
22090 RETURN 
22098 ! 
22099 ! 
22100 WRAPUP:
22120 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
22150 REPLACEMENT_SCRN$="DTGEMA"
22190 RETURN 
22198 ! 
22199 ! 
22300 RESTART:
22310 TF_TYPE$="",TF_NAME$="",OLDREC$="",VENDOR$="",PLANT$="",TF_SEQUENCE$="",REFRESH_FLG=1
22315 CALL "UPDEML;CLEAR_FIELDS",A$,A{ALL}; READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
22387 ! CMD_STR$="END"
22390 RETURN 
22398 ! 
22399 ! 
22500 SELECT_EXIT:
22510 IF OLDREC$="" THEN {
22515 CMD_STR$="END" } ELSE {
22520 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310; ANS$=""; IF OLDREC$<>A$ AND NOT(NEW) THEN MSGBOX MSG("REC_ALTERD"),MSG("UPDATED"),"YESNO",ANS$
22525 IF ANS$="NO" THEN {
22527 CALL "UPDEML;CLEAR_LOCK",Z[1]; GOSUB RESTART } ELSE {! 22570 }
22530 GOSUB SELECT_SAVE
22540 IF MSG$="" AND NOT(BUSY) THEN CMD_STR$="END"
22570  }
22580  }
22590 RETURN 
22598 ! 
22599 ! 
22600 SELECT_SAVE:
22605 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310
22610 CALL "UPDEML;VALIDATE",A$,A{ALL},MSG$; IF MSG$<>"" THEN MSGBOX MSG$,""; NEXT_ID=SAVE.CTL; GOTO *RETURN
22615 A$(8,14)=VENDOR$+PLANT$
22620 CALL "UPDEML;UPDATE",Z[1],A$,A{ALL},BUSY; IF BUSY THEN MSGBOX MSG("ERR_W"),""; NEXT_ID=SAVE.CTL; GOTO *RETURN
22630 GOSUB RESTART
22640 NEXT_ID=VENDOR.CTL; CALL "*WINGRP;DISABLE",FIELDS.GRP$; CALL "*WINGRP;ENABLE",VN.GRP$; CALL "*WINGRP;DISABLE",BUTTONS.GRP$
22690 RETURN 
22698 ! 
22699 ! 
22800 SELECT_CLEAR:
22801 GOSUB RESTART; GOTO 22860
22805 IF NEW THEN {
22810 CALL "UPDEML;DELETE",Z[1],A$,A{ALL},FOUND,BUSY; IF FOUND AND BUSY THEN MSGBOX MSG("ERR_W"),""; NEXT_ID=SAVE.CTL ELSE GOSUB RESTART
22815  } ELSE {
22820 GOSUB SELECT_EXIT
22850  }
22860 NEXT_ID=VENDOR.CTL; CALL "*WINGRP;DISABLE",FIELDS.GRP$; CALL "*WINGRP;ENABLE",VN.GRP$; CALL "*WINGRP;DISABLE",BUTTONS.GRP$
22890 RETURN 
22898 ! 
22899 ! 
22900 SELECT_DELETE:
22910 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",ANS$ ! SSP 198933
22915 IF ANS$="YES" THEN {
22920 CALL "UPDEML;DELETE",Z[1],A$,A{ALL},FOUND,BUSY; IF FOUND AND BUSY THEN MSGBOX MSG("ERR_W"),""; NEXT_ID=SAVE.CTL; GOTO *RETURN
22930 CALL "UPDEML;CLEAR_FIELDS",A$,A{ALL}; READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
22940 EN_ALL$="N"; GOSUB ENABLE_GROUPS
22950 NEXT_ID=TYPE.CTL,REFRESH_FLG=1
22960  } ELSE {
22970 NEXT_ID=SAVE.CTL
22980  }
22985 GOSUB RESTART
22987 GOTO 22640
22990 RETURN 
22998 ! 
22999 ! 
23000 SELECT_FIRST:
23005 READ (Z[4],KNO=1,KEY="VN",DOM=*NEXT)
23010 _KEY1$=KEY(Z[4],END=NO_FIRST); READ (Z[4])IOL=0310
23020 IF _KEY1$(1,2)<>"VN" THEN GOTO NO_FIRST
23030 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[4]); GOSUB GET_TYPE; GOSUB FIND_REC; GOSUB ASSIGN_LIB
23035 NEXT_ID=EMAIL_ADDRESS.CTL
23040 RETURN 
23050 NO_FIRST: MSGBOX MSG("REC_NO_1ST"),"FYI","!"; EXIT 
23090 RETURN 
23098 ! 
23099 ! 
23100 SELECT_PREV:
23105 READ (Z[4],KNO=1,KEY="VN"+VENDOR$+PLANT$+DIM(6," ")+TF_SEQUENCE$,DOM=*NEXT)
23110 _KEY1$=KEP(Z[4],END=SELECT_FIRST); READ (Z[4],KEY=_KEY1$)IOL=0310
23115 IF _KEY1$(1,2)<>"VN" THEN GOTO SELECT_FIRST
23120 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[4]); GOSUB GET_TYPE; GOSUB FIND_REC; GOSUB ASSIGN_LIB
23130 NEXT_ID=EMAIL_ADDRESS.CTL
23190 RETURN 
23198 ! 
23199 ! 
23500 GET_TYPE:
23510 SWITCH EMAIL_TYPE$
23520 CASE "VN"
23525 TF_TYPE$="V"; BREAK
23530 CASE "SH"
23535 TF_TYPE$="S"; BREAK
23540 CASE "CS"
23545 TF_TYPE$="C"; BREAK
23550 CASE "CR"
23555 TF_TYPE$="W"; BREAK
23560 CASE "BE"
23565 TF_TYPE$="B"; BREAK
23570 CASE "CE"
23572 TF_TYPE$="T"; BREAK
23580 END SWITCH 
23590 RETURN 
23598 ! 
23599 ! 
24100 SELECT_NEXT:
24105 READ (Z[4],KNO=1,KEY="VN"+VENDOR$+PLANT$+DIM(6," ")+TF_SEQUENCE$,DOM=*NEXT)
24110 _KEY1$=KEY(Z[4],END=END_OF_FILE); READ (Z[4],KEY=_KEY1$)IOL=0310
24115 IF _KEY1$(1,2)<>"VN" THEN GOTO SELECT_LAST
24120 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[4]); GOSUB GET_TYPE; GOSUB FIND_REC; GOSUB ASSIGN_LIB
24130 NEXT_ID=EMAIL_ADDRESS.CTL
24140 RETURN 
24150 END_OF_FILE: MSGBOX MSG("END_OF_FIL"),"FYI","!"; EXIT 
24190 RETURN 
24198 ! 
24199 ! 
24200 SELECT_LAST:
24205 READ (Z[4],KNO=1,KEY="VN"+DIM(23,"~"),DOM=*NEXT)
24210 _KEY1$=KEP(Z[4],END=NO_LAST); READ (Z[4],KEY=_KEY1$)IOL=0310
24215 IF _KEY1$(1,2)<>"VN" THEN GOTO NO_LAST
24220 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[4]); GOSUB GET_TYPE; GOSUB FIND_REC; GOSUB ASSIGN_LIB
24230 REFRESH_FLG=1,NEXT_ID=EMAIL_ADDRESS.CTL
24290 RETURN 
24295 NO_LAST: MSGBOX MSG("REC_NO_LST"),"FYI","!"; EXIT 
24298 ! 
24299 ! 
24300 SELECT_ALL_BUYER:
24320 CALL "UPDEML;UPDATE_ALL_BUYER",Z[1],Z[5],Z[13]
24350 MSGBOX MSG("UPD_CPL"),""
24360 EN_ALL$="N"; GOSUB ENABLE_GROUPS; NEXT_ID=TYPE.CTL
24390 RETURN 
24398 ! 
24399 ! 
25000 ASSIGN_LIB:
25010 VENDOR$=A$(8,10); GOSUB SELECT_VENDOR
25020 PLANT$=A$(18,4); GOSUB SELECT_PLANT
25100 RETURN 
30000 SELECT_RECORD:
30010 ENTER K$
30020 IF K$(1,2)<>"VN" THEN EXIT 123
30030 EXIT 
31000 SELECT_QRY: VAL$=""
31010 PROCESS "QRY_EML_V","../DTG/DT.EN",VAL$; IF STP(VAL$)="" THEN EXIT 
31020 READ (Z[1],KNO=0,KEY=VAL$)A$
31030 VENDOR$=A$(8,10),PLANT$=A$(18,4),TF_SEQUENCE$=A$(28,3)
31035 IF PLANT$=DIM(4) THEN PLANT$=""
31040 GOSUB SELECT_VENDOR
31050 GOSUB SELECT_PLANT
31060 GOSUB SELECT_SEQUENCE
31070 REFRESH_FLG=1,NEXT_ID=EMAIL_ADDRESS.CTL
31080 RETURN 
55000 ENABLE_GROUPS:
55020 IF EN_VN$="Y" THEN CALL "*wingrp;enable",VN.GRP$; EN_VN$=""
55030 IF EN_KEY$="N" THEN CALL "*wingrp;disable",KEY.GRP$; EN_KEY$=""
55040 IF EN_SEQ$="Y" THEN CALL "*wingrp;enable",SEQ.GRP$; EN_SEQ$=""
55050 IF EN_V$="Y" THEN CALL "*wingrp;enable",V.GRP$; EN_V$=""
55060 IF EN_BUTTON$="Y" THEN CALL "*wingrp;enable",BUTTONS.GRP$; EN_BUTTON$=""
55070 IF EN_ALL$="N" THEN CALL "*wingrp;disable",ALL.GRP$; EN_ALL$=""
55075 IF EN_KEYS$="N" THEN CALL "*wingrp;disable",KEYS.GRP$; EN_KEYS$=""
55290 RETURN 
55298 ! 
55299 ! 
56000 REM "186852-Email Order Shipping Confirmations                          
56002 REM "193609-ERROR 27 DTGEMA.V                                           
56003 ! "198933-The query for the PLANT is not correct
56005 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56006 ! "220924-Cosmetic changes to panel Data Transport Setup              
56007 REM "272128-Data Transport Setup Extra Window - the Data Transport Setup
56008 REM "290002-Issue with Data Transport Setup panel when you have a blank 
