0010 ! DTGZ10 - TopForm Output Director
0035 REM "5.5 - 10/05/07 - 13.028888 - jme - SSP# 203099
0037 REM "203099-Enhancements to Output Director.  Provide ability for
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 IF TCB(29)<7100000 THEN MSGBOX "You must be using Providex Version 7.1 or Higher to access this program"; IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0052 IF TCB(88)=0 THEN {
0055 MSGBOX "You must be using Windx to access this program"
0057  } ELSE {
0058 ! IF %GUI THEN BB$=FIN(0) ! SSP 197975
0060 PROCESS "DTGZ10V7","../DTG/DT.EN"
0061 ! IF %GUI THEN PRINT 'GOTO'(DEC(BB$(10,1))), ! SSP 197975
0065  }
0075 IF TCB(13)=1 THEN %GUI=0; RUN "ZMENU" ELSE EXIT 
0098 ! 
0099 ! 
0110 INIT:
0115 %FLMAINT_MSG$="./lib/_tfmsglib.en"
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0125 CALL "ZZWMX3"
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0160 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; DIM Z[NUM(X3$(60,3))]
0165 Z$="01O DT0...  03O DT2...  05O DTR...  06O DTI...  07O DTD...  13O ZZPARM 14O DTW...  15O FM0...  16O IC0...  17O IC1...  19O DT3...  20O DTU...  21O DTP...  " ! [201588]
0170 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0175 DT0=Z[1],DT2=Z[3],DTR=Z[5],DTI=Z[6],DTD=Z[7],DTW=Z[14],FM0=Z[15],IC0=Z[16],IC1=Z[17],ZZPARM=Z[13],DT3=Z[19],DTU=Z[20]
0176 DTP=Z[21] ! [201588]
0186 LENGTH_OF_TIMEOUT=5
0191 IF TCB(88)<>0 THEN %WDX$="[wdx]" ELSE %WDX$=""
0195 RETURN 
0298 ! 
0299 ! 
0300 ! !300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0398 ! 
0399 ! 
0400 ! !^100 - Retrieve messages from the *msglib.xxx library
0405 SETUP_MESSAGES:
0410 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
0415 _MSG_DIRECTORY$=MSG("DIRECTORY")
0420 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
0425 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
0430 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
0435 _MSG_MANDATORY$=MSG("MANDATORY")
0440 _MSG_NEXT$=MSG("NEXT")
0445 _MSG_NON_NUMER$=MSG("NON_NUMER")
0450 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
0455 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
0460 _MSG_PRECEDING$=MSG("PRECEDING")
0465 _MSG_PREFIX$=MSG("PREFIX")
0470 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
0475 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
0480 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
0485 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
0490 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
0495 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
0500 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
0505 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
0510 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
0515 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
0520 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
0525 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
0530 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
0535 _MSG_START_FILE$=MSG("START_FILE")
0540 _MSG_UPDATE$=MSG("UPDATE")
0545 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
0550 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
0555 _MSG_UPD_SAME$=MSG("UPD_SAME")
0560 _MSG_WARNING$=MSG("WARNING")
0595 RETURN 
0598 ! 
0599 ! 
0600 MAIN_POST_DISPLAY:
0605 RESPCTL=0,PRT=0
0630 PRINT 'MESSAGE'('_RED'+'WHITE'+"WAITING "+STR(LENGTH_OF_TIMEOUT)+" SEC",0)
0635 INPUT (0,LEN=1,TIM=LENGTH_OF_TIMEOUT,ERR=*NEXT)WAITPROMPT$
0637 FCOUNT=0,PRT=0
0640 RESPCTL=CTL
0642 IF RESPCTL>0 THEN CMD_STR$="END"; GOTO 0695
0650 GOSUB PRINT_DOCUMENTS
0680 GOTO 0600
0695 RETURN 
0698 ! 
0699 ! 
0900 ! !900 - Wrapup
0910 WRAPUP:
0915 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0965 ! INVOKE %WDX$+APP$+" /X" ! closes application
0970 %LABEL_PTR_DESC$=""
0990 RETURN 
0998 ! 
0999 ! 
10100 SELECT_BEGIN:
10150 GOSUB MAIN_POST_DISPLAY
10190 RETURN 
10198 ! 
10199 ! 
11000 PRINT_DOCUMENTS:
11010 DT6OBJ=NEW("DTGDT6")
11015 FOUNDDT6=DT6OBJ'READFIRST()
11052 PRINT 'MESSAGE'('_BLUE'+'WHITE'+"Retrieving record from the queue",0)
11054 TRANS_NUM$=DT6OBJ'GETOUTPUTQUEUE$()
11056 OUTPUT_TYPE$=DT6OBJ'GETOUTPUTTYPE$()
11150 WHILE FOUNDDT6 ! 19000 wend
11160 GOSUB OPEN_OBJECT
11200 FIRST_REC=OOP'GETFIRSTREC() ! get first record in the file. 0=no records in file
11205 IF %TOD_DEGUG THEN PRINT "1ST_REC=",FIRST_REC; MSGBOX "OK"
11250 IF FIRST_REC THEN TF_IL1$=OOP'IL_DT1$,TF_IL2$=OOP'IL_DT2$
11300 IF FIRST_REC THEN OK=OOP'FINDDT0MATCH() ELSE OK=0 ! find DT0 record that to be used for file data
11400 IF %TOD_DEBUG=1 THEN PRINT "OK=",OK; MSGBOX "OK"
15000 IF OK THEN {! 17000
15100 SET_YES=OOP'SETYES()
15200 FOUNDDT0=1 ! 1st dt0 record retrieved from finddtomatch()
15500 WHILE FOUNDDT0 ! 16950 wend
15600 PRINT 'MESSAGE'('_BLUE'+'WHITE'+"Retrieving details",0)
15700 DT0$=OOP'DT0$
15705 IF %TOD_DEBUG=1 THEN PRINT "DT0$=",DT0$; MSGBOX "OK"
15710 OUTPUT_TYPE$=DT0$(1,20)
15720 GOSUB GET_FILE_NAME
16150 CALL "DTGTOD;GET_FILENAME",DTR,X3$,OUTPUT_TYPE$,TOD_FILE_NAME$,FILE_NAME$,DT0$(61,1),DT0$(427,1) ! get file name
16160 IF LAST_FILE_NAME$=FILE_NAME$ THEN WAIT 2; GOTO 16150
16165 LAST_FILE_NAME$=FILE_NAME$
16170 PRINT 'MESSAGE'('_BLUE'+'WHITE'+"Generating the report",0)
16180 CALL "DTGTOD;CREATE_FILE",DT0,DT0$,FILE_NAME$,FULL_PATH$,DIRECTORY$ ! create file
16200 CALL "DTGTOD;OPEN_FILE",FULL_PATH$,DT0$,FILE_CHAN,RPT_FILE$,OPEN_ERR ! open file
16210 IF NOT(OPEN_ERR) THEN {
16250 RUN_REPT=OOP'PRT_RPT(FILE_CHAN)
16260 CLOSE (FILE_CHAN)
16290  }
16900 FOUNDDT0=OOP'GETNEXTDT0SEQ()
16950 WEND ! 15500
17000  } ! 15000
17100 DEL_YES=OOP'DELYES()
17500 DROP OBJECT OOP
17700 ! send files
17710 CALL "UPDDT0;READBYKEY",DT0,0,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,DT0$,DT0{ALL},FOUNDDT0
17715 CALL "UPDDT0;READNEXT",DT0,DT0$,DT0{ALL},FOUNDDT0
17720 WHILE FOUNDDT0
17725 PRINT 'MESSAGE'('_BLUE'+'WHITE'+"Sending the report.",0)
17730 CALL "DTGTOD;BUILD_DIRECTORY",DT0,DT0$,DIRECTORY$
17735 CALL "DTGTOD;OUTPUT_FILES",X3$,DT0$,DIRECTORY$
17740 CALL "UPDDT0;READNEXT",DT0,DT0$,DT0{ALL},FOUNDDT0
17780 WEND 
17795 PRINT 'MESSAGE'('_BLUE'+'WHITE'+"Report sucessfully sent.",0)
17800 DT6OBJ'DELETE()
17810 FOUNDDT6=DT6OBJ'READNEXT()
19000 WEND ! 11150
20000 ! daily processing
20010 OUTPUT_TYPE$=PAD("CUST_WHS_INV_STAT",20); GOSUB PROCESS_DAILY
20050 DROP OBJECT DT6OBJ
24990 RETURN 
24998 ! 
24999 ! 
25000 PROCESS_DAILY:
25002 DT6_CHN=DT6OBJ'GETCHANNELNUMBER()
25005 DLY_DT$=DAY; DLY_DT$=DLY_DT$(7,2)+DLY_DT$(1,2)+DLY_DT$(4,2)
25010 CALL "UPDDT0;READBYKEY",DT0,0,OUTPUT_TYPE$,SEG2$,SEG3$,SEG4$,SEG5$,DT0$,DT0{ALL},FOUNDDT0
25020 CALL "UPDDT0;READNEXT",DT0,DT0$,DT0{ALL},FOUNDDT0; IF FOUNDDT0 THEN IF DT0$(1,20)<>OUTPUT_TYPE$ THEN FOUNDDT0=0
25030 WHILE FOUNDDT0
25040 OK=1; CALL "UPDDTD;READBYKEY",DTD,0,DT0$(1,57),DIM(3),SEG3$,SEG4$,SEG5$,DTD$,DTD{ALL},FOUNDDTD; IF FOUNDDTD THEN IF DTD$(61,6)=DLY_DT$ THEN OK=0
25045 IF OK THEN {
25050 CALL "UPDDTD;CLEAR_FIELDS",DTD$,DTD{ALL}; DTD$(1,57)=DT0$(1,57),DTD$(61,6)=DLY_DT$; CALL "UPDDTD;UPDATE",DTD,DTD$,DTD{ALL},BUSYDTD
25100 SWITCH STP(OUTPUT_TYPE$,2)
25105 CASE "CUST_WHS_INV_STAT"
25110 CALL "UPDDTW;CREATE_CUST_WHS_INV_STAT",DTW,FM0,IC0,IC1,DT6_CHN,ZZPARM,X3$,DT0$(23,10),DT0$(43,4) ! customer, whs
25115 BREAK
25680 END SWITCH ! 25100
25700  } ! 25045
25780 CALL "UPDDT0;READNEXT",DT0,DT0$,DT0{ALL},FOUNDDT0; IF FOUNDDT0 THEN IF DT0$(1,20)<>OUTPUT_TYPE$ THEN FOUNDDT0=0
25800 WEND ! 25030
25990 RETURN 
25998 ! 
25999 ! 
26000 OPEN_OBJECT:
26010 SWITCH STP(OUTPUT_TYPE$,2)
26020 CASE "CUST_PO_RECPT_NOT" ! customer po recpts notfication
26022 OOP=NEW("DTGDT2")
26025 BREAK
26030 CASE "CUST_INVOICE" ! customer invoice
26032 OOP=NEW("DTGDTI")
26035 BREAK
26040 CASE "CUST_WHS_INV_STAT"
26042 OOP=NEW("DTGDTW")
26045 BREAK
26050 CASE "CUST_INV_UPD_NOT"
26052 OOP=NEW("DTGDT3")
26055 BREAK
26060 CASE "CUST_TRACKING" ! customer shipment tracking
26062 OOP=NEW("DTGDTU")
26065 BREAK
26070 CASE "WHS_PACKING_LIST" ! [201588]-Warehouse Packing List
26072 OOP=NEW("DTGDTP")
26075 BREAK
26080 CASE "PURCHASE_ORDER"
26082 OOP=NEW("DTGDTO")
26085 BREAK
26090 CASE "KIT_PO_RECPT_NOT"
26092 OOP=NEW("DTGDT2B")
26094 BREAK
26095 CASE "CSR_PO_RECPT_NOT"
26097 OOP=NEW("DTGDT2C")
26099 BREAK
26450 END SWITCH 
26490 RETURN 
26498 ! 
26499 ! 
28000 GET_FILE_NAME:
28010 TOD_FILE_NAME$=""
28050 SWITCH STP(OUTPUT_TYPE$)
28060 CASE "CUST_INVOICE"
28065 TOD_FILE_NAME$=STP(TF_IL1$)+"_"+STP(TF_IL2$) ! customer + invoice
28066 ! TOD_FILE_NAME$=STP(FN%ZZDISP$(MID(TF_IL2$,1,10),"A/R"))+"_"+STP(FN%ZZDISP$(MID(TF_IL2$,11,8),"AR6")) ! customer + invoice
28069 BREAK
28070 CASE "PURCHASE_ORDER"
28075 TOD_FILE_NAME$=STP(TF_IL1$)+"_"+STP(TF_IL2$,3) ! po + vendor
28076 ! TOD_FILE_NAME$=STP(FN%ZZDISP$(MID(TF_IL1$,1,9),"P/O"))+"_"+STP(FN%ZZDISP$(MID(TF_IL2$,1,10),"A/P")) ! po + vendor
28079 BREAK
28080 CASE "WHS_PACKING_LIST"
28085 TOD_FILE_NAME$=STP(TF_IL1$)+"_"+STP(TF_IL2$) ! order + whse
28086 ! TOD_FILE_NAME$=STP(FN%ZZDISP$(MID(TF_IL1$,1,8),"O/P")) ! order ! +"_"+STP(FN%ZZDISP$(MID(TF_IL2$,1,10),"A/R")) ! order + customer
28089 BREAK
28470 DEFAULT 
28475 TOD_FILE_NAME$=""
28480 END SWITCH 
28490 RETURN 
28498 ! 
28499 ! 
56000 REM "203516-Duplicate file name for 806 xml
56002 REM "200524-Ability to send an email to originator of PO that product
56004 REM "201588-Create XML output of orders to remote warehouse location Mike Ellison wrote:
56006 REM "203099-Enhancements to Output Director.  Provide ability for
