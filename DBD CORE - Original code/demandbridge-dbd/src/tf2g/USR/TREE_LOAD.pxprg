0010 ! TREE_LOAD - Menu Bar
0035 REM "5.5 - 08/30/07 - 15.5475 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0150 EXIT 
0410 LD_TEMPFL:
0412 ENTER _TREE,MPATH$,LIST_BOX1.CTL,CUR_DESC$,APP$,MENU_FULLNAME$,TMP_FL1,LIB_FN
0415 LIB_FN=HFN; OPEN (LIB_FN,ERR=0150)MPATH$
0416 SCR_KEY$="MENU        ",MNU_GRPS.CTL=LIST_BOX1.CTL
0420 TMP_FL1=HFN; OPEN (TMP_FL1)"*memory*"
0430 SV_IDX=0,SV_GRP$="",GRP_STR$="",SV_KEY$=""
0435 READ DATA FROM "" TO IOL=8410
0440 OBJ_TXT$=CUR_DESC$,OBJ_SEL$="G",MNU_HELP$=""
0450 READ (LIB_FN,KEY=SCR_KEY$+"M000",DOM=*NEXT)IOL=8410
0453 OBJ_TYPE$="",OBJ_TXT$=CUR_DESC$
0455 MNU_HELP$=OBJ_MSG$,SV_MNU_HELP$=MNU_HELP$
0460 WRITE (TMP_FL1,KEY=" ")IOL=8410
0470 NEXT_K:
0480 K$=KEY(LIB_FN,END=END_TMPLOAD)
0490 IF K$>SCR_KEY$+"M999" THEN GOTO END_TMPLOAD
0500 READ (LIB_FN,KEY=K$)IOL=8410
0501 IF SV_IDX=0 THEN SV_IDX=1
0503 OBJ_TYPE$=""
0505 IF STP(OBJ_TXT$,2)<>"-" OR SV_KEY$="" THEN GOTO 0510
0506 READ (TMP_FL1,KEY=SV_KEY$,DOM=0510)IOL=8410
0507 OBJ_MSG$=","; WRITE (TMP_FL1,KEY=SV_KEY$)IOL=8410
0508 GOTO NEXT_K
0510 GOSUB WRITE_TEMPREC
0520 GOTO NEXT_K
0530 END_TMPLOAD:GOSUB LOAD_TREE
0540 LIST_BOX WRITE MNU_GRPS.CTL,1,ERR=*NEXT
0560 CLOSE (TMP_FL1),(LIB_FN); EXIT 
1300 ! ^100 - Load Items/groups
1310 LOAD_ITEMS:
1325 P=POS(SEP=MNU_GRPS$,-1)
1330 GRP_SEL$=MNU_GRPS$(P+1)
1340 GRP_SEL$="Contents Of "+GRP_SEL$
1341 SV_IDX=0; LIST_BOX READ MNU_ITMS.CTL,SV_IDX,ERR=*NEXT
1350 LIST_BOX LOAD MNU_ITMS.CTL,""
1360 NEXT_ITEM:
1370 IF STP(ITMS$,2)="" THEN GOTO END_ITEMS
1380 ITM$=ITMS$(1,1),ITMS$=ITMS$(2)
1390 READ (TMP_FL1,KEY=STP(GRP_KEY$,2)+ITM$)IOL=8410
1400 TF_TYPE$="Item"; IF OBJ_SEL$="G" THEN TF_TYPE$="Group"
1410 ITM_STR$=OBJ_TXT$+SEP+TF_TYPE$
1420 LIST_BOX LOAD MNU_ITMS.CTL,0,ITM_STR$
1430 GOTO NEXT_ITEM
1440 END_ITEMS:
1450 REFRESH_FLG=1
1460 LIST_BOX LOAD MNU_ITMS.CTL,0,EOF_MSG$
1470 IF SV_IDX=0 THEN LIST_BOX WRITE MNU_ITMS.CTL,1,ERR=*NEXT ELSE LIST_BOX WRITE MNU_ITMS.CTL,SV_IDX,ERR=*NEXT
1480 ITMS$=SV_ITMS$
1490 RETURN 
1500 ! ^100 - Change existing group or item
1510 CHG_ITEM:
1520 SCROLL_BACK=0,CHG_GROUP=0,NEW_KEY$=""
1530 GOSUB GET_CURITM
1540 ITM$=CUR_ITEM$
1550 IF ITM$="" OR CUR_ITM$=EOF_MSG$ THEN RETURN 
1560 IF _EOM$<>$0D$ AND _EOM$<>$02$ THEN RETURN 
1570 READ (TMP_FL1,KEY=STP(GRP_KEY$,2)+ITM$,DOM=*NEXT)IOL=8410
1580 TF_TYPE$=""; IF STP(OBJ_SEL$,2)="G" THEN TF_TYPE$="G"
1590 EXISTS=1
1600 IF STP(OBJ_SEL$,2)="G" THEN PROCESS "MENUBAR.GRP","",GRP_KEY$,ITM$,STR(TMP_FL1),TF_TYPE$,STR(OBJ_IDX),STR(EXISTS)
1610 IF STP(OBJ_SEL$,2)<>"G" THEN PROCESS "MENUBAR.ITM","",GRP_KEY$,ITM$,STR(TMP_FL1),TF_TYPE$,STR(OBJ_IDX),STR(EXISTS)
1615 IF STP(ITM$,2)="" THEN EXISTS=0; RETURN 
1617 IF ITM$=CUR_ITEM$ THEN GOTO 1630
1618 READ (TMP_FL1,KEY=STP(GRP_KEY$,2)+ITM$,DOM=*NEXT)IOL=8410
1619 GOSUB LD_SUBITMS; ITMS$=SUB_ITMS$,GRPS$=STP(GRP_KEY$,2)+CUR_ITEM$ ! itm$
1620 CHG_GROUP=1; NEW_GRP$=ITM$; GOSUB READ_NXTITEM; CHG_GROUP=0
1625 ITM$=NEW_GRP$,%MENU_UPD=1; GOSUB REWRITE_GRP
1630 IF %CANCELED THEN EXISTS=0; RETURN 
1635 GOSUB RELOAD_ITM
1640 IF TF_TYPE$="G" THEN GOSUB LOAD_TREE ! ; IF STP(GRP_KEY$,2)<>"" THEN GOSUB RELOAD_TREE_LEVEL ELSE GOSUB LOAD_TREE
1650 EXISTS=0
1660 RETURN 
1700 ! ^100 - Delete menubar
1710 DEL_MENUBAR:
1720 K$=SCR_KEY$+"M"
1730 READ (LIB_FN,KEY=K$,DOM=*NEXT)
1740 MSGBOX "Are you sure you wish to delete the Menu Bar for panel: "+SEP+$09$+SCR_KEY$,"Just Checking","YESNO",X$
1750 IF X$<>"YES" THEN RETURN 
1760 GOTO 1790
1770 K$=KEY(LIB_FN,END=END_MENUDEL)
1780 IF K$>SCR_KEY$+"M999" THEN GOTO END_MENUDEL
1790 OBJ_KEY$=K$; PERFORM "*win/define;remove_lib"
1800 GOTO 1770
1810 END_MENUDEL:
1820 LIST_BOX LOAD MNU_GRPS.CTL,""
1830 LIST_BOX LOAD MNU_ITMS.CTL,""
1840 CLOSE (TMP_FL1); TMP_FL1=0
1845 IF POPUP$="P" THEN REMOVE (LIB_FN,KEY=SCR_KEY$+"0000",DOM=*NEXT)
1850 GOTO LD_TEMPFL
2100 ! ^100 - Delete group or item
2110 DEL_ITEM:
2115 CHG_GROUP=0
2120 GOSUB GET_CURITM
2130 ITM$=CUR_ITEM$
2140 IF ITM$="" OR CUR_ITM$=EOF_MSG$ THEN RETURN 
2150 READ DATA FROM CUR_ITM$ TO TF_ITEM$,TF_TYPE$
2160 MSGBOX "Are you sure you wish to delete menu item: "+SEP+$09$+STP(TF_ITEM$,2),"Just Checking","YESNO",X$
2170 IF X$<>"YES" THEN RETURN 
2175 %MENU_UPD=1
2180 READ (TMP_FL1,KEY=STP(GRP_KEY$,2)+ITM$,DOM=*NEXT)IOL=8410
2190 GOSUB LD_SUBITMS; ITMS$=SUB_ITMS$
2200 REMOVE (TMP_FL1,KEY=STP(GRP_KEY$,2)+ITM$)
2210 LIST_BOX LOAD MNU_ITMS.CTL,CUR_ITM,*,ERR=*NEXT
2230 CUR_LVL=OBJ_IDX,GRPS$=STP(GRP_KEY$,2)+ITM$
2240 DELETE_IT=1
2250 IF STP(OBJ_SEL$,2)="G" THEN GOSUB READ_NXTITEM
2260 %MENU_UPD=1; GOSUB REWRITE_GRP
2270 ITM_DELETED:
2275 IF OBJ_SEL$="G" THEN GOSUB LOAD_TREE ! ; IF STP(GRP_KEY$,2)<>"" THEN GOSUB RELOAD_TREE_LEVEL ELSE GOSUB LOAD_TREE
2280 LIST_BOX WRITE MNU_ITMS.CTL,CUR_ITM,ERR=*NEXT
2290 DELETE_IT=0
2300 CLOSE (TMP_FL1),(LIB_FN); EXIT 
2800 ! 2800 - Paste group or item
2810 PASTE_IT:
2820 IF %NOMAD_MENU$="" THEN CLOSE (TMP_FL1),(LIB_FN); EXIT 
2821 IF LEN(STP(GRP_KEY$,2))=8 THEN GOTO TOO_DEEP
2825 CTL_VAL=PASTE_IT.CTL
2830 ITM$=" ",I=1
2840 GOSUB GET_CURITM
2860 IF STP(GRP_KEY$,2)<>"" THEN GRP_KEY$=STP(GRP_KEY$,2)
2865 OBJ_IDX=0; READ (TMP_FL1,KEY=GRP_KEY$,DOM=*NEXT)IOL=8410
2870 GRPS$=GRP_KEY$
2880 READ (TMP_FL1,KEY=GRP_KEY$+PAD(CUR_ITEM$,1),DOM=*NEXT)IOL=8410; ITM_LVL=OBJ_IDX; GOTO 2895
2890 IF CUR_ITM$=EOF_MSG$ THEN IF GRP_KEY$<>" " THEN ITM_LVL=OBJ_IDX+1 ELSE ITM_LVL=OBJ_IDX
2900 MENU_STR$=%NOMAD_MENU$
2910 IF STP(MENU_STR$,2)="" THEN GOTO END_PASTE
2920 Q=POS(":="=MENU_STR$)
2930 IF Q<>2 THEN GOTO END_PASTE
2940 R=POS($02$=MENU_STR$)
2950 DATA$=MENU_STR$(Q+2,R-3)
2960 READ DATA FROM DATA$ TO IOL=8410
2970 IF I=1 THEN MENU_TYP$=PAD(OBJ_SEL$,1)
2980 P=POS("&"=OBJ_TXT$)
2990 ITM$=UCS(OBJ_TXT$(P+1,1))
3000 IF I=1 THEN ITEMS$=ITM$+STR(ITM_LVL)
3010 LVL=NUM(ITEMS$(2,1)),GRPS$=GRPS$(1,LVL),ITEMS$=ITEMS$(3)
3020 IF I=1 THEN READ (TMP_FL1,KEY=STP(GRPS$+ITM$,2),DOM=*NEXT)IOL=8410; GOTO DUP_ITEM
3030 OBJ_IDX=LVL,%MENU_UPD=1
3040 WRITE (TMP_FL1,KEY=STP(GRPS$+ITM$,2))IOL=8410
3050 GOSUB LD_SUBITMS; ITEMS$=SUB_ITMS$+ITEMS$
3060 IF PAD(OBJ_SEL$,1)="G" THEN GRPS$=GRPS$+ITM$
3070 IF I=1 THEN %MENU_UPD=1; GOSUB REWRITE_GRP
3080 I=0,MENU_STR$=MENU_STR$(R+1)
3090 GOTO 2910
3100 END_PASTE:
3110 IF STP(GRP_KEY$,2)<>"" THEN GRP_KEY$=STP(GRP_KEY$,2)
3120 READ (TMP_FL1,KEY=GRP_KEY$)IOL=8410
3130 ITMS$=OBJ_TYPE$,SV_ITMS$=ITMS$
3140 IF MENU_TYP$="G" THEN GOSUB LOAD_TREE ! GOSUB RELOAD_TREE_LEVEL
3150 ITMS$=SV_ITMS$; GOTO LOAD_ITEMS
3300 ! 3300 - Cut/copy item or group
3310 CUT_IT:
3320 %NOMAD_MENU$="",CHG_GROUP=0
3330 GOSUB GET_CURITM
3340 ITM$=CUR_ITEM$
3350 IF ITM$="" OR CUR_ITM$=EOF_MSG$ THEN CLOSE (TMP_FL1),(LIB_FN); EXIT 
3360 MNU_K$=STP(GRP_KEY$+ITM$,2)
3370 GOSUB READ_MNULVL
3380 IF TF_TYPE$="G" THEN GOSUB READ_NXTITEM
3390 IF CUT_IT=0 THEN CLOSE (TMP_FL1),(LIB_FN); EXIT 
3400 LIST_BOX LOAD MNU_ITMS.CTL,CUR_ITM,*,ERR=*NEXT
3405 ITM$=CUR_ITEM$
3420 LIST_BOX WRITE MNU_ITMS.CTL,CUR_ITM,ERR=*NEXT
3430 %MENU_UPD=1; GOSUB REWRITE_GRP
3435 IF TF_TYPE$="G" THEN GOSUB LOAD_TREE ! GOSUB RELOAD_TREE_LEVEL
3440 CLOSE (TMP_FL1),(LIB_FN); EXIT 
3600 ! 3600 - New Menu Item
3610 NEW_ITEM:
3620 SCROLL_BACK=0
3630 LIST_BOX READ MNU_GRPS.CTL,MNU_GRPS$,ERR=NO_GROUP
3640 P=POS(SEP=MNU_GRPS$,1,0); IF P=7 THEN GOTO TOO_DEEP
3650 GOSUB BUILD_KEY
3660 GRP_KEY$=STP(GRP_KEY$,2); IF LEN(GRP_KEY$)=0 THEN GRP_KEY$=" "
3670 SV_LEVEL=0,OBJ_IDX=0; READ (TMP_FL1,KEY=GRP_KEY$,DOM=*NEXT)IOL=8410; ITMS$=OBJ_TYPE$
3680 IF STP(GRP_KEY$,2)<>"" THEN SV_LEVEL=OBJ_IDX+1
3690 CUR_ITM=1,EXISTS=0
3700 GOSUB GET_CURITM
3710 ITM$=" "
3720 IF TF_TYPE$="I" THEN PROCESS "MENUBAR.ITM","",GRP_KEY$,ITM$,STR(TMP_FL1),TF_TYPE$,STR(SV_LEVEL),STR(EXISTS)
3730 IF TF_TYPE$="G" THEN PROCESS "MENUBAR.GRP","",GRP_KEY$,ITM$,STR(TMP_FL1),TF_TYPE$,STR(SV_LEVEL),STR(EXISTS)
3733 IF %CANCELED THEN CLOSE (TMP_FL1),(LIB_FN); EXIT 
3735 IF STP(ITM$,2)="" THEN CLOSE (TMP_FL1),(LIB_FN); EXIT 
3740 READ (TMP_FL1,KEY=STP(GRP_KEY$+ITM$,2),DOM=*END)IOL=8410
3750 %MENU_UPD=1; GOSUB REWRITE_GRP
3760 GOSUB RELOAD_ITM
3770 IF TF_TYPE$="G" THEN GOSUB LOAD_TREE ! IF STP(GRP_KEY$,2)<>"" THEN GOSUB RELOAD_TREE_LEVEL ELSE GOSUB LOAD_TREE
3780 CLOSE (TMP_FL1),(LIB_FN); EXIT 
3900 ! 3900 - Reload menu items list_box
3910 RELOAD_ITM:
3920 IF EXISTS THEN LIST_BOX LOAD MNU_ITMS.CTL,CUR_ITM,*
3930 READ (TMP_FL1,KEY=STP(GRP_KEY$,2)+ITM$,DOM=*RETURN)IOL=8410
3940 TF_TYPE$="I",TYP$="Item"; IF STP(OBJ_SEL$,2)="G" THEN TF_TYPE$="G",TYP$="Group"
3950 ITM_STR$=OBJ_TXT$+SEP+TYP$
3960 LIST_BOX LOAD MNU_ITMS.CTL,CUR_ITM,ITM_STR$
3970 IF EXISTS=0 THEN LIST_BOX WRITE MNU_ITMS.CTL,EOF_MSG$; RETURN 
3980 LIST_BOX WRITE MNU_ITMS.CTL,CUR_ITM
3990 RETURN 
4000 ! 4000 - Load menu group fields
4010 LOAD_MNUFLDS:
4020 SEL_STR$="X=ExecuteE=End    P=PerformC=Call   L=Link   J=Jumpto I=Ignore H=Help   "
4030 GRP_KEY$=ARG_1$,ITM$=ARG_2$,TMP_FL1=NUM(ARG_3$),TF_TYPE$=ARG_4$,OBJ_IDX=NUM(ARG_5$),EXISTS=NUM(ARG_6$),%CANCELED=0
4040 SV_IDX=OBJ_IDX
4050 READ DATA FROM "" TO IOL=8410
4060 IF EXISTS OR STP(GRP_KEY$,2)="" AND ITM$=" " THEN ITM$=STP(ITM$,2)
4070 READ (TMP_FL1,KEY=STP(GRP_KEY$,2)+ITM$,DOM=*NEXT)IOL=8410
4075 OBJ_IDX=SV_IDX
4076 READ DATA FROM REC(IOL=8410) TO IOL=%SAVE_LIST$
4090 GOSUB SETUP_DISP
4100 CLOSE (TMP_FL1),(LIB_FN); EXIT 
4200 ! 4200 - Get group name
4210 GET_NM:
4230 CTL_VAL=OBJ_TXT.CTL
4240 IF STP(OBJ_TXT$,2)="" THEN MSG$="Invalid name"; GOSUB DISP_MSG; RETURN 
4245 IF POS("&["=OBJ_TXT$) THEN MSG$="Invalid menu item"; GOSUB DISP_MSG
4247 IF POS("&]"=OBJ_TXT$) THEN MSG$="Invalid menu item"; GOSUB DISP_MSG
4250 IF POS("&"=OBJ_TXT$,1,0)<>1 THEN OBJ_TXT$="&"+STP(OBJ_TXT$,2)
4260 IF POS("&"=OBJ_TXT$,1,0)<>1 THEN MSG$="The menu entry name must contain a character identified as the menu selection character"; GOSUB DISP_MSG
4270 P=POS("&"=OBJ_TXT$); CUR_SEL$=UCS(OBJ_TXT$(P+1,1))
4280 RETURN 
4400 ! 4400 - Write menu record
4410 UPD_MENU:
4420 ERR_STR$=""
4430 GOSUB GET_NM; IF ERR_STR$<>"" THEN RETURN 
4440 IF TF_TYPE$<>"G" THEN GOSUB CHK_FUNCTION; IF ERR_STR$<>"" THEN RETURN 
4450 GOSUB SETUP_REC
4460 WRITE_IT:
4462 READ DATA FROM REC(IOL=8410) TO IOL=%SAVE_LIST$
4465 NEXT_ID=OBJ_TXT.CTL
4470 IF ITM$<>CUR_SEL$ THEN READ (TMP_FL1,KEY=STP(GRP_KEY$,2)+CUR_SEL$,DOM=*NEXT); GOTO DUP_ITEM
4480 IF STP(ITM$,2)<>"" THEN IF ITM$<>CUR_SEL$ THEN REMOVE (TMP_FL1,KEY=STP(GRP_KEY$,2)+ITM$,DOM=*NEXT)
4482 %MENU_UPD=1
4485 READ DATA FROM REC(%SAVE_LIST$) TO IOL=8410
4490 ITM$=CUR_SEL$; WRITE (TMP_FL1,KEY=STP(GRP_KEY$,2)+ITM$)IOL=8410
4500 REFRESH_FLG=1,CMD_STR$="END"; RETURN 
4600 ! 4600 - Setup display
4610 SETUP_DISP:
4620 IF OBJ_SEL$="" THEN OBJ_SEL_TYP$="Ignore",OBJ_PARM$=""; RETURN 
4630 IF OBJ_SEL$="G" THEN OBJ_SEL_TYP$="Ignore",OBJ_PARM$=""; RETURN 
4640 TYP$=OBJ_SEL$(1,1)
4650 Q=POS(TYP$+"="=SEL_STR$)
4660 OBJ_SEL_TYP$=STP(SEL_STR$(Q+2,7),2)
4670 OBJ_PARM$=STP(OBJ_SEL$(2),2)
4680 P=POS("&"=OBJ_TXT$)
4690 CUR_SEL$=UCS(OBJ_TXT$(P+1,1))
4700 RETURN 
4800 ! 4800 - Setup record to be written
4810 SETUP_REC:
4820 IF TF_TYPE$="G" THEN OBJ_SEL$="G"; RETURN 
4830 IF STP(OBJ_SEL_TYP$,2)="Ignore" THEN OBJ_SEL$=""; RETURN 
4840 Q=POS(OBJ_SEL_TYP$=SEL_STR$)
4850 OBJ_SEL$=SEL_STR$(Q-2,1)+STP(OBJ_PARM$,2)
4860 RETURN 
5000 ! 5000 - Write temp record
5010 WRITE_TEMPREC:
5020 P=POS("&"=OBJ_TXT$)
5030 GRP$=UCS(OBJ_TXT$(P+1,1))
5040 IF OBJ_IDX=0 THEN GRPS$=GRP$,GRP_KEY$=GRP$,SV_GRP$=""; GOTO 5075
5050 IF OBJ_IDX<=SV_IDX THEN GRPS$=GRPS$(1,OBJ_IDX),SV_GRP$=GRPS$
5060 IF PAD(OBJ_SEL$,1)="G" THEN GRPS$=GRPS$+GRP$,GRP_KEY$=GRPS$; GOTO 5075
5070 GRP_KEY$=GRPS$+GRP$
5080 SV_IDX=OBJ_IDX
5090 READ (TMP_FL1,KEY=GRP_KEY$,DOM=*NEXT)IOL=8410
5100 WRITE (TMP_FL1,KEY=GRP_KEY$)IOL=8410
5110 SV_KEY$=GRP_KEY$,CUR_ITEM$=" "
5120 IF OBJ_IDX=0 THEN GRP_KEY$=" " ELSE GRP_KEY$=SV_GRP$
5130 CUR_ITEM$=GRP$,ITM$=GRP$
5140 GOSUB REWRITE_GRP; GRP_KEY$=SV_KEY$
5150 IF PAD(OBJ_SEL$,1)="G" THEN SV_GRP$=GRPS$
5160 RETURN 
5400 ! 5400 - Check function
5410 CHK_FUNCTION:
5420 CTL_VAL=OBJ_PARM.CTL
5430 IF POS(OBJ_SEL_TYP$="CallPerformExecuteLinkJumpto")<>0 AND OBJ_PARM$="" THEN MSG$="Missing Parameters"; GOSUB DISP_MSG; RETURN 
5440 IF OBJ_SEL_TYP$="Perform" OR OBJ_SEL_TYP$="Call" THEN Z$=CPL(OBJ_SEL_TYP$+" "+OBJ_PARM$,ERR=BAD_CMD)
5450 IF OBJ_SEL_TYP$="Link" OR OBJ_SEL_TYP$="Jumpto" THEN Z$=CPL("Process "+OBJ_PARM$,ERR=BAD_CMD)
5460 IF OBJ_SEL_TYP$="Execute" THEN Z$=CPL(OBJ_PARM$,ERR=BAD_CMD)
5470 RETURN 
5480 BAD_CMD: MSG$="Syntax error has occurred with the command"; GOSUB DISP_MSG; RETURN 
5600 ! 5600 - Get current item
5610 GET_CURITM:
5620 CUR_ITEM$=""
5630 LIST_BOX READ MNU_ITMS.CTL,CUR_ITM,ERR=*RETURN
5640 LIST_BOX READ MNU_ITMS.CTL,CUR_ITM$
5650 P=POS("&"=CUR_ITM$)
5660 IF P<>0 THEN CUR_ITEM$=UCS(CUR_ITM$(P+1,1))
5670 RETURN 
6000 ! 6000 - Move item up
6010 MOVE_UP:
6020 X=-1; GOSUB SWAP_ITEMS
6030 CLOSE (TMP_FL1),(LIB_FN); EXIT 
6100 ! 6100 - Move item down
6110 MOVE_DOWN:
6120 X=1; GOSUB SWAP_ITEMS
6130 CLOSE (TMP_FL1),(LIB_FN); EXIT 
6200 ! 6200 - Swap items
6210 SWAP_ITEMS:
6215 ITM1$="",ITM2$="",N1=0
6220 LIST_BOX READ MNU_ITMS.CTL,N,ERR=*NEXT
6230 LIST_BOX READ MNU_ITMS.CTL,X1$; IF X1$=EOF_MSG$ THEN RETURN 
6240 N1=N+X; IF N1=0 THEN RETURN 
6260 P=POS("&"=X1$); IF P<>0 THEN ITM1$=UCS(X1$(P+1,1))
6270 LIST_BOX FIND MNU_ITMS.CTL,N1,X2$,ERR=*RETURN; IF X2$=EOF_MSG$ THEN RETURN 
6290 P=POS("&"=X2$); IF P<>0 THEN ITM2$=UCS(X2$(P+1,1))
6300 IF STP(GRP_KEY$,2)<>"" THEN GRP_KEY$=STP(GRP_KEY$,2)
6310 READ (TMP_FL1,KEY=GRP_KEY$)IOL=8410
6320 IF N<N1 THEN ITM$=ITM1$ ELSE ITM$=ITM2$
6330 P=POS(ITM$=OBJ_TYPE$)
6335 IF P=0 THEN RETURN 
6340 OBJ_TYPE$=OBJ_TYPE$(1,P-1)+OBJ_TYPE$(P+1,1)+OBJ_TYPE$(P,1)+OBJ_TYPE$(P+2)
6345 %MENU_UPD=1
6350 WRITE (TMP_FL1,KEY=GRP_KEY$)IOL=8410
6360 XX=N,XX$=X2$; GOSUB MOVE_ITEM
6370 XX=N1,XX$=X1$; GOSUB MOVE_ITEM
6390 ITMS$=OBJ_TYPE$
6400 IF STP(GRP_KEY$,2)<>"" THEN GOSUB LOAD_TREE ! GOSUB RELOAD_TREE_LEVEL ELSE GOSUB LOAD_TREE
6405 LIST_BOX WRITE MNU_ITMS.CTL,N1
6406 NEXT_ID=MNU_ITMS.CTL
6410 RETURN 
6600 ! 6600 - Read current menu level
6610 READ_MNULVL:
6620 READ (TMP_FL1,KEY=MNU_K$,DOM=*RETURN)IOL=8410
6630 GOSUB LD_SUBITMS; ITMS$=SUB_ITMS$
6640 TF_TYPE$=PAD(OBJ_SEL$,1)
6650 GOSUB LOAD_DATA
6660 GRPS$=STP(GRP_KEY$+ITM$,2)
6670 RETURN 
6700 ! 6700 - Get next item or group
6710 READ_NXTITEM:
6720 NEXT_KEY:
6730 IF STP(ITMS$,2)="" THEN RETURN 
6740 ITM$=ITMS$(1,1),LVL=NUM(ITMS$(2,1)),ITMS$=ITMS$(3)
6750 GRPS$=GRPS$(1,LVL)
6760 READ (TMP_FL1,KEY=STP(GRPS$,2)+ITM$)IOL=8410
6770 GOSUB LD_SUBITMS
6780 ITMS$=SUB_ITMS$+ITMS$
6790 IF PAD(OBJ_SEL$,1)="G" THEN GRPS$=GRPS$+ITM$
6800 MNU_K$=KEC(TMP_FL1)
6810 IF DELETE_IT OR CHG_GROUP THEN REMOVE (TMP_FL1,KEY=MNU_K$)
6813 %MENU_UPD=1
6814 IF DELETE_IT THEN GOTO NEXT_KEY
6815 IF CHG_GROUP THEN IF NEW_KEY$="" THEN NEW_KEY$=MNU_K$(1,LVL-1)+NEW_GRP$+MNU_K$(LVL+1) ELSE NEW_KEY$=NEW_KEY$(1,LVL)+ITM$
6816 IF CHG_GROUP THEN WRITE (TMP_FL1,KEY=NEW_KEY$)IOL=8410; GOTO NEXT_KEY
6820 GOSUB LOAD_DATA
6830 GOTO NEXT_KEY
6840 RETURN 
7000 ! 7000 - Load library
7010 LOAD_LIB:
7015 IF SV_MNU_HELP$<>MNU_HELP$ THEN %MENU_UPD=1
7020 IF %MENU_UPD=0 THEN CMD_STR$="END"; RETURN 
7030 DIM DATA_TBL$[999],MNU_TBL$[999]; MENU_STR$="",MAIN_LVL$=""
7040 I=0
7050 READ_TMPFILE:
7060 READ (TMP_FL1,KEY=" ")IOL=8410
7070 DATA$=REC(IOL=8410); DATA_TBL$[I]=DATA$
7080 MAIN_GRPS$=OBJ_TYPE$
7090 MAIN_LEVEL:
7100 IF STP(MAIN_GRPS$,2)="" THEN GOSUB BUILD_MENUSTR; GOTO WRITE_LIB
7110 ITEMS$="",GRPS$=MAIN_GRPS$(1,1),MAIN_GRPS$=MAIN_GRPS$(2)
7120 READ (TMP_FL1,KEY=GRPS$,DOM=MAIN_LEVEL)IOL=8410
7130 DATA$=REC(IOL=8410)
7140 GOSUB LD_SUBITMS; ITEMS$=SUB_ITMS$
7150 I=I+1; DATA_TBL$[I]=DATA$
7160 IF MAIN_LVL$="" THEN MAIN_LVL$="["+OBJ_TXT$ ELSE MAIN_LVL$=MAIN_LVL$+","+OBJ_TXT$
7170 IF PAD(OBJ_SEL$,1)<>"G" THEN IF STP(OBJ_SEL$,2)<>"" THEN MAIN_LVL$=MAIN_LVL$+"=17"+STR(I:"000")
7180 GOSUB BUILD_MENUSTR
7190 NEXT_LEVEL:
7200 IF STP(ITEMS$,2)="" THEN GOTO MAIN_LEVEL
7210 ITM$=ITEMS$(1,1),LVL=NUM(ITEMS$(2,1)),ITEMS$=ITEMS$(3)
7220 GRPS$=GRPS$(1,LVL)
7230 READ (TMP_FL1,KEY=GRPS$+ITM$)IOL=8410
7240 GOSUB LD_SUBITMS
7250 ITEMS$=SUB_ITMS$+ITEMS$
7270 DATA$=REC(IOL=8410); I=I+1; DATA_TBL$[I]=DATA$
7275 GOSUB LD_MNUTBL
7280 IF PAD(OBJ_SEL$,1)="G" THEN GRPS$=GRPS$+ITM$
7290 GOTO NEXT_LEVEL
7300 ! ^100 - Load menu table
7310 LD_MNUTBL:
7320 IF STP(MNU_TBL$[LVL],2)="" THEN MNU_TBL$[LVL]=GRPS$+":["+OBJ_TXT$; GOTO 7330
7325 K=POS(GRPS$+":"=MNU_TBL$[LVL]); IF K=0 THEN MNU_TBL$[LVL]=MNU_TBL$[LVL]+"],"+GRPS$+":["+OBJ_TXT$; GOTO 7330
7326 MNU_TBL$[LVL]=MNU_TBL$[LVL]+","+OBJ_TXT$
7330 IF PAD(OBJ_SEL$,1)<>"G" THEN IF STP(OBJ_SEL$,2)<>"" THEN MNU_TBL$[LVL]=MNU_TBL$[LVL]+"=17"+STR(I:"000")
7340 MNU_TBL$[LVL]=MNU_TBL$[LVL]+OBJ_MSG$
7350 RETURN 
7400 ! 7400 - Build menu string
7410 BUILD_MENUSTR:
7420 FOR K=1 TO 999
7430 IF STP(MNU_TBL$[K],2)="" THEN BREAK
7440 MENU_STR$=MENU_STR$+MNU_TBL$[K]+"],"
7450 NEXT 
7460 DIM MNU_TBL$[999]
7470 RETURN 
7700 ! 7700 - Write library records
7710 WRITE_LIB:
7711 GOSUB DELETE_OLDKEYS
7715 IF I=0 THEN GOTO 7800
7717 IF POPUP$="P" THEN GOSUB CREATE_POPUP_HEADER
7720 FOR J=0 TO I
7730 OBJ_KEY$=SCR_KEY$+"M"+STR(J:"000")
7740 READ DATA FROM DATA_TBL$[J] TO IOL=8410
7750 IF J=0 THEN OBJ_MSG$=MNU_HELP$
7760 OBJ_IDX$=STR(OBJ_IDX),OBJ_TYPE$=""; IF POPUP$="P" THEN OBJ_TYPE$="P"
7770 PERFORM "*win/define;write_lib"
7780 NEXT 
7790 GOSUB WRITE_MENUBAR ! BUILD MENUBAR
7800 CMD_STR$="END"; RETURN 
7900 ! 7900 - Write menubar records
7910 WRITE_MENUBAR:
7915 IF STP(MENU_STR$,2)="" AND STP(MAIN_LVL$,2)="" THEN RETURN 
7920 IF MNU_HELP$="-" THEN MAIN_LVL$=MNU_HELP$+MAIN_LVL$
7930 N=1
7940 READ DATA FROM "" TO IOL=8410
7945 IF POPUP$="P" THEN OBJ_TYPE$="P"
7950 MENU_STR$=MAIN_LVL$+"],"+MENU_STR$
7960 IF STP(MENU_STR$,2)="" THEN RETURN 
7970 IF LEN(MENU_STR$)>150 THEN OBJ_TXT$=MENU_STR$(1,150),MENU_STR$=MENU_STR$(151) ELSE OBJ_TXT$=MENU_STR$,MENU_STR$=""
7980 OBJ_KEY$=SCR_KEY$+"M"+STR(N:"##0"),OBJ_IDX$=STR(OBJ_IDX); PERFORM "*win/define;write_lib"; N=N+1; GOTO 7960
7990 RETURN 
8100 ! 8100 - Delete old keys
8110 DELETE_OLDKEYS:
8115 %UNDO_FLG$="*"
8120 READ (LIB_FN,KEY=SCR_KEY$+"M",DOM=*NEXT)
8130 NEXT_OLDKEY: K$=KEY(LIB_FN,END=*RETURN)
8140 IF K$>SCR_KEY$+"M999" THEN RETURN 
8150 OBJ_KEY$=K$
8160 PERFORM "*win/define;remove_lib"
8170 GOTO NEXT_OLDKEY
8180 RETURN 
8200 ! 8200 - Switch items in list_box
8210 MOVE_ITEM:
8220 LIST_BOX LOAD MNU_ITMS.CTL,XX,*
8230 LIST_BOX LOAD MNU_ITMS.CTL,XX,XX$
8240 RETURN 
8300 ! 8300 - Load data
8310 LOAD_DATA:
8320 TYP$="I"; IF PAD(OBJ_SEL$,1)="G" THEN TYP$="G"
8330 DATA$=REC(IOL=8410); %NOMAD_MENU$=%NOMAD_MENU$+TYP$+":="+DATA$+$02$
8340 IF CUT_IT=0 THEN RETURN 
8350 REMOVE (TMP_FL1,KEY=MNU_K$)
8355 %MENU_UPD=1
8360 RETURN 
8400 ! 8400 - Iolists
8410 IOLIST OBJ_NME$,OBJ_C,OBJ_L,OBJ_W,OBJ_H,OBJ_TYPE$,OBJ_TXT$,OBJ_VAL$,OBJ_TAB,OBJ_DEF$,OBJ_DSP$,OBJ_FCS$,OBJ_SEL$,OBJ_MSG$,OBJ_HLP$,OBJ_ATTR$,OBJ_IDX,OBJ_HOTKEY$,OBJ_QRY$,OBJ_SEC$,OBJ_STS$,OBJ_GRP$,OBJ_NULL$,OBJ_TAG$,OBJ_TBL$,OBJ_INP$,OBJ_OUT$,OBJ_VALID$,OBJ_CLASS$,OBJ_TIP$,OBJ_ORIG$,OBJ_FONT$,OBJ_COLOR$,OBJ_LISTBOX_TYPE$,OBJ_SEP$,OBJ_SCRATCH$,OBJ_POPUP$,OBJ_SIZING$,OBJ_LOGIC1$,OBJ_LOGIC2$,OBJ_POPUP_LOGIC$
8500 ! 8500 - Display message box
8510 DISP_MSG:
8520 ERR_STR$="ERR"
8530 MSGBOX MSG$,"F.Y.I."
8540 NEXT_ID=CTL_VAL
8550 RETURN 
8700 ! 8700 - Rewrite group record
8710 REWRITE_GRP:
8720 READ DATA FROM "" TO IOL=8410
8730 IF STP(GRP_KEY$,2)<>"" THEN GRP_KEY$=STP(GRP_KEY$,2)
8740 READ (TMP_FL1,KEY=GRP_KEY$,DOM=*NEXT)IOL=8410
8750 P=POS(CUR_ITEM$=OBJ_TYPE$)
8760 IF DELETE_IT OR CUT_IT THEN OBJ_TYPE$=OBJ_TYPE$(1,P-1)+OBJ_TYPE$(P+1); GOTO 8790
8770 IF EXISTS THEN OBJ_TYPE$=OBJ_TYPE$(1,P-1)+ITM$+OBJ_TYPE$(P+1); GOTO 8790
8780 IF P=0 THEN OBJ_TYPE$=OBJ_TYPE$+ITM$ ELSE OBJ_TYPE$=OBJ_TYPE$(1,P-1)+ITM$+OBJ_TYPE$(P)
8790 ITMS$=OBJ_TYPE$; WRITE (TMP_FL1,KEY=GRP_KEY$)IOL=8410
8800 RETURN 
8900 ! 8900
8910 NO_ITEM: MSGBOX "Please select an item or group","F.Y.I.","!"; CLOSE (TMP_FL1),(LIB_FN); EXIT 
8920 NO_GROUP: MSGBOX "Please select a group","F.Y.I.","!"; CLOSE (TMP_FL1),(LIB_FN); EXIT 
8930 NO_MENUBAR: MSGBOX "Please select a Menu Bar","F.Y.I.","!"; CLOSE (TMP_FL1),(LIB_FN); EXIT 
8940 DUP_ITEM: MSGBOX "Duplicate menu item","Error","!"; NEXT_ID=CTL_VAL; CLOSE (TMP_FL1),(LIB_FN); EXIT 
8950 TOO_DEEP: MSGBOX "This menu item will exceed the 8 level maximum for each group","F.Y.I.","!"; CLOSE (TMP_FL1),(LIB_FN); EXIT 
8960 BAD_MENU_EXPR: MSG$="Invalid expression:"+SEP+SEP+MSG(ERR); GOSUB DISP_MSG; RETURN 
9000 ! 9000 - Load sub items
9010 LD_SUBITMS:
9020 SUB_ITMS$=""
9030 IF PAD(OBJ_SEL$,1)<>"G" THEN RETURN 
9035 SUB_IDX=OBJ_IDX+1
9040 IF LEN(OBJ_TYPE$)=0 THEN RETURN 
9050 FOR G=1 TO LEN(OBJ_TYPE$)
9060 SUB_ITMS$=SUB_ITMS$+OBJ_TYPE$(G,1)+STR(SUB_IDX)
9070 NEXT 
9080 RETURN 
9100 ! 9100 - Close files
9110 WRAPUP:
9120 CLOSE (TMP_FL1)
9130 CLOSE (TMP_FL1),(LIB_FN); EXIT 
9700 ! 9700 - Build key for memory file
9710 BUILD_KEY:
9720 TEMP$=MNU_GRPS$,GRP_KEY$=" "
9730 P=POS("&"=TEMP$)
9740 IF P=0 THEN RETURN 
9750 GRP_KEY$=UCS(STP(GRP_KEY$,2)+TEMP$(P+1,1))
9760 TEMP$=TEMP$(P+1)
9770 GOTO 9730
9775 RETURN 
9777 GET_GRP_ITMS:
9780 READ (TMP_FL1,KEY=GRP_KEY$,DOM=*NEXT)IOL=8410
9785 ITMS$=OBJ_TYPE$
9790 GOTO LOAD_ITEMS
9999 END 
10000 ! 10000
10010 LOAD_TREE:
10015 ! LIST_BOX LOAD MNU_GRPS.CTL,""
10020 READ (TMP_FL1,KEY=" ")IOL=8410
10030 ! LIST_BOX LOAD MNU_GRPS.CTL,0,CUR_DESC$+SEP+OBJ_TXT$
10040 MAIN_GRPS$=OBJ_TYPE$
10050 FIRST_LEVEL:
10060 IF STP(MAIN_GRPS$,2)="" THEN GOTO SET_DEFAULT
10070 ITEMS$="",GRPS$=MAIN_GRPS$(1,1),MAIN_GRPS$=MAIN_GRPS$(2)
10080 READ (TMP_FL1,KEY=GRPS$,DOM=FIRST_LEVEL)IOL=8410
10085 IF OBJ_SEL$<>"G" THEN GOTO FIRST_LEVEL
10090 TXT$=OBJ_TXT$; LIST_BOX LOAD MNU_GRPS.CTL,0,CUR_DESC$+SEP+STP(TXT$,3,"&"); WRITE (_TREE,KEY=CUR_DESC$+SEP+STP(TXT$,3,"&"))MENU_FULLNAME$,MPATH$,APP$
10100 GOSUB LD_SUBITMS; ITEMS$=SUB_ITMS$
10150 SUB_LEVEL:
10160 IF STP(ITEMS$,2)="" THEN GOTO FIRST_LEVEL
10170 ITM$=ITEMS$(1,1),LVL=NUM(ITEMS$(2,1)),ITEMS$=ITEMS$(3)
10180 GRPS$=GRPS$(1,LVL)
10185 READ (TMP_FL1,KEY=GRPS$+ITM$)IOL=8410
10190 IF OBJ_SEL$<>"G" THEN GOTO 10200
10191 IF OBJ_IDX<>0 THEN XX=POS(SEP=TXT$,1,0); IF XX>=OBJ_IDX THEN Q=POS(SEP=TXT$,1,OBJ_IDX); TXT$=TXT$(1,Q-1)
10192 IF OBJ_IDX<>0 THEN TXT$=TXT$+SEP+OBJ_TXT$
10195 LIST_BOX LOAD MNU_GRPS.CTL,0,CUR_DESC$+SEP+STP(TXT$,3,"&"); WRITE (_TREE,KEY=CUR_DESC$+SEP+STP(TXT$,3,"&"))MENU_FULLNAME$,MPATH$,APP$
10200 GOSUB LD_SUBITMS
10210 ITEMS$=SUB_ITMS$+ITEMS$; IF OBJ_SEL$="G" THEN GOTO 10240
10211 LIST_BOX LOAD MNU_GRPS.CTL,0,CUR_DESC$+SEP+STP(TXT$,3,"&")+SEP+STP(OBJ_TXT$,3,"&"); WRITE (_TREE,KEY=CUR_DESC$+SEP+STP(TXT$,3,"&")+SEP+STP(OBJ_TXT$,3,"&"))MENU_FULLNAME$,MPATH$,APP$,OBJ_SEL$,GRPS$+ITM$
10240 IF PAD(OBJ_SEL$,1)="G" THEN GRPS$=GRPS$+ITM$
10250 GOTO SUB_LEVEL
10260 SET_DEFAULT:
10270 IF CUR_MNU$="" THEN LIST_BOX WRITE MNU_GRPS.CTL,1,ERR=*NEXT ELSE LIST_BOX WRITE MNU_GRPS.CTL,CUR_MNU$,ERR=*NEXT
10280 RETURN 
12000 ! 12000 - Reload tree structure
12010 RELOAD_TREE_LEVEL:
12020 LIST_BOX READ MNU_GRPS.CTL,INDX,ERR=*NEXT
12030 LIST_BOX READ MNU_GRPS.CTL,TXT$
12040 GRPS$=GRP_KEY$
12050 LIST_BOX LOAD MNU_GRPS.CTL,INDX,*
12060 TOT_ITEMS=MNU_GRPS.CTL'ITEMCOUNT
12070 IF TOT_ITEMS<INDX THEN INDX=0
12075 SV_INDX=INDX
12090 LIST_BOX LOAD MNU_GRPS.CTL,INDX++,TXT$
12100 ITEMS$=""
12110 READ (TMP_FL1,KEY=GRP_KEY$)IOL=8410
12120 GOSUB LD_SUBITMS; ITEMS$=SUB_ITMS$
12130 DO_LEVEL:
12140 IF STP(ITEMS$,2)="" THEN GOTO SET_LEVEL
12150 ITM$=ITEMS$(1,1),LVL=NUM(ITEMS$(2,1)),ITEMS$=ITEMS$(3)
12160 GRPS$=GRPS$(1,LVL)
12170 READ (TMP_FL1,KEY=GRPS$+ITM$)IOL=8410
12175 IF OBJ_SEL$<>"G" THEN GOTO 12210
12180 IF OBJ_IDX<>0 THEN XX=POS(SEP=TXT$,1,0); IF XX>=OBJ_IDX THEN Q=POS(SEP=TXT$,1,OBJ_IDX); TXT$=TXT$(1,Q-1)
12190 IF OBJ_IDX<>0 THEN TXT$=TXT$+SEP+OBJ_TXT$
12200 LIST_BOX LOAD MNU_GRPS.CTL,INDX++,TXT$
12210 GOSUB LD_SUBITMS
12220 ITEMS$=SUB_ITMS$+ITEMS$
12230 IF PAD(OBJ_SEL$,1)="G" THEN GRPS$=GRPS$+ITM$
12240 GOTO DO_LEVEL
12250 SET_LEVEL:
12255 IF SV_INDX=0 THEN SV_INDX=MNU_GRPS.CTL'ITEMCOUNT
12260 LIST_BOX WRITE MNU_GRPS.CTL,SV_INDX,ERR=*NEXT
12270 RETURN 
15000 ! ^15000 - Create header record for popup menu
15010 CREATE_POPUP_HEADER:
15020 READ DATA FROM "" TO IOL=8410
15030 OBJ_HOTKEY$=DTE(0:"%Y/%Mz/%Dz %Hz:%mz ")+WHO
15040 OBJ_TYPE$="P",OBJ_VALID$=WHO,OBJ_TXT$="Popup Menu"
15050 WRITE (LIB_FN,KEY=SCR_KEY$+"0000")IOL=8410
15060 RETURN 
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
