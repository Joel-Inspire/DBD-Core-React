0010 ! ARGCAA - Cash Receipts Entry
0035 REM "5.7 - 04/03/23 - 10.750221 - crg - SSP# 307442
0037 REM "307442-DBD-369: Enable access to Customer PO for prepayments      
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ARGCAA.6","../ARG/AR.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 X0$="AR2CAA",X1$="Cash Receipts Entry"
0125 X2=-1; X0=-1; DEL_FLG=0
0130 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0135 IF %NOT_NEW_CR=0 THEN CALL "ZGBATC",X3$,X4$,X0$,X9; IF X9=1 THEN CMD_STR$="END"; EXIT 
0137 %ARGCAA$=MSG("CASH_R_E"); IF STP(X3$(174,4))<>"" THEN %ARGCAA$+=" - Batch No: "+X3$(174,4)
0140 DIM Z[NUM(X3$(60,3))],AT5[1],AT6[2],AT7[6],INV[16],SYS_PARM[8],SYS_PARM_3[8]
0150 Z$="01O ARP...  04O AR1...  05O AR6...  06O ZZPARM"
0151 Z$=Z$+"  07O ARQ...  08O GL1...  09O ZYB...  10O AS5...  11O ARN...  12O ASG...  15OSAR6...  16O AT8...  "
0153 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0155 ! 
0160 IOLIST AT5$,AT5[0],AT5[1]
0170 IOLIST AT6$,AT6[0],AT6[1],AT6[2]
0180 IOLIST AT7$,AT7[0],AT7[1],AT7[2],AT7[3],AT7[4],AT7[5],AT7[6]
0185 IOLIST INV$,INV[0],INV[1],INV[2],INV[3],INV[4],INV[5],INV[6],INV[7],INV[8],INV[9],INV[10],INV[11],INV[12],INV[13],INV[14],INV[15],INV[16]
0190 IOLIST AR6$,AR6{ALL}
0195 IOLIST AS5$
0200 IOLIST SYS_PARM$,SYS_PARM{ALL}
0210 IOLIST SYS_PARM_3$,SYS_PARM_3{ALL}
0300 ! setup messages
0310 GOSUB SET_MESSAGE
0400 ! 
0410 GL_AT7_FLG=0; GL_AT6_FLG=0
0420 %ARP$=FIN(Z[1],"FILENAME")
0480 GOSUB GET_SYS_PARAM
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 CUST_FLG=0
0530 GOSUB LOAD_FY
0540 GOSUB LOAD_BANK_CODE
0550 IF %NOT_NEW_CR<>0 THEN %NOT_NEW_CR=0; NEXT_ID=DEPOSIT_NUM.CTL ELSE NEXT_ID=CR_FY.CTL
0560 REFRESH_FLG=1
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 %CUST_DIV$=""; %CUST_CODE$=""; %CUSTOMER$=""
0930 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC_AT5:
1015 IF STP(DEPOSIT_NUM$)="" THEN NEXT_ID=DEPOSIT_NUM.CTL; MSGBOX MSG("DP"),MSG("WARNING"),"!,TIM=6"; RETURN 
1017 IF LEN(CR_ACCTPD$)>2 THEN CR_ACCTPD$=CR_PD$ ! SSP#228537
1020 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$,DOM=NEW_REC_AT5)IOL=0160
1030 DEPOSIT_DATE$=AT5$(11,6); DISC_PAST_DUE$=AT5$(17,6)
1040 DEPOSIT_AMT=AT5[0]; DIST_AMT=AT5[1]
1050 CALL "*wingrp;disable",DEP_DATE.GRP$; CALL "*wingrp;disable",KEY_1.GRP$ ! SSP#283539
1060 MULTI_LINE DISABLE DIST_AMT.CTL
1065 CALL "*WINGRP;ENABLE",DEP_A.GRP$; CALL "*wingrp;Enable",DEP_NEXT.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
1100 CHANGE_FLG=0,REFRESH_FLG=1
1105 DEL_FLG=1
1107 NEXT_ID=NEXT_1.CTL
1108 ! GOSUB ENABLE_MAIN_BUTTONS; CALL "*wingrp;Enable",CUST.GRP$; NEXT_ID=CUSTOMER.CTL
1110 RETURN 
1300 ! New Record for At5
1310 NEW_REC_AT5:
1320 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
1330 IF ANS$="NO" THEN GOSUB CLEAR_DEPOSIT_FIELDS; NEXT_ID=DEPOSIT_NUM.CTL; RETURN 
1335 CALL "*wingrp;Enable",DEP_DATE.GRP$; CALL "*wingrp;disable",KEY_1.GRP$ ! CALL "*wingrp;Enable",DEP_NEXT.GRP$!SSP#283539
1340 MULTI_LINE ENABLE DEPOSIT_AMT.CTL; MULTI_LINE ENABLE DIST_AMT.CTL
1343 DEPOSIT_DATE$=%X3_TODAY$; REFRESH_FLG=1
1345 NEXT_ID=DEPOSIT_DATE.CTL; DEL_FLG=1
1347 RETURN 
1349 LOAD_REC_AT5:
1350 DIM AT5$(40," "),AT5[1]
1355 AT5$(1,4)=CR_FY$; AT5$(5,2)=CR_ACCTPD$; AT5$(7,3)=BANK_CODE$; AT5$(10,1)=DEPOSIT_NUM$
1360 AT5$(11,6)=DEPOSIT_DATE$; AT5$(17,6)=DISC_PAST_DUE$
1370 AT5[0]=DEPOSIT_AMT; AT5[1]=DIST_AMT
1380 REFRESH_FLG=1
1385 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160
1387 DEL_FLG=1
1390 CALL "*WINGRP;ENABLE",DEP_NEXT.GRP$ ! GOSUB ENABLE_MAIN_BUTTONS; CALL "*wingrp;Enable",CUST.GRP$; CALL "*wingrp;Enable",DEL_BUT.GRP$
1395 RETURN 
1400 ! 1400 - Add RECORD
1410 FIND_REC_AT6:
1411 CHECK_REF$=STR(NUM(CHECK_REF$):"000000",ERR=*NEXT) ! SSP 225162
1412 CHECK_REF$=PAD(CHECK_REF$,6,1," "); DIM AT6[2]
1415 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$,DOM=NEW_REC_AT6)IOL=0170
1420 CHECK_DATE$=AT6$(27,6)
1425 CHECK_AMT=AT6[1]; CUST_DIST_AMT=AT6[2]
1430 CALL "*wingrp;Disable",CUST_DATE.GRP$
1440 CHANGE_FLG=0; REFRESH_FLG=1
1445 DEL_FLG=2
1447 IF JE_FLG THEN CALL "*WINGRP;HIDE",CUST_1.GRP$; CALL "*WINGRP;SHOW",J_ENT.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$; GL_MSG1$=AT6$(33,35); REFRESH_FLG=1; RETURN 
1450 CALL "*wingrp;Enable",BUTTONS.GRP$; SET_FOCUS BUTTON_1.CTL; REFRESH_FLG=1
1460 CALL "*WINGRP;ENABLE",CHECK_A.GRP$; CALL "*WINGRP;DISABLE",CUST_REF.GRP$
1480 NEXT_ID=BUTTON_1.CTL
1490 RETURN 
1500 ! New Record for AT6
1505 NEW_REC_AT6:
1510 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
1520 IF ANS$="NO" THEN GOSUB CLEAR_CUST_FIELDS; NEXT_ID=CUSTOMER.CTL; RETURN 
1525 CALL "*wingrp;Enable",CUST_DATE.GRP$
1527 CHECK_DATE$=DEPOSIT_DATE$; REFRESH_FLG=1
1529 DEL_FLD=2
1530 NEXT_ID=CHECK_DATE.CTL
1533 GOSUB LOAD_REC_AT6 ! SSP 197938
1535 RETURN 
1540 LOAD_REC_AT6:
1545 DIM AT6$(71," ") REM ,AT6[2]  ! SSP238654 jdf
1547 IF JE_FLG THEN MULTI_LINE SHOW GL_MSG1.CTL; MULTI_LINE ENABLE GL_MSG1.CTL; MULTI_LINE HIDE CUST_NAME.CTL; NEXT_ID=GL_MSG1.CTL
1550 AT6$(1,4)=CR_FY$; AT6$(5,2)=CR_ACCTPD$; AT6$(7,3)=BANK_CODE$; AT6$(10,1)=DEPOSIT_NUM$
1553 AT6$(11,2)=CUST_DIV$; AT6$(13,8)=CUST_CODE$
1555 AT6$(21,6)=CHECK_REF$; AT6$(27,6)=CHECK_DATE$; AT6$(33,35)=CUST_NAME$
1560 AT6[1]=CHECK_AMT; AT6[2]=CUST_DIST_AMT
1562 DIST_AMT=DIST_AMT-CHECK_AMT
1565 REFRESH_FLG=1
1570 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170
1572 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160
1573 AT5[1]=DIST_AMT
1574 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160
1575 DEL_FLG=2
1576 IF JE_FLG THEN BUTTON SHOW GL_LINES.CTL; NEXT_BUTTON=GL_LINES.CTL; SET_FOCUS GL_LINES.CTL; REFRESH_FLG=1; RETURN 
1577 CALL "*wingrp;Enable",BUTTONS.GRP$; SET_FOCUS BUTTON_1.CTL; REFRESH_FLG=1
1578 RETURN 
1580 WRITE_REC:
1590 RETURN 
1900 ! Add AT7 Record
1910 GET_AT7_REC:
1915 INV_FLG=0
1920 DIM AT7[6]
1925 IOLIST AT7$,AT7[0],AT7[1],AT7[2],AT7[3],AT7[4],AT7[5],AT7[6]
1930 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$,DOM=*RETURN)IOL=1925
1935 TOTAL_APPLIED=AT7[1]; DISC_ALLOWED=AT7[2]; FRT_ALLOWED=AT7[3]
1940 STAX_ALLOWED=AT7[4]; GL_ADJ=AT7[5]; CASH_POSTED=AT7[6]
1943 INV_FLG=1
1944 INV_BAL=INV_BAL+TOTAL_APPLIED
1945 REFRESH_FLG=1; NEXT_ID=BUTTON_4.CTL
1950 RETURN 
2300 ! Add AT7 Record
2310 ADD_AT7_REC:
2315 DIM AT7[6]
2325 ! IF ACTION_0$="8" THEN RP_FLG=0; GOSUB CHECK_BALANCE; IF RP_FLG THEN RETURN
2330 DIM AT7$(40," ")
2340 AT7$(1,4)=CR_FY$; AT7$(5,2)=CR_ACCTPD$; AT7$(7,3)=BANK_CODE$
2345 AT7$(10,1)=DEPOSIT_NUM$; AT7$(11,2)=CUST_DIV$; AT7$(13,8)=CUST_CODE$
2350 AT7$(21,6)=CHECK_REF$; AT7$(27,8)=CR_INV_NUM$
2351 IF NOT(NUL(NOTE_KEY$)) THEN AT7$(35,5)=NOTE_KEY$
2353 AT7[0]=GL_IDX; GL_IDX=0
2355 AT7[1]=TOTAL_APPLIED; AT7[2]=DISC_ALLOWED; AT7[3]=FRT_ALLOWED
2360 AT7[4]=STAX_ALLOWED; AT7[5]=GL_ADJ; AT7[6]=CASH_POSTED
2365 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$)IOL=0180
2370 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$,DOM=CREATE_RECORD)IOL=0170
2375 AT6[2]=CUST_DIST_AMT
2380 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170
2385 GOSUB UPDATE_INVOICE; AT7[0]=0
2390 RETURN 
2500 ! Format Check Reference
2510 CHECK_REF_FORMAT:
2515 IF STP(CHECK_REF$,2)="" THEN MSGBOX MSG("ENTER_CHK"),MSG("FYI"),"INFO,OK"; NEXT_ID=CHECK_REF.CTL ! SSP 225162
2520 ! CHECK_REF$=STR(NUM(CHECK_REF$):"000000",ERR=*NEXT)
2530 ! CHECK_REF$=PAD(CHECK_REF$,6," ")
2540 CHECK_REF.CTL'VALUE$=CHECK_REF$
2590 RETURN 
3000 ! Check to see if Invoice has been paid with this check
3010 CHECK_AT7_REC:
3015 DIM AT7$(40),AT7[6]; B_TA=0; B_CP=0
3020 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$,DOM=*RETURN)IOL=0180
3025 IF NOT(NUL(MID(AT7$,35,5))) THEN NOTE_KEY$=MID(AT7$,35,5) END_IF ; GOSUB CHECK_INV_TRANS_NOTE
3030 TOTAL_APPLIED=AT7[1]
3040 GL_ADJ=AT7[5]
3050 DISC_ALLOWED=AT7[2]
3060 FRT_ALLOWED=AT7[3]
3070 STAX_ALLOWED=AT7[4]
3080 CASH_POSTED=AT7[6]
3090 INV[5]-=TOTAL_APPLIED
3092 WRITE (Z[5],KEY=CUST_DIV$+CUST_CODE$+CR_INV_NUM$)IOL=0185 ! SSP 212473/212977
3170 B_TA=TOTAL_APPLIED; B_CP=CASH_POSTED
3180 REFRESH_FLG=1
3190 RETURN 
3500 ! Update check amount if check amount changes
3510 UPDATE_CHECK_AMT:
3515 ! IF CHECK_AMT>DEPOSIT_AMT THEN MSGBOX "Check Amount exceeds Deposit Amount",MSG("FYI"),"INFO"; NEXT_ID=CHECK_AMT.CTL
3520 CHECK_DIFF=CHECK_AMT-B_CHECK_AMT
3525 DIST_AMT-=CHECK_DIFF; CUST_DIST_AMT+=CHECK_DIFF ! SSP 212473 
3530 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160
3540 AT5[1]=DIST_AMT ! ssp 212473
3560 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160
3570 ! 
3580 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170
3590 AT6[1]=CHECK_AMT; AT6[2]=CUST_DIST_AMT
3600 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170
3620 ! IST_AMT-=CHECK_DIFF; CUST_DIST_AMT+=CHECK_DIFF
3680 REFRESH_FLG=1
3690 RETURN 
4000 ! Get Deposit Amt
4010 DEPOSIT_AMOUNT:
4020 IF B_DEPOSIT_AMT<>0 THEN {
4030 DIST_AMT+=DEPOSIT_AMT-B_DEPOSIT_AMT
4040  } ELSE {
4050 DIST_AMT+=DEPOSIT_AMT
4060  }
4090 RETURN 
5000 ! Setup CUstomer Deposit Screen
5010 CUST_DEP:
5020 PERFORM "ARGCAA;ENABLE_MAIN_BUTTONS"
5030 ! CALL "*wingrp;Enable",CUST.GRP$
5040 CALL "*wingrp;Enable",DEL_BUT.GRP$
5050 IF CUST_DIST_AMT=0 AND NOT(AUTO_DISTRIBUTING) THEN CALL "*wingrp;enable",CUST.GRP$; CALL "*wingrp;disable",CUST_2.GRP$; NEXT_ID=CUSTOMER.CTL ! 234033
5060 ! iF DIST_AMT=0 THEN REPLACEMENT_SCRN$="ARGCAA.6"; %NO_NEW_CR=1; NEXT_ID=DEP_NUM.CTL
5070 DEL_FLG=2
5080 REFRESH_FLG=1
5090 RETURN 
8000 ! Customer Cash Receipt Message
8010 CUSTOMER_MESSAGE:
8020 IF JE_FLG THEN RETURN 
8030 READ (Z[10],KEY=CUST_DIV$+CUST_CODE$,DOM=*RETURN)IOL=0195
8040 IF NUL(AS5$(371,180)) THEN RETURN 
8050 MSG_1$=AS5$(371,60)+SEP+AS5$(431,60)+SEP+AS5$(491,60)
8060 MSGBOX MSG_1$,MSG("FYI"),"INFO"
8090 RETURN 
9000 ! Set Up messages
9010 SET_MESSAGE:
9020 _ADD_MSG$="This Entry is not on File..."+SEP+"Add this Entry"
9090 RETURN 
9500 ! System Parameters
9510 GET_SYS_PARAM:
9520 READ (Z[6],KEY=%C$+"A/R",DOM=*NEXT)IOL=0200
9530 READ (Z[6],KEY=%C$+"AR3",DOM=*NEXT)IOL=0210
9590 RETURN 
9999 END 
10000 ! Query For deposit header
10010 QRY_DEP_HEAD:ENTER PRIME_KEY$
10020 IF LEN(PRIME_KEY$)>10 THEN EXIT 123
10190 EXIT 
10200 ! Query for Customer Deposit
10210 QRY_DEP_CUST:ENTER PRIME_KEY$
10220 IF LEN(PRIME_KEY$)<>26 THEN EXIT 123
10290 EXIT 
11000 ! Load Bank Code
11010 LOAD_BANK_CODE:
11015 IF %NOT_NEW_CR<>0 THEN OLD_BANK_CODE$=BANK_CODE$; OLD_BANK_LIST$=BANK_CODE_LIST$
11020 DIM PARAM$(200); BANK_CODE_LIST$=""
11030 READ (Z[6],KEY=%C$+"A/R",DOM=*NEXT)PARAM$
11040 IF PARAM$(16,1)<>"Y" THEN {
11050 READ (Z[9],KEY=PARAM$(43,3),DOM=*RETURN)ZYB$
11060 BANK_CODE_LIST$=ZYB$(1,3)+"-"+ZYB$(4,30)
11065 IF %NOT_NEW_CR<>0 THEN BANK_CODE_LIST$=OLD_BANK_LIST$
11070 DROP_BOX LOAD BANK_CODE_LIST.CTL,1,BANK_CODE_LIST$
11080 DROP_BOX WRITE BANK_CODE_LIST.CTL,BANK_CODE_LIST$
11090 BANK_CODE$=BANK_CODE_LIST$(1,3)
11095 IF %NOT_NEW_CR<>0 THEN BANK_CODE$=OLD_BANK_CODE$
11100 REFRESH_FLG=1; NEXT_ID=DEPOSIT_NUM.CTL
11110 RETURN  }
11120 READ (Z[9],KEY="",DOM=*NEXT)
11130 KEY_9$=KEY(Z[9],END=11160); READ (Z[9])ZYB$
11140 BANK_CODE_LIST$+=ZYB$(1,3)+"-"+ZYB$(4,30)+"/"
11145 IF ZYB$(1,3)=PARAM$(43,3) THEN DFLT_BANK_CODE$=ZYB$(1,3)+"-"+ZYB$(4,30)
11150 GOTO 11130
11160 DROP_BOX LOAD BANK_CODE_LIST.CTL,BANK_CODE_LIST$
11170 DROP_BOX WRITE BANK_CODE_LIST.CTL,DFLT_BANK_CODE$
11175 BANK_CODE_LIST$=DFLT_BANK_CODE$
11177 BANK_CODE$=DFLT_BANK_CODE$(1,3)
11180 IF %NOT_NEW_CR<>0 THEN BANK_CODE$=OLD_BANK_CODE$; BANK_CODE_LIST$=OLD_BANK_LIST$
11190 RETURN 
11200 ! Load the seletion for Bank Code
11210 SELECT_BANK_CODE:
11220 BANK_CODE$=BANK_CODE_LIST$(1,3)
11230 REFRESH_FLG=1
11240 NEXT_ID=DEPOSIT_NUM.CTL
11290 RETURN 
12000 DEPOSIT_HEADER:! SSP224871 jdf
12010 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160 ! SSP224871 jdf
12020 KEY_CHECK$=KEY(Z[1],END=12090) ! SSP224871 jdf
12025 READ (Z[1],KEY=KEY_CHECK$)IOL=0170 ! SSP224871 jdf
12030 LEN_KEY_CHECK=LEN(KEY_CHECK$) ! SSP224871 jdf
12050 IF LEN_KEY_CHECK<>26 THEN GOTO 12020 ! SSP224871 jdf
12060 IF KEY_CHECK$(1,10)<>CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$ THEN GOTO 12090 ! SSP224871 jdf
12070 TOTAL_CHECK_AMT+=AT6[1] ! SSP224871 jdf
12080 GOTO 12020 ! SSP224871 jdf
12090 AT5[1]=AT5[0]-TOTAL_CHECK_AMT ! SSP224871 jdf
12100 DIST_AMT=AT5[1]; REFRESH_FLG=1 ! SSP224871 jdf
12110 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160 ! SSP224871 jdf
12115 TOTAL_CHECK_AMT=0 ! SSP224871 jdf
12120 RETURN ! SSP224871 jdf
12200 CHECK_HEADER:! SSP224871 jdf
12210 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170 ! SSP224871 jdf
12220 KEY_INVOICE$=KEY(Z[1],END=12290) ! SSP224871 jdf
12225 READ (Z[1],KEY=KEY_INVOICE$)IOL=0180 ! SSP224871 jdf
12230 LEN_KEY_INVOICE=LEN(KEY_INVOICE$) ! SSP224871 jdf
12240 IF LEN_KEY_INVOICE<>34 THEN GOTO 12220 ! SSP224871 jdf
12271 IF CHECK_REF$<>KEY_INVOICE$(21,6) THEN GOTO 12290 ! SSP224871 jdf
12276 TOTAL_INVOICE_AMT+=AT7[6] ! SSP224871 jdf
12280 GOTO 12220 ! SSP224871 jdf
12290 AT6[2]=AT6[1]-TOTAL_INVOICE_AMT ! SSP224871 jdf
12300 CUST_DIST_AMT=AT6[2]; REFRESH_FLG=1 ! SSP224871 jdf
12310 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170 ! SSP224871 jdf
12315 TOTAL_INVOICE_AMT=0 ! SSP224871 jdf
12320 RETURN ! SSP224871 jdf
16000 ! Delete Check Header
16010 DEL_ARP_REC2:
16020 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$,DOM=*NEXT)
16025 KEY_2$=KEY(Z[1],END=*RETURN); READ (Z[1],KEY=KEY_2$)IOL=0170
16027 IF LEN(KEY_2$)<>26 THEN GOTO 16025
16030 IF KEY_2$(1,10)<>CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$ THEN RETURN 
16035 DIST_AMT=DIST_AMT+AT6[1] ! (+D_AMT)
16040 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160
16050 AT5[1]=AT5[1]+AT6[1] ! (+D_AMT)
16060 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160
16070 REMOVE (Z[1],KEY=KEY_2$)
16080 GOTO 16025
16090 RETURN 
16200 ! Delete Cash Receipts Invoice Detail
16210 DEL_ARP_REC3:
16220 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$,DOM=*NEXT)
16230 KEY_1$=KEY(Z[1],END=*RETURN); READ (Z[1])IOL=0180
16235 IF LEN(KEY_1$)<>34 THEN GOTO 16230
16240 IF KEY_1$(1,10)<>CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$ THEN RETURN 
16245 READ (Z[5],KNO=0,KEY="",DOM=*NEXT)
16250 INV_KEY$=KEY_1$(11,10)+KEY_1$(27,8)
16260 FIND (Z[5],KEY=INV_KEY$,DOM=16230)IOL=0185
16270 INV[5]=INV[5]-AT7[1]; D_AMT=D_AMT+AT7[6]
16280 WRITE (Z[5],KEY=INV_KEY$)IOL=0185
16290 REMOVE (Z[1],KEY=KEY_1$)
16300 GOTO 16230
16390 RETURN 
17000 ! Compare check amount to the distribution amt
17010 CHECK_DIST_BAL:
17015 IF B_CHECK_AMT<>0 THEN GOSUB UPDATE_CHECK_AMT; B_CHECK_AMT=0; RETURN 
17020 ! IF CHECK_AMT>DIST_AMT THEN {
17030 ! MSGBOX "Check Amount exceeds Distibution Amount","Check Error","INFO,OK"
17040 ! CHECK_AMT=0
17050 ! NEXT_ID=CHECK_AMT.CTL
17060 ! REFRESH_FLG=1
17070 ! } else {
17080 CUST_DIST_AMT=CHECK_AMT
17083 NEXT_ID=BUTTON_1.CTL ! IF B_CHECK_AMT<>0 THEN GOSUB UPDATE_CHECK_AMT; B_CHECK_AMT=0
17085 REFRESH_FLG=1
17087 CALL "*wingrp;Disable",CUST_3.GRP$
17090 PERFORM "ARGCAA;Load_rec_at6" ! }
17110 RETURN 
17300 ! Customet/Journal Entry check
17310 CUSTOMER_ENTRY_CHECK:
17320 IF NUL(CUSTOMER$) THEN {
17330 JE_FLG=1; FLD_FLG=0; GL_MSG1$=""
17332 CALL "*wingrp;Hide",CUST_1.GRP$; CALL "*wingrp;Show",J_ENT.GRP$; CALL "*wingrp;Enable",CUST_2.GRP$; CALL "*wingrp;disable",BUTTONS.GRP$
17335 NEXT_ID=CHECK_REF.CTL; CUSTOMER$="          "; CUST_DIV$="  ",CUST_CODE$="        "
17337 REFRESH_FLG=1
17340  } ELSE {
17350 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$
17360 CUSTOMER$=CUST_DIV$+CUST_CODE$
17370 %CUST_DIV$=CUST_DIV$
17380 %CUST_CODE$=CUST_CODE$
17385 FLD_FLG=0; CALL "*wingrp;Enable",CUST_2.GRP$; CALL "*wingrp;enable",BUTTONS.GRP$
17390 PERFORM "ARGCAA;GET_CUST_INFO"
17400 REFRESH_FLG=1 }
17410 RETURN 
17480 CALL "*wingrp;Hide",J_ENT.GRP$; CALL "*wingrp;Show",CUST_1.GRP$; GL_MSG1$=""; GL_AT6_FLG=1; NEXT_ID=CUSTOMER.CTL
17500 ! Journal Entry
17510 JOURNAL_ENTRY:
17511 IF AT6[0]<>0 THEN GL_AT6_FLG=1 ! SSP238654 jdf
17512 GL_IDX=0
17513 IF GL_AT6_FLG THEN GL_IDX=AT6[0] ELSE IF GL_AT7_FLG THEN GL_IDX=AT7[0]
17515 DIM T[1]; IF CASH_POSTED<>0 THEN GL_DIST_AMT=TOTAL_APPLIED-CASH_POSTED; GL_ADJ=GL_DIST_AMT; GL_DIST_AMT=-GL_DIST_AMT ELSE IF GL_FLG THEN GL_DIST_AMT=(-TOTAL_APPLIED)-CASH_POSTED ELSE GL_DIST_AMT=CUST_DIST_AMT ! CUST_DIST_AMT*-1 ! SSP236930 jdf  ! SSP237640 jdf
17517 GL_FLG=0; GL_AMT=(-GL_DIST_AMT) ! SSP236930 jdf
17520 Q9=0,V9=4,A0=GL_IDX,L0=1,F=Z[7],A$=AT6$,V1=0,V9=2,V3=Z[8],T[0]=GL_DIST_AMT*-1,T9$="",NO_GL=1
17525 D9$="" ! IF A0=0 THEN D9$=""  ! SSP237786
17530 ML_MEMO1$=CUST_NAME$; NO_GL=1
17540 CALL "ZZDISP","AX","000000000000","G/L",X3$,W2$,"",0,0,X4$
17550 PERFORM "GLGXAA"
17555 ! GL_IDX=DEC(Y$(1,2));!SSP# 195548
17560 ! NEXT_ID=GL_ACCT.CTL
17575 ML_AMOUNT=0,GL_ACCT$=""; IF NUM(ML_LINE$)>1 AND STARTT=1 THEN STARTT=0,ML_LINE=NUM(ML_LINE$),NEXT_ID=LB_LINE.CTL; PERFORM "GLGXAA;CHECK_BALANCE"; ML_DESC1$=B_DESC$,GL_ACCT$=STP(B_GL$,3,"-"); LIST_BOX WRITE LB_LINE.CTL,NUM(ML_LINE$); IF STP(B_DEB$)="" THEN ML_AMOUNT=NUM(B_CRE$) ELSE ML_AMOUNT=NUM(B_DEB$) ! SSP237673 jdf
17580 ! GOSUB LOAD_GL_IDX
17590 RETURN 
17700 ! Disable Gl Message
17710 DISABLE_GL_MSG:
17720 MULTI_LINE DISABLE GL_MSG1.CTL
17730 MULTI_LINE HIDE GL_MSG1.CTL
17740 MULTI_LINE SHOW CUST_NAME.CTL
17750 CUST_NAME$=GL_MSG1$
17760 BUTTON HIDE GL_LINES.CTL
17770 JE_FLG=0
17780 REFRESH_FLG=1
17790 RETURN 
17900 ! load General Ledger Index
17910 LOAD_GL_IDX:
17913 GL_IDX=DEC(Y$(1,2)),A0=GL_IDX; REM "SSP 199548
17915 IF GL_AT7_FLG THEN GL_IDX=A0; GOTO 17940
17920 AT6[0]=A0; AT6[2]=GL_DIST_AMT
17930 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170
17940 IF CASH_POSTED<>0 AND GL_DIST_AMT<>0 THEN GL_ADJ-=GL_DIST_AMT
17945 IF CASH_POSTED=0 THEN GL_ADJ=GL_AMT; IF NUL(CUSTOMER$) THEN CUST_DIST_AMT=0 ELSE IF SCRN_ID$="GLGJRA.2" AND ML_AMOUNT=0 THEN CUST_DIST_AMT=0 ! SSP236930 jdf ! SSP237640 jdf ! SSP239663 jdf
17950 REM IF CASH_POSTED=0 AND CUST_DIST_AMT=0 THEN GOSUB CLEAR_CUST_FIELDS; NEXT_ID=CUSTOMER.CTL ! SSP237640 jdf ! SSP237859 jdf
17955 ! GL_IDX=0
17960 DIM AT7[6]; GL_AT6_FLG=0; GL_AT7_FLG=0
17970 REFRESH_FLG=1
17980 CALL "*wingrp;hide",REPOST.GRP$; CALL "*wingrp;show",INV_B.GRP$
17990 RETURN 
18000 ! Clear Invoice Fields
18005 CLEAR_INV_FIELDS:
18010 CR_INV_NUM$=""; ACTION_1$=""
18020 INV_DATE$=""; INV_DDATE$=""; DISC_DDATE$=""
18030 CSH_DISCR=0; FR_BILLED=0; SLS_TAX=0
18040 CUST_PO_NO$=""
18045 NOTE_KEY$="",NOTE_PRESENT$=""
18050 INV_AMT=0; TOTAL_APPLIED=0; GL_ADJ=0
18060 INV_BAL=0; DISC_ALLOWED=0; FR_ALLOWED=0
18070 STAX_ALLOWED=0; CASH_POSTED=0; NEW_BAL=0
18075 CUST_FLG=1
18080 REFRESH_FLG=1; CALL "*wingrp;hide",REPOST.GRP$; CALL "*wingrp;show",INV_B.GRP$; CALL "*wingrp;Disable",DEL_9.GRP$
18090 RETURN 
18200 ! Clear Customer  Fields
18210 CLEAR_CUST_FIELDS:
18215 ! IF CUST_DIST_AMT<>0 THEN MSGBOX MSG("DIST_A_NZ"),MSG("WARNING"),"STOP"; NEXT_ID=BUTTON_1.CTL; REFRESH_FLG=1; RETURN 
18220 CUSTOMER$=""; CHECK_REF$=""; CUST_NAME$=""
18230 ADDRESS_1$=""; ADDRESS_2$=""
18240 CITY$=""; TF_STATE$=""; ZIP$="" ! SSP#217240
18250 AR_BAL=0; AR_FUTURE=0; AR_CURRENT=0
18260 OVER_30=0; OVER_60=0; OVER_90=0; OVER_120=0
18265 CHECK_DATE$=""; CHECK_AMT=0; CUST_DIST_AMT=0
18270 GL_IDX=0; REFRESH_FLG=1
18280 CALL "*wingrp;Disable",CUST_2.GRP$
18290 RETURN 
18400 ! Clear Deposit Fields
18410 CLEAR_DEPOSIT_FIELDS:
18420 DEPOSIT_NUM$=""
18423 DEPOSIT_DATE$=""; DISC_PAST_DUE$=""
18425 DEPOSIT_AMT=0; DIST_AMT=0
18430 REFRESH_FLG=1
18440 GOSUB CLEAR_CUST_FIELDS
18445 CALL "*wingrp;show",CUST_1.GRP$; CALL "*wingrp;hide",J_ENT.GRP$
18450 CALL "*wingrp;Disable",CUST.GRP$; CALL "*wingrp;Disable",DEP_DATE.GRP$; CALL "*wingrp;Disable",DEP_NUM.GRP$
18460 RETURN 
18500 ! Delete Single Invoice
18510 DELETE_INV:
18515 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$,DOM=18560)
18520 INV[5]=0; CUST_DIST_AMT+=AT7[6]; AT6[2]+=AT7[6]
18530 WRITE (Z[5],KEY=CUST_DIV$+CUST_CODE$+CR_INV_NUM$)IOL=0185
18540 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170
18550 REMOVE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$)
18560 GOSUB CLEAR_INV_FIELDS
18570 NEXT_ID=CR_INV_NUM.CTL
18580 REFRESH_FLG=1
18590 RETURN 
19000 ! Delete Cash Receipt Entry
19010 DEL_ENTRY_REC:
19015 IF DEL_FLG=0 THEN RETURN 
19020 MSGBOX MSG("DELETE_REC"),MSG("VERIFY"),"?,YesNo",ANS$
19030 IF ANS$="NO" THEN RETURN 
19035 IF DEL_FLG=1 THEN {
19040 GOSUB DEL_ARP_REC3
19050 GOSUB DEL_ARP_REC2
19060 GOSUB DEL_AT5_REC
19065 GOSUB CLEAR_DEPOSIT_FIELDS
19070 REFRESH_FLG=1
19075 NEXT_ID=DEPOSIT_NUM.CTL
19080 RETURN  }
19090 IF DEL_FLG=2 THEN {
19100 ! IF CHECK_AMT=0 THEN NEXT_ID=DEPOSIT_NUM.CTL; REFRESH_FLG=1; RETURN
19130 GOSUB DEL_AT7_REC
19140 GOSUB DEL_AT6_REC
19145 DEL_FLG=1
19150 REFRESH_FLG=1
19160 MSG_1$="Deposit for Customer: "+CUSTOMER$+" Bank Code: "+BANK_CODE$+" Deposit Number: "+DEPOSIT_NUM$+" Check Reference: "+CHECK_REF$+" has been deleted"
19165 GOSUB CLEAR_CUST_FIELDS
19170 MSGBOX MSG_1$,MSG("FYI"),"!"
19173 CALL "*WINGRP;ENABLE",CUST_3.GRP$; IF JE_FLG THEN CALL "*WINGRP;HIDE",J_ENT.GRP$; CALL "*WINGRP;SHOW",CUST_1.GRP$; CALL "*WINGRP;ENABLE",CUST_1.GRP$ ! SSP237673 jdf
19175 NEXT_ID=CUSTOMER.CTL }
19180 RETURN 
19200 ! Delete Deposit header
19210 DEL_AT5_REC:
19220 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$,DOM=*RETURN)IOL=0160
19230 REMOVE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)
19240 MSG_1$="Delete Bank Code: "+BANK_CODE$+" Deposit Number: "+DEPOSIT_NUM$
19250 MSGBOX MSG_1$,"FYI","!"
19260 GOSUB DISABLE_MAIN_BUTTONS
19265 CALL "*wingrp;Disable",DEP_NEXT.GRP$; CALL "*wingrp;enable",KEY_1.GRP$; REFRESH_FLG=1 ! SSP#283539
19270 RETURN 
19400 ! Delete Check Header
19410 DEL_AT6_REC:
19420 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$,DOM=*RETURN)
19430 DIST_AMT=DIST_AMT+AT6[1] ! (+D_AMT)
19440 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160
19450 AT5[1]=AT5[1]+AT6[1] ! (+D_AMT)
19460 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$)IOL=0160
19470 REMOVE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)
19490 RETURN 
19600 ! Delete Cash Receipts Invoice Detail
19610 DEL_AT7_REC:
19615 D_AMT=0
19620 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$,DOM=*NEXT)
19630 KEY_1$=KEY(Z[1],END=*RETURN); READ (Z[1])IOL=0180
19635 IF LEN(KEY_1$)<34 THEN GOTO 19630
19640 IF KEY_1$(1,26)<>CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$ THEN RETURN 
19645 READ (Z[5],KNO=0,KEY="",DOM=*NEXT)
19650 INV_KEY$=CUST_DIV$+CUST_CODE$+KEY_1$(27,8)
19660 FIND (Z[5],KEY=INV_KEY$,DOM=19630)IOL=0185
19670 INV[5]=INV[5]-AT7[1]; D_AMT=D_AMT+AT7[6]
19680 WRITE (Z[5],KEY=INV_KEY$)IOL=0185
19690 REMOVE (Z[1],KEY=KEY_1$)
19700 GOTO 19630
19790 RETURN 
19800 ! Check distribution amount before exiting
19810 CHECK_DIST_AMT:
19815 ! IF CHECK_AMT=0 AND DEL_FLG=2 THEN GOSUB DEL_ENTRY_REC; RETURN
19820 IF CUST_DIST_AMT<>0 THEN {
19830 MSGBOX MSG("DIST_A_NZ")+SEP+MSG("ARGCAA_20"),MSG("VERIFY"),"?,CANCEL",ANS$
19840 IF ANS$="OK" THEN SET_FOCUS BUTTON_1.CTL; REFRESH_FLG=1; RETURN 
19850 IF ANS$="CANCEL" THEN DEL_FLG=2; GOSUB DEL_ENTRY_REC; RETURN  }
19860 IF DIST_AMT<>0 THEN {
19870 MSGBOX MSG("DIST_A_NZ")+SEP+SEP+MSG("ARGCAA_21"),MSG("VERIFY"),"?,YesNo",ANS$
19880 IF ANS$="YES" THEN CALL "*WINGRP;ENABLE",CUST_1.GRP$; NEXT_ID=CUSTOMER.CTL; REFRESH_FLG=1; RETURN  }
19883 GOSUB VERIFY_TOTALS
19884 GOSUB WRAPUP; REPLACEMENT_SCRN$="ARGCAA.6"; REFRESH_FLG=1
19886 %NOT_NEW_CR=1
19890 RETURN 
19990 ! 
20000 LOAD_FISCAL_YEAR:
20030 READ (Z[6],KEY=%C$+"A/R",DOM=*NEXT)GL_REC$; CR_YEAR$=GL_REC$(7,4),CR_PD$=GL_REC$(11,2)
20040 KE$=%C$+"G/LYE",CR_FY$=""
20050 READ (Z[6],KEY=KE$,DOM=*NEXT)
20060 K$=KEY(Z[6],END=20110); READ (Z[6])Z9$
20070 IF LEN(K$)<8 OR KE$<>K$(1,8) THEN GOTO END_LOAD_FISCAL_YEAR
20075 IF POS(Z9$(99,1)="CR")>0 THEN GOTO 20060
20080 CR_FY$=CR_FY$+K$(9)+"/"
20090 IF K$(9,4)=CR_YEAR$ THEN CC$=Z9$(21)
20100 GOTO 20060
20110 END_LOAD_FISCAL_YEAR:
20120 CC$=CC$(NUM(CR_PD$)*6-5,6),END_DATE$=CC$,REFRESH_FLG=1
20130 DROP_BOX LOAD CR_FY.CTL,CR_FY$
20140 DROP_BOX WRITE FY.CTL,CR_YEAR$
20150 DROP_BOX LOAD END_FISCAL.CTL,CR_FY$
20160 DROP_BOX WRITE END_FISCAL.CTL,CR_YEAR$
20170 CR_ACCTPD$=""
20180 FOR ACCT=1 TO 12; CR_ACCTPD$=CR_ACCTPD$+STR(ACCT:"00")+"/"; NEXT ACCT
20190 DROP_BOX LOAD CR_ACCTPD.CTL,CR_ACCTPD$
20200 DROP_BOX WRITE CR_ACCTPD.CTL,CR_PD$
20210 END_ACCTPD$=CR_ACCTPD$
20220 DROP_BOX LOAD END_ACCTPD.CTL,CR_ACCTPD$
20230 DROP_BOX WRITE END_ACCTPD.CTL,CR_PD$
20235 CR_ACCTPD$=CR_PD$
20240 RETURN 
20250 LOAD_ENDING_DATE:
20255 KE$=%C$+"G/LYE"
20260 IF LEN(CR_FY$)>4 THEN VAL$=CR_YEAR$ ELSE VAL$=CR_FY$
20270 FIND (Z[6],KEY=KE$+VAL$)Z9$; CC$=Z9$(21)
20280 IF LEN(CR_ACCTPD$)>2 THEN VAL=NUM(CR_PD$) ELSE VAL=NUM(CR_ACCTPD$)
20290 CC$=CC$(VAL*6-5,6),END_DATE$=CC$,REFRESH_FLG=1
20300 RETURN 
21000 ! 
21010 GET_CUST_INFO:
21013 FLD_FLG=1
21015 IF CUSTOMER$="" THEN CUSTOMER$="          "; RETURN 
21030 DIM CUST[17]
21050 IOLIST CUST$,CUST[1],CUST[2],CUST[3],CUST[4],CUST[5],CUST[6],CUST[7],CUST[8],CUST[9],CUST[10],CUST[11],CUST[12],CUST[13],CUST[14],CUST[15],CUST[16],CUST[17]
21060 READ (Z[4],KEY=CUST_DIV$+CUST_CODE$,DOM=*RETURN)IOL=21050
21070 CUST_NAME$=CUST$(11,35)
21080 ADDRESS_1$=CUST$(56,30); ADDRESS_2$=CUST$(86,30)
21090 CITY$=CUST$(116,16); TF_STATE$=CUST$(132,2); ZIP$=CUST$(134,9) ! SSP#217240
21100 ! 
21110 AR_BAL=CUST[7]; AR_FUTURE=CUST[8]; AR_CURRENT=CUST[9]
21120 OVER_30=CUST[10]; OVER_60=CUST[11]; OVER_90=CUST[12]; OVER_120=CUST[13]
21230 %VAR_LIST$="CUST_NAME$,ADDRESS_1$,ADDRESS_2$,CITY$,TF_STATE$,ZIP$,AR_BAL,AR_FUTURE,AR_CURRENT,OVER_30,OVER_60,OVER_90,OVER_120" ! SSP 200237!SSP#217240
21900 RETURN 
22000 ! 
22010 GET_INVOICE_INFO:
22015 IF NUL(CR_INV_NUM$) THEN RETURN 
22020 IF CR_INV_NUM$(1,7)="ONACCNT" THEN MSGBOX MSG("ARGCAA_16"),MSG("FYI"),"!"; CR_INV_NUM$=""; NEXT_ID=CR_INV_NUM.CTL; REFRESH_FLG=1; RETURN 
22030 DIM INV[16]
22060 READ (Z[5],KEY=CUST_DIV$+CUST_CODE$+CR_INV_NUM$,DOM=*RETURN)IOL=0185
22070 ! 
22080 INV_DATE$=INV$(20,6); CUST_PO_NO$=INV$(36,15)
22090 INV_DDATE$=INV$(54,6); DISC_DDATE$=INV$(60,6)
22100 ! 
22110 CSH_DISCR=INV[4]; INV_AMT=INV[2]
22115 GOSUB CHECK_AT7_REC
22120 INV_BAL=INV[3]-INV[5]
22125 FR_BILLED=INV[8]; SLS_TAX=INV[7]
22130 ! 
22140 READ (Z[6],KEY=%C$+"G/L")G0$
22150 ! 
22160 CALL "*wingrp;Enable",DEL_9.GRP$; CALL "*wingrp;Enable",ACTION.GRP$
22170 NEXT_ID=ACTION_0.CTL
22180 REFRESH_FLG=1
22190 RETURN 
22300 ! Invalis Invoice Message
22310 INVALID_INV:
22320 MSGBOX MSG("INVA_INV"),MSG("FYI"),"!"
22330 CR_INV_NUM$=""
22340 NEXT_ID=CR_INV_NUM.CTL
22380 REFRSH_FLG=1
22390 RETURN 
23000 ! 
23010 PROCESS_ACTION:
23015 IF B_TA<>0 AND B_TA=TOTAL_APPLIED AND B_CP=CASH_POSTED THEN RETURN 
23020 ACTION_FLG=0
23021 GOSUB CLEAR_INV2_FIELDS; GOSUB DISABLE_FIELDS
23022 ON NUM(ACTION_0$) GOTO ACTION_0,ACTION_1,ACTION_2,ACTION_3,ACTION_4,ACTION_5,ACTION_6,ACTION_7,ACTION_8
23025 RETURN 
23027 ! 
23030 ACTION_0:
23033 INV_CHECK_AMT=INV[3]-INV[5]
23035 GOSUB CHECK_ACTION_MESSAGE
23037 IF ACTION_FLG THEN NEXT_ID=CR_INV_NUM.CTL; REFRESH_FLG=1; EXIT 
23040 TOTAL_APPLIED=INV[3]-INV[5]
23045 IF DISC_DDATE$<DISC_PAST_DUE$ THEN DISC_ALLOWED=0 ELSE DISC_ALLOWED=INV[4] ! SSP#283489
23050 CASH_POSTED=TOTAL_APPLIED-(GL_ADJ+DISC_ALLOWED)
23055 NEW_BAL=INV_BAL-TOTAL_APPLIED
23060 RETURN 
23070 ! 
23080 ACTION_1:
23085 INV_CHECK_AMT=INV[3]-INV[5]-INV[4]
23090 GOSUB CHECK_ACTION_MESSAGE
23095 IF ACTION_FLG THEN NEXT_ID=CR_INV_NUM.CTL; REFRESH_FLG=1; EXIT 
23100 TOTAL_APPLIED=INV[3]-INV[5]; DISC_ALLOWED=INV[4]
23110 CASH_POSTED=TOTAL_APPLIED-(GL_ADJ+DISC_ALLOWED)
23115 NEW_BAL=INV_BAL-TOTAL_APPLIED
23120 RETURN 
23130 ! 
23140 ACTION_2:
23143 INV_CHECK_AMT=INV[3]-INV[5]
23145 GOSUB CHECK_ACTION_MESSAGE
23147 IF ACTION_FLG THEN NEXT_ID=CR_INV_NUM.CTL; REFRESH_FLG=1; EXIT 
23150 TOTAL_APPLIED=INV[3]-INV[5]
23160 CASH_POSTED=TOTAL_APPLIED-(GL_ADJ+DISC_ALLOWED)
23165 NEW_BAL=INV_BAL-TOTAL_APPLIED
23170 RETURN 
23180 ! 
23190 ! if action_1$="3" then {
23200 ACTION_3:
23203 INV_CHECK_AMT=INV[3]-INV[5]
23205 GOSUB CHECK_ACTION_MESSAGE
23207 IF ACTION_FLG THEN NEXT_ID=CR_INV_NUM.CTL; REFRESH_FLG=1; EXIT 
23210 TOTAL_APPLIED=INV[3]-INV[5]
23215 IF DISC_DDATE$<DISC_PAST_DUE$ THEN DISC_ALLOWED=0 ELSE DISC_ALLOWED=INV[4] ! SSP#283489         
23217 IF G0$(40,1)<>"C" THEN STAX_ALLOWED=INV[7]
23220 CASH_POSTED=TOTAL_APPLIED-(GL_ADJ+DISC_ALLOWED+STAX_ALLOWED)
23225 NEW_BAL=INV_BAL-TOTAL_APPLIED
23230 RETURN 
23240 ! 
23250 ACTION_4:
23253 INV_CHECK_AMT=INV[3]-INV[5]; IF G0$(40,1)<>"C" THEN INV_CHECK_AMT=INV_CHECK_AMT-INV[8]
23255 GOSUB CHECK_ACTION_MESSAGE
23257 IF ACTION_FLG THEN NEXT_ID=CR_INV_NUM.CTL; REFRESH_FLG=1; EXIT 
23260 TOTAL_APPLIED=INV[3]-INV[5]
23265 IF DISC_DDATE$<DISC_PAST_DUE$ THEN DISC_ALLOWED=0 ELSE DISC_ALLOWED=INV[4] ! SSP#283489
23267 IF G0$(40,1)<>"C" THEN FRT_ALLOWED=INV[8]
23270 CASH_POSTED=TOTAL_APPLIED-(GL_ADJ+DISC_ALLOWED+FRT_ALLOWED)
23275 NEW_BAL=INV_BAL-TOTAL_APPLIED
23280 RETURN 
23290 ! 
23300 ACTION_5:
23303 INV_CHECK_AMT=INV_BAL=INV[7]
23305 GOSUB CHECK_ACTION_MESSAGE
23307 IF ACTION_FLG THEN NEXT_ID=CR_INV_NUM.CTL; REFRESH_FLG=1; EXIT 
23310 TOTAL_APPLIED=INV[3]-INV[5]-INV[7]
23320 CASH_POSTED=TOTAL_APPLIED-(GL_ADJ+DISC_ALLOWED)
23325 NEW_BAL=INV_BAL-TOTAL_APPLIED
23330 RETURN 
23340 ACTION_6:
23343 INV_CHECK_AMT=INV_BAL=INV[8]
23345 GOSUB CHECK_ACTION_MESSAGE
23347 IF ACTION_FLG THEN NEXT_ID=CR_INV_NUM.CTL; REFRESH_FLG=1; EXIT 
23350 TOTAL_APPLIED=INV[3]-INV[5]-INV[8]
23360 CASH_POSTED=TOTAL_APPLIED-(GL_ADJ+DISC_ALLOWED+FRT_ALLOWED+STAX_ALLOWED)
23365 NEW_BAL=INV_BAL-TOTAL_APPLIED
23370 RETURN 
23380 ACTION_7:
23390 TOTAL_APPLIED=CUST_DIST_AMT
23400 CASH_POSTED=TOTAL_APPLIED-(GL_ADJ+DISC_ALLOWED)
23405 NEW_BAL=INV_BAL-TOTAL_APPLIED
23407 CALL "*WINGRP;ENABLE",PRE_PAY.GRP$
23408 NEXT_ID=BUTTON_3.CTL; REFRESH_FLG=1 ! SSP#276882
23410 RETURN 
23420 ! Action 8
23430 ACTION_8:
23440 GOSUB MANUAL_ENTRY
23445 NEXT_ID=TOTAL_APPLIED.CTL; REFRESH_FLG=1
23450 RETURN 
23500 ! CUST_DIST_AMT=CUST_DIST_AMT-CASH_POSTED
23505 ! NEXT_ID=BUTTON_3.CTL
23600 ! Invoice Balance Message
23610 CHECK_INV_BALANCE:
23620 IF INV_BAL<=0 AND STP(ACTION_0$)="8" THEN {
23630 MSGBOX MSG("ARGCAA_17"),MSG("FYI"),"!"
23640  }
23690 RETURN 
23695 ! 
23800 ! 
23810 CHECK_ACTION_MESSAGE:
23820 ! 
23830 IF CUST_DIST_AMT<INV_CHECK_AMT THEN MSGBOX MSG("REQ_CASH"),MSG("FYI"),"!"; ACTION_FLG=1
23840 RETURN 
23900 ! Update Customer Distribution Amount
23910 UPDATE_CUST_DIST_AMT:
23915 IF B_CP<>0 THEN CUST_DIST_AMT+=B_CP
23920 REM CUST_DIST_AMT=CUST_DIST_AMT-CASH_POSTED ! SSP236359 jdf
23930 REFRESH_FLG=1
23940 RETURN 
24000 ! update Invoice File
24005 UPDATE_INVOICE:
24010 READ (Z[5],KEY=CUST_DIV$+CUST_CODE$+CR_INV_NUM$,DOM=*RETURN)IOL=0185
24020 IF INV_FLG THEN INV[5]=INV[5]-B_TP
24030 INV[5]=INV[5]+TOTAL_APPLIED
24040 WRITE (Z[5],KEY=CUST_DIV$+CUST_CODE$+CR_INV_NUM$)IOL=0185
24050 RETURN 
25000 ! Manual Entry
25010 MANUAL_ENTRY:
25020 MULTI_LINE ENABLE TOTAL_APPLIED.CTL; MULTI_LINE ENABLE DISC_ALLOWED.CTL; MULTI_LINE ENABLE CASH_POSTED.CTL
25030 IF G0$(40,1)<>"C" THEN {
25049 MULTI_LINE ENABLE FRT_ALLOWED.CTL
25050 MULTI_LINE ENABLE STAX_ALLOWED.CTL }
25060 NEXT_ID=TOTAL_APPLIED.CTL
25070 REFRESH_FLG=1
25080 RETURN 
25200 ! Manual Caluculations
25210 MANUAL_CALCULATION:
25215 GOSUB CASH_POSTED_CHECK
25220 NEW_BAL=INV_BAL-TOTAL_APPLIED
25225 IF CUST_DIST_AMT=0 THEN CUST_DIST_AMT=(CASH_POSTED); CUST_DIST_AMT=CUST_DIST_AMT-CASH_POSTED ! SSP236359 jdf
25227 REFRESH_FLG=1 ! SSP236359 jdf
25230 RETURN 
25300 ! Check balances from manual entry
25310 CHECK_BALANCE:
25315 RP_FLG=0
25320 IF (GL_ADJ+DISC_ALLOWED+STAX_ALLOWED+FRT_ALLOWED+CASH_POSTED)<>TOTAL_APPLIED THEN {
25330 MSGBOX MSG("ARGCAA_22"),MSG("FYI"),"!,OK"
25340 CALL "*wingrp;show",REPOST.GRP$
25350 CALL "*wingrp;hide",INV_B.GRP$
25355 REM IF CUST_DIST_AMT=0 THEN CUST_DIST_AMT=TOTAL_APPLIED ! SSP236359 jdf ! SSP236930 jdf
25357 IF CUST_DIST_AMT=0 AND CASH_POSTED<>0 THEN CUST_DIST_AMT=CASH_POSTED; CUST_DIST_AMT=CUST_DIST_AMT-CASH_POSTED; REM ELSE IF CUST_DIST_AMT=0 AND CASH_POSTE=0 THEN CUST_DIST_AMT=TOTAL_APPLIED ! SSP236359 jdf ! SSP236930 jdf
25360 NEXT_ID=REPOST.CTL
25370 RP_FLG=1
25375  }
25380 REFRESH_FLG=1
25390 RETURN 
25400 ! Check Cash Posted amount
25410 CASH_POSTED_CHECK:
25420 REM IF CASH_POSTED<0 OR (CASH_POSTED<0 AND CUST_DIST_AMT<=CASH_POSTED) OR (CASH_POSTED>0 AND CASH_POSTED<=CUST_DIST_AMT) THEN RETURN ! SSP#218599!225655 ! SSP236359 jdf                                                                       
25424 IF (CUST_DIST_AMT<0 AND CASH_POSTED<CUST_DIST_AMT) OR (CUST_DIST_AMT>=0 AND CASH_POSTED>CUST_DIST_AMT) THEN {! SSP236359 jdf 
25430 MSGBOX MSG("REQ_CASH"),MSG("FYI"),"!"
25440 CASH_POSTED=0; NEXT_ID=CASH_POSTED.CTL
25450 EXIT  } ! SSP236359 jdf
25490 RETURN 
25500 ! Process Invoices
25510 PROCESS_INVOICE:
25513 GOSUB CHECK_BALANCE; IF RP_FLG THEN RETURN 
25515 IF NUL(CR_INV_NUM$) THEN GOTO 25550 ! SSP 212473
25518 IF GL_ADJ<>0 THEN INVD$="Y" ! SSP 197176
25520 GOSUB UPDATE_CUST_DIST_AMT
25525 IF CUST_DIST_AMT<>0 THEN CUST_DIST_AMT=CUST_DIST_AMT-CASH_POSTED ELSE CUST_DIST_AMT=-(CASH_POSTED) ! SSP236359 jdf ! SSP237673 jdf
25530 GOSUB ADD_AT7_REC
25537 REM IF CUST_DIST_AMT<>0 THEN CUST_DIST_AMT=CUST_DIST_AMT-CASH_POSTED ELSE CUST_DIST_AMT=-(CASH_POSTED) ! SSP236359 jdf  ! SSP237673 jdf
25540 GOSUB CLEAR_INV_FIELDS
25542 IF INVD$="Y" THEN INVD$=""; REFRESH_FLG=1; NEXT_ID=CR_INV_NUM.CTL; RETURN ! SSP 197176
25550 IF CUST_DIST_AMT=0 THEN {
25560 GOSUB CLEAR_CUST_FIELDS
25570 NEXT_ID=CUSTOMER.CTL
25580 DEL_FLG=1; REFRESH_FLG=1; CMD_STR$="END"
25590  } ELSE {
25600 NEXT_ID=CR_INV_NUM.CTL; CALL "*wingrp;Disable",OK_1.GRP$ }
25690 RETURN 
25700 ! Clear Info
25710 CLEAR_PROCESS:
25720 TOTAL_APPLIED=0
25730 GL_ADJ=0; DISC_ALLOWED=0
25740 STAX_ALLOWED=0; FRT_ALLOWED=0
25745 ! IF CASH_POSTED<>0 THEN CUST_DIST_AMT+=CASH_POSTED
25750 CASH_POSTED=0
25790 RETURN 
25900 ! Auto Distribute Range Logic
25910 AD_RANGE_LOGIC:
25915 AD_KNO=2,AD_INV_POS=17
25920 IF MID(SYS_PARM$,179,1)<>"Y" AND MID(SYS_PARM_3$,7,1)<>"Y" THEN RETURN ! SSP237744 jdf
25930 START_INV_NUM$="",%START_INV_NUM$="",END_INV_NUM$="",%END_INV_NUM$="",ORD_START$="",ORD_END$=""
25935 DISPLAY_INV_RANGE$=MID(SYS_PARM$,179,1),DISPLAY_ORD_RANGE$=MID(SYS_PARM_3$,7,1) ! SSP237744 jdf
25940 PROCESS "ARGCAA.7","../ARG/AR.EN",START_INV_NUM$,END_INV_NUM$,ORD_START$,ORD_END$,DISPLAY_INV_RANGE$,DISPLAY_ORD_RANGE$,SELECTED_RANGE$
25945 START_INV_NUM$=%START_INV_NUM$; END_INV_NUM$=%END_INV_NUM$
25947 IF NOT(NUL(START_INV_NUM$)) OR NOT(NUL(END_INV_NUM$)) OR NOT(NUL(ORD_START$)) OR NOT(NUL(ORD_END$)) THEN CALL "*WINGRP;HIDE",SUMM_REF.GRP$; REFRESH_FLG=1
25950 IF NUL(END_INV_NUM$) THEN END_INV_NUM$=DIM(8,"~")
25960 AD_KNO=2,AD_INV_POS=17; IF SELECTED_RANGE$="O" AND (NOT(NUL(ORD_START$)) OR NOT(NUL(ORD_END$))) THEN AD_KNO=3,AD_INV_POS=19
25965 IF NUL(ORD_END$) THEN ORD_END$=DIM(8,"~")
25990 RETURN 
26000 ! Process Auto Distribute
26010 AUTO_DISTRIBUTE:
26012 I_BAL=0; AMT_OPEN=0; AMT_APPLIED=0; M0$="##,###,###.00-"
26015 INV_LIST$=""; DIM AT7$(40," "),SPC$(100," "),INV[16],AT7[6],AT6[2]
26020 LIST_BOX REMOVE PAID_INVOICE.CTL
26025 LIST_BOX PAID_INVOICE.CTL,@(1,8,77,18),OPT="r",FMT="[Invoice No.]l10 [Due Date]c10 [Disc. Date]c10 [Inv. Bal]r10 [Disc Amt]r10 [Amt Applied]r10 [Unpaid Bal]r10"
26030 IF CREDIT_MEMO$="Y" OR NOT(NUL(SUMM_BILL_REF$)) THEN GOSUB PROCESS_CREDIT_MEMO
26040 READ (Z[15],KNO=AD_KNO,KEY=CUST_DIV$+CUST_CODE$,DOM=*NEXT)
26050 INV_KEY$=KEY(Z[15],END=26293); READ (Z[15],KEY=INV_KEY$)IOL=0185
26055 AD_INV_NUM$=MID(INV_KEY$,AD_INV_POS,8)
26060 IF INV_KEY$(1,10)<>CUST_DIV$+CUST_CODE$ THEN GOTO 26293
26061 IF NOT(NUL(SUMM_BILL_REF$)) THEN IF INV$(160,8)<>SUMM_BILL_REF$ THEN GOTO 26050
26063 IF MID(SYS_PARM$,179,1)="Y" AND SELECTED_RANGE$="I" THEN IF INV$(11,8)<START_INV_NUM$ OR INV$(11,8)>END_INV_NUM$ THEN GOTO 26050 ! SSP237744 jdf
26064 IF MID(SYS_PARM_3$,7,1)="Y" AND SELECTED_RANGE$="O" THEN IF INV$(66,8)<ORD_START$ OR INV$(66,8)>ORD_END$ THEN GOTO 26050 ! SSP237744 jdf
26067 IF INV$(11,7)="ONACCNT" THEN GOTO 26050
26070 IF INV[3]-INV[5]<=0 THEN GOTO 26050
26073 IF CUST_DIST_AMT=0 THEN GOTO 26293
26074 IF INV$(60,6)>=DISC_PAST_DUE$ THEN DISC=INV[4] ELSE DISC=0 ! SSP#283489
26075 I_BAL=INV[3]-INV[5]
26080 IF (I_BAL-DISC)>=CUST_DIST_AMT THEN {
26090 INV[5]=INV[5]+(CUST_DIST_AMT+DISC)
26100 AMT_APPLIED=CUST_DIST_AMT+DISC
26105 AMT_OPEN=I_BAL-AMT_APPLIED
26110 CUST_DIST_AMT=0
26120  } ELSE {
26130 CUST_DIST_AMT=CUST_DIST_AMT-(I_BAL-DISC)
26135 AMT_APPLIED=I_BAL
26140 INV[5]=INV[5]+I_BAL }
26150 WRITE (Z[5],KEY=INV_KEY$(1,10)+AD_INV_NUM$)IOL=0185
26153 D1$=INV$(54,6); D2$=INV$(60,6)
26155 CALL "ZZWDTE;DISPLAY",D1$,A1$,A2$; CALL "ZZWDTE;DISPLAY",D2$,A1$,A2$
26165 LIST_BOX LOAD PAID_INVOICE.CTL,0,AD_INV_NUM$+SEP+D1$+SEP+D2$+SEP+STR(I_BAL:M0$)+SEP+STR(INV[4]:M0$)+SEP+STR(AMT_APPLIED:M0$)+SEP+STR(AMT_OPEN:M0$)
26170 CR_INV_NUM$=AD_INV_NUM$
26172 B_FY$=CR_FY$
26220 GOSUB UPDATE_PAID_INVOICE
26230 ! READ (Z[5],KNO=2,KEY=INV_KEY$,DOM=*NEXT)
26290 GOTO 26050
26293 READ (Z[5],KNO=0,KEY="",DOM=*NEXT)
26295 RETURN 
26300 ! Process Summary Bill
26310 PROCESS_SUMMARY_BILL:
26490 RETURN 
26500 ! Credit Memo Process
26510 PROCESS_CREDIT_MEMO:
26530 READ (Z[15],KNO=AD_KNO,KEY=CUST_DIV$+CUST_CODE$,DOM=*NEXT)
26540 INV_KEY2$=KEY(Z[15],END=*RETURN); READ (Z[15])IOL=0185
26545 AD_INV_NUM$=MID(INV_KEY2$,AD_INV_POS,8)
26550 IF INV_KEY2$(1,10)<>CUST_DIV$+CUST_CODE$ THEN RETURN 
26555 IF INV$(11,7)="ONACCNT" THEN GOTO 26540
26557 IF MID(SYS_PARM$,179,1)="Y" AND SELECTED_RANGE$="I" THEN IF INV_KEY2$(17,8)<START_INV_NUM$ OR INV_KEY2$(17,8)>END_INV_NUM$ THEN GOTO 26540 ! SSP237744 jdf
26558 IF MID(SYS_PARM_3$,7,1)="Y" AND SELECTED_RANGE$="O" THEN IF INV_KEY2$(11,8)<ORD_START$ OR INV_KEY2$(11,8)>ORD_END$ THEN GOTO 26540 ! SSP237744 jdf
26560 IF INV[3]>=0 THEN GOTO 26540
26565 IF NOT(NUL(SUMM_BILL_REF$)) AND INV$(160,8)<>SUMM_BILL_REF$ THEN GOTO 26540
26570 CUST_DIST_AMT=CUST_DIST_AMT+ABS(INV[3])
26580 INV[5]=INV[3]; AMT_APPLIED=INV[3]; CR_INV_NUM$=AD_INV_NUM$
26585 WRITE (Z[5],KEY=INV_KEY2$(1,10)+AD_INV_NUM$)IOL=0185
26587 D1$=INV$(54,6); D2$=INV$(60,6)
26588 CALL "ZZWDTE;DISPLAY",D1$,A1$,A2$; CALL "ZZWDTE;DISPLAY",D2$,A1$,A2$
26590 LIST_BOX LOAD PAID_INVOICE.CTL,0,AD_INV_NUM$+SEP+D1$+SEP+D2$+SEP+STR(I_BAL:M0$)+SEP+STR(INV[4]:M0$)+SEP+STR(AMT_APPLIED:M0$)+SEP+STR(AMT_OPEN:M0$)
26593 GOSUB CREATE_INV_RECORD
26595 GOTO 26540
26600 ! Update AT7 Record
26610 UPDATE_PAID_INVOICE:
26620 DIM AT7$(40," "),AT7[6],AT6[2]
26630 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$,DOM=CREATE_INV_RECORD)IOL=0180
26640 AT7[1]=AT7[1]+AMT_APPLIED
26650 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$)IOL=0180
26655 GOSUB UPDATE_CUST_DIST_REC
26660 RETURN 
26670 ! Creat new invoice record in AT7
26680 CREATE_INV_RECORD:
26685 DIM AT7$(40," "),AT7[6]
26690 AT7$(1,4)=CR_FY$; AT7$(5,2)=CR_ACCTPD$; AT7$(7,3)=BANK_CODE$
26700 AT7$(10,1)=DEPOSIT_NUM$; AT7$(11,2)=CUST_DIV$; AT7$(13,8)=CUST_CODE$
26710 AT7$(21,6)=CHECK_REF$; AT7$(27,8)=CR_INV_NUM$
26715 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$,DOM=*NEXT)IOL=0180
26720 AT7[1]+=AMT_APPLIED; AT7[6]+=AMT_APPLIED-DISC ! SSP#217665
26725 IF INV$(60,6)>=DISC_PAST_DUE$ THEN AT7[2]+=INV[4] ELSE AT7[2]=0 ! ssp#283489
26730 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$)IOL=0180
26735 GOSUB UPDATE_CUST_DIST_REC
26740 RETURN 
26750 ! Update customer Distribution Record
26760 UPDATE_CUST_DIST_REC:
26770 READ (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$,DOM=*RETURN)IOL=0170
26780 AT6[2]=CUST_DIST_AMT
26790 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170
26800 RETURN 
26900 ! Create Invoice Header for Use on account Options
26910 CREATE_INV_HEAD:
26920 DIM AT6$(71," "),AT6[2]
26930 AT6$(1,4)=CR_FY$; AT6$(5,2)=CR_ACCTPD$; AT6$(7,3)=BANK_CODE$; AT6$(10,1)=DEPOSIT_NUM$
26940 AT6$(11,2)=CUST_DIV$; AT6$(13,8)=CUST_CODE$
26950 AT6$(21,6)=CHECK_REF$; AT6$(27,6)=CHECK_DATE$; AT6$(33,35)=CUST_NAME$
26960 AT6[1]=CHECK_AMT; AT6[2]=CUST_DIST_AMT
26970 WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$)IOL=0170
26990 RETURN 
27000 ! Put On Account
27010 PUT_ON_ACCOUNT:
27020 INV_KEY1$=CUST_DIV$+CUST_CODE$+"ONACCNT "
27030 EXTRACT (Z[5],KEY=INV_KEY1$,DOM=CREAT_ON_ACCT)IOL=0185
27040 INV[5]=INV[5]+CUST_DIST_AMT
27050 INV$(20,6)=CHECK_DATE$; IF INV$(133,6)<CR_FY$+CR_ACCTPD$ THEN INV$(133,6)=CR_FY$+CR_ACCTPD$ ! ssp#239247
27060 WRITE (Z[5],KEY=INV_KEY1$)IOL=0185
27062 WRITE (Z(11),KEY=MID(INV$,1,10)+"B"+MID(INV$,20,6)+MID(INV$,11,8)) ! ARN
27065 WRITE (Z(12),KEY=MID(INV$,11,8)+MID(INV$,1,10)) ! ASG
27070 CR_INV_NUM$=INV_KEY1$(11,8)
27075 AMT_APPLIED=CUST_DIST_AMT; CUST_DIST_AMT=0
27080 GOSUB CREATE_INV_RECORD
27085 MSG_1$="The amount of "+STR(AMT_APPLIED:"##,###,###.00-")+" Posted to ON-ACCOUNT"
27090 MSGBOX MSG_1$,MSG("FYI"),"!"
27092 ANS$=""; MSGBOX MSG("ARGCAA_26"),MSG("CONFIRM"),"?,YesNo",ANS$
27093 IF ANS$="YES" THEN GOSUB INV_TRANS_NOTE
27094 IF NOT(NUL(NOTE_KEY$)) THEN AT7$(35,5)=NOTE_KEY$; WRITE (Z[1],KEY=CR_FY$+CR_ACCTPD$+BANK_CODE$+DEPOSIT_NUM$+CUST_DIV$+CUST_CODE$+CHECK_REF$+CR_INV_NUM$)IOL=0180
27095 CUST_DIST_AMT=0; NEXT_ID=CUSTOMER.CTL; REFRESH_FLG=1
27097 CALL "*WINGRP;ENABLE",CUST_3.GRP$
27100 RETURN 
27200 ! Create On-Account Record
27210 CREAT_ON_ACCT:
27220 DIM INV$(182),INV[16]
27230 INV$(1,10)=CUST_DIV$+CUST_CODE$,INV$(11,8)="ONACCNT ",INV$(19,1)="A",INV$(20,6)=CHECK_DATE$,INV$(54,6)=CHECK_DATE$,INV$(127,6)=CR_FY$+CR_ACCTPD$,INV$(108,9)=CUST$(220,9)
27240 GOTO 27040
27400 ! Use On Account
27410 USE_ON_ACCT:
27420 DIM INV(159),INV[16]
27430 INV_KEY1$=CUST_DIV$+CUST_CODE$+"ONACCNT "
27440 READ (Z[5],KEY=INV_KEY1$,DOM=*RETURN)IOL=0185
27450 IF INV[3]-INV[5]=0 THEN RETURN 
27460 OA_AMT=-(INV[3]-INV[5])
27465 AMT_APPLIED=-OA_AMT
27470 INV$(20,6)=CHECK_DATE$,INV$(133,6)=CR_FY$+CR_ACCTPD$ ! SSP#231876
27473 CUST_DIST_AMT+=OA_AMT; CR_INV_NUM$="ONACCNT "
27475 GOSUB CREATE_INV_RECORD
27480 AMT_APPLIED=OA_AMT; INV[5]=INV[5]-OA_AMT
27490 WRITE (Z[5],KEY=INV_KEY1$)IOL=0185
27493 ! CUST_DIST_AMT+=OA_AMT; CR_INV_NUM$="ONACCNT "
27495 ! GOSUB UPDATE_CUST_DIST_REC
27500 ! GOSUB CREATE_INV_RECORD
27510 MSG_1$=STR(OA_AMT:M0$)+" was added to Distributed Amount for "+CUST_NAME$
27520 MSGBOX MSG_1$,MSG("FYI"),"INFO"
27570 AMT_APPLIED=0
27580 REFRESH_FLG=1
27590 RETURN 
28000 ! Enable main buttons
28010 ENABLE_MAIN_BUTTONS:
28020 BUTTON SHOW MAIN_DEL1.CTL; BUTTON SHOW MAIN_EXIT1.CTL; BUTTON ENABLE MAIN_EXIT1.CTL; BUTTON ENABLE MAIN_DEL1.CTL
28030 RETURN 
28050 ! Disable Main Buttons
28060 DISABLE_MAIN_BUTTONS:
28070 BUTTON HIDE MAIN_DEL1.CTL
28080 RETURN 
28100 ! enable customer panel buttons
28110 ENABLE_CUST_BUTTONS:
28120 BUTTON HIDE MAIN_DEL1.CTL; BUTTON HIDE MAIN_EXIT1.CTL; BUTTON DISABLE MAIN_EXIT1.CTL
28130 BUTTON SHOW CUST_DEL1.CTL; BUTTON SHOW CUST_EXIT1.CTL; BUTTON ENABLE CUST_EXIT1.CTL
28140 RETURN 
28200 ! enable customer information
28210 ENABLE_CUST_INFO:
28220 MULTI_LINE ENABLE CUSTOMER.CTL; MULTI_LINE ENABLE CHECK_REF.CTL
28230 RETURN 
29000 VERIFY_TOTALS:! Read backwards through the file, add up invoices and update check total when check number changes
29003 RETURN 
29005 DEP$="",DEP_TOTAL=0,CHECK$="",CHECK_TOTAL=0
29010 READ (Z[1],KEY=$FE$,DOM=*NEXT)
29014 ARP_IOL:IOLIST ARP$(1),ARP[1],ARP[2],ARP[2],ARP[3],ARP[4],ARP[5],ARP[6]
29015 NEXT_ARP_REC:DIM ARP[6]; ARP_KEY$=KEP(Z[1],END=VERIFY_TOTAL_END); READ (Z[1],KEY=ARP_KEY$,DOM=*SAME)IOL=ARP_IOL
29020 IF DEP$="" THEN DEP$=ARP$(1,10) END_IF ; IF CHECK$="" AND LEN(ARP_KEY$)=26 THEN CHECK$=ARP$(1,26)
29030 IF LEN(ARP_KEY$)=10 AND ARP_KEY$(1,10)=DEP$ THEN ARP[1]=DEP_TOTAL; WRITE (Z[1],KEY=ARP_KEY$)IOL=ARP_IOL; CHECK$="",CHECK_TOTAL=0,DEP$="",DEP_TOTAL=0; GOTO NEXT_ARP_REC
29035 IF LEN(ARP_KEY$)=26 AND ARP_KEY$=CHECK$ THEN ARP[2]=CHECK_TOTAL; WRITE (Z[1],KEY=ARP_KEY$)IOL=ARP_IOL; CHECK$="",CHECK_TOTAL=0; GOTO NEXT_ARP_REC
29040 CHECK_TOTAL+=ARP[2],DEP_TOTAL+=ARP[2]
29070 ! PRINT ARP_KEY$," ",ARP[2],'LF',CHECK$," ",CHECK_TOTAL,'LF',DEP$," ",DEP_TOTAL
29075 GOTO NEXT_ARP_REC
29080 VERIFY_TOTAL_END:
29095 RETURN 
29099 ! ***************************************************
29200 ! Enter the Order Number for invoice.
29210 ORDER_NUM_ENTERED:
29220 CALL "ZZWLKU;Parse_ord",CR_INV_NUM$,ORD_DIV$,ORD_NUM$; CR_INV_NUM$=ORD_DIV$+ORD_NUM$
29230 PERFORM "ARGCAA;Get_Order_Info"
29280 NEXT_ID=ACTION_0.CTL
29290 REFRESH_FLG=1
29295 RETURN 
29299 ! **************************************
30000 ! get order infor for Pre-payment.
30010 GET_ORDER_INFO:
30020 FLD_FLG=1
30040 INV_DATE$=%X3_TODAY$; INV_DDATE$=%X3_TODAY$
30050 CUST_PO_NO$="Prepayment"
30060 READ (Z[6],KEY=%C$+"G/L")G0$
30180 CALL "*wingrp;enable",EXT_9.GRP$
30190 RETURN 
30300 ! Create a Zero Invoice from Pre-payment.
30310 CREATE_PREPAY_INVOICE:
30315 IF NUL(CR_INV_NUM$) THEN GOSUB CLEAR_INV_FIELDS; NEXT_ID=CR_INV_NUM.CTL; REFRESH_FLG=1; RETURN 
30320 DIM AR6$(180),AR6[14]
30322 AR6$(54,6)=INV_DDATE$; AR6$(66,8)=CR_INV_NUM$
30325 CR_INV_NUM$=CR_INV_NUM$(2)+" "
30330 KEY_5$=CUST_DIV$+CUST_CODE$+CR_INV_NUM$
30340 AR6$(1,10)=CUST_DIV$+CUST_CODE$; AR6$(11,8)=CR_INV_NUM$
30350 AR6$(19,1)="P"; AR6$(20,6)=INV_DATE$
30360 IF NOT(NUL(CUST_PO_NO$)) THEN AR6$(36,15)=CUST_PO_NO$ ELSE AR6$(36,15)="Prepayment" END_IF ; AR6$(51,2)=CUST$(359,2) ! 307442-DBD-369
30370 ! AR6$(54,6)=INV_DDATE$; AR6$(66,8)=CR_INV_NUM$
30380 AR6$(74,4)=CUST$(278,4); AR6$(102,6)="CASHRC"
30390 AR6$(108,9)=CUST$(220,9); AR6$(117,10)=CUST$(235,10)
30400 AR6$(127,4)=CR_FY$; AR6$(131,2)=CR_ACCTPD$
30410 AR6$(133,4)=CR_FY$; AR6$(137,2)=CR_ACCTPD$
30415 ! AR6[5]=CASH_POSTED
30417 DIM KEY_11$(25); KEY_11$(1,10)=CUSTOMER$; KEY_11$(11,1)="A"; KEY_11$(12,6)=INV_DATE$; KEY_11$(18,8)=CR_INV_NUM$
30420 FIND (Z[11],KEY=KEY_11$,DOM=*NEXT); GOTO 30430
30425 WRITE (Z[11],KEY=KEY_11$)
30430 FIND (Z[5],KEY=KEY_5$,DOM=30450)
30440 GOSUB PREPAY_MSG_NF; GOSUB CLEAR_INV_FIELDS; GOSUB CLEAR_INV2_FIELDS; NEXT_ID=CR_INV_NUM.CTL; RETURN ! SSP230319 jdf
30450 WRITE (Z[5],KEY=KEY_5$)IOL=0190
30460 PREPAY_FLG=1
30470 MSGBOX MSG("ARGCAA_23"),MSG("FYI"),"INFO"
30480 IF B_CP<>0 THEN CUST_DIST_AMT+=B_CP; REM GOSUB UPDATE_CUST_DIST_AMT ! SSP237673 jdf
30482 CUST_DIST_AMT=CUST_DIST_AMT-CASH_POSTED ! SSP237673 jdf
30484 REFRESH_FLG=1 ! SSP237673 jdf
30490 GOSUB ADD_AT7_REC
30500 GOSUB CLEAR_INV_FIELDS
30505 IF CUST_DIST_AMT=0 THEN NEXT_ID=CUSTOMER.CTL; CALL "*WINGRP;ENABLE",CUST_3.GRP$; GOSUB CLEAR_CUST_FIELDS; DEL_FLG=1; CMD_STR$="END"; RETURN 
30510 NEXT_ID=CR_INV_NUM.CTL
30590 RETURN 
30700 ! Invoice with Order number already exsist
30710 PREPAY_MSG_NF:
30720 MSGBOX MSG("ARGCAA_24"),MSG("ERROR"),"STOP"
30730 RETURN 
31000 ! Clear Invoice Fields
31010 CLEAR_INV2_FIELDS:
31020 TOTAL_APPLIED=0; GL_ADJ=0
31030 DISC_ALLOWED=0; FRT_ALLOWED=0
31040 STAX_ALLOWED=0; CASH_POSTED=0
31050 NEW_BAL=0
31080 REFRESH_FLG=1
31090 RETURN 
31200 ! Disable Fields
31210 DISABLE_FIELDS:
31220 CALL "*wingrp;Disable",INV2.GRP$
31230 RETURN 
39000 LOAD_FY:
39010 ! ONLY_OPEN$="Y" means only load open FY's, MODULE$ can be set to second part of key for that system parameter record, ie A/P, A/R, I/C
39015 IF %NOT_NEW_CR<>0 THEN OLD_FY$=CR_FY$; OLD_ACCT$=CR_ACCTPD$
39020 CR_FY$=""; ONLY_OPEN$="Y"
39040 CUR_FY$="",CUR_ACCTPD$=""; READ (Z[6],KEY=%C$+"A/R",DOM=*NEXT)SYS_PARMS$; CUR_FY$=SYS_PARMS$(7,4),CUR_ACCTPD$=SYS_PARMS$(11,2)
39045 IF %NOT_NEW_CR<>0 THEN CUR_FY$=OLD_FY$; CUR_ACCTPD$=OLD_ACCT$
39050 DIM GL$(300); READ (Z[6],KEY=%C$+"G/L")GL$(1)
39060 DIM OSEC$(255); READ (Z[6],KEY="osec"+%X3_OP_ID$,DOM=*NEXT)OSEC$
39070 READ (Z[6],KEY=%C$+"G/LYE",DOM=*NEXT)
39080 K$=KEY(Z[6],END=LOAD_FY_DROP_BOX); READ (Z[6],KEY=K$)GLYE$
39090 IF LEN(K$)<8 OR K$(1,8)<>%C$+"G/LYE" THEN GOTO LOAD_FY_DROP_BOX
39100 IF ONLY_OPEN$="Y" AND POS(GLYE$(99,1)="CR")>0 THEN GOTO 39080
39110 IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND K$(9,4)<GL$(34,4) THEN GOTO 39080
39120 CR_FY$=CR_FY$+K$(9,4)+"/"
39130 GOTO 39080
39140 LOAD_FY_DROP_BOX:
39150 DROP_BOX LOAD CR_FY.CTL,CR_FY$
39160 IF CUR_FY$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_FY$<GL$(34,4) THEN CUR_FY$=GL$(34,4) ! fix for 173826
39170 IF CUR_ACCTPD$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_FY$+CUR_ACCTPD$<GL$(34,6) THEN CUR_ACCTPD$=GL$(38,2) ! fix for 173826
39180 IF CUR_FY$<>"" THEN DROP_BOX WRITE FY.CTL,CUR_FY$
39185 CR_FY$=CUR_FY$
39190 IF CUR_FY$<>"" THEN FROM_FY$="Y",CR_FY$=CUR_FY$; GOSUB LOAD_ACCTPD
39210 LOAD_FY_END:RETURN 
39220 ! 
39230 LOAD_ACCTPD:
39240 ! FY$ should be set to a valid fiscal year
39250 CR_ACCTPD$=""; FROM_FY$="Y"
39260 IF FROM_FY$="Y" THEN GOTO 39280
39280 READ (Z[6],KEY=%C$+"G/LYE"+CR_FY$,DOM=LOAD_ACCTPD_END)GLYE$
39290 PDS=12; PDS=NUM(GLYE$(13,2),ERR=*NEXT) ! Number of periods in this FY
39300 FOR X=1 TO PDS
39310 X$=STR(X:"00"),FLAG$="NO"; CALL "ARGDTE",%X3$,%X4$,CR_FY$+X$,FLAG$; IF FLAG$<>"*" THEN CR_ACCTPD$=CR_ACCTPD$+X$+"/" ! Checks osec, only load valid periods
39320 NEXT X
39330 DROP_BOX LOAD CR_ACCTPD.CTL,CR_ACCTPD$
39340 IF FROM_FY$="Y" AND CUR_ACCTPD$<>"" THEN DROP_BOX WRITE CR_ACCTPD.CTL,CUR_ACCTPD$
39350 CR_ACCTPD$=CUR_ACCTPD$
39355 GOSUB LOAD_ENDING_DATE
39360 LOAD_ACCTPD_END:RETURN 
39370 ! 
39900 ! Summary Bill Query
39910 SUMM_BILL_QRY:
39920 ENTER XX$
39930 IF NUL(XX$) THEN EXIT 123
39940 EXIT 
40000 CREATE_RECORD:
40010 GOSUB LOAD_REC_AT6
40020 GOTO 2370
40049 ! 
40100 CHECK_INV_TRANS_NOTE:
40120 NOTE_PRESENT$=""
40130 FIND (Z[16],KEY=NOTE_KEY$,DOM=*NEXT)*; NOTE_PRESENT$="{!Checkmark}"
40165 BTN_NOTE.CTL'TEXT$=NOTE_PRESENT$+" Inv Trans Note"
40170 REFRESH_FLG=1
40190 RETURN 
40199 ! 
40200 INV_TRANS_NOTE:
40205 NOTE_KEY$=MID(AT7$,35,5); IF NUL(NOTE_KEY$) THEN NOTE_KEY$="A"+DIM(4)
40210 CALL "ARGAT8;EDIT_NOTE",NOTE_KEY$
40220 GOSUB CHECK_INV_TRANS_NOTE
40240 IF NUL(NOTE_PRESENT$) THEN NOTE_KEY$=""
40245 RETURN 
40249 ! 
56000 ! "197938-Cash Receipts entry and getting an error.                   
56001 ! "200237-System moving slowly since the release this morning.        
56004 REM "197176-She wants to write off invoices to bad debt.  System will   
56005 REM "212473-Cash receipts has distribution amount remaining. 
56006 REM "217665-The deposit amount in cash receipts entry does not match    
56008 REM "225162-GUI CR will allow you to return at the Check Number.  Causes
56010 REM "224871-Cash receipts 'to be distributed amount' is off when        
56012 REM "224871-Cash receipts 'to be distributed amount' is off when        
56014 REM "231876-When you post a Use OnAcct, this is setting the Highest     
56016 REM "232358-Ability to enter an order number range in cash receipts.    
56017 REM "234033-Should allow Auto Distribute with a zero check amount, like CHUI
56018 REM "236359-Distribution out of balance when trying to apply a partial  
56019 REM "237640-Cannot not distribute an amount to the GL when you are      
56020 REM "237744-Getting an error in Cash Receipts when auto distributing    
56021 REM "237786-GL entry in Cash Receipts seems to be broken                
56022 REM "238654-Found 2 situations that will cause issues with journal      
56023 REM "283489-Cash Receipts - discounts Past Due is treated differently   
56024 REM "283539-ARGCAA.6  Shouuld not be able to access the period year/date
56025 REM "276882-Idea Bank:  In making prepayments in Cash Receipts and Use  
56026 REM "307435-DBD-337: Capture/store notes with Cash Receipts             
56027 REM "307442-DBD-369: Enable access to Customer PO for prepayments
