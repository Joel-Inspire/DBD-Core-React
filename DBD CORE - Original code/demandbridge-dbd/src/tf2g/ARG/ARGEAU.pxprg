0010 REM "Testing Order/Invoicing Interface <ARGEAU>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 01/04/17 - 18.574166 - crg - SSP# 289218
0037 REM "289218-ERR 11, AR2DUE-2906 - FS3 record missing FY and Acct Pd     
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0080 INIT:
0090 SETERR 0100; ENTER X3$,X4$,Q0$,Q1$,SHIP_INFO$,ALT_FILE$; X0$="ARGEAU",L0$="Y"
0091 IF Q1$(1,1)="#" THEN FY_AP$=Q1$(2,6),Q1$=Q1$(8)
0092 IF Q1$(1,1)="!" THEN F8$=Q1$(2,1),Q1$=Q1$(3)
0093 IF LEN(Q1$)>22 THEN I5$=Q1$(23),Q1$=Q1$(1,22)
0094 IF MID(Q0$,1,3)="GUI" THEN IN_GUI=1; IF MID(Q0$,4,1)="B" THEN GUI_TYPE$="B" ELSE GUI_TYPE$="U"
0100 SETERR 9000
0105 SHIP_INFO$=""
0110 X0$="ARGEAU",X1$="Order / Invoicing Interface",K9$="",K9=0
0120 DIM Z0$(80,"-"),C0$(12)
0130 K0=6,K1=1
0135 C9=-1
0140 M0$="##,###,###.00-",M1$="##,##0",M2$="###,###.00-"
0145 IF Q1$="" THEN GOSUB 8950
0170 FID_0$=FID(0); IF %IN_WEBEC$="Y" THEN FID_0$(1,1)="G"
0175 DEF FNS$(Z9$)=Z9$(1,POS("   "=Z9$+"   ")-1)
0180 DEF FNN(Z9)=Z9/M
0185 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
0200 REM "
0210 IF L0$="Y" THEN GOTO 0245
0230 IF Q1$<>"" THEN X2=-1 ! IF F9$="*" THEN PRINT @(0,7),'CE', ELSE PRINT @(0,3),'CE',
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,-1 ! IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)),Z1$(LEN(M0$),X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE'),Z1$=MNM('GS')+Z1$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A2$
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21],B[22],B[23],B[24],B[25],B[26],B[27],B[28],B[29]
0321 IOLIST B$,B[0],STR(B[1]),B[2],B[3],STR(B[4]),B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],STR(B[15]),B[16],B[17],STR(B[18]),B[19],B[20],B[21],STR(B[22]),B[23],B[24],B[25],B[26],B[27],B[28],B[29]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9]
0331 IOLIST C$,C[0],STR(C[1]),C[2],C[3],C[4],C[5],STR(C[6]),C[7],C[8],C[9]
0332 IOLIST FS3$,FS3[0],FS3[1],FS3[2],FS3[3],FS3[4],FS3[5],FS3[6],FS3[7],FS3[8],FS3[9]
0340 IOLIST D$
0380 IOLIST H$,H[0],H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8]
0410 IOLIST SM0$,SM0[0],SM0[1],SM0[2],SM0[3],SM0[4],SM0[5],SM0[6],SM0[7],SM0[8],SM0[9],SM0[10],SM0[11],SM0[12]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O FS1...  02O FS2...  04O FMP...  13O ZZPARM  07O FS3...  08O ICF...  09O IC0...  20O AR2...  21O EDV...  22S FS2...  23O AR1...  "
0511 IF %ACTION$="C" THEN Z$="01O FS1...  02O FS2...  04O FMP...  13O ZZPARM  07O GS3...  08O ICF...  09O IC0...  20O AR2...  21O EDV...  22O FS2...  "
0515 IF L0$="Y" THEN IF ALT_FILE$="" THEN Z$=Z$+"10O SM0... " ELSE Z$=Z$+"10O "+ALT_FILE$+"... "
0517 Z$=Z$+"28O SMW...  " ! [204977]
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 SMW_LFN=Z[28] ! [204977]
0550 DIM M6[1]; CALL "IC2PRE",X3$,Z[13],M6$,M6{ALL},"",0,"",0
0560 FIND (Z[13],KEY=X3$(9,3)+"I/C")P0$
0570 FIND (Z[13],KEY=X3$(9,3)+"F/M")P3$
0580 DIM SH_PARM$(300); FIND (Z[13],KEY=X3$(9,3)+"S/H",DOM=0581)SH_PARM$; IF SH_PARM$(204,1)="Y" THEN GUI_TYPE$="U"; REM "SSP#199177
0585 DIM EC_PARM$(1275); FIND (Z[13],KEY=X3$(9,3)+"E/C",DOM=*NEXT)EC_PARM$(1)
0587 DIM SMP_PARM$(50); FIND (Z[13],KEY=X3$(9,3)+"SMP",DOM=*NEXT)SMP_PARM$
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
0620 GOSUB 6000
0650 IF FS3_DFLT THEN RETURN ! RETURN TO FS3_DEFAULT ROUTINE (15000)
0795 IF IN_GUI THEN Q2$=GUI_TYPE$; DIM SM0$(100),SM0[10]; GOSUB 4000; GOTO 9900 ! If from GUI, then bill unbilled, turn off SH_PARM$ (since its use and L0$="Y" are intermingled) and dim SM0 stuff so we don't get errors ! SSP240501 jdf
0800 IF Q1$<>"" THEN IF L0$="Y" THEN GOSUB 4100; GOSUB 8700; GOTO 9900 ELSE Q2$="U"; GOSUB 4000
1000 REM "
1010 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,-1,X1,-1
1030 DIM B$(356),B[29],C$(50),C[9],L2$(0)
1035 DIM A$(30)
1045 ! A$(1,0+K9)=K9$+A1$
1050 IF Q1$<>"" THEN A$(1,8)=Q1$(1,8); A$(21,6)=Q1$(9,6); A$(9,8)=Q1$(15,8); RETURN 
1060 ! PRINT (0,ERR=1070)'CF',; GOSUB 6450; RETURN 
1070 GOSUB 6000; GOSUB 6450
1090 RETURN 
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9700
1140 ON X0 GOTO 1200,1250,1300,1500
1200 REM "Invoice number
1202 IF Q1$<>"" THEN A$(1,8)=Q1$; GOSUB 6460; GOTO 1220
1210 CALL "ZZENTR","AXUX",A{ALL},A$,X4$,X3$,17,3,1,8,C0,"AR6","{1"+X$,"","AR2EAU00","AR6","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1210,1211
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,1210,9700,6970
1240 GOTO 1120
1250 REM "Invoice date
1255 IF LEN(Q1$)>8 THEN A$(21,6)=Q1$(9,6); CALL "ZZDISP","D",A$(21,6),"",X3$,"","",44,3,X4$; GOTO 1266
1260 CALL "ZZENTR","DX",A{ALL},A$,X4$,X3$,44,3,21,6,C0,"","{2"+X$,"","AR2EAU02","","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1260,1261
1262 IF ABS(C0)=2 AND LEN(A1$)>0 THEN A9$(1)="",A1$=A1$(1,0); PRINT 'CF',
1265 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1266,6800,9800
1290 GOTO 1120
1300 REM "Order number
1305 IF LEN(Q1$)>15 THEN A$(9,8)=Q1$(15,8); CALL "ZZDISP","A",A$(9,8),"O/P",X3$,"","",17,4,X4$; GOTO 1312
1310 CALL "ZZENTR","AUX",A{ALL},A$,X4$,X3$,17,4,9,8,C0,"O/P","{2"+X$,"","AR2EAU04","FS1","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1310,1311
1312 IF ABS(C0)=2 AND LEN(A1$)>10 THEN A1$=A1$(1,10)
1315 IF C0<0 THEN IF -C0=1 THEN GOTO 1310 ELSE C0=ABS(C0)
1320 READ (Z[1],KEY=A$(9,8),DOM=1310)IOL=0310
1340 GOTO 1120
1500 REM "Read FS2 records - use FS3 values where they exist, display page
1502 READ_ORD_REC:
1505 ! IF %IN_WEBEC$="N" THEN PRINT @(0,7),'CE',
1507 GOSUB CLEAR_ORDER_LINES
1510 Y=7,L$="",L=0,E0=0; DIM L[20],P[20],N[20],E[20],O[20],B$(204),B[29]
1520 A1$=A$(9,8)
1530 READ (Z[2],KEY=A1$,DOM=1531)
1550 READ (Z[2],END=1900)IOL=0320
1560 IF B$(147,8)<>A1$ THEN GOTO 1900
1562 GOSUB 7550
1565 A$(17,3)=B$(6,3)
1570 GOSUB 7700; GOSUB 7800; GOSUB 8250
1600 REM "Does FS3 record exist?
1620 READ (Z[7],KEY=A$(1,19)+" ",DOM=1621)IOL=0330; F0$="Y"; GOTO 1700
1640 F0$="N"; GOSUB 5000
1700 REM "Display
1710 IF Y>19 THEN E0=1; IF F3$="*" THEN GOTO 1904 ELSE GOTO 2000
1715 L1$=A$(1,19)+"     "
1720 L$=L$+STR(Y:"00")+F0$+B$(18,1)+F2$+L1$,L=L+1,L[L]=C[0],P[L]=C[1],N[L]=M,E[L]=C[2],O[L]=C[3]
1727 L1=L; GOSUB 7950
1730 GOSUB 7500
1740 IF B$(18,1)="Y" AND F0$="Y" THEN P2$=L1$(1,20)+A$(21,6),P2=POS(P2$=L2$,26); IF P2=0 THEN L2$=P2$+L2$
1790 GOTO 1550
1800 REM "Input values for a page
1820 RETURN ! GOTO 2000
1900 REM "End
1902 IF F3$="*" THEN L1=F3; RETURN ! GOTO 2060
1905 L1=0
1907 IF F8$="Y" THEN Z=0; GOTO 1915
1910 ! CALL "ZZPROM","X0AR2EAU",X3$,Z,"'X' under the line number means line set to not print on invoice","","",V0
1914 ! IF Z=-1 THEN GOTO 8200
1915 ! ON Z GOTO 1950,8000,8100,2000
1920 RETURN 
1950 REM "If not eof then continue with record
1951 END_ORDER:
1955 IF E0=1 THEN E0=0,L=0,L$="",Y=7; DIM L[20]; GOTO 1561
1960 REM "If end check balance, and leave
1990 GOTO 9700
1995 RETURN 
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1,L1=0
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN X0=999
2040 ON X0 GOTO 2050,2150,2100,2200,2250,2300,3000
2050 REM "Check line and setup for entry
2055 L1=L1+1; IF L1>L THEN GOTO 1900
2060 L1$=L$((L1-1)*29+1,29),L4=NUM(L1$(1,2)),F0$=L1$(3,1),F1$=L1$(4,1),F2$=L1$(5,1),L1$=L1$(6),L5=L4+1,L9=L[L1],L8=E[L1]
2070 READ (Z[2],KEY=L1$(9,11),DOM=2071)IOL=0320
2075 GOSUB 7700
2080 IF F3$="*" THEN F3$=""
2090 GOTO 2020
2100 REM "Bill Now Quantity
2101 BILL_QTY_ENTRY:
2102 IF F0$<>"Y" OR F2$="Y" THEN RETURN ! GOTO 2020
2104 IF B$(2,1)<>"Y" THEN GOTO 2108 ELSE IF B[0]<0 THEN RETURN ! GOTO 2020
2105 MSGBOX MSG("ADJ_LOT_I"),MSG("VERIFY"),"?,YESNO",ANS$ ! CALL "ZZPROM",".Y",X3$,Z,"Do you want to adjust the lot information?","","",0
2106 IF ANS$="NO" THEN GOTO 2140 ! ON Z GOTO 2107,2140
2107 GOSUB 8300; GOTO 2140
2109 DIM Q[1]; Q[0]=L[L1],Q[1]=L[L1]/N[L1]
2110 Q[1]=QTY_OPEN ! CALL "ZZENTR","NX.",Q{ALL},A$,X4$,X3$,26,L5,1,822,C0,M0$,"{3"+X$,"","AR2EAU08","","",""
2115 IF C0>0 THEN L[L1]=Q[1]*N[L1]
2120 GOSUB 7950; GOSUB 7995
2130 IF Q[0]<>L[L1] THEN O[L1]=O[L1]+(Q[0]-L[L1]); IF O[L1]<0 THEN O[L1]=0
2135 PRICE_EXT=FNN(O[L1]) ! PRINT @(65,L5),FNN(O[L1]):M0$,
2137 IF C0>0 AND B$(2,1)="Y" THEN GOSUB 8300
2140 RETURN ! GOTO 2020
2150 REM "Bill now flag
2155 BILL_NOW_ENTRY:
2160 F0$(1,1)=BILL_NOW$ ! CALL "ZZENTR","Y",A{ALL},F0$,X4$,X3$,1,L4,1,1,C0,"","{3"+X$,"","AR2EAU10","","",""
2170 IF B$(155,1)="M" THEN X0=999
2180 IF F0$="Y" AND B$(9,1)<>" " THEN GOSUB 4540
2190 RETURN ! GOTO 2020
2200 REM "Price
2202 PRICE_ENTRY:
2204 IF B$(10,1)="9" OR F0$<>"Y" OR F2$="Y" OR M$(21,1)="Y" THEN GOTO 2020
2210 PRECISION M6[1]; P[L1]=SELL_PRICE ! CALL "ZZENTR","N&",P{ALL},A$,X4$,X3$,41,L5,L1,M6[0],C0,M6$,"{3"+X$,"","AR2EAU12","","",""
2220 GOSUB 7950; GOSUB 7995
2240 RETURN ! GOTO 2020
2250 REM "Bill Now Extension
2254 IF F0$<>"Y" THEN GOTO 2020
2255 IF F2$<>"Y" AND M$(21,1)<>"Y" THEN GOTO 2020
2257 IF M$(21,1)="Y" THEN X$="Default for LOT Selling price was prorated, if applicable"; PRINT 'RB',
2260 CALL "ZZENTR","N",E{ALL},A$,X4$,X3$,53,L5,L1,621,C0,M2$,"{3"+X$,"","AR2EAU14","","",""
2290 GOTO 2020
2300 REM "Backordered
2301 BACK_ORD_ENTRY:
2302 IF F2$="Y" THEN O[L1]=0; GOTO 2020 ELSE IF F0$<>"Y" THEN GOTO 2020
2307 DIM Q[1]; Q[1]=O[L1]/N[L1]
2310 Q[1]=BACK_ORD ! CALL "ZZENTR","NX.&",Q{ALL},A$,X4$,X3$,65,L5,1,822,C0,M0$,"{3"+X$,"","AR2EAU16","","",""
2315 IF C0>0 THEN O[L1]=Q[1]*N[L1]
2340 RETURN ! GOTO 2020
3000 REM "Finish up this line
3001 FINISH_ENTRY:
3005 L$((L1-1)*29+3,1)=F0$
3010 GOSUB 7850
3040 X0=0; RETURN ! GOTO 2040
4000 REM "Setup FS3 records from FS2 file
4001 REM "Q2$='B'=bill all left, Q2$='U'=bill unbilled only
4002 FIND (Z[1],KEY=Q1$(15,8))IOL=0310
4005 IF A2$(48,1)="Y" AND L0$<>"Y" THEN PRINT @(8,5),"Previously billed",
4010 DIM B[29]; Q3$=""
4015 READ (Z[2],KEY=Q1$(15,8),DOM=4016)
4020 K$=KEY(Z[2],END=4090); READ (Z[2],KEY=K$)IOL=0320
4030 IF B$(147,8)<>Q1$(15,8) THEN GOTO 4090
4033 REM IF L0$="Y" THEN IF POS(B$(155,1)="MS")=0 THEN GOTO 04020; REM " Process only messages and special charges
4034 IF MID(SMP_PARM$,12,1)="Y" THEN CALL "UPDEDV;CHK_COMPANION",ERR=*NEXT,Z[21],Z[22],B$,OKEDV; IF NOT(OKEDV) THEN GOTO 4020 ! SSP192797
4035 GOSUB 7550
4040 IF L0$="Y" THEN FIND (Z[7],KEY=Q1$(1,8)+K$+" ",DOM=4041); GOTO 4080
4050 IF B$(155,1)="M" AND B$(3,1)="Y" THEN F0$="Y" ELSE GOSUB 4500
4055 IF F0$<>"Y" THEN GOTO 4080
4060 GOSUB 5000
4065 IF B$(2,1)="Y" THEN GOSUB 8400
4069 REM "Use previoulsy entered FS3 values
4070 C$(31,6)=FY_AP$; WRITE (Z[7],KEY=C$(1,20))IOL=0331
4072 IF ALT_FILE$<>"" AND B$(18,1)="Y" THEN CALL "SM2ODD",X3$,X4$,"",C$(1,20) ! SSP#269404 If special ship look for ship info 4040 makes sure new rec, SSP#271627 - also make sure only in CIG+ mode
4080 GOTO 4020
4090 RETURN 
4100 REM "Setup FS3 records from SM0 info
4105 FIND (Z[1],KEY=Q1$(15,8))IOL=0310
4106 FIRST_TIME=1; DIM FS3$(50),FS3[9]
4107 READ (Z[10],KEY=Q1$(15,8),DOM=4108)
4110 DIM SM0$(345),SM0[12]; READ (Z[10],END=4190)IOL=0410; IF SM0$(1,8)<>Q1$(15,8) THEN GOTO 4190
4111 IF FIRST_TIME THEN GOSUB 4300; IF SH_PARM$(202,1)="Y" THEN GOTO 4190
4112 IF STP(SM0$(10,3),3," ")="" THEN GOTO 4110
4113 DIM B$(356),B[29]; Q3$=""
4115 K$=Q1$(15,8)+SM0$(10,3); READ (Z[2],KEY=K$,DOM=4116)IOL=0320
4135 GOSUB 7550
4140 REM ' DON'T THINK WE WANT THIS  FIND (Z[7],KEY=Q1$(1,8)+K$+" ",DOM=04141) ; GOTO 04180
4150 IF B$(155,1)="M" THEN F0$="Y" ELSE GOSUB 4500
4155 IF F0$<>"Y" THEN GOTO 4180
4160 GOSUB 5000
4161 IF B$(2,1)="Y" THEN GOSUB 8400
4163 C$(20,1)=SM0$(13,1)
4164 IF ALT_FILE$>"" THEN C[3]=SM0[11],C[4]=SM0[4]; Z=C[4]; CALL "FM2EXT",Z[13],1,B$(124,4),B[5],C[0],Q9,Z,M6[1]; C[6]=Q9 REM " Need to use amounts from SM7 record, not what was calculated in this program. SSP266583, since we are resetting C[4] we need to also reset C[6], using similar call to FM2EXT as line 5755
4165 DIM FS3[9]; FIND (Z[7],KEY=C$(1,20),DOM=4166)IOL=0332; C[0]=C[0]+FS3[0],C[2]=C[2]+FS3[2],C[3]=C[3]+FS3[3],C[4]=C[4]+FS3[4],C[5]=C[5]+FS3[5]
4170 C$(31,6)=FY_AP$; WRITE (Z[7],KEY=C$(1,20))IOL=0331
4172 IF SM0$(13,1)=" " THEN GOTO 4180
4173 REM " If we have a special shipping record then we need to accumulate to or create an FS3 header record for this line
4175 DIM FS3$(50),FS3[9]; FIND (Z[7],KEY=C$(1,19)+" ",DOM=4176)IOL=0332
4177 FS3$=C$,FS3$(20,1)=" ",FS3$(27,4)=DIM(4)
4178 FOR X=0 TO 9; FS3[X]=FS3[X]+C[X]; IF X=1 OR X=6 THEN FS3[X]=C[X] END_IF ; NEXT X
4179 WRITE (Z[7],KEY=FS3$(1,20))IOL=0332
4180 GOTO 4110
4190 DIM SM0$(345),SM0[12]; REM "Clear so SM0[0] doesn't get added into summary FS3 record in 5330
4191 IF SH_PARM$(202,1)="Y" OR ALT_FILE$>"" OR POS(%ACTION$="CI")>0 THEN Q2$="U"; GOSUB 4000; REM "If CIG Plus then set up anything else on the order that may be ready to bill
4195 RETURN 
4200 REM "Determine extension based on U/M
4202 IF A2$(43,1)="Y" THEN C1$="*"
4205 DIM M$(21)
4210 READ (Z[13],KEY="U/M"+B$(124,4),DOM=4211)M$
4215 IF M$(21,1)="Y" THEN GOTO 4240
4220 IF POS(B$(155,1)="IC")>0 AND C1$="*" THEN C[0]=C[0]*1.1,C1$=""
4230 IF B[5]=0 THEN C[2]=0 ELSE C[2]=C[0]*C[1]/B[5]
4240 RETURN 
4300 REM "If first_time set SHIP_INFO$ info
4305 FIRST_TIME=0
4310 SHIP_INFO$=SM0$(15,6)+SM0$(31,1)
4345 RETURN 
4500 REM "Should line be invoiced?
4510 F0$="Y"
4512 IF L0$="Y" AND %K9$="SM2RAA" AND ALT_FILE$="" AND B$(9,1)<>DIM(1) AND MID(SH_PARM$,225,1)="Y" THEN F0$="N"; GOTO 4590 ! WO214375, SSP217160, added check for %K9$, L0$ is Y for regular GUI invoicing as well as the gateways, added clear of %K9$ in ZZ2CLR as well SSP 219803 ADDED MID
4515 IF L0$="Y" AND B$(155,1)="M" THEN GOTO 4590; REM "If CIG or CIG Plus then always set messages up to bill
4516 IF POS(%ACTION$="CI")>0 AND B$(9,1)<>" " THEN IF EC_PARM$(1093,1)<>"Y" THEN GOTO 4590 ELSE F0$="N"; GOTO 4590 ! SSP171698, if CC invoice and line has PO code then if parm not set to skip then ok to invoice else set to not invoice
4517 GOSUB VALIDATE_WAREHOUSE_INFO ! [204977]
4518 IF L0$="Y" AND STP(%CIG_VAL_WHS$)<>"" AND B$(9,1)=DIM(1) AND B$(155,1)<>"S" THEN IF VALID_WHSE$<>"Y" THEN F0$="N"; GOTO 4590 ! SSP204885, if CIG is set to only invoice lines that are pulled from a particular warehouse (match to last 3), and this line is not for that whse, then we don't want to invoice it. SSP207375, need to bypass the check for S type lines
4519 IF IN_GUI AND B$(9,1)=" " THEN GOTO 4590 ELSE GOTO 4520
4520 IF NOT(IN_GUI) THEN IF (L0$="Y" AND ALT_FILE$="" AND MID(SH_PARM$,204,1)<>"Y") OR B$(9,1)=" " THEN GOTO 4590; REM "If CIG, not CIG Plus then always bill but if CIG Plus go on to see if it's no PO Code, then if there is a PO code the rest of the tests should work properly (Q2$="U") ;REM"SSP#199177 SSP247646
4525 IF MID(Q0$,4,1)="B" THEN Q2$="B" ELSE Q2$="U" ! SSP237252 jdf
4530 IF Q2$="U" AND B[7]=0 AND B[19]=0 THEN F0$="N"; GOTO 4590 ! ssp 198220
4540 IF B[7]=0 AND B[19]=0 AND L0$<>"Y" THEN CALL "ZZPROM",".4",X3$,Z,"WARNING - Line "+B$(6,3)+" is a DIRect ship that has not been received.","","",0
4590 RETURN 
5000 REM "Default FS3 Records
5010 DIM C$(50),C[9]
5020 C$(1)=Q1$(1,8)+K$+" ",C$(21,6)=Q1$(9,6),C$(31,6)=FY_AP$
5030 IF B$(155,1)="M" THEN GOTO 5090
5040 GOSUB 5200
5050 GOSUB 5700
5085 IF B$(9,1)<>DIM(1) AND C[0]>B[0] THEN DIM AR1$(599); READ (Z[23],KEY=A2$(6,10),DOM=*NEXT)AR1$(1); IF AR1$(526,1)="Y" THEN GOSUB HANDLE_DONT_INV_OVERRUNS ! WO263619
5090 RETURN 
5200 REM "Default FS3 values
5220 GOSUB 8250; REM "Set F2$="Y" if extension only
5230 GOSUB 7700; REM "Create M$
5234 IF FS3_COST THEN RETURN 
5240 IF F2$="Y" THEN GOTO 5500
5300 REM "Unit Price type
5310 IF B$(9,1)<>" " THEN GOTO 5350
5320 REM "Shipped from our warehouse
5325 REM "If a previouly shipped order and shipped this time zero, assume all shipped
5330 IF L0$="Y" AND SH_PARM$(202,1)<>"Y" AND STP(SM0$,3)<>"" THEN C[0]=SM0[0] ELSE C[0]=B[7] END_IF ; C[1]=B[4],C[3]=B[8]; IF SH_PARM$(202,1)<>"Y" THEN IF A2$(48,1)="Y" OR (C[0]=0 AND C[3]=0) THEN C[0]=B[0],C[3]=0
5332 IF C[0]=0 AND B[7]=0 AND B[8]=0 THEN C[0]=B[0]; REM "SSP# 129130
5335 IF A2$(43,1)="Y" AND POS(B$(155,1)="INC")>0 THEN C[0]=C[0]*1.1
5340 GOTO 5400
5350 REM "Direct shipment of Unit Price Type
5355 REM "If not yet received,no need to check fixed price flag
5359 IF IN_GUI THEN IF B[7]<>0 THEN C[0]=B[7],C[1]=B[18],C[3]=B[8] ELSE C[0]=B[0]
5360 IF NOT(IN_GUI) THEN IF L0$="Y" AND SH_PARM$(202,1)<>"Y" THEN C[0]=SM0[0],C[1]=B[4],C[3]=B[8] ELSE IF B[7]<>0 THEN C[0]=B[7],C[1]=B[18],C[3]=B[8] ELSE C[0]=B[0]
5365 IF L0$="Y" AND ALT_FILE$>"" AND SM0$(13,1)=" " AND C[0]<B[7] THEN C[0]=B[7]; REM "SSP144414, CIG Plus, if now billing previously received or balance of partial need to use unbilled qty from FS2, unless this is a split shipping record in which case we don't know how much of B[7] is for this shipping point.                                        
5370 IF C[1]=0 THEN C[1]=B[4]
5400 REM "Common to Direct/Whse ship Unit price types
5420 IF C[3]<=0 THEN B$(3,1)="Y",C[3]=0 ELSE B$(3,1)="N"
5430 IF M$(21,1)="Y" THEN GOTO 5460
5440 CALL "FM2EXT",Z[13],0,B$(124,4),B[5],C[0],C[1],Z,M6[1]; C[2]=Z
5450 GOTO 5490
5460 REM "Lot type
5470 C[2]=C[1],C[1]=0; IF C[2]=0 THEN C[2]=B[6]
5475 IF C[0]=B[0] THEN GOTO 5490
5480 CALL "FM2EXT",Z[13],1,"M   ",1000,B[0],Z,B[6],M6[1]; Z=Z*C[0]/1000
5485 IF Z<>0 THEN C[2]=Z
5490 RETURN 
5500 REM "Extension Only type
5510 IF B$(9,1)<>" " THEN GOTO 5550
5520 C[2]=B[6]
5540 GOTO 5600
5550 REM "Direct shipment of Extension only type
5560 IF B[19]=0 THEN GOTO 5520
5580 C[2]=B[6]; IF B$(4,1)="N" AND B[3]<>0 AND B[19]>B[3] THEN C[2]=B[6]*B[19]/B[3]
5600 REM "Common to Direct/Whse ship Extension only types
5610 B$(3,1)="Y"
5640 RETURN 
5700 REM "Figure Cost Extension w/o knowing type
5705 C$(37,3)=F2$+M$(21,1)+N$(21,1)
5710 IF F2$="Y" THEN GOTO 5770
5725 IF N$(21,1)="Y" THEN GOTO 5800
5726 READ (Z[20],KEY=A2$(87,2),DOM=*NEXT)TERMS$
5730 C[6]=B[1]
5732 IF L0$="Y" AND SM0$(13,1)<>"" AND NOT(IN_GUI) THEN GOTO 5750; REM "Was going to REM this out but it caused other issues so I'll leave it in for now, SSP132195
5734 REM "Use up all unbilled cost when backorder is zero (and bill now not equal to unbilled quantity)
5735 IF B$(9,1)<>" " AND C[3]=0 THEN Z=B[19]; GOTO 5755 ! SSP 264912
5736 ! F B$(9,1)<>" " AND B[7]<>C[0] AND C[3]=0 THEN Z=B[19]; GOTO 5755
5740 IF B$(9,1)<>" " AND B[7]<>0 THEN C[6]=B[15]; IF C[6]=0 AND B[19]<>0 THEN C[6]=B[19]*B[2]/B[7]; REM "i.e. LOT U/M changed to M
5750 IF B[2]<>0 THEN CALL "FM2EXT",Z[13],0,B$(120,4),B[2],C[0],C[6],Z,M6[1]; C[4]=Z ELSE C[4]=0,C[6]=0; GOTO 5790
5755 CALL "FM2EXT",Z[13],1,B$(124,4),B[5],C[0],Q9,Z,M6[1]; C[6]=Q9,C[4]=Z
5760 GOTO 5790
5770 REM "Extension only type line
5780 C[4]=B[3]; IF B$(9,1)<>" " AND B[19]<>0 THEN C[4]=B[19]
5790 IF MID(TERMS$,57,1)="Y" AND %IN_WEBEC$="Y" AND B$(9,1)<>" " AND C[6]=0 THEN C[6]=B[1]; REM " IF CREDIT CARD FROM WEBEC WITH A PO DON'T ZERO OUT COST - SSP# 145930
5795 RETURN 
5800 REM "Lot Unit Cost
5810 IF B[19]<>0 THEN C[4]=B[19]; GOTO 5840
5830 IF C[0]=B[0] THEN C[4]=B[3] ELSE CALL "FM2EXT",Z[13],1,"M   ",1000,B[0],Z,B[3],M6[1]; C[4]=Z*C[0]/1000
5840 RETURN 
5900 REM "Inventory or Customer Specific Line"
6000 REM "BACKGROUND
6003 IF L0$="Y" THEN RETURN 
6004 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,-1
6005 ! PRINT (0,ERR=6016)'SB',
6060 ! PRINT @(1,3),"Invoice number:",@(30,3),"Invoice date:",@(3,4),"Order number:",@(0,5),"Bill",@(0,6),Z0$,
6080 ! PRINT @(0,6),"now ",@(43)," Price ",@(29)," Quantity ",@(52)," Extension ",@(66)," Backordered ",
6165 ! PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6460 CALL "ZZDISP","A",A$(1,8),"AR6",X3$,"","",17,3,X4$
6490 RETURN 
6600 REM "ALT KEY DATA READS
6690 RETURN 
6700 REM "ADD ENTRY
6790 GOTO 1630
7000 HANDLE_DONT_INV_OVERRUNS:! WO263619, if cust parm set and order line has PO code and bill now quantity is greater than ordered quantity (overrun) then set bill now quantity to ordered quantity and recalculate bill now extension, backordered amount and unit cost in FS3 record.
7010 C[0]=B[0],C[3]=0 ! Bill now quantity to ordered quantity, BO amt to 0
7015 DIM SELL_UM$(21),SELL_UM[1]
7020 READ (Z[13],KEY="U/M"+B$(124,4),DOM=*NEXT)SELL_UM$(1),SELL_UM[0],SELL_UM[1]
7025 IF SELL_UM$(21,1)="Y" THEN C[1]=0,C[2]=B[6]; GOTO 7050 ! no unit entry
7035 Z2=0; CALL "FM2EXT",Z[13],0,B$(124,4),B[5],C[0],C[1],Z2,M6[1]; C[2]=Z2 ! bill now extension
7050 Z3=0; CALL "FM2EXT",Z[13],1,B$(124,4),B[5],C[0],Z3,C[4],M6[1]; C[6]=Z3 ! unit cost
7090 RETURN 
7095 ! 
7500 REM "Display a line
7510 ! PRINT @(1,Y),F0$,@(5),B$(6,3),@(10),D8$,
7515 ! IF B$(18,1)="Y" THEN PRINT @(65,Y)," (Special ship)",
7517 IF POS("I"=B$(156,5))=0 AND E[L]=0 THEN BL$='SF'+"_YELLOW" ELSE BL$=""
7518 ! IF B$(18,1)="Y" THEN BL$='SF'+'_YELLOW' ELSE BL$=""
7519 IF F0$="Y" THEN F0_DESC$="YES" ELSE F0_DESC$="NO"
7520 LIST_BOX LOAD ORDER_LINE.CTL,0,BL$+F0_DESC$+SEP+BL$+B$(6,3)+SEP+BL$+FNS$(B$(19,10))+SEP+BL$+FNS$(B$(50,40))+SEP+BL$+D9$+SEP+BL$+STR(FNN(L[L]):M0$)+SEP+BL$+STR(P[L]:M6$)+SEP+BL$+STR(E[L]:M2$)+SEP+BL$+STR(O[L]:M0$)+SEP+BL$+B$(18,1)
7522 ! IF F2$<>"Y" AND M$(21,1)<>"Y" THEN PRINT @(41),P[L]:M6$,
7525 ! PRINT @(53),E[L]:M2$,@(65),FNN(O[L]):M0$,
7527 IF B$(18,1)="Y" THEN SPEC_SHIP$="Y" ELSE SPEC_SHIP$=" "
7535 Y=Y+2
7540 RETURN 
7550 REM "Check to see if item has become lotted since O/E!
7552 GOSUB CHECK_SPEC_PRICE ! SSP 191604
7555 IF P0$(44,1)<>"Y" OR POS(B$(155,1)="IC")=0 OR B$(2,1)="Y" OR B$(9,1)<>" " THEN GOTO 7595
7560 FIND (Z[9],KEY=B$(161,10)+B$(19,10),DOM=7595)X$
7565 IF X$(112,1)<>"Y" THEN GOTO 7595
7570 EXTRACT (Z[2],KEY=B$(147,8)+B$(6,3),DOM=7595)IOL=0320
7580 B$(2,1)="Y"; WRITE (Z[2])IOL=0320
7595 RETURN 
7700 REM "Set U/M divisor M and D9$
7705 DIM M$(21),M[1]
7710 READ (Z[13],KEY="U/M"+B$(124,4),DOM=7711)M$,M[0],M[1]
7715 IF M$(20,1)="Y" THEN M=M[1] ELSE M=B[5]
7720 IF M=0 THEN M=1
7725 M0=M; IF M[0]<>0 THEN M0=M[0]
7735 D9$=FNS$(B$(124,4))+"/"+FNR$(STR(M0:M1$))
7740 DIM N$(21); FIND (Z[13],KEY="U/M"+B$(120,4),DOM=5726)N$
7745 RETURN 
7750 REM "Defaults based on product code info
7760 IF D$(22,1)="N" THEN B[9]=0
7765 B$(136,1)="Y"; IF A2$(86,1)<>"Y" THEN B$(136,1)="N"
7770 ON POS(D$(23,1)="NC") GOTO 7785,7775,7780
7775 B$(136,1)="N"; GOTO 7785
7780 IF B$(136,1)="Y" THEN B$(136,1)="C"
7785 IF P3$(186,1)="Y" THEN IF POS(" "<>D$(38,5))>0 THEN B$(128,5)=D$(38,5)
7795 RETURN 
7800 REM "Desc in D8$
7810 D8$=FNS$(B$(19,10))+"-"+FNS$(B$(50,40))
7840 RETURN 
7850 REM "Write amount out to FS3 file
7855 DIM C$(50),C[9]; C$(1,20)=L1$(1,20),C$(21,6)=A$(21,6),C$(27,4)=L1$(21,4); C[0]=L[L1],C[1]=P[L1],C[2]=E[L1],C[3]=O[L1],C$(31,6)=FY_AP$
7860 P2$=L1$(1,20)+A$(21,6),P2=POS(P2$=L2$,26)
7865 IF F0$="Y" THEN GOTO 7870
7866 REMOVE (Z[7],KEY=C$(1,20),DOM=7867)
7868 IF P2<>0 AND F1$="Y" THEN IF P2=1 THEN L2$=L2$(27) ELSE IF P2=LEN(L2$)-25 THEN L2$=L2$(1,P2-1) ELSE L2$=L2$(1,P2-1)+L2$(P2+26)
7869 GOTO 7890
7870 GOSUB 5700
7872 WRITE (Z[7],KEY=C$(1,20))IOL=0331
7875 IF P2=0 AND F1$="Y" THEN L2$=P2$+L2$
7890 RETURN 
7950 REM "Figure extension E(L1)
7955 IF M$(21,1)="Y" OR F2$="Y" THEN GOTO 7990
7975 IF M=0 THEN E[L1]=0 ELSE E[L1]=L[L1]/M*P[L1]; IF M[0]<>0 THEN E[L1]=E[L1]/M[0]
7990 RETURN 
7995 PRINT @(53,L5),E[L1]:M2$,
7999 RETURN 
8000 REM "Bill complete order
8002 BILL_COMPLETE:
8005 Q2$="B"; GOSUB 4000
8010 GOSUB READ_ORD_REC ! GOTO 1500
8090 RETURN ! GOTO 1900
8100 REM "Order Lines Option
8103 IF POS(A2$(47,1)="RW")<>0 THEN GOTO 8130
8104 REM "U2$ set in 8979
8110 U1$="FM2ODB08"+A$(9,8)+U2$
8120 GOTO 9710
8130 REM "Handle req
8135 U1$="FS2DAB08"+A$(9,8)+U2$
8140 GOTO 9710
8190 GOTO 1900
8200 REM "Select specific line
8205 V0$=STR(V0:"000")
8210 V1=POS(V0$=L$(22),29)
8220 IF V1=0 THEN GOTO 1900
8225 L1=INT(V1/29)+1
8230 X0=0,C0=0; GOTO 2060
8250 REM "Set F2$ if extension only
8255 F2$="N"
8256 REM IF M$(21,1)="Y" THEN LET F2$="Y"; GOTO 8290
8260 IF B$(155,1)<>"S" THEN GOTO 8290
8265 FIND (Z[4],KEY="X"+B$(19,10),DOM=8290)I$
8270 IF I$(61,1)="Y" THEN F2$="Y"
8290 RETURN 
8300 REM "Get quantity by calling the lot routine
8310 Q0=L[L1]/N[L1],Q1=L[L1]
8320 CALL "IC2LCB",X3$,X4$,B$,B{ALL},Q1,Q0,7,C,F,S1,S1$,S2,S3$,S3,S4
8322 IF B$(10,1)="9" THEN C=0,F=0
8323 IF Q1=-1 THEN Q1=0
8325 EXTRACT (Z[2],KEY=L1$(9,11),DOM=8331)
8327 L[L1]=Q1,K0$=L1$(9,11); GOSUB 8600; GOSUB 8350; GOSUB 7850; EXTRACT (Z[2],KEY=L$(14,11),DOM=8328)
8330 Y=7,L$="",L=0,E0=0; DIM L[20],P[20],N[20],E[20],O[20]
8331 F3$="*",F3=L1 ! PRINT @(0,Y),'CE',
8335 EXITTO 1550
8345 RETURN 
8350 REM "Adjust line
8351 REM "Q1=qty, B$&B(All) set, K0$=key to FS2
8355 CALL "FM2EXT",Z[13],1,B$(124,4),B[5],Q1,Q9,C,M6[1]
8360 C[6]=Q9,C[4]=C
8365 Q=Q1; CALL "FM2EXT",Z[13],1,B$(120,4),B[2],Q,Q9,C,M6[1]
8370 B[1]=Q9,B[3]=C; IF F<>0 THEN B[17]=F; REM " 146596
8375 WRITE (Z[2],KEY=K0$)IOL=0320
8395 RETURN 
8400 REM "Check for lots for this line in the ICF file. If lots found we will assume that they balance because every lot entry makes it balance
8401 REM "If no matching lots are found, we will do lots for that line.  Cost now recomputed and updated on FS2-2/8/92.
8402 IF B[0]<0 THEN RETURN 
8405 DIM H$(214),H[8]
8407 Q=0,K$=B$(161,10)+B$(19,10)+B$(10,4),Q1=0
8410 READ (Z[8],KEY=K$,DOM=8411)
8415 READ (Z[8],END=8435)IOL=0380
8420 IF H$(1,LEN(K$))<>K$ THEN GOTO 8435
8422 IF H$(110,11)<>B$(147,8)+B$(6,3) THEN GOTO 8415; REM "SSP#207116
8423 IF POS(" "<>H$(221,11))>0 THEN CALL "ZZPROM",".4",X3$,Z,"Item "+H$(11,10)+" has a lot record currently being Adj-DELETE THIS INV:"+MID(Q1$,1,7),"","",0; REM "SSP#207116                                                 
8425 IF H$(110,11)=B$(147,8)+B$(6,3) THEN Q1=Q1+H[0]; IF H$(125,4)="    " THEN Q=Q+H[4]*H[3] ELSE Q=Q+H[4]*H[2]*H[3]
8430 GOTO 8415
8440 IF Q<>C[0] THEN GOSUB 8450 ELSE C=Q1,Q1=Q; GOSUB 8463
8445 RETURN 
8450 REM "Adjust lots as we load lines
8452 IF L0$="Y" THEN RETURN ; REM "If called, we can't go off and do lots
8455 Q0=C[0]/M,Q1=C[0]
8460 CALL "IC2LCB",X3$,X4$,B$,B{ALL},Q1,Q0,7,C,F,S1,S1$,S2,S3$,S3,S4
8461 IF Q1=-1 THEN Q1=0
8463 IF B$(10,1)="9" THEN C=0,F=0
8464 IF Q1<>C[0] THEN C[3]=C[3]+(C[0]-Q1); IF C[3]<0 THEN C[3]=0
8465 C[0]=Q1,K0$=B$(147,8)+B$(6,3)
8470 GOSUB 8600; GOSUB 8350
8480 CALL "FM2EXT",Z[13],0,B$(124,4),B[5],C[0],C[1],Q9,M6[1]; C[2]=Q9
8481 PRINT @(0,7),'CE',
8495 RETURN 
8590 RETURN 
8600 REM "Overrides from Lots
8605 IF P0$(64,1)<>"Y" OR S3$="" THEN GOTO 8680
8610 IF FNS$(S3$(9,3))="" THEN GOTO 8680 ELSE FIND (Z[4],KEY="T"+S3$(9,3),DOM=8680)IOL=0340; B$(29,3)=S3$(9,3)
8620 GOSUB 7750
8680 IF S3$>"" THEN IF FNS$(S3$(12,5))>"" THEN B$(128,5)=S3$(12,5)
8690 RETURN 
8700 REM "Add any detail FS3 records to the main FS3 record (if L0$="Y"
8701 IF SH_PARM$(202,1)="Y" OR (ALT_FILE$<>"" AND ALT_FILE$="SM7") THEN RETURN ; REM "skip if billing based on order or coming from CIG Plus
8702 READ (Z[7],KEY=Q1$(1,8)+Q1$(15,8),DOM=8703)
8703 FS3_TOTAL=0,SUM_KEY$=""
8705 KEY_7$=KEY(Z[7],END=8740); IF KEY_7$(1,16)<>Q1$(1,8)+Q1$(15,8) THEN GOTO 8740
8710 IF KEY_7$(20,1)<>" " THEN READ (Z[7],KEY=KEY_7$,DOM=8705)*,TEMP; FS3_TOTAL=FS3_TOTAL+TEMP; GOTO 8705; REM "If detail record, add to FS3_TOTAL amount and keep reading
8714 REM "If here then we have an FS3 summary record. If SUM_KEY$ is <> '' then we can add FS3_TOTAL to IOL 330 and write out previous record with SUM_KEY$, then reset everything and read new record in
8715 IF SUM_KEY$<>"" THEN EXTRACT (Z[7],KEY=SUM_KEY$,DOM=8720)IOL=0330; C[0]=FS3_TOTAL+C[0]; WRITE (Z[7],KEY=SUM_KEY$)IOL=0330
8720 SUM_KEY$="",FS3_TOTAL=0; READ (Z[7],KEY=KEY_7$,DOM=8705)IOL=0330; SUM_KEY$=KEY_7$; GOTO 8705
8739 REM "Write out final summary record if needed
8740 IF SUM_KEY$<>"" THEN EXTRACT (Z[7],KEY=SUM_KEY$,DOM=8741)IOL=0330; C[0]=FS3_TOTAL+C[0]; WRITE (Z[7],KEY=SUM_KEY$)IOL=0330
8745 RETURN 
8950 REM "Program flow logic
8960 DIM U0$(6); U0$(1)=FID(0),U0$=U0$+"PF"
8970 CLOSE (14); OPEN (14)"ZZPARM"; FIND (14,KEY=U0$,DOM=8990)U0$,U1$
8975 ! IF U1$(1,6)<>X0$ THEN Q1$=""; GOTO 8990
8977 IF U1$(9,1)="!" THEN F8$=U1$(10,1),U1$=U1$(1,6)+STR(NUM(U1$(7,2))-2:"00")+U1$(11)
8979 U2$=U1$
8980 Q1=NUM(U1$(7,2)),Q1$=U1$(9,Q1),U1$=U1$(Q1+9)
8983 FY_AP$=U1$(9,6)
8985 IF LEN(Q1$)>22 THEN I5$=Q1$(23),Q1$=Q1$(1,22)
8990 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 REM "PROG FLOW
9704 L1=0
9705 IF L2$<>"" THEN U1$="FM2ODD"+STR(26+LEN(I5$):"00")+L2$(1,26)+I5$+U1$,L2$=L2$(27); GOTO 9705
9710 IF U1$="" THEN REMOVE (Z[13],KEY=U0$,DOM=9900); GOTO 9900
9715 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9730 ! RUN U1$(1,6)
9740 IF U1$(1,6)="AR2EAT" THEN RUN "AR2EAT"
9780 REPLACEMENT_SCRN$=NEXT_SCREEN$
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 ! PROCESS MODIFICATION
10010 MOD_ORDER:
10020 LIST_BOX READ ORDER_LINE.CTL,IDX
10030 LIST_BOX FIND ORDER_LINE.CTL,IDX,ORDER_LINES$
10040 BILL_NOW$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1)
10050 LINE_NUMBER$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1)
10060 TF_ITEM$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1)
10070 I_DESC$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1)
10080 U_M$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1)
10090 QT1$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1); QTY_OPEN=NUM(QT1$)
10100 PR1$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1); SELL_PRICE=NUM(PR1$)
10110 EXT$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1); PRICE_EXT=NUM(EXT$)
10120 BO1$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1); BACK_ORD=NUM(BO1$)
10170 REPLACEMENT_SCRN$="ARGEAC.5"
10180 REFRESH_FLG=1
10190 RETURN 
11000 CLEAR_ORDER_LINES:
11010 FOR ZZ=1 TO 200
11020 LIST_BOX LOAD ORDER_LINE.CTL,1,*,ERR=11050
11030 NEXT ZZ
11040 GOTO 11060
11050 EXITTO 11060
11060 RETURN 
12000 VALIDATE_WAREHOUSE_INFO:! [204977]-added routine
12010 VALID_WHSE$=""
12025 CALL "UPDSMW;VALIDATE_WHS",SMW_LFN,%CIG_VAL_WHS$,B$(10,4),VALID_WHSE$
12095 RETURN 
14000 CHECK_SPEC_PRICE:! SSP 191604 (INCL 14000-14090)
14005 IF B$(235,3)<>"MAN" AND B[15]<>0 THEN {
14007 IF B$(14,1)="Y" AND B$(161,10)=DIM(10) THEN ITEM_CUST$=A2$(6,10) ELSE ITEM_CUST$=B$(161,10)
14010 CALL "UPDSP0;GET_PRICE",Z[21],A2$(6,10),ITEM_CUST$+B$(19,10),B[4],B[15],SP0_PRICE,SP0_PRICE_TYPE$,B[2],B[5]; IF SP0_PRICE_TYPE$<>"" THEN {
14020 EXTRACT (Z[2],KEY=B$(147,8)+B$(6,3),DOM=*RETURN)IOL=0320
14030 B[4]=SP0_PRICE,B$(235,3)=SP0_PRICE_TYPE$
14040 WRITE (Z[2])IOL=0320
14080  }
14085  }
14090 RETURN 
14099 ! 
15000 SET_FS3_DFLT:! SSP 265440
15010 SETERR 9000; ENTER X3$,X4$,Q1$,FS2_KEY$,C$,C{ALL}; X0$="ARGEAU",L0$="Y"
15020 FS3_DFLT=1,IN_GUI=1
15025 FY_AP$=Q1$(1,6); Q1$=Q1$(7)
15030 GOSUB 0100
15040 DIM B$(356),B[29],C$(50),C[9],L2$(0),SM0$(100),SM0[10]; K$=FS2_KEY$
15045 FIND (Z[1],KEY=Q1$(15,8))IOL=0310
15050 FIND (Z[2],KEY=FS2_KEY$,DOM=15090)IOL=0320
15060 GOSUB 5000
15090 GOTO 9900
15099 ! 
15100 SET_FS3_COST:! SSP 265440
15110 SETERR 9000; ENTER X3$,X4$,Q1$,FS2_KEY$,C$,C{ALL}; X0$="ARGEAU",L0$="Y"
15120 FS3_COST=1,IN_GUI=1,FS3_DFLT=1
15125 FY_AP$=Q1$(1,6); Q1$=Q1$(7)
15130 GOSUB 0100
15140 DIM B$(356),B[29],L2$(0),SM0$(100),SM0[10]; K$=FS2_KEY$
15145 FIND (Z[1],KEY=Q1$(15,8))IOL=0310
15150 FIND (Z[2],KEY=FS2_KEY$,DOM=15190)IOL=0320
15160 GOSUB 8250; GOSUB 7700
15170 GOSUB 5050
15180 GOTO 9900
56000 REM "192797-Customer Invoicing Gateway parameter, Don't invoice         
56002 REM "198009-Companion item is being invoiced. Should not be invoicing   
56003 REM "198220-When they do PO recvg for one line of an order, all lines   
56004 REM "199177-Cust Inv Gateway - Billing and closing orders that aren't   
56005 REM "204885-Modify CIG to allow entry of last 3 of whse code, only bill
56006 REM "204977-Valid Warehouse selection in Customer Invoicing Gateway     
56008 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56010 REM "214375-See 208467;Create a new S/H Parameter, Never invoice an
56012 REM "217160-911 - In A/R Invoice bill now "NO" when the lines were
56013 REM "219803-Error in Customer invoice gateway for UPS
56014 REM "191604-Add special pricing modifications to gui                    
56015 REM "237252-The "Bill Complete" button does not work in AR Invoice      
56016 REM "240501-When billing out a B/order qty. The invoiced qty may not    
56018 REM "247646-We have situations where we bill out partial PO's meaning   
56020 REM "263619-Customer default; Don't invoice customer for overruns?      
56021 REM "265440-Order Invoice Interface in GUI needs to match CHUI process. 
56022 REM "266583-CIG Plus; if split ship, AP invoice G/L dist is doubled.    
56023 REM "269404-Issue with Invoice 1583957 - vendor invoice came thru CIG+  
56024 REM "271627-Err(042,SM2ODD-1720) order/invoicing interface 24 ship pts  
