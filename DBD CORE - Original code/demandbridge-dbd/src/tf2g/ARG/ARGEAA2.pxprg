0010 ! ARGEAA - File Maintenance Program for ARB-Invoice Data Entry Header (="ARB"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Oct. 8, 2001 9:11
0030 ! ************************************************************************
0035 REM "5.5 - 09/10/07 - 15.709722 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ARGEAC","../ARG/AR.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 X0$="AR2EAA",X1$="A/R Invoice Data Entry"
0130 X0=-1; X2=-1
0140 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
0150 CALL "ZZBATC",X3$,X4$,X0$,X9; IF X9=1 THEN CND_STR$="END"; EXIT 
0160 %ARGEAA$=MSG("ARGEAA_1"); IF STP(X3$(174,4))<>"" THEN %ARGEAA$+=" - Batch No: "+X3$(174,4)
0190 DIM Z[NUM(X3$(60,3))],ARB[20],AR1[15]
0200 ! files
0210 Z$="01X ARB...  02O FMP...  03O AR1...  04O PO3...  05O AR2...  06O ZZPARM  07O AR5...  08O AR4...  09O AR3...  10O FS1...  11O ARC... 12O FMN...  13O FM0...  15O ASQ...  16O FS3... 17O ARD...  18O ART...  19O ARI...  20O GL1...  21O ARV...  22O FM0...  23O FS2... 24O AT3...  "
0220 IF %ACTION$="C" THEN Z$="01X GRB...  02O FMP...  03O AR1...  04O PO3...  05O AR2...  06O ZZPARM  07O AR5...  08O AR4...  09O AR3...  10O FS1...  11O GRC... 12O FMN...  13O FM0...  15O ASQ...  "
0250 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; IF Z0=1 THEN CMD_STR$="END"; EXIT 
0300 ! Iolist
0310 IOLIST ARB$,ARB{ALL}
0320 IOLIST FMP$
0330 IOLIST AR1$,AR1{ALL}
0380 IOLIST LINK,LINE$,LINE{ALL}
0390 IOLIST AT3$,AT3{ALL}
0400 ! 
0410 GOSUB GET_PARAM
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0970 RETURN 
1000 ! Find Invoice Record
1010 FIND_REC:
1020 IF INV_NUM$(1,1)="A" THEN GOTO GET_NEXT_INV_NUM
1030 KEY_1$=CR_FY$+CR_ACCTPD$+INV_NUM$
1040 READ (Z[1],KEY=KEY_1$,DOM=NEW_ARB_REC)IOL=0310
1050 GOSUB LOAD_INV_HEAD
1090 RETURN 
1200 ! Add New Invoice
1210 NEW_ARB_REC:
1220 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
1230 IF ANS$="NO" THEN INV_NUM$=""; NEXT_ID=CR_FY.CTL; EXIT 
1290 RETURN 
5000 ! load Invoice Header Information
5010 LOAD_INV_HEAD:
5090 RETURN 
9000 ! Get the system Parameters.
9010 GET_PARAM:
9020 FIND (Z[6],KEY=%C$+"A/R")%ARS$
9030 READ (Z[6],KEY=%C$+"G/B",DOM=*NEXT)%GB$; %GB$="Y"
9040 READ (Z[6],KEY=%C$+"G/L")%G0$; %G8=NUM(%G0$(170,2),ERR=*NEXT)
9050 DIM %I0$(40); FIND (Z[6],KEY=%C$+"I/C",DOM=*NEXT)%I0$
9060 DIM ASN$(45),ASN[1],CUR$(36),CUR[1]
9070 DIM %OP_SEC$(255); READ (Z[6],KEY="osec"+%X3_OP_ID$,DOM=*NEXT)%OP_SEC$
9080 READ (Z[6],KEY=X3$(9,3)+"A/R",DOM=*NEXT)PO_PARAM$
9090 RETURN 
9100 ! Get the Next invoice Number to Add
9110 GET_NEXT_INV_NUM:
9190 RETURN 
9999 END 
10000 ! CREATE AT3 RECORD
10010 CREATE_AT3_REC:
10020 DIM LINE[10]; READ (Z[1],KEY="",DOM=*NEXT)
10030 READ_ARB: KEY_1$=KEY(Z[1],END=*RETURN); READ (Z[1],KEY=K$)IOL=0310
10040 IF ARB[20]<=0 THEN GOTO READ_ARB
10050 INDEX=ARB[20],LN=0
10060 READ_ART:READ (Z[24],IND=INDEX)IOL=0380
10070 DIM AT3$(161),AT3[10]; LN+=1
10080 AT3$(1,14)=ARB$(1,14),AT3$(15,3)=STR(LN:"000"),AT3$(18)=LINE$
10090 FOR XX=0 TO 10; AT3[XX]=LINE[XX]; NEXT XX
10100 WRITE (Z[2],KEY=AT3$(1,17))IOL=0390
10110 IF LINK>0 THEN INDEX=LINK; GOTO READ_ART ELSE GOTO READ_ARB
10120 RETURN 
39000 LOAD_FY:
39010 ! ONLY_OPEN$="Y" means only load open FY's, TF_MODULE$ can be set to second part of key for that system parameter record, ie A/P, A/R, I/C
39020 CR_FY$=""; ONLY_OPEN$="Y"
39040 CUR_FY$="",CUR_ACCTPD$=""; READ (Z[6],KEY=%C$+"A/R",DOM=*NEXT)SYS_PARMS$; CUR_FY$=SYS_PARMS$(7,4),CUR_ACCTPD$=SYS_PARMS$(11,2)
39050 DIM GL$(300); READ (Z[6],KEY=%C$+"G/L")GL$(1)
39060 DIM OSEC$(255); READ (Z[6],KEY="osec"+%X3_OP_ID$,DOM=*NEXT)OSEC$
39070 READ (Z[6],KEY=%C$+"G/LYE",DOM=*NEXT)
39080 K$=KEY(Z[6],END=LOAD_FY_DROP_BOX); READ (Z[6],KEY=K$)GLYE$
39090 IF LEN(K$)<8 OR K$(1,8)<>%C$+"G/LYE" THEN GOTO LOAD_FY_DROP_BOX
39100 IF ONLY_OPEN$="Y" AND POS(GLYE$(99,1)="CR")>0 THEN GOTO 39080
39110 IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND K$(9,4)<GL$(34,4) THEN GOTO 39080
39120 CR_FY$=CR_FY$+K$(9,4)+"/"
39130 GOTO 39080
39140 LOAD_FY_DROP_BOX:
39150 DROP_BOX LOAD CR_FY.CTL,CR_FY$
39160 IF CUR_FY$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_FY$<GL$(34,4) THEN CUR_FY$=GL$(34,4),CUR_ACCTPD$=GL$(38,2)
39170 IF CUR_ACCTPD$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_ACCTPD$<GL$(38,2) THEN CUR_ACCTPD$=GL$(38,2)
39180 IF CUR_FY$<>"" THEN DROP_BOX WRITE FY.CTL,CUR_FY$
39185 CR_FY$=CUR_FY$
39190 IF CUR_FY$<>"" THEN FROM_FY$="Y",CR_FY$=CUR_FY$; GOSUB LOAD_ACCTPD
39210 LOAD_FY_END:RETURN 
39220 ! 
39230 LOAD_ACCTPD:
39240 ! FY$ should be set to a valid fiscal year
39250 CR_ACCTPD$=""; FROM_FY$="Y"
39260 IF FROM_FY$="Y" THEN GOTO 39280
39280 READ (Z[6],KEY=%C$+"G/LYE"+CR_FY$,DOM=LOAD_ACCTPD_END)GLYE$
39290 PDS=12; PDS=NUM(GLYE$(13,2),ERR=*NEXT) ! Number of periods in this FY
39300 FOR X=1 TO PDS
39310 X$=STR(X:"00"),FLAG$="NO"; CALL "ARGDTE",%X3$,%X4$,CR_FY$+X$,FLAG$; IF FLAG$<>"*" THEN CR_ACCTPD$=CR_ACCTPD$+X$+"/" ! Checks osec, only load valid periods
39320 NEXT X
39330 DROP_BOX LOAD CR_ACCTPD.CTL,CR_ACCTPD$
39340 IF FROM_FY$="Y" AND CUR_ACCTPD$<>"" THEN DROP_BOX WRITE CR_ACCTPD.CTL,CUR_ACCTPD$
39350 CR_ACCTPD$=CUR_ACCTPD$
39355 GOSUB LOAD_ENDING_DATE
39360 LOAD_ACCTPD_END:RETURN 
39370 ! 
40000 LOAD_ENDING_DATE:
40010 KE$=%C$+"G/LYE"
40020 IF LEN(CR_FY$)>4 THEN VAL$=CR_YEAR$ ELSE VAL$=CR_FY$
40030 FIND (Z[6],KEY=KE$+VAL$)Z9$; CC$=Z9$(21)
40040 IF LEN(CR_ACCTPD$)>2 THEN VAL=NUM(CR_PD$) ELSE VAL=NUM(CR_ACCTPD$)
40050 CC$=CC$(VAL*6-5,6),END_DATE$=CC$,REFRESH_FLG=1
40060 RETURN 
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
