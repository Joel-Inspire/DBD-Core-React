0010 ! ARGUUS - File Maintenance Program for Prepayments selection utility
0015 ! A/R Trial Balance Report
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Nov. 7, 2002 11:33
0030 ! ************************************************************************
0035 REM "5.7 - 08/18/22 - 19.173647 - crg - SSP# 307408
0037 REM "307408-DBD-295;Enhance CR GW and other for Pre-Payments            
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 IF TCB(13)=1 THEN BEGIN 
0052 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program"; GOTO 0075 ! SSP#276457                                                    
0055 IF NOT(%GUI) THEN CHUI_MODE=1; %GUI=1
0060 PROCESS "ARGUUS","../ARG/AR.EN"
0065 IF CHUI_MODE THEN %GUI=0; RUN "ZMENU"
0075 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0080 ! 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 X0=-1,X2=-1
0140 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0150 ! 
0155 DIM ZZS$(81),PRT$(125),RNG$(100),RNG[4],B.RNG[4]
0160 ! iolist
0170 IOLIST ZZS$(1)
0180 IOLIST PRT$(1),RNG$(1),RNG{ALL}
0300 ! Open Files
0310 DIM Z[NUM(X3$(60,3))]
0320 Z$="01O ZZS...  05O ZYB...  07O ZZP     13O ZZPARM  "
0330 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0400 ! 
0410 RPT_SELEC$="            "; VIEW$=""
0480 GOSUB GET_PARAM
0485 PRT_MODES$="QS" ! SSP 240570
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 KEY_1$="AR2UUP"+RPT_SELEC$; %K9$="AR2UUP"
0530 READ (Z[1],KEY=KEY_1$,DOM=ADD_OPT)IOL=0170,IOL=0180
0535 B_ZZS$=ZZS$; B_PRT$=PRT$; B_RNG$=RNG$; CHG_FLG=0
0580 GOSUB SELECT_OPTIONS
0590 RETURN 
0600 ! Selection Options
0605 SELECT_OPTIONS:
0610 PRG_NAME$=ZZS$(1,6); RPT_SELEC$=ZZS$(7,12); RPT_DESC$=ZZS$(19,40)
0620 RPT_OPT$=ZZS$(59,12); RPT_SEQ$=ZZS$(71,1)
0630 RPT_FISYR$=ZZS$(72,4); RPT_PER$=ZZS$(76,2); BANK_CODE_LIST$=ZZS$(78,3),DEPOSIT_NUM$=ZZS$(81,1)
0800 ! Output Options
0810 PRT_MODE$=PRT$(1,1); RPT_OUTDEV$=PRT$(2,6)
0820 RPT_VERT$=PRT$(9,1); RPT_HORIZ$=PRT$(10,1)
0830 RPT_AUX1$=PRT$(11,1); RPT_AUX2$=PRT$(12,1); RPT_AUX3$=PRT$(13,1); RPT_AUX4$=PRT$(14,1)
0840 RPT_LINES$=PRT$(15,2); RPT_FORMCODE$=PRT$(17,1)
0850 RPT_JOBCARD$=PRT$(65,60); RPT_JOBCARD_FLG$=PRT$(125,1)
0860 GOSUB LOAD_RANGE
0870 NEXT_ID=RPT_VEIW.CTL
0880 REFRESH_FLG=1
0890 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! load the sequence range
1010 LOAD_RANGE:
1040 IF NUL(RNG$(1,10)) THEN CUST_START$="" ELSE CUST_START$=RNG$(1,10)
1050 IF RNG$(11,3)="~~~" THEN CUST_END$="" ELSE CUST_END$=RNG$(11,10)
1060 IF NUL(RNG$(21,8)) THEN INV_START$="" ELSE INV_START$=RNG$(21,8)
1070 IF RNG$(29,3)="~~~" THEN INV_END$="" ELSE INV_END$=RNG$(29,8)
1500 RETURN 
3800 ! check changes
3810 CHECK_CHANGES:
3815 GOSUB LOAD_OPTIONS
3820 IF CHG_FLG=0 THEN RETURN 
3835 MSGBOX MSG("UPD_RPT_1")+SEP+MSG("UPD_RPT_2"),MSG("CONFIRM"),"?,YESNO",ANS$
3860 IF ANS$="NO" THEN RETURN 
3870 WRITE (Z[1],KEY=KEY_1$)IOL=0170,IOL=0180
3880 B_ZZS$=ZZS$; B_PRT$=PRT$; B_RNG$=RNG$; CHG_FLG=0
3890 RETURN 
3900 ! 
8000 ! Messages
8010 ADD_OPT:
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN CMD_STR$="END"; RETURN 
8040 KEY_1$="AR2UUP"+RPT_SELEC$
8050 DIM ZZS$(81),RNG$(100); ZZS$(1,18)=KEY_1$; ZZS$(71,1)="1",ZZS$(72,4)=CR_FY$,ZZS$(76,2)=CR_ACCTPD$,RNG$(11,10)=DIM(10,"~"),RNG$(29,8)=DIM(8,"~")
8060 GOSUB SELECT_OPTIONS
8070 REFRESH_FLG=1; NEXT_ID=RPT_DESC.CTL
8090 RETURN 
9999 END 
20000 ! Load Informations
20005 LOAD_OPTIONS:
20010 ZZS$(1,6)=PRG_NAME$
20020 ZZS$(7,12)=RPT_SELEC$; ZZS$(19,40)=RPT_DESC$
20030 ZZS$(59,12)=RPT_OPT$; ZZS$(71,1)=RPT_SEQ$
20040 ZZS$(72,4)=CR_FY$; ZZS$(76,2)=CR_ACCTPD$
20050 ZZS$(78,3)=BANK_CODE_LIST$,ZZS$(81,1)=DEPOSIT_NUM$
20100 ! 
20110 PRT$(1,1)=PRT_MODE$; PRT$(2,2)=RPT_OUTDEV$
20120 PRT$(9,1)=RPT_VERT$; PRT$(10,1)=RPT_HORIZ$
20130 PRT$(11,1)=RPT_AUX1$; PRT$(12,1)=RPT_AUX2$
20140 PRT$(13,1)=RPT_AUX3$; PRT$(14,1)=RPT_AUX4$
20150 PRT$(15,2)=RPT_LINES$; PRT$(17,1)=RPT_FORMCODE$
20160 PRT$(65,60)=RPT_JOBCARD$; PRT$(125,1)=RPT_JOBCARD_FLG$
20200 ! 
20210 IF RPT_SEQ$="1" THEN {
20220 T1$="AR6..."
20230 GOSUB GET_CUST_RANGE
20240  }
20300 IF B_ZZS$=ZZS$ AND B_PRT$=PRT$ AND B_RNG$=RNG$ THEN CHG_FLG=0 ELSE CHG_FLG=1
20400 RETURN 
25000 ! 
25010 SEARCH_INVOICES:
25020 IF NOT(NUL(VIEW$)) THEN PRT$(2,2)=VIEW$
25030 K$=X3$(1,8)
25040 %B_WINDATE_FMT$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD",JJ$=DTE(0:"%Yl%Mz%Dz"); CALL "ZZWDTE;VALIDATE",JJ$,JJJ$,JJJJ$; X3$(21,6)=JJ$
25050 WRITE (Z[7],KEY=K$)X3$,X4$,T1$,PRT$,RNG$,ZZS$
25065 PROCESS "ARGUUS.1","../ARG/AR.EN",ZZS$,RNG$
25070 CMD_STR$="END"
25080 RETURN 
27000 ! 
27010 GET_PARAM:
27020 READ (Z[13],KEY=X3$(9,3)+"A/R")P0$
27090 RETURN 
28000 ! 
28010 GET_CUST_RANGE:
28020 IF NUL(CUST_START$) THEN RNG$(1,10)="          " ELSE RNG$(1,10)=CUST_START$
28030 IF CUST_END$="" OR CUST_END$="          " THEN RNG$(11,10)="~~~~~~~~~~" ELSE RNG$(11,10)=CUST_END$
28040 IF NUL(INV_START$) THEN RNG$(21,8)="        " ELSE RNG$(21,8)=INV_START$
28050 IF INV_END$="" OR INV_END$="        " THEN RNG$(29,8)="~~~~~~~~" ELSE RNG$(29,8)=INV_END$
28095 RETURN 
28099 ! 
56001 REM "307408-DBD-295;Enhance CR GW and other for Pre-Payments            
