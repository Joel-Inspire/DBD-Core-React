0010 REM "Check for multiple P/O's before invoicing <ARGEAS>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 09/15/09 - 16.330277 - tma - SSP# 190091
0037 REM "190091-When OPS parm to update unbilled cost if cust owned and diff
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 ENTER SALES_ORDER$,FREIGHT$,NEXT_CMD$
0092 PROCESS "ARGEAS","../ARG/AR.EN",SALES_ORDER$,FREIGHT$,NEXT_CMD$
0095 EXIT 
0099 INIT:
0100 SETERR 9000
0110 X0$="ARGEAS",X1$="Check for Muliple Purchase Orders",K9$="",K9=0
0115 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 M0$="#######.00-"
0230 X2=-1
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "Iolists
0310 IOLIST A$
0320 IOLIST B$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O PO1...  02O PO7...  03O FS1...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0550 READ (Z[13],KEY=X3$(9,3)+"F/M")P1$; REM " SSP# 129955 - CHECK PARAMETER
0600 REM 
0605 SALES_ORDER$=ARG_1$,FREIGHT$=ARG_2$
0610 IF LEN(SALES_ORDER$)<8 THEN GOTO 9900
0695 RETURN 
0699 ! *********************************************
1000 LOAD_PO_LIST:! Load up the list box
1005 L=0,L0=4,F0=0
1006 LIST_BOX LOAD PO_LIST.CTL,""
1010 READ (Z[1],KEY=SALES_ORDER$,DOM=1011)
1020 K$=KEY(Z[1],END=1090)
1030 IF K$(1,8)<>SALES_ORDER$ THEN GOTO 1090
1035 READ (Z[1],KEY=K$,DOM=1020)IOL=0310
1036 CST_FLAG$=""; KEY$=SALES_ORDER$; REM " SSP# 129955
1037 IF %BT_DELETE=1 OR P1$(297,1)<>"Y" THEN GOTO 1045; REM " SSP# 129955 - CHECK FLAG SSP 197923
1038 CALL "PO2CST",A$,X3$,X4$,J$,KEY$,CST_FLAG$,"FLAG_CHECK",X0$,A{ALL},J{ALL},EXTRA_NUM2; REM " SSP# 129955 - CHECK TO SEE IF THE FLAG IS SET
1039 IF POS(CST_FLAG$="Y")<>0 THEN CALL "ZZGMSG","D","",""; MSGBOX MSG("ARGEAS_09"),MSG("MB_ATTN"),"!"; GOTO 9700; REM " SSP# 129955 - IF THE FLAG IS SET TO DISPLAY MESSAGE - USER CAN'T ENTER AR INVOICE
1040 IF POS(CST_FLAG$="P")<>0 THEN CALL "ZZGMSG","D","",""; MSGBOX MSG("ARGEAS_10"),MSG("MB_ATTN"),"!"; GOTO 9700; REM " SSP# 129955 - IF THE FLAG IS SET TO DISPLAY MESSAGE - USER CAN'T ENTER AR INVOICE
1045 REM "IF first one, don't do anything,if second, display 1st one first, else just display
1050 ON L GOTO 1060,1070,1080
1060 A1$=A$,L=1; GOTO 1085
1070 GOSUB 3000; GOSUB 2000; L=2; GOTO 1085
1080 GOSUB 2000
1085 GOTO 1020
1100 REM "What to do next
1102 FIND (Z[3],DOM=1400,KEY=SALES_ORDER$); GOTO 1103
1105 REM "if no muliples then go on
1107 IF L=1 THEN NEXT_CMD$="I"; GOSUB 2300; IF F0<>0 THEN GOTO 1300
1110 IF L<2 THEN GOTO 9700
1119 RETURN 
1130 ON Z GOTO 1300,1200
1200 ! END
1205 CMD_STR$="END"
1295 RETURN 
1300 REM "Update freight amount in U1$ and continue
1305 IF LEN(U1$)<38 THEN GOTO 1340 ELSE IF U1$(1,6)<>"AR2EAA" THEN GOTO 1340
1310 U1$(28,11)=STR(F0:M0$)
1340 GOTO 9700
1400 REM "No S/O - can't invoice"
1410 CALL "ZZDISP","AX",SALES_ORDER$,"O/P",X3$,TX$,"",0,0,X4$
1415 CALL "ZZGMSG","D","",""
1420 MSGBOX MSG("ARGEAS_08",TX$),MSG("MB_ATTN"),"!"; NEXT_CMD$="R"
1440 GOTO 1200
2000 REM "Print on screen
2020 GOSUB 2100
2030 CALL "ZZDISP","AX",A$(297,9),"P/O",X3$,PO$,"",7,L0,X4$
2035 CALL "ZZDISP","AX",A$(7,10),"A/P",X3$,VEND$,"",0,0,X4$
2040 IF POS(" "<>A$(17,4))<>0 THEN VEND$=VEND$+" - "+A$(17,4)
2045 NAME$=A$(21,35)
2085 LIST_BOX LOAD PO_LIST.CTL,0,R$+SEP+SEP+PO$+SEP+VEND$+SEP+NAME$+SEP
2086 ! MSGBOX R$+"|"+PO$+"|"+VEND$+"|"+NAME$+"|"
2090 RETURN 
2100 REM "Check PO7 to see if recv'd
2105 R$="!Check_No"
2110 READ (Z[2],KEY=A$(297,9),DOM=2111)
2115 K0$=KEY(Z[2],END=2130); READ (Z[2])
2120 IF K0$(1,9)<>A$(297,9) THEN GOTO 2130
2123 GOSUB 2200
2125 R$="!Check_Yes"
2140 RETURN 
2200 REM "Figure freight for this P/O and add to F0
2201 REM "Assumes K0$ pointing to first PO7 record and Z(2) is pointing to next one
2202 %FREIGHT=0
2205 F5$=""
2209 REM "Only process 'header' PO7 records
2210 IF K0$(23,1)<>" " THEN GOTO 2230
2215 READ (Z[2],KEY=K0$)IOL=0320
2220 F1=0,F1=NUM(B$(51,11),ERR=2230)
2221 %FREIGHT=F1
2225 IF B$(10,10)<>F5$ THEN F0=F0+F1,F5$=B$(10,10)
2230 K0$=KEY(Z[2],END=2240); READ (Z[2])
2235 IF K0$(1,9)=A$(297,9) THEN GOTO 2210
2240 RETURN 
2300 REM "Get freight if only one P/O
2310 READ (Z[2],KEY=A$(297,9),DOM=2311)
2315 K0$=KEY(Z[2],END=2330); READ (Z[2])
2320 IF K0$(1,9)<>A$(297,9) THEN GOTO 2330
2325 GOSUB 2200
2340 RETURN 
3000 REM "Clear screen & display first P/O now
3015 CALL "ZZGMSG","D","",""
3030 A2$=A$,A$=A1$
3040 GOSUB 2000
3050 A$=A2$
3090 RETURN 
6000 REM "Background
6005 RETURN 
6010 PRINT 'SB',
6060 PRINT @(0,3),"Recv'd",@(7),"P/O number",@(24),"Vendor",
6165 PRINT 'SF',
6190 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9700 REM "PROG FLOW
9705 CMD_STR$="END"; GOTO 9900
9720 WRITE (Z[13],KEY=U0$)U0$,U1$
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 WRAPUP:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 MESSAGE_LIB _SV_MSGLIB$
9920 SET_PARAM 'KR'=_SV_KR
9930 ARG_2$=FREIGHT$,ARG_3$=NEXT_CMD$
9950 RETURN 
9999 END 
10000 SETUP_LIBRARY:
10005 _SV_MSGLIB$=MSG(*)
10010 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
10015 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 10025
10020 MESSAGE_LIB "*msglib.en"
10025 SET_MSG:GOSUB SETUP_MESSAGES
10030 RETURN 
10100 ! ^1000 - Retrieve messages from the *msglib.xxx library
10105 SETUP_MESSAGES:
10110 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
10115 _MSG_DIRECTORY$=MSG("DIRECTORY")
10120 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
10125 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
10130 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
10135 _MSG_MANDATORY$=MSG("MANDATORY")
10140 _MSG_NEXT$=MSG("NEXT")
10145 _MSG_NON_NUMER$=MSG("NON_NUMER")
10150 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
10155 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
10160 _MSG_PRECEDING$=MSG("PRECEDING")
10165 _MSG_PREFIX$=MSG("PREFIX")
10170 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
10175 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
10180 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
10185 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
10190 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
10195 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
10200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
10205 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
10210 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
10215 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
10220 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
10225 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
10230 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
10235 _MSG_START_FILE$=MSG("START_FILE")
10240 _MSG_UPDATE$=MSG("UPDATE")
10245 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
10250 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
10255 _MSG_UPD_SAME$=MSG("UPD_SAME")
10260 _MSG_WARNING$=MSG("WARNING")
10265 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
10270 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
10275 RETURN 
