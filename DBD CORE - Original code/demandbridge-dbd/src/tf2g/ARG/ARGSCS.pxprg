0010 ! ARGSCS - Customer Sales Trend.
0015 ! Customer Sales Trend
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Nov. 7, 2002 11:33
0030 ! ************************************************************************
0035 REM "5.7 - 01/27/12 - 10.099166 - tma - SSP# 251985
0037 REM "251985-Customer Sales Trend report - Minor Report Format changes   
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ARGSCS","../ARG/AR.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 X0=-1,X2=-1
0140 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0150 ! 
0155 DIM ZZS$(120),PRT$(125),RNG[4],B_RNG[4],ZZS[7],B.ZZS[7]
0160 ! iolist
0170 IOLIST ZZS$(1),RNG[0],RNG[1]
0180 IOLIST PRT$(1),RNG$,RNG{ALL}
0300 ! Open Files
0310 DIM Z[NUM(X3$(60,3))]
0320 Z$="01O ZZS...  06O ZZPARM  07O ZZP     "
0330 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0400 ! 
0410 RPT_SELEC$="            "; VIEW$=""
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 KEY_1$="AR2SCA"+RPT_SELEC$; %K9$="AR2SCA"
0530 READ (Z[1],KEY=KEY_1$,DOM=ADD_OPT)IOL=0170,IOL=0180
0535 B_ZZS$=ZZS$; B_PRT$=PRT$; B_RNG$=RNG$; B_RNG{ALL}=RNG{ALL}; CHG_FLG=0
0580 GOSUB SELECT_OPTIONS
0590 RETURN 
0600 ! Select Options
0605 SELECT_OPTIONS:
0610 PRG_NAME$=ZZS$(1,6); RPT_SELEC$=ZZS$(7,12); RPT_DESC$=ZZS$(19,40)
0620 RPT_OPT$=ZZS$(59,12); RPT_SEQ$=ZZS$(71,1)
0630 RPT_FISYR$=ZZS$(74,4); RPT_PER$=ZZS$(78,2)
0640 TF_LIST$="0123456789ABCDEF"
0645 IF RNG[0]=0 THEN RPT_SHIPTO$="0"; GOTO 0660
0650 ! RPT_SHIPTO$=TF_LIST$(RNG[0],1)
0660 RPT_NUM1=RNG[1]
0670 IF RNG[0]=0 THEN RPT_SHIPTO$="0" ELSE RPT_SHIPTO$=TF_LIST$(RNG[0]+1,1)
0800 ! Output Options
0810 PRT_MODE$=PRT$(1,1); RPT_OUTDEV$=PRT$(2,6)
0820 RPT_VERT$=PRT$(9,1); RPT_HORIZ$=PRT$(10,1)
0830 RPT_AUX1$=PRT$(11,1); RPT_AUX2$=PRT$(12,1); RPT_AUX3$=PRT$(13,1); RPT_AUX4$=PRT$(14,1)
0840 RPT_LINES$=PRT$(15,2); RPT_FORMCODE$=PRT$(17,1)
0850 RPT_JOBCARD$=PRT$(65,60); RPT_JOBCARD_FLG$=PRT$(125,1)
0860 GOSUB LOAD_RANGE
0870 NEXT_ID=RPT_VEIW.CTL
0880 REFRESH_FLG=1
0890 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0960 SET_PARAM 'KR'=_SV_KR
0970 EXIT 
1000 ! load the sequence range
1010 LOAD_RANGE:
1020 SWITCH RPT_SEQ$
1030 CASE "1"
1040 IF NUL(RNG$(1,10)) THEN CUST_START$="" ELSE CUST_START$=RNG$(1,10)
1050 IF RNG$(11,3)="~~~" THEN CUST_END$="" ELSE CUST_END$=RNG$(11,10)
1055 NEXTFOLDER_FLG=FLDR.AR1.1.CTL; REFRESH_FLG=1
1058 RETURN 
1060 CASE "2"
1070 IF NUL(RNG$(1,4)) THEN SLS_START$="" ELSE SLS_START$=RNG$(1,4)
1080 IF RNG$(5,3)="~~~" THEN SLS_END$="" ELSE SLS_END$=RNG$(5,4)
1090 NEXTFOLDER_FLG=FLDR.AR1.13.CTL; REFRESH_FLG=1
1095 RETURN 
1100 CASE "3"
1103 IF NUL(RNG$(1,4)) THEN SLS_START$="" ELSE SLS_START$=RNG$(1,4)
1106 IF NUL(RNG$(5,9)) THEN CAT_START$="" ELSE CAT_START$=RNG$(5,9)
1110 IF RNG$(14,3)="~~~" THEN SLS_START$="" ELSE SLS_START$=RNG$(14,4)
1120 IF RNG$(18,3)="~~~" THEN CAT_END$="" ELSE CAT_END$=RNG$(18,9)
1130 NEXTFOLDER_FLG=FLDR.AR1.11.CTL; REFRESH_FLG=1
1135 RETURN 
1140 CASE "4"
1150 IF NUL(RNG$(1,9)) THEN CAT_START$="" ELSE CAT_START$=RNG$(1,9)
1160 IF RNG$(10,3)="~~~" THEN CAT_END$="" ELSE CAT_END$=RNG$(10,9)
1190 NEXTFOLDER_FLG=FLDR.AR1.12.CTL; REFRESH_FLG=1
1200 RETURN 
1210 CASE "5"
1220 IF NUL(RNG$(1,4)) THEN SLS_START$="" ELSE SLS_START$=RNG$(1,4)
1230 IF RNG$(5,3)="~~~" THEN SLS_END$="" ELSE SLS_END$=RNG$(5,4)
1240 NEXTFOLDER_FLG=FLDR.AR1.10.CTL; REFRESH_FLG=1
1250 RETURN 
1490 END SWITCH 
1500 RETURN 
3800 CHECK_CHANGES:
3805 GOSUB LOAD_OPTIONS
3810 IF CHG_FLG=0 THEN RETURN 
3830 MSGBOX MSG("UPD_RPT_1")+SEP+MSG("UPD_RPT_2"),MSG("CONFIRM"),"?,YESNO",ANS$
3840 IF ANS$="NO" THEN RETURN 
3850 WRITE (Z[1],KEY=KEY_1$)IOL=0170,IOL=0180
3860 B_ZZS$=ZZS$; B_PRT$=PRT$; B_RNG$=RNG$; B_RNG{ALL}=RNG{ALL}; CHG_FLG=0
3870 RETURN 
8000 ! Message
8010 ADD_OPT:
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN CMD_STR$="END"; RETURN 
8040 KEY_1$="AR2SCA"+RPT_SELEC$
8050 DIM ZZS$(120),RNG$(100); ZZS$(1,18)=KEY_1$; ZZS$(71,1)="1"
8060 GOSUB SELECT_OPTIONS
8070 REFRESH_FLG=1; NEXT_ID=RPT_DESC.CTL
8090 RETURN 
9999 END 
17000 ! 
20000 LOAD_OPTIONS:
20010 ! View Report Routine.
20020 ! 
20030 ZZS$(1,6)=PRG_NAME$
20040 ZZS$(7,12)=RPT_SELEC$; ZZS$(19,40)=RPT_DESC$
20050 ZZS$(59,12)=RPT_OPT$; ZZS$(71,1)=RPT_SEQ$
20060 ZZS$(74,4)=RPT_FISYR$; ZZS$(78,2)=RPT_PER$
20065 TF_LIST$="0123456789ABCDEF"
20070 RNG[0]=POS(RPT_SHIPTO$=TF_LIST$)-1; RNG[1]=RPT_NUM1
20080 ZZS$(80,2)="10"
20100 ! 
20110 PRT$(1,1)=PRT_MODE$; PRT$(2,2)=RPT_OUTDEV$
20120 PRT$(9,1)=RPT_VERT$; PRT$(10,1)=RPT_HORIZ$
20130 PRT$(11,1)=RPT_AUX1$; PRT$(12,1)=RPT_AUX2$
20140 PRT$(13,1)=RPT_AUX3$; PRT$(14,1)=RPT_AUX4$
20150 PRT$(15,2)=RPT_LINES$; PRT$(17,1)=RPT_FORMCODE$
20160 PRT$(65,60)=RPT_JOBCARD$; PRT$(125,1)=RPT_JOBCARD_FLG$
20170 ! 
20175 RNG$=""
20180 ! 
20190 IF RPT_SEQ$="1" THEN {
20200 T1$="AR1..."
20210 GOSUB GET_CUST_RANGE }
20220 IF RPT_SEQ$="2" OR RPT_SEQ$="5" THEN {
20230 T1$="AR3..."
20240 GOSUB GET_SLSMAN_RANGE }
20260 IF RPT_SEQ$="3" THEN {
20270 T1$="AR3..."
20280 IF NUL(SLS_START$) THEN RNG$+="    " ELSE RNG$+=SLS_START$
20290 IF NUL(CAT_START$) THEN RNG$+="         " ELSE RNG$+=CAT_START$
20300 IF NUL(SLS_END$) THEN RNG$+="~~~~" ELSE RNG$+=SLS_END$
20310 IF NUL(CAT_END$) THEN RNG$+="~~~~~~~~~" ELSE RNG$+=CAT_END$ }
20320 IF RPT_SEQ$="4" THEN {
20330 T1$="ARG..."
20340 GOSUB GET_CAT_RANGE }
20400 IF B_ZZS$=ZZS$ AND B_PRT$=PRT$ AND B_RNG$=RNG$ AND B_RNG[0]=RNG[0] AND B_RNG[1]=RNG[1] THEN CHG_FLG=0 ELSE CHG_FLG=1
20490 RETURN 
25000 ! 
25010 PRINT_REPORT:
25020 IF NOT(NUL(VIEW$)) THEN PRT$(2,2)=VIEW$
25030 K$=X3$(1,8)
25040 %B_WINDATE_FMT$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD",JJ$=DTE(0:"%Yl%Mz%Dz"); CALL "ZZWDTE;VALIDATE",JJ$,JJJ$,JJJJ$; X3$(21,6)=JJ$
25050 WRITE (Z[7],KEY=K$)X3$,X4$,T1$,PRT$,RNG$,IOL=0170
25060 CALL "AR2SUA"
25065 FF=FN%FFN("SA1"+X3$(1,3)); IF FF>0 THEN CLOSE (FF) ! [205471]-changed FFN() to FN%FFN()
25070 CMD_STR$="END"
25080 RETURN 
28000 ! 
28010 GET_CUST_RANGE:
28020 IF NUL(CUST_START$) THEN RNG$+="          " ELSE RNG$+=CUST_START$
28030 IF NUL(CUST_END$) THEN RNG$=RNG$+"~~~~~~~~~~" ELSE RNG$=RNG$+CUST_END$ }
28040 RETURN 
28050 ! 
28060 GET_SLSMAN_RANGE:
28070 IF NUL(SLS_START$) THEN RNG$+="    " ELSE RNG$+=SLS_START$
28080 IF NUL(SLS_END$) THEN RNG$+="~~~~" ELSE RNG$+=SLS_END$
28090 RETURN 
28100 ! 
28110 GET_CAT_RANGE:
28120 IF NUL(CAT_START$) THEN RNG$+="         " ELSE RNG$=RNG$+CAT_START$
28130 IF NUL(CAT_END$) THEN RNG$=RNG$+"~~~~~~~~~" ELSE RNG$=RNG$+CAT_START$
28140 RETURN 
28150 ! 
28160 GET_SHIPTO_RANGE:
28170 IF NUL(SHIPTO_START$) THEN RNG$=RNG$+"    " ELSE RNG$=RNG$+SHIPTO_START$
28180 IF NUL(SHIPTO_END$) THEN RNG$=RNG$+"~~~~" ELSE RNG$=RNG$+SHIPTO_END$
28190 RETURN 
30180 LOAD_FISCAL_YEAR:
30210 READ (Z[6],KEY=%C$+"A/R",DOM=*NEXT)GL_REC$; CR_YEAR$=GL_REC$(7,4),CR_PD$=GL_REC$(11,2)
30215 IF NUL(RPT_FISYR$)=0 THEN CR_YEAR$=RPT_FISYR$
30220 KE$=%C$+"G/LYE",RPT_FISYR$=""
30230 READ (Z[6],KEY=KE$,DOM=*NEXT)
30240 K$=KEY(Z[6],END=30280); READ (Z[6])Z9$
30250 IF LEN(K$)<8 OR KE$<>K$(1,8) THEN GOTO END_LOAD_FISCAL_YEAR
30260 RPT_FISYR$=RPT_FISYR$+K$(9)+"/"
30265 IF K$(9,4)=CR_YEAR$ THEN CC$=Z9$(21)
30270 GOTO 30240
30280 END_LOAD_FISCAL_YEAR:
30290 DROP_BOX LOAD RPT_FISYR.CTL,RPT_FISYR$
30300 DROP_BOX WRITE RPT_FISYR.CTL,CR_YEAR$
30310 DROP_BOX LOAD END_FISCAL.CTL,RPT_FISYR$
30320 DROP_BOX WRITE END_FISCAL.CTL,CR_YEAR$
30321 RPT_FISYR$=CR_YEAR$
30322 IF NUL(RPT_PER$)=0 THEN CR_PD$=RPT_PER$
30325 RPT_PER$=""
30330 FOR ACCT=1 TO 12; RPT_PER$=RPT_PER$+STR(ACCT:"00")+"/"; NEXT ACCT
30340 DROP_BOX LOAD RPT_PER.CTL,RPT_PER$
30350 DROP_BOX WRITE RPT_PER.CTL,CR_PD$
30355 RPT_PER$=CR_PD$
30360 END_ACCTPD$=RPT_PER$
30370 DROP_BOX LOAD END_ACCTPD.CTL,RPT_PER$
30380 DROP_BOX WRITE END_ACCTPD.CTL,CR_PD$
30390 RETURN 
32000 LOAD_ENDING_DATE:
32005 IF LEN(RPT_FISYR$)>4 THEN VAL$=CR_YEAR$ ELSE VAL$=RPT_FISYR$
32010 FIND (Z[6],KEY=KE$+VAL$)Z9$; CC$=Z9$(21)
32011 IF LEN(RPT_PER$)>2 THEN VAL=NUM(CR_PD$) ELSE VAL=NUM(RPT_PER$)
32020 CC$=CC$(VAL*6-5,6),RPT_ENDING$=CC$,REFRESH_FLG=1
32030 RETURN 
40000 SEL_QRY:ENTER PRIME_KEY$
40010 IF NUL(MID(PRIME_KEY$,7,6)) THEN EXIT 123
40020 EXIT 
40025 ! 
40030 LOAD_SORT_OPTIONS:
40040 IF LEN(RPT_FISYR$)=4 THEN PREV_YR$=STR(NUM(RPT_FISYR$)-1) ELSE PREV_YR$=STR(NUM(CR_YEAR$)-1)
40050 SORT_LIST$=""; IF NUL(RPT_SHIPTO$)=0 THEN CR_SHIPTO$=RPT_SHIPTO$
40060 SORT_LIST$="None"+"/"
40070 ! SORT_LIST$=SORT_LIST$+"Sales Period "+RPT_PER$+", "+RPT_FISYR$+"/"
40080 NP=NUM(RPT_PER$); NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40090 SORT_LIST$=SORT_LIST$+"Sales Period "+RPT_PER$+", "+PREV_YR$+"/"
40100 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40110 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40120 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40130 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40140 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40150 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40160 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40170 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40180 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40190 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40200 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40210 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40220 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40230 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40240 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40250 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40260 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40270 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40280 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40290 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40300 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40310 SORT_LIST$=SORT_LIST$+"Sales Period "+NEXT_PER$+", "+PREV_YR$+"/"
40320 NP=NUM(NEXT_PER$); NP=NP+1; NEXT_PER$=STR(NP:"00"); IF NP>12 THEN NP=1; NEXT_PER$=STR(NP:"00"); PREV_YR$=STR(NUM(PREV_YR$)+1)
40321 SORT_LIST$=SORT_LIST$+"Sales Period "+RPT_PER$+", "+RPT_FISYR$+"/"
40322 SORT_LIST$=SORT_LIST$+"Last 12 Periods"+"/"
40324 SORT_LIST$=SORT_LIST$+"Last 3 Periods"+"/"
40330 DROP_BOX LOAD RPT_SHIPTO.CTL,SORT_LIST$
40340 DROP_BOX WRITE RPT_SHITO.CTL,CR_SHIPTO$
40350 RETURN 
56000 REM + Modification History
56002 REM "205471-Oracle - FFN usage in tf2g progs. to be replaced by FN%FFN  
56004 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
