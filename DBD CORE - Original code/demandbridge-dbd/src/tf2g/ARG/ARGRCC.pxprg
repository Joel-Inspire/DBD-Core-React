0010 ! ARGRCC - Specific Finance Charge Posting      
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Feb. 11, 2003 10:52
0030 ! ************************************************************************
0035 REM "5.7 - 07/09/12 - 16.480277 - tma - SSP# 256478
0037 REM "256478-Updating finance charges and getting an error               
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ARGRCC","../ARG/AR.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0155 X2=-1; X0=-2; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
0160 DIM Z[NUM(X3$(60,3))],A[18],C[15],E[3],G[2],S[11],Y[4]
0165 Z$="01X ARR...  02O ARS...  03O AR1...  04O ZYB... 05O AR2... 07O AR5...  08O ZY0...  09O AR3...  10O GL1... 12O ARG...  06O ZZPARM  13O ARI...  "
0170 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0175 ! IOList
0180 IOLIST Y[0],Y[1],Y[2],Y[3],Y[4]
0182 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15],A[16],A[17],A[18]
0184 IOLIST B$
0186 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15]
0188 IOLIST D$
0190 IOLIST E$,E[0],E[1],E[2],E[3]
0192 IOLIST G$,G[0],G[1],G[2]
0194 IOLIST H$
0196 IOLIST I$
0198 IOLIST S$,S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[8],S[9],S[10],S[11]
0200 ! 
0205 GOSUB CHECK_AUDIT_RUN
0440 _KEY1=1
0450 GOSUB GET_PARAM
0470 GOSUB LOAD_OVER
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0530 GOSUB CLEAR_CUST_FIELDS
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(Z[1],ERR=*NEXT)
0930 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
8500 ! Load Over Description
8510 LOAD_OVER:
8520 IF NUL(P$) THEN RETURN 
8530 OVER_1$=P$(56,8)
8540 OVER_2$=P$(64,8)
8550 OVER_3$=P$(72,8)
8560 OVER_4$=P$(80,8)
8590 RETURN 
9000 ! Get the system Parameters
9010 GET_PARAM:
9020 READ (Z[6],KEY=X3$(9,3)+"A/R",DOM=*NEXT)P$
9090 RETURN 
9999 END 
17000 ! Check audit reports
17010 CHECK_AUDIT_RUN:
17020 FIND (Z[1],KEY="",DOM=*RETURN)V0$,K0$
17030 IF K0$>"" THEN MSGBOX "Then update has already been Initiated"; PERFORM "ARGRCC;wrapup"
17040 EXTRACT (Z[1],KEY="",ERR=WRAPUP)
17050 MSG_1$="Audit Report "+V0$(22,4)+"."+V0$(26,2)+" has already been printed for this data entry"
17060 MSGBOX MSG_1$
17070 REMOVE (Z[1],KEY="")
17080 RETURN 
17200 ! check the invoice number...
17210 CHECK_INV_NUM:
17220 IF INV_NUM$="A" THEN GOSUB GET_NEXT_INV_NUM; PERFORM "ARGRCC;ADD_NEW_INV"
17230 INV_NUM$=PAD(INV_NUM$,7,0,"0")+" "; REFRESH_FLG=1
17240 KEY_1$=FY$+ACCTPD$+INV_NUM$
17250 READ (Z[1],KEY=KEY_1$,DOM=NO_INV_MSGBOX)IOL=0182
17255 CUSTOMER$=A$(15,2)+A$(17,8); CUST_NAME$=A$(25,35); INV_DATE$=A$(86,6)
17260 INV_DUE_DATE$=A$(116,6); CUST_CATEGORY$=A$(153,9)
17265 GOSUB GET_CUST_INFO
17280 GOSUB GET_TERMS_CODE; GOSUB GET_SALESMAN_INFO
17285 FIN_CHG=A[1]; BUTTON SHOW PROCEED.CTL; BUTTON ENABLE PROCEED.CTL; BUTTON SHOW BTN_DELETE.CTL; BUTTON ENABLE BTN_DELETE.CTL; BUTTON HIDE BTN_EXIT.CTL; NEXT_ID=PROCEED.CTL
17290 CALL "*WINGRP;SHOW",SAVE.GRP$
17385 REFRESH_FLG=1
17390 RETURN 
17400 ! Get the next Invoice Number
17410 GET_NEXT_INV_NUM:
17415 INV_NUM$=""
17420 EXTRACT (Z[6],KEY=X3$(9,3)+"ARFC",DOM=WRAPUP)P9$
17430 INV_NUM$=P9$(1,7)+" "
17440 P0=NUM(P9$(1,7)),P0=P0+1; IF P0>9999999 THEN P0=1
17450 P9$(1,7)=STR(P0:"0000000"); WRITE (Z[6],KEY=X3$(9,3)+"ARFC")P9$
17460 KEY_1$=FY$+ACCTPD$+INV_NUM$
17470 FIND (Z[1],KEY=KEY_1$,DOM=*NEXT); GOTO 17420
17480 REFRESH_FLG=1
17490 RETURN 
17600 ! add new invoice
17610 NO_INV_MSGBOX:
17620 MSG_1$="Record is not on file"+SEP+"Would you like to ADD?"
17630 MSGBOX MSG_1$,"Invoice Not Found","YesNo",ANS$
17640 IF ANS$="NO" THEN INV_NUM$=""; NEXT_ID=INV_NUM.CTL; REFRESH_FLG=1; RETURN 
17650 PERFORM "ARGRCC;ADD_NEW_INV"
17690 RETURN 
17800 ! Add New Fianance Charge Invoice
17810 ADD_NEW_INV:
17840 NEXT_ID=CUSTOMER.CTL
17843 CALL "*WINGRP;SHOW",SAVE.GRP$
17845 NEW_FLG=1
17850 REFRESH_FLG=1
17860 EXIT 
18000 ! Calculate Finance Charge
18010 CALC_FINANCE_CHG:
18015 T9=C[12]+C[11]+C[10]+C[9]+C[8]
18020 T8=0; IF T9=0 THEN RETURN 
18030 DIM S$(49); KEY_8$=C$(132,2)
18040 READ (Z[8],KEY=KEY_8$,DOM=*RETURN)IOL=0198
18050 ! Find Rate
18060 FOR I1=1 TO 9 STEP 2
18070 IF S[I1]=0 OR CUM_BAL5<S[I1] THEN R=S[I1-1]; EXITTO 18100
18080 NEXT I1
18090 R=S[10]
18100 IF R=0 THEN FIN_CHG5=0
18110 FIN_CHG5=CUM_BAL5*R/1200
18120 IF FIN_CHG5<S[10] THEN FIN_CHG5=S[0]
18130 ! 
18140 FOR I2=1 TO 9 STEP 2
18150 IF S[I2]=0 OR CUM_BAL4<S[I2] THEN R=S[I2-1]; EXITTO 18180
18160 NEXT I2
18170 R=S[10]
18180 IF R=0 THEN FIN_CHG4=0
18190 FIN_CHG4=CUM_BAL4*R/1200
18200 IF FIN_CHG4<S[10] THEN FIN_CHG4=S[0]
18210 ! 
18220 FOR I3=1 TO 9 STEP 2
18230 IF S[I3]=0 OR CUM_BAL3<S[I3] THEN R=S[I3-1]; EXITTO 18260
18240 NEXT I3
18250 R=S[10]
18260 IF R=0 THEN FIN_CHG3=0
18270 FIN_CHG3=CUM_BAL3*R/1200
18280 IF FIN_CHG3<S[10] THEN FIN_CHG3=S[0]
18290 ! 
18300 FOR I4=1 TO 9 STEP 2
18310 IF S[I4]=0 OR CUM_BAL2<S[I4] THEN R=S[I4-1]; EXITTO 18340
18320 NEXT I4
18330 R=S[10]
18340 IF R=0 THEN FIN_CHG2=0
18350 FIN_CHG2=CUM_BAL2*R/1200
18360 IF FIN_CHG2<S[10] THEN FIN_CHG2=S[0]
18370 ! 
18380 FOR I5=1 TO 9 STEP 2
18390 IF S[I5]=0 OR CUM_BAL1<S[I5] THEN R=S[I5-1]; EXITTO 18420
18400 NEXT I5
18410 R=S[10]
18420 IF R=0 THEN FIN_CHG1=0
18430 FIN_CHG1=CUM_BAL1*R/1200
18440 IF FIN_CHG1<S[10] THEN FIN_CHG1=S[0]
18450 ! 
18460 RETURN 
18500 ! Get and Load data for New Invoice
18510 WRITE_NEW_INV:
18530 GOSUB GET_TERMS_CODE
18540 GOSUB GET_SALESMAN_INFO
18550 DIM A$(393," ") ! SSP#256478
18560 A$(1,4)=FY$; A$(5,2)=ACCTPD$; A$(7,8)=INV_NUM$; A$(15,10)=CUSTOMER$
18570 A$(25,35)=C$(11,35); A$(65,2)=C$(359,2); A$(67,10)=C$(235,10); A$(86,6)=INV_DATE$
18580 A$(115,1)=C$(245,1); A$(116,6)=INV_DUE_DATE$; A$(100,15)="Finance Charge "
18590 A$(77,1)="F"; A$(133,20)=C$(278,20); A$(153,9)=CUST_CATEGORY$; A$(60,1)="N"
18600 A[1]=FIN_CHG; A[9]=FIN_CHG
18700 ! 
18710 IF NUL(KEY_1$)=0 THEN KEY_1$=FY$+ACCTPD$+INV_NUM$
18720 WRITE (Z[1],KEY=KEY_1$)IOL=0182
18780 BUTTON SHOW PROCEED.CTL; BUTTON ENABLE PROCEED.CTL; NEXT_ID=PROCEED.CTL
18782 BUTTON SHOW BTN_DELETE.CTL; BUTTON ENABLE BTN_DELETE.CTL
18783 BUTTON HIDE BTN_EXIT.CTL
18785 REFRESH_FLG=1
18790 RETURN 
18800 ! Clear Invoice Fields
18810 CLEAR_INV_FIELDS:
18820 ! 
18830 INV_NUM$=""
18890 RETURN 
18900 ! clear customer fields
18910 CLEAR_CUST_FIELDS:
18920 CUSTOMER$=""; CUST_NAME$=""; ADDRESS_1$=""; ADDRESS_2$=""
18930 CITY$=""; TF_STATE$=""; ZIP$=""
18940 BAL_120=0; BAL_90=0; BAL_60=0; BAL_30=0; CURR_BAL=0
18950 CUM_BAL1=0; CUM_BAL2=0; CUM_BAL3=0; CUM_BAL4=0; CUM_BAL5=0
18960 FIN_CHG1=0; FIN_CHG2=0; FIN_CHG3=0; FIN_CHG4=0; FIN_CHG5=0
18970 INV_DATE$=""; FIN_CHG=0; INV_DUE_DATE$=""; CUST_CATEGORY$=""
18990 RETURN 
19000 ! Journal Entry Section.
19010 JOURNAL_ENTRY:
19020 ! 
19025 DIM T[1]
19030 X3$(15,6)=A$(86,6),L0=1,F=Z[2],A0=A[0],V1=0,V9=-2,V3=Z[10],T[0]=A[1]
19040 PERFORM "GLGXAA"
19050 NEXT_ID=INV_NUM.CTL
19060 ID_FLG=1
19070 REFRESH_FLG=1
19090 RETURN 
19200 ! load General Ledger Index
19210 LOAD_GL_IDX:
19220 ! 
19230 A[0]=DEC(Y$(1,2))
19240 WRITE (Z[1],KEY=KEY_1$)IOL=0182
19250 NEXT_ID=INV_NUM.CTL
19260 REFRESH_FLG=1
19290 RETURN 
20000 ! Get customers information
20010 GET_CUST_INFO:
20020 KEY_3$=CUSTOMER$
20030 READ (Z[3],KEY=KEY_3$,DOM=*RETURN)IOL=0186
20035 CUST_NAME$=C$(11,35)
20040 ADDRESS_1$=C$(56,30); ADDRESS_2$=C$(86,30); CITY$=C$(116,16)
20050 TF_STATE$=C$(132,2); ZIP$=C$(134,9)
20055 CUST_CATEGORY$=C$(220,9)
20060 CURR_BAL=C[8]; BAL_30=C[9]; BAL_60=C[10]; BAL_90=C[11]; BAL_120=C[12]
20070 CUM_BAL5=C[12]; CUM_BAL4=C[12]+C[11]; CUM_BAL3=C[12]+C[11]+C[10]; CUM_BAL2=C[12]+C[11]+C[10]+C[9]; CUM_BAL1=C[12]+C[11]+C[10]+C[9]+C[8]
20080 GOSUB CALC_FINANCE_CHG
20085 REFRESH_FLG=1
20090 RETURN 
20100 ! Customer terms code
20110 GET_TERMS_CODE:
20120 KEY_5$=C$(359,2)
20130 READ (Z[5],KEY=KEY_5$,DOM=*NEXT)IOL=0190
20140 RETURN 
20200 ! Salesman Information
20210 GET_SALESMAN_INFO:
20220 KEY_9$=C$(278,4)
20230 READ (Z[9],KEY=KEY_9$,DOM=*NEXT)IOL=0196
20240 RETURN 
21000 ! delete Invoice Record
21010 DELETE_INV_INFO:
21015 GOSUB DELETE_VERIFY
21020 IF A[0]=0 THEN GOTO 21100
21030 EXTRACT (Z[2],IND=0,ERR=*RETURN)IOL=0180
21040 IF Y[4]=-2 THEN READ (Z[2],IND=0); WAIT 0; GOTO 21030 ELSE Y[4]=-2; WRITE (Z[2],IND=0)IOL=0180
21050 A1=Y[1],Y[1]=A[0],Y[0]=Y[0]-1
21060 READ (Z[2],IND=A[0])A9; IF A9>0 THEN Y[0]=Y[0]-1,A[0]=A; GOTO 21060
21070 WRITE (Z[2],IND=A[0])A1
21080 Y[4]=-1; WRITE (Z[2],IND=0)IOL=0180
21090 ! 
21100 REMOVE (Z[1],KEY=KEY_1$)
21105 MSG_1$="Finance Charge Invoice #: "+INV_NUM$+" has been deleted"
21107 MSGBOX MSG_1$,"Invoice Deleted"
21110 NEXT_ID=INV_NUM.CTL
21120 REFRESH_FLG=1
21130 RETURN 
21300 ! Verify Delete of Invoice Info
21310 DELETE_VERIFY:
21320 ! 
21330 MSG_1$="Are you sure you want to DELETE this entry?"
21340 MSGBOX MSG_1$,"Verify Invoice Delete","YesNo",ANS$
21350 IF ANS$="NO" THEN {
21360 NEXT_ID=PROCEED.CTL
21370 EXIT  }
21380 RETURN 
30180 LOAD_FISCAL_YEAR:
30190 ZZPARM=HFN
30200 OPEN (ZZPARM)"ZZPARM"
30210 READ (ZZPARM,KEY=%C$+"G/L",DOM=*NEXT)GL_REC$; CR_YEAR$=GL_REC$(34,4),CR_PD$=GL_REC$(38,2)
30215 IF NUL(FY$)=0 THEN CR_YEAR$=FY$
30220 KE$=%C$+"G/LYE",FY$=""
30230 READ (ZZPARM,KEY=KE$,DOM=*NEXT)
30240 K$=KEY(ZZPARM,END=30280); READ (ZZPARM)Z9$
30250 IF LEN(K$)<8 OR KE$<>K$(1,8) THEN GOTO END_LOAD_FISCAL_YEAR
30260 FY$=FY$+K$(9)+"/"
30265 IF K$(9,4)=CR_YEAR$ THEN CC$=Z9$(21)
30270 GOTO 30240
30280 END_LOAD_FISCAL_YEAR:
30290 DROP_BOX LOAD FY.CTL,FY$
30300 DROP_BOX WRITE FY.CTL,CR_YEAR$
30310 DROP_BOX LOAD END_FISCAL.CTL,FY$
30320 DROP_BOX WRITE END_FISCAL.CTL,CR_YEAR$
30322 FY$=CR_YEAR$; IF NUL(ACCTPD$)=0 THEN CR_PD$=ACCTPD$
30325 ACCTPD$=""
30330 FOR ACCT=1 TO 12; ACCTPD$=ACCTPD$+STR(ACCT:"00")+"/"; NEXT ACCT
30340 DROP_BOX LOAD ACCTPD.CTL,ACCTPD$
30350 DROP_BOX WRITE ACCTPD.CTL,CR_PD$
30360 END_ACCTPD$=ACCTPD$
30370 DROP_BOX LOAD END_ACCTPD.CTL,ACCTPD$
30380 DROP_BOX WRITE END_ACCTPD.CTL,CR_PD$
30383 ACCTPD$=CR_PD$
30385 GOSUB LOAD_ENDING_DATE
30390 RETURN 
32000 LOAD_ENDING_DATE:
32005 IF LEN(FY$)>4 THEN VAL$=CR_YEAR$ ELSE VAL$=FY$
32010 FIND (ZZPARM,KEY=KE$+VAL$)Z9$; CC$=Z9$(21)
32011 IF LEN(ACCTPD$)>2 THEN VAL=NUM(CR_PD$) ELSE VAL=NUM(ACCTPD$)
32020 CC$=CC$(VAL*6-5,6),END_DATE$=CC$,REFRESH_FLG=1
32030 RETURN 
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
