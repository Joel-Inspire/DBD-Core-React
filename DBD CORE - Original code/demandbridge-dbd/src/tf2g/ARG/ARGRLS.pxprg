0010 ! ARGRLS - File Maintenance Program for ZZS_Rpt_selection (="ZZS"+%C$)
0015 ! Commissions Booking
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Nov. 8, 2002 10:36
0030 ! ************************************************************************
0035 REM "5.7 - 09/23/10 - 12.616666 - jvv - SSP# 240570
0037 REM "240570-GUI Printing - Support for queueing and scheduling reports. 
0040 REM "Copyright 2010 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ARGRLS","../ARG/AR.EN"
0060 EXIT 
0090 ! 
0100 ! !100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 X0=-1,X2=-1
0140 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0150 DIM ZZS$(78),PRT$(125),ZZS[4],RNG[4],B_ZZS[4]
0160 ! iolist
0170 IOLIST ZZS$(1)
0175 IOLIST PRT$(1),RNG$,RNG{ALL}
0180 ! Open Files
0190 DIM Z[NUM(X3$(60,3))]
0200 Z$="01O ZZS...  02O AR3...  06O ZZPARM  07O ZZP     "
0210 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0400 ! 
0410 RPT_SELEC$="            "; VIEW$=""
0485 PRT_MODES$="QS" ! SSP 240570
0490 RETURN 
0500 ! !500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 KEY_1$="AR2RLA"+RPT_SELEC$; %K9$="AR2RLA"
0530 READ (Z[1],KEY=KEY_1$,DOM=ADD_OPT)IOL=0170,IOL=0175
0540 B_ZZS$=ZZS$; B_PRT$=PRT$; B_RNG$=RNG$; CHG_FLG=0
0580 GOSUB SELECT_OPTIONS
0590 RETURN 
0600 ! Select Options
0610 SELECT_OPTIONS:
0620 PRG_NAME$=ZZS$(1,6); RPT_SELEC$=ZZS$(7,12); RPT_DESC$=ZZS$(19,40)
0630 RPT_OPT$=ZZS$(59,12); RPT_SEQ$=ZZS$(71,1)
0640 RPT_SHIPTO$=ZZS$(74,1); RPT_ZEROBAL$=ZZS$(75,1)
0800 ! Output Options
0810 PRT_MODE$=PRT$(1,1); RPT_OUTDEV$=PRT$(2,6)
0820 RPT_VERT$=PRT$(9,1); RPT_HORIZ$=PRT$(10,1)
0830 RPT_AUX1$=PRT$(11,1); RPT_AUX2$=PRT$(12,1); RPT_AUX3$=PRT$(13,1); RPT_AUX4$=PRT$(14,1)
0840 RPT_LINES$=PRT$(15,2); RPT_FORMCODE$=PRT$(17,1)
0850 RPT_JOBCARD$=PRT$(65,60); RPT_JOBCARD_FLG$=PRT$(125,1)
0860 GOSUB LOAD_RANGE
0870 NEXT_ID=RPT_VEIW.CTL
0890 RETURN 
0900 WRAPUP:
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0920 SET_PARAM 'KR'=_SV_KR
0930 EXIT 
1000 ! Load the default range
1010 LOAD_RANGE:
1020 IF NUL(RNG$(1,4)) THEN START_FISCAL$="" ELSE START_FISCAL$=RNG$(1,4)
1030 IF RNG$(5,3)="~~~" THEN END_FISCAL$="" ELSE END_FISCAL$=RNG$(5,4)
1040 IF NUL(RNG$(9,2)) THEN START_ACCTPD$="" ELSE START_ACCTPD$=RNG$(9,2)
1050 IF RNG$(11,2)="~~" THEN END_ACCTPD$="" ELSE END_ACCTPD$=RNG$(11,2)
1053 IF NUL(RNG$(13,4)) THEN SLS_START$="" ELSE SLS_START$=RNG$(13,4)
1056 IF RNG$(17,3)="~~~" THEN SLS_END$="" ELSE SLS_END$=RNG$(17,4)
1060 IF NUL(RNG$(21,10)) THEN CUST_START$="" ELSE CUST_START$=RNG$(21,10)
1070 IF RNG$(31,3)="~~~" THEN CUST_END$="" ELSE CUST_END$=RNG$(31,10)
1080 IF NUL(RNG$(41,8)) THEN INV_START$="" ELSE INV_START$=RNG$(41,8)
1090 IF RNG$(49,3)="~~~" THEN INV_END$="" ELSE INV_END$=RNG$(49,8)
1500 RETURN 
3790 ! 
3800 CHECK_CHANGES:
3810 GOSUB LOAD_OPTIONS
3820 IF CHG_FLG=0 THEN RETURN 
3825 MSGBOX MSG("UPD_RPT_1")+SEP+MSG("UPD_RPT_2"),MSG("CONFIRM"),"?,YESNO",ANS$
3850 IF ANS$="NO" THEN RETURN 
3860 WRITE (Z[1],KEY=KEY_1$)IOL=0170,IOL=0175
3870 B_ZZS$=ZZS$; B_PRT$=PRT$; B_RNG$=RNG$; CHG_FLG=0
3880 RETURN 
3890 ! 
8000 ! Message
8010 ADD_OPT:
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN CMD_STR$="END"; RETURN 
8040 KEY_1$="AR2RLA"+RPT_SELEC$
8050 DIM ZZS$(78),RNG$(100); ZZS$(1,18)=KEY_1$; ZZS$(71,1)="1"
8060 GOSUB SELECT_OPTIONS
8070 REFRESH_FLG=1; NEXT_ID=RPT_DESC.CTL
8090 RETURN 
9999 END 
20000 LOAD_OPTIONS:
20010 ! View Report Routine.
20020 ! 
20030 ZZS$(1,6)=PRG_NAME$
20040 ZZS$(7,12)=RPT_SELEC$; ZZS$(19,40)=RPT_DESC$
20050 ZZS$(59,12)=RPT_OPT$; ZZS$(71,1)=RPT_SEQ$
20060 ZZS$(73,1)="N"
20070 ZZS$(74,1)=RPT_SHIPTO$; ZZS$(75,1)=RPT_ZEROBAL$
20090 ! 
20100 PRT$(1,1)=PRT_MODE$; PRT$(2,2)=RPT_OUTDEV$
20110 PRT$(9,1)=RPT_VERT$; PRT$(10,1)=RPT_HORIZ$
20120 PRT$(11,1)=RPT_AUX1$; PRT$(12,1)=RPT_AUX2$
20130 PRT$(13,1)=RPT_AUX3$; PRT$(14,1)=RPT_AUX4$
20140 PRT$(15,2)=RPT_LINES$; PRT$(17,1)=RPT_FORMCODE$
20150 PRT$(65,60)=RPT_JOBCARD$; PRT$(125,1)=RPT_JOBCARD_FLG$
20160 ! 
20165 RNG$=""
20167 ! 
20170 IF RPT_SEQ$="1" THEN {
20180 T1$="ARM..."
20185 GOSUB GET_FISCAL_YEAR
20190 GOSUB GET_ACCOUNT_PERIOD
20195 GOSUB GET_SALESMAN
20197 GOSUB GET_CUSTOMER
20200 GOSUB GET_INVOICE_NUMBER }
20210 RNG$+="     ~~~~~"
20300 IF B_ZZS$=ZZS$ AND B_PRT$=PRT$ AND B_RNG$=RNG$ THEN CHG_FLG=0 ELSE CHG_FLG=1
20390 RETURN 
25000 ! Print Report Routine.
25010 PRINT_REPORT:
25015 IF NOT(NUL(VIEW$)) THEN PRT$(2,2)=VIEW$
25020 K$=X3$(1,8)
25025 IF POS(PRT_MODE$="QS")>0 THEN GOSUB REPORT_PRINT_MODE; CMD_STR$="END"; RETURN ! SSP 240570
25030 WRITE (Z[7],KEY=K$)X3$,X4$,T1$,PRT$,RNG$,IOL=0170
25040 ! IF POS("B"=RPT_OPT$)>0 THEN PRINT 'DIALOGUE'(5,5,80,25,"Commission Booking Report"); CALL "AR2RLB"; PRINT 'POP' ELSE PRINT 'DIALOGUE'(5,5,80,25,"Commission Booking Report"); CALL "AR2RLA"; PRINT 'POP'
25045 IF POS("B"=RPT_OPT$)>0 THEN PRG_TO_CALL$="AR2RLB" ELSE PRG_TO_CALL$="AR2RLA"
25046 IF RB_PRT$>"0" THEN CALL "ZZ2DRV",PRG_TO_CALL$ ELSE CALL PRG_TO_CALL$,ERR=*NEXT
25050 CMD_STR$="END"
25060 RETURN 
27000 ! Get Parameters
27010 GET_PARAM:
27020 READ (Z[6],KEY=X3$(9,3)+"AR1")P0$
27090 RETURN 
30000 ! 
30010 GET_FISCAL_YEAR:
30020 IF NUL(START_FISCAL$) THEN RNG$+="    " ELSE RNG$+=START_FISCAL$
30030 IF NUL(END_FISCAL$) THEN RNG$=RNG$+"~~~~" ELSE RNG$=RNG$+END_FISCAL$
30040 RETURN 
30050 ! 
30060 GET_ACCOUNT_PERIOD:
30070 IF NUL(START_ACCTPD$) THEN RNG$+="  " ELSE RNG$+=START_ACCTPD$
30080 IF NUL(END_ACCTPD$) THEN RNG$+="~~" ELSE RNG$+=END_ACCTPD$
30090 RETURN 
30100 ! 
30110 GET_SALES_TAX:
30120 IF NUL(STAX_START$) THEN RNG$=RNG$+"          " ELSE RNG$=RNG$+STAX_START$
30130 IF NUL(STAX_END$) THEN RNG$=RNG$+"~~~~~~~~~~" ELSE RNG$=RNG$+STAX_END$
30140 RETURN 
30150 ! 
30160 GET_SHIPTO_RANGE:
30170 IF NUL(SHIPTO_START$) THEN RNG$=RNG$+"    " ELSE RNG$=RNG$+SHIPTO_START$
30180 IF NUL(SHIPTO_END$) THEN RNG$=RNG$+"~~~~" ELSE RNG$=RNG$+SHIPTO_END$
30190 RETURN 
30200 ! 
30210 GET_INVOICE_NUMBER:
30220 IF NUL(INV_START$) THEN RNG$=RNG$+"        " ELSE RNG$=RNG$+INV_START$
30230 IF NUL(INV_END$) THEN RNG$=RNG$+"~~~~~~~~" ELSE RNG$=RNG$+INV_END$
30235 RETURN 
30240 ! 
30250 GET_SALESMAN:
30260 IF NUL(SLS_START$) THEN RNG$+="    " ELSE RNG$+=SLS_START$
30270 IF NUL(SLS_END$) THEN RNG$+="~~~~" ELSE RNG$+=SLS_END$
30280 RETURN 
30290 ! 
30300 GET_CUSTOMER:
30310 IF NUL(CUST_START$) THEN RNG$+="          " ELSE RNG$+=CUST_START$
30320 IF NUL(CUST_END$) THEN RNG$+="~~~~~~~~~~" ELSE RNG$+=CUST_END$
30330 RETURN 
30340 ! 
40000 LOAD_FISCAL_YEAR:
40010 ZZPARM=HFN
40020 OPEN (ZZPARM)"ZZPARM"
40030 READ (ZZPARM,KEY=%C$+"G/L",DOM=*NEXT)GL_REC$; CR_YEAR$=GL_REC$(34,4),CR_PD$=GL_REC$(38,2)
40040 IF NUL(START_FISCAL$)=0 THEN SCR_YEAR$=START_FISCAL$ ELSE SCR_YEAR$=CR_YEAR$
40045 IF NUL(END_FISCAL$)=0 THEN ECR_YEAR$=END_FISCAL$ ELSE ECR_YEAR$=CR_YEAR$
40050 KE$=%C$+"G/LYE",START_FISCAL$=""
40060 READ (ZZPARM,KEY=KE$,DOM=*NEXT)
40070 K$=KEY(ZZPARM,END=40120); READ (ZZPARM)Z9$
40080 IF LEN(K$)<8 OR KE$<>K$(1,8) THEN GOTO END_LOAD_FISCAL_YEAR
40090 START_FISCAL$=START_FISCAL$+K$(9)+"/"
40100 IF K$(9,4)=CR_YEAR$ THEN CC$=Z9$(21)
40110 GOTO 40070
40120 END_LOAD_FISCAL_YEAR:
40130 DROP_BOX LOAD START_FISCAL.CTL,START_FISCAL$
40140 DROP_BOX WRITE START_FISCAL.CTL,SCR_YEAR$
40150 DROP_BOX LOAD END_FISCAL.CTL,START_FISCAL$
40160 DROP_BOX WRITE END_FISCAL.CTL,ECR_YEAR$
40170 START_FISCAL$=SCR_YEAR$
40175 END_FISCAL$=ECR_YEAR$
40180 IF NUL(START_ACCTPD$)=0 THEN SCR_PD$=START_ACCTPD$ ELSE SCR_PD$=CR_PD$
40185 IF NUL(END_ACCTPD$)=0 THEN ECR_PD$=END_ACCTPD$ ELSE ECR_PD$=CR_PD$
40190 START_ACCTPD$=""
40200 FOR ACCT=1 TO 12; START_ACCTPD$=START_ACCTPD$+STR(ACCT:"00")+"/"; NEXT ACCT
40210 DROP_BOX LOAD START_ACCTPD.CTL,START_ACCTPD$
40220 DROP_BOX WRITE START_ACCTPD.CTL,SCR_PD$
40230 END_ACCTPD$=START_ACCTPD$
40245 START_ACCTPD$=SCR_PD$
40250 DROP_BOX LOAD END_ACCTPD.CTL,END_ACCTPD$
40260 DROP_BOX WRITE END_ACCTPD.CTL,ECR_PD$
40265 END_ACCTPD$=ECR_PD$
40270 RETURN 
40280 LOAD_ENDING_DATE:
40290 IF LEN(START_FISCAL$)>4 THEN VAL$=CR_YEAR$ ELSE VAL$=START_FISCAL$
40300 FIND (ZZPARM,KEY=KE$+VAL$)Z9$; CC$=Z9$(21)
40310 IF LEN(START_ACCTPD$)>2 THEN VAL=NUM(CR_PD$) ELSE VAL=NUM(START_ACCTPD$)
40320 CC$=CC$(VAL*6-5,6),RPT_AGEDATE$=CC$,REFRESH_FLG=1
40330 RETURN 
45000 ! 
45005 REPORT_PRINT_MODE:
45010 IF POS("B"=RPT_OPT$)>0 THEN RPT_PGM$="AR2RLB" ELSE RPT_PGM$="AR2RLA"
45015 RPT_SPLIT$="" ! Separate File Option
45020 DIM RPT_OPTIONS$[10,20]
45030 ! Set variable names X3$,X4$,T1$,PRT$,RNG$,ZZS$ if required
45070 IF NOT(NUL(RB_PRT$)) AND RB_PRT$>"0" THEN RPT_SPLIT$="Y"
45075 GOSUB SCHD_DATE_VARS
45080 PERFORM "ZGXOPO;PROCESS_PRINT_MODE"
45090 RETURN 
45099 ! 
46000 SCHD_DATE_VARS:
46010 RPT_OPTIONS_COUNT=4 ! Maximum 9 allowed
46015 RPT_OPTIONS$[1,0]=MSG("START_F_Y") ! Starting Fiscal Year
46020 RPT_OPTIONS$[1,1]="4"
46025 RPT_OPTIONS$[1,2]="1"
46030 RPT_OPTIONS$[1,3]="RNG"
46032 RPT_OPTIONS$[1,4]="AR"
46035 RPT_OPTIONS$[2,0]=MSG("END_F_Y") ! Ending Fiscal Year
46040 RPT_OPTIONS$[2,1]="4"
46045 RPT_OPTIONS$[2,2]="5"
46050 RPT_OPTIONS$[2,3]="RNG"
46052 RPT_OPTIONS$[2,4]="AR"
46055 RPT_OPTIONS$[3,0]=MSG("STAR_A_P") ! Starting Accounting Period
46060 RPT_OPTIONS$[3,1]="2"
46065 RPT_OPTIONS$[3,2]="9"
46070 RPT_OPTIONS$[3,3]="RNG"
46072 RPT_OPTIONS$[3,4]="AR"
46075 RPT_OPTIONS$[4,0]=MSG("END_A_P") ! Ending Accounting Period
46080 RPT_OPTIONS$[4,1]="2"
46085 RPT_OPTIONS$[4,2]="11"
46090 RPT_OPTIONS$[4,3]="RNG"
46092 RPT_OPTIONS$[4,4]="AR"
46095 RETURN 
46099 ! 
56000 ! "228228-Ability to split a report into multiple PDFs based on sales 
56002 REM "240570-GUI Printing - Support for queueing and scheduling reports. 
