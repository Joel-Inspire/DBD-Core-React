0010 ! ARGRCD - File Maintenance Program for ZZS_Rpt_selection (="ZZS"+%C$)
0011 ! Finance Charge Calculation
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Nov. 8, 2002 10:36
0030 ! ************************************************************************
0035 REM "5.7 - 11/14/17 - 16.441111 - tma - SSP# 284009
0037 REM "284009-ARGRCD - Finance Charge Calculation.  The Default period is 
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ARGRCD","../ARG/AR.EN"
0060 EXIT 
0090 ! 
0100 ! !100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 X0=-1,X2=-1
0140 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0150 DIM ZZS[4],RNG[4],B_ZZS[4],PRT$(125)
0160 ! iolist
0170 IOLIST ZZS$
0175 IOLIST PRT$,RNG$,RNG{ALL}
0180 ! Open Files
0190 DIM Z[NUM(X3$(60,3))]
0200 Z$="01O ZZS...  02O ARR...  06O ZZPARM  07O ZZP     " ! SSP#241974
0210 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0400 ! 
0410 RPT_SELEC$="            "
0450 MSG_1$=" & older balances"
0470 GOSUB GET_PARAM
0480 GOSUB LOAD_CHARGE
0490 RETURN 
0500 ! !500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 KEY_1$="AR2RCD"+RPT_SELEC$; %K9$="AR2RCD"
0530 READ (Z[1],KEY=KEY_1$,DOM=ADD_OPT)IOL=0170,IOL=0175
0535 GOSUB SELECT_OPTIONS
0537 B_ZZS$=ZZS$; B_RNG$=RNG$; B_PRT$=PRT$
0540 READ (Z[6],KEY=X3$(9,3)+"ARFC",DOM=*NEXT)I$; GOTO 0543
0541 DIM I$(7,"0")
0543 ZZS$(72,7)=I$,INV_NUM$=I$ ! SSP#241974
0544 RETURN 
0545 SELECT_OPTIONS:
0550 B_ZZS$=ZZS$; B_PRT$=PRT$; B_RNG$=RNG$; CHG_FLG=0
0560 PRG_NAME$=ZZS$(1,6); RPT_SELEC$=ZZS$(7,12); RPT_DESC$=ZZS$(19,40)
0570 RPT_OPT$=ZZS$(59,1); RPT_SEQ$=ZZS$(71,1)
0580 INV_NUM$=ZZS$(72,7); DATE_FLD2$=P$(7,6) ! SSP#284009
0590 RPT_FISYR$=P$(7,4); RPT_PER$=P$(11,2) ! SSP#284009
0600 RPT_SHIPTO$=ZZS$(91,1); RPT_NUM1=NUM(ZZS$(92,6))
0700 ! Output Options
0710 ! PRT_MODE$=PRT$(1,1); RPT_OUTDEV$=PRT$(2,6)
0720 ! RPT_VERT$=PRT$(9,1); RPT_HORIZ$=PRT$(10,1)
0730 ! RPT_AUX1$=PRT$(11,1); RPT_AUX2$=PRT$(12,1); RPT_AUX3$=PRT$(13,1); RPT_AUX4$=PRT$(14,1)
0740 ! RPT_LINES$=PRT$(15,2); RPT_FORMCODE$=PRT$(17,1)
0750 ! RPT_JOBCARD$=PRT$(65,60); RPT_JOBCARD_FLG$=PRT$(125,1)
0755 GOSUB LOAD_RANGE
0760 NEXT_ID=RPT_VEIW.CTL
0770 RETURN 
0890 ! 900 - Wrapup
0900 WRAPUP:
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0920 SET_PARAM 'KR'=_SV_KR
0930 EXIT 
1000 ! Load the default range
1010 LOAD_RANGE:
1020 IF NUL(RNG$(1,10)) THEN CUST_START$="" ELSE CUST_START$=RNG$(1,10)
1030 IF RNG$(11,3)="~~~" THEN CUST_END$="" ELSE CUST_END$=RNG$(11,10)
1500 RETURN 
3790 ! 
3800 CHECK_CHANGES:
3810 IF CHG_FLG THEN RETURN 
3820 IF B_ZZS$=ZZS$ AND B_PRT$=PRT$ AND B_RNG$=RNG$ THEN RETURN 
3825 MSGBOX MSG("UPD_RPT_1")+SEP+MSG("UPD_RPT_2"),MSG("CONFIRM"),"?,YESNO",ANS$
3850 IF ANS$="NO" THEN RETURN 
3860 WRITE (Z[1],KEY=KEY_1$)IOL=0170,IOL=0175
3880 RETURN 
3890 ! 
8000 ! Messages
8010 ADD_OPT:
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN CMD_STR$="END"; RETURN 
8040 KEY_1$="AR2RCD"+RPT_SELEC$
8050 DIM ZZS$(100),RNG$(100),PRT$(126); ZZS$(1,18)=KEY_1$,ZZS$(71,1)="1"
8060 GOSUB SELECT_OPTIONS
8070 REFRESH_FLG=1; NEXT_ID=RPT_DESC.CTL
8090 RETURN 
8500 ! Load the Charges
8510 LOAD_CHARGE:
8520 IF NUL(P$) THEN RETURN 
8530 CHARGE$=""
8540 CHARGE$=P$(56,8)+MSG_1$+"/"+P$(64,8)+MSG_1$+"/"+P$(72,8)+MSG_1$+"/"+P$(80,8)+MSG_1$+"/"
8590 RETURN 
9000 ! Get System Parameters
9010 GET_PARAM:
9020 READ (Z[6],KEY=X3$(9,3)+"A/R",DOM=*NEXT)P$
9090 RETURN 
9999 END 
20000 LOAD_OPTIONS:
20010 ! View Report Routine.
20020 ! 
20030 ZZS$(1,6)=PRG_NAME$
20040 ZZS$(7,12)=RPT_SELEC$; ZZS$(19,40)=RPT_DESC$
20050 ZZS$(59,1)=RPT_OPT$; ZZS$(71,1)=RPT_SEQ$
20060 ZZS$(72,7)=INV_NUM$; ZZS$(79,6)=DATE_FLD2$
20070 ZZS$(85,4)=RPT_FISYR$; ZZS$(89,2)=RPT_PER$
20080 ZZS$(91,1)=RPT_SHIPTO$; ZZS$(92,6)=STR(RPT_NUM1)
20090 ! 
20095 T1$="AR6..."; K$=FID(0)
20100 ! PRT$(1,1)=PRT_MODE$; PRT$(2,2)=RPT_OUTDEV$
20110 ! PRT$(9,1)=RPT_VERT$; PRT$(10,1)=RPT_HORIZ$
20120 ! PRT$(11,1)=RPT_AUX1$; PRT$(12,1)=RPT_AUX2$
20130 ! PRT$(13,1)=RPT_AUX3$; PRT$(14,1)=RPT_AUX4$
20140 ! PRT$(15,2)=RPT_LINES$; PRT$(17,1)=RPT_FORMCODE$
20150 ! PRT$(65,60)=RPT_JOBCARD$; PRT$(125,1)=RPT_JOBCARD_FLG$
20160 ! 
20190 GOSUB GET_CUST_RANGE
20210 RETURN 
25000 REM "Write Print Data
25005 PRINT_REPORT:
25010 FLAG$=""
25020 CALL "AR2DTE",X3$,X4$,ZZS$(85,6),FLAG$ ! SSP#241974
25030 IF FLAG$="*" THEN GOTO 1820
25050 IF PRT$(1,1)<>"Q" THEN GOTO 25075 ELSE Z$="07C         07O ZZQ     ",K9$="",K$=DAY,K$=K$(7,2)+K$(1,2)+K$(4,2),K$=PRT$(2,6)+X3$(162,1)+PRT$(17,1)+K$+STR(TIM*100:"0000")+" "+ZZS$(1,6)+X3$(9,3)+X3$(40,3); IF PRT$(2,1)="U" THEN K$(1,2)=X3$(172,2)
25060 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 25065,25190
25070 ON POS(PRT$(1,1)="IQS") GOTO 25105,25075,25085,25105
25080 WRITE (Z[7],KEY=K$)X3$,X4$,T1$,PRT$,RNG$,IOL=0170; GOTO 25105
25090 WRITE (Z[7],KEY=K$(1,19),DOM=25100)K$,X3$,X4$,T1$,PRT$,RNG$,IOL=0170; GOTO 25105
25100 K$(19,1)=CHR(ASC(K$(19,1))+1); GOTO 25090
25110 REM "Calculate
25120 CALL "ZZINFO",Z[2],0,X3$,R0,0,0,0,0,0,0,""
25130 IF POS(ZZS$(59,1)="12")=0 THEN CALL "AR2RCB",X3$,X4$,R0,RNG$,ZZS$; GOTO 25190 ! SSP#241974
25140 IF ZZS$(59,1)="1" THEN PRINT 'DIALOGUE'(5,5,80,24,"Finance Charge Calculation"); CALL "AR2UT7",X3$,X4$,RNG$,ZZS$; PRINT 'POP'
25150 PRINT 'DIALOGUE'(5,5,80,24,"Finance Charge Calculation"); CALL "AR2UT6",X3$,X4$,RNG$,ZZS$; PRINT 'POP'
25160 CALL "AR2RCB",X3$,X4$,R0,RNG$,ZZS$ ! SSP#241974
25170 PRINT 'DIALOGUE'(5,5,80,24,"Finance Charge Calculation"); ZZS$(59,1)=""; CALL "AR2UT6",X3$,X4$,RNG$,ZZS$; PRINT 'POP'
25180 ! 
25190 CMD_STR$="END"
25195 RETURN 
27000 ! Finance Charge Message
27010 FINANCE_MSG:
27020 MSGBOX "Finance Calculation is complete","Calculation Complete"
27030 RETURN 
30000 ! 
30010 GET_CUST_RANGE:
30020 IF NUL(CUST_START$) THEN RNG$="          " ELSE RNG$=CUST_START$
30030 IF NUL(CUST_END$) THEN RNG$=RNG$+"~~~~~~~~~~" ELSE RNG$=RNG$+CUST_END$ }
30040 RETURN 
30050 ! 
30060 GET_SLSMAN_RANGE:
30070 IF NUL(SLS_START$) THEN RNG$(1,4)="    " ELSE RNG$(1,4)=SLS_START$
30080 IF NUL(SLS_END$) THEN RNG$(5,4)="~~~~" ELSE RNG$(5,4)=SLS_END$
30090 RETURN 
30100 ! 
30110 GET_CAT_RANGE:
30120 IF NUL(CAT_START$) THEN RNG$=RNG$+"        " ELSE RNG$=RNG$+CAT_START$
30130 IF NUL(CAT_END$) THEN RNG$=RNG$+"~~~~~~~~" ELSE RNG$=RNG$+CAT_END$
30140 RETURN 
30150 ! 
30160 GET_SHIPTO_RANGE:
30170 IF NUL(SHIPTO_START$) THEN RNG$=RNG$+"    " ELSE RNG$=RNG$+SHIPTO_START$
30180 IF NUL(SHIPTO_END$) THEN RNG$=RNG$+"~~~~" ELSE RNG$=RNG$+SHIPTO_END$
30190 RETURN 
30200 ! 
30210 GET_INV_RANGE:
30220 IF NUL(INV_START$) THEN RNG$=RNG$+"        " ELSE RNG$=RNG$+INV_START$
30230 IF NUL(INV_END$) THEN RNG$=RNG$+"~~~~~~~~" ELSE RNG$=RNG$+INV_END$
30240 RETURN 
30250 ! 
30260 LOAD_FISCAL_YEAR:
30270 READ (Z[6],KEY=%C$+"G/L",DOM=*NEXT)GL_REC$; CR_YEAR$=GL_REC$(34,4),CR_PD$=GL_REC$(38,2)
30280 IF NUL(RPT_FISYR$)=0 THEN CR_YEAR$=RPT_FISYR$
30290 KE$=%C$+"G/LYE",RPT_FISYR$=""
30300 READ (Z[6],KEY=KE$,DOM=*NEXT)
30310 K$=KEY(Z[6],END=30360); READ (Z[6])Z9$
30320 IF LEN(K$)<8 OR KE$<>K$(1,8) THEN GOTO END_LOAD_FISCAL_YEAR
30330 RPT_FISYR$=RPT_FISYR$+K$(9)+"/"
30340 IF K$(9,4)=CR_YEAR$ THEN CC$=Z9$(21)
30350 GOTO 30310
30360 END_LOAD_FISCAL_YEAR:
30370 DROP_BOX LOAD RPT_FISYR.CTL,RPT_FISYR$
30380 DROP_BOX WRITE RPT_FISYR.CTL,CR_YEAR$
30390 DROP_BOX LOAD END_FISCAL.CTL,RPT_FISYR$
30400 DROP_BOX WRITE END_FISCAL.CTL,CR_YEAR$
30410 RPT_FISYR$=CR_YEAR$
30420 IF NUL(RPT_PER$)=0 THEN CR_PD$=RPT_PER$
30430 RPT_PER$=""
30440 FOR ACCT=1 TO 12; RPT_PER$=RPT_PER$+STR(ACCT:"00")+"/"; NEXT ACCT
30450 DROP_BOX LOAD RPT_PER.CTL,RPT_PER$
30460 DROP_BOX WRITE RPT_PER.CTL,CR_PD$
30470 RPT_PER$=CR_PD$
30480 END_ACCTPD$=RPT_PER$
30490 DROP_BOX LOAD END_ACCTPD.CTL,RPT_PER$
30500 DROP_BOX WRITE END_ACCTPD.CTL,CR_PD$
30510 RETURN 
30520 LOAD_ENDING_DATE:
30530 IF LEN(RPT_FISYR$)>4 THEN VAL$=CR_YEAR$ ELSE VAL$=RPT_FISYR$
30540 FIND (Z[6],KEY=KE$+VAL$)Z9$; CC$=Z9$(21)
30550 IF LEN(RPT_PER$)>2 THEN VAL=NUM(CR_PD$) ELSE VAL=NUM(RPT_PER$)
30560 CC$=CC$(VAL*6-5,6),END_DATE$=CC$,REFRESH_FLG=1
30570 RETURN 
56000 REM "241974-In GUI in Finance Charge Application Calculation you don't  
56001 REM "284009-ARGRCD - FC Calculation.  Default from AR parms like CHUI
