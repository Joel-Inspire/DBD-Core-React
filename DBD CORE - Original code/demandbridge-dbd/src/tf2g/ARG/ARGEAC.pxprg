0010 ! ARGEAC - File Maintenance Program for ARB-Invoice Data Entry Header (="ARB"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Oct. 8, 2001 9:11
0030 ! ************************************************************************
0035 REM "5.7 - 08/14/13 - 15.028055 - dmm - SSP# 264703
0037 REM "264703-AR Invoice Entry; ability to enter Job Card Override.  If   
0040 REM "Copyright 2013 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ARGEAC","../ARG/AR.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0115 ! %FLMAINT_MSG$="./lib/_tfmsglib.en"
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0155 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0156 PERFORM "ARGEAA;READ_PARMS"
0160 _FILE_NAME$=FIN(Z[1],"FILENAME") ! Get filename of ARB file, could be batch file
0170 _FIL_NO=Z[1]
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 PERFORM "ARGEAA;CREATE_AT3_RECORDS"
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=3
0430 DIM _KEYS$[1:3]; _KEYS$[1]="FY$",_KEYS$[2]="ACCTPD$",_KEYS$[3]="INV_NUM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 PERFORM "ARGEAA;PRE_DISPLAY"; IF ACCTPD$>"" THEN GOSUB DISPLAY_PE_DATE
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0545 READ DATA FROM ARG_1$ TO FY$,ACCTPD$,INV_NUM$
0546 ARG_1$=FY$+ACCTPD$+INV_NUM$
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0700 ! 700 - Set up tabbing between folders
0710 INIT_FOLDER:
0720 GOSUB ENABLE_GROUPS
0730 IF _ENABLE_FLG<>_KEY1 THEN IF TAB_FLG$="<" THEN NEXT_ID=_LAST_TAB ELSE NEXT_ID=_FIRST_TAB
0740 EXIT 
0900 ! 900 - Wrapup
0910 WRAPUP:
0915 READ DATA FROM "" TO IOL=GLOBAL_IOL
0916 READ DATA FROM "" TO IOL=CUST_GLOBAL_IOL
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 ! IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0945 PERFORM "ARGEAA;CLOSE_FILES"
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1025 IF _KCNT=2 THEN GOSUB DISPLAY_PE_DATE
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 NEXT_FOLDER=_FIRST_FOLDER
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3031 READ (_AR1,KEY=CUST_DIV$+CUST_CODE$,DOM=*NEXT)
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3055 DIM A$(414),A[20]; READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT)IOL=ARB_IOL
3060 CHANGE_FLG=0
3061 ORDER$=ORDER_DIV$+ORDER_NUM$
3062 CUSTOMER$=CUST_DIV$+CUST_CODE$,%CUSTOMER$=CUSTOMER$,%CUST_DIV$=CUST_DIV$,%CUST_CODE$=CUST_CODE$,%LOC_TYPE$="C"
3063 %INV_NUM$=FY$+ACCTPD$+INV_NUM$ ! Used for AT3 query
3065 GOSUB DISPLAY_PE_DATE; GOSUB DISPLAY_SALES_TAX_PERCENTAGE
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=FY.CTL,_FIRST_FIELD=ORDER.CTL,_FIRST_FOLDER=FLDR.ARGEAC.1.CTL
3815 CHANGE_FLG=0 ! Temporary, not sure why but when exit is pressed, even if no changes, it asks if you want to update the record
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 GL_DETAIL_LINK$=STR(GL_DETAIL_LINK)
10030 NET_SALE$=STR(NET_SALE)
10040 FRT_BILLED$=STR(FRT_BILLED)
10050 ST_STAX_AMT$=STR(ST_STAX_AMT)
10060 ST_STAX_BILLED$=STR(ST_STAX_BILLED)
10070 CNTY_STAX_AMT$=STR(CNTY_STAX_AMT)
10080 CNTY_STAX_BILLED$=STR(CNTY_STAX_BILLED)
10090 LCL_STAX_AMT$=STR(LCL_STAX_AMT)
10100 LCL_STAX_BILLED$=STR(LCL_STAX_BILLED)
10110 INV_TOTAL$=STR(INV_TOTAL)
10120 DISC_AMT$=STR(DISC_AMT)
10130 TF_COST$=STR(TF_COST)
10140 COMM_AMT_1$=STR(COMM_AMT_1)
10150 COMM_AMT_2$=STR(COMM_AMT_2)
10160 COMM_AMT_3$=STR(COMM_AMT_3)
10170 COMM_AMT_4$=STR(COMM_AMT_4)
10180 COMM_AMT_5$=STR(COMM_AMT_5)
10190 COSTED_FRT$=STR(COSTED_FRT)
10200 TOTAL_COMM$=STR(TOTAL_COMM)
10210 TOTAL_GP_ADJ$=STR(TOTAL_GP_ADJ)
10220 LINE_LINK$=STR(LINE_LINK)
10300 GOSUB CALC_FIELDS
10310 GROSS_PROFIT$=STR(GROSS_PROFIT)
10320 GP_PERCENT$=STR(GP_PERCENT)
10330 ADJUSTED_GP$=STR(ADJUSTED_GP)
10340 TOTAL_STAX$=STR(TOTAL_STAX)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="GL_DETAIL_LINK",_X=GL_DETAIL_LINK.CTL,GL_DETAIL_LINK=NUM(GL_DETAIL_LINK$,ERR=NON_NUMERIC)
11030 _X$="NET_SALE",_X=NET_SALE.CTL,NET_SALE=NUM(NET_SALE$,ERR=NON_NUMERIC)
11040 _X$="FRT_BILLED",_X=FRT_BILLED.CTL,FRT_BILLED=NUM(FRT_BILLED$,ERR=NON_NUMERIC)
11050 _X$="ST_STAX_AMT",_X=ST_STAX_AMT.CTL,ST_STAX_AMT=NUM(ST_STAX_AMT$,ERR=NON_NUMERIC)
11060 _X$="ST_STAX_BILLED",_X=ST_STAX_BILLED.CTL,ST_STAX_BILLED=NUM(ST_STAX_BILLED$,ERR=NON_NUMERIC)
11070 _X$="CNTY_STAX_AMT",_X=CNTY_STAX_AMT.CTL,CNTY_STAX_AMT=NUM(CNTY_STAX_AMT$,ERR=NON_NUMERIC)
11080 _X$="CNTY_STAX_BILLED",_X=CNTY_STAX_BILLED.CTL,CNTY_STAX_BILLED=NUM(CNTY_STAX_BILLED$,ERR=NON_NUMERIC)
11090 _X$="LCL_STAX_AMT",_X=LCL_STAX_AMT.CTL,LCL_STAX_AMT=NUM(LCL_STAX_AMT$,ERR=NON_NUMERIC)
11100 _X$="LCL_STAX_BILLED",_X=LCL_STAX_BILLED.CTL,LCL_STAX_BILLED=NUM(LCL_STAX_BILLED$,ERR=NON_NUMERIC)
11110 _X$="INV_TOTAL",_X=INV_TOTAL.CTL,INV_TOTAL=NUM(INV_TOTAL$,ERR=NON_NUMERIC)
11120 _X$="DISC_AMT",_X=DISC_AMT.CTL,DISC_AMT=NUM(DISC_AMT$,ERR=NON_NUMERIC)
11130 _X$="COST",_X=TF_COST.CTL,TF_COST=NUM(TF_COST$,ERR=NON_NUMERIC)
11140 _X$="COMM_AMT_1",_X=COMM_AMT_1.CTL,COMM_AMT_1=NUM(COMM_AMT_1$,ERR=NON_NUMERIC)
11150 _X$="COMM_AMT_2",_X=COMM_AMT_2.CTL,COMM_AMT_2=NUM(COMM_AMT_2$,ERR=NON_NUMERIC)
11160 _X$="COMM_AMT_3",_X=COMM_AMT_3.CTL,COMM_AMT_3=NUM(COMM_AMT_3$,ERR=NON_NUMERIC)
11170 _X$="COMM_AMT_4",_X=COMM_AMT_4.CTL,COMM_AMT_4=NUM(COMM_AMT_4$,ERR=NON_NUMERIC)
11180 _X$="COMM_AMT_5",_X=COMM_AMT_5.CTL,COMM_AMT_5=NUM(COMM_AMT_5$,ERR=NON_NUMERIC)
11190 _X$="COSTED_FRT",_X=COSTED_FRT.CTL,COSTED_FRT=NUM(COSTED_FRT$,ERR=NON_NUMERIC)
11200 _X$="TOTAL_COMM",_X=TOTAL_COMM.CTL,TOTAL_COMM=NUM(TOTAL_COMM$,ERR=NON_NUMERIC)
11210 _X$="TOTAL_GP_ADJ",_X=TOTAL_GP_ADJ.CTL,TOTAL_GP_ADJ=NUM(TOTAL_GP_ADJ$,ERR=NON_NUMERIC)
11220 _X$="LINE_LINK",_X=LINE_LINK.CTL,LINE_LINK=NUM(LINE_LINK$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13001 GLOBAL_IOL:IOLIST %LOC_TYPE$,%P1$,%INV_NUM$,%FY$,%AP$,%ARS$,%GB$,%G0$,%I0$,%OP_SEC$,%P2$,%P0$
13002 CUST_GLOBAL_IOL:IOLIST %CUSTOMER$,%CUST_DIV$,%CUST_CODE$
13003 ARB_IOL:IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15],A[16],A[17],A[18],A[19],A[20]
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN FY$=""
13030 IF _CLR_FLG$="R" THEN ACCTPD$=""
13040 IF _CLR_FLG$="R" THEN INV_NUM$=""
13050 CUST_DIV$=""
13060 CUST_CODE$="",CUSTOMER$="",%CUSTOMER$="",%CUST_DIV$="",%CUST_CODE$="",%LOC_TYPE$=""
13070 CUST_NAME$=""
13080 CASH_SALE$=""
13090 BANK_CODE$=""
13100 PRINTED_FLAG$=""
13110 TERMS_CODE$=""
13120 STAX_CODE$=""
13130 INV_TYPE$=""
13140 APPLY_TO_INV_NUM$=""
13150 INV_DATE$=""
13160 ORDER_DIV$=""
13170 ORDER_NUM$="",ORDER$=""
13180 CUST_PO$=""
13190 REM TAX_EXEMPT$=""
13200 INV_DUE_DATE$=""
13210 DISC_DUE_DAY$=""
13220 COMM_CODE$=""
13230 SPER_CODE$=""
13240 SPER_CODE_2$=""
13250 SPER_CODE_3$=""
13260 SPER_CODE_4$=""
13270 SPER_CODE_5$=""
13280 CUST_CATEGORY$=""
13290 SHIP_VIA_DESC$=""
13300 SPECIAL_SHIPPING$=""
13310 MULTI_STAX$=""
13320 FOB_PT$=""
13330 SHIP_DATE$=""
13340 SHIP_VIA_CODE$=""
13350 LOC_CODE$=""
13360 LOC_ADDR_1$=""
13370 LOC_ADDR_2$=""
13380 LOC_CITY$=""
13390 LOC_ST$=""
13400 LOC_ZIP_CODE$=""
13410 LOC_PHONE$=""
13420 LOC_DESC$=""
13430 JOB_NUM$=""
13440 TEMP_AUTO_BILL$=""
13450 SRC_COMP_CODE$=""
13460 RL_TYPE$=""
13470 OVERRIDE_TERMS$=""
13480 ORDER_TYPE$=""
13490 SUMMARY_BILL$=""
13500 PRINT_INV$=""
13510 PRINT_INV_NUM$=""
13520 ITEM_CODE$=""
13530 ITEM_DESC$=""
13540 WHSE_FROM_GEN_SHIP$=""
13550 GB_SAMP_RB$=""
13560 GB_P_S_R$=""
13565 INV_JOB_CARD$="" ! WO264703
13570 GL_DETAIL_LINK=0
13580 NET_SALE=0
13590 FRT_BILLED=0
13600 ST_STAX_AMT=0
13610 ST_STAX_BILLED=0
13620 CNTY_STAX_AMT=0
13630 CNTY_STAX_BILLED=0
13640 LCL_STAX_AMT=0
13650 LCL_STAX_BILLED=0
13660 INV_TOTAL=0
13670 DISC_AMT=0
13680 TF_COST=0
13690 COMM_AMT_1=0
13700 COMM_AMT_2=0
13710 COMM_AMT_3=0
13720 COMM_AMT_4=0
13730 COMM_AMT_5=0
13740 COSTED_FRT=0
13750 TOTAL_COMM=0
13760 TOTAL_GP_ADJ=0
13770 LINE_LINK=0
13900 GROSS_PROFIT=0
13910 GP_PERCENT=0
13920 ADJUSTED_GP=0
13930 TOTAL_STAX=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=1 THEN CALL "*wingrp;Enable",KEY1.GRP$; NEXT_ID=FY.CTL ELSE CALL "*wingrp;Disable",KEY1.GRP$
14040 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=ACCTPD.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14050 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=INV_NUM.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14985 IF ARG_1$<>"" THEN CALL "*wingrp;Hide",SCROLL.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(76,"N")
15030 IF _ORIG.FY$=_CUR.FY$ OR FY$=_CUR.FY$ THEN GOTO *NEXT ELSE IF _ORIG.FY$=FY$ THEN _CHG2$=_CHG2$+SEP+MSG("FY")+" = "+_CUR.FY$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FY")+" = "+_CUR.FY$
15040 IF _ORIG.ACCTPD$=_CUR.ACCTPD$ OR ACCTPD$=_CUR.ACCTPD$ THEN GOTO *NEXT ELSE IF _ORIG.ACCTPD$=ACCTPD$ THEN _CHG2$=_CHG2$+SEP+MSG("ACCTPD")+" = "+_CUR.ACCTPD$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ACCTPD")+" = "+_CUR.ACCTPD$
15050 IF _ORIG.INV_NUM$=_CUR.INV_NUM$ OR INV_NUM$=_CUR.INV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.INV_NUM$=INV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_NUM")+" = "+_CUR.INV_NUM$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_NUM")+" = "+_CUR.INV_NUM$
15060 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15070 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15080 IF _ORIG.CUST_NAME$=_CUR.CUST_NAME$ OR CUST_NAME$=_CUR.CUST_NAME$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_NAME$=CUST_NAME$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_NAME")+" = "+_CUR.CUST_NAME$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_NAME")+" = "+_CUR.CUST_NAME$
15090 IF _ORIG.CASH_SALE$=_CUR.CASH_SALE$ OR CASH_SALE$=_CUR.CASH_SALE$ THEN GOTO *NEXT ELSE IF _ORIG.CASH_SALE$=CASH_SALE$ THEN _CHG2$=_CHG2$+SEP+MSG("CASH_SALE")+" = "+_CUR.CASH_SALE$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CASH_SALE")+" = "+_CUR.CASH_SALE$
15100 IF _ORIG.BANK_CODE$=_CUR.BANK_CODE$ OR BANK_CODE$=_CUR.BANK_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.BANK_CODE$=BANK_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("BANK_CODE")+" = "+_CUR.BANK_CODE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BANK_CODE")+" = "+_CUR.BANK_CODE$
15110 IF _ORIG.PRINTED_FLAG$=_CUR.PRINTED_FLAG$ OR PRINTED_FLAG$=_CUR.PRINTED_FLAG$ THEN GOTO *NEXT ELSE IF _ORIG.PRINTED_FLAG$=PRINTED_FLAG$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_F")+" = "+_CUR.PRINTED_FLAG$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_F")+" = "+_CUR.PRINTED_FLAG$
15120 IF _ORIG.TERMS_CODE$=_CUR.TERMS_CODE$ OR TERMS_CODE$=_CUR.TERMS_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.TERMS_CODE$=TERMS_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("TERMS_CODE")+" = "+_CUR.TERMS_CODE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TERMS_CODE")+" = "+_CUR.TERMS_CODE$
15130 IF _ORIG.STAX_CODE$=_CUR.STAX_CODE$ OR STAX_CODE$=_CUR.STAX_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.STAX_CODE$=STAX_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("STAX_CODE")+" = "+_CUR.STAX_CODE$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("STAX_CODE")+" = "+_CUR.STAX_CODE$
15140 IF _ORIG.INV_TYPE$=_CUR.INV_TYPE$ OR INV_TYPE$=_CUR.INV_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.INV_TYPE$=INV_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_TYPE")+" = "+_CUR.INV_TYPE$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_TYPE")+" = "+_CUR.INV_TYPE$
15150 IF _ORIG.APPLY_TO_INV_NUM$=_CUR.APPLY_TO_INV_NUM$ OR APPLY_TO_INV_NUM$=_CUR.APPLY_TO_INV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.APPLY_TO_INV_NUM$=APPLY_TO_INV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("APPL_T_I_N")+" = "+_CUR.APPLY_TO_INV_NUM$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("APPL_T_I_N")+" = "+_CUR.APPLY_TO_INV_NUM$
15160 IF _ORIG.INV_DATE$=_CUR.INV_DATE$ OR INV_DATE$=_CUR.INV_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.INV_DATE$=INV_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_DATE")+" = "+_CUR.INV_DATE$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_DATE")+" = "+_CUR.INV_DATE$
15170 IF _ORIG.ORDER_DIV$=_CUR.ORDER_DIV$ OR ORDER_DIV$=_CUR.ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DIV$=ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$
15180 IF _ORIG.ORDER_NUM$=_CUR.ORDER_NUM$ OR ORDER_NUM$=_CUR.ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_NUM$=ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$
15190 IF _ORIG.CUST_PO$=_CUR.CUST_PO$ OR CUST_PO$=_CUR.CUST_PO$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_PO$=CUST_PO$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$
15200 IF _ORIG.TAX_EXEMPT$=_CUR.TAX_EXEMPT$ OR TAX_EXEMPT$=_CUR.TAX_EXEMPT$ THEN GOTO *NEXT ELSE IF _ORIG.TAX_EXEMPT$=TAX_EXEMPT$ THEN _CHG2$=_CHG2$+SEP+MSG("TAX_EXEMPT")+" = "+_CUR.TAX_EXEMPT$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TAX_EXEMPT")+" = "+_CUR.TAX_EXEMPT$
15210 IF _ORIG.INV_DUE_DATE$=_CUR.INV_DUE_DATE$ OR INV_DUE_DATE$=_CUR.INV_DUE_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.INV_DUE_DATE$=INV_DUE_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_D_D")+" = "+_CUR.INV_DUE_DATE$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_D_D")+" = "+_CUR.INV_DUE_DATE$
15220 IF _ORIG.DISC_DUE_DAY$=_CUR.DISC_DUE_DAY$ OR DISC_DUE_DAY$=_CUR.DISC_DUE_DAY$ THEN GOTO *NEXT ELSE IF _ORIG.DISC_DUE_DAY$=DISC_DUE_DAY$ THEN _CHG2$=_CHG2$+SEP+MSG("DISC_D_D")+" = "+_CUR.DISC_DUE_DAY$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DISC_D_D")+" = "+_CUR.DISC_DUE_DAY$
15230 IF _ORIG.COMM_CODE$=_CUR.COMM_CODE$ OR COMM_CODE$=_CUR.COMM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.COMM_CODE$=COMM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("COMM_CODE")+" = "+_CUR.COMM_CODE$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_CODE")+" = "+_CUR.COMM_CODE$
15240 IF _ORIG.SPER_CODE$=_CUR.SPER_CODE$ OR SPER_CODE$=_CUR.SPER_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE$=SPER_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_CODE")+" = "+_CUR.SPER_CODE$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_CODE")+" = "+_CUR.SPER_CODE$
15250 IF _ORIG.SPER_CODE_2$=_CUR.SPER_CODE_2$ OR SPER_CODE_2$=_CUR.SPER_CODE_2$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE_2$=SPER_CODE_2$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_2")+" = "+_CUR.SPER_CODE_2$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_2")+" = "+_CUR.SPER_CODE_2$
15260 IF _ORIG.SPER_CODE_3$=_CUR.SPER_CODE_3$ OR SPER_CODE_3$=_CUR.SPER_CODE_3$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE_3$=SPER_CODE_3$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_3")+" = "+_CUR.SPER_CODE_3$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_3")+" = "+_CUR.SPER_CODE_3$
15270 IF _ORIG.SPER_CODE_4$=_CUR.SPER_CODE_4$ OR SPER_CODE_4$=_CUR.SPER_CODE_4$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE_4$=SPER_CODE_4$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_4")+" = "+_CUR.SPER_CODE_4$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_4")+" = "+_CUR.SPER_CODE_4$
15280 IF _ORIG.SPER_CODE_5$=_CUR.SPER_CODE_5$ OR SPER_CODE_5$=_CUR.SPER_CODE_5$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE_5$=SPER_CODE_5$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_5")+" = "+_CUR.SPER_CODE_5$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_5")+" = "+_CUR.SPER_CODE_5$
15290 IF _ORIG.CUST_CATEGORY$=_CUR.CUST_CATEGORY$ OR CUST_CATEGORY$=_CUR.CUST_CATEGORY$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CATEGORY$=CUST_CATEGORY$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_C")+" = "+_CUR.CUST_CATEGORY$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_C")+" = "+_CUR.CUST_CATEGORY$
15300 IF _ORIG.SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$ OR SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_VIA_DESC$=SHIP_VIA_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_V_D")+" = "+_CUR.SHIP_VIA_DESC$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_V_D")+" = "+_CUR.SHIP_VIA_DESC$
15310 IF _ORIG.SPECIAL_SHIPPING$=_CUR.SPECIAL_SHIPPING$ OR SPECIAL_SHIPPING$=_CUR.SPECIAL_SHIPPING$ THEN GOTO *NEXT ELSE IF _ORIG.SPECIAL_SHIPPING$=SPECIAL_SHIPPING$ THEN _CHG2$=_CHG2$+SEP+MSG("SPEC_S")+" = "+_CUR.SPECIAL_SHIPPING$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPEC_S")+" = "+_CUR.SPECIAL_SHIPPING$
15320 IF _ORIG.MULTI_STAX$=_CUR.MULTI_STAX$ OR MULTI_STAX$=_CUR.MULTI_STAX$ THEN GOTO *NEXT ELSE IF _ORIG.MULTI_STAX$=MULTI_STAX$ THEN _CHG2$=_CHG2$+SEP+MSG("MULTI_STAX")+" = "+_CUR.MULTI_STAX$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MULTI_STAX")+" = "+_CUR.MULTI_STAX$
15330 IF _ORIG.FOB_PT$=_CUR.FOB_PT$ OR FOB_PT$=_CUR.FOB_PT$ THEN GOTO *NEXT ELSE IF _ORIG.FOB_PT$=FOB_PT$ THEN _CHG2$=_CHG2$+SEP+MSG("FOB_PT")+" = "+_CUR.FOB_PT$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FOB_PT")+" = "+_CUR.FOB_PT$
15340 IF _ORIG.SHIP_DATE$=_CUR.SHIP_DATE$ OR SHIP_DATE$=_CUR.SHIP_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_DATE$=SHIP_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_DATE")+" = "+_CUR.SHIP_DATE$,_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_DATE")+" = "+_CUR.SHIP_DATE$
15350 IF _ORIG.SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$ OR SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_VIA_CODE$=SHIP_VIA_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_V_C")+" = "+_CUR.SHIP_VIA_CODE$,_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_V_C")+" = "+_CUR.SHIP_VIA_CODE$
15360 IF _ORIG.LOC_CODE$=_CUR.LOC_CODE$ OR LOC_CODE$=_CUR.LOC_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_CODE$=LOC_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_CODE")+" = "+_CUR.LOC_CODE$,_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_CODE")+" = "+_CUR.LOC_CODE$
15370 IF _ORIG.LOC_ADDR_1$=_CUR.LOC_ADDR_1$ OR LOC_ADDR_1$=_CUR.LOC_ADDR_1$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_ADDR_1$=LOC_ADDR_1$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_ADDR_1")+" = "+_CUR.LOC_ADDR_1$,_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_ADDR_1")+" = "+_CUR.LOC_ADDR_1$
15380 IF _ORIG.LOC_ADDR_2$=_CUR.LOC_ADDR_2$ OR LOC_ADDR_2$=_CUR.LOC_ADDR_2$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_ADDR_2$=LOC_ADDR_2$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_ADDR_2")+" = "+_CUR.LOC_ADDR_2$,_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_ADDR_2")+" = "+_CUR.LOC_ADDR_2$
15390 IF _ORIG.LOC_CITY$=_CUR.LOC_CITY$ OR LOC_CITY$=_CUR.LOC_CITY$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_CITY$=LOC_CITY$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_CITY")+" = "+_CUR.LOC_CITY$,_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_CITY")+" = "+_CUR.LOC_CITY$
15400 IF _ORIG.LOC_ST$=_CUR.LOC_ST$ OR LOC_ST$=_CUR.LOC_ST$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_ST$=LOC_ST$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_ST")+" = "+_CUR.LOC_ST$,_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_ST")+" = "+_CUR.LOC_ST$
15410 IF _ORIG.LOC_ZIP_CODE$=_CUR.LOC_ZIP_CODE$ OR LOC_ZIP_CODE$=_CUR.LOC_ZIP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_ZIP_CODE$=LOC_ZIP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_Z_C")+" = "+_CUR.LOC_ZIP_CODE$,_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_Z_C")+" = "+_CUR.LOC_ZIP_CODE$
15420 IF _ORIG.LOC_PHONE$=_CUR.LOC_PHONE$ OR LOC_PHONE$=_CUR.LOC_PHONE$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_PHONE$=LOC_PHONE$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_PHONE")+" = "+_CUR.LOC_PHONE$,_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_PHONE")+" = "+_CUR.LOC_PHONE$
15430 IF _ORIG.LOC_DESC$=_CUR.LOC_DESC$ OR LOC_DESC$=_CUR.LOC_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_DESC$=LOC_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_DESC")+" = "+_CUR.LOC_DESC$,_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_DESC")+" = "+_CUR.LOC_DESC$
15440 IF _ORIG.JOB_NUM$=_CUR.JOB_NUM$ OR JOB_NUM$=_CUR.JOB_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.JOB_NUM$=JOB_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_NUM")+" = "+_CUR.JOB_NUM$,_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_NUM")+" = "+_CUR.JOB_NUM$
15450 IF _ORIG.TEMP_AUTO_BILL$=_CUR.TEMP_AUTO_BILL$ OR TEMP_AUTO_BILL$=_CUR.TEMP_AUTO_BILL$ THEN GOTO *NEXT ELSE IF _ORIG.TEMP_AUTO_BILL$=TEMP_AUTO_BILL$ THEN _CHG2$=_CHG2$+SEP+MSG("TEMP_A_B")+" = "+_CUR.TEMP_AUTO_BILL$,_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TEMP_A_B")+" = "+_CUR.TEMP_AUTO_BILL$
15460 IF _ORIG.SRC_COMP_CODE$=_CUR.SRC_COMP_CODE$ OR SRC_COMP_CODE$=_CUR.SRC_COMP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SRC_COMP_CODE$=SRC_COMP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SRC_C_C")+" = "+_CUR.SRC_COMP_CODE$,_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SRC_C_C")+" = "+_CUR.SRC_COMP_CODE$
15470 IF _ORIG.RL_TYPE$=_CUR.RL_TYPE$ OR RL_TYPE$=_CUR.RL_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.RL_TYPE$=RL_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("RL_TYPE")+" = "+_CUR.RL_TYPE$,_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RL_TYPE")+" = "+_CUR.RL_TYPE$
15480 IF _ORIG.OVERRIDE_TERMS$=_CUR.OVERRIDE_TERMS$ OR OVERRIDE_TERMS$=_CUR.OVERRIDE_TERMS$ THEN GOTO *NEXT ELSE IF _ORIG.OVERRIDE_TERMS$=OVERRIDE_TERMS$ THEN _CHG2$=_CHG2$+SEP+MSG("OVER_T")+" = "+_CUR.OVERRIDE_TERMS$,_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OVER_T")+" = "+_CUR.OVERRIDE_TERMS$
15490 IF _ORIG.ORDER_TYPE$=_CUR.ORDER_TYPE$ OR ORDER_TYPE$=_CUR.ORDER_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_TYPE$=ORDER_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_TYPE")+" = "+_CUR.ORDER_TYPE$,_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_TYPE")+" = "+_CUR.ORDER_TYPE$
15500 IF _ORIG.SUMMARY_BILL$=_CUR.SUMMARY_BILL$ OR SUMMARY_BILL$=_CUR.SUMMARY_BILL$ THEN GOTO *NEXT ELSE IF _ORIG.SUMMARY_BILL$=SUMMARY_BILL$ THEN _CHG2$=_CHG2$+SEP+MSG("SUMM_B")+" = "+_CUR.SUMMARY_BILL$,_CHG_VAR$(48,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SUMM_B")+" = "+_CUR.SUMMARY_BILL$
15510 IF _ORIG.PRINT_INV$=_CUR.PRINT_INV$ OR PRINT_INV$=_CUR.PRINT_INV$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_INV$=PRINT_INV$ THEN _CHG2$=_CHG2$+SEP+MSG("PRINT_INV")+" = "+_CUR.PRINT_INV$,_CHG_VAR$(49,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRINT_INV")+" = "+_CUR.PRINT_INV$
15520 IF _ORIG.PRINT_INV_NUM$=_CUR.PRINT_INV_NUM$ OR PRINT_INV_NUM$=_CUR.PRINT_INV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_INV_NUM$=PRINT_INV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_I_N")+" = "+_CUR.PRINT_INV_NUM$,_CHG_VAR$(50,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_I_N")+" = "+_CUR.PRINT_INV_NUM$
15530 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(51,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15540 IF _ORIG.ITEM_DESC$=_CUR.ITEM_DESC$ OR ITEM_DESC$=_CUR.ITEM_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_DESC$=ITEM_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_DESC")+" = "+_CUR.ITEM_DESC$,_CHG_VAR$(52,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_DESC")+" = "+_CUR.ITEM_DESC$
15550 IF _ORIG.WHSE_FROM_GEN_SHIP$=_CUR.WHSE_FROM_GEN_SHIP$ OR WHSE_FROM_GEN_SHIP$=_CUR.WHSE_FROM_GEN_SHIP$ THEN GOTO *NEXT ELSE IF _ORIG.WHSE_FROM_GEN_SHIP$=WHSE_FROM_GEN_SHIP$ THEN _CHG2$=_CHG2$+SEP+MSG("WHSE_F_G_S")+" = "+_CUR.WHSE_FROM_GEN_SHIP$,_CHG_VAR$(53,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WHSE_F_G_S")+" = "+_CUR.WHSE_FROM_GEN_SHIP$
15560 IF _ORIG.GB_SAMP_RB$=_CUR.GB_SAMP_RB$ OR GB_SAMP_RB$=_CUR.GB_SAMP_RB$ THEN GOTO *NEXT ELSE IF _ORIG.GB_SAMP_RB$=GB_SAMP_RB$ THEN _CHG2$=_CHG2$+SEP+MSG("GB_SAMP_RB")+" = "+_CUR.GB_SAMP_RB$,_CHG_VAR$(54,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GB_SAMP_RB")+" = "+_CUR.GB_SAMP_RB$
15570 IF _ORIG.GB_P_S_R$=_CUR.GB_P_S_R$ OR GB_P_S_R$=_CUR.GB_P_S_R$ THEN GOTO *NEXT ELSE IF _ORIG.GB_P_S_R$=GB_P_S_R$ THEN _CHG2$=_CHG2$+SEP+MSG("GB_P_S_R")+" = "+_CUR.GB_P_S_R$,_CHG_VAR$(55,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GB_P_S_R")+" = "+_CUR.GB_P_S_R$
15575 IF _ORIG.INV_JOB_CARD$=_CUR.INV_JOB_CARD$ OR INV_JOB_CARD$=_CUR.INV_JOB_CARD$ THEN GOTO *NEXT ELSE IF _ORIG.INV_JOB_CARD$=INV_JOB_CARD$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_JOB_CD")+" = "+_CUR.INV_JOB_CARD$,_CHG_VAR$(77,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_JOB_CD")+" = "+_CUR.INV_JOB_CARD$ ! WO264703
15580 IF _ORIG.GL_DETAIL_LINK=_CUR.GL_DETAIL_LINK OR GL_DETAIL_LINK=_CUR.GL_DETAIL_LINK THEN GOTO *NEXT ELSE IF _ORIG.GL_DETAIL_LINK=GL_DETAIL_LINK THEN _CHG2$=_CHG2$+SEP+MSG("G_D_L")+" = "+STR(_CUR.GL_DETAIL_LINK),_CHG_VAR$(56,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("G_D_L")+" = "+STR(_CUR.GL_DETAIL_LINK)
15590 IF _ORIG.NET_SALE=_CUR.NET_SALE OR NET_SALE=_CUR.NET_SALE THEN GOTO *NEXT ELSE IF _ORIG.NET_SALE=NET_SALE THEN _CHG2$=_CHG2$+SEP+MSG("NET_SALE")+" = "+STR(_CUR.NET_SALE),_CHG_VAR$(57,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NET_SALE")+" = "+STR(_CUR.NET_SALE)
15600 IF _ORIG.FRT_BILLED=_CUR.FRT_BILLED OR FRT_BILLED=_CUR.FRT_BILLED THEN GOTO *NEXT ELSE IF _ORIG.FRT_BILLED=FRT_BILLED THEN _CHG2$=_CHG2$+SEP+MSG("FRT_BILLED")+" = "+STR(_CUR.FRT_BILLED),_CHG_VAR$(58,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRT_BILLED")+" = "+STR(_CUR.FRT_BILLED)
15610 IF _ORIG.ST_STAX_AMT=_CUR.ST_STAX_AMT OR ST_STAX_AMT=_CUR.ST_STAX_AMT THEN GOTO *NEXT ELSE IF _ORIG.ST_STAX_AMT=ST_STAX_AMT THEN _CHG2$=_CHG2$+SEP+MSG("S_S_A")+" = "+STR(_CUR.ST_STAX_AMT),_CHG_VAR$(59,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("S_S_A")+" = "+STR(_CUR.ST_STAX_AMT)
15620 IF _ORIG.ST_STAX_BILLED=_CUR.ST_STAX_BILLED OR ST_STAX_BILLED=_CUR.ST_STAX_BILLED THEN GOTO *NEXT ELSE IF _ORIG.ST_STAX_BILLED=ST_STAX_BILLED THEN _CHG2$=_CHG2$+SEP+MSG("S_S_B")+" = "+STR(_CUR.ST_STAX_BILLED),_CHG_VAR$(60,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("S_S_B")+" = "+STR(_CUR.ST_STAX_BILLED)
15630 IF _ORIG.CNTY_STAX_AMT=_CUR.CNTY_STAX_AMT OR CNTY_STAX_AMT=_CUR.CNTY_STAX_AMT THEN GOTO *NEXT ELSE IF _ORIG.CNTY_STAX_AMT=CNTY_STAX_AMT THEN _CHG2$=_CHG2$+SEP+MSG("CNTY_S_A")+" = "+STR(_CUR.CNTY_STAX_AMT),_CHG_VAR$(61,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CNTY_S_A")+" = "+STR(_CUR.CNTY_STAX_AMT)
15640 IF _ORIG.CNTY_STAX_BILLED=_CUR.CNTY_STAX_BILLED OR CNTY_STAX_BILLED=_CUR.CNTY_STAX_BILLED THEN GOTO *NEXT ELSE IF _ORIG.CNTY_STAX_BILLED=CNTY_STAX_BILLED THEN _CHG2$=_CHG2$+SEP+MSG("CNTY_S_B")+" = "+STR(_CUR.CNTY_STAX_BILLED),_CHG_VAR$(62,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CNTY_S_B")+" = "+STR(_CUR.CNTY_STAX_BILLED)
15650 IF _ORIG.LCL_STAX_AMT=_CUR.LCL_STAX_AMT OR LCL_STAX_AMT=_CUR.LCL_STAX_AMT THEN GOTO *NEXT ELSE IF _ORIG.LCL_STAX_AMT=LCL_STAX_AMT THEN _CHG2$=_CHG2$+SEP+MSG("LCL_S_A")+" = "+STR(_CUR.LCL_STAX_AMT),_CHG_VAR$(63,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LCL_S_A")+" = "+STR(_CUR.LCL_STAX_AMT)
15660 IF _ORIG.LCL_STAX_BILLED=_CUR.LCL_STAX_BILLED OR LCL_STAX_BILLED=_CUR.LCL_STAX_BILLED THEN GOTO *NEXT ELSE IF _ORIG.LCL_STAX_BILLED=LCL_STAX_BILLED THEN _CHG2$=_CHG2$+SEP+MSG("LCL_S_B")+" = "+STR(_CUR.LCL_STAX_BILLED),_CHG_VAR$(64,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LCL_S_B")+" = "+STR(_CUR.LCL_STAX_BILLED)
15670 IF _ORIG.INV_TOTAL=_CUR.INV_TOTAL OR INV_TOTAL=_CUR.INV_TOTAL THEN GOTO *NEXT ELSE IF _ORIG.INV_TOTAL=INV_TOTAL THEN _CHG2$=_CHG2$+SEP+MSG("INV_TOTAL")+" = "+STR(_CUR.INV_TOTAL),_CHG_VAR$(65,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_TOTAL")+" = "+STR(_CUR.INV_TOTAL)
15680 IF _ORIG.DISC_AMT=_CUR.DISC_AMT OR DISC_AMT=_CUR.DISC_AMT THEN GOTO *NEXT ELSE IF _ORIG.DISC_AMT=DISC_AMT THEN _CHG2$=_CHG2$+SEP+MSG("DISC_AMT")+" = "+STR(_CUR.DISC_AMT),_CHG_VAR$(66,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DISC_AMT")+" = "+STR(_CUR.DISC_AMT)
15690 IF _ORIG.TF_COST=_CUR.TF_COST OR TF_COST=_CUR.TF_COST THEN GOTO *NEXT ELSE IF _ORIG.TF_COST=TF_COST THEN _CHG2$=_CHG2$+SEP+MSG("COST")+" = "+STR(_CUR.TF_COST),_CHG_VAR$(67,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST")+" = "+STR(_CUR.TF_COST)
15700 IF _ORIG.COMM_AMT_1=_CUR.COMM_AMT_1 OR COMM_AMT_1=_CUR.COMM_AMT_1 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT_1=COMM_AMT_1 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_AMT_1")+" = "+STR(_CUR.COMM_AMT_1),_CHG_VAR$(68,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_AMT_1")+" = "+STR(_CUR.COMM_AMT_1)
15710 IF _ORIG.COMM_AMT_2=_CUR.COMM_AMT_2 OR COMM_AMT_2=_CUR.COMM_AMT_2 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT_2=COMM_AMT_2 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_AMT_2")+" = "+STR(_CUR.COMM_AMT_2),_CHG_VAR$(69,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_AMT_2")+" = "+STR(_CUR.COMM_AMT_2)
15720 IF _ORIG.COMM_AMT_3=_CUR.COMM_AMT_3 OR COMM_AMT_3=_CUR.COMM_AMT_3 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT_3=COMM_AMT_3 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_AMT_3")+" = "+STR(_CUR.COMM_AMT_3),_CHG_VAR$(70,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_AMT_3")+" = "+STR(_CUR.COMM_AMT_3)
15730 IF _ORIG.COMM_AMT_4=_CUR.COMM_AMT_4 OR COMM_AMT_4=_CUR.COMM_AMT_4 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT_4=COMM_AMT_4 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_AMT_4")+" = "+STR(_CUR.COMM_AMT_4),_CHG_VAR$(71,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_AMT_4")+" = "+STR(_CUR.COMM_AMT_4)
15740 IF _ORIG.COMM_AMT_5=_CUR.COMM_AMT_5 OR COMM_AMT_5=_CUR.COMM_AMT_5 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT_5=COMM_AMT_5 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_AMT_5")+" = "+STR(_CUR.COMM_AMT_5),_CHG_VAR$(72,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_AMT_5")+" = "+STR(_CUR.COMM_AMT_5)
15750 IF _ORIG.COSTED_FRT=_CUR.COSTED_FRT OR COSTED_FRT=_CUR.COSTED_FRT THEN GOTO *NEXT ELSE IF _ORIG.COSTED_FRT=COSTED_FRT THEN _CHG2$=_CHG2$+SEP+MSG("COSTED_FRT")+" = "+STR(_CUR.COSTED_FRT),_CHG_VAR$(73,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COSTED_FRT")+" = "+STR(_CUR.COSTED_FRT)
15760 IF _ORIG.TOTAL_COMM=_CUR.TOTAL_COMM OR TOTAL_COMM=_CUR.TOTAL_COMM THEN GOTO *NEXT ELSE IF _ORIG.TOTAL_COMM=TOTAL_COMM THEN _CHG2$=_CHG2$+SEP+MSG("TOTAL_COMM")+" = "+STR(_CUR.TOTAL_COMM),_CHG_VAR$(74,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTAL_COMM")+" = "+STR(_CUR.TOTAL_COMM)
15770 IF _ORIG.TOTAL_GP_ADJ=_CUR.TOTAL_GP_ADJ OR TOTAL_GP_ADJ=_CUR.TOTAL_GP_ADJ THEN GOTO *NEXT ELSE IF _ORIG.TOTAL_GP_ADJ=TOTAL_GP_ADJ THEN _CHG2$=_CHG2$+SEP+MSG("TOTA_G_A")+" = "+STR(_CUR.TOTAL_GP_ADJ),_CHG_VAR$(75,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOTA_G_A")+" = "+STR(_CUR.TOTAL_GP_ADJ)
15780 IF _ORIG.LINE_LINK=_CUR.LINE_LINK OR LINE_LINK=_CUR.LINE_LINK THEN GOTO *NEXT ELSE IF _ORIG.LINE_LINK=LINE_LINK THEN _CHG2$=_CHG2$+SEP+MSG("LINE_LINK")+" = "+STR(_CUR.LINE_LINK),_CHG_VAR$(76,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_LINK")+" = "+STR(_CUR.LINE_LINK)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN FY$=_CUR.FY$
16030 IF _CHG_VAR$(2,1)="Y" THEN ACCTPD$=_CUR.ACCTPD$
16040 IF _CHG_VAR$(3,1)="Y" THEN INV_NUM$=_CUR.INV_NUM$
16050 IF _CHG_VAR$(4,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16060 IF _CHG_VAR$(5,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN CUST_NAME$=_CUR.CUST_NAME$
16080 IF _CHG_VAR$(7,1)="Y" THEN CASH_SALE$=_CUR.CASH_SALE$
16090 IF _CHG_VAR$(8,1)="Y" THEN BANK_CODE$=_CUR.BANK_CODE$
16100 IF _CHG_VAR$(9,1)="Y" THEN PRINTED_FLAG$=_CUR.PRINTED_FLAG$
16110 IF _CHG_VAR$(10,1)="Y" THEN TERMS_CODE$=_CUR.TERMS_CODE$
16120 IF _CHG_VAR$(11,1)="Y" THEN STAX_CODE$=_CUR.STAX_CODE$
16130 IF _CHG_VAR$(12,1)="Y" THEN INV_TYPE$=_CUR.INV_TYPE$
16140 IF _CHG_VAR$(13,1)="Y" THEN APPLY_TO_INV_NUM$=_CUR.APPLY_TO_INV_NUM$
16150 IF _CHG_VAR$(14,1)="Y" THEN INV_DATE$=_CUR.INV_DATE$
16160 IF _CHG_VAR$(15,1)="Y" THEN ORDER_DIV$=_CUR.ORDER_DIV$
16170 IF _CHG_VAR$(16,1)="Y" THEN ORDER_NUM$=_CUR.ORDER_NUM$
16180 IF _CHG_VAR$(17,1)="Y" THEN CUST_PO$=_CUR.CUST_PO$
16190 IF _CHG_VAR$(18,1)="Y" THEN TAX_EXEMPT$=_CUR.TAX_EXEMPT$
16200 IF _CHG_VAR$(19,1)="Y" THEN INV_DUE_DATE$=_CUR.INV_DUE_DATE$
16210 IF _CHG_VAR$(20,1)="Y" THEN DISC_DUE_DAY$=_CUR.DISC_DUE_DAY$
16220 IF _CHG_VAR$(21,1)="Y" THEN COMM_CODE$=_CUR.COMM_CODE$
16230 IF _CHG_VAR$(22,1)="Y" THEN SPER_CODE$=_CUR.SPER_CODE$
16240 IF _CHG_VAR$(23,1)="Y" THEN SPER_CODE_2$=_CUR.SPER_CODE_2$
16250 IF _CHG_VAR$(24,1)="Y" THEN SPER_CODE_3$=_CUR.SPER_CODE_3$
16260 IF _CHG_VAR$(25,1)="Y" THEN SPER_CODE_4$=_CUR.SPER_CODE_4$
16270 IF _CHG_VAR$(26,1)="Y" THEN SPER_CODE_5$=_CUR.SPER_CODE_5$
16280 IF _CHG_VAR$(27,1)="Y" THEN CUST_CATEGORY$=_CUR.CUST_CATEGORY$
16290 IF _CHG_VAR$(28,1)="Y" THEN SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$
16300 IF _CHG_VAR$(29,1)="Y" THEN SPECIAL_SHIPPING$=_CUR.SPECIAL_SHIPPING$
16310 IF _CHG_VAR$(30,1)="Y" THEN MULTI_STAX$=_CUR.MULTI_STAX$
16320 IF _CHG_VAR$(31,1)="Y" THEN FOB_PT$=_CUR.FOB_PT$
16330 IF _CHG_VAR$(32,1)="Y" THEN SHIP_DATE$=_CUR.SHIP_DATE$
16340 IF _CHG_VAR$(33,1)="Y" THEN SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$
16350 IF _CHG_VAR$(34,1)="Y" THEN LOC_CODE$=_CUR.LOC_CODE$
16360 IF _CHG_VAR$(35,1)="Y" THEN LOC_ADDR_1$=_CUR.LOC_ADDR_1$
16370 IF _CHG_VAR$(36,1)="Y" THEN LOC_ADDR_2$=_CUR.LOC_ADDR_2$
16380 IF _CHG_VAR$(37,1)="Y" THEN LOC_CITY$=_CUR.LOC_CITY$
16390 IF _CHG_VAR$(38,1)="Y" THEN LOC_ST$=_CUR.LOC_ST$
16400 IF _CHG_VAR$(39,1)="Y" THEN LOC_ZIP_CODE$=_CUR.LOC_ZIP_CODE$
16410 IF _CHG_VAR$(40,1)="Y" THEN LOC_PHONE$=_CUR.LOC_PHONE$
16420 IF _CHG_VAR$(41,1)="Y" THEN LOC_DESC$=_CUR.LOC_DESC$
16430 IF _CHG_VAR$(42,1)="Y" THEN JOB_NUM$=_CUR.JOB_NUM$
16440 IF _CHG_VAR$(43,1)="Y" THEN TEMP_AUTO_BILL$=_CUR.TEMP_AUTO_BILL$
16450 IF _CHG_VAR$(44,1)="Y" THEN SRC_COMP_CODE$=_CUR.SRC_COMP_CODE$
16460 IF _CHG_VAR$(45,1)="Y" THEN RL_TYPE$=_CUR.RL_TYPE$
16470 IF _CHG_VAR$(46,1)="Y" THEN OVERRIDE_TERMS$=_CUR.OVERRIDE_TERMS$
16480 IF _CHG_VAR$(47,1)="Y" THEN ORDER_TYPE$=_CUR.ORDER_TYPE$
16490 IF _CHG_VAR$(48,1)="Y" THEN SUMMARY_BILL$=_CUR.SUMMARY_BILL$
16500 IF _CHG_VAR$(49,1)="Y" THEN PRINT_INV$=_CUR.PRINT_INV$
16510 IF _CHG_VAR$(50,1)="Y" THEN PRINT_INV_NUM$=_CUR.PRINT_INV_NUM$
16520 IF _CHG_VAR$(51,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16530 IF _CHG_VAR$(52,1)="Y" THEN ITEM_DESC$=_CUR.ITEM_DESC$
16540 IF _CHG_VAR$(53,1)="Y" THEN WHSE_FROM_GEN_SHIP$=_CUR.WHSE_FROM_GEN_SHIP$
16550 IF _CHG_VAR$(54,1)="Y" THEN GB_SAMP_RB$=_CUR.GB_SAMP_RB$
16560 IF _CHG_VAR$(55,1)="Y" THEN GB_P_S_R$=_CUR.GB_P_S_R$
16565 IF _CHG_VAR$(77,1)="Y" THEN INV_JOB_CARD$=_CUR.INV_JOB_CARD$ ! WO264703
16570 IF _CHG_VAR$(56,1)="Y" THEN GL_DETAIL_LINK=_CUR.GL_DETAIL_LINK
16580 IF _CHG_VAR$(57,1)="Y" THEN NET_SALE=_CUR.NET_SALE
16590 IF _CHG_VAR$(58,1)="Y" THEN FRT_BILLED=_CUR.FRT_BILLED
16600 IF _CHG_VAR$(59,1)="Y" THEN ST_STAX_AMT=_CUR.ST_STAX_AMT
16610 IF _CHG_VAR$(60,1)="Y" THEN ST_STAX_BILLED=_CUR.ST_STAX_BILLED
16620 IF _CHG_VAR$(61,1)="Y" THEN CNTY_STAX_AMT=_CUR.CNTY_STAX_AMT
16630 IF _CHG_VAR$(62,1)="Y" THEN CNTY_STAX_BILLED=_CUR.CNTY_STAX_BILLED
16640 IF _CHG_VAR$(63,1)="Y" THEN LCL_STAX_AMT=_CUR.LCL_STAX_AMT
16650 IF _CHG_VAR$(64,1)="Y" THEN LCL_STAX_BILLED=_CUR.LCL_STAX_BILLED
16660 IF _CHG_VAR$(65,1)="Y" THEN INV_TOTAL=_CUR.INV_TOTAL
16670 IF _CHG_VAR$(66,1)="Y" THEN DISC_AMT=_CUR.DISC_AMT
16680 IF _CHG_VAR$(67,1)="Y" THEN TF_COST=_CUR.TF_COST
16690 IF _CHG_VAR$(68,1)="Y" THEN COMM_AMT_1=_CUR.COMM_AMT_1
16700 IF _CHG_VAR$(69,1)="Y" THEN COMM_AMT_2=_CUR.COMM_AMT_2
16710 IF _CHG_VAR$(70,1)="Y" THEN COMM_AMT_3=_CUR.COMM_AMT_3
16720 IF _CHG_VAR$(71,1)="Y" THEN COMM_AMT_4=_CUR.COMM_AMT_4
16730 IF _CHG_VAR$(72,1)="Y" THEN COMM_AMT_5=_CUR.COMM_AMT_5
16740 IF _CHG_VAR$(73,1)="Y" THEN COSTED_FRT=_CUR.COSTED_FRT
16750 IF _CHG_VAR$(74,1)="Y" THEN TOTAL_COMM=_CUR.TOTAL_COMM
16760 IF _CHG_VAR$(75,1)="Y" THEN TOTAL_GP_ADJ=_CUR.TOTAL_GP_ADJ
16770 IF _CHG_VAR$(76,1)="Y" THEN LINE_LINK=_CUR.LINE_LINK
16990 RETURN 
20000 ! Custom Routines
20010 DISPLAY_PE_DATE:
20020 IF %P1$>"" AND LEN(ACCTPD$)=2 THEN TF_DATE$=%P1$(NUM(ACCTPD$)*6+15,6); CALL "ZZWDTE;DISPLAY",TF_DATE$; PE_DATE$="Ending "+TF_DATE$
20040 RETURN 
20045 ! 
20100 CALC_FIELDS:
20110 GROSS_PROFIT=NET_SALE-TF_COST
20115 IF ABS(NET_SALE)=0 THEN GP_PERCENT=0 ELSE GP_PERCENT=(NET_SALE-TF_COST)*100/ABS(NET_SALE)
20120 ADJUSTED_GP=GROSS_PROFIT+TOTAL_GP_ADJ
20125 TOTAL_STAX=ST_STAX_BILLED+CNTY_STAX_BILLED+LCL_STAX_BILLED
20140 CALC_FIELDS_END:RETURN 
20145 ! 
20200 CHECK_TOTAL:! ^100,5 - Add commission totals
20205 VAR$=ID$
20210 IF VIN(VAR$)>100 THEN {
20215 MSGBOX MSG("COMM_EXC"),MSG("ATTN"),"!"
20220 NEXT_ID=ID,REFRESH_FLG=1
20225 VIA (VAR$)=0
20230 EXIT 
20235  }
20240 TOTAL=0
20245 FOR X=1 TO 5
20250 VAR$="comm_amt_"+STR(X)
20255 TOTAL+=VIN(VAR$)
20260 NEXT X
20265 IF TOTAL>100 THEN {
20270 MSGBOX MSG("TOT_EXC"),MSG("ATTN"),"!"
20275 NEXT_ID=ID
20280 VAR$=ID$
20285 TOTAL-=VIN(VAR$)
20290 VIA (VAR$)=0
20295  }
20300 REFRESH_FLG=1
20305 RETURN 
20310 ! 
20400 DISPLAY_SALES_TAX_PERCENTAGE:
20405 ST_PERCENT$=""
20410 READ (_AR5,KEY=STAX_CODE$,DOM=DISPLAY_SALES_TAX_PERCENTAGE_END)
20415 ST_PERCENT=STAX_RATE+CNTY_STAX_RATE+ST_STAX_RATE
20420 IF ST_PERCENT>0 THEN ST_PERCENT$=STR(ST_PERCENT:"##0.00 %")
20440 DISPLAY_SALES_TAX_PERCENTAGE_END:RETURN 
20445 ! 
21000 LOOKUP_ZIP:! Lookup zipcode, set city & state if found, set NEW_ZIP for later use
21005 NEW_ZIP=0
21010 CALL "ZYGMBA;CHECK_ZIP",CUST_ZIP_CODE$,ZIP_FOUND,ZIP_CITY$,ZIP_ST$,"",ZIP_AREA_CODE$,""
21015 IF CUST_PHONE$="" THEN CUST_PHONE$=DIM(14)
21020 IF ZIP_FOUND THEN CUST_CITY$=ZIP_CITY$,CUST_ST$=ZIP_ST$,CUST_PHONE$(1,3)=ZIP_AREA_CODE$; REFRESH_FLG=1,NEXT_ID=LOC_CODE.CTL ELSE NEW_ZIP=1
21095 RETURN 
21099 ! 
21100 UPDATE_ZIP:! If new_zip then update the zip code table
21110 IF NEW_ZIP THEN CALL "ZYGMBA;UPDATE_ZIP",CUST_ZIP_CODE$,CUST_CITY$,CUST_ST$,"",CUST_PHONE$(1,3),CUST_CITY$ ! get area code from phone,long city from regular city
21180 NEW_ZIP=0
21195 RETURN 
21199 ! 
22000 CHECK_FILES:! SSP 201215
22001 IF %X3$(174,4)=DIM(4) THEN _CC$=%C$ ELSE _CC$=%X3$(174,4)
22005 DIM ASD$(44),_ASD[16]
22010 _ASD=FN%FFN("ASD"+_CC$); IF _ASD<0 THEN _ASD=HFN; OPEN (_ASD)"ASD"+_CC$ ! [205471]-changed FFN() to FN%FFN()
22015 READ (_ASD,KEY=CR_FY$+CR_ACCTPD$+INV_NUM$+STAX_CODE$,DOM=*RETURN)ASD$,_ASD{ALL}
22016 ASD$(1,24)=CR_FY$+CR_ACCTPD$+INV_NUM$+STAX_CODE$,_ASD[0]=NET_SALE-COSTED_FRT,_ASD[2]=COSTED_FRT
22020 RETURN 
22030 LOAD_STATE_TAX:GOSUB CHECK_FILES
22050 _ASD[4]=ST_STAX_BILLED,_ASD[9]=_ASD[4]+_ASD[6]+_ASD[8],_ASD[3]=ST_STAX_AMT
22060 WRITE (_ASD,KEY=CR_FY$+CR_ACCTPD$+INV_NUM$+STAX_CODE$)ASD$,_ASD{ALL}
22070 RETURN 
22080 LOAD_COUNTY_TAX:GOSUB CHECK_FILES
22090 _ASD[6]=CNTY_STAX_BILLED,_ASD[9]=_ASD[4]+_ASD[6]+_ASD[8],_ASD[5]=CNTY_STAX_AMT
22100 GOTO 22060
22110 LOAD_LOCAL_TAX:GOSUB CHECK_FILES
22120 _ASD[8]=LCL_STAX_BILLED,_ASD[9]=_ASD[4]+_ASD[6]+_ASD[8],_ASD[7]=LCL_STAX_AMT
22130 GOTO 22060
22140 SEL_TAX:
22150 GOSUB LOAD_STATE_TAX; GOSUB LOAD_COUNTY_TAX; GOSUB LOAD_LOCAL_TAX
22160 RETURN 
56005 REM "5.4 - 03/21/06 - 17.123611 - kmc - SSP# 194087
56007 ! "201215-Sales Tax-The revenue and the Sales Tax amount on her TAX   
56008 REM "205471-Oracle - FFN usage in tf2g progs. to be replaced by FN%FFN  
56010 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56012 REM "264703-AR Invoice Entry; ability to enter Job Card Override.  If   
