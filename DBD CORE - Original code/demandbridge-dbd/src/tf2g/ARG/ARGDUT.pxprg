0010 ! ARGDUT - Import AZB Invoice information into A/R batch
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 06/21/18 - 15.673611 - tma - SSP# 301390
0037 REM "301390-Utility to create invoice batch is updating the invoice     
0040 REM "Copyright 2018 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0069 ! 
0070 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "ARGDUT","../ARG/AR.EN"
0080 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0100 ! 
0101 INIT:
0105 SAVE_XI=PRM('XI')
0110 X0$="ARGDUT",X1$="Re-import AZB Invoices"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1,X0=-1,X1=-1,X2=-1
0140 SAVE_GUI=%GUI; %GUI=1
0150 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
0155 F_BATCH$="ZZZZ"
0160 X3$(174,4)=F_BATCH$
0170 ! ALL "ZGBATC",X3$,X4$,X0$,X9; IF X9=1 THEN CMD_STR$="END"; EXIT
0175 %ARGEAA$=MSG("T_ARGEAC"); IF STP(X3$(174,4))<>"" THEN %ARGEAA$+=" - Batch No: "+X3$(174,4)
0180 ! 
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=ESC+"BG"+Z0$+ESC+"EG"
0300 REM "IOLISTS
0310 IOLIST A$
0320 IOLIST A9,ART$,ART[0],ART[1],ART[2],ART[3],ART[4],ART[5],ART[6],ART[7],ART[8],ART[9],ART[10],ART[11],ART[12],ART[13],ART[14],ART[15],ART[16],ART[17],ART[18],ART[19],ART[20],ART[21],ART[22],ART[23],ART[24],ART[25],ART[26],ART[27],ART[28],ART[29],ART[30],ART[31],ART[32],ART[33],ART[34],ART[35],ART[36],ART[37],ART[38],ART[39],ART[40],ART[41],ART[42],ART[43],ART[44],ART[45],ART[46],ART[47],ART[48] ! SSP 249775
0321 IOLIST AZT$,AZT[0],AZT[1],AZT[2],AZT[3],AZT[4],AZT[5],AZT[6],AZT[7],AZT[8],AZT[9],AZT[10],AZT[11],AZT[12],AZT[13],AZT[14],AZT[15],AZT[16],AZT[17],AZT[18],AZT[19],AZT[20],AZT[21],AZT[22],AZT[23],AZT[24],AZT[25],AZT[26],AZT[27],AZT[28],AZT[29],AZT[30],AZT[31],AZT[32],AZT[33],AZT[34],AZT[35],AZT[36],AZT[37],AZT[38],AZT[39],AZT[40],AZT[41],AZT[42],AZT[43],AZT[44],AZT[45],AZT[46],AZT[47],AZT[48] ! SSP 249775
0325 IOLIST AZTT$,AZTT[0],AZTT[1],AZTT[2],AZTT[3],AZTT[4],AZTT[5],AZTT[6],AZTT[7],AZTT[8],AZTT[9],AZTT[10],AZTT[11],AZTT[12],AZTT[13],AZTT[14],AZTT[15],AZTT[16],AZTT[17],AZTT[18],AZTT[19],AZTT[20],AZTT[21],AZTT[22],AZTT[23],AZTT[24],AZTT[25],AZTT[26],AZTT[27],AZTT[28],AZTT[29],AZTT[30],AZTT[31],AZTT[32],AZTT[33],AZTT[34],AZTT[35],AZTT[36],AZTT[37],AZTT[38],AZTT[39],AZTT[40],AZTT[41],AZTT[42],AZTT[43],AZTT[44],AZTT[45],AZTT[46],AZTT[47],AZTT[48] ! SSP 249775
0350 IOLIST Y[0],Y[1],Y[2],Y[3],Y[4]
0390 IOLIST ARB$,ARB[0],ARB[1],ARB[2],ARB[3],ARB[4],ARB[5],ARB[6],ARB[7],ARB[8],ARB[9],ARB[10],ARB[11],ARB[12],ARB[13],ARB[14],ARB[15],ARB[16],ARB[17],ARB[18],ARB[19],ARB[20],ARB[21],ARB[22],ARB[23],ARB[24],ARB[25],ARB[26],ARB[27],ARB[28],ARB[29],ARB[30]
0391 IOLIST AZB$,AZB[0],AZB[1],AZB[2],AZB[3],AZB[4],AZB[5],AZB[6],AZB[7],AZB[8],AZB[9],AZB[10],AZB[11],AZB[12],AZB[13],AZB[14],AZB[15],AZB[16],AZB[17],AZB[18],AZB[19],AZB[20],AZB[21],AZB[22],AZB[23],AZB[24],AZB[25],AZB[26],AZB[27],AZB[28],AZB[29],AZB[30]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AZB...  02O AZT...  13O ZZPARM  15O ARB...  16O ART...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 GOSUB CHECK_FILES
0550 F=Z[16]
0560 ! MEM_FL=HFN
0580 DIM Y[4]
0600 REM "
0626 GOSUB 8100
0628 REFRESH_FLG=1
0630 RETURN 
0649 ! 
0650 PROCEED:
0700 GOSUB SET_VALUES
0910 T0=1,T=1
0950 GOSUB 8150
0958 DIM AZB$(703),AZB[31]
0960 READ (Z[1],KEY=CUST_ST$,KNO=1,DOM=*NEXT)
1000 NEXT_AZB:; REM "BEGIN MAIN PROCESS
1005 AZB_KEY$=KEY(Z[1],KNO=1,END=5000); READ (Z[1],KEY=AZB_KEY$,KNO=1)IOL=0391
1020 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1100 AZB_CUST$=AZB$(18,10)
1110 AZB_FY$=AZB$(1,4)
1120 AZB_ACCTPD$=AZB$(5,2)
1130 AZB_INV$=AZB$(7,8)
1150 IF AZB_CUST$<CUST_ST$ OR AZB_CUST$>CUST_E$ THEN GOTO NEXT_AZB
1160 IF AZB_FY$+AZB_ACCTPD$<ST_FISCAL$+ST_ACCTPD$ OR AZB_FY$+AZB_ACCTPD$>E_FISCAL$+E_ACCTPD$ THEN GOTO NEXT_AZB
1180 IF AZB_INV$<INV_ST$ OR AZB_INV$>INV_E$ THEN GOTO NEXT_AZB
1185 ARB_KEY$=AZB_FY$+AZB_ACCTPD$+AZB_INV$
1190 CLOSE (MEM_FL,ERR=*NEXT)
1200 MEM_FL=HFN; OPEN (MEM_FL)"*MEMORY*"
1500 GOSUB IMPORT_INVOICE
1600 GOTO 1000
5000 REM "EOJ
5010 C=T; GOSUB 8150
5025 GOSUB CLEAR_INPUT
5035 REFRESH_FLG=1
5040 RETURN 
5090 ! 
5505 REM "OUTPUT ARBZZZZ"
7000 PRINT_JNL:
7010 ! ML_MSG$="Printing Sales Journal"; REFRESH_FLG=1
7020 ! ALL "ZZ2RPA;CHECK_BATCH",F_BATCH$,BATCH_EXISTS; IF NOT(BATCH_EXISTS) THEN RETURN
7025 C_BATCH$=F_BATCH$
7026 ! Lines 7030-7130 From ZZGCHN:SET_BATCH_IN_X3
7030 O$=PAD(STP(C_BATCH$,2),5)
7040 K0$=O$
7050 X3$(174,4)=K0$
7060 X3$(85,1)=MID(O$,5,1)
7070 FID_RECORD_IN:IOLIST *,M1$,X4$,D0$,X$,A9$ ! Don't read current X3$ in
7080 FID_RECORD_OUT:IOLIST X3$,M1$,X4$,D0$,X$,A9$ ! Don't read current X3$ in
7090 TSLOT=HFN; OPEN (TSLOT)"ZZPARM"
7100 READ (TSLOT,KEY=FID(0)+DIM(6))IOL=FID_RECORD_IN
7110 WRITE (TSLOT,KEY=FID(0)+DIM(6))IOL=FID_RECORD_OUT
7120 CLOSE (TSLOT)
7130 CALL "ZZWMX3" ! Update global variables
7140 CALL "ZZ2RPA;PREP_PRINT_REPORT","AR2DBA","            ","ARB   "
7150 CALL "AR2DBA",X3$,X4$,"*","*"
7180 NEXT_ID=BUTTON_3.CTL; REFRESH_FLG=1
7190 RETURN 
7199 ! 
7500 CLEAR_INPUT:
7510 GOSUB 8100
7515 CUST_START$=""
7520 CUST_END$=""
7525 CUST_END$=""
7530 START_FISCAL$=""
7540 END_FISCAL$=""
7550 START_ACCTPD$=""
7560 END_ACCTPD$=""
7570 INV_START$=""
7580 INV_END$=""
7590 REFRESH_FLG=1
7592 ML_MSG$=""
7595 RETURN 
7599 ! 
8100 ! Initialize progress bar variables
8110 CALL "ZZINFO",Z[1],T9,X3$,T,T0,K,B,D,S0,S1,F$
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 ! Update progress bar with current progress
8155 CALL "ZZBARG",X3$,"HG",22,7,45,T1,T,C
8195 RETURN 
8199 ! 
8200 SET_VALUES:
8205 EO$=DIM(15,"~")
8210 CUST_ST$=CUST_START$; IF NUL(CUST_ST$) THEN CUST_ST$=DIM(10)
8220 CUST_E$=CUST_END$; IF NUL(CUST_E$) THEN CUST_E$=EO$(1,10)
8230 ST_FISCAL$=START_FISCAL$; IF NUL(ST_FISCAL$) THEN ST_FISCAL$=DIM(4)
8240 E_FISCAL$=END_FISCAL$; IF NUL(E_FISCAL$) THEN E_FISCAL$=EO$(1,4)
8250 ST_ACCTPD$=START_ACCTPD$; IF NUL(ST_ACCTPD$) THEN ST_ACCTPD$=DIM(2)
8260 E_ACCTPD$=END_ACCTPD$; IF NUL(E_ACCTPD$) THEN E_ACCTPD$=EO$(1,2)
8270 INV_ST$=INV_START$; IF NUL(INV_ST$) THEN INV_ST$=DIM(8)
8280 INV_E$=INV_END$; IF NUL(INV_E$) THEN INV_E$=EO$(1,8)
8285 T=1,C=0,T0=0; GOSUB 8100; REFRESH_FLG=1
8290 RETURN 
8299 ! 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9515 GOTO 0610
9520 ON C9 GOTO 1140,2040
9900 ! 
9901 END_PROG:
9905 SET_PARAM 'XI'=SAVE_XI
9907 %GUI=SAVE_GUI
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 CMD_STR$="E"
9940 EXIT 
9999 END 
10000 REM "Given an AZB key import the invoice information from AZB and AZT into ARB and ART
10010 IMPORT_INVOICE:
10050 REM "UPDATE ARB FILE - COPY OF AZB
10065 DIM ARB$(689),ARB[30]
10070 ARB$(1,14)=AZB$(1,14)
10080 ARB$(15,400)=MID(AZB$,18,400)
10100 ARB$(415,5)=MID(AZB$,428,5); REM " SALESMEN BUCKETS  ssp#172885
10110 ! ARB$(86,6)=AZB$(433,6) ! SSP194808 - use invoice date as default, for cm !SSP#301390
10120 DIM ARB[30]; FOR I=0 TO 30; ARB[I]=AZB[I]; NEXT I ! SSP#230380
10140 GOSUB GET_TAX_CODE
10150 WRITE (Z[15],KEY=ARB_KEY$)IOL=0390
10160 A0=0,A=0
10190 ! 
10200 REM " UPDATE ART FROM AZT FILE
10210 GOSUB CREATE_TMP_FILE
10220 READ (MEM_FL,KEY="",ERR=*NEXT)
10230 NEXT_REC:
10235 DIM AZT$(160),AZT[48]
10240 READ (MEM_FL,END=END_OF_INV)IOL=0321
10400 GOSUB GET_ART_INDEX
10500 GOSUB WRITE_ART
10530 A=A9,A9=0
10540 DIM ART[48]; FOR I=O TO 47; ART[I]=AZT[I]; NEXT I ! SSP 249775
10545 DIM ART$(289)
10550 ART$(1,289)=AZT$(21)
10580 GOTO NEXT_REC
10590 ! 
10600 END_OF_INV:
10605 A9=(-1)
10610 GOSUB WRITE_ART
10620 ARB[20]=A0
10630 WRITE (Z[15],KEY=ARB_KEY$)IOL=0390
10640 CALL "AR2EA1",X3$,X4$,ARB$,ARB{ALL},0
10645 IF ARB$(115,1)="Y" THEN ARB[9]=ARB[1]+ARB[2] ELSE ARB[9]=ARB[1]+ARB[2]+ARB[4]+ARB[6]+ARB[8]
10650 WRITE (Z[15],KEY=ARB_KEY$)IOL=0390
10690 RETURN 
10999 ! 
11000 REM "Check if batch files have data in them. Warn user!
11010 CHECK_FILES:
11020 ANS$=""; IF FIN(Z[15],"NUMREC")<>"0" THEN MSGBOX "Files are not empty. WARNING!!!"+SEP+"Would you like to clear them?","Files in use!","?,YESNO",ANS$; IF ANS$="NO" THEN RETURN 
11025 IF ANS$="YES" THEN Q$=STR(Z[15]:"00")+STR(Z[16]:"00"); CALL "ZZINIT",Q$
11095 RETURN 
11099 ! 
11400 GET_ART_INDEX:REM "GET NEXT INDEX TO FILE IN A9
11410 EXTRACT (F,IND=0,ERR=11495)IOL=0350
11420 IF Y[4]=-2 THEN READ (F); WAIT 0; GOTO 11410
11430 Y[4]=-2; WRITE (F,IND=0)IOL=0350
11440 IF Y[1]<1 THEN A9=Y[2],Y[2]=Y[2]+1; GOTO 11460
11450 A9=Y[1]; READ (F,IND=A9)Y[1]
11460 IF Y[0]<Y[3]-1 THEN Y[0]=Y[0]+1,Y[4]=-1 ELSE Y[4]=-1; GOTO END_OF_LINES
11470 WRITE (F,IND=0)IOL=0350
11480 IF A0=0 THEN A0=A9
11490 RETURN 
11495 IF ERR<>0 THEN GOTO 9000 ELSE RETRY 
11499 ! 
11500 END_OF_LINES:REM "END OF LINES
11510 Y[4]=-1; WRITE (F,IND=0)IOL=0350
11520 CALL "ZZEXPF",X3$,X4$,"X"+STR(F),"",G9; IF G9>0 THEN GOTO 11440
11530 EXTRACT (F,IND=0)IOL=0350
11540 Z=NUM(FIN(F,"MAXREC")); Y[3]=Z-1
11550 Y[4]=-2; WRITE (F,IND=0)IOL=0350
11560 GOTO 11440
11599 ! 
11600 WRITE_ART:
11605 REM "Write out line to index A, A9 is assumed to point to next line
11610 IF A<=0 THEN RETURN 
11620 WRITE (F,IND=A)IOL=0320
11640 RETURN 
11690 ! 
12000 GET_TAX_CODE:
12020 DIM G$(190); CALL "TW2FUN;LOOKUP_TAX_CODE",ERR=7783,X3$,X4$,ARB$(267,2),ARB$(269,5),ARB$(251,16),"",T$,T{ALL}; G$(1)=T$(1) ! 245342 !SSP#258039
12040 ARB$(67,10)=G$(1,10)
12090 RETURN 
12099 ! 
13099 ! 
15000 RECALC_TAX:
15010 READ (Z[15],KEY="",ERR=*NEXT)
15020 K$=KEY(Z[15],END=*RETURN); READ (Z[15],KEY=K$)IOL=0390
15030 CALL "AR2EA1",X3$,X4$,ARB$,ARB{ALL},0
15040 ! [9]=A[1]+A[2]+A[4]+A[6]+A[8]
15050 IF ARB$(115,1)="Y" THEN ARB[9]=ARB[1]+ARB[2] ELSE ARB[9]=ARB[1]+ARB[2]+ARB[4]+ARB[6]+ARB[8]
15060 WRITE (Z[15],KEY=K$)IOL=0390
15070 GOTO 15020
15090 RETURN 
15099 ! 
20000 CREATE_TMP_FILE:
20005 SSP$=""
20008 DIM AZT$(160),AZT[48]
20009 AZT_K$=AZB_FY$+AZB_ACCTPD$+AZB_INV$
20010 READ (Z[2],KEY=AZT_K$+"",ERR=*NEXT)IOL=0321
20015 READ_NEXT:
20020 AZT_KEY$=KEY(Z[2],END=END_TMP); READ (Z[2],KEY=AZT_KEY$)IOL=0321
20030 IF AZT_KEY$(1,LEN(AZT_K$))<>AZT_K$ THEN GOTO END_TMP
20040 IF AZT$(21,1)="M" THEN GOTO 20060
20050 IF STP(AZT$(155,1),2)<>"" THEN SSP$="Y",SSP_KEY$=AZT_KEY$; GOTO WRITE_TMP ELSE SSP$="N",AZT$(145,10)=ARB$(67,10); GOTO WRITE_TMP
20060 IF SSP$="Y" THEN GOSUB SPEC_SHIP
20500 WRITE_TMP:
20510 WRITE (MEM_FL,KEY=AZT_KEY$)IOL=0321
20520 GOTO READ_NEXT
20590 ! 
21200 END_TMP:
21210 RETURN 
21290 ! 
22000 SPEC_SHIP:
22010 IF AZT$(21,1)<>"M" THEN SSP$=""; RETURN 
22030 DESC$=MID(AZT$,27,40)
22034 SP$=" "
22040 X=MSK(DESC$,"[A-Z][A-Z]( )[0-9][0-9][0-9][0-9][0-9]",ERR=*RETURN)
22050 IF X=0 THEN RETURN 
22060 ! ESC$=DESC$(5)
22070 STATE$=DESC$(X,2)
22080 ZIP$=DESC$(X+3,5)
22090 CITY$=STP(DESC$(1,X-1),2),CITY$=CITY$(1,LEN(CITY$)-1)
22095 XX=POS("To"=CITY$); IF XX<>0 THEN CITY$=CITY$(4)
22100 DIM G$(190); CALL "TW2FUN;LOOKUP_TAX_CODE",ERR=*NEXT,X3$,X4$,STATE$,ZIP$,CITY$,"",T$,T{ALL}; G$(1)=T$(1)
22105 DIM AZTT$(160),AZTT[48]
22110 FIND (MEM_FL,KEY=SSP_KEY$,DOM=22150)IOL=0325
22120 AZTT$(145,10)=G$(1,10)
22130 WRITE (MEM_FL,KEY=SSP_KEY$)IOL=0325
22150 SSP$=""
22160 RETURN 
22199 ! 
25000 OUTPUT_TO_EXCEL:
25010 ARBE=Z[15]
25015 FILE$="ARB"
25070 ! L_MSG$="Outputting records found....."; REFRESH_FLG=1
25080 GOSUB OUTPUT_FILES
25090 SYSTEM_HELP SUB(FILE_NAME$,"[wdx]","")
25190 RETURN 
25199 ! 
25500 OUTPUT_FILES:
25505 REM "OUTPUT ARBZZZZ"
25510 WAIT 1; CURRENT_PREC=PRC; PRECISION 4; TIME=TIM; FILE_NAME$="[wdx]C:\temp\OUTPUT_"+FID(0)+"_"+STR(TIME*1000:"00000")+STR(RND(10000):"0000")+".csv"; PRECISION CURRENT_PREC
25520 SERIAL FILE_NAME$
25550 OPEN PURGE (HFN)FILE_NAME$; _CE=LFO
25560 GOSUB PRINT_HEADER
25570 CALL "DBSQLGEN",ORA_IOL$,ERRMSG$,"ARB_InvoiceEntHdr","*providex.ddf","","IOL"
25580 CALL "ZZWIOL",ARBE,"B",PVX_IOL$
25590 PVX_IOL$=CPL(PVX_IOL$)
25600 ORA_IOL$=CPL(ORA_IOL$)
25620 GOSUB OUTPUT_RECS
25650 CLOSE (_CE)
25660 RETURN 
25699 ! 
26000 OUTPUT_RECS:
26010 READ (ARBE,KEY="",DOM=*NEXT)
26020 K$=KEY(ARBE,END=26090); READ (ARBE,KEY=K$)IOL=PVX_IOL$
26060 PRINT (_CE)IOL=ORA_IOL$
26080 GOTO 26020
26090 RETURN 
26099 ! 
26100 PRINT_HEADER:
26120 PRINT (_CE)"FY,ACCTPD,INV_NUM,CUST_DIV,CUST_CODE,CUST_NAME,CASH_SALE,BANK_CODE,PRINTED_FLAG,TERMS_CODE,STAX_CODE,INV_TYPE,APPLY_TO_INV_NUM,INV_DATE,ORDER_DIV,ORDER_NUM,CUST_PO,TAX_EXEMPT,INV_DUE_DATE,DISC_DUE_DAY,COMM_CODE,SPER_CODE,SPER_CODE_2,SPER_CODE_3,SPER_CODE_4,SPER_CODE_5,CUST_CATEGORY,SHIP_VIA_DESC,SPECIAL_SHIPPING,MULTI_STAX,FOB_PT,SHIP_DATE,SHIP_VIA_CODE,LOC_CODE,LOC_ADDR_1,LOC_ADDR_2,LOC_CITY,LOC_ST,LOC_ZIP_CODE,LOC_PHONE,LOC_DESC,JOB_NUM,TEMP_AUTO_BILL,SRC_COMP_CODE,RL_TYPE,OVERRIDE_TERMS,ORDER_TYPE,SUMMARY_BILL,PRINT_INV,PRINT_INV_NUM,ITEM_CODE,ITEM_DESC,WHSE_FROM_GEN_SHIP,GB_SAMP_RB,GB_P_S_R,COMM_BRACK,CRED_CARD_CHARGED,CONTRACT_NUM,CONTRACT_DATE,OPER_CODE_1ST,OPER_CODE_LAST_ACC,ARB_UNUSED_1,GL_DETAIL_LINK,NET_SALE,FRT_BILLED,ST_STAX_AMT,ST_STAX_BILLED,CNTY_STAX_AMT,CNTY_STAX_BILLED,LCL_STAX_AMT,LCL_STAX_BILLED,INV_TOTAL,DISC_AMT,TF_COST,COMM_AMT_1,COMM_AMT_2,COMM_AMT_3,COMM_AMT_4,COMM_AMT_5,COSTED_FRT,TOTAL_COMM,TOTAL_GP_ADJ,LINE_LINK,SPER_1_COMM,SPER_2_COMM,SPER_3_COMM,SPER_4_COMM,SPER_5_COMM,SPER_1_HIGH,SPER_2_HIGH,SPER_3_HIGH,SPER_4_HIGH,SPER_5_HIGH"
26130 RETURN 
26199 ! 
27005 DEF FN_TFDATE$(LOCAL TFDATE$, LOCAL DATE_FORMAT$, LOCAL MODE)
27010 LOCAL RET_VAL$
27015 IF TFDATE$<>"" AND NUL(TFDATE$) THEN IF MODE=0 THEN RET_VAL$=TFDATE$; GOTO 27090 ELSE TFDATE$="G00101" ! If tfdate is "" or all spaces, then return the same number of spaces if not a key column else return "1960-01-01"
27020 RET_VAL$=FN%PRINT_DATETIME$(FN%GET_DATETIME(TFDATE$,0),DATE_FORMAT$)
27090 RETURN RET_VAL$
27095 END DEF
27100 ! 
30650 PROCEED_FROM_WORKFILE:
30910 T0=1,T=1,C=0
30915 IF WRKCHAN THEN CLOSE (WRKCHAN); WRKCHAN=0 END_IF ; OPEN (HFN,ERR=*NEXT)"WRKARBZZZZ"; WRKCHAN=LFO; GOTO 30920
30916 MSGBOX "Error trying to open work file for input!","Error","STOP,OK"
30917 GOTO 31725
30920 CALL "ZZ2FNC;SERIALRECCNT",WRKCHAN,T
30925 MSGBOX "There are "+STR(T)+" records to be processed...","FYI","!,OK,TIM=2"
30930 T0=INT(T*.02); IF T0<=1 THEN T0=2
30950 GOSUB 8150
30970 DIM AZB$(703),AZB[31]
30980 READ RECORD (WRKCHAN,END=31700)AZB_KEY$
31005 READ (Z[1],KEY=PAD(AZB_KEY$,17),KNO=0)IOL=0391
31020 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
31100 AZB_CUST$=AZB$(18,10)
31110 AZB_FY$=AZB$(1,4)
31120 AZB_ACCTPD$=AZB$(5,2)
31130 AZB_INV$=AZB$(7,8)
31140 ARB_KEY$=AZB_FY$+AZB_ACCTPD$+AZB_INV$
31190 CLOSE (MEM_FL,ERR=*NEXT)
31200 MEM_FL=HFN; OPEN (MEM_FL)"*MEMORY*"
31500 GOSUB IMPORT_INVOICE
31600 GOTO 30970
31700 REM "EOJ
31710 C=T; GOSUB 8150
31725 GOSUB CLEAR_INPUT
31735 REFRESH_FLG=1
31736 CLOSE (WRKCHAN,ERR=*PROCEED); WRKCHAN=0
31740 RETURN 
31790 ! 
56000 REM "258620-Customer WELLCARE needs to have sales tax recalculated for  
56001 REM "269312-Customer name is wrong on the invoice.                      
56002 REM "301390-Utility to create invoice batch is updating the invoice date with order date
