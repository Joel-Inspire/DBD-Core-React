0010 ! ARGMDB - File Maintenance Program for AR4_Comm (="AR4"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Jun. 5, 2002 12:58
0030 ! ************************************************************************
0035 ! "6.0 - 06/02/03 - 9.371666 - dmm
0040 ! "Copyright 2003 Computer Software Inc.; Norcross, Georgia
0041 ! "        Licensed Software - All Rights Reserved.
0050 PROCESS "ARGMDB","../ARG/AR.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="AR4"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 HC_PFX$="@",HOUSE_BASE_RATE_MSG_1$="",HOUSE_BASE_RATE_MSG_2$=""
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="COMM_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1015 COMM_CODE$=HC_PFX$+PAD(HOUSE$,4),ID$="COMM_CODE"; IF QRY_VAL$>"" THEN QRY_VAL$=COMM_CODE$
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",ANSWER$
1230 IF ANSWER$="NO" THEN GOTO CLEAR_REC
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1435 IF CALC_COMM_ON_TYPE$<>"Y" THEN CALC_COMM_ON_TYPE$="N",HOUSE_CHRG_TYPE$="N"
1437 IF HOUSE_CHRG_TYPE$<>"Y" THEN HOUSE_CHRG_TYPE$="N"
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1855 NEXT_ID=HOUSE.CTL
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2035 IF _KEY$="" THEN READ (_FIL_NO,KEY=HC_PFX$,ERR=*NEXT)
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF _KEY$(1,1)<>HC_PFX$ THEN GOTO END_OF_FILE
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE)
2231 IF _KEY$(1,1)<>HC_PFX$ THEN GOTO START_OF_FILE
2232 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 READ (_FIL_NO,KEY=HC_PFX$,ERR=*NEXT)
2431 _KEY$=KEY(_FIL_NO,ERR=NO_FIRST)
2440 IF _KEY$(1,1)<>HC_PFX$ THEN GOTO NO_FIRST
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 READ (_FIL_NO,KEY=HC_PFX$+$FE$,ERR=*NEXT)
2640 _KEY$=KEP(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3045 GOSUB HOUSE_METHOD; GOSUB CHARGEBACK_COMM
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3065 HOUSE$=COMM_CODE$(2,1); GOSUB TABLE_VALUES
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=COMM_CODE.CTL,_FIRST_FIELD=COMM_DESC.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 HOUSE_CHRG_RATE$=STR(HOUSE_CHRG_RATE)
10030 BASE_COMM_RATE$=STR(BASE_COMM_RATE)
10040 COMM_BREAK_1$=STR(COMM_BREAK_1)
10050 COMM_RATE_1$=STR(COMM_RATE_1)
10060 COMM_BREAK_2$=STR(COMM_BREAK_2)
10070 COMM_RATE_2$=STR(COMM_RATE_2)
10080 COMM_BREAK_3$=STR(COMM_BREAK_3)
10090 COMM_RATE_3$=STR(COMM_RATE_3)
10100 COMM_BREAK_4$=STR(COMM_BREAK_4)
10110 COMM_RATE_4$=STR(COMM_RATE_4)
10120 COMM_BREAK_5$=STR(COMM_BREAK_5)
10130 COMM_RATE_5$=STR(COMM_RATE_5)
10140 COMM_BREAK_6$=STR(COMM_BREAK_6)
10150 COMM_RATE_6$=STR(COMM_RATE_6)
10160 COMM_BREAK_7$=STR(COMM_BREAK_7)
10170 COMM_RATE_7$=STR(COMM_RATE_7)
10180 HOUSE_CHRG_MAX$=STR(HOUSE_CHRG_MAX)
10190 ADDL_RATE_1$=STR(ADDL_RATE_1)
10200 ADDL_RATE_2$=STR(ADDL_RATE_2)
10210 ADDL_RATE_3$=STR(ADDL_RATE_3)
10220 ADDL_RATE_4$=STR(ADDL_RATE_4)
10230 ADDL_RATE_5$=STR(ADDL_RATE_5)
10240 ADDL_RATE_6$=STR(ADDL_RATE_6)
10250 ADDL_RATE_7$=STR(ADDL_RATE_7)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="HOUSE_CHRG_RATE",_X=HOUSE_CHRG_RATE.CTL,HOUSE_CHRG_RATE=NUM(HOUSE_CHRG_RATE$,ERR=NON_NUMERIC)
11030 _X$="BASE_COMM_RATE",_X=BASE_COMM_RATE.CTL,BASE_COMM_RATE=NUM(BASE_COMM_RATE$,ERR=NON_NUMERIC)
11040 _X$="COMM_BREAK_1",_X=COMM_BREAK_1.CTL,COMM_BREAK_1=NUM(COMM_BREAK_1$,ERR=NON_NUMERIC)
11050 _X$="COMM_RATE_1",_X=COMM_RATE_1.CTL,COMM_RATE_1=NUM(COMM_RATE_1$,ERR=NON_NUMERIC)
11060 _X$="COMM_BREAK_2",_X=COMM_BREAK_2.CTL,COMM_BREAK_2=NUM(COMM_BREAK_2$,ERR=NON_NUMERIC)
11070 _X$="COMM_RATE_2",_X=COMM_RATE_2.CTL,COMM_RATE_2=NUM(COMM_RATE_2$,ERR=NON_NUMERIC)
11080 _X$="COMM_BREAK_3",_X=COMM_BREAK_3.CTL,COMM_BREAK_3=NUM(COMM_BREAK_3$,ERR=NON_NUMERIC)
11090 _X$="COMM_RATE_3",_X=COMM_RATE_3.CTL,COMM_RATE_3=NUM(COMM_RATE_3$,ERR=NON_NUMERIC)
11100 _X$="COMM_BREAK_4",_X=COMM_BREAK_4.CTL,COMM_BREAK_4=NUM(COMM_BREAK_4$,ERR=NON_NUMERIC)
11110 _X$="COMM_RATE_4",_X=COMM_RATE_4.CTL,COMM_RATE_4=NUM(COMM_RATE_4$,ERR=NON_NUMERIC)
11120 _X$="COMM_BREAK_5",_X=COMM_BREAK_5.CTL,COMM_BREAK_5=NUM(COMM_BREAK_5$,ERR=NON_NUMERIC)
11130 _X$="COMM_RATE_5",_X=COMM_RATE_5.CTL,COMM_RATE_5=NUM(COMM_RATE_5$,ERR=NON_NUMERIC)
11140 _X$="COMM_BREAK_6",_X=COMM_BREAK_6.CTL,COMM_BREAK_6=NUM(COMM_BREAK_6$,ERR=NON_NUMERIC)
11150 _X$="COMM_RATE_6",_X=COMM_RATE_6.CTL,COMM_RATE_6=NUM(COMM_RATE_6$,ERR=NON_NUMERIC)
11160 _X$="COMM_BREAK_7",_X=COMM_BREAK_7.CTL,COMM_BREAK_7=NUM(COMM_BREAK_7$,ERR=NON_NUMERIC)
11170 _X$="COMM_RATE_7",_X=COMM_RATE_7.CTL,COMM_RATE_7=NUM(COMM_RATE_7$,ERR=NON_NUMERIC)
11180 _X$="HOUSE_CHRG_MAX",_X=HOUSE_CHRG_MAX.CTL,HOUSE_CHRG_MAX=NUM(HOUSE_CHRG_MAX$,ERR=NON_NUMERIC)
11190 _X$="ADDL_RATE_1",_X=ADDL_RATE_1.CTL,ADDL_RATE_1=NUM(ADDL_RATE_1$,ERR=NON_NUMERIC)
11200 _X$="ADDL_RATE_2",_X=ADDL_RATE_2.CTL,ADDL_RATE_2=NUM(ADDL_RATE_2$,ERR=NON_NUMERIC)
11210 _X$="ADDL_RATE_3",_X=ADDL_RATE_3.CTL,ADDL_RATE_3=NUM(ADDL_RATE_3$,ERR=NON_NUMERIC)
11220 _X$="ADDL_RATE_4",_X=ADDL_RATE_4.CTL,ADDL_RATE_4=NUM(ADDL_RATE_4$,ERR=NON_NUMERIC)
11230 _X$="ADDL_RATE_5",_X=ADDL_RATE_5.CTL,ADDL_RATE_5=NUM(ADDL_RATE_5$,ERR=NON_NUMERIC)
11240 _X$="ADDL_RATE_6",_X=ADDL_RATE_6.CTL,ADDL_RATE_6=NUM(ADDL_RATE_6$,ERR=NON_NUMERIC)
11250 _X$="ADDL_RATE_7",_X=ADDL_RATE_7.CTL,ADDL_RATE_7=NUM(ADDL_RATE_7$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12050 IF STP(COMM_METHOD$,3)="" THEN MSGBOX MSG("MUST_HSE_M"),MSG("ATTN"),"!"; _W_FLG=0,NEXT_ID=COMM_METHOD.CTL; GOTO *RETURN
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN COMM_CODE$="",HOUSE$=""
13030 COMM_DESC$=""
13040 COMM_METHOD$=""
13050 CALC_COMM_ON_TYPE$=""
13060 HOUSE_CHRG_TYPE$=""
13070 HOUSE_CHRG_CODE$=""
13080 MIN_COMM_AMT$=""
13090 AR4_UNUSED$=""
13100 HOUSE_CHRG_RATE=0
13110 BASE_COMM_RATE=0
13120 COMM_BREAK_1=0
13130 COMM_RATE_1=0
13140 COMM_BREAK_2=0
13150 COMM_RATE_2=0
13160 COMM_BREAK_3=0
13170 COMM_RATE_3=0
13180 COMM_BREAK_4=0
13190 COMM_RATE_4=0
13200 COMM_BREAK_5=0
13210 COMM_RATE_5=0
13220 COMM_BREAK_6=0
13230 COMM_RATE_6=0
13240 COMM_BREAK_7=0
13250 COMM_RATE_7=0
13260 HOUSE_CHRG_MAX=0
13270 ADDL_RATE_1=0
13280 ADDL_RATE_2=0
13290 ADDL_RATE_3=0
13300 ADDL_RATE_4=0
13310 ADDL_RATE_5=0
13320 ADDL_RATE_6=0
13330 ADDL_RATE_7=0
13900 FOR X=1 TO 7; TEMP$="%PROFIT_TABLE_"+STR(X)+"$"; VIA TEMP$=""; NEXT X
13910 FOR X=1 TO 7; TEMP2$="TO_AND_OVER_"+STR(X)+"$"; VIA TEMP2$=""; NEXT X
13920 HOUSE_BASE_RATE_MSG_1$="",HOUSE_BASE_RATE_MSG_2$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(32,"N")
15030 IF _ORIG.COMM_CODE$=_CUR.COMM_CODE$ OR COMM_CODE$=_CUR.COMM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.COMM_CODE$=COMM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("COMM_CODE")+" = "+_CUR.COMM_CODE$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_CODE")+" = "+_CUR.COMM_CODE$
15040 IF _ORIG.COMM_DESC$=_CUR.COMM_DESC$ OR COMM_DESC$=_CUR.COMM_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.COMM_DESC$=COMM_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("COMM_DESC")+" = "+_CUR.COMM_DESC$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_DESC")+" = "+_CUR.COMM_DESC$
15050 IF _ORIG.COMM_METHOD$=_CUR.COMM_METHOD$ OR COMM_METHOD$=_CUR.COMM_METHOD$ THEN GOTO *NEXT ELSE IF _ORIG.COMM_METHOD$=COMM_METHOD$ THEN _CHG2$=_CHG2$+SEP+MSG("COMM_METH")+" = "+_CUR.COMM_METHOD$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_METH")+" = "+_CUR.COMM_METHOD$
15060 IF _ORIG.CALC_COMM_ON_TYPE$=_CUR.CALC_COMM_ON_TYPE$ OR CALC_COMM_ON_TYPE$=_CUR.CALC_COMM_ON_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.CALC_COMM_ON_TYPE$=CALC_COMM_ON_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("CALC_C_O_T")+" = "+_CUR.CALC_COMM_ON_TYPE$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CALC_C_O_T")+" = "+_CUR.CALC_COMM_ON_TYPE$
15070 IF _ORIG.HOUSE_CHRG_TYPE$=_CUR.HOUSE_CHRG_TYPE$ OR HOUSE_CHRG_TYPE$=_CUR.HOUSE_CHRG_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.HOUSE_CHRG_TYPE$=HOUSE_CHRG_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("HOUS_C_T")+" = "+_CUR.HOUSE_CHRG_TYPE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HOUS_C_T")+" = "+_CUR.HOUSE_CHRG_TYPE$
15080 IF _ORIG.HOUSE_CHRG_CODE$=_CUR.HOUSE_CHRG_CODE$ OR HOUSE_CHRG_CODE$=_CUR.HOUSE_CHRG_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.HOUSE_CHRG_CODE$=HOUSE_CHRG_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("HOUSE_C_C")+" = "+_CUR.HOUSE_CHRG_CODE$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HOUSE_C_C")+" = "+_CUR.HOUSE_CHRG_CODE$
15090 IF _ORIG.MIN_COMM_AMT$=_CUR.MIN_COMM_AMT$ OR MIN_COMM_AMT$=_CUR.MIN_COMM_AMT$ THEN GOTO *NEXT ELSE IF _ORIG.MIN_COMM_AMT$=MIN_COMM_AMT$ THEN _CHG2$=_CHG2$+SEP+MSG("MIN_C_A")+" = "+_CUR.MIN_COMM_AMT$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MIN_C_A")+" = "+_CUR.MIN_COMM_AMT$
15100 IF _ORIG.AR4_UNUSED$=_CUR.AR4_UNUSED$ OR AR4_UNUSED$=_CUR.AR4_UNUSED$ THEN GOTO *NEXT ELSE IF _ORIG.AR4_UNUSED$=AR4_UNUSED$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.AR4_UNUSED$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.AR4_UNUSED$
15110 IF _ORIG.HOUSE_CHRG_RATE=_CUR.HOUSE_CHRG_RATE OR HOUSE_CHRG_RATE=_CUR.HOUSE_CHRG_RATE THEN GOTO *NEXT ELSE IF _ORIG.HOUSE_CHRG_RATE=HOUSE_CHRG_RATE THEN _CHG2$=_CHG2$+SEP+MSG("HOUS_C_R")+" = "+STR(_CUR.HOUSE_CHRG_RATE),_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HOUS_C_R")+" = "+STR(_CUR.HOUSE_CHRG_RATE)
15120 IF _ORIG.BASE_COMM_RATE=_CUR.BASE_COMM_RATE OR BASE_COMM_RATE=_CUR.BASE_COMM_RATE THEN GOTO *NEXT ELSE IF _ORIG.BASE_COMM_RATE=BASE_COMM_RATE THEN _CHG2$=_CHG2$+SEP+MSG("BASE_C_R")+" = "+STR(_CUR.BASE_COMM_RATE),_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BASE_C_R")+" = "+STR(_CUR.BASE_COMM_RATE)
15130 IF _ORIG.COMM_BREAK_1=_CUR.COMM_BREAK_1 OR COMM_BREAK_1=_CUR.COMM_BREAK_1 THEN GOTO *NEXT ELSE IF _ORIG.COMM_BREAK_1=COMM_BREAK_1 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_B_1")+" = "+STR(_CUR.COMM_BREAK_1),_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_B_1")+" = "+STR(_CUR.COMM_BREAK_1)
15140 IF _ORIG.COMM_RATE_1=_CUR.COMM_RATE_1 OR COMM_RATE_1=_CUR.COMM_RATE_1 THEN GOTO *NEXT ELSE IF _ORIG.COMM_RATE_1=COMM_RATE_1 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_R_1")+" = "+STR(_CUR.COMM_RATE_1),_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_R_1")+" = "+STR(_CUR.COMM_RATE_1)
15150 IF _ORIG.COMM_BREAK_2=_CUR.COMM_BREAK_2 OR COMM_BREAK_2=_CUR.COMM_BREAK_2 THEN GOTO *NEXT ELSE IF _ORIG.COMM_BREAK_2=COMM_BREAK_2 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_B_2")+" = "+STR(_CUR.COMM_BREAK_2),_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_B_2")+" = "+STR(_CUR.COMM_BREAK_2)
15160 IF _ORIG.COMM_RATE_2=_CUR.COMM_RATE_2 OR COMM_RATE_2=_CUR.COMM_RATE_2 THEN GOTO *NEXT ELSE IF _ORIG.COMM_RATE_2=COMM_RATE_2 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_R_2")+" = "+STR(_CUR.COMM_RATE_2),_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_R_2")+" = "+STR(_CUR.COMM_RATE_2)
15170 IF _ORIG.COMM_BREAK_3=_CUR.COMM_BREAK_3 OR COMM_BREAK_3=_CUR.COMM_BREAK_3 THEN GOTO *NEXT ELSE IF _ORIG.COMM_BREAK_3=COMM_BREAK_3 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_B_3")+" = "+STR(_CUR.COMM_BREAK_3),_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_B_3")+" = "+STR(_CUR.COMM_BREAK_3)
15180 IF _ORIG.COMM_RATE_3=_CUR.COMM_RATE_3 OR COMM_RATE_3=_CUR.COMM_RATE_3 THEN GOTO *NEXT ELSE IF _ORIG.COMM_RATE_3=COMM_RATE_3 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_R_3")+" = "+STR(_CUR.COMM_RATE_3),_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_R_3")+" = "+STR(_CUR.COMM_RATE_3)
15190 IF _ORIG.COMM_BREAK_4=_CUR.COMM_BREAK_4 OR COMM_BREAK_4=_CUR.COMM_BREAK_4 THEN GOTO *NEXT ELSE IF _ORIG.COMM_BREAK_4=COMM_BREAK_4 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_B_4")+" = "+STR(_CUR.COMM_BREAK_4),_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_B_4")+" = "+STR(_CUR.COMM_BREAK_4)
15200 IF _ORIG.COMM_RATE_4=_CUR.COMM_RATE_4 OR COMM_RATE_4=_CUR.COMM_RATE_4 THEN GOTO *NEXT ELSE IF _ORIG.COMM_RATE_4=COMM_RATE_4 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_R_4")+" = "+STR(_CUR.COMM_RATE_4),_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_R_4")+" = "+STR(_CUR.COMM_RATE_4)
15210 IF _ORIG.COMM_BREAK_5=_CUR.COMM_BREAK_5 OR COMM_BREAK_5=_CUR.COMM_BREAK_5 THEN GOTO *NEXT ELSE IF _ORIG.COMM_BREAK_5=COMM_BREAK_5 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_B_5")+" = "+STR(_CUR.COMM_BREAK_5),_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_B_5")+" = "+STR(_CUR.COMM_BREAK_5)
15220 IF _ORIG.COMM_RATE_5=_CUR.COMM_RATE_5 OR COMM_RATE_5=_CUR.COMM_RATE_5 THEN GOTO *NEXT ELSE IF _ORIG.COMM_RATE_5=COMM_RATE_5 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_R_5")+" = "+STR(_CUR.COMM_RATE_5),_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_R_5")+" = "+STR(_CUR.COMM_RATE_5)
15230 IF _ORIG.COMM_BREAK_6=_CUR.COMM_BREAK_6 OR COMM_BREAK_6=_CUR.COMM_BREAK_6 THEN GOTO *NEXT ELSE IF _ORIG.COMM_BREAK_6=COMM_BREAK_6 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_B_6")+" = "+STR(_CUR.COMM_BREAK_6),_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_B_6")+" = "+STR(_CUR.COMM_BREAK_6)
15240 IF _ORIG.COMM_RATE_6=_CUR.COMM_RATE_6 OR COMM_RATE_6=_CUR.COMM_RATE_6 THEN GOTO *NEXT ELSE IF _ORIG.COMM_RATE_6=COMM_RATE_6 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_R_6")+" = "+STR(_CUR.COMM_RATE_6),_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_R_6")+" = "+STR(_CUR.COMM_RATE_6)
15250 IF _ORIG.COMM_BREAK_7=_CUR.COMM_BREAK_7 OR COMM_BREAK_7=_CUR.COMM_BREAK_7 THEN GOTO *NEXT ELSE IF _ORIG.COMM_BREAK_7=COMM_BREAK_7 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_B_7")+" = "+STR(_CUR.COMM_BREAK_7),_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_B_7")+" = "+STR(_CUR.COMM_BREAK_7)
15260 IF _ORIG.COMM_RATE_7=_CUR.COMM_RATE_7 OR COMM_RATE_7=_CUR.COMM_RATE_7 THEN GOTO *NEXT ELSE IF _ORIG.COMM_RATE_7=COMM_RATE_7 THEN _CHG2$=_CHG2$+SEP+MSG("COMM_R_7")+" = "+STR(_CUR.COMM_RATE_7),_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_R_7")+" = "+STR(_CUR.COMM_RATE_7)
15270 IF _ORIG.HOUSE_CHRG_MAX=_CUR.HOUSE_CHRG_MAX OR HOUSE_CHRG_MAX=_CUR.HOUSE_CHRG_MAX THEN GOTO *NEXT ELSE IF _ORIG.HOUSE_CHRG_MAX=HOUSE_CHRG_MAX THEN _CHG2$=_CHG2$+SEP+MSG("HOUS_C_M")+" = "+STR(_CUR.HOUSE_CHRG_MAX),_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HOUS_C_M")+" = "+STR(_CUR.HOUSE_CHRG_MAX)
15280 IF _ORIG.ADDL_RATE_1=_CUR.ADDL_RATE_1 OR ADDL_RATE_1=_CUR.ADDL_RATE_1 THEN GOTO *NEXT ELSE IF _ORIG.ADDL_RATE_1=ADDL_RATE_1 THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_R_1")+" = "+STR(_CUR.ADDL_RATE_1),_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_R_1")+" = "+STR(_CUR.ADDL_RATE_1)
15290 IF _ORIG.ADDL_RATE_2=_CUR.ADDL_RATE_2 OR ADDL_RATE_2=_CUR.ADDL_RATE_2 THEN GOTO *NEXT ELSE IF _ORIG.ADDL_RATE_2=ADDL_RATE_2 THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_R_2")+" = "+STR(_CUR.ADDL_RATE_2),_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_R_2")+" = "+STR(_CUR.ADDL_RATE_2)
15300 IF _ORIG.ADDL_RATE_3=_CUR.ADDL_RATE_3 OR ADDL_RATE_3=_CUR.ADDL_RATE_3 THEN GOTO *NEXT ELSE IF _ORIG.ADDL_RATE_3=ADDL_RATE_3 THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_R_3")+" = "+STR(_CUR.ADDL_RATE_3),_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_R_3")+" = "+STR(_CUR.ADDL_RATE_3)
15310 IF _ORIG.ADDL_RATE_4=_CUR.ADDL_RATE_4 OR ADDL_RATE_4=_CUR.ADDL_RATE_4 THEN GOTO *NEXT ELSE IF _ORIG.ADDL_RATE_4=ADDL_RATE_4 THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_R_4")+" = "+STR(_CUR.ADDL_RATE_4),_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_R_4")+" = "+STR(_CUR.ADDL_RATE_4)
15320 IF _ORIG.ADDL_RATE_5=_CUR.ADDL_RATE_5 OR ADDL_RATE_5=_CUR.ADDL_RATE_5 THEN GOTO *NEXT ELSE IF _ORIG.ADDL_RATE_5=ADDL_RATE_5 THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_R_5")+" = "+STR(_CUR.ADDL_RATE_5),_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_R_5")+" = "+STR(_CUR.ADDL_RATE_5)
15330 IF _ORIG.ADDL_RATE_6=_CUR.ADDL_RATE_6 OR ADDL_RATE_6=_CUR.ADDL_RATE_6 THEN GOTO *NEXT ELSE IF _ORIG.ADDL_RATE_6=ADDL_RATE_6 THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_R_6")+" = "+STR(_CUR.ADDL_RATE_6),_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_R_6")+" = "+STR(_CUR.ADDL_RATE_6)
15340 IF _ORIG.ADDL_RATE_7=_CUR.ADDL_RATE_7 OR ADDL_RATE_7=_CUR.ADDL_RATE_7 THEN GOTO *NEXT ELSE IF _ORIG.ADDL_RATE_7=ADDL_RATE_7 THEN _CHG2$=_CHG2$+SEP+MSG("ADDL_R_7")+" = "+STR(_CUR.ADDL_RATE_7),_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ADDL_R_7")+" = "+STR(_CUR.ADDL_RATE_7)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN COMM_CODE$=_CUR.COMM_CODE$
16030 IF _CHG_VAR$(2,1)="Y" THEN COMM_DESC$=_CUR.COMM_DESC$
16040 IF _CHG_VAR$(3,1)="Y" THEN COMM_METHOD$=_CUR.COMM_METHOD$
16050 IF _CHG_VAR$(4,1)="Y" THEN CALC_COMM_ON_TYPE$=_CUR.CALC_COMM_ON_TYPE$
16060 IF _CHG_VAR$(5,1)="Y" THEN HOUSE_CHRG_TYPE$=_CUR.HOUSE_CHRG_TYPE$
16070 IF _CHG_VAR$(6,1)="Y" THEN HOUSE_CHRG_CODE$=_CUR.HOUSE_CHRG_CODE$
16080 IF _CHG_VAR$(7,1)="Y" THEN MIN_COMM_AMT$=_CUR.MIN_COMM_AMT$
16090 IF _CHG_VAR$(8,1)="Y" THEN AR4_UNUSED$=_CUR.AR4_UNUSED$
16100 IF _CHG_VAR$(9,1)="Y" THEN HOUSE_CHRG_RATE=_CUR.HOUSE_CHRG_RATE
16110 IF _CHG_VAR$(10,1)="Y" THEN BASE_COMM_RATE=_CUR.BASE_COMM_RATE
16120 IF _CHG_VAR$(11,1)="Y" THEN COMM_BREAK_1=_CUR.COMM_BREAK_1
16130 IF _CHG_VAR$(12,1)="Y" THEN COMM_RATE_1=_CUR.COMM_RATE_1
16140 IF _CHG_VAR$(13,1)="Y" THEN COMM_BREAK_2=_CUR.COMM_BREAK_2
16150 IF _CHG_VAR$(14,1)="Y" THEN COMM_RATE_2=_CUR.COMM_RATE_2
16160 IF _CHG_VAR$(15,1)="Y" THEN COMM_BREAK_3=_CUR.COMM_BREAK_3
16170 IF _CHG_VAR$(16,1)="Y" THEN COMM_RATE_3=_CUR.COMM_RATE_3
16180 IF _CHG_VAR$(17,1)="Y" THEN COMM_BREAK_4=_CUR.COMM_BREAK_4
16190 IF _CHG_VAR$(18,1)="Y" THEN COMM_RATE_4=_CUR.COMM_RATE_4
16200 IF _CHG_VAR$(19,1)="Y" THEN COMM_BREAK_5=_CUR.COMM_BREAK_5
16210 IF _CHG_VAR$(20,1)="Y" THEN COMM_RATE_5=_CUR.COMM_RATE_5
16220 IF _CHG_VAR$(21,1)="Y" THEN COMM_BREAK_6=_CUR.COMM_BREAK_6
16230 IF _CHG_VAR$(22,1)="Y" THEN COMM_RATE_6=_CUR.COMM_RATE_6
16240 IF _CHG_VAR$(23,1)="Y" THEN COMM_BREAK_7=_CUR.COMM_BREAK_7
16250 IF _CHG_VAR$(24,1)="Y" THEN COMM_RATE_7=_CUR.COMM_RATE_7
16260 IF _CHG_VAR$(25,1)="Y" THEN HOUSE_CHRG_MAX=_CUR.HOUSE_CHRG_MAX
16270 IF _CHG_VAR$(26,1)="Y" THEN ADDL_RATE_1=_CUR.ADDL_RATE_1
16280 IF _CHG_VAR$(27,1)="Y" THEN ADDL_RATE_2=_CUR.ADDL_RATE_2
16290 IF _CHG_VAR$(28,1)="Y" THEN ADDL_RATE_3=_CUR.ADDL_RATE_3
16300 IF _CHG_VAR$(29,1)="Y" THEN ADDL_RATE_4=_CUR.ADDL_RATE_4
16310 IF _CHG_VAR$(30,1)="Y" THEN ADDL_RATE_5=_CUR.ADDL_RATE_5
16320 IF _CHG_VAR$(31,1)="Y" THEN ADDL_RATE_6=_CUR.ADDL_RATE_6
16330 IF _CHG_VAR$(32,1)="Y" THEN ADDL_RATE_7=_CUR.ADDL_RATE_7
16990 RETURN 
20050 TABLE_VALUES:
20055 TABLE_IOL:IOLIST A$(1),A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15],A[16],A[17],A[18],A[19],A[20],A[21],A[22],A[23]
20056 FOR X=1 TO 7; TEMP$="%PROFIT_TABLE_"+STR(X)+"$"; VIA TEMP$=""; NEXT X
20057 FOR X=1 TO 7; TEMP2$="TO_AND_OVER_"+STR(X)+"$"; VIA TEMP2$=""; NEXT X
20060 DIM A[23]; READ (_FIL_NO,KEY=_KEY$)IOL=TABLE_IOL
20065 FOR I=2 TO 14 STEP 2
20067 IF I=2 THEN J=1 ELSE J=I/2
20070 IF I<14 AND A[I+2]>0 THEN TEMP$="%PROFIT_TABLE_"+STR(J)+"$"; VIA TEMP$=STR(A[I+2]-.01); TEMP2$="TO_AND_OVER_"+STR(J)+"$"; VIA TEMP2$=MSG("TO_1") ELSE IF I=2 AND A[I+1]=0 THEN EXITTO 20076 ELSE TEMP2$="TO_AND_OVER_"+STR(J)+"$"; VIA TEMP2$=MSG("AND_OVER"); EXITTO 20076
20075 NEXT I
20090 TABLE_VALUES_END:RETURN 
20095 ! 
21000 HOUSE_METHOD:
21010 IF COMM_METHOD$<>"6" THEN CALL "*wingrp;Hide",ONLY_6.GRP$ ELSE CALL "*wingrp;Show",ONLY_6.GRP$
21020 IF COMM_METHOD$="6" THEN CALL "*wingrp;Hide",NOT_6.GRP$ ELSE CALL "*wingrp;Show",NOT_6.GRP$
21090 HOUSE_METHOD_END:RETURN 
21095 ! 
21100 CHARGEBACK_COMM:
21110 IF CALC_COMM_ON_TYPE$<>"Y" THEN CALC_COMM_ON_TYPE$="N",HOUSE_CHRG_TYPE$="N"; CALL "*wingrp;Hide",TYPE.GRP$ ELSE CALL "*wingrp;Show",TYPE.GRP$
21190 CHARGEBACK_COMM_END:RETURN 
21195 ! 
21200 FOCUS_BASE_RATE:
21210 HOUSE_BASE_RATE_MSG_1$="",HOUSE_BASE_RATE_MSG_2$=""
21220 IF COMM_METHOD$="6" THEN HOUSE_BASE_RATE_MSG_1$=MSG("BASE_H_M_1"),HOUSE_BASE_RATE_MSG_2$=MSG("BASE_H_M_2")
21235 REFRESH_FLG=1
21240 FOCUS_BASE_RATE_END:RETURN 
21245 ! 
21250 SELECT_BASE_RATE:
21260 HOUSE_BASE_RATE_MSG_1$="",HOUSE_BASE_RATE_MSG_2$=""
21285 REFRESH_FLG=1
21290 SELECT_BASE_RATE_END:RETURN 
21295 ! 
21400 BREAK_1_ENTRY:
21410 IF NUM(COMM_BREAK_1$)=0 THEN NEXT_ID=BUTTON_1.CTL
21440 BREAK_1_ENTRY_END:RETURN 
21445 ! 
21450 BREAK_2_ENTRY:
21455 IF NUM(COMM_BREAK_2$)>0 THEN IF NUM(COMM_BREAK_2$)<=NUM(COMM_BREAK_1$) THEN MSGBOX MSG("MUST_HSE_B"),MSG("ATTN"),"!"; COMM_BREAK_2$="0"; NEXT_ID=COMM_BREAK_2.CTL; GOTO BREAK_2_ENTRY_END
21460 IF NUM(COMM_BREAK_2$)=0 THEN TO_AND_OVER_1$=MSG("AND_OVER"); NEXT_ID=BUTTON_1.CTL ELSE TO_AND_OVER_1$=MSG("TO_1"),%PROFIT_TABLE_1$=STR(NUM(COMM_BREAK_2$)-.01)
21490 BREAK_2_ENTRY_END: REFRESH_FLG=1; RETURN 
21495 ! 
21500 BREAK_3_ENTRY:
21505 IF NUM(COMM_BREAK_3$)>0 THEN IF NUM(COMM_BREAK_3$)<=NUM(COMM_BREAK_2$) THEN MSGBOX MSG("MUST_HSE_B"),MSG("ATTN"),"!"; COMM_BREAK_3$="0"; NEXT_ID=COMM_BREAK_3.CTL; GOTO BREAK_3_ENTRY_END
21510 IF NUM(COMM_BREAK_3$)=0 THEN TO_AND_OVER_2$=MSG("AND_OVER"); NEXT_ID=BUTTON_1.CTL ELSE TO_AND_OVER_2$=MSG("TO_1"),%PROFIT_TABLE_2$=STR(NUM(COMM_BREAK_3$)-.01)
21540 BREAK_3_ENTRY_END: REFRESH_FLG=1; RETURN 
21545 ! 
21550 BREAK_4_ENTRY:
21555 IF NUM(COMM_BREAK_4$)>0 THEN IF NUM(COMM_BREAK_4$)<=NUM(COMM_BREAK_3$) THEN MSGBOX MSG("MUST_HSE_B"),MSG("ATTN"),"!"; COMM_BREAK_4$="0"; NEXT_ID=COMM_BREAK_4.CTL; GOTO BREAK_4_ENTRY_END
21560 IF NUM(COMM_BREAK_4$)=0 THEN TO_AND_OVER_3$=MSG("AND_OVER"); NEXT_ID=BUTTON_1.CTL ELSE TO_AND_OVER_3$=MSG("TO_1"),%PROFIT_TABLE_3$=STR(NUM(COMM_BREAK_4$)-.01)
21590 BREAK_4_ENTRY_END: REFRESH_FLG=1; RETURN 
21595 ! 
21600 BREAK_5_ENTRY:
21605 IF NUM(COMM_BREAK_5$)>0 THEN IF NUM(COMM_BREAK_5$)<=NUM(COMM_BREAK_4$) THEN MSGBOX MSG("MUST_HSE_B"),MSG("ATTN"),"!"; COMM_BREAK_5$="0"; NEXT_ID=COMM_BREAK_5.CTL; GOTO BREAK_5_ENTRY_END
21610 IF NUM(COMM_BREAK_5$)=0 THEN TO_AND_OVER_4$=MSG("AND_OVER"); NEXT_ID=BUTTON_1.CTL ELSE TO_AND_OVER_4$=MSG("TO_1"),%PROFIT_TABLE_4$=STR(NUM(COMM_BREAK_5$)-.01)
21640 BREAK_5_ENTRY_END: REFRESH_FLG=1; RETURN 
21645 ! 
21650 BREAK_6_ENTRY:
21655 IF NUM(COMM_BREAK_6$)>0 THEN IF NUM(COMM_BREAK_6$)<=NUM(COMM_BREAK_5$) THEN MSGBOX MSG("MUST_HSE_B"),MSG("ATTN"),"!"; COMM_BREAK_6$="0"; NEXT_ID=COMM_BREAK_6.CTL; GOTO BREAK_6_ENTRY_END
21660 IF NUM(COMM_BREAK_6$)=0 THEN TO_AND_OVER_5$=MSG("AND_OVER"); NEXT_ID=BUTTON_1.CTL ELSE TO_AND_OVER_5$=MSG("TO_1"),%PROFIT_TABLE_5$=STR(NUM(COMM_BREAK_6$)-.01)
21690 BREAK_6_ENTRY_END: REFRESH_FLG=1; RETURN 
21695 ! 
21700 BREAK_7_ENTRY:
21705 IF NUM(COMM_BREAK_7$)>0 THEN IF NUM(COMM_BREAK_7$)<=NUM(COMM_BREAK_6$) THEN MSGBOX MSG("MUST_HSE_B"),MSG("ATTN"),"!"; COMM_BREAK_7$="0"; NEXT_ID=COMM_BREAK_7.CTL; GOTO BREAK_7_ENTRY_END
21710 IF NUM(COMM_BREAK_7$)=0 THEN TO_AND_OVER_6$=MSG("AND_OVER"); NEXT_ID=BUTTON_1.CTL ELSE TO_AND_OVER_6$=MSG("TO_1"),%PROFIT_TABLE_6$=STR(NUM(COMM_BREAK_7$)-.01),TO_AND_OVER_7$=MSG("AND_OVER")
21740 BREAK_7_ENTRY_END: REFRESH_FLG=1; RETURN 
21745 ! 
25000 CHECK_WRITE:
25010 MSGBOX MSG("WRITE_REC"),MSG("CONFIRM"),"?,YESNO",ANSWER$
25020 IF ANSWER$="YES" THEN GOTO WRITE_REC
25040 CHECK_WRITE_END:RETURN 
25045 ! 
