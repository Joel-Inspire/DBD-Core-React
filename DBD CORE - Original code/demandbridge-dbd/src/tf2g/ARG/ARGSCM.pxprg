0010 REM "A/R Commission Maintenance program <ARGSCM>- MULTIPLE COMMISSIONS
0035 REM "5.7 - 03/12/19 - 15.187222 - jvv - SSP# 223738
0037 REM "223738-Graduated commissions issues;  Why don't the "G" stats      
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0052 IF TCB(88)=0 THEN {
0055 MSGBOX "You must be using Windx to access this program" } ELSE {
0060 CLEAR 
0090 SETERR 0100; ENTER X3$,X4$,CM_KEY$,DF_COMM$
0170 ARG_1$=CM_KEY$
0175 DF_COMM$=DIM(5),ARG_2$=DF_COMM$
0180 PROCESS "ARGSCM","../ARG/AR.EN",ARG_1$,ARG_2$
0190 IF ARG_1$="MOD" THEN CM_KEY$=ARG_1$
0200 DF_COMM$=ARG_2$
0260 EXIT 
0265  }
0270 ! 
0310 IOLIST AC$,AS$[1],AS$[2],AS$[3],AS$[4],AS$[5],ASC$[1],ASC$[2],ASC$[3],ASC$[4],ASC$[5],ASC$[6],ASC$[7],ASC$[8],ASC$[9],ASC$[10],AC[1],AC[2],AC[3],AC[4],AC[5],AC[6],AC[7],AC[8],AC[9],AC[10],ASPLT[1],ASPLT[2],ASPLT[3],ASPLT[4],ASPLT[5],ACMP[1],ACMP[2],ACMP[3],ACMP[4],ACMP[5],CADJ[1],CADJ[2],CADJ[3],CADJ[4],CADJ[5],ACMSELL,ACMCOST,ACMLADJ
0311 IOLIST HAC$,HAS$[1],HAS$[2],HAS$[3],HAS$[4],HAS$[5],HASC$[1],HASC$[2],HASC$[3],HASC$[4],HASC$[5],HASC$[6],HASC$[7],HASC$[8],HASC$[9],HASC$[10],HAC[1],HAC[2],HAC[3],HAC[4],HAC[5],HAC[6],HAC[7],HAC[8],HAC[9],HAC[10],HASPLT[1],HASPLT[2],HASPLT[3],HASPLT[4],HASPLT[5],HACMP[1],HACMP[2],HACMP[3],HACMP[4],HACMP[5],HCADJ[1],HCADJ[2],HCADJ[3],HCADJ[4],HCADJ[5],HACMSELL,HACMCOST,HACMLADJ
0312 IOLIST A,B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21],B[22],B[23],B[24],B[25],B[26],B[27],B[28],B[29],B[30],B[31],B[32],B[33],B[34],B[35],B[36],B[37],B[38],B[39],B[40],B[41],B[42],B[43],B[44],B[45],B[46],B[47],B[48] ! SSP 249775
0315 IOLIST A,B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15],B[16],B[17],B[18],B[19],B[20],B[21],B[22],B[23],B[24],B[25],B[26],B[27],B[28],B[29],B[30],B[31],B[32],B[33],B[34],B[35],B[36],B[37],B[38],B[39],B[40],B[41],B[42],B[43],B[44],B[45],B[46],B[47],B[48] ! SSP 249775
0380 IOLIST HH$,HH[0],HH[1],HH[2],HH[3],HH[4],HH[5],HH[6],HH[7],HH[8],HH[9],HH[10],HH[11],HH[12],HH[13],HH[14],HH[15]
0390 IOLIST FSMC$,FSMC[0],FSMC[1],FSMC[2],FSMC[3],FSMC[4],FSMC[5],FSMC[6],FSMC[7],FSMC[8],FSMC[9],FSMC[10],FSMC[11],FSMC[12],FSMC[13],FSMC[14],FSMC[15],FSMC[16],FSMC[17],FSMC[18],FSMC[19],FSMC[20],FSMC[21],FSMC[22],FSMC[23],FSMC[24],FSMC[25],FSMC[26],FSMC[27],FSMC[28],FSMC[29]
0400 ! 
0499 ! 
0500 INIT:
0510 X0$="ARGSCM",X1$="Multiple Commission Maintenance",X0=-1
0520 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2 ! IF X1>0 THEN GOSUB WRAPUP; GOTO *RETURN
0530 ! IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=*NEXT)
0540 DIM ZC[NUM(X3$(60,3))]
0560 DIM AC$(315),AS$[5](4," "),ASC$[10](5," "),AC[10],ASPLT[5],CADJ[5],ACMP[5]
0570 ZC$="01X AXS... 02O ASQ... 030 AR3... 040 FMP... 05O AR4... 06O AR1... 13O ZZPARM  "
0580 CALL "ZZFLES",X3$,Y1$,Y0$,ZC$,ZC{ALL},Z0,Z1; IF Z0>0 THEN GOSUB WRAPUP; GOTO *RETURN
0585 IF REC_TYPE$="O" THEN RC=0 ELSE RC=5 ! SET ARRAY INDEXFOR COMM CODE (1-5) FOR ORDERS 6-10 FOR INVOICE
0588 TOTAL=0
0590 RETURN 
0595 ! 
0600 MAIN_POST_DISPLAY:
0603 CKEY$=ARG_1$
0605 GOSUB FIND_CALL_REC ! IF NOT(REC_FND) THEN REC_FND=0; MSGBOX ("REC DOES NOT EXIST"); CMD_STR$="E"; EXIT 
0606 CLINE$=CKEY$(20,3)
0607 ORDER_NUM$=AC$(33,8); CALL "ZZWLKU;PARSE_ORD",ORDER_NUM$,AC$(33,2),AC$(35,6) ! ,ORDER_DIV$,ORDER_NUM$
0608 IF CKEY$(1,1)="O" THEN ORDER_NUM$=AC$(2,8),ORDER_LINE_NUM$=CKEY$(20,3); CALL "*wingrp;hide",INV_GRP.GRP$
0609 IF CKEY$(1,1)="I" THEN INV_NUM$=AC$(2,8),INV_LINE_NUM$=CKEY$(20,3); HIDE CONTROL ORDER_LINE_NUM.CTL
0610 IF NUM(CKEY$(20,3))=0 THEN HIDE CONTROL ORDER_LINE_NUM.CTL; HIDE CONTROL INV_LINE_NUM.CTL
0612 SPER_CODE_1$=AS$[1],SPER_CODE_2$=AS$[2],SPER_CODE_3$=AS$[3],SPER_CODE_4$=AS$[4],SPER_CODE_5$=AS$[5],DFLT_COMM$=ARG_10$
0615 COMM_CODE1$=ASC$[1],COMM_CODE2$=ASC$[2],COMM_CODE3$=ASC$[3],COMM_CODE4$=ASC$[4],COMM_CODE5$=ASC$[5]
0620 SPER_PRCNT1=ASPLT[1],SPER_PRCNT2=ASPLT[2],SPER_PRCNT3=ASPLT[3],SPER_PRCNT4=ASPLT[4],SPER_PRCNT5=ASPLT[5]
0630 FOR SLP=1 TO 5
0640 IF STP(EVS("SPER_CODE_"+STR(SLP)+"$"),2)="" THEN CONTINUE
0650 EXECUTE "ENABLE CONTROL COMM_CODE"+STR(SLP)+".CTL"
0655 EXECUTE "ENABLE CONTROL COMM_CODE"+STR(SLP)+".CTL+3000"
0658 EXECUTE "CMM$=COMM_CODE"+STR(SLP)+"$"
0660 DIM CDESC$(30); FIND (ZC[5],KEY=CMM$,DOM=*NEXT)CDESC$
0665 EXECUTE "COMMISSION_DESC"+STR(SLP)+"$=CDESC$(6,25)"
0668 TOTAL=TOTAL+ASPLT[SLP]
0670 NEXT SLP
0680 REFRESH_FLG=1
0690 RETURN 
0699 ! 
0700 GET_COMM_DEFAULT:
0710 DIM SCOMM$[5](5," "),SSPLT[5]
0720 FOR YY=1 TO 5
0730 SCCD$=SCCDE$[YY],SSPLT[YY]=SCSPLT[YY]
0735 IF STP(SCCD$,2)="" OR SCSPLT[YY]=0 THEN CONTINUE
0745 SCOMM$[YY]=SCCOMM$[YY]
0748 IF STP(AR1CC$,2)<>"" THEN SCOMM$[YY]=AR1CC$; GOTO 0760
0750 DIM AR3$:CPL(%AR3_IOL$); FIND (ZC[3],KEY=SCCDE$[YY],ERR=0760,REC=AR3$); IF NOT(NUL(AR3.COMM_CODE$)) THEN SCCOMM$[YY]=AR3.COMM_CODE$
0760 NEXT YY
0799 RETURN 
0800 ! 
0805 CHECK_CODE:! Compare commission type of I and L if a detail line change
0807 RETURN 
0810 IF NUM(CLINE$)=0 THEN RETURN 
0815 HKEY$=CKEY$(1,19)+"000"
0820 FIND (ZC[1],KEY=HKEY$,DOM=0890)IOL=0311
0825 LCODE$=EVS(ID$)
0830 FIND (ZC[5],KEY=LCODE$)LHH$
0840 SWITCH ID$
0845 CASE "COMM_CODE1"
0850 FIND (ZC[5],KEY=HASC$[1])HHH$
0855 IF HHH$(31,1)="I" AND LL$(31,1)<>"I" THEN MSGBOX ("CANNOT CHANGE")
0860 BREAK
0870 END SWITCH 
0890 RETURN 
0900 WRAPUP:
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0920 SET_PARAM 'KR'=_SV_KR
0930 CMD_STR$="E"
0950 RETURN 
0999 ! 
1000 WRITE_REC:
1005 DIM SCOMM$[10](5," ")
1010 AC$(1,22)=CKEY$
1020 FOR XX=1 TO 5
1040 AS$[XX]=SCCDE$[XX]
1050 ASC$[XX]=SCCOMM$[XX]
1060 ASPLT[XX]=SCSPLT[XX]
1070 NEXT XX
1072 AS1$=AS$[1],AS2$=AS$[2],AS3$=AS$[3],AS4$=AS$[4],AS5$=AS$[5]
1080 WRITE (ZC[1],KEY=CKEY$)IOL=0310
1100 RETURN 
1199 ! 
1200 FIND_REC:
1210 REC_FND=0
1220 FIND_CALL_REC:
1230 READ (ZC[1],KEY=CKEY$,DOM=*NEXT,ERR=CHK_ERR)IOL=0310; REC_FND=1
1290 RETURN 
1299 ! 
1300 CHK_ERR:
1330 IF ERR<>0 THEN EXIT ERR
1340 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,""; GOTO *RETURN
1350 RETURN 
1399 ! 
1499 ! 
1500 FIND_ORDER_DETAIL:! FROM AR2EAT- TO FIND COMMISSION CODES FROM ORDER SETUP
1510 ENTER CCKEY$,OSLM${ALL},OCM${ALL},OSPLT{ALL},OTH_COMM$
1520 GOSUB INIT
1530 FIND (ZC[1],KEY=CCKEY$,DOM=1595)IOL=0310
1540 FOR X=1 TO 5
1545 OSLM$[X]=AS$[X],OCM$[X]=ASC$[X],OSPLT[X]=ASPLT[X]
1550 IF STP(OTH_COMM$,2)="" THEN GOTO 1590
1560 IF STP(OSLM$[X],2)<>"" AND OSPLT[X]>0 THEN OCM$[X]=OTH_COMM$
1590 NEXT X
1598 EXIT 
1599 ! 
1600 DELETE_HEADER:
1610 ENTER CCKEY$
1620 GOSUB INIT
1650 FIND (ZC[1],KEY=CCKEY$,DOM=1690)*
1660 REMOVE (ZC[1],KEY=CCKEY$,ERR=1690)
1690 GOSUB WRAPUP
1698 EXIT 
1699 ! 
1700 DELETE_ALL:
1710 ENTER CCKEY$
1715 IF LEN(CCKEY$)<19 THEN CCKEY$=CCKEY$+DIM(19),CCKEY$=CCKEY$(1,19)
1720 GOSUB INIT
1730 READ (ZC[1],KEY=CCKEY$+"",DOM=1740)
1740 CKEY$=KEY(ZC[1],END=1790); IF CKEY$(1,19)<>CCKEY$(1,19) THEN GOTO 1790
1760 REMOVE (ZC[1],KEY=CKEY$)
1770 GOTO 1740
1790 GOSUB WRAPUP
1799 EXIT 
1800 DELETE_ORDER_DETAIL:
1810 ENTER CCKEY$
1820 GOSUB INIT
1830 ! 
1840 REMOVE (ZC[1],KEY=CCKEY$,ERR=1890)
1890 GOSUB WRAPUP
1898 EXIT 
1900 GET_INVOICE_COMM:! FROM AR2EAA- TO FIND COMMISSION CODES FROM EXISTING "I" axs records 
1910 ENTER CCKEY$,DET_COM$
1920 GOSUB INIT
1930 FIND (ZC[1],KEY=CCKEY$,DOM=1945)IOL=0310
1940 FOR X=1 TO 5; DET_COM$=DET_COM$+ASC$[X]; NEXT X
1945 IF LEN(DET_COM$)<25 THEN DET_COM$=DET_COM$+DIM(25),DET_COM$=DET_COM$(1,25)
1950 GOSUB WRAPUP
1990 EXIT 
2000 DELETE_DET_RECS:
2005 ! Called from AR2EAT to remove any existing AXS DETAIL Recs and zero out commision in HEADER Rec
2010 ENTER CCKEY$
2020 GOSUB INIT
2030 READ (ZC[1],KEY=CCKEY$+"000",DOM=2090)IOL=0310
2035 DIM AC[10]
2038 WRITE (ZC[1],KEY=CCKEY$+"000")IOL=0310
2040 CKEY$=KEY(ZC[1],END=2090)
2050 IF CKEY$(1,19)<>CCKEY$(1,19) THEN GOTO 2090
2060 REMOVE (ZC[1],KEY=CKEY$)
2070 GOTO 2040
2090 GOSUB WRAPUP
2100 EXIT 
2199 ! 
2200 MODIFY_INVOICE_LINE:
2205 ENTER CKEY$,REC_NUM$,CTYPE$
2210 GOSUB INIT
2212 REC_NO=0
2214 MLTYPE$=CTYPE$
2215 FIND (ZC[1],KEY=CKEY$+"000",DOM=2395)AC$
2218 CHLC=GFN; OPEN (CHLC)"*MEMORY*"
2220 CCKEY$=KEY(ZC[1],END=2290)
2225 IF CKEY$(1,19)<>CCKEY$(1,19) THEN GOTO 2290
2230 READ (ZC[1],KEY=CCKEY$)IOL=0310
2235 IF CCKEY$(20,3)=REC_NUM$ THEN GOTO 2270
2238 IF CCKEY$(20,3)="99F" AND CTYPE$="F" THEN REC_NO=1; GOTO 2245
2240 REC_NO=REC_NO+1
2245 MKEY$=CCKEY$(1,19)+STR(REC_NO:"000"),AC$(1,22)=MKEY$
2250 WRITE (CHLC,KEY=MKEY$)IOL=0310
2255 ! F CTYPE$="F" AND CCKEY$(20,3)="99F" THEN MLTYPE$="D"; GOTO 2270
2258 MLTYPE$="D"
2260 ! OTO 2220
2270 IF MLTYPE$="D" THEN REMOVE (ZC[1],KEY=CCKEY$); GOTO 2220
2275 REC_NO=REC_NO+1; GOTO 2240
2280 GOTO 2220
2290 READ (CHLC,KEY="",ERR=2295)
2300 READ (CHLC,END=2390)IOL=0310
2310 KK$=AC$(1,22)
2320 WRITE (ZC[1],KEY=KK$)IOL=0310
2330 GOTO 2300
2390 CLOSE (CHLC)
2395 EXIT 
2399 ! 
2500 COMM_PROD_OVERRIDE:
2505 ! Set hieracrchy for commission code from product code"
2510 ENTER CKEY$,SPROD_CODE$
2520 GOSUB INIT
2530 GOSUB FIND_CALL_REC
2532 IF NOT(REC_FND) THEN GOTO 2640
2535 DETAIL_PROD:
2540 FIND (ZC[13],KEY=%C$+"AR1")CAR1$
2550 FIND (ZC[13],KEY=%C$+"A/R")CAR2$ ! SSP 229014
2560 FIND (ZC[13],KEY=%C$+"F/M")CFM$
2570 FOR X=1 TO 5
2580 SPER_CODE$=AS$[X]; IF STP(SPER_CODE$,2)="" THEN CONTINUE
2590 DIM PRODUCT_CODE$(100); FIND (ZC[4],KEY="T"+SPROD_CODE$,DOM=*NEXT)PRODUCT_CODE$
2600 IF MID(CFM$,186,1)="Y" THEN IF NOT(NUL(MID(PRODUCT_CODE$,38,5))) THEN ASC$[X]=MID(PRODUCT_CODE$,38,5)
2610 IF MID(CAR2$,122,1)="Y" THEN FIND (ZC[2],KEY=SPER_CODE$+SPROD_CODE$,DOM=*NEXT)ASQ$; ASC$[X]=MID(ASQ$,8,5) ! SSP 229014
2620 NEXT X
2625 IF DET_UPD THEN RETURN 
2630 WRITE (ZC[1],KEY=CKEY$)IOL=0310
2640 GOSUB WRAPUP
2650 EXIT 
2699 ! 
2700 WRITE_ORDER_LINE:
2720 ENTER CKEY$,SCCDE${ALL},SCSPLT{ALL},SCOMM${ALL},SCAMT{ALL}
2725 GOSUB INIT
2730 FOR SLP=1 TO 5
2740 AC[SLP]=SCAMT[SLP]
2745 AS$[SLP]=SCCDE$[SLP]
2750 ASC$[SLP+RC]=SCOMM$[SLP]
2760 ASPLT[SLP]=SCSPLT[SLP]
2765 NEXT SLP
2770 GOSUB MULTI_COMM_CALC
2775 AC$(1,22)=CKEY$
2780 WRITE (ZC[1],KEY=CKEY$)IOL=0310
2790 GOSUB WRAPUP
2798 EXIT 
2799 ! 
2800 WRITE_ORD_INV_LINE:! FROM AR2EAT
2810 ENTER CKEY$,MCC$,MCS${ALL},MCC${ALL},MAC{ALL},MASPLT{ALL},MCMP{ALL},MCADJ{ALL},MSELL,MCOST,MLADJ
2815 GOSUB INIT
2818 AC$=MCC$,AS${ALL}=MCS${ALL},ASC${ALL}=MCC${ALL},AC{ALL}=MAC{ALL},ASPLT{ALL}=MASPLT{ALL},CADJ{ALL}=MCADJ{ALL},ACMP{ALL}=MCMP{ALL}
2819 ACMSELL=MSELL,ACMCOST=MCOST,ACMLADJ=MLADJ
2820 AC$(1,22)=CKEY$
2830 WRITE (ZC[1],KEY=CKEY$)IOL=0310
2850 GOSUB WRAPUP
2880 EXIT 
2899 ! 
3000 COMM_SETUP:
3005 RETURN 
3010 DIM DSLP$[5](4," "),DCOMM$[5](5," ")
3020 FOR XX=1 TO 5
3040 DCOMM$[XX]=ASC$[XX]
3050 NEXT XX
3100 RETURN 
3199 ! 
4600 ARGEAD_CALL:REM "Freight Mark  - FROM ARGEAD AR2EAD
4601 GOSUB INIT
4602 IF A[2]<>0 OR MID(FMPM$,35,1)="S" THEN IF DONT_PRINT$="" THEN DONT_PRINT$=L$ END_IF ; %DONT_PRINT$=DONT_PRINT$,%GP_ADJ_FRT=0; CALL "AR2FIS",X3$,X4$,P2$,DONT_PRINT$,A$,A{ALL},Z{ALL} END_IF ; GP_ADJ=GP_ADJ+%GP_ADJ_FRT; REM L$="Y"; REM " SSP# 131719
4604 CMKEY$="I"+A$(7,8)+A$(1,6)+DIM(4)
4606 FIND (ZC[1],KEY=CMKEY$+"000",DOM=4650)IOL=0310 ! SSP 235284
4607 CCD$=""; FOR YY=1 TO 5; CCD$=CCD$+ASC$[YY]; NEXT YY
4608 FOR SLP=1 TO LEN(CCD$)/5
4609 HCM$=ASC$[SLP]; IF STP(HCM$,2)="" THEN CONTINUE
4610 DIM HH$(34),HH[15]; FIND (ZC[5],KEY=HCM$,DOM=4642)IOL=0380; IF HH$(32,1)="L" THEN CONTINUE
4611 IF HH$(32,1)<>"L" THEN DIM B[20]; CALL "AR2MCM",ERR=4616,"",HH$,HH{ALL},Q,A[1],A[11]-GP_ADJ,CMKEY$+"000",SLP,"",A{ALL},B{ALL},EXTRA{ALL}; A[18]=Q; REM SSP 19992 REMOVED IF A[18]=0 THEN...       !Readd change 218159
4612 A$(415,5)=%ALL_BRACKET$,%ALL_BRACKET$="",%BRACKET$="",%LAST_RATE=0; REM " SSP# 166575
4613 IF HH$(45,1)<>"Y" THEN GOTO 4642
4614 IF HH$(32,1)="L" THEN GOTO 4642
4615 ! OR SLSP=0 TO 4
4616 IF A[SLSP+12]=0 THEN EXITTO 4642
4617 IF HH$(31,1)<>"A" THEN %LAST_RATE=0,%BRACKET$=""
4618 DIM DET_IN[7]; DET_IN[0]=(A[1]-A[11]+A[19])*A[12+SLSP]/100,DET_IN[1]=A[SLSP+21],DET_IN[2]=A[26+SLSP],DET_IN[3]=A[1]*A[12+SLSP]/100,DET_IN[4]=A[11]*A[12+SLSP]/100
4619 DIM STAT_IN[14],STAT_OUT[14]; TF_INDEX$="ALL"
4620 DIM DET_IN$(146); DET_IN$(1,4)=A$(133+(SLSP*4),4),DET_IN$(5,6)=A$(1,6),DET_IN$(11,1)=A$(77,1),DET_IN$(12,8)=A$(7,8),DET_IN$(20,3)=SEQ$,DET_IN$(23,5)=HCM$,DET_IN$(28,1)=A$(415+SLSP,1),DET_IN$(29,1)=" ",DET_IN$(30,10)=A$(15,10),DET_IN$(40,6)=A$(86,6),DET_IN$(46,8)=STR(A5:"00000000"),F_YEAR$=A$(1,4),ACCT_PER$=A$(5,2)
4622 CALL "AR2XAC",X3$,X4$,"D",DET_IN$,DET_IN{ALL},DET_OUT$,DET_OUT{ALL},STAT_IN$,STAT_IN{ALL},STAT_OUT$,STAT_OUT{ALL},F_YEAR$,ACCT_PER$,TRANS_T$,AMOUNT,TF_INDEX$,UNUSED_2$,UNUSED1,UNUSED2
4623 AMOUNT=DET_IN[0]
4624 CALL "AR2XAC",X3$,X4$,"W",DET_IN$,DET_IN{ALL},DET_OUT$,DET_OUT{ALL},STAT_IN$,STAT_IN{ALL},STAT_OUT$,STAT_OUT{ALL},F_YEAR$,ACCT_PER$,TRANS_T$,AMOUNT,TF_INDEX$,UNUSED_2$,UNUSED1,UNUSED2; %LAST_RATE=0,%BRACKET$=""
4642 NEXT SLP
4650 RETURN 
6700 CALC_STATS:! SSP 22373823
6710 SLMN$=AS$[YY]; IF STP(SLMN$,2)="" THEN RETURN 
6765 IF MID(HH$,45,1)<>"Y" THEN GOTO 6794; REM "ONLY WRITE IF FLAG SAYS YES
6766 IF HH$(32,1)="I" THEN SEQ$="000" ELSE IF HH$(32,1)="L" THEN SEQ$="001"
6767 IF HH$(32,1)<>"L" THEN GOTO 6794
6770 DIM DET_IN$(146); DET_IN$(1,4)=SLMN$,DET_IN$(5,6)=A$(1,6),DET_IN$(11,1)=A$(77,1),DET_IN$(12,8)=A$(7,8),DET_IN$(20,3)=SEQ$,DET_IN$(23,5)=SCM$,DET_IN$(28,1)=B$(141+YY,1),DET_IN$(29,1)=" ",DET_IN$(30,10)=A$(15,10),DET_IN$(40,6)=A$(86,6),DET_IN$(46,8)=STR(A5:"00000000"),F_YEAR$=A$(1,4),ACCT_PER$=A$(5,2)
6772 REM "IF H$(31,1)<>"A" THEN %LAST_RATE=0,%BRACKET$=""
6774 ! DIM DET_IN[7]; DET_IN[0]=(B[4]-B[5]+B[9]+B[8])*ACMP[YY]/100,DET_IN[1]=AC[YY+5],DET_IN[2]=ACMP[YY],DET_IN[3]=B[4]*ACMP[YY]/100,DET_IN[4]=B[5]*ACMP[YY]/100
6775 DIM DET_IN[7]; DET_IN[0]=(B[4]-B[5]+B[8]-CADJ[YY]),DET_IN[1]=AC[YY],DET_IN[2]=ACMP[YY],DET_IN[3]=B[4],DET_IN[4]=B[5]
6776 AMOUNT=0
6780 DIM STAT_IN[14],STAT_OUT[14]
6782 INDEX$=STR(A5:"00000000")
6783 REM "AMOUNT=DET_IN[0]
6784 CALL "AR2XAC",X3$,X4$,"D",DET_IN$,DET_IN{ALL},DET_OUT$,DET_OUT{ALL},STAT_IN$,STAT_IN{ALL},STAT_OUT$,STAT_OUT{ALL},F_YEAR$,ACCT_PER$,TRANS_T$,AMOUNT,INDEX$,UNUSED_2$,UNUSED1,UNUSED2
6785 AMOUNT=DET_IN[0]
6786 IF MID(H$,31,1)="A" THEN GOTO 6791; REM " ALREADY BROKE DOWN THE A TYPES
6787 DIM BACK[4],L[1],R[4]
6788 L[0]=A[18],R[0]=A[12],R[1]=A[13],R[2]=A[14],R[3]=A[15]
6789 REM "CALL "AR2XAA",X3$,L{ALL},0,0,BACK{ALL},R{ALL},0,3
6790 DET_IN[1]=B[SLSP+7]; REM "DET_IN[1]=BACK[SLSP]
6791 CALL "AR2XAC",X3$,X4$,"W",DET_IN$,DET_IN{ALL},DET_OUT$,DET_OUT{ALL},STAT_IN$,STAT_IN{ALL},STAT_OUT$,STAT_OUT{ALL},F_YEAR$,ACCT_PER$,TRANS_T$,AMOUNT,INDEX$,UNUSED_2$,UNUSED1,UNUSED2
6792 %LAST_RATE=0,%BRACKET$=""
6799 RETURN 
7999 ! 
8000 ARGEAL_CALL:! GET TOTAL COST/PRICE/GP ADJ 
8002 GOSUB INIT
8005 A[1]=0,A[11]=0,A[18]=0,A[19]=0,X0=0,GP_ADJ=0,TOT_HDR=0
8006 CCSTR$=""
8010 REC_NUM=0,CMKEY$="I"+A$(7,8)+A$(1,6)+DIM(4)
8020 FOR X=1 TO LEN(Y$) STEP Y9
8030 EXTRACT (F,IND=DEC(Y$(X,Y9)))IOL=0312
8032 A5=DEC(Y$(X,Y9)) ! SSP 307216
8035 IF B$(2,1)="Y" THEN A[17]=A[17]+B[4]; IF MID(P2$,69,1)="Y" THEN B[8]=B[5]-B[4]; REM "If param=y then exlcude freight gp from invoice gp by setting gp adj
8036 IF MID(B$,1,1)="M" THEN GOTO 8088 ! SSP 235855
8040 A[1]=A[1]+B[4],A[11]=A[11]+B[5],A[18]=A[18]+B[7],A[19]=A[19]+B[8],X0=X0+B[8],GP_ADJ=GP_ADJ+B[8]
8041 TOT_HDR=0
8042 REC_NUM=REC_NUM+1; FIND (ZC[1],KEY=CMKEY$+STR(REC_NUM:"000"),DOM=8088)IOL=0310
8043 CCD$=""; FOR YY=1 TO 5; CCD$=CCD$+ASC$[YY]; ; NEXT YY
8044 FOR YY=1 TO LEN(CCD$)/5
8045 SCM$=CCD$(YY*5-4,5); IF STP(SCM$,2)<>"" THEN GOSUB 8200 ELSE CONTINUE
8048 WRITE (F,IND=DEC(Y$(X,Y9)))IOL=0315
8064 IF POS(X3$(9,3)="092130",3)>0 AND HH$(32,1)="I" THEN C0=A[1]-A[17] ELSE C0=A[1]
8065 IF HH$(32,1)="I" THEN GOSUB 8250; CALL "AR2MCM",ERR=8066,"TX"+A$,HH$,HH{ALL},Q,C0,A[11]-X0,CMKEY$+"000",YY,"",A{ALL},B{ALL},EXTRA{ALL}; A[18]=Q ! A[18]=A[18]+Q,CADJ[ZZ]=Q
8066 A$(415,5)=%ALL_BRACKET$; REM "%ALL_BRACKET$=""  
8067 GOTO 8080 ! IF MID(HH$,45,1)<>"Y" THEN GOTO 8080; REM " IF we're not writing to stat file, don't need to break down the detail
8068 DIM L[1],R[4],E[4]
8069 L[0]=A[18],R[0]=A[12],R[1]=A[13],R[2]=A[14],R[3]=A[15]
8070 CALL "AR2XAA",X3$,L{ALL},0,0,E{ALL},R{ALL},0,3
8071 A[21]=E[0],A[22]=E[1],A[23]=E[2],A[24]=E[3]
8074 IF POS(X3$(9,3)="066",3)>0 AND A[1]>=200 THEN A[18]=A[18]-5; REM "Jerome  
8075 REM " IF A[17]<>0 THEN A[2]=0; REM"149524                                 
8080 NEXT YY
8088 NEXT X
8090 RETURN 
8200 REM "Include Load into Invoice Total GP Adjustment                        
8205 ! F %IN_WEBEC$="Y" THEN Z$="08C AR4...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
8206 ! F %IN_WEBEC$="Y" THEN Z$="08O AR4...  "; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
8207 ! N$=PTH(Z(8),ERR=*NEXT); IF POS("AR4"=NN$)=0 THEN CLOSE (Z[8]); OPEN (Z(8))"AR4"+%C$; GOTO 8210 ! SSP 194559 197205
8208 ! PEN (Z(8),ERR=*NEXT)"AR4"+%C$ ! SSP 194559
8210 DIM HH$(34),HH[15]; Q=0,B[9]=B[8]; FIND (ZC[5],KEY=SCM$,DOM=8211)IOL=0380; Q=HH[0]
8211 IF POS(X3$(9,3)="092130",3)>0 THEN IF B$(2,1)="Y" AND HH$(32,1)="I" AND B[4]<>0 THEN X0=X0-B[8]
8212 IF HH$(33,1)="F" THEN IF MID(P2$,76,1)<>"Y" THEN GOTO *NEXT ELSE IF STP(B$(47,3),2)<>"" THEN CC$=B$(47,3)+SCM$; IF CCSTR$="" THEN CCSTR$=CC$; GOTO *NEXT ELSE IF POS(CC$=CCSTR$,8)=0 THEN CCSTR$=CCSTR$+CC$; GOTO *NEXT ELSE Q=0; GOTO 8214 ! SSP 245517 SSP 266566
8213 IF POS(HH$(33,1)="123456789")>0 AND POS(B$(1,1)="M")=0 AND HH$(32,1)<>"I" THEN CALL "AR2MCM",ERR=8214,"HC"+B$(112,4),HH$,HH{ALL},Q,B[4],B[5]-B[8],CMKEY$+STR(REC_NUM:"000"),YY,"",A{ALL},B{ALL},EXTRA{ALL}; B[9]=B[8]-Q,CADJ[YY]=Q; FIND (ZC[1],KEY=CMKEY$+STR(REC_NUM:"000"),DOM=8088)IOL=0310 ! SSP#229715  SSP 225300 SSP 235855
8214 IF HH$(33,1)="F" THEN B[9]=B[8]-Q
8216 IF POS(HH$(33,1)=" C")>0 THEN IF POS(X3$(9,3)="603",3)>0 THEN B[9]=B[8]-((B[5]-B[8])*100/(100-Q)-(B[5]-B[8])) ELSE B[9]=B[8]-(B[5]-B[8])*Q/100
8218 IF HH$(34,1)<>" " THEN CALL "AR2EAZ",X3$,A$,B$,Q,HH$; B[9]=B[9]-Q
8220 A[19]=A[19]-B[8]+B[9]
8225 GOSUB CALC_STATS ! ssp 223738
8230 ! TOT_LOAD_GP=TOT_LOAD_GP+B[9]
8240 RETURN 
8250 REM "Pre compute load on Invoice Total Type Commissions"
8252 IF HH$(34,1)<>" " THEN CALL "AR2EA0",X3$,A$,A{ALL},T0,HH$; X0=X0-T0,GP_ADJ=GP_ADJ-T0
8254 IF POS(HH$(33,1)="123456789")>0 THEN CALL "AR2MCM",ERR=*NEXT,"HC"+A$,HH$,HH{ALL},Q,C0,A[11]-X0,CMKEY$+"000",YY,"",A{ALL},B{ALL},EXTRA{ALL}; A[19]=A[19]-Q,CADJ[ZZ]=Q ! SSP#229715
8255 IF POS(HH$(33,1)="123456789")>0 THEN GOTO 8290
8260 A[19]=X0-A[11]*HH[0]/100
8265 IF HH$(33,1)="S" THEN A[19]=X0
8270 IF HH$(33,1)="F" THEN A[19]=X0-HH[0]
8290 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 MCOMM_DEFAULTS:
10005 ! Test if user has AC module- if so, set %MSLC=1
10010 %MSLC=0,%MCLB$="",%MCLD$=""
10020 IF FN%HAS_MODULE("AC")=0 THEN GOTO 10099
10030 ZZPARM=HFN; OPEN (ZZPARM)"ZZPARM"
10040 READ (ZZPARM,KEY=%C$+"AR1",DOM=*NEXT)C_P0$; IF MID(C_P0$,77,1)="Y" THEN %MSLC=1,%MCLB$="MULTI",%MCLD$=DIM(21),%MCLD$(1,16)="** MULTI COMM **" ! SSP 225300
10080 CLOSE (ZZPARM)
10090 RETURN 
10899 ! 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12090 RETURN 
12098 ! 
12099 ! 
13600 FIND_DETAIL_REC:
13602 DET_UPD=0
13605 CKEY$=CCKEY$+"000"
13610 READ (ZC[1],KEY=CKEY$,DOM=13689,ERR=CHK_ERR)*
13620 DCKEY$=KEY(ZC[1],END=13698); IF DCKEY$(1,19)<>CKEY$(1,19) THEN GOTO 13689
13625 DET_UPD=1; GOTO 13698
13630 IF STP(SCCDE$,2)="" OR SCSPLT[SLP]=0 THEN CONTINUE
13635 AS$[SLP]=SCCD$,ASC$[SLP]=SCCOMM$[SLP],ASPLT[SLP]=SCSPLT[SLP]
13640 NEXT SLP
13649 ! 
13650 CKEY$=REC_TYPE$+CM_KEY1$+CM_KEY2$+LINE_NO$
13660 AC$(1,22)=CKEY$
13680 WRITE (ZC[1],KEY=CKEY$)IOL=0310
13698 RETURN 
13699 ! 
14030 ! EAD DATA FROM REC(IOL(ZC[1])) TO IOL=0310
14038 ! F NOT(OK) THEN MSGBOX MSG("CANT_WRITE"),""; IF PRE_SELECT$<>"" THEN CMD_STR$="END"; GOTO *RETURN ELSE GOSUB RESTART; GOTO *RETURN
14040 ! A$(1,22)=CKEY$
14099 ! 
14199 ! 
14598 ! 
14600 MULTI_COMM_CALC:
14615 TOT_MCOMM=0
14620 FOR X=1 TO 5
14630 IF AC[X]=0 OR ASPLT[X]=0 THEN CONTINUE
14650 AC[X+5]=AC[X]*ASPLT[X]*.01
14660 TOT_MCOMM=TOT_MCOMM+AC[X+5]
14670 NEXT X
14690 RETURN 
14699 ! 
15000 DEFAULT_HEADER_SETUP:
15005 ! Default Header AXS record created - from AR1- Comm code/salesman comm code as set in Order and Invoice Header Entry
15010 ENTER REC_TYPE$,CM_KEY1$,CM_KEY2$,LINE_NO$,SCCDE${ALL},SCSPLT{ALL},SCCOMM${ALL},CM_CUST$,INV_DATE$,AR_BATCH$,AR_BDATE$
15012 GOSUB INIT
15015 AR1CC$=""
15020 CKEY$=REC_TYPE$+CM_KEY1$+CM_KEY2$+"000"
15025 AC$(1,1)=REC_TYPE$,AC$(2,8)=CM_KEY1$,AC$(10,10)=CM_KEY2$,AC$(20,3)=LINE_NO$
15030 ! C$(23,10)=CM_CUST$
15040 IF REC_TYPE$="O" THEN AC$(33,8)=CM_KEY1$,AC$(23,10)=CM_KEY2$,CM_CUST$=CM_KEY2$
15045 IF REC_TYPE$="I" THEN AC$(41,6)=INV_DATE$,AC$(47,6)=CM_KEY2$(1,6),AC$(53,5)=AR_BATCH$,AC$(58,6)=AR_BDATE$,AC$(23,10)=CM_CUST$
15050 FIND (ZC[13],KEY=%C$+"AR1")CCR1$; IF CCR1$(68,1)<>"Y" THEN GOTO 15060
15055 FIND (ZC[6],KEY=CM_CUST$,DOM=15060)AR1CM$; IF POS(" "<>AR1CM$(262,5))>0 THEN AR1CC$=AR1CM$(262,5)
15060 GOSUB GET_COMM_DEFAULT ! SETUP FROM DEFAULT SALESMAN/COMMISSION CODES
15070 GOSUB WRITE_REC
15080 GOSUB WRAPUP
15100 EXIT 
15200 ! 
15900 UPDATE_DETAIL_RECS:
15905 ! This routine will rewrite detail recs from header 000 AXS rec if user
15906 ! modifies header salesman or split % after details lines already entered.A warning will be displayed
15920 ENTER CCKEY$,MCMSG$
15925 GOSUB INIT
15940 DET_UPD=0,CKEY$=CCKEY$+"001"
15950 GOSUB FIND_DETAIL_REC
15960 IF NOT(DET_UPD) THEN GOTO 16100
16008 CHLFS2=HFN; OPEN (CHLFS2)"FS2"+%C$
16010 CKEY$=CCKEY$+"000"
16015 DIM HAC$(315),HAS$[5](4," "),HASC$[10](5," "),HAC[10],HASPLT[5],HCADJ[5],HACMP[5]
16020 READ (ZC[1],KEY=CKEY$,DOM=16090,ERR=CHK_ERR)IOL=0311
16030 DKEY$=KEY(ZC[1],END=16090); IF DKEY$(1,19)<>CKEY$(1,19) THEN GOTO 16090
16040 READ (ZC[1],KEY=DKEY$)IOL=0310
16050 FOR SLP=1 TO 5
16055 AS$[SLP]=HAS$[SLP],ASC$[SLP]=HASC$[SLP],ASC$[SLP+5]=HASC$[SLP+5],ASPLT[SLP]=HASPLT[SLP]
16060 NEXT SLP
16070 DIM AC[10],ACMP[5],CADJ[5]
16075 ACMLADJ=0
16076 WRITE (ZC[1],KEY=DKEY$)IOL=0310
16078 FSKEY$=DKEY$(2,8)+DKEY$(20,3); DIM FSMC$(356),FSMC[29]; FIND (CHLFS2,KEY=FSKEY$,DOM=16030)IOL=0390
16079 ! PROD_CODE$=FSMC$(29,3); GOSUB DETAIL_PROD
16080 CMKEY$=DKEY$; DIM FSSC[0]; CALL "AR2MCM","VENDCOM","",FSSC{ALL},0,0,0,CMKEY$,0,FSMC$ ! SSP 225300 
16081 ! RITE (ZC[1],KEY=DKEY$)IOL=0310
16082 MCMSG$="Y"
16085 FIND (ZC[1],KEY=DKEY$)IOL=0310
16086 FSMC$(128,5)=ASC$[1]; WRITE (CHLFS2,KEY=FSKEY$)IOL=0390
16088 GOTO 16030
16090 CLOSE (CHLFS2,ERR=*NEXT)
16100 GOSUB WRAPUP
16110 DET_UPD=0
16199 EXIT 
16400 ! 
16500 DEFAULT_LINE_SETUP:
16505 ! New line deatil AXS records created from Header AXS defaults
16510 ENTER REC_TYPE$,CM_KEY1$,CM_KEY2$,LINE_NO$
16515 GOSUB INIT
16520 ! GOSUB FIND_DETAIL_REC
16525 CKEY$=REC_TYPE$+CM_KEY1$+CM_KEY2$+"000"
16530 READ (ZC[1],KEY=CKEY$,DOM=16590,ERR=CHK_ERR)IOL=0310
16540 CKEY$=REC_TYPE$+CM_KEY1$+CM_KEY2$+LINE_NO$
16545 AC$(1,22)=CKEY$
16550 WRITE (ZC[1],KEY=CKEY$)IOL=0310
16590 GOSUB WRAPUP
16598 EXIT 
16599 ! 
16700 DEFAULT_LOT_SETUP:
16705 ! If Lot commission code is set, update detail lines with lot comm code
16710 ENTER CCKEY$,LOT_COM$
16720 GOSUB INIT
16730 FIND (ZC[1],KEY=CCKEY$,DOM=16790)IOL=0310
16740 FOR SLP=1 TO 5
16750 IF STP(AS$[SLP],2)<>"" AND ASPLT[SLP]>0 THEN ASC$[SLP]=LOT_COM$
16760 NEXT SLP
16780 WRITE (ZC[1],KEY=CCKEY$)IOL=0310
16790 EXIT 
16999 ! 
17000 REVIEW_WRITE:
17001 TYPE_NOK=0
17002 DIM SCCDE$[5],SCOMM$[5]
17020 ASC$[1]=COMM_CODE1$,ASC$[2]=COMM_CODE2$,ASC$[3]=COMM_CODE3$,ASC$[4]=COMM_CODE4$,ASC$[5]=COMM_CODE5$
17030 GOSUB CHECK_COMM_TYPE; IF TYPE_NOK THEN TYPE_NOK=0; GOTO 17080
17050 WRITE (ZC[1],KEY=CKEY$)IOL=0310
17052 IF CHANGE_FLG<>0 THEN CHANGE_FLG=0,ARG_1$="MOD"
17060 ARG_2$=ASC$[1]
17070 CMD_STR$="E"; RETURN 
17080 MSGBOX ("AN INVALID COMMISSION CODE TYPE HAS BEEN ENTERED")
17090 EXECUTE "NEXT_ID=COMM_CODE"+STR(SLPC)+".CTL"
17100 CMD_STR$=""; EXIT 
17199 ! 
17500 DFLT_ORD_INV_SETUP:
17505 ! Default Invoice AXS recs created from Existing Order AXS recs
17510 ENTER REC_TYPE$,CM_KEY1$,CM_KEY2$,LINE_NO$,SCCDE${ALL},SCSPLT{ALL},SCCOMM${ALL},ORD_KEY1$,ORD_KEY2$,INV_DATE$,AR_BATCH$,AR_BDATE$
17520 GOSUB INIT
17525 RC=5
17530 ORD_KEY$=REC_TYPE$+ORD_KEY1$+ORD_KEY2$+LINE_NO$
17540 READ (ZC[1],KEY=ORD_KEY$,DOM=17550,ERR=CHK_ERR)IOL=0310; GOTO 17560
17550 FOR X=1 TO 5; AS$[X]=SCCDE$[X],ASC$[X]=SCCOMM$[X],ASPLT[X]=SCSPLT[X]; NEXT X
17560 FOR Z=1 TO 5; ASC$[Z+RC]=ASC$[Z]; NEXT Z ! COPY ORDER COMM CODES
17580 CKEY$="I"+CM_KEY1$+CM_KEY2$+LINE_NO$
17585 AC$(1,22)=CKEY$
17586 AC$(41,6)=INV_DATE$,AC$(47,6)=CM_KEY2$,AC$(53,5)=AR_BATCH$,AC$(58,6)=AR_BDATE$
17588 WRITE (ZC[1],KEY=CKEY$)IOL=0310
17590 GOSUB WRAPUP
17600 EXIT 
17699 ! 
17700 CHECK_ICF:! read ICF to get lot commission code for default if it is not blank. This routine is called only if PO Number is blank and  FS2 Line No = I or C and fs2(2,1)="Y" (lot inventiry order line)
17710 ENTER REC_TYPE$,CM_KEY1$,CM_KEY2$,LINE_NO$
17720 GOSUB INIT
17730 ICFCHL=UNT; OPEN (ICFCHL,ERR=17790)"ICF"+%C$
17740 READ (ICFCHL,KNO=3,KEY=CM_KEY1$+"",DOM=17745)
17745 IKEY$=KEY(ICFCHL,END=17790); READ (ICFCHL,KEY=IKEY$)ICF$
17750 IF ICF$(110,8)<>CM_KEY1$ THEN GOTO 17790
17755 IF ICF$(110,11)<>CM_KEY1$+LINE_NO$ THEN GOTO 17745
17756 IF STP(ICF$(245,5),2)="" THEN GOTO 17790
17758 CKEY$=REC_TYPE$+CM_KEY1$+CM_KEY2$+LINE_NO$
17760 GOSUB FIND_CALL_REC; IF NOT(REC_FND) THEN GOTO 17790
17770 FOR X=1 TO 5; IF STP(AS$[X],2)<>"" AND ASPLT[X]>0 THEN ASC$[X]=ICF$(245,5); NEXT X
17780 WRITE (ZC[1],KEY=CKEY$)IOL=0310
17790 CLOSE (ICFCHL,ERR=*NEXT)
17795 GOSUB WRAPUP
17850 EXIT 
17899 ! 
18000 CHECK_COMM_TYPE:
18005 TYPE_NOK=0
18020 IF NUM(CLINE$)=0 THEN RETURN 
18025 DIM HAC$(315),HAS$[5](4," "),HASC$[10](5," "),HAC[10],HASPLT[5],HCADJ[5],HACMP[5]
18030 CHKEY$=CKEY$(1,19)+"000"
18040 FIND (ZC[1],KEY=CHKEY$,DOM=19050)IOL=0311
18045 SCOM$=ID$
18050 DIM HCDE$[5](5," "),HTYP$[5]
18060 FOR XX=1 TO 5
18070 HDRC$=HASC$[XX]
18075 IF STP(HDRC$,2)="" THEN CONTINUE
18080 FIND (ZC[5],KEY=HDRC$)HD$
18085 HTYP$[XX]=HD$(32,1),HCDE$[XX]=HDRC$
18086 IF STP(ASC$[XX],2)="" THEN CONTINUE
18090 FIND (ZC[5],KEY=ASC$[XX])DD$
19000 IF HTYP$[XX]="I" AND DD$(32,1)="L" THEN TYPE_NOK=1,SLPC=XX
19010 IF HTYP$[XX]="L" AND DD$(32,1)="I" THEN TYPE_NOK=1,SLPC=XX
19020 NEXT XX
19050 RETURN 
19100 FIND (ZC[5],KEY=SCOM$,DOM=19050)HD$
19120 FOR SLP=1 TO 5
19130 IF STP(ACS$,2)="" THEN CONTINUE
19500 INV_FRT_SETUP:
19510 ENTER REC_TYPE$,CM_KEY1$,CM_KEY2$,LINE_NO$,OTHER_COMM$
19515 GOSUB INIT
19525 CKEY$=REC_TYPE$+CM_KEY1$+CM_KEY2$+"000"
19530 READ (ZC[1],KEY=CKEY$,DOM=19590,ERR=CHK_ERR)IOL=0310
19535 IF OTHER_COMM$="" THEN GOTO 19550
19540 FOR X=1 TO 5
19545 IF STP(AS$[X],2)<>"" AND ASPLT[X]>0 THEN ASC$[X]=OTHER_COMM$
19549 NEXT X
19550 CKEY$=REC_TYPE$+CM_KEY1$+CM_KEY2$+LINE_NO$
19555 AC$(1,22)=CKEY$
19559 ! 
19560 WRITE (ZC[1],KEY=CKEY$)IOL=0310
19590 GOSUB WRAPUP
19598 EXIT 
19900 RETURN 
20098 ! 
20099 ! 
21200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
21210 CMD_STR$="END"
21290 RETURN 
21298 ! 
21299 ! 
21300 SETUP_LIBRARY:
21320 _SV_MSGLIB$=MSG(*)
21330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
21340 MESSAGE_LIB "*tfmsglib."+_LANG$,ERR=*NEXT; GOTO 0360
21350 MESSAGE_LIB "*tfmsglib.en"
21360 SET_MSG:GOSUB SETUP_MESSAGES
21390 RETURN 
21399 ! 
55299 ! 
56000 REM "188067-New Pricing changes. Standard GP Percentage for a           
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56004 REM "221551-Oracle related changes broke some GUI maintanance pgms.     
56005 REM "235284-Error entering AR Invoice thru PO receiving                 
56006 REM "235855-House Charge not being calculated correctly in Multi Comm   
56007 REM "223738-Graduated commissions issues;  Why don't the "G" stats      
