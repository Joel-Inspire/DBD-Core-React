0010 REM "Order credit problem handler <ARGCHK>
0035 REM "5.7 - 03/07/13 - 15.299166 - tma - SSP# 261606
0037 REM "261606-Eliminate continue option if credit hold only               
0040 REM "Copyright 2013 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0080 ! CUSTOMER$ = Customer code to check
0081 ! CHECK_KEY$ = if this check_key has already been given the message (we check a global var CREDIT_CHECK_KEY$) then we won't give the message again, typically an ORDER number, meaning the were already over the credit limit for this order when we started the order so don't give message on this order again.
0082 ! REQUESTED_AMT = amount to be added to the current open_order amount or balance when checking 
0083 ! RET_VAL = returned value, 0= ok, 1= failed credit check
0090 CLEAR ; SETERR 0100; ENTER CUSTOMER$,CHECK_KEY$,REQUESTED_AMT,RET_VAL
0093 IF %FMGODA_FLG THEN %CREDIT_CHECK_KEY$="" ! SSP246794 jdf
0095 IF NOT(NUL(CHECK_KEY$)) THEN IF CHECK_KEY$=%CREDIT_CHECK_KEY$ THEN %CREDIT_CHECK_KEY$=""; EXIT ! if Credit Check Key not null, and we have done the check for this once, clear it (so we will check the next time) and just exit
0100 SETESC 9300; SETERR 9000
0105 SAVE_XI=PRM('XI'); SET_PARAM 'XI' ! turn on dirty reads
0110 X0$="ARGCHK",X1$="Customer Credit Check"
0120 DIM S0$(20)
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "H0 on way in determines message
0301 REM "H0=1-over credit limit, 2=on credit hold, 3=balances 2 periods old
0302 REM "H1 on way out, 1=done, 2=redisplay and return
0310 IOLIST CUST$,CUST[0],CUST[1],CUST[2],CUST[3],CUST[4],CUST[5],CUST[6],CUST[7],CUST[8],CUST[9],CUST[10],CUST[11],CUST[12],CUST[13],CUST[14],CUST[15]
0320 IOLIST CREDIT$,CREDIT[0],CREDIT[1],CREDIT[2],CREDIT[3],CREDIT[4],CREDIT[5],CREDIT[6],CREDIT[7],CREDIT[8],CREDIT[9],CREDIT[10],CREDIT[11],CREDIT[12],CREDIT[13],CREDIT[14],CREDIT[15],CREDIT[16],CREDIT[17],CREDIT[18],CREDIT[19],CREDIT[20],CREDIT[21]
0500 REM "FILES                                                            
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1... 02O AR0... 13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 FIND (Z[13],KEY=X3$(9,3)+"A/R",DOM=9900)AR_PARM$
0535 FIND (Z[13],KEY=X3$(9,3)+"F/M",DOM=9900)FM_PARM$
0540 DIM OP_SECURITY$(500); FIND (Z[13],KEY="osec"+X3$(40,3),DOM=*NEXT)OP_SECURITY$
0900 ! init values
0905 RET_VAL=0,REASON=0
0910 ! REASON: 1=over credit limit, 2=on credit hold, 3=balances > x periods old(x from a/r parms) 4=average days to pay > 60 (hard coded for comp 011)
1000 ! get customer info
1005 DIM CUST$(600),CUST[15]; FIND (Z[1],KEY=CUSTOMER$,DOM=9900)IOL=0310
1020 DIM CREDIT(52),CREDIT[21]; FIND (Z[2],KEY=CUSTOMER$,DOM=*NEXT)IOL=0320
1100 ! start checking
1104 ! IF CUST[5]<>0 THEN IF CUST[6]+CUST[13]+REQUESTED_AMT>CUST[5] THEN REASON=1; GOTO GIVE_MESSAGE ! SSP246794 jdf !SSP#261606 Hierarchy s/b Credit hold 1st
1105 ! On credit hold? REASON=2
1110 IF POS(CUST$(361,1)="YHM")>0 THEN REASON=2; GOTO GIVE_MESSAGE
1115 REM ! They have a credit limit and BALANCE + OPEN_ORDERS + REQUESTED_AMT > CREDIT_LIMIT  REASON=1   ! SSP246794 jdf
1117 ! They have a credit limit and BALANCE + OPEN_ORDERS + REQUESTED_AMT > CREDIT_LIMIT  REASON=1   ! SSP246794 jdf
1118 IF CUST[5]<>0 THEN IF CUST[6]+CUST[13]+REQUESTED_AMT>CUST[5] THEN REASON=1; GOTO GIVE_MESSAGE ! SSP246794 jdf!SSP#261606
1120 REM IF CUST[5]<>0 THEN IF CUST[6]+CUST[13]+REQUESTED_AMT>CUST[5] THEN REASON=1; GOTO GIVE_MESSAGE  ! SSP246794 jdf
1125 ! If P in credit check parameters: check 'trigger' period, if they have a balance in a period >= trigger period (either a/r parameter set or period 3)  REASON=3, TRIGGER_PERIOD and PERIOD set correctly
1130 IF POS("P"=FM_PARM$(161,5)) THEN {
1132 TRIGGER_PERIOD=NUM(AR_PARM$(99,1),ERR=*PROCEED); IF TRIGGER_PERIOD=0 THEN TRIGGER_PERIOD=3 ! SSP246794 jdf
1135 FOR PERIOD=TRIGGER_PERIOD TO 5; IF CUST[PERIOD+7]>0 THEN REASON=3; EXITTO GIVE_MESSAGE END_IF ; NEXT PERIOD
1140  }
1145 ! If A in credit check params, then calculate average days to pay and if > 60 (company 011 request, so hardcoded) REASON=4,AVG_DAYS will be set
1150 IF POS("A"=FM_PARM$(161,5)) THEN {
1153 INV_COUNT=0,DAYS_TO_PAY=0,AVG_DAYS=0
1155 FOR I=14 TO 20 STEP 2; INV_COUNT+=CREDIT[I],DAYS_TO_PAY+=CREDIT[I+1]; NEXT I
1157 IF INV_COUNT=0 THEN AVG_DAYS=0 ELSE AVG_DAYS=INT(DAYS_TO_PAY/INV_COUNT)
1158 IF AVG_DAYS>60 THEN REASON=4; GOTO GIVE_MESSAGE
1160  }
1200 IF %FMGODA_FLG AND REASON=0 THEN RET_VAL=REASON ! SSP246794 jdf
1995 GOTO 9900
1999 ! 
2000 GIVE_MESSAGE:! we need to give a message and get response,
2005 IF %FMGODA_FLG THEN RET_VAL=REASON; GOTO 2295 ! SSP246794 jdf
2010 %CREDIT_CHECK_KEY$=CHECK_KEY$ ! Set key so we know we've given the message for this situation
2100 SWITCH REASON
2105 CASE 1; CREDIT_MESSAGE$=MSG("ARGCHK_1",STP(STR(CUST[5]:"##,###,##0"),2)); BREAK
2110 CASE 2; IF CUST$(361,1)="M" THEN CREDIT_MESSAGE$=MSG("ARGCHK_2") ELSE CREDIT_MESSAGE$=MSG("ARGCHK_3") END_IF ; BREAK
2120 CASE 3; CREDIT_MESSAGE$=MSG("ARGCHK_4",STP(AR_PARM$(48+(TRIGGER_PERIOD-1)*8,8),1)); BREAK
2125 CASE 4; CREDIT_MESSAGE$=MSG("ARGCHK_5",STR(AVG_DAYS)); BREAK
2135 END SWITCH 
2200 PROCESS_CREDIT_CHECK_PANEL:! process the panel now
2210 PROCESS "ARGCHK","../ARG/AR.EN",CUST$(1,10),CREDIT_MESSAGE$,STR(REQUESTED_AMT),"",RETURN$
2215 RET_VAL=0; RET_VAL=NUM(RETURN$,ERR=*NEXT)
2220 IF RET_VAL=0 THEN {! they are trying to Accept the Request
2230 IF (MID(OP_SECURITY$,78,1)="Y" AND REASON=2) THEN GOTO CANNOT_CONTINUE; REM " SSP# 142545 Operator cannot continue if customer on credit hold
2240 IF MID(OP_SECURITY$,36,1)="Y" THEN GOTO CANNOT_CONTINUE ! This operator cannot continue at all after credit check message
2250 IF REASON=1 AND MID(OP_SECURITY$,75,1)="Y" THEN IF MID(OP_SECURITY$,97,1)<>"Y" THEN GOTO CANNOT_CONTINUE ELSE GOTO SUSPEND_AND_CONTINUE ! Operator cannot continue if over credit limit but allow suspending the order if parameter set
2260  }
2290 ! If here, then RET_VAL is set, so EXIT
2295 GOTO 9900
2299 ! 
2300 CANNOT_CONTINUE:! operator cannot continue, so give message and go back to the panel
2301 IF %OLD_REC THEN GOTO 9900 ! Existing order, bypass credit check, message
2310 MSGBOX MSG("ARGCHK_6"),MSG("WARNING"),"!,OK"
2345 GOTO PROCESS_CREDIT_CHECK_PANEL
2349 ! 
2400 SUSPEND_AND_CONTINUE:! ask if operator wants to suspend order and continue or not
2410 MSGBOX MSG("PO_SUSP_CR"),MSG("Confirm"),"?,YESNO",SUSP_YN$
2420 IF SUSP_YN$="YES" THEN RET_VAL=2; GOTO 9900 ! suspend order and continue
2490 GOTO PROCESS_CREDIT_CHECK_PANEL
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 2168
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 2188,2208
9700 REM 
9710 GOTO 9900
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 SET_PARAM 'XI'=SAVE_XI
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 9940
9930 EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 MESSAGE_INIT:
10010 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
10015 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
10020 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
10025 ! ARG_1$=customer code, ARG_2$=Credit message, ARG_3$=requested amount, ARG_4$=Options (not used yet), ARG_5$=[0=accept, 1=deny]
10035 CREDIT_MESSAGE$=ARG_2$,REQUESTED_AMOUNT$=ARG_3$
10050 ARG_5$="0" ! Default to response to okay
10060 GOSUB SET_VALUES
10085 REFRESH_FLG=1
10095 RETURN 
10099 ! 
10105 SETUP_LIBRARY:
10110 _SV_MSGLIB$=MSG(*)
10115 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
10120 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 10128
10125 MESSAGE_LIB "*msglib.en"
10130 RETURN 
10135 ! 
10200 WRAPUP:
10205 MESSAGE_LIB _SV_MSGLIB$
10210 SET_PARAM 'KR'=_SV_KR
10215 RETURN 
10300 SET_VALUES:! read customer record & set values
10303 DIM Z[99]; Z$="01O AR1... "; CALL "ZZFLES",%X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
10305 IOLIST AR1$,AR1[0],AR1[1],AR1[2],AR1[3],AR1[4],AR1[5],AR1[6],AR1[7],AR1[8],AR1[9],AR1[10],AR1[11],AR1[12],AR1[13],AR1[14],AR1[15],AR1[16],AR1[17],AR1[18],AR1[19],AR1[20],AR1[21]
10310 DIM AR1$(600),AR1[21]; FIND (Z[1],KEY=ARG_1$,DOM=*NEXT)IOL=10305
10320 CUSTOMER$=MID(AR1$,1,10),%CUSTOMER$=CUSTOMER$,CUST_NAME$=MID(AR1$,11,35)
10325 CREDIT_CONT$=MID(AR1$,298,20),CREDIT_CONT_GREETING$=MID(AR1$,318,20),CREDIT_CONT_PHONE$=MID(AR1$,338,14) ! SSP#210721
10330 CREDIT_RATING$=MID(AR1$,362,5),CREDIT_HOLD$=MID(AR1$,361,1); IF POS(CREDIT_HOLD$="YNM")=0 THEN CREDIT_HOLD$="N"
10335 BALANCE$=STR(AR1[6]),OPEN_ORDERS$=STR(AR1[13]),CREDIT_LIMIT$=STR(AR1[5])
10350 TOTAL_AR$=STR(NUM(BALANCE$,ERR=*NEXT)+NUM(OPEN_ORDERS$,ERR=*NEXT)+NUM(REQUESTED_AMOUNT$,ERR=*NEXT))
10390 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
10395 RETURN 
10399 ! 
10400 PROCESS_ANALYZE_CREDIT:! process screen from here, so on return we can reread parameters
10410 PROCESS "ARGMAC","../ARG/AR.EN"
10420 GOSUB SET_VALUES
10425 REFRESH_FLG=1
10495 RETURN 
10499 ! 
56000 ! "178059-If customer is on credit hold - when they call up an order  
56001 ! "       that was in the system before de credit hold it is."
56002 REM "210721-Phone number does not display correctly in Euro format      
56003 REM "225047-Past Due check O/P parameter in GUI order entry
