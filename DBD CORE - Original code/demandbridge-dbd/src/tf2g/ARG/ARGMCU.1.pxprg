0010 ! ARGMCU - File Maintenance Program for AXS_CommCodeBySlsprsn (="AXS"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Aug. 13, 2009 12:50
0030 ! ************************************************************************
0080 PROCESS "ARGMCU","../ARG/AR.EN"
0085 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="AXS"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=4
0430 DIM _KEYS$[1:4]; _KEYS$[1]="REC_TYPE$",_KEYS$[2]="ORD_INV_NUM$",_KEYS$[3]="ORD_INV_KEY$",_KEYS$[4]="LINE_NO$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE; IF _ABORT_WRITE THEN _ABORT_WRITE=0; RETURN 
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1670 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_REMOVE$+_R_KEY$,_FYI$,"INFO"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$="",_ABORT_WRITE=0
3230 EXTRACT (_FIL_NO,KEY=KEC(_FIL_NO),REC=_CUR$,DOM=WRT,ERR=REC_BUSY)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3330 _R_KEY$=KEC(_FIL_NO); TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO"
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3410 REC_BUSY:
3420 IF ERR=0 THEN MSGBOX _MSG_REC_LOCKED$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG_CANNOT_WRITE$+SEP+MSG(ERR),_ERROR$
3430 _ABORT_WRITE=1
3440 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=REC_TYPE.CTL,_FIRST_FIELD=CUST_DIV.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF UCS(_KEYS$[_CURKEY])=UCS(ID$)+"$" OR UCS(_KEYS$[_CURKEY])=UCS(ID$) THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 SPLIT_COMM_AMT1$=STR(SPLIT_COMM_AMT1)
10030 SPLIT_COMM_AMT2$=STR(SPLIT_COMM_AMT2)
10040 SPLIT_COMM_AMT3$=STR(SPLIT_COMM_AMT3)
10050 SPLIT_COMM_AMT4$=STR(SPLIT_COMM_AMT4)
10060 SPLIT_COMM_AMT5$=STR(SPLIT_COMM_AMT5)
10070 COMM_AMT1$=STR(COMM_AMT1)
10080 COMM_AMT2$=STR(COMM_AMT2)
10090 COMM_AMT3$=STR(COMM_AMT3)
10100 COMM_AMT4$=STR(COMM_AMT4)
10110 COMM_AMT5$=STR(COMM_AMT5)
10120 SPER_SPLIT_PRCNT1$=STR(SPER_SPLIT_PRCNT1)
10130 SPER_SPLIT_PRCNT2$=STR(SPER_SPLIT_PRCNT2)
10140 SPER_SPLIT_PRCNT3$=STR(SPER_SPLIT_PRCNT3)
10150 SPER_SPLIT_PRCNT4$=STR(SPER_SPLIT_PRCNT4)
10160 SPER_SPLIT_PRCNT5$=STR(SPER_SPLIT_PRCNT5)
10170 COMM_PRCNT1$=STR(COMM_PRCNT1)
10180 COMM_PRCNT2$=STR(COMM_PRCNT2)
10190 COMM_PRCNT3$=STR(COMM_PRCNT3)
10200 COMM_PRCNT4$=STR(COMM_PRCNT4)
10210 COMM_PRCNT5$=STR(COMM_PRCNT5)
10220 GP_ADJ1$=STR(GP_ADJ1)
10230 GP_ADJ2$=STR(GP_ADJ2)
10240 GP_ADJ3$=STR(GP_ADJ3)
10250 GP_ADJ4$=STR(GP_ADJ4)
10260 GP_ADJ5$=STR(GP_ADJ5)
10270 EXT_SELL$=STR(EXT_SELL)
10280 EXT_COST$=STR(EXT_COST)
10290 LINE_GP_ADJ$=STR(LINE_GP_ADJ)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="SPLIT_COMM_AMT1",_X=SPLIT_COMM_AMT1.CTL,SPLIT_COMM_AMT1=NUM(SPLIT_COMM_AMT1$,ERR=NON_NUMERIC)
11030 _X$="SPLIT_COMM_AMT2",_X=SPLIT_COMM_AMT2.CTL,SPLIT_COMM_AMT2=NUM(SPLIT_COMM_AMT2$,ERR=NON_NUMERIC)
11040 _X$="SPLIT_COMM_AMT3",_X=SPLIT_COMM_AMT3.CTL,SPLIT_COMM_AMT3=NUM(SPLIT_COMM_AMT3$,ERR=NON_NUMERIC)
11050 _X$="SPLIT_COMM_AMT4",_X=SPLIT_COMM_AMT4.CTL,SPLIT_COMM_AMT4=NUM(SPLIT_COMM_AMT4$,ERR=NON_NUMERIC)
11060 _X$="SPLIT_COMM_AMT5",_X=SPLIT_COMM_AMT5.CTL,SPLIT_COMM_AMT5=NUM(SPLIT_COMM_AMT5$,ERR=NON_NUMERIC)
11070 _X$="COMM_AMT1",_X=COMM_AMT1.CTL,COMM_AMT1=NUM(COMM_AMT1$,ERR=NON_NUMERIC)
11080 _X$="COMM_AMT2",_X=COMM_AMT2.CTL,COMM_AMT2=NUM(COMM_AMT2$,ERR=NON_NUMERIC)
11090 _X$="COMM_AMT3",_X=COMM_AMT3.CTL,COMM_AMT3=NUM(COMM_AMT3$,ERR=NON_NUMERIC)
11100 _X$="COMM_AMT4",_X=COMM_AMT4.CTL,COMM_AMT4=NUM(COMM_AMT4$,ERR=NON_NUMERIC)
11110 _X$="COMM_AMT5",_X=COMM_AMT5.CTL,COMM_AMT5=NUM(COMM_AMT5$,ERR=NON_NUMERIC)
11120 _X$="SPER_SPLIT_PRCNT1",_X=SPER_SPLIT_PRCNT1.CTL,SPER_SPLIT_PRCNT1=NUM(SPER_SPLIT_PRCNT1$,ERR=NON_NUMERIC)
11130 _X$="SPER_SPLIT_PRCNT2",_X=SPER_SPLIT_PRCNT2.CTL,SPER_SPLIT_PRCNT2=NUM(SPER_SPLIT_PRCNT2$,ERR=NON_NUMERIC)
11140 _X$="SPER_SPLIT_PRCNT3",_X=SPER_SPLIT_PRCNT3.CTL,SPER_SPLIT_PRCNT3=NUM(SPER_SPLIT_PRCNT3$,ERR=NON_NUMERIC)
11150 _X$="SPER_SPLIT_PRCNT4",_X=SPER_SPLIT_PRCNT4.CTL,SPER_SPLIT_PRCNT4=NUM(SPER_SPLIT_PRCNT4$,ERR=NON_NUMERIC)
11160 _X$="SPER_SPLIT_PRCNT5",_X=SPER_SPLIT_PRCNT5.CTL,SPER_SPLIT_PRCNT5=NUM(SPER_SPLIT_PRCNT5$,ERR=NON_NUMERIC)
11170 _X$="COMM_PRCNT1",_X=COMM_PRCNT1.CTL,COMM_PRCNT1=NUM(COMM_PRCNT1$,ERR=NON_NUMERIC)
11180 _X$="COMM_PRCNT2",_X=COMM_PRCNT2.CTL,COMM_PRCNT2=NUM(COMM_PRCNT2$,ERR=NON_NUMERIC)
11190 _X$="COMM_PRCNT3",_X=COMM_PRCNT3.CTL,COMM_PRCNT3=NUM(COMM_PRCNT3$,ERR=NON_NUMERIC)
11200 _X$="COMM_PRCNT4",_X=COMM_PRCNT4.CTL,COMM_PRCNT4=NUM(COMM_PRCNT4$,ERR=NON_NUMERIC)
11210 _X$="COMM_PRCNT5",_X=COMM_PRCNT5.CTL,COMM_PRCNT5=NUM(COMM_PRCNT5$,ERR=NON_NUMERIC)
11220 _X$="GP_ADJ1",_X=GP_ADJ1.CTL,GP_ADJ1=NUM(GP_ADJ1$,ERR=NON_NUMERIC)
11230 _X$="GP_ADJ2",_X=GP_ADJ2.CTL,GP_ADJ2=NUM(GP_ADJ2$,ERR=NON_NUMERIC)
11240 _X$="GP_ADJ3",_X=GP_ADJ3.CTL,GP_ADJ3=NUM(GP_ADJ3$,ERR=NON_NUMERIC)
11250 _X$="GP_ADJ4",_X=GP_ADJ4.CTL,GP_ADJ4=NUM(GP_ADJ4$,ERR=NON_NUMERIC)
11260 _X$="GP_ADJ5",_X=GP_ADJ5.CTL,GP_ADJ5=NUM(GP_ADJ5$,ERR=NON_NUMERIC)
11270 _X$="EXT_SELL",_X=EXT_SELL.CTL,EXT_SELL=NUM(EXT_SELL$,ERR=NON_NUMERIC)
11280 _X$="EXT_COST",_X=EXT_COST.CTL,EXT_COST=NUM(EXT_COST$,ERR=NON_NUMERIC)
11290 _X$="LINE_GP_ADJ",_X=LINE_GP_ADJ.CTL,LINE_GP_ADJ=NUM(LINE_GP_ADJ$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN REC_TYPE$=""
13030 IF _CLR_FLG$="R" THEN ORD_INV_NUM$=""
13040 IF _CLR_FLG$="R" THEN ORD_INV_KEY$=""
13050 IF _CLR_FLG$="R" THEN LINE_NO$=""
13060 CUST_DIV$=""
13070 CUST_CODE$=""
13080 ORD_DIV$=""
13090 ORDER_NUM$=""
13100 INV_DATE$=""
13110 FY$=""
13120 ACCTPD$=""
13130 BATCH_NUM$=""
13140 BATCH_DATE$=""
13150 MC_UNUSED$=""
13160 SPER_CODE1$=""
13170 SPER_CODE2$=""
13180 SPER_CODE3$=""
13190 SPER_CODE4$=""
13200 SPER_CODE5$=""
13210 INV_COMM_CODE1$=""
13220 INV_COMM_CODE2$=""
13230 INV_COMM_CODE3$=""
13240 INV_COMM_CODE4$=""
13250 INV_COMM_CODE5$=""
13260 ORD_COMM_CODE1$=""
13270 ORD_COMM_CODE2$=""
13280 ORD_COMM_CODE3$=""
13290 ORD_COMM_CODE4$=""
13300 ORD_COMM_CODE5$=""
13310 SPLIT_COMM_AMT1=0
13320 SPLIT_COMM_AMT2=0
13330 SPLIT_COMM_AMT3=0
13340 SPLIT_COMM_AMT4=0
13350 SPLIT_COMM_AMT5=0
13360 COMM_AMT1=0
13370 COMM_AMT2=0
13380 COMM_AMT3=0
13390 COMM_AMT4=0
13400 COMM_AMT5=0
13410 SPER_SPLIT_PRCNT1=0
13420 SPER_SPLIT_PRCNT2=0
13430 SPER_SPLIT_PRCNT3=0
13440 SPER_SPLIT_PRCNT4=0
13450 SPER_SPLIT_PRCNT5=0
13460 COMM_PRCNT1=0
13470 COMM_PRCNT2=0
13480 COMM_PRCNT3=0
13490 COMM_PRCNT4=0
13500 COMM_PRCNT5=0
13510 GP_ADJ1=0
13520 GP_ADJ2=0
13530 GP_ADJ3=0
13540 GP_ADJ4=0
13550 GP_ADJ5=0
13560 EXT_SELL=0
13570 EXT_COST=0
13580 LINE_GP_ADJ=0
13590 MCL_UNUSED1=0
13600 MCL_UNUSED2=0
13610 MCL_UNUSED3=0
13620 MCL_UNUSED4=0
13630 MCL_UNUSED5=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=ORD_INV_NUM.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=ORD_INV_KEY.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=LINE_NO.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(62,"N")
15030 IF _ORIG.REC_TYPE$=_CUR.REC_TYPE$ OR REC_TYPE$=_CUR.REC_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.REC_TYPE$=REC_TYPE$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.REC_TYPE$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.REC_TYPE$
15040 IF _ORIG.ORD_INV_NUM$=_CUR.ORD_INV_NUM$ OR ORD_INV_NUM$=_CUR.ORD_INV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORD_INV_NUM$=ORD_INV_NUM$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ORD_INV_NUM$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ORD_INV_NUM$
15050 IF _ORIG.ORD_INV_KEY$=_CUR.ORD_INV_KEY$ OR ORD_INV_KEY$=_CUR.ORD_INV_KEY$ THEN GOTO *NEXT ELSE IF _ORIG.ORD_INV_KEY$=ORD_INV_KEY$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ORD_INV_KEY$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ORD_INV_KEY$
15060 IF _ORIG.LINE_NO$=_CUR.LINE_NO$ OR LINE_NO$=_CUR.LINE_NO$ THEN GOTO *NEXT ELSE IF _ORIG.LINE_NO$=LINE_NO$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.LINE_NO$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.LINE_NO$
15070 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.CUST_DIV$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.CUST_DIV$
15080 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.CUST_CODE$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.CUST_CODE$
15090 IF _ORIG.ORD_DIV$=_CUR.ORD_DIV$ OR ORD_DIV$=_CUR.ORD_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ORD_DIV$=ORD_DIV$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ORD_DIV$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ORD_DIV$
15100 IF _ORIG.ORDER_NUM$=_CUR.ORDER_NUM$ OR ORDER_NUM$=_CUR.ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_NUM$=ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ORDER_NUM$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ORDER_NUM$
15110 IF _ORIG.INV_DATE$=_CUR.INV_DATE$ OR INV_DATE$=_CUR.INV_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.INV_DATE$=INV_DATE$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.INV_DATE$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.INV_DATE$
15120 IF _ORIG.FY$=_CUR.FY$ OR FY$=_CUR.FY$ THEN GOTO *NEXT ELSE IF _ORIG.FY$=FY$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.FY$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.FY$
15130 IF _ORIG.ACCTPD$=_CUR.ACCTPD$ OR ACCTPD$=_CUR.ACCTPD$ THEN GOTO *NEXT ELSE IF _ORIG.ACCTPD$=ACCTPD$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ACCTPD$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ACCTPD$
15140 IF _ORIG.BATCH_NUM$=_CUR.BATCH_NUM$ OR BATCH_NUM$=_CUR.BATCH_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.BATCH_NUM$=BATCH_NUM$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.BATCH_NUM$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.BATCH_NUM$
15150 IF _ORIG.BATCH_DATE$=_CUR.BATCH_DATE$ OR BATCH_DATE$=_CUR.BATCH_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.BATCH_DATE$=BATCH_DATE$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.BATCH_DATE$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.BATCH_DATE$
15160 IF _ORIG.MC_UNUSED$=_CUR.MC_UNUSED$ OR MC_UNUSED$=_CUR.MC_UNUSED$ THEN GOTO *NEXT ELSE IF _ORIG.MC_UNUSED$=MC_UNUSED$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.MC_UNUSED$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.MC_UNUSED$
15170 IF _ORIG.SPER_CODE1$=_CUR.SPER_CODE1$ OR SPER_CODE1$=_CUR.SPER_CODE1$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE1$=SPER_CODE1$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.SPER_CODE1$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.SPER_CODE1$
15180 IF _ORIG.SPER_CODE2$=_CUR.SPER_CODE2$ OR SPER_CODE2$=_CUR.SPER_CODE2$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE2$=SPER_CODE2$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.SPER_CODE2$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.SPER_CODE2$
15190 IF _ORIG.SPER_CODE3$=_CUR.SPER_CODE3$ OR SPER_CODE3$=_CUR.SPER_CODE3$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE3$=SPER_CODE3$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.SPER_CODE3$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.SPER_CODE3$
15200 IF _ORIG.SPER_CODE4$=_CUR.SPER_CODE4$ OR SPER_CODE4$=_CUR.SPER_CODE4$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE4$=SPER_CODE4$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.SPER_CODE4$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.SPER_CODE4$
15210 IF _ORIG.SPER_CODE5$=_CUR.SPER_CODE5$ OR SPER_CODE5$=_CUR.SPER_CODE5$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE5$=SPER_CODE5$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.SPER_CODE5$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.SPER_CODE5$
15220 IF _ORIG.INV_COMM_CODE1$=_CUR.INV_COMM_CODE1$ OR INV_COMM_CODE1$=_CUR.INV_COMM_CODE1$ THEN GOTO *NEXT ELSE IF _ORIG.INV_COMM_CODE1$=INV_COMM_CODE1$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.INV_COMM_CODE1$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.INV_COMM_CODE1$
15230 IF _ORIG.INV_COMM_CODE2$=_CUR.INV_COMM_CODE2$ OR INV_COMM_CODE2$=_CUR.INV_COMM_CODE2$ THEN GOTO *NEXT ELSE IF _ORIG.INV_COMM_CODE2$=INV_COMM_CODE2$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.INV_COMM_CODE2$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.INV_COMM_CODE2$
15240 IF _ORIG.INV_COMM_CODE3$=_CUR.INV_COMM_CODE3$ OR INV_COMM_CODE3$=_CUR.INV_COMM_CODE3$ THEN GOTO *NEXT ELSE IF _ORIG.INV_COMM_CODE3$=INV_COMM_CODE3$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.INV_COMM_CODE3$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.INV_COMM_CODE3$
15250 IF _ORIG.INV_COMM_CODE4$=_CUR.INV_COMM_CODE4$ OR INV_COMM_CODE4$=_CUR.INV_COMM_CODE4$ THEN GOTO *NEXT ELSE IF _ORIG.INV_COMM_CODE4$=INV_COMM_CODE4$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.INV_COMM_CODE4$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.INV_COMM_CODE4$
15260 IF _ORIG.INV_COMM_CODE5$=_CUR.INV_COMM_CODE5$ OR INV_COMM_CODE5$=_CUR.INV_COMM_CODE5$ THEN GOTO *NEXT ELSE IF _ORIG.INV_COMM_CODE5$=INV_COMM_CODE5$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.INV_COMM_CODE5$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.INV_COMM_CODE5$
15270 IF _ORIG.ORD_COMM_CODE1$=_CUR.ORD_COMM_CODE1$ OR ORD_COMM_CODE1$=_CUR.ORD_COMM_CODE1$ THEN GOTO *NEXT ELSE IF _ORIG.ORD_COMM_CODE1$=ORD_COMM_CODE1$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ORD_COMM_CODE1$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ORD_COMM_CODE1$
15280 IF _ORIG.ORD_COMM_CODE2$=_CUR.ORD_COMM_CODE2$ OR ORD_COMM_CODE2$=_CUR.ORD_COMM_CODE2$ THEN GOTO *NEXT ELSE IF _ORIG.ORD_COMM_CODE2$=ORD_COMM_CODE2$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ORD_COMM_CODE2$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ORD_COMM_CODE2$
15290 IF _ORIG.ORD_COMM_CODE3$=_CUR.ORD_COMM_CODE3$ OR ORD_COMM_CODE3$=_CUR.ORD_COMM_CODE3$ THEN GOTO *NEXT ELSE IF _ORIG.ORD_COMM_CODE3$=ORD_COMM_CODE3$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ORD_COMM_CODE3$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ORD_COMM_CODE3$
15300 IF _ORIG.ORD_COMM_CODE4$=_CUR.ORD_COMM_CODE4$ OR ORD_COMM_CODE4$=_CUR.ORD_COMM_CODE4$ THEN GOTO *NEXT ELSE IF _ORIG.ORD_COMM_CODE4$=ORD_COMM_CODE4$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ORD_COMM_CODE4$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ORD_COMM_CODE4$
15310 IF _ORIG.ORD_COMM_CODE5$=_CUR.ORD_COMM_CODE5$ OR ORD_COMM_CODE5$=_CUR.ORD_COMM_CODE5$ THEN GOTO *NEXT ELSE IF _ORIG.ORD_COMM_CODE5$=ORD_COMM_CODE5$ THEN _CHG2$=_CHG2$+SEP+" = "+_CUR.ORD_COMM_CODE5$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+_CUR.ORD_COMM_CODE5$
15320 IF _ORIG.SPLIT_COMM_AMT1=_CUR.SPLIT_COMM_AMT1 OR SPLIT_COMM_AMT1=_CUR.SPLIT_COMM_AMT1 THEN GOTO *NEXT ELSE IF _ORIG.SPLIT_COMM_AMT1=SPLIT_COMM_AMT1 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT1),_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT1)
15330 IF _ORIG.SPLIT_COMM_AMT2=_CUR.SPLIT_COMM_AMT2 OR SPLIT_COMM_AMT2=_CUR.SPLIT_COMM_AMT2 THEN GOTO *NEXT ELSE IF _ORIG.SPLIT_COMM_AMT2=SPLIT_COMM_AMT2 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT2),_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT2)
15340 IF _ORIG.SPLIT_COMM_AMT3=_CUR.SPLIT_COMM_AMT3 OR SPLIT_COMM_AMT3=_CUR.SPLIT_COMM_AMT3 THEN GOTO *NEXT ELSE IF _ORIG.SPLIT_COMM_AMT3=SPLIT_COMM_AMT3 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT3),_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT3)
15350 IF _ORIG.SPLIT_COMM_AMT4=_CUR.SPLIT_COMM_AMT4 OR SPLIT_COMM_AMT4=_CUR.SPLIT_COMM_AMT4 THEN GOTO *NEXT ELSE IF _ORIG.SPLIT_COMM_AMT4=SPLIT_COMM_AMT4 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT4),_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT4)
15360 IF _ORIG.SPLIT_COMM_AMT5=_CUR.SPLIT_COMM_AMT5 OR SPLIT_COMM_AMT5=_CUR.SPLIT_COMM_AMT5 THEN GOTO *NEXT ELSE IF _ORIG.SPLIT_COMM_AMT5=SPLIT_COMM_AMT5 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT5),_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPLIT_COMM_AMT5)
15370 IF _ORIG.COMM_AMT1=_CUR.COMM_AMT1 OR COMM_AMT1=_CUR.COMM_AMT1 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT1=COMM_AMT1 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_AMT1),_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_AMT1)
15380 IF _ORIG.COMM_AMT2=_CUR.COMM_AMT2 OR COMM_AMT2=_CUR.COMM_AMT2 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT2=COMM_AMT2 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_AMT2),_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_AMT2)
15390 IF _ORIG.COMM_AMT3=_CUR.COMM_AMT3 OR COMM_AMT3=_CUR.COMM_AMT3 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT3=COMM_AMT3 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_AMT3),_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_AMT3)
15400 IF _ORIG.COMM_AMT4=_CUR.COMM_AMT4 OR COMM_AMT4=_CUR.COMM_AMT4 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT4=COMM_AMT4 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_AMT4),_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_AMT4)
15410 IF _ORIG.COMM_AMT5=_CUR.COMM_AMT5 OR COMM_AMT5=_CUR.COMM_AMT5 THEN GOTO *NEXT ELSE IF _ORIG.COMM_AMT5=COMM_AMT5 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_AMT5),_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_AMT5)
15420 IF _ORIG.SPER_SPLIT_PRCNT1=_CUR.SPER_SPLIT_PRCNT1 OR SPER_SPLIT_PRCNT1=_CUR.SPER_SPLIT_PRCNT1 THEN GOTO *NEXT ELSE IF _ORIG.SPER_SPLIT_PRCNT1=SPER_SPLIT_PRCNT1 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT1),_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT1)
15430 IF _ORIG.SPER_SPLIT_PRCNT2=_CUR.SPER_SPLIT_PRCNT2 OR SPER_SPLIT_PRCNT2=_CUR.SPER_SPLIT_PRCNT2 THEN GOTO *NEXT ELSE IF _ORIG.SPER_SPLIT_PRCNT2=SPER_SPLIT_PRCNT2 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT2),_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT2)
15440 IF _ORIG.SPER_SPLIT_PRCNT3=_CUR.SPER_SPLIT_PRCNT3 OR SPER_SPLIT_PRCNT3=_CUR.SPER_SPLIT_PRCNT3 THEN GOTO *NEXT ELSE IF _ORIG.SPER_SPLIT_PRCNT3=SPER_SPLIT_PRCNT3 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT3),_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT3)
15450 IF _ORIG.SPER_SPLIT_PRCNT4=_CUR.SPER_SPLIT_PRCNT4 OR SPER_SPLIT_PRCNT4=_CUR.SPER_SPLIT_PRCNT4 THEN GOTO *NEXT ELSE IF _ORIG.SPER_SPLIT_PRCNT4=SPER_SPLIT_PRCNT4 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT4),_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT4)
15460 IF _ORIG.SPER_SPLIT_PRCNT5=_CUR.SPER_SPLIT_PRCNT5 OR SPER_SPLIT_PRCNT5=_CUR.SPER_SPLIT_PRCNT5 THEN GOTO *NEXT ELSE IF _ORIG.SPER_SPLIT_PRCNT5=SPER_SPLIT_PRCNT5 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT5),_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.SPER_SPLIT_PRCNT5)
15470 IF _ORIG.COMM_PRCNT1=_CUR.COMM_PRCNT1 OR COMM_PRCNT1=_CUR.COMM_PRCNT1 THEN GOTO *NEXT ELSE IF _ORIG.COMM_PRCNT1=COMM_PRCNT1 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_PRCNT1),_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_PRCNT1)
15480 IF _ORIG.COMM_PRCNT2=_CUR.COMM_PRCNT2 OR COMM_PRCNT2=_CUR.COMM_PRCNT2 THEN GOTO *NEXT ELSE IF _ORIG.COMM_PRCNT2=COMM_PRCNT2 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_PRCNT2),_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_PRCNT2)
15490 IF _ORIG.COMM_PRCNT3=_CUR.COMM_PRCNT3 OR COMM_PRCNT3=_CUR.COMM_PRCNT3 THEN GOTO *NEXT ELSE IF _ORIG.COMM_PRCNT3=COMM_PRCNT3 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_PRCNT3),_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_PRCNT3)
15500 IF _ORIG.COMM_PRCNT4=_CUR.COMM_PRCNT4 OR COMM_PRCNT4=_CUR.COMM_PRCNT4 THEN GOTO *NEXT ELSE IF _ORIG.COMM_PRCNT4=COMM_PRCNT4 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_PRCNT4),_CHG_VAR$(48,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_PRCNT4)
15510 IF _ORIG.COMM_PRCNT5=_CUR.COMM_PRCNT5 OR COMM_PRCNT5=_CUR.COMM_PRCNT5 THEN GOTO *NEXT ELSE IF _ORIG.COMM_PRCNT5=COMM_PRCNT5 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.COMM_PRCNT5),_CHG_VAR$(49,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.COMM_PRCNT5)
15520 IF _ORIG.GP_ADJ1=_CUR.GP_ADJ1 OR GP_ADJ1=_CUR.GP_ADJ1 THEN GOTO *NEXT ELSE IF _ORIG.GP_ADJ1=GP_ADJ1 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.GP_ADJ1),_CHG_VAR$(50,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.GP_ADJ1)
15530 IF _ORIG.GP_ADJ2=_CUR.GP_ADJ2 OR GP_ADJ2=_CUR.GP_ADJ2 THEN GOTO *NEXT ELSE IF _ORIG.GP_ADJ2=GP_ADJ2 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.GP_ADJ2),_CHG_VAR$(51,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.GP_ADJ2)
15540 IF _ORIG.GP_ADJ3=_CUR.GP_ADJ3 OR GP_ADJ3=_CUR.GP_ADJ3 THEN GOTO *NEXT ELSE IF _ORIG.GP_ADJ3=GP_ADJ3 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.GP_ADJ3),_CHG_VAR$(52,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.GP_ADJ3)
15550 IF _ORIG.GP_ADJ4=_CUR.GP_ADJ4 OR GP_ADJ4=_CUR.GP_ADJ4 THEN GOTO *NEXT ELSE IF _ORIG.GP_ADJ4=GP_ADJ4 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.GP_ADJ4),_CHG_VAR$(53,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.GP_ADJ4)
15560 IF _ORIG.GP_ADJ5=_CUR.GP_ADJ5 OR GP_ADJ5=_CUR.GP_ADJ5 THEN GOTO *NEXT ELSE IF _ORIG.GP_ADJ5=GP_ADJ5 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.GP_ADJ5),_CHG_VAR$(54,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.GP_ADJ5)
15570 IF _ORIG.EXT_SELL=_CUR.EXT_SELL OR EXT_SELL=_CUR.EXT_SELL THEN GOTO *NEXT ELSE IF _ORIG.EXT_SELL=EXT_SELL THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.EXT_SELL),_CHG_VAR$(55,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.EXT_SELL)
15580 IF _ORIG.EXT_COST=_CUR.EXT_COST OR EXT_COST=_CUR.EXT_COST THEN GOTO *NEXT ELSE IF _ORIG.EXT_COST=EXT_COST THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.EXT_COST),_CHG_VAR$(56,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.EXT_COST)
15590 IF _ORIG.LINE_GP_ADJ=_CUR.LINE_GP_ADJ OR LINE_GP_ADJ=_CUR.LINE_GP_ADJ THEN GOTO *NEXT ELSE IF _ORIG.LINE_GP_ADJ=LINE_GP_ADJ THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.LINE_GP_ADJ),_CHG_VAR$(57,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.LINE_GP_ADJ)
15600 IF _ORIG.MCL_UNUSED1=_CUR.MCL_UNUSED1 OR MCL_UNUSED1=_CUR.MCL_UNUSED1 THEN GOTO *NEXT ELSE IF _ORIG.MCL_UNUSED1=MCL_UNUSED1 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.MCL_UNUSED1),_CHG_VAR$(58,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.MCL_UNUSED1)
15610 IF _ORIG.MCL_UNUSED2=_CUR.MCL_UNUSED2 OR MCL_UNUSED2=_CUR.MCL_UNUSED2 THEN GOTO *NEXT ELSE IF _ORIG.MCL_UNUSED2=MCL_UNUSED2 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.MCL_UNUSED2),_CHG_VAR$(59,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.MCL_UNUSED2)
15620 IF _ORIG.MCL_UNUSED3=_CUR.MCL_UNUSED3 OR MCL_UNUSED3=_CUR.MCL_UNUSED3 THEN GOTO *NEXT ELSE IF _ORIG.MCL_UNUSED3=MCL_UNUSED3 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.MCL_UNUSED3),_CHG_VAR$(60,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.MCL_UNUSED3)
15630 IF _ORIG.MCL_UNUSED4=_CUR.MCL_UNUSED4 OR MCL_UNUSED4=_CUR.MCL_UNUSED4 THEN GOTO *NEXT ELSE IF _ORIG.MCL_UNUSED4=MCL_UNUSED4 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.MCL_UNUSED4),_CHG_VAR$(61,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.MCL_UNUSED4)
15640 IF _ORIG.MCL_UNUSED5=_CUR.MCL_UNUSED5 OR MCL_UNUSED5=_CUR.MCL_UNUSED5 THEN GOTO *NEXT ELSE IF _ORIG.MCL_UNUSED5=MCL_UNUSED5 THEN _CHG2$=_CHG2$+SEP+" = "+STR(_CUR.MCL_UNUSED5),_CHG_VAR$(62,1)="Y" ELSE _CHG1$=_CHG1$+SEP+" = "+STR(_CUR.MCL_UNUSED5)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN REC_TYPE$=_CUR.REC_TYPE$
16030 IF _CHG_VAR$(2,1)="Y" THEN ORD_INV_NUM$=_CUR.ORD_INV_NUM$
16040 IF _CHG_VAR$(3,1)="Y" THEN ORD_INV_KEY$=_CUR.ORD_INV_KEY$
16050 IF _CHG_VAR$(4,1)="Y" THEN LINE_NO$=_CUR.LINE_NO$
16060 IF _CHG_VAR$(5,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16070 IF _CHG_VAR$(6,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16080 IF _CHG_VAR$(7,1)="Y" THEN ORD_DIV$=_CUR.ORD_DIV$
16090 IF _CHG_VAR$(8,1)="Y" THEN ORDER_NUM$=_CUR.ORDER_NUM$
16100 IF _CHG_VAR$(9,1)="Y" THEN INV_DATE$=_CUR.INV_DATE$
16110 IF _CHG_VAR$(10,1)="Y" THEN FY$=_CUR.FY$
16120 IF _CHG_VAR$(11,1)="Y" THEN ACCTPD$=_CUR.ACCTPD$
16130 IF _CHG_VAR$(12,1)="Y" THEN BATCH_NUM$=_CUR.BATCH_NUM$
16140 IF _CHG_VAR$(13,1)="Y" THEN BATCH_DATE$=_CUR.BATCH_DATE$
16150 IF _CHG_VAR$(14,1)="Y" THEN MC_UNUSED$=_CUR.MC_UNUSED$
16160 IF _CHG_VAR$(15,1)="Y" THEN SPER_CODE1$=_CUR.SPER_CODE1$
16170 IF _CHG_VAR$(16,1)="Y" THEN SPER_CODE2$=_CUR.SPER_CODE2$
16180 IF _CHG_VAR$(17,1)="Y" THEN SPER_CODE3$=_CUR.SPER_CODE3$
16190 IF _CHG_VAR$(18,1)="Y" THEN SPER_CODE4$=_CUR.SPER_CODE4$
16200 IF _CHG_VAR$(19,1)="Y" THEN SPER_CODE5$=_CUR.SPER_CODE5$
16210 IF _CHG_VAR$(20,1)="Y" THEN INV_COMM_CODE1$=_CUR.INV_COMM_CODE1$
16220 IF _CHG_VAR$(21,1)="Y" THEN INV_COMM_CODE2$=_CUR.INV_COMM_CODE2$
16230 IF _CHG_VAR$(22,1)="Y" THEN INV_COMM_CODE3$=_CUR.INV_COMM_CODE3$
16240 IF _CHG_VAR$(23,1)="Y" THEN INV_COMM_CODE4$=_CUR.INV_COMM_CODE4$
16250 IF _CHG_VAR$(24,1)="Y" THEN INV_COMM_CODE5$=_CUR.INV_COMM_CODE5$
16260 IF _CHG_VAR$(25,1)="Y" THEN ORD_COMM_CODE1$=_CUR.ORD_COMM_CODE1$
16270 IF _CHG_VAR$(26,1)="Y" THEN ORD_COMM_CODE2$=_CUR.ORD_COMM_CODE2$
16280 IF _CHG_VAR$(27,1)="Y" THEN ORD_COMM_CODE3$=_CUR.ORD_COMM_CODE3$
16290 IF _CHG_VAR$(28,1)="Y" THEN ORD_COMM_CODE4$=_CUR.ORD_COMM_CODE4$
16300 IF _CHG_VAR$(29,1)="Y" THEN ORD_COMM_CODE5$=_CUR.ORD_COMM_CODE5$
16310 IF _CHG_VAR$(30,1)="Y" THEN SPLIT_COMM_AMT1=_CUR.SPLIT_COMM_AMT1
16320 IF _CHG_VAR$(31,1)="Y" THEN SPLIT_COMM_AMT2=_CUR.SPLIT_COMM_AMT2
16330 IF _CHG_VAR$(32,1)="Y" THEN SPLIT_COMM_AMT3=_CUR.SPLIT_COMM_AMT3
16340 IF _CHG_VAR$(33,1)="Y" THEN SPLIT_COMM_AMT4=_CUR.SPLIT_COMM_AMT4
16350 IF _CHG_VAR$(34,1)="Y" THEN SPLIT_COMM_AMT5=_CUR.SPLIT_COMM_AMT5
16360 IF _CHG_VAR$(35,1)="Y" THEN COMM_AMT1=_CUR.COMM_AMT1
16370 IF _CHG_VAR$(36,1)="Y" THEN COMM_AMT2=_CUR.COMM_AMT2
16380 IF _CHG_VAR$(37,1)="Y" THEN COMM_AMT3=_CUR.COMM_AMT3
16390 IF _CHG_VAR$(38,1)="Y" THEN COMM_AMT4=_CUR.COMM_AMT4
16400 IF _CHG_VAR$(39,1)="Y" THEN COMM_AMT5=_CUR.COMM_AMT5
16410 IF _CHG_VAR$(40,1)="Y" THEN SPER_SPLIT_PRCNT1=_CUR.SPER_SPLIT_PRCNT1
16420 IF _CHG_VAR$(41,1)="Y" THEN SPER_SPLIT_PRCNT2=_CUR.SPER_SPLIT_PRCNT2
16430 IF _CHG_VAR$(42,1)="Y" THEN SPER_SPLIT_PRCNT3=_CUR.SPER_SPLIT_PRCNT3
16440 IF _CHG_VAR$(43,1)="Y" THEN SPER_SPLIT_PRCNT4=_CUR.SPER_SPLIT_PRCNT4
16450 IF _CHG_VAR$(44,1)="Y" THEN SPER_SPLIT_PRCNT5=_CUR.SPER_SPLIT_PRCNT5
16460 IF _CHG_VAR$(45,1)="Y" THEN COMM_PRCNT1=_CUR.COMM_PRCNT1
16470 IF _CHG_VAR$(46,1)="Y" THEN COMM_PRCNT2=_CUR.COMM_PRCNT2
16480 IF _CHG_VAR$(47,1)="Y" THEN COMM_PRCNT3=_CUR.COMM_PRCNT3
16490 IF _CHG_VAR$(48,1)="Y" THEN COMM_PRCNT4=_CUR.COMM_PRCNT4
16500 IF _CHG_VAR$(49,1)="Y" THEN COMM_PRCNT5=_CUR.COMM_PRCNT5
16510 IF _CHG_VAR$(50,1)="Y" THEN GP_ADJ1=_CUR.GP_ADJ1
16520 IF _CHG_VAR$(51,1)="Y" THEN GP_ADJ2=_CUR.GP_ADJ2
16530 IF _CHG_VAR$(52,1)="Y" THEN GP_ADJ3=_CUR.GP_ADJ3
16540 IF _CHG_VAR$(53,1)="Y" THEN GP_ADJ4=_CUR.GP_ADJ4
16550 IF _CHG_VAR$(54,1)="Y" THEN GP_ADJ5=_CUR.GP_ADJ5
16560 IF _CHG_VAR$(55,1)="Y" THEN EXT_SELL=_CUR.EXT_SELL
16570 IF _CHG_VAR$(56,1)="Y" THEN EXT_COST=_CUR.EXT_COST
16580 IF _CHG_VAR$(57,1)="Y" THEN LINE_GP_ADJ=_CUR.LINE_GP_ADJ
16590 IF _CHG_VAR$(58,1)="Y" THEN MCL_UNUSED1=_CUR.MCL_UNUSED1
16600 IF _CHG_VAR$(59,1)="Y" THEN MCL_UNUSED2=_CUR.MCL_UNUSED2
16610 IF _CHG_VAR$(60,1)="Y" THEN MCL_UNUSED3=_CUR.MCL_UNUSED3
16620 IF _CHG_VAR$(61,1)="Y" THEN MCL_UNUSED4=_CUR.MCL_UNUSED4
16630 IF _CHG_VAR$(62,1)="Y" THEN MCL_UNUSED5=_CUR.MCL_UNUSED5
16990 RETURN 
