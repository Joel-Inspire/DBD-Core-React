0010 ! GGGMBA - G/L Gateway Account Map
0035 ! "5.2 - 10/25/03 - 8.639444 - jir
0040 ! "Copyright 2003 Computer Software Inc.; Norcross, Georgia
0041 ! "        Licensed Software - All Rights Reserved.
0050 PROCESS "GGGMBA","../GLG/GL.EN"
0060 EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0105 INIT:
0110 X0$="GG2MBA",X1$="G/L Gateway Account Map"
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0121 DIM Z0$(80,"-")
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0131 K0=3,K1=1
0135 C9=-1,V9=-2
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0290 K9$="",K9=LEN(K9$)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST GG2$(1,LEN(GG2$))
0320 IOLIST GL1$(1)
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X GG2... 02O GL1... 13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 DIM X$(12,"0"); CALL "ZZDISP","AX",X$,"G/L",X3$,TMP$,"",0,0,X4$; GL_LEN=LEN(TMP$)
0600 REM "
0620 GOSUB 6000
0700 REM "
0990 READ (Z[1],KEY=K9$,DOM=0991)
1000 REM "
1010 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,-1,X1,X2
1030 DIM GL1$(54)
1035 DIM GG2$(24)
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1500
1200 REM "Incoming G/L Account
1201 RETURN 
1205 SEL_INC_GL:IF LEN(ML_INC_GL$)>12 THEN GG2$(1,24)=ML_INC_GL$,GL_ACCT$=ML_INC_GL$(13,12),ML_INC_GL$=ML_INC_GL$(1,12),REFRESH_FLG=1,NEXT_ID=BT_WRT.CTL END_IF ; ML_INC_GL$=PAD(ML_INC_GL$,12," ")
1210 GG2$(1,12)=ML_INC_GL$ ! CALL "ZZENTR","SUX",GG2{ALL},GG2$,X4$,X3$,22,3,1,12,C0,"","{1"+X$,"","GG2MBA00","GG2","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1210,1211
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1220 CALL "*WINGRP;ENABLE",BUTTONS.GRP$
1240 RETURN 
1500 REM "
1505 Z9=-1
1510 A1$=GG2$(1,12)
1520 READ (Z[1],KEY=A1$,DOM=1600)IOL=0310
1525 Z9=0
1530 FIND (Z[2],KEY=GG2$(13,12),DOM=1531)IOL=0320
1590 GOTO 1700
1600 REM "
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630,6975
1630 GOTO 1000
1660 IF V9>=0 THEN GOSUB 6200
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700,6970
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 EXTRACT (Z[1],KEY=A1$,DOM=1870)IOL=0310
1865 C9=1
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2035 IF X0*6+11<LEN(V9$) THEN IF V9$(X0*6+11,1)="2" THEN GOTO 2020
2040 ON X0 GOTO 2100,1800
2100 REM "Our G/L account Number
2105 SEL_ACCT: GL_ACCT$=PAD(GL_ACCT$,12,"0")
2110 GG2$(13,12)=GL_ACCT$ ! CALL "ZZENTR","A",GG2{ALL},GG2$,X4$,X3$,22,5,13,12,C0,"G/L","{3"+X$,"","GG2MBA02","GL1","GL2MAA",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2110,2111
2115 FIND (Z[2],KEY=GG2$(13,12),DOM=2110)IOL=0320
2140 RETURN 
2150 REM "Command Line 1
2160 CALL "ZZENTR","S",GG2{ALL},GG2$,X4$,X3$,15,7,41,60,C0,"","{3"+X$,"","GG2MBA04","","",""
2190 GOTO 2020
2200 REM "Command Line 2
2210 CALL "ZZENTR","S",GG2{ALL},GG2$,X4$,X3$,15,8,101,60,C0,"","{3"+X$,"","GG2MBA06","","",""
2240 GOTO 2020
6000 REM "BACKGROUND
6001 RETURN 
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(0,3),"Incoming G/L Account:",
6070 PRINT @(0,5),"     Our G/L Account:",
6080 PRINT 
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6225 CALL "ZZDISP","A",GG2$(13,12),"G/L",X3$,"","",22,5,X4$
6230 PRINT @(24+GL_LEN,5),GL1$(13,35),
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6460 PRINT @(22,3),GG2$(1,12),
6490 RETURN 
6500 DELETE_REC: A1$=ML_INC_GL$
6505 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$; IF _X$="NO" THEN RETURN 
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 GOTO 6790
6600 REM "ALT KEY DATA READS
6690 RETURN 
6700 REM "ADD ENTRY
6705 IF Z9=0 THEN GOTO 6790
6706 WRITE_REC: A1$=GG2$(1,12)
6710 WRITE (Z[1],KEY=A1$)IOL=0310
6790 CLEAR_REC: NEXT_ID=ML_INC_GL.CTL,ML_INC_GL$="",GL_ACCT$="",%GL_ACCT_DESC$="",REFRESH_FLG=1; RETURN 
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 IF A1$="" THEN GOTO 6800 ELSE IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 GG2$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM "PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6870 GOTO 6895
6890 GOTO 1515
6895 PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=1140); GOTO 1140
7500 REM "CUSTOM PROGRAMMING ROUTINES
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 END_PROG:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 ! 10000,10 - Browsing mode
10010 ! - Next
10020 NEXT_REC:
10030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
10040 _KEY$=KEY(Z(1),END=END_OF_FILE)
10050 READ (Z(1),KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
10060 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
10070 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
10080 _KEY$=KEN(Z(1),KEY=_KEY$,END=END_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
10090 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
10100 ! 2200 - Prior record
10110 PRIOR_REC:
10120 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
10130 _KEY$=KEP(Z(1),END=START_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
10140 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
10150 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
10160 _KEY$=KEP(Z(1),KEY=_KEY$,END=START_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
10170 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
10180 ! 2400 - First record
10190 FIRST_REC:
10200 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
10210 _KEY$=KEF(Z(1),ERR=NO_FIRST)
10220 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
10230 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
10240 ! 2600 - Last record
10250 LAST_REC:
10260 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
10270 _KEY$=KEL(Z(1),ERR=NO_LAST)
10280 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
10290 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
10300 ! 3000 - Subroutines
10310 ! Processing required by READ
10320 PROCESS_READ:
10330 READ (Z(1),KEY=_KEY$)IOL=0310
10350 ML_INC_GL$=GG2$(1,12),GL_ACCT$=GG2$(13,12),REFRESH_FLG=1
10360 CHANGE_FLG=0
10370 RETURN 
10510 BUSY_CHK:
10520 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
10530 IF _D$="NO" THEN EXIT 
10540 RETURN 
11000 CHECK_CHANGES:! 11000,10
11001 RETURN 
11010 IF CHANGE_FLG=0 THEN GOTO *RETURN
11030 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
11040 IF _YESNO$="YES" THEN GOTO WRITE_REC
11050 CHANGE_FLG=0
11060 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1
11070 RETURN 
11100 DISP_REC:
11110 RETURN 
11500 SETUP_LIBRARY:! 11500,10
11510 _SV_MSGLIB$=MSG(*)
11520 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
11530 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 11550
11540 MESSAGE_LIB "*msglib.en"
11550 SET_MSG:GOSUB SETUP_MESSAGES
11560 RETURN 
12000 ! 12000,10 - Retrieve messages from the *msglib.xxx library
12010 SETUP_MESSAGES:
12020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
12030 _MSG_DIRECTORY$=MSG("DIRECTORY")
12040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
12050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
12060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
12070 _MSG_MANDATORY$=MSG("MANDATORY")
12080 _MSG_NEXT$=MSG("NEXT")
12090 _MSG_NON_NUMER$=MSG("NON_NUMER")
12100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
12110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
12120 _MSG_PRECEDING$=MSG("PRECEDING")
12130 _MSG_PREFIX$=MSG("PREFIX")
12140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
12150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
12160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
12170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
12180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
12190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
12200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
12210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
12220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
12230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
12240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
12250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
12260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
12270 _MSG_START_FILE$=MSG("START_FILE")
12280 _MSG_UPDATE$=MSG("UPDATE")
12290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
12300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
12310 _MSG_UPD_SAME$=MSG("UPD_SAME")
12320 _MSG_WARNING$=MSG("WARNING")
12330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
12340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
12350 RETURN 
