0010 ! DEVLIB - Search in msglib
0035 REM "5.6 - 10/31/08 - 16.435833 - jir - SSP# 224139
0040 REM "Copyright 2008 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "DEVLIB","../DEV/DEV.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0115 CALL "ZZWMX3"
0116 SIMB$="!@#$%^&*()-+=_~`{}[]:;"+"'"+"<>?/\|-"
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _EN=HFN; OPEN (_EN)"*tfmsglib.en"; _FIL_NO=_EN
0170 _CA=HFN; OPEN (_CA)"*tfmsglib.ca"
0180 _UK=HFN; OPEN (_UK)"*tfmsglib.uk"
0185 _EXP=HFN; OPEN (_EXP)"../tf2p/USR/MSGEXP"
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1,_CUR_KEY$=""
0430 DIM _KEYS$[1:1]; _KEYS$[1]="ZIP_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0965 %NOMAD_MSGMNT$=""
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 TFMSGLIB_EN$="",ORI_EN$=""; READ RECORD (_EN,KEY=MSG_KEY$,DOM=NEW_RECORD)TFMSGLIB_EN$; ORI_EN$=TFMSGLIB_EN$; CALL "*WINGRP;ENABLE",FIELDS.GRP$; NEXT_ID=TFMSGLIB_EN.CTL; CHANGE_FLG=0; CALL "*WINGRP;ENABLE",BUTTONS.GRP$
1030 TFMSGLIB_CA$="",ORI_CA$=""; READ RECORD (_CA,KEY=MSG_KEY$,DOM=*NEXT)TFMSGLIB_CA$; ORI_CA$=TFMSGLIB_CA$
1040 TFMSGLIB_UK$="",ORI_UK$=""; READ RECORD (_UK,KEY=MSG_KEY$,DOM=*NEXT)TFMSGLIB_UK$; ORI_UK$=TFMSGLIB_UK$
1080 REFRESH_FLG=1,_KEY$=MSG_KEY$
1100 RETURN 
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; _CLR_FLG$="R"; GOSUB CLEAR_FIELDS; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=TFMSGLIB_EN.CTL
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 WRITE (_FIL_NO,KEY=_KEY$)
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY; _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY; _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF _KEY$=_CUR_KEY$ THEN _KEY$=KEN(_FIL_NO,END=END_OF_FILE) ! Get past extracted record
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 EXTRACT (_FIL_NO,KEY=_KEY$)
3060 _CUR_KEY$=_KEY$
3070 RETURN 
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3535 MSG_KEY$=_KEY$
3540 GOTO FIND_REC
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=ZIP_CODE.CTL,_FIRST_FIELD=CITY.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1,_REQ_LST$="",_REQ_CTL=0,_NF=0
12030 IF ZIP_CODE$="" THEN _REQ_LST$=_REQ_LST$+MSG("ZIP_CODE")+SEP; IF _REQ_CTL=0 THEN _REQ_CTL=ZIP_CODE.CTL
12990 IF _REQ_LST$<>"" THEN _W_FLG=0; MSGBOX _MSG_REQ_FIELDS$+SEP+_REQ_LST$,_MSG_MANDATORY$; NEXT_ID=_REQ_CTL; IF _NF>0 THEN NEXT_FOLDER=_NF,NEXT_ID$=_NI$
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN MSG_KEY$=""
13030 TFMSGLIB_EN$="",TFMSGLIB_CA$="",TFMSGLIB_UK$=""
13040 ORI_EN$="",ORI_CA$="",ORI_UK$=""
13050 COUNTY$=""
13060 ARE_CODE$=""
13070 LONG_CITY$=""
13080 ZIP_STAX_CODE$=""
13090 TF_UNUSED$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1,NEXT_ID=MSG_KEY.CTL,CHANGE_FLG=0
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 WRITE_EN:
15005 IF POS(SEP=TFMSGLIB_EN$)=LEN(TFMSGLIB_EN$) THEN TFMSGLIB_EN$=STP(TFMSGLIB_EN$,1,SEP) ! strip last sep if only one line
15010 WRITE RECORD (_EN,KEY=MSG_KEY$)TFMSGLIB_EN$
15020 MSGBOX "Write to : .EN msglib","F.Y.I","!,TIM=5"
15022 IF TFMSGLIB_CA$="" THEN OPT$="",TFMSGLIB_CA$=TFMSGLIB_EN$+" "; GOSUB CA_EXCEPTION; IF OPT$="YES" THEN GOSUB WRITE_CA; TFMSGLIB_CA.CTL'VALUE$=TFMSGLIB_CA$ ELSE TFMSGLIB_CA$=""
15025 IF TFMSGLIB_UK$="" THEN OPT$="",TFMSGLIB_UK$=TFMSGLIB_EN$+" "; GOSUB UK_EXCEPTION; IF OPT$="YES" THEN GOSUB WRITE_UK; TFMSGLIB_UK.CTL'VALUE$=TFMSGLIB_UK$ ELSE TFMSGLIB_UK$=""
15030 RETURN 
15100 WRITE_CA:
15105 IF POS(SEP=TFMSGLIB_CA$)=LEN(TFMSGLIB_CA$) THEN TFMSGLIB_CA$=STP(TFMSGLIB_CA$,1,SEP) ! strip last sep if only one line
15110 WRITE RECORD (_CA,KEY=MSG_KEY$)TFMSGLIB_CA$
15120 MSGBOX "Write to : .CA msglib","F.Y.I","!,TIM=5"
15130 RETURN 
15140 WRITE_UK:
15145 IF POS(SEP=TFMSGLIB_UK$)=LEN(TFMSGLIB_UK$) THEN TFMSGLIB_UK$=STP(TFMSGLIB_UK$,1,SEP) ! strip last sep if only one line
15150 WRITE RECORD (_UK,KEY=MSG_KEY$)TFMSGLIB_UK$
15160 MSGBOX "Write to : .UK msglib","F.Y.I","!,TIM=5"
15170 RETURN 
15200 DEL_REC:
15210 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
15215 REFRESH_FLG=1
15220 RETURN 
15300 DELETE_EN:
15310 GOSUB DEL_REC
15320 IF _X$="YES" THEN REMOVE (_EN,KEY=MSG_KEY$,DOM=*NEXT); TFMSGLIB_EN$=""
15330 RETURN 
15340 DELETE_CA:
15345 GOSUB DEL_REC
15350 IF _X$="YES" THEN REMOVE (_CA,KEY=MSG_KEY$,DOM=*NEXT); TFMSGLIB_CA$=""
15360 RETURN 
15370 DELETE_UK:
15380 GOSUB DEL_REC
15390 IF _X$="YES" THEN REMOVE (_UK,KEY=MSG_KEY$,DOM=*NEXT); TFMSGLIB_UK$=""
15395 RETURN 
15400 SAVE_ALL:
15410 IF NOT(NUL(TFMSGLIB_EN$)) THEN GOSUB WRITE_EN
15420 IF NOT(NUL(TFMSGLIB_CA$)) THEN GOSUB WRITE_CA
15430 IF NOT(NUL(TFMSGLIB_UK$)) THEN GOSUB WRITE_UK
15440 RETURN 
15500 DELETE_ALL:
15510 GOSUB DEL_REC; IF _X$="NO" THEN RETURN 
15520 GOSUB 15320; GOSUB 15350; GOSUB 15390
15530 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
15540 RETURN 
16000 WORDS:
16010 W$=TFMSGLIB_EN$+" "
16015 NXT_WORD: RES$=""
16018 FOR XX=1 TO LEN(SIMB$); W$=SUB(W$,SIMB$(XX,1)," "); NEXT XX
16020 XX=POS(" "=W$); IF XX=0 AND NUL(W$) THEN RETURN ELSE RES$=W$,W$=""; GOTO 16031
16030 RES$=STP(W$(1,XX-1)),W$=W$(XX+1)
16040 ENG$="",CA$="",UK$=""; READ (_EXP,KEY=UCS(RES$),DOM=*NEXT)ENG$,CA$,UK$
16050 RETURN 
17000 CA_EXCEPTION: EXCEPTION$=TFMSGLIB_CA$,CHG=0
17010 W$=TFMSGLIB_CA$; GOSUB NXT_WORD
17020 IF RES$="" AND W$="" THEN GOTO EXIT_CA
17030 IF CA$<>"" THEN EXCEPTION$=SUB(EXCEPTION$,RES$,CA$),CHG=1
17040 GOSUB NXT_WORD; GOTO 17020
17050 EXIT_CA:
17060 IF CHG THEN MSGBOX "        Original : "+TFMSGLIB_CA$+SEP+SEP+"Suggestions : "+EXCEPTION$+SEP+SEP+"Do you want to change? ",MSG("CONFIRMATION"),"?,YESNO",OPT$; IF OPT$="YES" THEN TFMSGLIB_CA$=EXCEPTION$; REFRESH_FLG=1
17070 RETURN 
17100 UK_EXCEPTION: EXCEPTION$=TFMSGLIB_UK$,CHG=0
17110 W$=TFMSGLIB_UK$; GOSUB NXT_WORD
17120 IF RES$="" AND W$="" THEN GOTO EXIT_UK
17130 IF UK$<>"" THEN EXCEPTION$=SUB(EXCEPTION$,RES$,UK$),CHG=1
17140 GOSUB NXT_WORD; GOTO 17120
17150 EXIT_UK:
17160 IF CHG THEN MSGBOX "        Original : "+TFMSGLIB_UK$+SEP+SEP+"Suggestions : "+EXCEPTION$+SEP+SEP+"Do you want to change? ",MSG("CONFIRMATION")+"-UK","?,YESNO",OPT$; IF OPT$="YES" THEN TFMSGLIB_UK$=EXCEPTION$; REFRESH_FLG=1
17170 RETURN 
19999 ! 
20000 REM "Export message lib to text, for easy search import etc
20005 EXPORT_EN:
20010 EXPFILE$="*tfmsglib.en"
20020 OPEN PURGE (HFN)"lib/"+EXPFILE$+".txt"; TXTCHAN=LFO
20030 CHAN=HFN; OPEN (CHAN)EXPFILE$
20040 I=0; READ (CHAN,KEY="",DOM=*NEXT)
20050 K$=KEY(CHAN,END=EXP_EN_DONE); READ RECORD (CHAN)A$
20060 PRINT (TXTCHAN)K$,"|",SUB(A$,SEP,"+SEP+"); I++
20070 GOTO 20050
20075 EXP_EN_DONE:
20080 CLOSE (CHAN),(TXTCHAN)
20085 MSGBOX "Exported "+STR(I)+" messages."
20095 RETURN 
20099 ! 
20100 REM "Load search list box
20105 SEARCH_LIST_LOAD:
20106 RESULTS$=ARG_1$
20110 I=0; LIST_BOX LOAD LB_SRCH.CTL,""
20120 IF NUL(RESULTS$) THEN GOTO 20190
20130 NEXT_POS=POS(SEP=RESULTS$); IF NEXT_POS>0 THEN NEXT_RESULT$=MID(RESULTS$,1,NEXT_POS); RESULTS$=MID(RESULTS$,NEXT_POS+1) ELSE NEXT_RESULT$=RESULTS$,RESULTS$=""
20140 LIST_BOX LOAD LB_SRCH.CTL,0,NEXT_RESULT$ ! SUB(NEXT_RESULT$,"|",SEP)
20145 I++
20150 GOTO 20120
20190 PRINT 'MESSAGE'('_BLUE'+'WHITE'+"Matches found: "+STR(I),0)
20195 RETURN 
20199 ! 
