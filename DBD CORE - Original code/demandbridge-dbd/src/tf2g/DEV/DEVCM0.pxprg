0010 ! DEVCM0 - File Comparison Program                      
0015 ! Customer Reference
0020 SETESC 9300; SETERR 8000
0030 ! ************************************************************************
0035 REM "5.6 - 11/19/07 - 16.754444 - jdf - SSP# 211776
0037 REM "211776-Final conversion of customers                               
0040 REM "Copyright 2007 DemandBridge, Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0042 ENTER SOURCE_FILE$,DEST_FILE$,OUTPUT_FILE$,CHECK_LCK$,ERR=*PROCEED; IF STP(SOURCE_FILE$)="" AND STP(DEST_FILE$)="" AND STP(OUTPUT_FILE$)="" THEN GOTO 0049
0043 IF STP(SOURCE_FILE$)<>"" AND STP(DEST_FILE$)<>"" AND STP(OUTPUT_FILE$)<>"" THEN {
0044 GOSUB INIT; GOSUB OPEN_SOURCE; GOSUB OPEN_DEST; GOSUB COMPARE_DIR; GOSUB WRAPUP
0045 GOTO 0060
0046  } ELSE GOTO 9000
0049 %SOURCE_FILE$=SOURCE_FILE$,%DEST_FILE$=DEST_FILE$,%OUTPUT_FILE$=OUTPUT_FILE$,%OUTPUT_FILE2$=OUTPUT_FILE2$
0050 %GUI=1,FLAGERR=0; PROCESS "DEVCM0","../DEV/DEV.EN"
0052 IF FLAGERR THEN GOTO 0050
0055 %GUI=0
0060 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0100 ! !100 - Initialization
0110 INIT:
0130 X0=-1,X2=-1
0140 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0150 DIM A$[255]; DIM B$[255] ! dimension array        
0190 DIM Z[NUM(X3$(60,3))]
0195 EXTENSION$=STP(DAY,3,"/")
0200 Z$="03O ZWL...  "
0210 GOSUB OPEN_FILE
0400 ! 
0490 RETURN 
0500 ! !500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0880 RETURN 
0890 ! 900 - Wrapup
0900 WRAPUP:
0902 IF %_FILE_NO_3<>0 THEN CLOSE (%_FILE_NO_3)
0903 IF %_FILE_NO_4<>0 THEN CLOSE (%_FILE_NO_4)
0905 %_FILE_NO_3=0,%SOURCE_FILE$="",%DEST_FILE$="",%OUTPUT_FILE$="",%_FILE_NO_4=0,%OUTPUT_FILE2$=""
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0920 SET_PARAM 'KR'=_SV_KR
0930 RETURN 
1000 ! Load the default range
1010 LOAD_RANGE:
1020 IF NUL(RNG$(1,10)) THEN CUST_START$="" ELSE CUST_START$=RNG$(1,10)
1030 IF RNG$(11,3)="~~~" THEN CUST_END$="" ELSE CUST_END$=RNG$(11,10)
1500 RETURN 
3790 ! 
3800 CLEAR_FIELDS:
3810 SOURCE_FILE$=""
3812 IF %_FILE_NO_3<>0 THEN CLOSE (%_FILE_NO_3)
3814 IF %_FILE_NO_4<>0 THEN CLOSE (%_FILE_NO_4)
3816 %_FILE_NO_3=0,%SOURCE_FILE$="",%DEST_FILE$="",%OUTPUT_FILE$="",%_FILE_NO_4=0,%OUTPUT_FILE2$=""
3820 DEST_FILE$="",DEST_DIR$="",EXTENSION$="",FILE_SEA$="",_FILE_NAME$=""
3825 OUTPUT_FILE$="",OUTPUT_FILE2$="",CHECK_LCK$=""
3826 CMD_STR$="END"; CALL "DEVCM0","","",""
3828 NEXT_ID=SOURCE_FILE.CTL
3830 REFRESH_FLG=1
3840 GOTO *RETURN
3880 RETURN 
3890 ! 
5000 ! 5000 - open source file
5010 OPEN_SOURCE:
5015 GOSUB CREATE_FILE_LIST
5016 IF FLAGERR THEN GOTO 8030
5022 Z$="01O "+_FILE_NAME$
5024 GOSUB OPEN_FILE
5030 REM IF Z0>0 THEN NEXT_ID=SOURCE_FILE.CTL; GOTO *RETURN
5034 RETURN 
5100 ! 5100 - open destination file
5110 OPEN_DEST:
5112 IF STP(SOURCE_FILE$,3)="" THEN NEXT_ID=SOURCE_FILE.CTL; GOTO *RETURN
5113 DEST_FILE$=STP(DEST_FILE$,1,"/")
5114 _DEST_DIR$=DEST_FILE$
5116 IF DEST_FILE$="" THEN NEXT_ID=DEST_FILE.CTL; GOTO *RETURN
5117 RETURN 
5118 COMPARE_DIR: REFRESH_FLG=1
5119 REM IF STP(OUTPUT_FILE$)="" THEN PRINT 'DIALOGUE'(10,10,30,5,"Output Directory"); INPUT %OUTPUT_FILE$; PRINT 'POP'
5120 IF STP(OUTPUT_FILE$)="" THEN OUTPUT_FILE$=%OUTPUT_FILE$; END_IF ; OUTPUT_FILE$=STP(OUTPUT_FILE$,1,"/"); _FILE_NO_3=HFN; OPEN LOCK (_FILE_NO_3,ERR=5122)OUTPUT_FILE$
5122 SERIAL OUTPUT_FILE$,ERR=*PROCEED; OPEN LOCK (_FILE_NO_3,ERR=*NEXT)OUTPUT_FILE$; IF CHECK_LCK$="1" THEN OUTPUT_FILE2$=OUTPUT_FILE$+".LCK"; _FILE_NO_4=HFN; SERIAL OUTPUT_FILE2$,ERR=*PROCEED; OPEN LOCK (_FILE_NO_4,ERR=*NEXT)OUTPUT_FILE2$
5123 IF %PAN_ON THEN MSGBOX QUO+SOURCE_FILE$+QUO+SEP+"will be compared with "+QUO+_DEST_DIR$+QUO,MSG("CONFIRM"),"YESNO,1,!",ANS$
5124 IF %PAN_ON THEN IF ANS$="NO" THEN DISABLE CONTROL BUTTON_2.CTL; NEXT_ID=SOURCE_FILE.CTL; GOTO 3800
5125 READ_END=0
5126 GOSUB READ_LIST
5127 IF READ_END THEN GOTO *RETURN
5128 DEST_DIR$=SUB(A$,SOURCE_FILE$,DEST_FILE$)
5129 _FIL_NO=HFN; OPEN (_FIL_NO,ERR=5126)DEST_DIR$
5130 %FILE_SEA$=FILE_SEA$,%_FILE_NO_3=_FILE_NO_3,%_FILE_NO_4=_FILE_NO_4; CLOSE (_FIL_NO)
5131 IF POS(".en"=%FILE_SEA$)>0 THEN GOTO 5140
5132 IF POS(".EN"=%FILE_SEA$)=0 AND FILE_INFO$(19,1)="K" THEN GOTO 5140
5133 IF POS(".EN"=%FILE_SEA$)>0 THEN GOSUB COMPARE_LIB; GOTO 5140
5134 IF POS(".pvc"=%FILE_SEA$)>0 THEN GOTO 5140
5135 CALL "DEVCM1",A$,DEST_DIR$,_FILE_NO_3
5136 IF CHECK_LCK$="1" THEN {
5137 %FILE_SEA$=PAD(%FILE_SEA$,8," "); READ (Z[3],KEY=%FILE_SEA$,DOM=*NEXT); GOTO 5140
5139 CALL "DEVCM1",A$,DEST_DIR$,_FILE_NO_4 }
5140 GOTO 5126
5180 IF %PAN_ON THEN MSGBOX "Process complete",MSG("CONFIRMING"),"!,TIM=5"
5181 READ_END=1
5182 IF %_FILE_NO_3<>0 THEN CLOSE (%_FILE_NO_3)
5183 IF %_FILE_NO_4<>0 THEN CLOSE (%_FILE_NO_4)
5185 RETURN ! CMD_STR$="END"
5190 REM EXIT 
6000 CREATE_FILE_LIST:
6001 _FILE_NO_2=HFN; OPEN (_FILE_NO_2,ERR=6003)"/tmp/DEVCM0."+EXTENSION$
6003 SOURCE_FILE$=STP(SOURCE_FILE$,1,"/")
6005 INVOKE "find "+SOURCE_FILE$+" -name '*' -type f > /tmp/DEVCM0."+EXTENSION$+" 2> /dev/null",ERR=6020
6007 _FILE_NAME$="/tmp/DEVCM0."+EXTENSION$
6010 RETURN 
6020 FLAGERR=1; RETURN 
6050 READ_LIST:
6053 IF FILE_NO<>0 THEN CLOSE (FILE_NO)
6054 READ RECORD (Z[1],END=5180)A$
6055 FILE_NO=HFN; OPEN (FILE_NO,ERR=6053)A$; FILE_INFO$=FIB(FILE_NO); IF POS(FILE_INFO$(19,1)="KP")=0 THEN GOTO 6053
6056 LAST_O=POS("/"=A$,-1),LENGTH=LEN(A$)
6058 FILE_SEA$=A$(LAST_O+1,LENGTH-LAST_O)
6059 IF FILE_NO<>0 THEN CLOSE (FILE_NO); FILE_NO=0
6060 RETURN 
7000 COMPARE_LIB:
7010 IOLIST OBJ_NME$,OBJ_C,OBJ_L,OBJ_W,OBJ_H,OBJ_TYPE$,OBJ_TXT$,OBJ_VAL$,OBJ_TAB,OBJ_DEF$,OBJ_DSP$,OBJ_FCS$,OBJ_SEL$,OBJ_MSG$,OBJ_HLP$,OBJ_ATTR$,OBJ_IDX$,OBJ_HOTKEY$,OBJ_QRY$,OBJ_SEC$,OBJ_STS$,OBJ_GRP$,OBJ_NULL$,OBJ_TAG$,OBJ_TBL$,OBJ_INP$,OBJ_OUT$,OBJ_VALID$,OBJ_CLASS$,OBJ_TIP$,OBJ_ORIG$,OBJ_FONT$,OBJ_COLOR$,OBJ_LISTBOX_TYPE$,OBJ_SEP$,OBJ_SCRATCH$,OBJ_POPUP$,OBJ_SIZING$,OBJ_LOGIC1$,OBJ_LOGIC2$,OBJ_POPUP_LOGIC$
7020 OLD_LIB$=A$,NEW_LIB$=DEST_DIR$,SHOW_CHKBX$="0",COMP_FLG$="C1",LIB_DEF$=""
7030 XXX=HFN; OPEN (XXX,ERR=READ_LIST)OLD_LIB$; OLD_FN$=STR(XXX)
7040 XX=HFN; OPEN (XX,ERR=READ_LIST)NEW_LIB$; NEW_FN$=STR(XX)
7050 LIB_FN=XXX
7060 READ (LIB_FN,KEY=DIM(12)+$FF$,DOM=NEXT_LOAD)
7070 NEXT_LOAD:
7080 K$=KEY(LIB_FN,END=7170)
7090 IF K$>$80$ THEN GOTO 7170
7100 IF K$(13,4)<>"0000" THEN READ (LIB_FN,KEY=K$(1,12)+$FF$,DOM=NEXT_LOAD); GOTO NEXT_LOAD
7110 READ (LIB_FN)IOL=7010
7120 P_DATE$=" ",P_TIME$=" ",P_ID$=" "
7130 X$=K$(1,1)+STP(LCS(K$(2,11)),1),P_TYPE$="("+OBJ_TYPE$+")"
7140 P_NAME$=X$,P_TITLE$=OBJ_TXT$,_SV_TITLE$=P_TITLE$; IF POS("="=P_TITLE$)=1 THEN P_TITLE$=EVS(P_TITLE$(2),ERR=*NEXT); IF P_TITLE$="" THEN P_TITLE$=_SV_TITLE$ ! P_ID$=OBJ_VALID$
7150 OLD_LIST$=OLD_LIST$+UCS(PAD(X$,12," "))+SEP
7160 GOTO 7080
7170 NEW_LIST$=OLD_LIST$
7180 CALL "DEVCM2",OLD_LIB$,OLD_FN$,OLD_LIST$,NEW_LIB$,NEW_FN$,NEW_LIST$,SHOW_CHKBX$,COMP_FLG$,LIB_DEF$
7185 CLOSE (XXX); CLOSE (XX); XXX=0; XX=0
7190 RETURN 
8000 OPEN_FILE:
8010 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 8011,9900
8020 RETURN 
8030 OPEN_FILE_ERROR:
8040 IF %PAN_ON THEN MSGBOX QUO+SOURCE_FILE$+QUO+" is not available.",MSG("RE-ENTER File Name"),"!" ELSE _FILE_NO_5=HFN; OUTPUT_FILE3$=OUTPUT_FILE$+".ERR"; _FILE_NO_5=HFN; SERIAL OUTPUT_FILE3$,ERR=*PROCEED; OPEN LOCK (_FILE_NO_5,ERR=*NEXT)OUTPUT_FILE3$; PRINT (_FILE_NO_5)QUO+SOURCE_FILE$+QUO+" is not available."; CLOSE (_FILE_NO_5)
8050 SOURCE_FILE$=""
8060 IF %_FILE_NO_3<>0 THEN CLOSE (%_FILE_NO_3)
8070 IF %_FILE_NO_4<>0 THEN CLOSE (%_FILE_NO_4)
8080 %_FILE_NO_3=0,%SOURCE_FILE$="",%DEST_FILE$="",%OUTPUT_FILE$="",%_FILE_NO_4=0,%OUTPUT_FILE2$=""
8090 DEST_FILE$="",DEST_DIR$="",EXTENSION$="",FILE_SEA$="",_FILE_NAME$=""
8100 OUTPUT_FILE$="",OUTPUT_FILE2$="",CHECK_LCK$=""
8110 FLAGERR=1; REFRESH_FLG=1; EXIT 
8120 IF ID=SOURCE_FILE.CTL THEN NEXT_ID=SOURCE_FILE.CTL; GOTO 5000
8130 IF ID=DEST_FILE.CTL THEN NEXT_ID=DEST_FILE.CTL; GOTO 5110
8140 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 REM CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9042 IF %PAN_ON THEN MSGBOX QUO+STR(ERR)+QUO+" is the error number.",MSG("RE-ENTER File Name"),"!" ELSE _FILE_NO_5=HFN; OUTPUT_FILE3$="[WDX]c:\temp\DEVCM0.ERR."+STP(DAY,3,"/")+".txt"; _FILE_NO_5=HFN; SERIAL OUTPUT_FILE3$,ERR=*PROCEED; OPEN LOCK (_FILE_NO_5,ERR=*NEXT)OUTPUT_FILE3$; PRINT (_FILE_NO_5)QUO+STR(ERR)+QUO+" is the error number."; CLOSE (_FILE_NO_5)
9045 REM 
9050 GOTO 9800; REM ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 IF %GUI THEN EXIT ELSE RUN "ZMENU"
9999 END 
