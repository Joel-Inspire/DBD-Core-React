0010 REM "Gather Open Support Issues<DBG000>
0020 SETESC 9300; SETERR 9000
0035 REM "5.5 - 06/14/06 - 9.719722 - kmc - SSP# 196716
0037 REM "196716-Dashboards
0040 REM "Copyright 2006 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,CTL_LIST,GADGET_NUMBER,OPTIONS{ALL},RETURN$
0100 SETERR 9000
0110 X0$="DBG000",X1$="Gather Open Support Issues"
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "IOLISTS
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O ZW2...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0599 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0600 ! Initialize anything needed
0605 GADGET_FLAG$="%GADGET_"+%CURR_GADGET.DB_GADGET_INDEX$ ! will be 0 if first time through
0699 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1000 REM "BEGIN MAIN PROCESS
1005 IF VIN(GADGET_FLAG$)=0 THEN {! First time through
1025 GOSUB GET_INFO ! Initial load
1090 VIA GADGET_FLAG$=1
1095  }
1100 ! normal processing
1110 GOSUB GET_INFO
1995 GOTO 9900
2000 GET_INFO:! Records for today
2005 IF %SSP_OPEN THEN CLOSE (%SSP_OPEN) END_IF ; %SSP_OPEN=HFN; OPEN (%SSP_OPEN)"*memory*"
2006 SET_PARAM 'XI'
2010 READ (Z[1],KNO=4,KEY="",DOM=*NEXT)
2020 READ_NEXT_ZW2: K$=KEY(Z[1],KNO=4,END=READING_DONE)
2025 IF POS(K$(1,1)="CFLZYGUI") THEN READ (Z[1],KNO=4,KEY=K$(1,1)+$FE$,DOM=*PROCEED); GOTO READ_NEXT_ZW2 ELSE READ (Z[1],KNO=4,KEY=K$)ZW2$
2030 IF ZW2$(191,3)="WZE" OR POS(ZW2$(173,2)="INIDWODVEH",2)<>0 THEN GOTO READ_NEXT_ZW2
2035 WRITE (%SSP_OPEN,KEY=ZW2$(1,6))ZW2$
2075 GOTO READ_NEXT_ZW2
2080 READING_DONE:
2085 SET_PARAM -'XI'
2095 RETURN 
2099 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
5200 SHOW_MESSAGE:
5220 PRINT 'FILL'(1,15),'PEN'(1,2,8),'RECTANGLE'(2,2,500,70),
5245 MESSAGE.CTL=20000+GADGET_NUMBER
5250 MULTI_LINE MESSAGE.CTL,@(.5,.5,30,1),OPT="BLL",FNT="Arial,-16,B"; MESSAGE.CTL'TEXTCOLOR$="BLACK",MESSAGE.CTL'VALUE$=" Getting Open Issues:"
5295 RETURN 
5299 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
5300 DROP_MESSAGE:
5320 PRINT 'FILL'(1,0),'PEN'(1,2,0),'RECTANGLE'(2,2,500,70)
5350 MULTI_LINE REMOVE MESSAGE.CTL
5395 RETURN 
5399 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8800 DEF FN_ADD_CTL(LOCAL ACTION$, LOCAL OPTIONS$)
8801 ! Add next control to CTL_LIST, if CTL_LIST blank then start at 5000
8810 LK$="5000"; LK$=KEL(CTL_LIST,ERR=*NEXT)
8815 NEW_CTL=NUM(LK$)+1
8820 WRITE (CTL_LIST,KEY=STR(NEW_CTL))ACTION$,OPTIONS$
8840 RETURN NEW_CTL
8845 END DEF
8849 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8900 DEF FN_COLUMN(LOCAL COLUMN)
8905 ! Correct column including UP_LEFT_COL
8910 IF UP_LEFT_COL+COLUMN<1 THEN RETURN UP_LEFT_COL+COLUMN ELSE RETURN UP_LEFT_COL+COLUMN-1
8915 END DEF
8916 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
8950 DEF FN_ROW(LOCAL ROW)
8955 ! Correct Row including UP_LEFT_ROW
8960 IF UP_LEFT_ROW+ROW<1 THEN RETURN UP_LEFT_ROW+ROW ELSE RETURN UP_LEFT_ROW+ROW-1
8965 END DEF
8966 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 3050,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
14000 CENTER_WDW:
14005 GOSUB GET_XYINFO
14010 UP_LEFT_X=INT((_XMAX/_XCHAR-WDW_WIDE)/2)
14015 UP_LEFT_Y=INT((_YMAX/_YCHAR-WDW_HIGH)/2)
14020 RETURN 
14049 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
14050 GET_XYINFO:
14055 IF _XCHAR<>0 THEN RETURN 
14060 _X$=MSE
14065 _XCHAR=DEC($00$+_X$(10,1))
14070 _YCHAR=DEC($00$+_X$(11,1))
14075 _XMAX=DEC(_X$(27,2))
14080 _YMAX=DEC(_X$(29,2))
14085 _WIN_VER=TCB(25)
14090 RETURN 
14099 ! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
14100 SETUP_PREVIEW_WINDOW:
14101 ENTER WIN_HANDLE,RETURN_CODE
14105 GOSUB GET_XYINFO
14110 IF NOT(WIN_HANDLE) THEN {
14115 PWID=65,PHTH=35; IF WHO="crg" THEN PWID=120,PHTH=80
14120 PRINT 'DIALOGUE'((INT(_XMAX/_XCHAR)-PWID),1,PWID,PHTH,99,"Preview",'B?',OPT="&*-m"),'CS'
14130 CALL "[WDX]*OCX;URL_IN_IE",-1,-1,PWID-1,PHTH-1,"IL_LOGO",WIN_HANDLE,RET_CODE
14140  }
14150 EXIT 
14160 ! 
14200 DROP_PREVIEW_WINDOW:
14205 ENTER WIN_HANDLE
14210 SETERR 14220; PRINT 'DROP'(99)
14220 IF WIN_HANDLE THEN CALL "[WDX]*OCX;CLOSE_OCX_OBJECT",WIN_HANDLE; WIN_HANDLE=0
14295 EXIT 
14299 ! 
15000 SHOW_NOTES_PREVIEW:
15001 ENTER A$,WIN_HANDLE,RETURN_CODE
15002 IF SSN<"07" THEN MSGBOX "This feature requires Providex version 7.1 or above"; GOTO 15089
15005 IF NOT(WIN_HANDLE) THEN CALL PGN+";SETUP_PREVIEW_WINDOW",WIN_HANDLE,RETURN_CODE
15006 A$=STP(MNEMONIC A$,ERR=*PROCEED); A$=PAD(A$,6)
15010 IF NOT(NUL(%WDX$)) THEN %USE_NOTEPAD=1; CALL "[WDX]*Windx.utl;Get_Val","ENV("+QUO+"TEMP"+QUO+")",%ENV_TEMP$; CALL "[WDX]*Windx.utl;Get_Val","ENV("+QUO+"COMSPEC"+QUO+")",%ENV_COMSPEC$ ELSE %USE_NOTEPAD=0
15030 IF NOT(%USE_NOTEPAD) THEN {
15040 MSGBOX "You must be using WindX to use this program/feature"
15045 RETURN 
15050  } ELSE {
15055 IF NUL(%X3$) THEN CALL "ZZWMX3"
15060 CALL "ZW2ZZY",%X3$,%X4$,A$(1,6),"R","ZWT"
15065 PRINT 'SHOW'(1)
15066 PRINT (0,ERR=*NEXT)'CAPTION'("Preview : SSP "+A$),
15070 CALL "[wdx]*OCX;URL_IN_IE",ERR=*NEXT,0,0,0,0,"file://"+SUB(%ENV_TEMP$+"\ssp"+A$(1,6)+".txt",%WDX$,""),WIN_HANDLE,RETURN_CODE
15080  }
15090 EXIT 
