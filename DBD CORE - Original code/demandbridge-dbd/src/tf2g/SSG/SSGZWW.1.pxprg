0010 ! SSGZWW.1 - View Checklist Entries
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Jul. 21, 2004 16:58
0030 ! ************************************************************************
0035 REM "5.7 - 09/22/09 - 2.126666 - crg - SSP# 211234
0037 REM "211234-Designate labels for up to 3 versions of Image Type
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0060 SETERR 0065; ENTER CLIENT_CODE$
0065 ARG_1$=CLIENT_CODE$
0070 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "SSGZWW.V","../SSG/SS.EN",ARG_1$
0074 SETERR 0080
0075 EXIT 
0080 RUN "ZMENU"
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0154 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; DIM Z[NUM(X3$(60,3))]
0155 Z$="01O ZWW  02O SSA... 13O ZZPARM "
0156 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+"ZZPARM"+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 IF RESULT<>0 THEN CLOSE (RESULT)
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0962 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
19000 LOAD_GRID:! Load the DIR_GRID
19500 FIND (Z[2],KEY=ARG_1$,DOM=*NEXT)SSA$
20010 GRID CLEAR DIR_GRID.CTL,0,0,ERR=*NEXT
20011 GRID LOCK DIR_GRID.CTL,0,0,ERR=*NEXT
20013 DIR_GRID.CTL'COLUMN=-1,DIR_GRID.CTL'COLUMNWIDTH=.1,DIR_GRID.CTL'ROW=-1,DIR_GRID.CTL'COLUMN=0,DIR_GRID.CTL'FONT$="MS Sans Serif,-9,B"
20020 READ (Z[1],KEY="",DOM=*NEXT)
20025 NEXT_ZWW:
20030 ZWWKEY$=KEY(Z[1],END=LOAD_GRID_DONE)
20035 READ (Z[1],KEY=ZWWKEY$)ZWW$
20036 ZWW_STATUS$="Current"
20040 IF (NUL(MID(ZWW$,24,6)) OR (NOT(NUL(MID(ZWW$,24,6))) AND %X3$(21,6)>=MID(ZWW$,24,6))) AND (NUL(MID(ZWW$,30,6)) OR (NOT(NUL(MID(ZWW$,30,6))) AND %X3$(21,6)<=MID(ZWW$,24,6))) THEN GOTO *NEXT ELSE ZWW_STATUS$="Expired" ! If a start and end date applies is this ZWW falling between the required start and end date?
20042 IF (NUL(MID(ZWW$,36,10)) OR (NOT(NUL(MID(ZWW$,36,10))) AND ARG_1$=MID(ZWW$,36,10))) THEN GOTO *NEXT ELSE GOTO NEXT_ZWW ! If there is a company specific entry then does it apply to the current company?
20044 IF (NUL(MID(ZWW$,7,8)) OR (NOT(NUL(MID(ZWW$,7,8))) AND POS(MID(ZWW$,7,8)=MID(SSA$,185,352))>0)) THEN GOTO *NEXT ELSE GOTO NEXT_ZWW ! If this is a module specific entry then does it apply to this company?
20046 IF NOT(NUL(MID(ZWW$,24,6))) AND MID(SSA$,551,6)>MID(ZWW$,24,6) THEN ZWW_STATUS$="Expired" ! If this company's last release date is past the start date on this entry then it no longer applies, flag it
20052 GRID LOAD DIR_GRID.CTL,1,++GRID_ROW,ZWW_STATUS$+SEP+ZWW$(1,6)+SEP+ZWW$(46,6)+SEP+ZWW$(7,8)+SEP+ZWW$(57,300)+ESC,ERR=*NEXT
20053 DIR_GRID.CTL'ROW=GRID_ROW,DIR_GRID.CTL'COLUMN=1,DIR_GRID.CTL'ROWHEIGHT=4.0,DIR_GRID.CTL'FONT$="MS Sans Serif,-9,B",DIR_GRID.CTL'ALIGN$="C"
20060 GOTO NEXT_ZWW
20065 LOAD_GRID_DONE:
20078 DIR_GRID.CTL'CURRENTCOLUMN=1
20080 MAX_GRID_ROW=GRID_ROW
20095 RETURN 
56000 REM + Modification History
