0010 REM "TKGLMS - Time Entries By SSP Issue
0035 REM "5.7 - 05/30/12 - 12.398055 - crg - SSP# 255434
0037 REM "255434-Support Dashboard; Questions about Open Platinum Issues     
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! 
0070 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "TKGLMS","../TKG/TK.EN"
0080 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0099 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 X0=-1
0130 SAVE_PERCENT_GUI=%GUI; %GUI=1
0160 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2; IF X1>0 THEN CMD_STR$="END"; EXIT 
0190 DIM Z[NUM(X3$(60,3))]
0200 ! Files
0210 Z$="01O TK2  02O SS1  03O ZW2  04O TK3  05O TK4  06O TK1  13O ZZPARM  "
0220 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
0300 ! IOList Section
0310 IOL_TK2:IOLIST TK2$,TK2[0],TK2[1]
0320 IOL_SS1:IOLIST SS1$
0330 IOL_ZW2:IOLIST ZW2$
0400 ! 
0410 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
0420 CTAB$=DIM(2)
0450 GOSUB CHECK_SUPER
0490 RETURN 
0499 ! 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 GOSUB CLEAR_REC
0530 IF NOT(NUL(ARG_1$)) THEN REF_NUM$=ARG_1$; GOTO FIND_REC
0570 RETURN 
0899 ! 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0930 %GUI=SAVE_PERCENT_GUI
0970 RETURN 
0999 ! 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1001 FIND_REC:
1005 IF NUL(REF_NUM$) THEN GOTO CLEAR_REC
1010 REF_NUM=NUM(REF_NUM$,ERR=*NEXT); REF_NUM$=STR(REF_NUM:DIM(6,"0"))
1015 REF_NUM$=PAD(REF_NUM$,6)
1050 FIND (Z[3],KEY=PAD(REF_NUM$,6),DOM=NO_SUCH_ZW2,BSY=BUSY_ZW2)IOL=IOL_ZW2
1060 FIND (Z[2],KEY=MID(ZW2$,240,10),DOM=NO_SUCH_SS1)IOL=IOL_SS1
1080 GOSUB LOAD_GRID
1090 CLIENT_CODE$=MID(SS1$,1,10),CLIENT_NAME$=MID(SS1$,11,35)
1100 CHANGE_FLG=0,BT_DELETE.CTL'ENABLED=1
1110 EXIT 
1120 ! 
1210 NO_SUCH_SS1: MSGBOX "Client Code not found: "+CLIENT_CODE$+SEP+SEP+MSG("REC_NOTFND"),_FYI$,"!"; GOTO CLEAR_REC ! EXIT 
1220 NO_SUCH_ZW2: MSGBOX "Reference Number not found: "+REF_NUM$+SEP+SEP+MSG("REC_NOTFND"),_FYI$,"!"; GOTO CLEAR_REC ! EXIT 
1230 BUSY_ZW2: MSGBOX "Reference Number is locked: "+REF_NUM$+SEP+SEP+MSG("REC_BUS")+":"+FN%TCB87$(""),_FYI$,"!"; GOTO CLEAR_REC ! EXIT 
1300 ! Delete selected entries
1304 DELETE_REC:
1308 MSGBOX MSG("TKGLMS_03"),MSG("CONFIRM"),"YESNO,2",ANS$
1312 IF ANS$<>"YES" THEN GOTO END_DELETE_ENTRIES
1316 FOR I=1 TO TK_CNT
1320 TKGRID.CTL'ROW=I
1324 READ DATA FROM TKGRID.CTL'ROWDATA$ TO IOL=TKGRID.CTL'LOADIOLIST$
1328 IF CDELETE$="1" THEN {
1330 MSGBOX "Deleting entry "+STR(I)+", key="+CKEY$
1332 ORTK2$=CKEY$
1336 ORTK3$=ORTK2$(14,6)+ORTK2$(5,6)+ORTK2$(1,4)+ORTK2$(11,3)+ORTK2$(20,10)+ORTK2$(30,2)
1340 ORTK4$=ORTK2$(20,10)+ORTK2$(5,6)+ORTK2$(14,6)+ORTK2$(1,4)+ORTK2$(11,3)+ORTK2$(30,2)
1344 REMOVE (Z[1],KEY=ORTK2$)
1348 REMOVE (Z[4],KEY=ORTK3$)
1352 REMOVE (Z[5],KEY=ORTK4$)
1356  }
1360 NEXT I
1380 END_DELETE_ENTRIES:
1385 GOSUB FIND_REC
1395 RETURN 
1399 ! 
1400 WRITE_REC:
1405 IF NOT(TK_CNT) THEN RETURN 
1410 FOR AA=1 TO TK_CNT
1420 IF NOT(ROWCHANGED[AA]) THEN GOTO *CONTINUE
1430 TKGRID.CTL'ROW=AA; READ DATA FROM TKGRID.CTL'ROWDATA$ TO IOL=TKGRID.CTL'LOADIOLIST$
1435 ORTK2$=CKEY$
1436 ORTK3$=ORTK2$(14,6)+ORTK2$(5,6)+ORTK2$(1,4)+ORTK2$(11,3)+ORTK2$(20,10)+ORTK2$(30,2)
1437 ORTK4$=ORTK2$(20,10)+ORTK2$(5,6)+ORTK2$(14,6)+ORTK2$(1,4)+ORTK2$(11,3)+ORTK2$(30,2)
1439 ! Get updated data
1440 DIM TK2$(72),TK2[1]; ERR_MSG$=""; READ (Z[1],KEY=ORTK2$)IOL=IOL_TK2
1441 TK2$(1,4)=PAD(UCS(STP(CEMP$,2)),4)
1442 CALL "ZZWDTE",CDATE$,ERR_MSG$; IF NOT(NUL(ERR_MSG$)) THEN GOTO ERR_WRITE ELSE TK2$(5,6)=CDATE$
1443 TK2$(11,3)=PAD(UCS(STP(CCODE$,2)),3); FIND (Z[6],KEY=TK2$(11,3),DOM=*NEXT); GOTO 1445
1444 ERR_MSG$="Code "+TK2$(11,3)+" is not valid."; GOTO ERR_WRITE
1445 TK2$(14,6)=ORTK2$(14,6),TK2$(20,10)=ORTK2$(20,10),TK2$(30,2)="00"
1446 TK2$(32,35)=STP(CDESC$,2)
1447 TK2[0]=FNH(NUM(CHOURS$,ERR=*NEXT)+NUM(CMIN$,ERR=*NEXT)/100); GOTO 1449
1448 ERR_MSG$="Time entered is invalid (HH:MM) : ["+CHOURS$+":"+CMIN$+"]"; GOTO ERR_WRITE
1449 ! 
1451 ! Remove old records
1452 REMOVE (Z[1],ERR=ERR_WRITE,KEY=ORTK2$)
1453 REMOVE (Z[4],KEY=ORTK3$)
1454 REMOVE (Z[5],KEY=ORTK4$)
1460 ! Write new record
1461 NTK2$=TK2$(1,31)
1462 NTK3$=NTK2$(14,6)+NTK2$(5,6)+NTK2$(1,4)+NTK2$(11,3)+NTK2$(20,10)+NTK2$(30,2)
1463 NTK4$=NTK2$(20,10)+NTK2$(5,6)+NTK2$(14,6)+NTK2$(1,4)+NTK2$(11,3)+NTK2$(30,2)
1464 WRITE (Z[1],KEY=NTK2$,DOM=*NEXT)IOL=IOL_TK2; GOTO 1467 ! Write new record
1465 TK2$(30,2)=STR(NUM(TK2$(30,2))+1:"00"); GOTO 1460 ! If here, then seq already exists, increment by 1 and retry 
1467 WRITE (Z[4],KEY=NTK3$)
1468 WRITE (Z[5],KEY=NTK4$)
1469 ! 
1474 ! MSGBOX "Record saved for row "+STR(AA)+", key : "+ORTK2$
1475 ROWCHANGED[AA]=0; GOTO *CONTINUE
1476 ERR_WRITE:
1477 MSGBOX "Cannot save row "+STR(AA)+":"+ERR_MSG$,"Error","!"
1480 NEXT 
1485 CHANGE_FLG=0
1495 RETURN 
1499 ! 
1799 ! 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1815 GOSUB CHECK_CHANGES
1820 REF_NUM$="",CLIENT_CODE$="",CLIENT_NAME$="",MESSAGE$=""
1830 GRID LOAD TKGRID.CTL,0,0,""; TK_CNT=0,TK_TIME=0
1840 BT_SAVE.CTL'ENABLED=0,BT_DELETE.CTL'ENABLED=0
1850 NEXT_ID=REF_NUM.CTL,REFRESH_FLG=1,CHANGE_FLG=0
1860 RETURN 
1899 ! 
1900 CHECK_CHANGES:
1910 IF NOT(CHANGE_FLG) OR NOT(TK_CNT) THEN RETURN 
1920 MSGBOX MSG("REC_ALTERD"),MSG("UPDATE"),"?,YesNo",ANS$
1930 IF ANS$="YES" THEN GOSUB WRITE_REC
1945 RETURN 
1949 ! 
2000 LOAD_GRID:
2004 TKGRID.CTL'VISIBLE=0
2005 GRID LOAD TKGRID.CTL,0,0,""; TK_CNT=0,TK_TIME=0
2010 READ (Z[4],KEY=REF_NUM$,DOM=*NEXT)
2020 TK3$=KEY(Z[4],END=END_LOAD_CONTACTS); READ (Z[4],KEY=TK3$)
2025 IF MID(TK3$,1,6)<>REF_NUM$ THEN GOTO END_LOAD_CONTACTS
2030 KTK2$=TK3$(13,4)+TK3$(7,6)+TK3$(17,3)+TK3$(1,6)+TK3$(20,12); READ (Z[1],KEY=KTK2$,REC=TK2$,ERR=2020)
2035 TK_TIME+=TK2.HOURS; TK2.HOURS=FNM(TK2.HOURS)
2036 IF TK_CNT>=5000 THEN GRID LOAD TKGRID.CTL,0,0,""; TK_CNT=0
2040 GRID LOAD TKGRID.CTL,1,0,KTK2$+SEP+SEP+STR(++TK_CNT)+SEP+FN%FMT_TFDATE$(TK2.LOG_DATE$,"")+SEP+TK2.EMPLOYEE_CODE$+SEP+TK2.SERVICE_CODE$+SEP+TK2.DESCRIPTION$+SEP+STR(INT(TK2.HOURS))+SEP+STR(FPT(TK2.HOURS)*100)+SEP,ERR=*NEXT
2050 IF TK2.CLIENT_CODE$<>MID(ZW2$,240,10) THEN TKGRID.CTL'ROW=TK_CNT; TKGRID.CTL'COLUMN=0; TKGRID.CTL'BACKCOLOUR$="Light Red"
2100 GOTO 2020
2120 END_LOAD_CONTACTS:
2125 DIM ROWCHANGED[TK_CNT]
2130 TK_TIME=FNM(TK_TIME); MESSAGE$="Total: "+STR(TK_CNT)+" Entries; Time: "+STR(INT(TK_TIME))+" hours "+STR(FPT(TK_TIME)*100)+" mins"
2133 IF TK_CNT THEN GRID LOAD TKGRID.CTL,1,0,SEP; TKGRID.CTL'ROW=TK_CNT+1; TKGRID.CTL'COLUMN=0; TKGRID.CTL'BACKCOLOUR$="Light Yellow"; TKGRID.CTL'COLUMN=2; TKGRID.CTL'CELLTYPE$="MULTI_LINE"; TKGRID.CTL'COLUMN=7; TKGRID.CTL'VALUE$="Total Entries :"+STR(TK_CNT); TKGRID.CTL'ALIGN$="R"; TKGRID.CTL'COLUMN=8; TKGRID.CTL'VALUE$=STR(INT(TK_TIME)); TKGRID.CTL'COLUMN=9; TKGRID.CTL'VALUE$=STR(FPT(TK_TIME)*100); GRID LOCK TKGRID.CTL,0,(TK_CNT+1)
2135 TKGRID.CTL'VISIBLE=1
2140 NEXT_ID=TKGRID.CTL; REFRESH_FLG=1
2150 RETURN 
2199 ! 
8000 CHECK_SUPER:
8010 SUPER$="NO "
8020 CALL "ZSTRTU",X3$,EMPLOYEE$,"",""
8030 EMPLOYEE$=CVS(EMPLOYEE$,4)+"   "
8040 IF EMPLOYEE$="ROOT" THEN EMPLOYEE$="UNK",SUPER$="YES"
8050 EMPLOYEE$=EMPLOYEE$(1,3)
8051 IF EMPLOYEE$="CFS" THEN EMPLOYEE$="CLS"
8055 IF EMPLOYEE$="THE" THEN EMPLOYEE$="TMA"
8060 IF POS(EMPLOYEE$="CLSCRGTMAJVVJOADMMJAD",3)>0 THEN SUPER$="YES"
8070 IF SUPER$<>"YES" THEN CALL "ZZPROM","4",X3$,S3,"User "+EMPLOYEE$+": You may not access this program since you are not on the superuser list.","","",0; CMD_STR$="END"; EXITTO WRAPUP
8095 RETURN 
8099 ! 
8100 ROW_CHANGED:
8110 CURROW=TKGRID.CTL'ROW
8120 IF CURROW>0 AND CURROW<=TK_CNT THEN ROWCHANGED[CURROW]=1
8125 TKGRID.CTL'COLUMN=-1,TKGRID.CTL'VALUE$="X",BT_SAVE.CTL'ENABLED=1
8140 NEXT_ID=TKGRID.CTL; REFRESH_FLG=1
8145 RETURN 
8149 ! 
8900 REM "Functions
8910 DEF FNM(X)=INT(X)+FPT(X)*60/100
8920 DEF FNH(X)=INT(X)+FPT(X)*100/60
