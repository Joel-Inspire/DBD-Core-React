0010 REM "<ILGADD> Put existing Image Library files into IL1
0020 SETESC 9300; SETERR 9000
0035 REM "5.6 - 07/29/08 - 16.576111 - lms - SSP# 216030
0037 REM "216030-Images missing from image library                           
0040 REM "Copyright 2008 DemandBridge, Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 ! F %GUI=0 THEN SETERR 9000
0110 X0$="ILGADD",X1$="Put Image Library Files into IL1"
0120 DIM Z0$(80,"-"),FILE$[550]
0130 K0=20,K1=1
0135 C9=-1
0170 IF POS("MS"=UCS(SYS)) THEN ISWIN=1 ELSE ISWIN=0
0200 REM "
0240 IF %GUI=0 THEN CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$; REM "EM1
0320 IOLIST B$
0330 IOLIST C$
0340 IOLIST FS1$,FS1[0],FS1[1],FS1[2],FS1[3],FS1[4],FS1[5],FS1[6],FS1[7],FS1[8],FS1[9],FS1[10],FS1[11],FS1[12],FS1[13]
0350 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24],FS2[25],FS2[26],FS2[27],FS2[28],FS2[29]
0420 IOLIST I$
0450 IOLIST SM4$,SM4[0],SM4[1],SM4[2],SM4[3],SM4[4],SM4[5],SM4[6],SM4[7],SM4[8],SM4[9],SM4[10],SM4[11],SM4[12]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0509 REM "Slot 1 used for ED0 file opened in 1000's, slot 2 used for text file created in 700's to write to
0510 Z$="13O ZZPARM  15O FT8...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0525 IL1_CHAN=HFN; OPEN (IL1_CHAN,IOL=*)"IL1"+X3$(9,3)
0600 REM "
0610 IF %GUI=0 THEN GOSUB 6000
0620 PARM$=X3$(9,3)+"OSP"
0640 IF Q1$="" AND %GUI=0 THEN CALL "ZZPROM",".Y",X3$,Z,"PROCEED?","","",0; ON Z GOTO 0641,9900
0800 REM "Set Prefix
0900 REM "Read ZZPARM file for DIRectory and hex codes
0910 DIM I$(512); READ (Z[13],KEY=PARM$,DOM=0911)IOL=0420
0920 REM "IF I$(309,2)<>"  " THEN ELEMENT_SEPARATOR$=ATH(I$(309,2))
0925 REM "IF I$(311,2)<>"  " THEN SEGMENT_TERMINATOR$=ATH(I$(311,2))
1000 REM "Get list of .exp files to process
1005 I=-1,J=0
1008 GOTO 5000
1010 IMPORT_PATH$="/usr/lib/pvx/images/VEND_PO"
1012 CHAN=HFN; OPEN (CHAN)"< find "+IMPORT_PATH$+" -name "+QUO+"*.pdf"+QUO+" -print | sort 2> /dev/null"
1014 READ (CHAN,ERR=5000)A$
1015 PRINT A$
1030 NAME$=A$(LEN(IMPORT_PATH$)+1)
1060 REM "IF J>=I THEN GOTO 5000
1075 IF %GUI=0 THEN PRINT @(15,15),'CE',"Processing: "
1080 REM "GOSUB 8100; GOSUB 8150
1100 REM "PROCESS LIST OF FILES
1105 REF$=STP(NAME$,3,"-")
1106 REF1$=STP(REF$,3,"_")
1107 REF1$=REF1$(POS("+"=REF1$,1,2)+1)
1108 REF2$=REF1$(2,9)
1109 FT8$=""; READ (Z[15],KEY=REF2$,DOM=*NEXT)FT8$
1110 %IL_ADD_TF1$=REF2$; REM PO #
1112 %IL_ADD_DOC_TYPE$="A2"; REM document type
1114 FULL_PATH$=A$
1115 IF FT8$<>"" THEN %IL_ADD_TF2$=FT8$(7,10); REM VENDOR
1120 PRINT %IL_ADD_TF1$; ESCAPE 
1130 GOSUB CHECK_IL1
1140 IF MATCHING_INDEX$<>"" THEN GOTO 1985
1150 GOSUB ADD_IMAGE
1152 ! ALL "ILGFUN;ADD_IMAGE",IL1_CHAN,I_KEY$,%IL_ADD_DOC_TYPE$,%IL_ADD_TF1$,%IL_ADD_TF2$,FULL_PATH$
1156 PIIL_DONE: %IL_ADD_DOC_TYPE$="",%IL_ADD_TF1$="",%IL_ADD_TF2$="",%IL_ADD_IMAGE_PATH$="",REF$="",REF1$="",REF2$=""
1800 REM "
1900 REM "End of file
1930 REM "Remove the file
1985 J=J+1
1990 GOTO 1014
3500 CHECK_IL1:
3506 ! Check for ref1 and ref2 already existing, if either found, use them
3507 REF1$=PAD(REF1$,10)
3508 MATCHING_INDEX$=""
3510 IF NOT(NUL(REF1$)) THEN {
3512 READ (IL1_CHAN,KNO=2,KEY=%IL_ADD_DOC_TYPE$+REF1$,DOM=*NEXT)
3515 IK$=KEY(IL1_CHAN,KNO=2,END=3517); IF MID(IK$,1,12)=%IL_ADD_DOC_TYPE$+REF1$ THEN MATCHING_INDEX$=MID(IK$,13)
3516  }
3517 RETURN 
3550 WRITE_IL1_REC:
3560 PREV_ADDR$=KEL(IL1_CHAN,KNO=0,END=*PROCEED); IF PREV_ADDR$="" THEN IL1.IMAGE_KEY$=DIM(5,$00$) ELSE IL1.IMAGE_KEY$=PREV_ADDR$
3565 NEW_KEY: IL1.IMAGE_KEY$=FN%NEXT_SEQ$(IL1.IMAGE_KEY$,5)
3575 WRITE (IL1_CHAN,KEY=IL1.IMAGE_KEY$,DOM=NEW_KEY,REC=IL1$)
3580 WIR_END:
3590 IMAGE_KEY$=IL1.IMAGE_KEY$
3595 RETURN 
3600 ADD_IMAGE:! ^100 CALL: given file channel of IL1, Optional IMAGE_TYPE,TOPFORM_REF_1,TOPFORM_REF_2, and IMAGE_PATH, create new IL1 record (returning IMAGE_KEY$) with CREATED_BY set to operator from %X3$, CREATED_ON, and CREATED_AT set to current date and time -- If IMAGE_PATH = ~SCAN~ + desired_file_name  then scan in image, if ~CANCEL~ is returned path then don't write out
3610 ! LOCAL IL1$
3620 ! NTER IL1_CHANNEL,IMAGE_KEY$,IMAGE_TYPE$,TOPFORM_REF_1$,TOPFORM_REF_2$,IMAGE_PATH$,ERR=*NEXT
3630 DIM IL1$:IOL(IL1_CHAN) ! IF NOT(%IL_CODES) THEN PERFORM "ILGFUN;BUILD_DOC_LIST"
3635 IMAGE_TYPE$=%IL_ADD_DOC_TYPE$,TOPFORM_REF_1$=%IL_ADD_TF1$,TOPFORM_REF_2$=%IL_ADD_TF2$
3636 IMAGE_PATH$=FULL_PATH$
3640 IL1.IMAGE_TYPE$=PAD(IMAGE_TYPE$,2) ! IND (%IL_CODES,KEY=PAD(IMAGE_TYPE$,2),DOM=*PROCEED)IL0_CODE$,IL0_DESC$,IL0_DIR$,IL0_FMT$,IL0_SCAN$,IL0_ONLY_SAVE_LAST$,IL0_ACCESS$,IL0_ADD_FMT_CODE$
3650 IL1.TOPFORM_REF_1$=PAD(TOPFORM_REF_1$,10),IL1.TOPFORM_REF_2$=PAD(TOPFORM_REF_2$,30)
3660 IL1.CREATED_ON$=DTE(JUL(0,0,0):"YYYYMMDD"),IL1.CREATED_ON$=CHR(NUM(IL1.CREATED_ON$(1,3))-125)+IL1.CREATED_ON$(4)
3670 IL1.CREATED_AT$=DTE(0:"%Hz%mz%sz")
3680 IL1.CREATED_BY$=PAD(MID(%X3$,40,3),3); IF NUL(IL1.CREATED_BY$) THEN IL1.CREATED_BY$=PAD(WHO,3) ! Use TopForm operator if known, else use o/s login info
3700 IL1.IMAGE_PATH$=PAD(IMAGE_PATH$,160)
3710 IL1.IL1_UNUSED$=DIM(76)
3720 GOSUB WRITE_IL1_REC
3730 ADD_IMAGE_EXIT:
3740 EXIT 
3750 ! *******************************************************
5000 CLOSE (CHAN,ERR=*NEXT)
5002 OPEN (99,IOL=*)"IL1500"
5003 IL1_CHANNEL=99
5005 I=-1,J=0
5008 ESCAPE 
5010 IMPORT_PATH$="/usr/lib/pvx/images/PACK_LST/"
5011 ! HAN=HFN; OPEN (CHAN)"< find "+IMPORT_PATH$+" -name "+QUO+"*.pdf"+QUO+" -print -newer | sort 2> /dev/null"
5012 CHAN=HFN; OPEN (CHAN)"< ls -t "+IMPORT_PATH$
5013 ! HAN=HFN; OPEN (CHAN)"< find "+IMPORT_PATH$+" -name "+QUO+"*.pdf"+QUO+" -print | ls -lt"
5014 READ (CHAN,ERR=5500)A$
5015 IF POS("pdf"=A$)=0 THEN GOTO 5014
5020 PRINT A$
5030 ! AME$=A$(LEN(IMPORT_PATH$)+1)
5035 NAME$=A$
5075 IF %GUI=0 THEN PRINT @(15,15),'CE',"Processing: "
5100 %IL_ADD_DOC_TYPE$="A1"; REM document type
5105 REF$=STP(NAME$,3,"-"); IF REF$="00000024" THEN ESCAPE 
5106 X=POS("_"=NAME$,ERR=5014),REF1$=NAME$(1,X-1)
5107 REF1$=STP(REF1$,3,"-"),REF1$=STR(NUM(REF1$):"00000000")
5108 REF1$=PAD(REF1$,10)
5110 GOSUB CHECK_IL1
5115 IF MATCHING_INDEX$<>"" THEN GOTO 5014
5120 %IL_ADD_TF1$=REF1$; REM ORDER NUMBER
5125 FULL_PATH$=A$
5130 ! IF FT8$<>"" THEN %IL_ADD_TF2$=FT8$(7,10); REM WAREHOUSE
5140 GOSUB ADD_IMAGE
5150 %IL_ADD_DOC_TYPE$="",%IL_ADD_TF1$="",%IL_ADD_TF2$="",%IL_ADD_IMAGE_PATH$="",REF$="",REF1$="",REF2$=""
5200 GOTO 5014
5500 GOTO 9900
6000 REM "BACKGROUND
6001 IF %GUI<>0 THEN GOTO 6190
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(0,4),"Importing Invoice files into Image Library"
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
7500 REM "Convert date q$ into q0$
7501 REM "Q$ in YYYYMMDD format or YYMMDD
7505 Q0$=""
7506 IF STP(Q$,3," ")="" THEN GOTO 7545
7510 IF LEN(Q$)=8 THEN GOTO 7520 ELSE IF LEN(Q$)=6 THEN D1$=STR(NUM(Q$(1,2)):"00") ELSE GOTO 7545
7515 IF D1$<"50" THEN Q$="20"+Q$ ELSE Q$="19"+Q$
7520 Q0$=CHR(NUM(Q$(1,3),ERR=7521)-125)+Q$(4,1)+Q$(5,2)+Q$(7,2)
7545 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
