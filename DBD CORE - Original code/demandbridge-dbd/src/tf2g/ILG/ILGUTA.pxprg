0010 REM "Image Library Archive Utility <ILGUTA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 04/22/14 - 15.671666 - crg - SSP# 269615
0037 REM "269615-Image Library Archival Utility 
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "This utility is intended for use in archiving a company's 
0051 REM "Image Library  files to an external target filesystem 
0052 REM "and optionally recreating an IL1 index and log file for later use
0069 ! 
0070 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "ILGUTA","../ILG/IL.EN"
0080 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0085 EXIT 
0090 ! 
0095 INIT:
0110 X0$="ILGUTA",X1$="Image Library Archive Utility"
0130 K0=20,K1=1
0135 C9=-1
0140 X0=-1
0150 SAVE_PERCENT_GUI=%GUI; %GUI=1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0300 REM "IOLISTS
0310 IOLIST A$
0320 IOLIST B$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O IL1...  02O IL2...  03O FS6...  04OSIL1...  05OSIL2...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0540 IF MEMCHN<>0 THEN CLOSE (MEMCHN,ERR=*PROCEED); MEMCHN=0
0545 GOSUB CLEAR_FIELDS
0550 GOSUB CENTER_WDW
0595 RETURN 
0599 ! 
0600 PROCEED:
0605 ! Validation checks
0610 IF DO_TYPE$="Y" THEN IF NUM(FIN(MEMCHN,"NUMREC"))<=0 THEN MSGBOX MSG("ILGUTA_E01"),MSG("WARNING"),"!,OK"; GOTO DONE_PROCEED
0620 IF DO_CUST$<>"Y" AND DO_DATE$<>"Y" THEN MSGBOX MSG("ILGUTA_E02"),MSG("WARNING"),"!,OK"; GOTO DONE_PROCEED
0630 ! IF COPY_FILE$="Y" THEN IF NUL(DEST_IL_DIR$) THEN MSGBOX MSG("ILGUTA_E03"),MSG("ERROR"),"STOP,OK"; GOTO DONE_PROCEED
0640 IF DEL_FILE$="Y" THEN ANS$=""; MSGBOX MSG("ILGUTA_E05"),MSG("CONFIRM"),"?,OK,CANCEL",ANS$; IF ANS$<>"OK" THEN GOTO DONE_PROCEED
0700 ! Initialize 
0705 PROC_ID$=FID(0)+"."+MID(FN%TIMRND$,3,12) ! Id string, associated with all files generated in this process.
0710 IF LOG_CHAN THEN CLOSE (LOG_CHAN); LOG_CHAN=0
0715 LOG_OPTIONS$="A"; CALL "ZZ2LOG;OPEN_LOG",ERR=*NEXT,X3$,X4$,FN%GET_BASENAME$(PGN)+"."+PROC_ID$+".log",LOG_OPTIONS$,LOG_CHAN
0720 LOGMSG$="STARTED|ID|"+PROC_ID$; MX=FNLOG
0750 IF COPY_FILE$="Y" THEN {! Copy mode selected - setup new IL1 and IL2 files for storing the copied I/L entries
0760 DD_ERRMSG$=""; CALL "*dict/dd_updt;Update_Physical","IL1_Image","IL1"+%C$+"."+PROC_ID$,"",ERRMSG$; IF NOT(NUL(DD_ERRMSG$)) THEN MSGBOX MSG("ILGUTA_E06","IL1"+%C$+"."+PROC_ID$,DD_ERRMSG$),MSG("Error"),"STOP,OK"; GOTO DONE_PROCEED
0770 DD_ERRMSG$=""; CALL "*dict/dd_updt;Update_Physical","IL2_Audit","IL2"+%C$+"."+PROC_ID$,"",ERRMSG$; IF NOT(NUL(DD_ERRMSG$)) THEN MSGBOX MSG("ILGUTA_E06","IL2"+%C$+"."+PROC_ID$,DD_ERRMSG$),MSG("Error"),"STOP,OK"; GOTO DONE_PROCEED
0780 LOGMSG$="CREATED NEW IL FILES"; MX=FNLOG
0790 OPEN (HFN)"IL1"+%C$+"."+PROC_ID$; IL1_CHAN=LFO
0800 OPEN (HFN)"IL2"+%C$+"."+PROC_ID$; IL2_CHAN=LFO
0810 DEST_IL_INDEX.CTL'VALUE$="IL1"+%C$+"."+PROC_ID$
0820  }
0890 GOSUB LOG_USER_SELECTIONS
0899 ! 
0905 GOSUB SHOW_PROG_WIN
0910 GOSUB 8100
0950 GOSUB 8150
0960 READ (Z[1],KEY="",DOM=*NEXT)
0999 ! 
1000 REM "Begin main process
1010 DIM IL1$(320)
1011 IL1K$=KEY(Z[1],END=3000); READ (Z[1],KEY=IL1K$)IL1$
1020 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1100 STEP_1:! See if the current IL1 record matches *all* of the specified filter conditions
1110 IS_MATCH=1 ! Begin by assuming this record qualifies
1120 IF NUL(IL1$) THEN IS_MATCH=0; GOTO DONE_STEP1 ! IL1 record is bad
1130 IL1_TYPE$=PAD(MID(IL1$,6,2),2); IF NUL(IL1_TYPE$) THEN IS_MATCH=0; GOTO DONE_STEP1 ! Image type is bad
1140 ! Do image type check
1150 DO_TYPE:
1160 IF DO_TYPE$<>"Y" THEN GOTO DO_CUST
1170 IF DO_TYPE$="Y" AND MEMCHN THEN IS_MATCH=0; FIND (MEMCHN,KEY=IL1_TYPE$,DOM=*NEXT); IS_MATCH=1 ! Image type is in user specified types list
1180 IF NOT(IS_MATCH) THEN GOTO DONE_STEP1
1190 ! Do Customer code check
1200 DO_CUST:
1210 IF DO_CUST$<>"Y" THEN GOTO DO_DATE
1220 IF NUL(CUST_START$) THEN CUST_START$=DIM(10)
1230 IF NUL(CUST_END$) THEN CUST_END$=DIM(10,"~")
1240 TF1_CUST$="",TF2_CUST$=""
1250 SWITCH IL1_TYPE$ ! Get cust code from IL1 REF1 and REF2 fields
1260 CASE "05"
1270 TF1_CUST$=MID(IL1$,8,10),TF2_CUST$=MID(IL1$,213,10)
1280 BREAK
1290 CASE "06","10","14","A3"
1300 TF1_CUST$=MID(IL1$,8,10),TF2_CUST$=""
1305 BREAK
1310 CASE "07","08","09","13","A0","A5","AB","AC"
1320 TF1_CUST$="",TF2_CUST$=MID(IL1$,213,10)
1330 BREAK
1340 DEFAULT ; TF1_CUST$="",TF2_CUST$=""
1350 BREAK
1360 END SWITCH 
1370 TF1_CUST$=PAD(TF1_CUST$,10),TF2_CUST$=PAD(TF2_CUST$,10)
1380 IF NOT(NUL(TF1_CUST$)) AND (TF1_CUST$>=CUST_START$ AND TF1_CUST$<=CUST_END$) OR NOT(NUL(TF2_CUST$)) AND (TF2_CUST$>=CUST_START$ AND TF2_CUST$<=CUST_END$) THEN GOTO DO_DATE ! If here then cust code matches the range, go to next section, else continue with cust code checking
1390 ! If here, try a lookup of the customer in order history based on order number reference
1400 TF_ORD$=""
1410 SWITCH IL1_TYPE$ ! Get order number from I/L Ref1 and Ref2 fields so we can lookup customer code
1420 CASE "01","02","03","04","07","08","12","15","A1","A2","A7","A9","AA","RD"
1430 TF_ORD$=MID(IL1$,8,8)
1440 BREAK
1450 DEFAULT ; TF_ORD$=""
1460 BREAK
1470 END SWITCH 
1480 TF_ORD$=PAD(TF_ORD$,8),FS6K$=""
1490 IF NUL(TF_ORD$) THEN IS_MATCH=0; GOTO DONE_STEP1 ! No match by cust code possible, skip this IL1
1500 READ (Z[3],KEY=TF_ORD$,KNO=6,DOM=*NEXT)
1510 FS6K$=KEY(Z[3],END=*NEXT)
1520 IF NUL(FS6K$) OR MID(FS6K$,1,8)<>TF_ORD$ THEN IS_MATCH=0; GOTO DONE_STEP1
1530 TF1_CUST$=PAD(MID(FS6K$,9,10),10)
1540 IF NOT(NUL(TF1_CUST$)) AND (TF1_CUST$>=CUST_START$ AND TF1_CUST$<=CUST_END$) THEN GOTO DO_DATE ELSE IS_MATCH=0; GOTO DONE_STEP1
1550 ! Do Created Date check
1560 DO_DATE:
1570 IF DO_DATE$<>"Y" THEN GOTO DONE_STEP1
1580 IF NUL(DATE_START$) THEN DATE_START$=DIM(6)
1590 IF NUL(DATE_END$) THEN DATE_END$=DIM(6,"~")
1600 CREATED_ON$=MID(IL1$,38,6)
1610 IF NOT(NUL(CREATED_ON$)) AND (CREATED_ON$>=DATE_START$ AND CREATED_ON$<=DATE_END$) THEN GOTO DONE_STEP1 ELSE IS_MATCH=0; GOTO DONE_STEP1
1990 ! 
1995 DONE_STEP1:
1999 ! 
2000 STEP_2:! Based on the match outcome take appropriate action
2010 IF NOT(IS_MATCH) THEN GOTO DONE_STEP2
2019 ! 
2020 LOGMSG$="MATCH|"+IL1$(1,5)+"|"+IL1$(6,2)+"|"+IL1$(38,6)+"|"+IL1$(8,10)+"|"+IL1$(213,30)+"|"+IL1$(53,120)+"|"; MX=FNLOG
2099 ! 
2100 IF COPY_FILE$="Y" THEN {
2110 WRITE (IL1_CHAN,KEY=IL1$(1,5))IL1$
2120 READ (Z[2],KEY=IL1$(1,5),KNO=3,DOM=*NEXT)
2130 IL2K$=KEY(Z[2],END=2189); IF MID(IL2K$,1,5)<>IL1$(1,5) THEN GOTO 2189 ! Get IL2 records if any
2140 DIM IL2$(340); READ (Z[2],KEY=IL2K$)IL2$
2150 WRITE (IL2_CHAN,KEY=IL2$(1,5))IL2$
2180 GOTO 2130
2190  }
2199 ! 
2900 DONE_STEP2:
2995 GOTO 1000
2999 ! 
3000 REM "Delete phase
3010 IF DEL_FILE$="Y" THEN {
3015 ! 
3020 READ (IL1_CHAN,KEY="",DOM=*NEXT)
3025 TIL1K$=KEY(IL1_CHAN,END=3049); READ (IL1_CHAN,KEY=TIL1K$)*
3030 REMOVE (Z[4],KEY=TIL1K$)
3035 LOGMSG$="DELETE|IL1|"+TIL1K$+"|"; MX=FNLOG
3040 GOTO 3025
3049 ! 
3050 READ (IL2_CHAN,KEY="",DOM=*NEXT)
3055 TIL2K$=KEY(IL2_CHAN,END=3079); READ (IL2_CHAN,KEY=TIL2K$)*
3060 REMOVE (Z[5],KEY=TIL2K$)
3065 LOGMSG$="DELETE|IL2|"+TIL2K$+"|"; MX=FNLOG
3070 GOTO 3055
3079 ! 
3090  }
3099 ! 
4999 ! 
5000 REM "EOJ
5010 C=T; GOSUB 8150
5015 GOSUB DROP_PROG_WIN
5020 MSGBOX MSG("COMPLETED")+"!",_FYI$,"!"
5021 GOSUB CLEAR_FIELDS
5022 LOGMSG$="ENDED|ID|"+PROC_ID$; MX=FNLOG
5025 DONE_PROCEED:
5035 IF LOG_CHAN THEN CLOSE (LOG_CHAN); LOG_CHAN=0
5036 IF IL1_CHAN THEN CLOSE (IL1_CHAN); IL1_CHAN=0
5037 IF IL2_CHAN THEN CLOSE (IL2_CHAN); IL2_CHAN=0
5040 RETURN 
5099 ! 
8100 REM "Initialize graph
8110 C=0; T=NUM(FIN(Z[1],"NUMREC")),T0=2
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8149 ! 
8150 REM "Update graph
8165 CALL "ZZBARG",X3$,"HG",1,10,50,T1,T,C
8195 RETURN 
8199 ! 
8200 CENTER_WDW:
8205 GOSUB GET_XYINFO
8210 UP_LEFT_X=INT((_XMAX/_XCHAR-WDW_WIDE)/2)
8215 UP_LEFT_Y=INT((_YMAX/_YCHAR-WDW_HIGH)/2)
8220 RETURN 
8249 ! 
8250 GET_XYINFO:
8255 IF _XCHAR<>0 THEN RETURN 
8260 _X$=MSE
8265 _XCHAR=DEC($00$+_X$(10,1))
8270 _YCHAR=DEC($00$+_X$(11,1))
8275 _XMAX=DEC(_X$(27,2))
8280 _YMAX=DEC(_X$(29,2))
8285 _WIN_VER=TCB(25)
8290 RETURN 
8299 ! 
8300 SHOW_PROG_WIN:
8310 PRINT 'DIALOGUE'(UP_LEFT_X-35,UP_LEFT_Y-5,70,5,"Progress")
8315 RETURN 
8320 ! 
8325 DROP_PROG_WIN:
8330 PRINT 'POP'
8335 RETURN 
8340 ! 
8400 LOG_USER_SELECTIONS:
8410 LOGMSG$="FILTER|BY TYPE|"+DO_TYPE$+"|"; MX=FNLOG
8415 IF DO_TYPE$="Y" AND MEMCHN THEN {
8420 READ (MEMCHN,KEY="",DOM=*NEXT)
8430 READ (MEMCHN,END=*NEXT)LOGMSG$; LOGMSG$="FILTER|BY TYPE|IMGTYPE|"+LOGMSG$+"|"; MX=FNLOG; GOTO *SAME
8435  }
8450 LOGMSG$="FILTER|BY CUST|"+DO_CUST$+"|"; IF DO_CUST$="Y" THEN LOGMSG$+="START|"+TBL(NUL(CUST_START$),CUST_START$,"FIRST")+"|END|"+TBL(NUL(CUST_END$),CUST_END$,"LAST")+"|" END_IF ; MX=FNLOG
8460 LOGMSG$="FILTER|BY DATE|"+DO_DATE$+"|"; IF DO_DATE$="Y" THEN LOGMSG$+="START|"+TBL(NUL(DATE_START$),DATE_START$,"FIRST")+"|END|"+TBL(NUL(DATE_END$),DATE_END$,"LAST")+"|" END_IF ; MX=FNLOG
8470 LOGMSG$="ACTION|COPY FILES|"+COPY_FILE$+"|"; IF COPY_FILE$="Y" THEN LOGMSG$+="DEST DIR|"+DEST_IL_DIR$+"|" END_IF ; MX=FNLOG
8480 LOGMSG$="ACTION|DELETE FILES|"+DEL_FILE$+"|"; MX=FNLOG
8495 RETURN 
8499 ! 
8500 ! Define log function
8510 DEF FNLOG
8512 LOCAL OUT$,OUTDATE$
8525 IF MID(X3$,48,1)="2" THEN OUTDATE$=DTE(0:"%Y-%Dz-%Mz|%Hz:%mz:%sz") ELSE OUTDATE$=DTE(0:"%Y-%Mz-%Dz|%Hz:%mz:%sz")
8530 OUT$=OUTDATE$+"|"+LOGMSG$
8535 PRINT (LOG_CHAN)OUT$
8585 RETURN 1
8590 END DEF
8599 ! 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000 ! GOSUB 6400
9515 GOTO 0640
9520 ON C9 GOTO 1140,2040
9900 WRAPUP:REM "END PROGRAM
9905 %GUI=SAVE_PERCENT_GUI
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9925 IF MEMCHN THEN CLOSE (MEMCHN); MEMCHN=0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 ! 
10005 SELECT_IMG_TYPES:
10010 IF MEMCHN<>0 THEN CLOSE (MEMCHN,ERR=*PROCEED); MEMCHN=0
10015 CALL "ILGTLS",MEMCHN
10025 TMP$=FIN(MEMCHN,"NUMREC")
10030 TYPES_SELECTED.CTL'VALUE$=TMP$
10045 RETURN 
10049 ! 
10050 CHECK_DEST_DIR:
10060 OPEN (HFN,ERR=*NEXT)DEST_IL_DIR$; CLOSE (LFO,ERR=*PROCEED); GOTO OK_DEST_DIR
10080 ERR_DEST_DIR:
10085 DEST_IL_DIR$="",NEXT_ID=DEST_IL_DIR.CTL; MSGBOX MSG("ILGUTA_E04"),MSG("ERROR"),"STOP,OK"; GOTO OK_DEST_DIR
10090 OK_DEST_DIR:
10092 REFRESH_FLG=1
10095 RETURN 
10099 ! 
10100 CLEAR_FIELDS:
10105 DO_TYPE$="N",TYPES_SELECTED$="All"
10106 DO_CUST$="N",DO_DATE$="N",CUST_END$="",CUST_START$="",DATE_END$="",DATE_START$=""
10107 COPY_FILE$="N",DEL_FILE$="N",DEST_IL_DIR$="",DEST_IL_INDEX$=""
10115 IF MEMCHN THEN CLOSE (MEMCHN); MEMCHN=0
10120 REFRESH_FLG=1
10145 RETURN 
10149 ! 
56001 ! 
56002 REM "269615-Image Library Archival Utility 
