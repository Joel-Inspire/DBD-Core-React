0010 ! ILGSCN - Scan Images into the Image Library
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Jul. 21, 2004 16:58
0030 ! ************************************************************************
0035 REM "5.7 - 09/03/20 - 10.34 - jvv - SSP# 307303
0037 REM "307303-ILGSCN screen positioning issue                             
0040 REM "Copyright 2020 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 IF TCB(13)=1 THEN BEGIN 
0052 IF NUL(%WDX$) THEN MSGBOX "You must be using Windx to access TopForm to scan images into the library"; GOTO 0075
0055 IF NOT(%GUI) THEN CHUI_MODE=1; %GUI=1; PRINT 'SHOW'(0)
0060 PROCESS "ILGSCN","../ILG/IL.EN"
0065 IF CHUI_MODE THEN %GUI=0; PRINT 'SHOW'(1); RUN "ZMENU"
0075 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0115 %NO_X=1
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0154 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; DIM Z[NUM(X3$(60,3))]
0155 Z$="01O IL0... 02O IL1... 03O QSA... 04O PO1... 13O ZZPARM "
0156 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0160 _FILE_NAME$="IL0"+%C$
0170 _FIL_NO=Z[1]
0174 IF NOT(%GLOBALS_DONE) THEN PERFORM "ZZGGBL;SET_GLOBALS"
0175 IF NOT(FN%ISOPEN(%IL_CODES)) THEN PERFORM "ILGFUN;BUILD_DOC_LIST" ! 251100
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 %VEND_NAME$=""
0187 READ (Z[13],KEY=X3$(40,3)+"ILGSCN",DOM=*NEXT)IOL=DEFAULT_LIST ! read operator specific/program specific info
0188 IF PNL_COL>80 THEN PNL_COL=3 ! ssp 212524
0189 IF PNL_LINE>50 THEN PNL_LINE=15 ! 307230 SSP307303
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0250 DEFAULT_LIST:IOLIST DEF_START_DIR$,PNL_COL,PNL_LINE,PNL_W,PNL_H
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="DOC_TYPE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0522 IF PNL_COL>0 AND PNL_LINE>0 THEN _ORIG_OBJ_C=PNL_COL,_ORIG_OBJ_L=PNL_LINE,_ORIG_OBJ_W=MIN(_PNL_MAX_W,PNL_W),_ORIG_OBJ_H=MIN(_PNL_MAX_H,PNL_H); PRINT (0,ERR=*NEXT)'SIZE'(_ORIG_OBJ_W,_ORIG_OBJ_H),'MOVE'(_ORIG_OBJ_C,_ORIG_OBJ_L),
0525 VIIW_OPT$="A"; GOSUB SETUP_SCAN_WINDOW
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0565 IF NOT(NUL(SCAN_WINDOW_CONTENT$)) THEN GOSUB SET_TO_CORRECT_FIELD ELSE LAST_BUTTON_USED=SCAN_IMAGE.CTL
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0915 %NO_X=0
0920 %NO_VALIDATE=0
0925 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0945 IF SCAN_WINDOW_HANDLE THEN CALL "[WDX]*OCX;CLOSE_OCX_OBJECT",SCAN_WINDOW_HANDLE; SCAN_WINDOW_HANDLE=0 ! 232305
0950 MESSAGE_LIB _SV_MSGLIB$
0952 X$=OBJ(0),M$=MSE,PNL_COL=INT((DEC(X$(21,2))+1)/DEC($00$+M$(10,1))),PNL_LINE=INT((DEC(X$(23,2))+1)/DEC($00$+M$(11,1))),PNL_W=PANEL_WIDE,PNL_H=PANEL_HIGH
0955 ! WRITE (Z[13],KEY=X3$(40,3)+"ILGSCN")IOL=DEFAULT_LIST ! write out operator specific/program specific info; !SSP 307303
0960 SET_PARAM 'KR'=_SV_KR
0962 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1015 CALL "ILGFUN;DROP_BOX_READ",DOC_TYPE_DB.CTL,DOC_TYPE$,DOC_DESC$
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1060 _KEY$=DOC_TYPE$
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 ! Get next screen in place
1110 ! FIX THIS - REPLACEMENT_SCRN$="ILGSCN."+DOC_TYPE$
1115 ILGSCN_DOC_TYPE$=DOC_TYPE$
1120 ! FIX THIS - SCAN_WINDOW_HANDLE=0
1140 GOSUB SET_FIELDS_ON_PANEL
1180 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1195 EXIT 
1199 ! **************************************
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 MSGBOX "ILGSCN_02","MB_ATTN","!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3070 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3525 CALL "ILGFUN;DROP_BOX_WRITE",DOC_TYPE_DB.CTL,DOC_TYPE$
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13015 RETURN 
13020 IF _CLR_FLG$="R" THEN DOC_TYPE$=""
13030 CURRENT_DIRECTORY$=""
13040 IL0_UNUSED$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
19000 RECORD_MISSING:! given MISSING_MESS$ use MSG("ILGSCN_03") and give msgbox and end
19010 MSGBOX MSG("ILGSCN_03",MISSING_MESS$),MSG("MB_ATTN"),"!"
19040 MISSING_MESS$=""
19095 EXIT 
19099 ! *************************************
19100 SET_DROP_BOX:! Setup drop box
19120 CALL "ILGFUN;DROP_BOX_LOAD",DOC_TYPE_DB.CTL,"00","99" ! Only load 'scan'ed images
19130 IF NOT(NUL(ILGSCN_DOC_TYPE$)) THEN DOC_TYPE$=ILGSCN_DOC_TYPE$,ARG_1$=DOC_TYPE$; CALL "ILGFUN;DROP_BOX_WRITE",DOC_TYPE_DB.CTL,DOC_TYPE$; READ (_FIL_NO,KEY=DOC_TYPE$,DOM=*PROCEED)
19195 RETURN 
19199 ! **************************************************
19200 NO_BLANK_ALLOWED:! given NO_BLANK_MESS$ use MSG("ILGSCN_04") and give msbbox and set NEXT_ID to CUR_ID
19210 MSGBOX MSG("ILGSCN_04",NO_BLANK_MESS$),MSG("MB_ATTN"),"!"
19240 NO_BLANK_MESS$=""
19250 NEXT_ID=_CUR_ID
19295 RETURN 
19299 ! ****************************************************
19300 SET_REFRESH_FLG:
19310 REFRESH_FLT=1
19320 RETURN 
20000 GET_RFQ:! Given quote number get rfq info in QSA.
20010 DIM QSA$:IOL(Z[3])
20040 IF NOT(NUL(QUOTE_NUM$)) THEN {
20050 MISSING_MESS$=MSG("QUOTE_NUM")+" "+FN%ZZDISP$(QUOTE_NUM$,"O/P")
20060 FIND (Z[3],KEY=QUOTE_NUM$,DOM=RECORD_MISSING,REC=QSA$)
20070  }
20075 IF POS(_EOM$=$00090D$)<>0 THEN NEXT_ID=QUOTE_NUM_NEXT_ID
20095 RETURN 
20099 ! *********************************************************
20100 GET_PO:! Given PORDER$ get PO and set VENDOR$
20110 DIM PO1$:IOL(Z[4])
20140 IF NOT(NUL(PORDER$)) THEN {
20150 MISSING_MESS$=MSG("PO_NUM")+" "+FN%ZZDISP$(PORDER$,"P/O")
20160 FIND (Z[4],KEY=PORDER$,DOM=RECORD_MISSING,REC=PO1$)
20165 VENDOR$=PO1.VEND_DIV$+PO1.VEND_CODE$ ! SSP247462 VENDOR$=FN%ZZDISP$(PO1.VEND_DIV$+PO1.VEND_CODE$,"A/P")
20170 ! CALL "ZZWLKU;VEND_CODE_FMT",VENDOR$,ERR$,"" ! SSP247462
20172 REFRESH_FLG=1
20185  }
20190 IF POS(_EOM$=$00090D$)<>0 THEN NEXT_ID=PORDER_NEXT_ID; IF POS(DOC_TYPE$="0708",2)=0 THEN %NO_VALIDATE=0 ! Don't  clear no validate on doc types 7 & 8 (form samples
20195 RETURN 
20199 ! *******************************************
25000 CHECK_REF_FORMAT:
25020 CHECK_REF$=STR(NUM(CHECK_REF$):"000000",ERR=*NEXT)
25030 CHECK_REF$=PAD(CHECK_REF$,6," ")
25040 CHECK_REF.CTL'VALUE$=CHECK_REF$
25045 IF POS(_EOM$=$090D$)<>0 THEN NEXT_ID=CHECK_REF_NEXT_ID
25050 RETURN 
26000 SETUP_SCAN_WINDOW:! setup scan window area based on location of INDEX_BOX control
26005 LINE=15
26085 GOSUB SET_WINDOW_SIZE; IF NUL(SCAN_WINDOW_CONTENT$) THEN CALL "[WDX]*OCX;URL_IN_IE",COLUMN,LINE,WIDTH,HEIGHT,"IL_LOGO",SCAN_WINDOW_HANDLE,RET_CODE ELSE CALL "ILGFUN;VIEW_IMAGE_IN_WINDOW",SCAN_WINDOW_CONTENT$,"",VIIW_OPT$,COLUMN,LINE,WIDTH,HEIGHT,SCAN_WINDOW_HANDLE
26086 VIIW_OPT$=""
26090 OBTAIN (0,ERR=*NEXT,TIM=.1)*
26095 RETURN 
26099 ! *****************************************************
30000 ADD_IMAGE_AND_KEEP:! Set Keep image to keep adding    
30010 KEEP_IMAGE=1
30015 GOTO AFTER_ENTRY
30025 ADD_IMAGE:! Given DOC_TYPE$ and info, add to image library
30030 KEEP_IMAGE=0
30045 AFTER_ENTRY:
30050 IMAGE_ACTION$="~COPY~"+SCAN_WINDOW_CONTENT$+"~"
30100 SWITCH DOC_TYPE$ ! END SWITCH @33990
30125 CASE_BLANK: CASE ""
30149 BREAK
30150 CASE_00: CASE "00"
30155 IF NUL(VENDOR$) THEN NO_BLANK_MESS$=MSG("VENDOR"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=VENDOR.CTL; EXIT 
30160 IF NUL(VEND_QUOTE_NUM$) THEN NO_BLANK_MESS$=MSG("VEND_QUOTE"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=VEND_QUOTE_NUM.CTL; EXIT 
30165 TF1$=PAD(QUOTE_NUM$,8),TF2$=PAD(VENDOR$,10)+PAD(VEND_QUOTE_NUM$,10),IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(VENDOR$,"A/P"))+"_"+STP(VEND_QUOTE_NUM$)
30170 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30175 VENDOR$="",VEND_QUOTE_NUM$="",QUOTE_NUM$="",VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30195 CASE_00_DONE: BREAK
30200 CASE_01: CASE "01"
30205 IF NUL(VEND_INVOICE$) THEN NO_BLANK_MESS$=MSG("VEND_INV"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=VEND_INVOICE.CTL; EXIT 
30210 IF NUL(VENDOR$) THEN NO_BLANK_MESS$=MSG("VENDOR"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=VENDOR.CTL; EXIT 
30215 IF NUL(PORDER$) THEN MSGBOX MSG("ILGSCN_05"),_MSG_JUST_CHECK$,"?,YESNO",_ANS$; IF _ANS$<>"YES" THEN NEXT_ID=PORDER.CTL; EXIT 
30230 IF NOT(NUL(PORDER$)) THEN TF1$=PORDER$ ELSE TF1$=""
30232 TF2$=PAD(VENDOR$,10)+PAD(VEND_INVOICE$,10),IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(VENDOR$,"A/P"))+"_"+STP(VEND_INVOICE$)
30240 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30242 PORDER$="",VENDOR$="",VEND_INVOICE$="",VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30245 CASE_01_DONE: BREAK
30250 CASE_02: CASE "02"
30260 IF NUL(PORDER$) THEN NO_BLANK_MESS$=MSG("PO_NUM"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=PORDER.CTL; EXIT 
30270 TF1$=PAD(PORDER$,9),TF2$="",IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(PORDER$,"P/O"))
30280 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30285 PORDER$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30295 CASE_02_DONE: BREAK
30300 CASE_03: CASE "03"
30310 IF NUL(PORDER$) THEN NO_BLANK_MESS$=MSG("PO_NUM"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=PORDER.CTL; EXIT 
30330 TF1$=PAD(PORDER$,9),TF2$="",IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(PORDER$,"P/O"))
30340 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30342 PORDER$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30345 CASE_03_DONE: BREAK
30350 CASE_04: CASE "04"
30360 IF NUL(ORDER$) THEN NO_BLANK_MESS$=MSG("ORDER_NUM"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=ORDER.CTL; EXIT 
30380 TF1$=PAD(ORDER$,9),TF2$="",IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(ORDER$,"O/P"))
30390 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30392 ORDER$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30395 CASE_04_DONE: BREAK
30400 CASE_05: CASE "05"
30410 IF NUL(CUSTOMER$) THEN NO_BLANK_MESS$=MSG("CUSTOMER"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=CUSTOMER.CTL; EXIT 
30415 IF NUL(CHECK_REF$) THEN NO_BLANK_MESS$=MSG("CHECK_REF"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=CHECK_REF.CTL; EXIT 
30430 TF1$=PAD(CUSTOMER$,10),TF2$=PAD(CUSTOMER$,10)+PAD(CHECK_REF$,8),IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(CUSTOMER$,"A/R"))+"_"+STP(CHECK_REF$)
30440 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30442 CUSTOMER$="",CHECK_REF$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30445 CASE_05_DONE: BREAK
30450 CASE_06: CASE "06"
30460 IF NUL(CUSTOMER$) THEN NO_BLANK_MESS$=MSG("CUSTOMER"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=CUSTOMER.CTL; EXIT 
30480 TF1$=PAD(CUSTOMER$,10),TF2$="",IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(CUSTOMER$,"A/R"))
30490 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30492 CUSTOMER$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30495 CASE_06_DONE: BREAK
30500 CASE_07: CASE "07"
30515 IF NUL(PORDER$) THEN MSGBOX MSG("ILGSCN_06"),_MSG_JUST_CHECK$,"?,YESNO",_ANS$; IF _ANS$<>"YES" THEN NEXT_ID=PORDER.CTL; EXIT 
30520 IF NUL(ITEM_CODE$) AND NOT(NUL(CUSTOMER$)) THEN MSGBOX MSG("ILGSCN_07"),MSG("MB_ATTN"),"!"; NEXT_ID=ITEM_CODE.CTL; EXIT 
30525 IF NOT(NUL(PORDER$)) THEN TF1$=PORDER$ ELSE TF1$=""
30530 TF2$=PAD(CUSTOMER$,10)+PAD(ITEM_CODE$,10),IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(CUSTOMER$,"A/R"))+"_"+STP(ITEM_CODE$); IF NOT(NUL(PORDER$)) THEN IMAGE_PATH$=IMAGE_PATH$+"_"+STP(FN%ZZDISP$(PORDER$,"P/O")) END_IF ; IMAGE_PATH$=IMAGE_PATH$+"_P" ! SSP#236693!SSP#291699
30540 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30542 PORDER$="",ITEM_CODE$="",CUSTOMER$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30545 CASE_07_DONE: BREAK
30550 CASE_08: CASE "08"
30565 IF NUL(PORDER$) THEN MSGBOX MSG("ILGSCN_06"),_MSG_JUST_CHECK$,"?,YESNO",_ANS$; IF _ANS$<>"YES" THEN NEXT_ID=PORDER.CTL; EXIT 
30570 IF NUL(ITEM_CODE$) AND NOT(NUL(CUSTOMER$)) THEN MSGBOX MSG("ILGSCN_07"),MSG("MB_ATTN"),"!"; NEXT_ID=ITEM_CODE.CTL; EXIT 
30575 IF NOT(NUL(PORDER$)) THEN TF1$=PORDER$ ELSE TF1$=""
30580 TF2$=PAD(CUSTOMER$,10)+PAD(ITEM_CODE$,10),IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(CUSTOMER$,"A/R"))+"_"+STP(ITEM_CODE$); IF NOT(NUL(PORDER$)) THEN IMAGE_PATH$=IMAGE_PATH$+"_"+STP(FN%ZZDISP$(PORDER$,"P/O")) END_IF ; IMAGE_PATH$=IMAGE_PATH$+"_S" ! SSP#241431 !SSP#291699
30590 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30592 PORDER$="",CUSTOMER$="",ITEM_CODE$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30595 CASE_08_DONE: BREAK
30600 CASE_09: CASE "09"
30605 IF NUL(ITEM_CODE$) THEN NO_BLANK_MESS$=MSG("ITEM_CODE"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=ITEM_CODE.CTL; EXIT 
30630 TF1$="",TF2$=PAD(CUSTOMER$,10)+PAD(ITEM_CODE$,10),IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(CUSTOMER$,"A/R"))+"_"+STP(ITEM_CODE$)
30640 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30642 ITEM_CODE$="",CUSTOMER$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30645 CASE_09_DONE: BREAK
30650 CASE_10: CASE "10","14" ! 230830
30660 IF NUL(CUSTOMER$) THEN NO_BLANK_MESS$=MSG("CUSTOMER"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=CUSTOMER.CTL; EXIT 
30680 TF1$=PAD(CUSTOMER$,10),TF2$="",IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(CUSTOMER$,"A/R"))
30690 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30692 CUSTOMER$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30695 CASE_10_DONE: BREAK
30700 CASE_11: CASE "11"
30705 IF NUL(VENDOR$) THEN NO_BLANK_MESS$=MSG("VENDOR"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=VENDOR.CTL; EXIT 
30715 TF1$=PAD(VENDOR$,10),TF2$="",IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(VENDOR$,"A/P"))
30740 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30742 VENDOR$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30745 CASE_11_DONE: BREAK
30750 CASE_12: CASE "12"
30760 IF NUL(ORDER$) THEN NO_BLANK_MESS$=MSG("ORDER_NUM"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=ORDER.CTL; EXIT 
30780 TF1$=PAD(ORDER$,9),TF2$="",IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(ORDER$,"O/P"))
30790 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30792 ORDER$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30795 CASE_12_DONE: BREAK
30800 CASE_13: CASE "13"
30805 IF NUL(CUSTOMER$) THEN NO_BLANK_MESS$=MSG("CUSTOMER"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=CUSTOMER.CTL; EXIT 
30810 IF NUL(CUST_PO$) THEN NO_BLANK_MESS$=MSG("CUST_PO"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=CUST_PO.CTL; EXIT 
30820 TF1$="",TF2$=PAD(CUSTOMER$,10)+PAD(CUST_PO$,15),IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(CUSTOMER$,"A/R"))+"_"+STP(CUST_PO$)
30840 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30842 CUSTOMER$="",CUST_PO$=""; VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30845 CASE_13_DONE: BREAK
30850 CASE_A5: CASE "A5"
30855 IF NUL(QUOTE_NUM$) THEN NO_BLANK_MESS$=MSG("RFQ"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=QUOTE_NUM.CTL; EXIT 
30864 ! Note: if QSA.PROSPECT_OR_CUST$="Y" then Customer info should be replaced by T/M list code and contact code, we are not supporting this functionality here at this time, but may need to add
30865 TF1$=PAD(QUOTE_NUM$,8),TF2$=PAD(QSA.CUST_DIV$+QSA.CUST_CODE$,10)+PAD(QSA.QUOTE_DIV$+QSA.QUOTE_NUM$,8),IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(QSA.CUST_DIV$+QSA.CUST_CODE$,"A/R"))+"_"+STP(QUOTE_NUM$)
30870 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30875 QUOTE_NUM$="",VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30895 CASE_A5_DONE: BREAK
30900 CASE_15: CASE "15" ! Scan receiving report - WO 239078
30910 IF NUL(PORDER$) THEN NO_BLANK_MESS$=MSG("PO_NUM"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=PORDER.CTL; EXIT 
30920 IF NUL(RECV_REPORT$) THEN NO_BLANK_MESS$=MSG("RECV_RPT"); GOSUB NO_BLANK_ALLOWED; NEXT_ID=RECV_REPORT.CTL; EXIT 
30925 TF1$=PAD(PORDER$,9),TF2$=PAD(RECV_REPORT$,5),IMAGE_PATH$=IMAGE_ACTION$+STP(FN%ZZDISP$(PORDER$,"P/O"))+"_"+STP(RECV_REPORT$)
30930 CALL "ILGFUN;ADD_IMAGE",Z[2],"",DOC_TYPE$,TF1$,TF2$,IMAGE_PATH$,VERSION_LABEL$ ! 252307
30940 PORDER$="",RECV_REPORT$="",VERSION_LABEL$="",REFRESH_FLG=1 ! 252307
30945 CASE_15_DONE: BREAK
33990 END SWITCH ! 30100
34005 IF KEEP_IMAGE THEN {
34010 NEXT_ID=LAST_BUTTON_USED
34030  } ELSE {
34032 ERASE SCAN_WINDOW_CONTENT$,ERR=*NEXT ! [SSP-203361] SSP200933, need to remove the temporary file once the indexed file is written.
34035 SCAN_WINDOW_CONTENT$=""; GOSUB SETUP_SCAN_WINDOW
34040 NEXT_ID=LAST_BUTTON_USED
34045 IF LAST_BUTTON_USED=NEXT_IMAGE.CTL THEN ERASE NEXT_IMAGE_SOURCE$,ERR=*PROCEED; NEXT_IMAGE_SOURCE$=""; GOSUB COUNT_IMAGES_TO_DO ! If from NEXT_IMAGE, remove the file now that we added it, recount in case new ones came in
34050 GOSUB ADJUST_ARRAY_PTR ! [SSP-208525]
34070  }
34995 RETURN 
34999 ! *********************************************************
35000 SCAN:! Scan image into a temp file & display
35015 IF NOT(NUL(SCAN_WINDOW_CONTENT$)) THEN MSGBOX MSG("ILGFUN_21"),MSG("ILGFUN_22"),"?,CANCEL",_ANS$; IF _ANS$="CANCEL" THEN GOTO SET_TO_CORRECT_FIELD
35020 ERASE SCAN_WINDOW_CONTENT$,ERR=*NEXT ! [SSP-209865]-remove the viewed image from the server
35060 TEMP_PATH$=""; CALL "ILGFUN;SCAN_IMAGE",DOC_TYPE$,TEMP_PATH$
35065 CALL "ILGFUN;VIEW_IMAGE_IN_WINDOW",TEMP_PATH$,"","",COLUMN,LINE,WIDTH,HEIGHT,SCAN_WINDOW_HANDLE; SCAN_WINDOW_CONTENT$=TEMP_PATH$
35070 LAST_BUTTON_USED=SCAN_IMAGE.CTL
35100 SET_TO_CORRECT_FIELD:
35105 OBTAIN (0,TIM=.1,ERR=*NEXT)*
35106 WAIT 0; _EOM$="",QRY_VAL$=""
35107 OBTAIN (0,TIM=.1,ERR=*NEXT)*
35108 IF POS(DOC_TYPE$="010203070812",2) THEN %NO_VALIDATE=1 ELSE %NO_VALIDATE=0
35110 SWITCH DOC_TYPE$
35112 CASE ""; NEXT_ID=DOC_TYPE_DB.CTL; BREAK
35114 CASE "00"; NEXT_ID=QUOTE_NUM.CTL; BREAK
35116 CASE "01"; NEXT_ID=PORDER.CTL; BREAK
35118 CASE "02"; NEXT_ID=PORDER.CTL; BREAK
35120 CASE "03"; NEXT_ID=PORDER.CTL; BREAK
35122 CASE "04"; NEXT_ID=ORDER.CTL; BREAK
35124 CASE "05"; NEXT_ID=CUSTOMER.CTL; BREAK
35126 CASE "06"; NEXT_ID=CUSTOMER.CTL; BREAK
35128 CASE "07"; NEXT_ID=PORDER.CTL; BREAK
35130 CASE "08"; NEXT_ID=PORDER.CTL; BREAK
35132 CASE "09"; NEXT_ID=CUSTOMER.CTL; BREAK
35134 CASE "11"; NEXT_ID=CUSTOMER.CTL; BREAK
35136 CASE "11"; NEXT_ID=VENDOR.CTL; BREAK
35138 CASE "12"; NEXT_ID=ORDER.CTL; BREAK
35140 CASE "13"; NEXT_ID=CUSTOMER.CTL; BREAK
35142 CASE "A5"; NEXT_ID=QUOTE_NUM.CTL; BREAK
35144 CASE "15"; NEXT_ID=RECV_REPORT.CTL; BREAK ! WO 239078
35180 END SWITCH 
35195 RETURN 
35199 ! ************************************************
35200 IMPORT_IMAGE:! Import an image from a file
35210 IF NOT(NUL(SCAN_WINDOW_CONTENT$)) THEN MSGBOX MSG("ILGFUN_21"),MSG("ILGFUN_22"),"?,CANCEL",_ANS$; IF _ANS$="CANCEL" THEN GOTO SET_TO_CORRECT_FIELD
35215 TEMP_PATH$=""
35217 IF NOT(NUL(DEF_START_DIR$)) THEN START_DIR$=DEF_START_DIR$ ELSE START_DIR$=MSG("ILGFUN_15")
35220 CALL "[WDX]*OCX;GET_FILE_BOX","READ",TEMP_PATH$,START_DIR$,MSG("ILGFUN_16"),MSG("ILGFUN_17"),MSG("ILGFUN_18")
35223 IF NUL(TEMP_PATH$) THEN RETURN 
35224 ERASE SCAN_WINDOW_CONTENT$,ERR=*NEXT ! [SSP-209865]-remove the viewed image from the server
35225 IMAGE_PATH$="IMPORT_TEMP_"+FID(0); TEMP_PATH$="[wdx]"+TEMP_PATH$
35230 P=POS("\"=TEMP_PATH$,-1); IF P>0 THEN DEF_START_DIR$=SUB(MID(TEMP_PATH$,P),"[wdx]","")
35231 ! If file name has an extension then use it for the image format
35233 IF POS("."=LCS(TEMP_PATH$),-1) THEN IMAGE_FORMAT$=MID(TEMP_PATH$,POS("."=LCS(TEMP_PATH$),-1)+1) ! 192746                      
35235 CALL "ILGFUN;BUILD_IMAGE_PATH",ERR=*NEXT,DOC_TYPE$,IMAGE_PATH$,IMAGE_FILE_NAME$,IMAGE_DESC$,IMAGE_DIR$,IMAGE_FORMAT$,SCANNER_OPTIONS$
35250 CALL "ILGFUN;TRANSFER_FILE",TEMP_PATH$,IMAGE_PATH$
35265 CALL "ILGFUN;VIEW_IMAGE_IN_WINDOW",IMAGE_PATH$,"","",COLUMN,LINE,WIDTH,HEIGHT,SCAN_WINDOW_HANDLE; SCAN_WINDOW_CONTENT$=IMAGE_PATH$
35270 LAST_BUTTON_USED=IMPORT_IMAGE.CTL
35280 GOSUB SET_TO_CORRECT_FIELD
35295 RETURN 
35299 ! *********************************************************
35300 CHANGE_DIRECTORY:! set directory to get the next file from
35310 CALL "[wdx]*OCX;BROWSE_FOR_FOLDER",MSG("ILGSCN_12"),CURRENT_DIR$
35320 NEXT_ID=NEXT_IMAGE.CTL; LAST_BUTTON_USED=NEXT_IMAGE.CTL
35330 NEXT_IMAGE.CTL'TIP$=CURRENT_DIR$,CHANGE_DIRECTORY.CTL'TIP$=CURRENT_DIR$
35340 GOSUB COUNT_IMAGES_TO_DO
35395 RETURN 
35399 ! *******************************************************
35400 NEXT_IMAGE:! Get next file from CURRENT_DIR$, we will not be checking for image files at this poinrt                                             
35405 IF NOT(NUL(SCAN_WINDOW_CONTENT$)) THEN MSGBOX MSG("ILGFUN_21"),MSG("ILGFUN_22"),"?,CANCEL",_ANS$; IF _ANS$="CANCEL" THEN GOTO SET_TO_CORRECT_FIELD
35407 ERASE SCAN_WINDOW_CONTENT$,ERR=*NEXT ! [SSP-209865]-remove the viewed image from the server                                                       
35410 TEMP_PATH$=""
35412 IMAGE_ARRAY_CTR=IMAGE_ARRAY_CTR+1 ! [SSP-208525]
35414 IF IMAGE_ARRAY_CTR>IMAGES_TO_DO THEN IMAGE_ARRAY_CTR=1 ! [SSP-208525]
35416 TEMP_PATH$=IMAGE_ARRAY$[IMAGE_ARRAY_CTR] ! [SSP-208525]
35420 IF NUL(TEMP_PATH$) THEN MSGBOX MSG("ILGSCN_13"),MSG("MB_ATTN"),"I"; GOTO 35495
35425 IMAGE_PATH$=TEMP_PATH$; TEMP_PATH$="[wdx]"+CURRENT_DIR$+"\"+TEMP_PATH$
35435 CALL "ILGFUN;BUILD_IMAGE_PATH",ERR=*NEXT,DOC_TYPE$,IMAGE_PATH$,IMAGE_FILE_NAME$,IMAGE_DESC$,IMAGE_DIR$,IMAGE_FORMAT$,SCANNER_OPTIONS$
35450 CALL "ILGFUN;TRANSFER_FILE",TEMP_PATH$,IMAGE_PATH$
35452 NEXT_IMAGE_SOURCE$=TEMP_PATH$
35453 REM *** GOSUB COUNT_IMAGES_TO_DO ! always count in case new ones came in         
35465 CALL "ILGFUN;VIEW_IMAGE_IN_WINDOW",IMAGE_ARRAY$[IMAGE_ARRAY_CTR],CURRENT_DIR$,"A",COLUMN,LINE,WIDTH,HEIGHT,SCAN_WINDOW_HANDLE; SCAN_WINDOW_CONTENT$=IMAGE_PATH$
35470 LAST_BUTTON_USED=NEXT_IMAGE.CTL
35480 GOSUB SET_TO_CORRECT_FIELD
35495 RETURN 
35499 ! *********************************************************
35500 DEF FN_CHECK_PATH$(LOCAL PATH$) ! If path is . or .. then return '', if no extension on path$ then return '', if extension is not on approved list [ILGFUN_20] then return '' else return the path
35510 IF PATH$="." OR PATH$=".." THEN RETURN "" ! skip directory entries
35520 P=POS("."=PATH$,-1); IF P=0 THEN RETURN "" ! if no extension, we can't determine file type so skipit
35525 EXT$=MID(PATH$,P) ! Get Extension of file
35530 IF POS("|"+LCS(EXT$)+"|"=MSG("ILGFUN_20"))=0 THEN RETURN "" ! extension is not on approved list
35590 RETURN PATH$
35595 END DEF
35599 ! ****************************************************
35600 COUNT_IMAGES_TO_DO:! Count images to do in directory and update
35605 IMAGES_TO_DO=0
35606 REM *** IMAGE_ARRAY_CTR=0 ! [SSP-208525]
35607 DIM IMAGE_ARRAY$[9999] ! [SSP-211250] [SSP-208525]
35610 IF NOT(NUL(CURRENT_DIR$)) THEN {
35620 SELECT FILE_PATH$ FROM "[wdx]"+CURRENT_DIR$
35625 IF NOT(NUL(FN_CHECK_PATH$(FILE_PATH$))) THEN {
35627 IMAGES_TO_DO+=1
35630 IMAGE_ARRAY$[IMAGES_TO_DO]=FILE_PATH$ ! [SSP-208525]
35635  }
35640 NEXT RECORD 
35645 IMAGES_TO_DO.CTL'VALUE=IMAGES_TO_DO
35650  }
35660 REFRESH_FLG=1
35695 RETURN 
35699 ! *******************************************************
35700 EXIT:! Exit button pressed, are we ready to leave
35715 IF NOT(NUL(SCAN_WINDOW_CONTENT$)) THEN MSGBOX MSG("ILGFUN_21"),MSG("ILGFUN_22"),"?,CANCEL",_ANS$; IF _ANS$="CANCEL" THEN RETURN 
35720 ERASE SCAN_WINDOW_CONTENT$,ERR=*NEXT ! [SSP-209865]-remove the viewed image from the server
35780 CMD_STR$="END"
35795 RETURN 
35799 ! ****************************************************
35800 DELETE_IMAGE:! Delete the current image file from the PC
35810 ERASE SCAN_WINDOW_CONTENT$,ERR=*NEXT ! SSP 220069
35890 SCAN_WINDOW_CONTENT$=""; GOSUB SETUP_SCAN_WINDOW
35892 IF LAST_BUTTON_USED=NEXT_IMAGE.CTL THEN ERASE NEXT_IMAGE_SOURCE$,ERR=*PROCEED; NEXT_IMAGE_SOURCE$=""; GOSUB COUNT_IMAGES_TO_DO ! If from NEXT_IMAGE, remove the file now that we added it, recount in case new ones came in
35893 GOSUB ADJUST_ARRAY_PTR ! [SSP-208525]
35895 RETURN 
35899 ! *************************************************************
35900 PREVIOUS_IMAGE:! [SSP-208525]-routine to display the previous image
35905 IF NOT(NUL(SCAN_WINDOW_CONTENT$)) THEN MSGBOX MSG("ILGFUN_21"),MSG("ILGFUN_22"),"?,CANCEL",_ANS$; IF _ANS$="CANCEL" THEN GOTO SET_TO_CORRECT_FIELD
35907 ERASE SCAN_WINDOW_CONTENT$,ERR=*NEXT
35910 TEMP_PATH$=""
35912 IMAGE_ARRAY_CTR=IMAGE_ARRAY_CTR-1
35914 IF IMAGE_ARRAY_CTR<1 THEN IMAGE_ARRAY_CTR=IMAGES_TO_DO
35916 TEMP_PATH$=IMAGE_ARRAY$[IMAGE_ARRAY_CTR]
35920 IF NUL(TEMP_PATH$) THEN MSGBOX MSG("ILGSCN_13"),MSG("MB_ATTN"),"I"; GOTO 35995
35925 IMAGE_PATH$=TEMP_PATH$; TEMP_PATH$="[wdx]"+CURRENT_DIR$+"\"+TEMP_PATH$
35935 CALL "ILGFUN;BUILD_IMAGE_PATH",ERR=*NEXT,DOC_TYPE$,IMAGE_PATH$,IMAGE_FILE_NAME$,IMAGE_DESC$,IMAGE_DIR$,IMAGE_FORMAT$,SCANNER_OPTIONS$
35950 CALL "ILGFUN;TRANSFER_FILE",TEMP_PATH$,IMAGE_PATH$
35952 NEXT_IMAGE_SOURCE$=TEMP_PATH$
35953 REM *** GOSUB COUNT_IMAGES_TO_DO ! always count in case new ones came in
35965 CALL "ILGFUN;VIEW_IMAGE_IN_WINDOW",IMAGE_PATH$,"","",COLUMN,LINE,WIDTH,HEIGHT,SCAN_WINDOW_HANDLE; SCAN_WINDOW_CONTENT$=IMAGE_PATH$
35970 LAST_BUTTON_USED=NEXT_IMAGE.CTL
35980 GOSUB SET_TO_CORRECT_FIELD
35995 RETURN 
35999 ! *******************************************************
36000 ADJUST_ARRAY_PTR:! [SSP-208525]-added routine
36001 ! This routine will remove the current image from the temp array once the
36002 ! image has been added to a document or deleted.
36070 IMAGE_ARRAY_CTR=IMAGE_ARRAY_CTR-1
36080 IF IMAGE_ARRAY_CTR<1 THEN IMAGE_ARRAY_CTR=IMAGES_TO_DO
36090 IF IMAGE_ARRAY_CTR>IMAGES_TO_DO THEN IMAGE_ARRAY_CTR=1
36195 RETURN 
39999 ! *******************************************************
40000 SET_WINDOW_SIZE:! Set WIDTH and HEIGHT based on already set COLUMN and LINE to fill out the rest of the window
40010 CALL "*INFO;GETWINDOWVIEWPORT",PANEL_WIDE,PANEL_HIGH
40020 WIDTH=(PANEL_WIDE-COLUMN)
40030 HEIGHT=(PANEL_HIGH-LINE)
40095 RETURN 
40099 ! *************************************************************
40100 WINDOW_RESIZE:! Window was resized
40110 IF SCAN_WINDOW_HANDLE=0 THEN RETURN 
40120 GOSUB SET_WINDOW_SIZE
40130 CALL "[WDX]*OCX;REDO_OBJECT_WINDOW",COLUMN,LINE,WIDTH,HEIGHT,SCAN_WINDOW_HANDLE
40195 RETURN 
40199 ! *************************************
40200 SET_FIELDS_ON_PANEL:! show the needed fields to do and set _FIRST_FIELDrearrange as needed
40210 CALL "*wingrp;hide",FIELDS.GRP$; TAG_1$="",TAG_2$="",TAG_3$="",TAG_4$=""; REFRESH_FLG=1
40220 SWITCH DOC_TYPE$
40230 CASE "00"; TAG_1$=MSG("QUOTE_NUM")+":"; CALL "*wingrp;SHOW",QUOTE_NUM.GRP$; QUOTE_NUM.CTL'LINE=6,CT=QUOTE_NUM.CTL+3000,CT'LINE=5.85,QUOTE_NUM_NEXT_ID=VENDOR.CTL; _FIRST_FIELD=QUOTE_NUM.CTL ! SSP#252842
40240 TAG_2$=MSG("VENDOR")+":"; CALL "*wingrp;SHOW",VENDOR.GRP$; VENDOR.CTL'LINE=8,CT=VENDOR.CTL+3000,CT'LINE=7.85,%VEND_NAME.CTL'LINE=8.2,VENDOR_NEXT_ID=VEND_QUOTE_NUM.CTL ! SSP#252842
40250 TAG_3$=MSG("VEND_QUOTE")+":"; CALL "*wingrp;SHOW",VEND_QUOTE_NUM.GRP$; VEND_QUOTE_NUM.CTL'LINE=10,VQN_NEXT_ID=VERSION_LABEL.CTL
40260 TAG_4$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=12,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40270 BREAK
40280 ! ***************************
40290 CASE "01"; TAG_1$=MSG("PO_NUM")+":"; CALL "*wingrp;SHOW",PORDER.GRP$; PORDER.CTL'LINE=6,CT=PORDER.CTL+3000,CT'LINE=5.85,PORDER_NEXT_ID=VENDOR.CTL,_FIRST_FIELD=PORDER.CTL ! SSP#252842
40300 TAG_2$=MSG("VENDOR")+":"; CALL "*wingrp;SHOW",VENDOR.GRP$; VENDOR.CTL'LINE=8,CT=VENDOR.CTL+3000,CT'LINE=7.85,%VEND_NAME.CTL'LINE=8.2,VENDOR_NEXT_ID=VEND_INVOICE.CTL ! SSP#252842
40310 TAG_3$=MSG("VEND_INV")+":"; CALL "*wingrp;SHOW",VEND_INVOICE.GRP$; VEND_INVOICE.CTL'LINE=10,VQN_NEXT_ID=VERSION_LABEL.CTL
40320 TAG_4$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=12,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40330 BREAK
40340 ! ******************************
40350 CASE "02"; TAG_1$=MSG("PO_NUM")+":"; CALL "*wingrp;SHOW",PORDER.GRP$; PORDER.CTL'LINE=6,CT=PORDER.CTL+3000,CT'LINE=5.85,PORDER_NEXT_ID=VERSION_LABEL.CTL
40360 TAG_2$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=8,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40370 BREAK
40380 ! ***************************************
40390 CASE "03"; TAG_1$=MSG("PO_NUM")+":"; CALL "*wingrp;SHOW",PORDER.GRP$; PORDER.CTL'LINE=6,CT=PORDER.CTL+3000,CT'LINE=5.85,PORDER_NEXT_ID=VERSION_LABEL.CTL
40400 TAG_2$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=8,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40410 BREAK
40420 ! *********************************************
40430 CASE "04"; TAG_1$=MSG("ORDER_NUM")+":"; CALL "*wingrp;SHOW",ORDER.GRP$; ORDER.CTL'LINE=6,CT=ORDER.CTL+3000,CT'LINE=5.85,ORDER_NEXT_ID=VERSION_LABEL.CTL
40440 TAG_2$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=8,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40450 BREAK
40460 ! ****************************************
40470 CASE "05"; TAG_1$=MSG("CUSTOMER")+":"; CALL "*wingrp;SHOW",CUSTOMER.GRP$; CUSTOMER.CTL'LINE=6,CT=CUSTOMER.CTL+3000,CT'LINE=5.85,CUSTOMER_NEXT_ID=CHECK_REF.CTL,_FIRST_FIELD=CUSTOMER.CTL,%CUST_NAME.CTL'LINE=6.2 ! SSP#252842
40480 TAG_2$=MSG("CHECK_REF")+":"; CALL "*wingrp;SHOW",CHECK_REF.GRP$; CHECK_REF.CTL'LINE=8,CHECK_REF_NEXT_ID=VERSION_LABEL.CTL
40490 TAG_3$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=10,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40500 BREAK
40510 ! ******************************************
40520 CASE "06"; TAG_1$=MSG("CUSTOMER")+":"; CALL "*wingrp;SHOW",CUSTOMER.GRP$; CUSTOMER.CTL'LINE=6,CT=CUSTOMER.CTL+3000,CT'LINE=5.85,CUSTOMER_NEXT_ID=VERSION_LABEL.CTL
40530 TAG_2$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=8,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40540 BREAK
40550 ! *********************************************
40560 CASE "07","08"; TAG_1$=MSG("PO_NUM")+":"; CALL "*wingrp;SHOW",PORDER.GRP$; PORDER.CTL'LINE=6,CT=PORDER.CTL+3000,CT'LINE=5.85,PORDER_NEXT_ID=CUSTOMER.CTL,_FIRST_FIELD=PORDER.CTL ! SSP#252842
40570 TAG_2$=MSG("CUSTOMER")+":"; CALL "*wingrp;SHOW",CUSTOMER.GRP$; CUSTOMER.CTL'LINE=8,CT=CUSTOMER.CTL+3000,CT'LINE=7.85,%CUST_NAME.CTL'LINE=8.2,CUSTOMER_NEXT_ID=ITEM_CODE.CTL ! SSP#252842 
40580 TAG_3$=MSG("ITEM_CODE")+":"; CALL "*wingrp;SHOW",ITEM_CODE.GRP$; ITEM_CODE.CTL'LINE=10,CT=ITEM_CODE.CTL+3000,CT'LINE=9.85,%ITEM_DESC.CTL'LINE=10.2,ITEM_CODE_NEXT_ID=VERSION_LABEL.CTL
40590 TAG_4$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=12,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40600 BREAK
40610 ! **********************************
40620 CASE "09"; TAG_1$=MSG("CUSTOMER")+":"; CALL "*wingrp;SHOW",CUSTOMER.GRP$; CUSTOMER.CTL'LINE=6,CT=CUSTOMER.CTL+3000,CT'LINE=5.85,%CUST_NAME.CTL'LINE=6.2,CUSTOMER_NEXT_ID=ITEM_CODE.CTL ! SSP#252842
40630 TAG_2$=MSG("ITEM_CODE")+":"; CALL "*wingrp;SHOW",ITEM_CODE.GRP$; ITEM_CODE.CTL'LINE=8,CT=ITEM_CODE.CTL+3000,CT'LINE=7.85,%ITEM_DESC.CTL'LINE=8.2,ITEM_CODE_NEXT_ID=VERSION_LABEL.CTL
40640 TAG_3$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=10,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40650 BREAK
40660 ! *************************************
40670 CASE "10","14"; TAG_1$=MSG("CUSTOMER")+":"; CALL "*wingrp;SHOW",CUSTOMER.GRP$; CUSTOMER.CTL'LINE=6,CT=CUSTOMER.CTL+3000,CT'LINE=5.85,CUSTOMER_NEXT_ID=VERSION_LABEL.CTL
40680 TAG_2$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=8,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40690 BREAK
40700 ! ******************************************
40710 CASE "11"; TAG_1$=MSG("VENDOR")+":"; CALL "*wingrp;SHOW",VENDOR.GRP$; VENDOR.CTL'LINE=6,CT=VENDOR.CTL+3000,CT'LINE=5.85,%VEND_NAME.CTL'LINE=6.2; VENDOR_NEXT_ID=VERSION_LABEL.CTL
40720 TAG_2$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=8,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40730 BREAK
40740 ! ***************************************
40750 CASE "12"; TAG_1$=MSG("ORDER_NUM")+":"; CALL "*wingrp;SHOW",ORDER.GRP$; ORDER.CTL'LINE=6,CT=ORDER.CTL+3000,CT'LINE=5.85,ORDER_NEXT_ID=VERSION_LABEL.CTL
40760 TAG_2$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=8,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40770 BREAK
40780 ! ************************************
40790 CASE "13"; TAG_1$=MSG("CUSTOMER")+":"; CALL "*wingrp;SHOW",CUSTOMER.GRP$; CUSTOMER.CTL'LINE=6,CT=CUSTOMER.CTL+3000,CT'LINE=5.85,CUSTOMER_NEXT_ID=CUST_PO.CTL,_FIRST_FIELD=CUSTOMER.CTL,%CUST_NAME.CTL'LINE=6.2 ! SSP#252842
40800 TAG_2$=MSG("CUST_PO")+":"; CALL "*wingrp;SHOW",CUST_PO.GRP$; CUST_PO.CTL'LINE=8,CT=CUST_PO.CTL+3000,CT'LINE=7.85,CUST_PO_NEXT_ID=VERSION_LABEL.CTL
40810 TAG_3$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=10,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40820 BREAK
40830 ! ************************************
40840 CASE "A5"; TAG_1$=MSG("QUOTE_NUM")+":"; CALL "*wingrp;SHOW",QUOTE_NUM.GRP$; QUOTE_NUM.CTL'LINE=6,CT=QUOTE_NUM.CTL+3000,CT'LINE=5.85,QUOTE_NUM_NEXT_ID=VERSION_LABEL.CTL
40850 TAG_2$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=8,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40860 BREAK
40870 ! *************************************************
40880 ! WO 239078 - Show fields for indexing a receiving report
40890 CASE "15"; TAG_1$=MSG("PO_NUM")+":"; CALL "*wingrp;SHOW",PORDER.GRP$; PORDER.CTL'LINE=6,CT=PORDER.CTL+3000,CT'LINE=5.85,PORDER_NEXT_ID=RECV_REPORT.CTL,_FIRST_FIELD=PORDER.CTL ! SSP#252842
40900 TAG_2$=MSG("RECV_RPT_S")+":"; CALL "*wingrp;SHOW",RECV_REPORT.GRP$; RECV_REPORT.CTL'LINE=8,CT=RECV_REPORT.CTL+3000,CT'LINE=7.85,RECV_REPORT_NEXT_ID=VERSION_LABEL.CTL
40910 TAG_3$=MSG("VER_LBL")+":"; VERSION_LABEL.CTL'LINE=10,VER_LAB_NEXT_ID=ADD_IMAGE.CTL
40920 BREAK
40930 ! *************************************
40940 END SWITCH 
40950 RETURN 
40960 ! ***************************************
50000 FORMAT_RECV_REPORT:
50030 XX=NUM(RECV_REPORT$,ERR=*NEXT),RECV_REPORT$=STR(XX:"00000"); GOTO 50045
50040 RECV_REPORT$=PAD(RECV_REPORT$,5)
50045 RECV_REPORT.CTL'VALUE$=RECV_REPORT$
50095 RETURN 
50099 ! ***************************************
56000 REM "200933-I/L - Scanned in images show in 2 places on the server
56002 REM "203361-In Image Library I get errors when I try to add and keep    
56004 REM "211250-Problem with more than 99 images within a directory         
56005 ! "212524-User sko is unable to have the Image Library I/L P1         
56006 ! "       panel come up on her pe."
56008 REM "220069-Still having issue of some scanned images saving into tf2d. 
56009 REM "230830-Create a new Image Library type, Customer Tax Form.
56010 REM "232205-Getting providex Error while scanning images
56011 REM "236693-Form Proof being replaced on old order with new form proof  
56012 REM "239078-Receiving Report form, flexible format/printing programs,   
56013 REM "241431-We are having the same issue now with the Item Sample that  
56014 REM "247462-ILGSCN, vendor invoice, enter PO, vendor code is populated  
56015 REM "251100-PE(014, ILGFUN-2510) when trying to view an order in order  
56016 REM "271773-Program: ILGSCN Suggest adding a query button on the        
56017 REM "291699-File Naming in I/L - it names the Form Proof Copy and Form  
56018 REM "307190-Improve performance in Image Library                        
56019 REM "307224-Error when saving certain document types in Image Library   
56020 REM "307303-ILGSCN screen positioning issue                             
