0010 ! FMGSHH - File Maintenance Program for FMP1_CustDef (FMP1)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Jun. 28, 2002 13:29
0030 ! ************************************************************************
0035 REM "5.7 - 07/10/09 - 10.991111 - tma - SSP# 226935
0037 REM "226935-Panel FMGSHH there are 3 fields that can not be accessed    
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! SSP#226935
0060 PROCESS "FMGSHH","../ARG/AR.EN" ! SSP#226935
0090 EXIT ! SSP#226935
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=2,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0155 FMPIOL$="IOLIST D_CONSTANT$:[CHR(1,SEP=SEP)],CUST_DIV$:[CHR(2,SEP=SEP)],CUST_CODE$:[CHR(8,SEP=SEP)],FIND_FEE_TYPE$:[CHR(1,SEP=SEP)],FIND_FEE_VEND_DIV$:[CHR(2,SEP=SEP)],FIND_FEE_VEND_CODE$:[CHR(8,SEP=SEP)],UNIQUE_PO_REQ$:[CHR(1,SEP=SEP)],FMS$:[CHR(1,SEP=SEP)],CUST_PO_REQ$:[CHR(1,SEP=SEP)],PRINT_SALES_ORDER$:[CHR(1,SEP=SEP)],PRINT_ACKNOWLEDGE$:[CHR(1,SEP=SEP)],FOB_CODE$:[CHR(1,SEP=SEP)],HOW_TO_SHIP_CODE$:[CHR(1,SEP=SEP)],INSIDE_DELIVERY$:[CHR(15,SEP=SEP)],SHIP_VIA_CODE$:[CHR(1,SEP=SEP)],DFLT_CNT_CYCLE$:[CHR(2,SEP=SEP)],UNUSED_1$:[CHR(1,SEP=SEP)],DETAIL_SHPMNT_REPORT$:[CHR(1,SEP=SEP)],FRT_MARKUP_TABLE$:[CHR(2,SEP=SEP)],CURR_FY$:[CHR(4,SEP=SEP)],CURR_ACCTPD$:[CHR(2,SEP=SEP)],NUM_PER_FMZ_RETAIN$:[CHR(2,SEP=SEP)],NUM_YR_STAT_RETAIN$:[CHR(1,SEP=SEP)],RON_GRAPH_TYPE$:[CHR(1,SEP=SEP)],UNUSED_2$:[CHR(4,SEP=SEP)],CONS_PICK_LIST$:[CHR(1,SEP=SEP)],FORM_SECURITY$:[CHR(20,SEP=SEP)],OLS_DISP_EST_SHPDATE$:[CHR(1,SEP=SEP)],OLS_DISP_LST_RELDATE$:[CHR(1,SEP=SEP)],OLS_DISP_AVAIL$:[CHR(1,SEP=SEP)],FOREIGN_CURR_CODE$:[CHR(3,SEP=SEP)],FRT_MARKUP_I_TYPE$:[CHR(2,SEP=SEP)],FRT_MARKUP_R_TYPE$:[CHR(2,SEP=SEP)],FRT_MARKUP_W_TYPE$:[CHR(2,SEP=SEP)],GB_NO_OVERRUNS$:[CHR(1,SEP=SEP)],UNUSED_3$:[CHR(6,SEP=SEP)],DFLT_SUG_QTY_RON_STK$:[CHR(1,SEP=SEP)],ALWAYS_LOWEST_QBG$:[CHR(1,SEP=SEP)],RON_FORMAT$:[CHR(1,SEP=SEP)],PRIMARY_CUST_CONT$:[CHR(3,SEP=SEP)],STOCK_ITEMS_FMS$:[CHR(1,SEP=SEP)],SUMMARY_BILL_FOR_IRW$:[CHR(4,SEP=SEP)],SUMMARY_BILL_PRINT$:[CHR(4,SEP=SEP)],UNUSED_4$:[CHR(3,SEP=SEP)],MULTIPLE_SHIP$:[CHR(1,SEP=SEP)],DFLT_SHIP_CODE$:[CHR(4,SEP=SEP)],UNUSED_5$:[CHR(1,SEP=SEP)],CUST_GROUP_CODE$:[CHR(3,SEP=SEP)],SUBTRACT_COMMITTED$:[CHR(1,SEP=SEP)],INCLUDE_DIST_INV$:[CHR(1,SEP=SEP)],RON_CUST_NOTE$:[CHR(60,SEP=SEP)],FMS_PRICING$:[CHR(1,SEP=SEP)],DFLT_SUGG_RO_RON$:[CHR(1,SEP=SEP)],UNUSED_6$:[CHR(5,SEP=SEP)],OLS_DFLT_NEEDEDBY$:[CHR(1,SEP=SEP)],OLS_ELIM_BILL_PRICE$:[CHR(1,SEP=SEP)],OLS_ELIM_COST_USAGE$:[CHR(1,SEP=SEP)],OLS_NEXT_RELEASE_NUM$:[CHR(9,SEP=SEP)],OLS_REL_NUM_FORMAT$:[CHR(10,SEP=SEP)],OLS_USE_NUM_DIST_REQ$:[CHR(1,SEP=SEP)],OLS_FORCE_ATTENTION$:[CHR(1,SEP=SEP)],REDUCE_ONHAND_BY_COMM$:[CHR(1,SEP=SEP)],PRODUCT_CODE$:[CHR(3,SEP=SEP)],SALESPERSON$:[CHR(4,SEP=SEP)],IMMEDIATE_PRINT$:[CHR(1,SEP=SEP)],COST_CODE_FORMAT$:[CHR(1,SEP=SEP)],ENTER_DEPT_BY_FORM$:[CHR(1,SEP=SEP)],STD_INV_VALUE_METH$:[CHR(1,SEP=SEP)],STD_WHSE$:[CHR(4,SEP=SEP)],OLS_ALLOW_ADD_RON$:[CHR(1,SEP=SEP)],KIT_COMPNENTS$:[CHR(1,SEP=SEP)],TAX_ITEMS_WHEN$:[CHR(SEP,SIZ=1)],FIND_FEE_RATE,FMS_PRCNT_SELL_PRICE,GB_REBATE_BAL,UNUSED_8"
0156 FMPIOL$=CPL(FMPIOL$)
0157 FMPKEY$="IOLIST D_CONSTANT$:[CHR(1,SEP=SEP)],CUST_DIV$:[CHR(2,SEP=SEP)],CUST_CODE$:[CHR(8,SEP=SEP)]"
0158 FMPKEY$=CPL(FMPKEY$)
0159 FMPPFX$="D"
0160 _FILE_NAME$="FMP"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=FMPIOL$,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=FMPIOL$,REC=_CUR$)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=2
0430 DIM _KEYS$[1:2]; _KEYS$[1]="D_CONSTANT$",_KEYS$[2]="CUSTOMER$"
0440 _KEY1=2
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; READ (_FIL_NO,KEY=D_CONSTANT$,ERR=*RETURN)
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0700 ! 700 - Set up tabbing between folders
0710 INIT_FOLDER:
0720 GOSUB ENABLE_GROUPS
0730 IF _ENABLE_FLG<>_KEY1 THEN IF TAB_FLG$="<" THEN NEXT_ID=_LAST_TAB ELSE NEXT_ID=_FIRST_TAB
0740 EXIT 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$
1050 READ DATA FROM REC(FMPKEY$,ERR=*NEXT) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 NEXT_FOLDER=_FIRST_FOLDER
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(FMPKEY$,ERR=*NEXT) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF _KEY$(1,1)<>FMPPFX$ THEN GOTO END_OF_FILE
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE)
2231 IF _KEY$(1,1)<>FMPPFX$ THEN GOTO START_OF_FILE
2232 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 READ (_FIL_NO,KEY=D_CONSTANT$,ERR=*NEXT)
2431 _KEY$=KEY(_FIL_NO,ERR=NO_FIRST)
2440 IF _KEY$(1,1)<>FMPPFX$ THEN GOTO NO_FIRST
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 READ (_FIL_NO,KEY=D_CONSTANT$+$FE$,ERR=*NEXT)
2640 _KEY$=KEP(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=FMPKEY$,ERR=*NEXT ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3061 CUSTOMER$=CUST_DIV$+CUST_CODE$
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUSTOMER.CTL,_FIRST_FIELD=CURR_FY.CTL,_FIRST_FOLDER=FLDR.FMGSHB.1.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 FIND_FEE_RATE$=STR(FIND_FEE_RATE)
10030 FMS_PRCNT_SELL_PRICE$=STR(FMS_PRCNT_SELL_PRICE)
10040 GB_REBATE_BAL$=STR(GB_REBATE_BAL)
10050 UNUSED_8$=STR(UNUSED_8)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="FIND_FEE_RATE",_X=FIND_FEE_RATE.CTL,FIND_FEE_RATE=NUM(FIND_FEE_RATE$,ERR=NON_NUMERIC)
11030 _X$="FMS_PRCNT_SELL_PRICE",_X=FMS_PRCNT_SELL_PRICE.CTL,FMS_PRCNT_SELL_PRICE=NUM(FMS_PRCNT_SELL_PRICE$,ERR=NON_NUMERIC)
11040 _X$="GB_REBATE_BAL",_X=GB_REBATE_BAL.CTL,GB_REBATE_BAL=NUM(GB_REBATE_BAL$,ERR=NON_NUMERIC)
11050 _X$="UNUSED_8",_X=UNUSED_8.CTL,UNUSED_8=NUM(UNUSED_8$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN D_CONSTANT$="D"
13030 IF _CLR_FLG$="R" THEN CUST_DIV$=""
13040 IF _CLR_FLG$="R" THEN CUST_CODE$=""
13050 FIND_FEE_TYPE$=""
13060 FIND_FEE_VEND_DIV$=""
13070 FIND_FEE_VEND_CODE$=""
13080 UNIQUE_PO_REQ$=""
13090 FMS$=""
13100 CUST_PO_REQ$=""
13110 PRINT_SALES_ORDER$=""
13120 PRINT_ACKNOWLEDGE$=""
13130 FOB_CODE$=""
13140 HOW_TO_SHIP_CODE$=""
13150 INSIDE_DELIVERY$=""
13160 SHIP_VIA_CODE$=""
13170 DFLT_CNT_CYCLE$=""
13180 UNUSED_1$=""
13190 DETAIL_SHPMNT_REPORT$=""
13200 FRT_MARKUP_TABLE$=""
13210 CURR_FY$=""
13220 CURR_ACCTPD$=""
13230 NUM_PER_FMZ_RETAIN$=""
13240 NUM_YR_STAT_RETAIN$=""
13250 RON_GRAPH_TYPE$=""
13260 UNUSED_2$=""
13270 CONS_PICK_LIST$=""
13280 FORM_SECURITY$=""
13290 OLS_DISP_EST_SHPDATE$=""
13300 OLS_DISP_LST_RELDATE$=""
13310 OLS_DISP_AVAIL$=""
13320 FOREIGN_CURR_CODE$=""
13330 FRT_MARKUP_I_TYPE$=""
13340 FRT_MARKUP_R_TYPE$=""
13350 FRT_MARKUP_W_TYPE$=""
13360 GB_NO_OVERRUNS$=""
13370 UNUSED_3$=""
13380 DFLT_SUG_QTY_RON_STK$=""
13390 ALWAYS_LOWEST_QBG$=""
13400 RON_FORMAT$=""
13410 PRIMARY_CUST_CONT$=""
13420 STOCK_ITEMS_FMS$=""
13430 SUMMARY_BILL_FOR_IRW$=""
13440 SUMMARY_BILL_PRINT$=""
13450 UNUSED_4$=""
13460 MULTIPLE_SHIP$=""
13470 DFLT_SHIP_CODE$=""
13480 UNUSED_5$=""
13490 CUST_GROUP_CODE$=""
13500 SUBTRACT_COMMITTED$=""
13510 INCLUDE_DIST_INV$=""
13520 RON_CUST_NOTE$=""
13530 FMS_PRICING$=""
13540 DFLT_SUGG_RO_RON$=""
13550 UNUSED_6$=""
13560 OLS_DFLT_NEEDEDBY$=""
13570 OLS_ELIM_BILL_PRICE$=""
13580 OLS_ELIM_COST_USAGE$=""
13590 OLS_NEXT_RELEASE_NUM$=""
13600 OLS_REL_NUM_FORMAT$=""
13610 OLS_USE_NUM_DIST_REQ$=""
13620 OLS_FORCE_ATTENTION$=""
13630 REDUCE_ONHAND_BY_COMM$=""
13640 PRODUCT_CODE$=""
13650 SALESPERSON$=""
13660 IMMEDIATE_PRINT$=""
13670 COST_CODE_FORMAT$=""
13680 ENTER_DEPT_BY_FORM$=""
13690 STD_INV_VALUE_METH$=""
13700 STD_WHSE$=""
13710 OLS_ALLOW_ADD_RON$=""
13720 KIT_COMPNENTS$=""
13730 FIND_FEE_RATE=0
13740 FMS_PRCNT_SELL_PRICE=0
13750 GB_REBATE_BAL=0
13760 UNUSED_8=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=CUSTOMER.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(75,"N")
15030 IF _ORIG.D_CONSTANT$=_CUR.D_CONSTANT$ OR D_CONSTANT$=_CUR.D_CONSTANT$ THEN GOTO *NEXT ELSE IF _ORIG.D_CONSTANT$=D_CONSTANT$ THEN _CHG2$=_CHG2$+SEP+"D_constant = "+_CUR.D_CONSTANT$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"D_constant = "+_CUR.D_CONSTANT$
15040 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+"CUST_DIV = "+_CUR.CUST_DIV$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"CUST_DIV = "+_CUR.CUST_DIV$
15050 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+"CUST_CODE = "+_CUR.CUST_CODE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"CUST_CODE = "+_CUR.CUST_CODE$
15060 IF _ORIG.FIND_FEE_TYPE$=_CUR.FIND_FEE_TYPE$ OR FIND_FEE_TYPE$=_CUR.FIND_FEE_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_TYPE$=FIND_FEE_TYPE$ THEN _CHG2$=_CHG2$+SEP+"FIND_FEE_TYPE = "+_CUR.FIND_FEE_TYPE$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FIND_FEE_TYPE = "+_CUR.FIND_FEE_TYPE$
15070 IF _ORIG.FIND_FEE_VEND_DIV$=_CUR.FIND_FEE_VEND_DIV$ OR FIND_FEE_VEND_DIV$=_CUR.FIND_FEE_VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_VEND_DIV$=FIND_FEE_VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+"FIND_FEE_VEND_DIV = "+_CUR.FIND_FEE_VEND_DIV$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FIND_FEE_VEND_DIV = "+_CUR.FIND_FEE_VEND_DIV$
15080 IF _ORIG.FIND_FEE_VEND_CODE$=_CUR.FIND_FEE_VEND_CODE$ OR FIND_FEE_VEND_CODE$=_CUR.FIND_FEE_VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_VEND_CODE$=FIND_FEE_VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+"FIND_FEE_VEND_CODE = "+_CUR.FIND_FEE_VEND_CODE$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FIND_FEE_VEND_CODE = "+_CUR.FIND_FEE_VEND_CODE$
15090 IF _ORIG.UNIQUE_PO_REQ$=_CUR.UNIQUE_PO_REQ$ OR UNIQUE_PO_REQ$=_CUR.UNIQUE_PO_REQ$ THEN GOTO *NEXT ELSE IF _ORIG.UNIQUE_PO_REQ$=UNIQUE_PO_REQ$ THEN _CHG2$=_CHG2$+SEP+"UNIQUE_PO_REQ = "+_CUR.UNIQUE_PO_REQ$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"UNIQUE_PO_REQ = "+_CUR.UNIQUE_PO_REQ$
15100 IF _ORIG.FMS$=_CUR.FMS$ OR FMS$=_CUR.FMS$ THEN GOTO *NEXT ELSE IF _ORIG.FMS$=FMS$ THEN _CHG2$=_CHG2$+SEP+"FMS = "+_CUR.FMS$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FMS = "+_CUR.FMS$
15110 IF _ORIG.CUST_PO_REQ$=_CUR.CUST_PO_REQ$ OR CUST_PO_REQ$=_CUR.CUST_PO_REQ$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_PO_REQ$=CUST_PO_REQ$ THEN _CHG2$=_CHG2$+SEP+"CUST_PO_REQ = "+_CUR.CUST_PO_REQ$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"CUST_PO_REQ = "+_CUR.CUST_PO_REQ$
15120 IF _ORIG.PRINT_SALES_ORDER$=_CUR.PRINT_SALES_ORDER$ OR PRINT_SALES_ORDER$=_CUR.PRINT_SALES_ORDER$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_SALES_ORDER$=PRINT_SALES_ORDER$ THEN _CHG2$=_CHG2$+SEP+"PRINT_SALES_ORDER = "+_CUR.PRINT_SALES_ORDER$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"PRINT_SALES_ORDER = "+_CUR.PRINT_SALES_ORDER$
15130 IF _ORIG.PRINT_ACKNOWLEDGE$=_CUR.PRINT_ACKNOWLEDGE$ OR PRINT_ACKNOWLEDGE$=_CUR.PRINT_ACKNOWLEDGE$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_ACKNOWLEDGE$=PRINT_ACKNOWLEDGE$ THEN _CHG2$=_CHG2$+SEP+"PRINT_ACKNOWLEDGE = "+_CUR.PRINT_ACKNOWLEDGE$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"PRINT_ACKNOWLEDGE = "+_CUR.PRINT_ACKNOWLEDGE$
15140 IF _ORIG.FOB_CODE$=_CUR.FOB_CODE$ OR FOB_CODE$=_CUR.FOB_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.FOB_CODE$=FOB_CODE$ THEN _CHG2$=_CHG2$+SEP+"FOB_CODE = "+_CUR.FOB_CODE$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FOB_CODE = "+_CUR.FOB_CODE$
15150 IF _ORIG.HOW_TO_SHIP_CODE$=_CUR.HOW_TO_SHIP_CODE$ OR HOW_TO_SHIP_CODE$=_CUR.HOW_TO_SHIP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.HOW_TO_SHIP_CODE$=HOW_TO_SHIP_CODE$ THEN _CHG2$=_CHG2$+SEP+"HOW_TO_SHIP_CODE = "+_CUR.HOW_TO_SHIP_CODE$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"HOW_TO_SHIP_CODE = "+_CUR.HOW_TO_SHIP_CODE$
15160 IF _ORIG.INSIDE_DELIVERY$=_CUR.INSIDE_DELIVERY$ OR INSIDE_DELIVERY$=_CUR.INSIDE_DELIVERY$ THEN GOTO *NEXT ELSE IF _ORIG.INSIDE_DELIVERY$=INSIDE_DELIVERY$ THEN _CHG2$=_CHG2$+SEP+"INSIDE_DELIVERY = "+_CUR.INSIDE_DELIVERY$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"INSIDE_DELIVERY = "+_CUR.INSIDE_DELIVERY$
15170 IF _ORIG.SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$ OR SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_VIA_CODE$=SHIP_VIA_CODE$ THEN _CHG2$=_CHG2$+SEP+"SHIP_VIA_CODE = "+_CUR.SHIP_VIA_CODE$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"SHIP_VIA_CODE = "+_CUR.SHIP_VIA_CODE$
15180 IF _ORIG.DFLT_CNT_CYCLE$=_CUR.DFLT_CNT_CYCLE$ OR DFLT_CNT_CYCLE$=_CUR.DFLT_CNT_CYCLE$ THEN GOTO *NEXT ELSE IF _ORIG.DFLT_CNT_CYCLE$=DFLT_CNT_CYCLE$ THEN _CHG2$=_CHG2$+SEP+"DFLT_CNT_CYCLE = "+_CUR.DFLT_CNT_CYCLE$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"DFLT_CNT_CYCLE = "+_CUR.DFLT_CNT_CYCLE$
15190 IF _ORIG.UNUSED_1$=_CUR.UNUSED_1$ OR UNUSED_1$=_CUR.UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_1$=UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+"UNUSED_1 = "+_CUR.UNUSED_1$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"UNUSED_1 = "+_CUR.UNUSED_1$
15200 IF _ORIG.DETAIL_SHPMNT_REPORT$=_CUR.DETAIL_SHPMNT_REPORT$ OR DETAIL_SHPMNT_REPORT$=_CUR.DETAIL_SHPMNT_REPORT$ THEN GOTO *NEXT ELSE IF _ORIG.DETAIL_SHPMNT_REPORT$=DETAIL_SHPMNT_REPORT$ THEN _CHG2$=_CHG2$+SEP+"DETAIL_SHPMNT_REPORT = "+_CUR.DETAIL_SHPMNT_REPORT$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"DETAIL_SHPMNT_REPORT = "+_CUR.DETAIL_SHPMNT_REPORT$
15210 IF _ORIG.FRT_MARKUP_TABLE$=_CUR.FRT_MARKUP_TABLE$ OR FRT_MARKUP_TABLE$=_CUR.FRT_MARKUP_TABLE$ THEN GOTO *NEXT ELSE IF _ORIG.FRT_MARKUP_TABLE$=FRT_MARKUP_TABLE$ THEN _CHG2$=_CHG2$+SEP+"FRT_MARKUP_TABLE = "+_CUR.FRT_MARKUP_TABLE$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FRT_MARKUP_TABLE = "+_CUR.FRT_MARKUP_TABLE$
15220 IF _ORIG.CURR_FY$=_CUR.CURR_FY$ OR CURR_FY$=_CUR.CURR_FY$ THEN GOTO *NEXT ELSE IF _ORIG.CURR_FY$=CURR_FY$ THEN _CHG2$=_CHG2$+SEP+"CURR_FY = "+_CUR.CURR_FY$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"CURR_FY = "+_CUR.CURR_FY$
15230 IF _ORIG.CURR_ACCTPD$=_CUR.CURR_ACCTPD$ OR CURR_ACCTPD$=_CUR.CURR_ACCTPD$ THEN GOTO *NEXT ELSE IF _ORIG.CURR_ACCTPD$=CURR_ACCTPD$ THEN _CHG2$=_CHG2$+SEP+"CURR_ACCTPD = "+_CUR.CURR_ACCTPD$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"CURR_ACCTPD = "+_CUR.CURR_ACCTPD$
15240 IF _ORIG.NUM_PER_FMZ_RETAIN$=_CUR.NUM_PER_FMZ_RETAIN$ OR NUM_PER_FMZ_RETAIN$=_CUR.NUM_PER_FMZ_RETAIN$ THEN GOTO *NEXT ELSE IF _ORIG.NUM_PER_FMZ_RETAIN$=NUM_PER_FMZ_RETAIN$ THEN _CHG2$=_CHG2$+SEP+"NUM_PER_FMZ_RETAIN = "+_CUR.NUM_PER_FMZ_RETAIN$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"NUM_PER_FMZ_RETAIN = "+_CUR.NUM_PER_FMZ_RETAIN$
15250 IF _ORIG.NUM_YR_STAT_RETAIN$=_CUR.NUM_YR_STAT_RETAIN$ OR NUM_YR_STAT_RETAIN$=_CUR.NUM_YR_STAT_RETAIN$ THEN GOTO *NEXT ELSE IF _ORIG.NUM_YR_STAT_RETAIN$=NUM_YR_STAT_RETAIN$ THEN _CHG2$=_CHG2$+SEP+"NUM_YR_STAT_RETAIN = "+_CUR.NUM_YR_STAT_RETAIN$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"NUM_YR_STAT_RETAIN = "+_CUR.NUM_YR_STAT_RETAIN$
15260 IF _ORIG.RON_GRAPH_TYPE$=_CUR.RON_GRAPH_TYPE$ OR RON_GRAPH_TYPE$=_CUR.RON_GRAPH_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.RON_GRAPH_TYPE$=RON_GRAPH_TYPE$ THEN _CHG2$=_CHG2$+SEP+"RON_GRAPH_TYPE = "+_CUR.RON_GRAPH_TYPE$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"RON_GRAPH_TYPE = "+_CUR.RON_GRAPH_TYPE$
15270 IF _ORIG.UNUSED_2$=_CUR.UNUSED_2$ OR UNUSED_2$=_CUR.UNUSED_2$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_2$=UNUSED_2$ THEN _CHG2$=_CHG2$+SEP+"UNUSED_2 = "+_CUR.UNUSED_2$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"UNUSED_2 = "+_CUR.UNUSED_2$
15280 IF _ORIG.CONS_PICK_LIST$=_CUR.CONS_PICK_LIST$ OR CONS_PICK_LIST$=_CUR.CONS_PICK_LIST$ THEN GOTO *NEXT ELSE IF _ORIG.CONS_PICK_LIST$=CONS_PICK_LIST$ THEN _CHG2$=_CHG2$+SEP+"CONS_PICK_LIST = "+_CUR.CONS_PICK_LIST$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"CONS_PICK_LIST = "+_CUR.CONS_PICK_LIST$
15290 IF _ORIG.FORM_SECURITY$=_CUR.FORM_SECURITY$ OR FORM_SECURITY$=_CUR.FORM_SECURITY$ THEN GOTO *NEXT ELSE IF _ORIG.FORM_SECURITY$=FORM_SECURITY$ THEN _CHG2$=_CHG2$+SEP+"FORM_SECURITY = "+_CUR.FORM_SECURITY$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FORM_SECURITY = "+_CUR.FORM_SECURITY$
15300 IF _ORIG.OLS_DISP_EST_SHPDATE$=_CUR.OLS_DISP_EST_SHPDATE$ OR OLS_DISP_EST_SHPDATE$=_CUR.OLS_DISP_EST_SHPDATE$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_DISP_EST_SHPDATE$=OLS_DISP_EST_SHPDATE$ THEN _CHG2$=_CHG2$+SEP+"OLS_DISP_EST_SHPDATE = "+_CUR.OLS_DISP_EST_SHPDATE$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_DISP_EST_SHPDATE = "+_CUR.OLS_DISP_EST_SHPDATE$
15310 IF _ORIG.OLS_DISP_LST_RELDATE$=_CUR.OLS_DISP_LST_RELDATE$ OR OLS_DISP_LST_RELDATE$=_CUR.OLS_DISP_LST_RELDATE$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_DISP_LST_RELDATE$=OLS_DISP_LST_RELDATE$ THEN _CHG2$=_CHG2$+SEP+"OLS_DISP_LST_RELDATE = "+_CUR.OLS_DISP_LST_RELDATE$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_DISP_LST_RELDATE = "+_CUR.OLS_DISP_LST_RELDATE$
15320 IF _ORIG.OLS_DISP_AVAIL$=_CUR.OLS_DISP_AVAIL$ OR OLS_DISP_AVAIL$=_CUR.OLS_DISP_AVAIL$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_DISP_AVAIL$=OLS_DISP_AVAIL$ THEN _CHG2$=_CHG2$+SEP+"OLS_DISP_AVAIL = "+_CUR.OLS_DISP_AVAIL$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_DISP_AVAIL = "+_CUR.OLS_DISP_AVAIL$
15330 IF _ORIG.FOREIGN_CURR_CODE$=_CUR.FOREIGN_CURR_CODE$ OR FOREIGN_CURR_CODE$=_CUR.FOREIGN_CURR_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.FOREIGN_CURR_CODE$=FOREIGN_CURR_CODE$ THEN _CHG2$=_CHG2$+SEP+"FOREIGN_CURR_CODE = "+_CUR.FOREIGN_CURR_CODE$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FOREIGN_CURR_CODE = "+_CUR.FOREIGN_CURR_CODE$
15340 IF _ORIG.FRT_MARKUP_I_TYPE$=_CUR.FRT_MARKUP_I_TYPE$ OR FRT_MARKUP_I_TYPE$=_CUR.FRT_MARKUP_I_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.FRT_MARKUP_I_TYPE$=FRT_MARKUP_I_TYPE$ THEN _CHG2$=_CHG2$+SEP+"FRT_MARKUP_I_TYPE = "+_CUR.FRT_MARKUP_I_TYPE$,_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FRT_MARKUP_I_TYPE = "+_CUR.FRT_MARKUP_I_TYPE$
15350 IF _ORIG.FRT_MARKUP_R_TYPE$=_CUR.FRT_MARKUP_R_TYPE$ OR FRT_MARKUP_R_TYPE$=_CUR.FRT_MARKUP_R_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.FRT_MARKUP_R_TYPE$=FRT_MARKUP_R_TYPE$ THEN _CHG2$=_CHG2$+SEP+"FRT_MARKUP_R_TYPE = "+_CUR.FRT_MARKUP_R_TYPE$,_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FRT_MARKUP_R_TYPE = "+_CUR.FRT_MARKUP_R_TYPE$
15360 IF _ORIG.FRT_MARKUP_W_TYPE$=_CUR.FRT_MARKUP_W_TYPE$ OR FRT_MARKUP_W_TYPE$=_CUR.FRT_MARKUP_W_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.FRT_MARKUP_W_TYPE$=FRT_MARKUP_W_TYPE$ THEN _CHG2$=_CHG2$+SEP+"FRT_MARKUP_W_TYPE = "+_CUR.FRT_MARKUP_W_TYPE$,_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FRT_MARKUP_W_TYPE = "+_CUR.FRT_MARKUP_W_TYPE$
15370 IF _ORIG.GB_NO_OVERRUNS$=_CUR.GB_NO_OVERRUNS$ OR GB_NO_OVERRUNS$=_CUR.GB_NO_OVERRUNS$ THEN GOTO *NEXT ELSE IF _ORIG.GB_NO_OVERRUNS$=GB_NO_OVERRUNS$ THEN _CHG2$=_CHG2$+SEP+"GB_NO_OVERRUNS = "+_CUR.GB_NO_OVERRUNS$,_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"GB_NO_OVERRUNS = "+_CUR.GB_NO_OVERRUNS$
15380 IF _ORIG.UNUSED_3$=_CUR.UNUSED_3$ OR UNUSED_3$=_CUR.UNUSED_3$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_3$=UNUSED_3$ THEN _CHG2$=_CHG2$+SEP+"UNUSED_3 = "+_CUR.UNUSED_3$,_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"UNUSED_3 = "+_CUR.UNUSED_3$
15390 IF _ORIG.DFLT_SUG_QTY_RON_STK$=_CUR.DFLT_SUG_QTY_RON_STK$ OR DFLT_SUG_QTY_RON_STK$=_CUR.DFLT_SUG_QTY_RON_STK$ THEN GOTO *NEXT ELSE IF _ORIG.DFLT_SUG_QTY_RON_STK$=DFLT_SUG_QTY_RON_STK$ THEN _CHG2$=_CHG2$+SEP+"DFLT_SUG_QTY_RON_STK = "+_CUR.DFLT_SUG_QTY_RON_STK$,_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"DFLT_SUG_QTY_RON_STK = "+_CUR.DFLT_SUG_QTY_RON_STK$
15400 IF _ORIG.ALWAYS_LOWEST_QBG$=_CUR.ALWAYS_LOWEST_QBG$ OR ALWAYS_LOWEST_QBG$=_CUR.ALWAYS_LOWEST_QBG$ THEN GOTO *NEXT ELSE IF _ORIG.ALWAYS_LOWEST_QBG$=ALWAYS_LOWEST_QBG$ THEN _CHG2$=_CHG2$+SEP+"ALWAYS_LOWEST_QBG = "+_CUR.ALWAYS_LOWEST_QBG$,_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"ALWAYS_LOWEST_QBG = "+_CUR.ALWAYS_LOWEST_QBG$
15410 IF _ORIG.RON_FORMAT$=_CUR.RON_FORMAT$ OR RON_FORMAT$=_CUR.RON_FORMAT$ THEN GOTO *NEXT ELSE IF _ORIG.RON_FORMAT$=RON_FORMAT$ THEN _CHG2$=_CHG2$+SEP+"RON_FORMAT = "+_CUR.RON_FORMAT$,_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"RON_FORMAT = "+_CUR.RON_FORMAT$
15420 IF _ORIG.PRIMARY_CUST_CONT$=_CUR.PRIMARY_CUST_CONT$ OR PRIMARY_CUST_CONT$=_CUR.PRIMARY_CUST_CONT$ THEN GOTO *NEXT ELSE IF _ORIG.PRIMARY_CUST_CONT$=PRIMARY_CUST_CONT$ THEN _CHG2$=_CHG2$+SEP+"PRIMARY_CUST_CONT = "+_CUR.PRIMARY_CUST_CONT$,_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"PRIMARY_CUST_CONT = "+_CUR.PRIMARY_CUST_CONT$
15430 IF _ORIG.STOCK_ITEMS_FMS$=_CUR.STOCK_ITEMS_FMS$ OR STOCK_ITEMS_FMS$=_CUR.STOCK_ITEMS_FMS$ THEN GOTO *NEXT ELSE IF _ORIG.STOCK_ITEMS_FMS$=STOCK_ITEMS_FMS$ THEN _CHG2$=_CHG2$+SEP+"STOCK_ITEMS_FMS = "+_CUR.STOCK_ITEMS_FMS$,_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"STOCK_ITEMS_FMS = "+_CUR.STOCK_ITEMS_FMS$
15440 IF _ORIG.SUMMARY_BILL_FOR_IRW$=_CUR.SUMMARY_BILL_FOR_IRW$ OR SUMMARY_BILL_FOR_IRW$=_CUR.SUMMARY_BILL_FOR_IRW$ THEN GOTO *NEXT ELSE IF _ORIG.SUMMARY_BILL_FOR_IRW$=SUMMARY_BILL_FOR_IRW$ THEN _CHG2$=_CHG2$+SEP+"SUMMARY_BILL_FOR_IRW = "+_CUR.SUMMARY_BILL_FOR_IRW$,_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"SUMMARY_BILL_FOR_IRW = "+_CUR.SUMMARY_BILL_FOR_IRW$
15450 IF _ORIG.SUMMARY_BILL_PRINT$=_CUR.SUMMARY_BILL_PRINT$ OR SUMMARY_BILL_PRINT$=_CUR.SUMMARY_BILL_PRINT$ THEN GOTO *NEXT ELSE IF _ORIG.SUMMARY_BILL_PRINT$=SUMMARY_BILL_PRINT$ THEN _CHG2$=_CHG2$+SEP+"SUMMARY_BILL_PRINT = "+_CUR.SUMMARY_BILL_PRINT$,_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"SUMMARY_BILL_PRINT = "+_CUR.SUMMARY_BILL_PRINT$
15460 IF _ORIG.UNUSED_4$=_CUR.UNUSED_4$ OR UNUSED_4$=_CUR.UNUSED_4$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_4$=UNUSED_4$ THEN _CHG2$=_CHG2$+SEP+"UNUSED_4 = "+_CUR.UNUSED_4$,_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"UNUSED_4 = "+_CUR.UNUSED_4$
15470 IF _ORIG.MULTIPLE_SHIP$=_CUR.MULTIPLE_SHIP$ OR MULTIPLE_SHIP$=_CUR.MULTIPLE_SHIP$ THEN GOTO *NEXT ELSE IF _ORIG.MULTIPLE_SHIP$=MULTIPLE_SHIP$ THEN _CHG2$=_CHG2$+SEP+"MULTIPLE_SHIP = "+_CUR.MULTIPLE_SHIP$,_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"MULTIPLE_SHIP = "+_CUR.MULTIPLE_SHIP$
15480 IF _ORIG.DFLT_SHIP_CODE$=_CUR.DFLT_SHIP_CODE$ OR DFLT_SHIP_CODE$=_CUR.DFLT_SHIP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.DFLT_SHIP_CODE$=DFLT_SHIP_CODE$ THEN _CHG2$=_CHG2$+SEP+"DFLT_SHIP_CODE = "+_CUR.DFLT_SHIP_CODE$,_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"DFLT_SHIP_CODE = "+_CUR.DFLT_SHIP_CODE$
15490 IF _ORIG.UNUSED_5$=_CUR.UNUSED_5$ OR UNUSED_5$=_CUR.UNUSED_5$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_5$=UNUSED_5$ THEN _CHG2$=_CHG2$+SEP+"UNUSED_5 = "+_CUR.UNUSED_5$,_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"UNUSED_5 = "+_CUR.UNUSED_5$
15500 IF _ORIG.CUST_GROUP_CODE$=_CUR.CUST_GROUP_CODE$ OR CUST_GROUP_CODE$=_CUR.CUST_GROUP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_GROUP_CODE$=CUST_GROUP_CODE$ THEN _CHG2$=_CHG2$+SEP+"CUST_GROUP_CODE = "+_CUR.CUST_GROUP_CODE$,_CHG_VAR$(48,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"CUST_GROUP_CODE = "+_CUR.CUST_GROUP_CODE$
15510 IF _ORIG.SUBTRACT_COMMITTED$=_CUR.SUBTRACT_COMMITTED$ OR SUBTRACT_COMMITTED$=_CUR.SUBTRACT_COMMITTED$ THEN GOTO *NEXT ELSE IF _ORIG.SUBTRACT_COMMITTED$=SUBTRACT_COMMITTED$ THEN _CHG2$=_CHG2$+SEP+"SUBTRACT_COMMITTED = "+_CUR.SUBTRACT_COMMITTED$,_CHG_VAR$(49,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"SUBTRACT_COMMITTED = "+_CUR.SUBTRACT_COMMITTED$
15520 IF _ORIG.INCLUDE_DIST_INV$=_CUR.INCLUDE_DIST_INV$ OR INCLUDE_DIST_INV$=_CUR.INCLUDE_DIST_INV$ THEN GOTO *NEXT ELSE IF _ORIG.INCLUDE_DIST_INV$=INCLUDE_DIST_INV$ THEN _CHG2$=_CHG2$+SEP+"INCLUDE_DIST_INV = "+_CUR.INCLUDE_DIST_INV$,_CHG_VAR$(50,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"INCLUDE_DIST_INV = "+_CUR.INCLUDE_DIST_INV$
15530 IF _ORIG.RON_CUST_NOTE$=_CUR.RON_CUST_NOTE$ OR RON_CUST_NOTE$=_CUR.RON_CUST_NOTE$ THEN GOTO *NEXT ELSE IF _ORIG.RON_CUST_NOTE$=RON_CUST_NOTE$ THEN _CHG2$=_CHG2$+SEP+"RON_CUST_NOTE = "+_CUR.RON_CUST_NOTE$,_CHG_VAR$(51,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"RON_CUST_NOTE = "+_CUR.RON_CUST_NOTE$
15540 IF _ORIG.FMS_PRICING$=_CUR.FMS_PRICING$ OR FMS_PRICING$=_CUR.FMS_PRICING$ THEN GOTO *NEXT ELSE IF _ORIG.FMS_PRICING$=FMS_PRICING$ THEN _CHG2$=_CHG2$+SEP+"FMS_PRICING = "+_CUR.FMS_PRICING$,_CHG_VAR$(52,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FMS_PRICING = "+_CUR.FMS_PRICING$
15550 IF _ORIG.DFLT_SUGG_RO_RON$=_CUR.DFLT_SUGG_RO_RON$ OR DFLT_SUGG_RO_RON$=_CUR.DFLT_SUGG_RO_RON$ THEN GOTO *NEXT ELSE IF _ORIG.DFLT_SUGG_RO_RON$=DFLT_SUGG_RO_RON$ THEN _CHG2$=_CHG2$+SEP+"DFLT_SUGG_RO_RON = "+_CUR.DFLT_SUGG_RO_RON$,_CHG_VAR$(53,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"DFLT_SUGG_RO_RON = "+_CUR.DFLT_SUGG_RO_RON$
15560 IF _ORIG.UNUSED_6$=_CUR.UNUSED_6$ OR UNUSED_6$=_CUR.UNUSED_6$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_6$=UNUSED_6$ THEN _CHG2$=_CHG2$+SEP+"UNUSED_6 = "+_CUR.UNUSED_6$,_CHG_VAR$(54,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"UNUSED_6 = "+_CUR.UNUSED_6$
15570 IF _ORIG.OLS_DFLT_NEEDEDBY$=_CUR.OLS_DFLT_NEEDEDBY$ OR OLS_DFLT_NEEDEDBY$=_CUR.OLS_DFLT_NEEDEDBY$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_DFLT_NEEDEDBY$=OLS_DFLT_NEEDEDBY$ THEN _CHG2$=_CHG2$+SEP+"OLS_DFLT_NEEDEDBY = "+_CUR.OLS_DFLT_NEEDEDBY$,_CHG_VAR$(55,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_DFLT_NEEDEDBY = "+_CUR.OLS_DFLT_NEEDEDBY$
15580 IF _ORIG.OLS_ELIM_BILL_PRICE$=_CUR.OLS_ELIM_BILL_PRICE$ OR OLS_ELIM_BILL_PRICE$=_CUR.OLS_ELIM_BILL_PRICE$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_ELIM_BILL_PRICE$=OLS_ELIM_BILL_PRICE$ THEN _CHG2$=_CHG2$+SEP+"OLS_ELIM_BILL_PRICE = "+_CUR.OLS_ELIM_BILL_PRICE$,_CHG_VAR$(56,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_ELIM_BILL_PRICE = "+_CUR.OLS_ELIM_BILL_PRICE$
15590 IF _ORIG.OLS_ELIM_COST_USAGE$=_CUR.OLS_ELIM_COST_USAGE$ OR OLS_ELIM_COST_USAGE$=_CUR.OLS_ELIM_COST_USAGE$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_ELIM_COST_USAGE$=OLS_ELIM_COST_USAGE$ THEN _CHG2$=_CHG2$+SEP+"OLS_ELIM_COST_USAGE = "+_CUR.OLS_ELIM_COST_USAGE$,_CHG_VAR$(57,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_ELIM_COST_USAGE = "+_CUR.OLS_ELIM_COST_USAGE$
15600 IF _ORIG.OLS_NEXT_RELEASE_NUM$=_CUR.OLS_NEXT_RELEASE_NUM$ OR OLS_NEXT_RELEASE_NUM$=_CUR.OLS_NEXT_RELEASE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_NEXT_RELEASE_NUM$=OLS_NEXT_RELEASE_NUM$ THEN _CHG2$=_CHG2$+SEP+"OLS_NEXT_RELEASE_NUM = "+_CUR.OLS_NEXT_RELEASE_NUM$,_CHG_VAR$(58,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_NEXT_RELEASE_NUM = "+_CUR.OLS_NEXT_RELEASE_NUM$
15610 IF _ORIG.OLS_REL_NUM_FORMAT$=_CUR.OLS_REL_NUM_FORMAT$ OR OLS_REL_NUM_FORMAT$=_CUR.OLS_REL_NUM_FORMAT$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_REL_NUM_FORMAT$=OLS_REL_NUM_FORMAT$ THEN _CHG2$=_CHG2$+SEP+"OLS_REL_NUM_FORMAT = "+_CUR.OLS_REL_NUM_FORMAT$,_CHG_VAR$(59,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_REL_NUM_FORMAT = "+_CUR.OLS_REL_NUM_FORMAT$
15620 IF _ORIG.OLS_USE_NUM_DIST_REQ$=_CUR.OLS_USE_NUM_DIST_REQ$ OR OLS_USE_NUM_DIST_REQ$=_CUR.OLS_USE_NUM_DIST_REQ$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_USE_NUM_DIST_REQ$=OLS_USE_NUM_DIST_REQ$ THEN _CHG2$=_CHG2$+SEP+"OLS_USE_NUM_DIST_REQ = "+_CUR.OLS_USE_NUM_DIST_REQ$,_CHG_VAR$(60,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_USE_NUM_DIST_REQ = "+_CUR.OLS_USE_NUM_DIST_REQ$
15630 IF _ORIG.OLS_FORCE_ATTENTION$=_CUR.OLS_FORCE_ATTENTION$ OR OLS_FORCE_ATTENTION$=_CUR.OLS_FORCE_ATTENTION$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_FORCE_ATTENTION$=OLS_FORCE_ATTENTION$ THEN _CHG2$=_CHG2$+SEP+"OLS_FORCE_ATTENTION = "+_CUR.OLS_FORCE_ATTENTION$,_CHG_VAR$(61,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_FORCE_ATTENTION = "+_CUR.OLS_FORCE_ATTENTION$
15640 IF _ORIG.REDUCE_ONHAND_BY_COMM$=_CUR.REDUCE_ONHAND_BY_COMM$ OR REDUCE_ONHAND_BY_COMM$=_CUR.REDUCE_ONHAND_BY_COMM$ THEN GOTO *NEXT ELSE IF _ORIG.REDUCE_ONHAND_BY_COMM$=REDUCE_ONHAND_BY_COMM$ THEN _CHG2$=_CHG2$+SEP+"REDUCE_ONHAND_BY_COMM = "+_CUR.REDUCE_ONHAND_BY_COMM$,_CHG_VAR$(62,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"REDUCE_ONHAND_BY_COMM = "+_CUR.REDUCE_ONHAND_BY_COMM$
15650 IF _ORIG.PRODUCT_CODE$=_CUR.PRODUCT_CODE$ OR PRODUCT_CODE$=_CUR.PRODUCT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PRODUCT_CODE$=PRODUCT_CODE$ THEN _CHG2$=_CHG2$+SEP+"PRODUCT_CODE = "+_CUR.PRODUCT_CODE$,_CHG_VAR$(63,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"PRODUCT_CODE = "+_CUR.PRODUCT_CODE$
15660 IF _ORIG.SALESPERSON$=_CUR.SALESPERSON$ OR SALESPERSON$=_CUR.SALESPERSON$ THEN GOTO *NEXT ELSE IF _ORIG.SALESPERSON$=SALESPERSON$ THEN _CHG2$=_CHG2$+SEP+"SALESPERSON = "+_CUR.SALESPERSON$,_CHG_VAR$(64,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"SALESPERSON = "+_CUR.SALESPERSON$
15670 IF _ORIG.IMMEDIATE_PRINT$=_CUR.IMMEDIATE_PRINT$ OR IMMEDIATE_PRINT$=_CUR.IMMEDIATE_PRINT$ THEN GOTO *NEXT ELSE IF _ORIG.IMMEDIATE_PRINT$=IMMEDIATE_PRINT$ THEN _CHG2$=_CHG2$+SEP+"IMMEDIATE_PRINT = "+_CUR.IMMEDIATE_PRINT$,_CHG_VAR$(65,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"IMMEDIATE_PRINT = "+_CUR.IMMEDIATE_PRINT$
15680 IF _ORIG.COST_CODE_FORMAT$=_CUR.COST_CODE_FORMAT$ OR COST_CODE_FORMAT$=_CUR.COST_CODE_FORMAT$ THEN GOTO *NEXT ELSE IF _ORIG.COST_CODE_FORMAT$=COST_CODE_FORMAT$ THEN _CHG2$=_CHG2$+SEP+"COST_CODE_FORMAT = "+_CUR.COST_CODE_FORMAT$,_CHG_VAR$(66,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"COST_CODE_FORMAT = "+_CUR.COST_CODE_FORMAT$
15690 IF _ORIG.ENTER_DEPT_BY_FORM$=_CUR.ENTER_DEPT_BY_FORM$ OR ENTER_DEPT_BY_FORM$=_CUR.ENTER_DEPT_BY_FORM$ THEN GOTO *NEXT ELSE IF _ORIG.ENTER_DEPT_BY_FORM$=ENTER_DEPT_BY_FORM$ THEN _CHG2$=_CHG2$+SEP+"ENTER_DEPT_BY_FORM = "+_CUR.ENTER_DEPT_BY_FORM$,_CHG_VAR$(67,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"ENTER_DEPT_BY_FORM = "+_CUR.ENTER_DEPT_BY_FORM$
15700 IF _ORIG.STD_INV_VALUE_METH$=_CUR.STD_INV_VALUE_METH$ OR STD_INV_VALUE_METH$=_CUR.STD_INV_VALUE_METH$ THEN GOTO *NEXT ELSE IF _ORIG.STD_INV_VALUE_METH$=STD_INV_VALUE_METH$ THEN _CHG2$=_CHG2$+SEP+"STD_INV_VALUE_METH = "+_CUR.STD_INV_VALUE_METH$,_CHG_VAR$(68,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"STD_INV_VALUE_METH = "+_CUR.STD_INV_VALUE_METH$
15710 IF _ORIG.STD_WHSE$=_CUR.STD_WHSE$ OR STD_WHSE$=_CUR.STD_WHSE$ THEN GOTO *NEXT ELSE IF _ORIG.STD_WHSE$=STD_WHSE$ THEN _CHG2$=_CHG2$+SEP+"STD_WHSE = "+_CUR.STD_WHSE$,_CHG_VAR$(69,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"STD_WHSE = "+_CUR.STD_WHSE$
15720 IF _ORIG.OLS_ALLOW_ADD_RON$=_CUR.OLS_ALLOW_ADD_RON$ OR OLS_ALLOW_ADD_RON$=_CUR.OLS_ALLOW_ADD_RON$ THEN GOTO *NEXT ELSE IF _ORIG.OLS_ALLOW_ADD_RON$=OLS_ALLOW_ADD_RON$ THEN _CHG2$=_CHG2$+SEP+"OLS_ALLOW_ADD_RON = "+_CUR.OLS_ALLOW_ADD_RON$,_CHG_VAR$(70,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"OLS_ALLOW_ADD_RON = "+_CUR.OLS_ALLOW_ADD_RON$
15730 IF _ORIG.KIT_COMPNENTS$=_CUR.KIT_COMPNENTS$ OR KIT_COMPNENTS$=_CUR.KIT_COMPNENTS$ THEN GOTO *NEXT ELSE IF _ORIG.KIT_COMPNENTS$=KIT_COMPNENTS$ THEN _CHG2$=_CHG2$+SEP+"KIT_COMPNENTS = "+_CUR.KIT_COMPNENTS$,_CHG_VAR$(71,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"KIT_COMPNENTS = "+_CUR.KIT_COMPNENTS$
15740 IF _ORIG.FIND_FEE_RATE=_CUR.FIND_FEE_RATE OR FIND_FEE_RATE=_CUR.FIND_FEE_RATE THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_RATE=FIND_FEE_RATE THEN _CHG2$=_CHG2$+SEP+"FIND_FEE_RATE = "+STR(_CUR.FIND_FEE_RATE),_CHG_VAR$(72,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FIND_FEE_RATE = "+STR(_CUR.FIND_FEE_RATE)
15750 IF _ORIG.FMS_PRCNT_SELL_PRICE=_CUR.FMS_PRCNT_SELL_PRICE OR FMS_PRCNT_SELL_PRICE=_CUR.FMS_PRCNT_SELL_PRICE THEN GOTO *NEXT ELSE IF _ORIG.FMS_PRCNT_SELL_PRICE=FMS_PRCNT_SELL_PRICE THEN _CHG2$=_CHG2$+SEP+"FMS_PRCNT_SELL_PRICE = "+STR(_CUR.FMS_PRCNT_SELL_PRICE),_CHG_VAR$(73,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"FMS_PRCNT_SELL_PRICE = "+STR(_CUR.FMS_PRCNT_SELL_PRICE)
15760 IF _ORIG.GB_REBATE_BAL=_CUR.GB_REBATE_BAL OR GB_REBATE_BAL=_CUR.GB_REBATE_BAL THEN GOTO *NEXT ELSE IF _ORIG.GB_REBATE_BAL=GB_REBATE_BAL THEN _CHG2$=_CHG2$+SEP+"GB_REBATE_BAL = "+STR(_CUR.GB_REBATE_BAL),_CHG_VAR$(74,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"GB_REBATE_BAL = "+STR(_CUR.GB_REBATE_BAL)
15770 IF _ORIG.UNUSED_8=_CUR.UNUSED_8 OR UNUSED_8=_CUR.UNUSED_8 THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_8=UNUSED_8 THEN _CHG2$=_CHG2$+SEP+"UNUSED_8 = "+STR(_CUR.UNUSED_8),_CHG_VAR$(75,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"UNUSED_8 = "+STR(_CUR.UNUSED_8)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN D_CONSTANT$=_CUR.D_CONSTANT$
16030 IF _CHG_VAR$(2,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16040 IF _CHG_VAR$(3,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16050 IF _CHG_VAR$(4,1)="Y" THEN FIND_FEE_TYPE$=_CUR.FIND_FEE_TYPE$
16060 IF _CHG_VAR$(5,1)="Y" THEN FIND_FEE_VEND_DIV$=_CUR.FIND_FEE_VEND_DIV$
16070 IF _CHG_VAR$(6,1)="Y" THEN FIND_FEE_VEND_CODE$=_CUR.FIND_FEE_VEND_CODE$
16080 IF _CHG_VAR$(7,1)="Y" THEN UNIQUE_PO_REQ$=_CUR.UNIQUE_PO_REQ$
16090 IF _CHG_VAR$(8,1)="Y" THEN FMS$=_CUR.FMS$
16100 IF _CHG_VAR$(9,1)="Y" THEN CUST_PO_REQ$=_CUR.CUST_PO_REQ$
16110 IF _CHG_VAR$(10,1)="Y" THEN PRINT_SALES_ORDER$=_CUR.PRINT_SALES_ORDER$
16120 IF _CHG_VAR$(11,1)="Y" THEN PRINT_ACKNOWLEDGE$=_CUR.PRINT_ACKNOWLEDGE$
16130 IF _CHG_VAR$(12,1)="Y" THEN FOB_CODE$=_CUR.FOB_CODE$
16140 IF _CHG_VAR$(13,1)="Y" THEN HOW_TO_SHIP_CODE$=_CUR.HOW_TO_SHIP_CODE$
16150 IF _CHG_VAR$(14,1)="Y" THEN INSIDE_DELIVERY$=_CUR.INSIDE_DELIVERY$
16160 IF _CHG_VAR$(15,1)="Y" THEN SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$
16170 IF _CHG_VAR$(16,1)="Y" THEN DFLT_CNT_CYCLE$=_CUR.DFLT_CNT_CYCLE$
16180 IF _CHG_VAR$(17,1)="Y" THEN UNUSED_1$=_CUR.UNUSED_1$
16190 IF _CHG_VAR$(18,1)="Y" THEN DETAIL_SHPMNT_REPORT$=_CUR.DETAIL_SHPMNT_REPORT$
16200 IF _CHG_VAR$(19,1)="Y" THEN FRT_MARKUP_TABLE$=_CUR.FRT_MARKUP_TABLE$
16210 IF _CHG_VAR$(20,1)="Y" THEN CURR_FY$=_CUR.CURR_FY$
16220 IF _CHG_VAR$(21,1)="Y" THEN CURR_ACCTPD$=_CUR.CURR_ACCTPD$
16230 IF _CHG_VAR$(22,1)="Y" THEN NUM_PER_FMZ_RETAIN$=_CUR.NUM_PER_FMZ_RETAIN$
16240 IF _CHG_VAR$(23,1)="Y" THEN NUM_YR_STAT_RETAIN$=_CUR.NUM_YR_STAT_RETAIN$
16250 IF _CHG_VAR$(24,1)="Y" THEN RON_GRAPH_TYPE$=_CUR.RON_GRAPH_TYPE$
16260 IF _CHG_VAR$(25,1)="Y" THEN UNUSED_2$=_CUR.UNUSED_2$
16270 IF _CHG_VAR$(26,1)="Y" THEN CONS_PICK_LIST$=_CUR.CONS_PICK_LIST$
16280 IF _CHG_VAR$(27,1)="Y" THEN FORM_SECURITY$=_CUR.FORM_SECURITY$
16290 IF _CHG_VAR$(28,1)="Y" THEN OLS_DISP_EST_SHPDATE$=_CUR.OLS_DISP_EST_SHPDATE$
16300 IF _CHG_VAR$(29,1)="Y" THEN OLS_DISP_LST_RELDATE$=_CUR.OLS_DISP_LST_RELDATE$
16310 IF _CHG_VAR$(30,1)="Y" THEN OLS_DISP_AVAIL$=_CUR.OLS_DISP_AVAIL$
16320 IF _CHG_VAR$(31,1)="Y" THEN FOREIGN_CURR_CODE$=_CUR.FOREIGN_CURR_CODE$
16330 IF _CHG_VAR$(32,1)="Y" THEN FRT_MARKUP_I_TYPE$=_CUR.FRT_MARKUP_I_TYPE$
16340 IF _CHG_VAR$(33,1)="Y" THEN FRT_MARKUP_R_TYPE$=_CUR.FRT_MARKUP_R_TYPE$
16350 IF _CHG_VAR$(34,1)="Y" THEN FRT_MARKUP_W_TYPE$=_CUR.FRT_MARKUP_W_TYPE$
16360 IF _CHG_VAR$(35,1)="Y" THEN GB_NO_OVERRUNS$=_CUR.GB_NO_OVERRUNS$
16370 IF _CHG_VAR$(36,1)="Y" THEN UNUSED_3$=_CUR.UNUSED_3$
16380 IF _CHG_VAR$(37,1)="Y" THEN DFLT_SUG_QTY_RON_STK$=_CUR.DFLT_SUG_QTY_RON_STK$
16390 IF _CHG_VAR$(38,1)="Y" THEN ALWAYS_LOWEST_QBG$=_CUR.ALWAYS_LOWEST_QBG$
16400 IF _CHG_VAR$(39,1)="Y" THEN RON_FORMAT$=_CUR.RON_FORMAT$
16410 IF _CHG_VAR$(40,1)="Y" THEN PRIMARY_CUST_CONT$=_CUR.PRIMARY_CUST_CONT$
16420 IF _CHG_VAR$(41,1)="Y" THEN STOCK_ITEMS_FMS$=_CUR.STOCK_ITEMS_FMS$
16430 IF _CHG_VAR$(42,1)="Y" THEN SUMMARY_BILL_FOR_IRW$=_CUR.SUMMARY_BILL_FOR_IRW$
16440 IF _CHG_VAR$(43,1)="Y" THEN SUMMARY_BILL_PRINT$=_CUR.SUMMARY_BILL_PRINT$
16450 IF _CHG_VAR$(44,1)="Y" THEN UNUSED_4$=_CUR.UNUSED_4$
16460 IF _CHG_VAR$(45,1)="Y" THEN MULTIPLE_SHIP$=_CUR.MULTIPLE_SHIP$
16470 IF _CHG_VAR$(46,1)="Y" THEN DFLT_SHIP_CODE$=_CUR.DFLT_SHIP_CODE$
16480 IF _CHG_VAR$(47,1)="Y" THEN UNUSED_5$=_CUR.UNUSED_5$
16490 IF _CHG_VAR$(48,1)="Y" THEN CUST_GROUP_CODE$=_CUR.CUST_GROUP_CODE$
16500 IF _CHG_VAR$(49,1)="Y" THEN SUBTRACT_COMMITTED$=_CUR.SUBTRACT_COMMITTED$
16510 IF _CHG_VAR$(50,1)="Y" THEN INCLUDE_DIST_INV$=_CUR.INCLUDE_DIST_INV$
16520 IF _CHG_VAR$(51,1)="Y" THEN RON_CUST_NOTE$=_CUR.RON_CUST_NOTE$
16530 IF _CHG_VAR$(52,1)="Y" THEN FMS_PRICING$=_CUR.FMS_PRICING$
16540 IF _CHG_VAR$(53,1)="Y" THEN DFLT_SUGG_RO_RON$=_CUR.DFLT_SUGG_RO_RON$
16550 IF _CHG_VAR$(54,1)="Y" THEN UNUSED_6$=_CUR.UNUSED_6$
16560 IF _CHG_VAR$(55,1)="Y" THEN OLS_DFLT_NEEDEDBY$=_CUR.OLS_DFLT_NEEDEDBY$
16570 IF _CHG_VAR$(56,1)="Y" THEN OLS_ELIM_BILL_PRICE$=_CUR.OLS_ELIM_BILL_PRICE$
16580 IF _CHG_VAR$(57,1)="Y" THEN OLS_ELIM_COST_USAGE$=_CUR.OLS_ELIM_COST_USAGE$
16590 IF _CHG_VAR$(58,1)="Y" THEN OLS_NEXT_RELEASE_NUM$=_CUR.OLS_NEXT_RELEASE_NUM$
16600 IF _CHG_VAR$(59,1)="Y" THEN OLS_REL_NUM_FORMAT$=_CUR.OLS_REL_NUM_FORMAT$
16610 IF _CHG_VAR$(60,1)="Y" THEN OLS_USE_NUM_DIST_REQ$=_CUR.OLS_USE_NUM_DIST_REQ$
16620 IF _CHG_VAR$(61,1)="Y" THEN OLS_FORCE_ATTENTION$=_CUR.OLS_FORCE_ATTENTION$
16630 IF _CHG_VAR$(62,1)="Y" THEN REDUCE_ONHAND_BY_COMM$=_CUR.REDUCE_ONHAND_BY_COMM$
16640 IF _CHG_VAR$(63,1)="Y" THEN PRODUCT_CODE$=_CUR.PRODUCT_CODE$
16650 IF _CHG_VAR$(64,1)="Y" THEN SALESPERSON$=_CUR.SALESPERSON$
16660 IF _CHG_VAR$(65,1)="Y" THEN IMMEDIATE_PRINT$=_CUR.IMMEDIATE_PRINT$
16670 IF _CHG_VAR$(66,1)="Y" THEN COST_CODE_FORMAT$=_CUR.COST_CODE_FORMAT$
16680 IF _CHG_VAR$(67,1)="Y" THEN ENTER_DEPT_BY_FORM$=_CUR.ENTER_DEPT_BY_FORM$
16690 IF _CHG_VAR$(68,1)="Y" THEN STD_INV_VALUE_METH$=_CUR.STD_INV_VALUE_METH$
16700 IF _CHG_VAR$(69,1)="Y" THEN STD_WHSE$=_CUR.STD_WHSE$
16710 IF _CHG_VAR$(70,1)="Y" THEN OLS_ALLOW_ADD_RON$=_CUR.OLS_ALLOW_ADD_RON$
16720 IF _CHG_VAR$(71,1)="Y" THEN KIT_COMPNENTS$=_CUR.KIT_COMPNENTS$
16730 IF _CHG_VAR$(72,1)="Y" THEN FIND_FEE_RATE=_CUR.FIND_FEE_RATE
16740 IF _CHG_VAR$(73,1)="Y" THEN FMS_PRCNT_SELL_PRICE=_CUR.FMS_PRCNT_SELL_PRICE
16750 IF _CHG_VAR$(74,1)="Y" THEN GB_REBATE_BAL=_CUR.GB_REBATE_BAL
16760 IF _CHG_VAR$(75,1)="Y" THEN UNUSED_8=_CUR.UNUSED_8
16990 RETURN 
18000 SEL_PROD_CODE:! SSP#226935
18105 _FMP=FN%FFN("FMP"+%C$); IF _FMP<=0 THEN _FMP=HFN,FLG_FMP=1; OPEN (_FMP)"FMP"+%C$ ! SSP#226935
18110 IF NUM(PRODUCT_CODE$,ERR=*NEXT)>=0 AND STP(PRODUCT_CODE$,3)<>"" THEN PRODUCT_CODE$=PAD(PRODUCT_CODE$,3,0,"0"),REFRESH_FLG=1 ! SSP#226935
18111 IF STP(PRODUCT_CODE$,3)="" THEN SALESPERSON$=""; CALL "*wingrp;Disable",SLSBYPROD.GRP$ ELSE CALL "*wingrp;Enable",SLSBYPROD.GRP$ ! SSP#226935
18112 PRODUCT_CODE$=PAD(PRODUCT_CODE$,3),REFRESH_FLG=1 ! SSP#226935
18120 FIND (_FMP,KEY="T"+PRODUCT_CODE$,DOM=*NEXT)FMP_T$ ! SSP#226935
18130 PROD_DESC$=STP(MID(FMP_T$,5,15)); REFRESH_FLG=1 ! SSP#226935
18135 IF FLG_FMP=1 THEN CLOSE (_FMP); FLG_FMP=0 ! SSP#226935
18140 RETURN ! SSP#226935
18200 SEL_SALESPERSON:! SSP#226935
18210 _AR3=FN%FFN("AR3"+%C$); IF _AR3<=0 THEN _AR3=HFN,FLG_AR3=1; OPEN (_AR3)"AR3"+%C$ ! SSP#226935
18220 FIND (_AR3,KEY=SALESPERSON$,DOM=*NEXT)AR3$ ! SSP#226935
18230 SPER_NAME$=MID(AR3$,5,35); REFRESH_FLG=1 ! SSP#226935
18240 IF FLG_AR3=1 THEN CLOSE (_AR3); FLG_AR3=0 ! SSP#226935
18250 RETURN ! SSP#226935
