0010 ! FMGFTZ - Requisition Group Setup
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Mar. 9, 2011 16:56
0030 ! ************************************************************************
0035 REM "5.7 - 04/12/11 - 10.438888 - jvv - SSP# 242573
0037 REM "242573-New file to hold list of items. Modify Auto Req Charge setup
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0060 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "FMGFTZ","../FMG/FM.EN"
0080 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0140 X0$="FMGFTZ",X1$="Requisition Group Maintenance"
0145 X0=-1,X2=-1
0150 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; DIM Z[NUM(X3$(60,3))]
0155 IOLIST FTZ$
0175 Z$="01O FM1... 02O IC0... 03O FMP... 04O FTZ...  05O AR1...  3O ZZPARM "
0180 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0185 _FIL_NO=Z[4]
0190 RETURN 
0199 ! 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 GOSUB CLEAR_REC
0570 RETURN 
0599 ! 
0900 ! 900 - Wrapup
0910 WRAPUP:
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1799 ! 
1800 CLEAR_REC:
1810 GROUP_CODE$="",ITEM_TYPE$=""
1820 CUSTOMER$=""
1830 ITEM_CODE$=""
1835 DROP_BOX WRITE ITEM_TYPE.CTL," "
1840 LIST_BOX LOAD LIST_BOX_1.CTL,""
1850 LIST_BOX LOAD REQ_GROUP_ITEMS.CTL,""
1860 REFRESH_FLG=1
1890 RETURN 
1899 ! 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9399 ! 
9999 END 
10000 PROCESS_QRY:
10010 QCHAN=HFN; OPEN (QCHAN,ERR=*RETURN)"FTZ"+%C$
10030 GRPIDX=0; LIST_BOX LOAD GRP_QRY.CTL,""
10040 READ (QCHAN,KEY="",DOM=*NEXT)
10050 NEXT_GRP:
10060 KCDE$=KEY(QCHAN,END=DISP_GRPS); READ (QCHAN,KEY=KCDE$)*
10070 LIST_BOX LOAD GRP_QRY.CTL,(++GRPIDX),MID(KCDE$,1,10)
10080 READ (QCHAN,KEY=MID(KCDE$,1,10)+$FFFFFF$,DOM=*NEXT)
10090 GOTO NEXT_GRP
10120 DISP_GRPS:
10122 CLOSE (QCHAN,ERR=*NEXT)
10130 IF GRPIDX=0 THEN RETURN 
10190 RETURN 
10199 ! 
10200 SEL_GRP_QRY_LINE:
10210 IF GRP_QRY$="" THEN EXIT 
10220 IF _EOM$<>$02$ THEN EXIT 
10230 GCODE$=GRP_QRY.CTL'VALUE$
10290 RETURN 
10299 ! 
20000 FIND_GROUP:
20010 IF STP(GROUP_CODE$,2)="" THEN NEXT_ID=BUTTON_3.CTL; EXIT 
20068 SET_PARAM 'XI'
20069 DIM FGZ$(382)
20070 LIST_BOX LOAD REQ_GROUP_ITEMS.CTL,""; READ DATA FROM "" TO FGZ$
20080 SELECT *,REC=FGZ$ FROM Z[4] BEGIN GROUP_CODE$+"" END GROUP_CODE$+$FFFFFF$,ERR=END_GROUP_LOAD
20085 CALL "ZZDISP","AX",FGZ.CUST_DIV$+FGZ.CUST_CODE$,"A/R",X3$,X$,"",0,0,X4$; DCUST$=X$
20090 LOAD_LINE$=FGZ.ITEM_TYPE$+SEP+DCUST$+SEP+FGZ.ITEM_CODE$+SEP+FGZ.ITEM_DESC$+SEP+FGZ.CUST_DIV$+FGZ.CUST_CODE$
20100 LIST_BOX LOAD REQ_GROUP_ITEMS.CTL,0,LOAD_LINE$
20110 NEXT RECORD 
20120 END_GROUP_LOAD: SET_PARAM -'XI'
20128 NEXT_ID=ITEM_TYPE.CTL
20130 EXIT 
20199 ! 
21035 SETERR 0000; CHUI_ERR=1; EXIT 
21099 ! 
22000 SEL_LINE_LB_Q:
22002 DISABLE CONTROL BUTTON_1.CTL
22005 ! Select Line from FTZ TO Delete
22010 IF REQ_GROUP_ITEMS$="" THEN EXIT 
22015 IF _EOM$<>$02$ THEN EXIT 
22020 IDEL$=REQ_GROUP_ITEMS.CTL'VALUE$
22025 IDL=REQ_GROUP_ITEMS.CTL'CURRENTITEM
22030 NEXT_ID=BUTTON_2.CTL
22040 ENABLE CONTROL BUTTON_2.CTL
22050 RETURN 
22099 ! 
23000 DELETE_FTZ:
23005 GROUP_CODE$=PAD(GROUP_CODE$,10)
23010 DTYPE$=IDEL$(1,1) ! ,DCUST$=IDEL$(64,10),DITEM$=IDEL$(14,10)
23015 PP=POS(SEP=IDEL$,1,2),DITEM$=IDEL$(PP+1,10)
23018 PP=POS(SEP=IDEL$,1,4),DCUST$=IDEL$(PP+1,10)
23020 DKEY$=GROUP_CODE$+DTYPE$+DCUST$+DITEM$
23040 REMOVE (Z[4],KEY=DKEY$,ERR=23080)
23050 LIST_BOX LOAD REQ_GROUP_ITEMS.CTL,IDL,*
23080 DISABLE CONTROL BUTTON_2.CTL
23090 RETURN 
23099 ! 
25000 SELECT_ITEM_TYPE:
25010 ON POS(ITEM_TYPE$="ISC") GOTO 25020,25050,25100,25200
25020 EXIT 
25050 ! STOCK ITEMS
25060 TYP_NO=Z[2]
25065 KT$=DIM(10)
25070 START_KEY$=""
25075 TS=11,TL=10,DS=21,DL=40 ! TS/TL ITEM START/LEN, DS/DL DESC START/LEN
25080 GOTO LIST_BOX_1
25100 ! SPECIAL CHARGES
25110 TYP_NO=Z[3]
25115 KT$="X"
25120 START_KEY$=KT$+""
25130 TS=2,TL=10,DS=12,DL=40 ! TS/TL ITEM START/LEN, DS/DL DESC START/LEN
25160 GOTO LIST_BOX_1
25200 ! CUSTOM ITEMS
25205 TS=11,TL=10,DS=42,DL=40 ! TS/TL ITEM START/LEN, DS/DL DESC START/LEN
25210 CALL "*wingrp;Show",ADD_CGP.GRP$; ENABLE CONTROL CUSTOMER.CTL
25220 NEXT_ID=CUSTOMER.CTL
25230 RETURN 
26000 SELECT_CUSTOMER:
26100 DIM AR1$(200)
26110 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$
26120 IF STP(CUST_DIV$+CUST_CODE$)="" THEN D_CUST_NAME$=""; GOTO 26135
26130 DIM AR1$(200); NOCUST=0; FIND (Z[5],KEY=CUST_DIV$+CUST_CODE$,DOM=*NEXT)AR1$; GOTO 26140
26135 IF ID$="CUSTOMER" THEN NEXT_ID=ITEM_TYPE.CTL; NOCUST=1,CUSTOMER$="",ITEM_TYPE$="",D_CUST_NAME$=""; REFRESH_FLG=1; RETURN 
26140 D_CUST_NAME$=AR1$(11,35),CUSTOMER$=CUST_DIV$+CUST_CODE$,REFRESH_FLG=1
26180 TYP_NO=Z[1]
26185 KT$=CUSTOMER$
26190 START_KEY$=KT$+""
26200 GOTO LIST_BOX_1
26299 ! 
30000 ADD_GROUP_ITEM:
30002 DIM FTZ$(382)
30005 IF ITEM_TYPE$<>"C" THEN CUST_DIV$=DIM(2),CUST_CODE$=DIM(8)
30010 ITEM_CODE$=DD$(1,10),ITEM_DESC$=DD$(12,30)
30015 GROUP_CODE$=GROUP_CODE$+DIM(10),GROUP_CODE$=GROUP_CODE$(1,10)
30020 OKEY$=GROUP_CODE$+ITEM_TYPE$+CUST_DIV$+CUST_CODE$+ITEM_CODE$
30025 CUSTOMER$=CUST_DIV$+CUST_CODE$
30030 FTZ$(1,10)=GROUP_CODE$,FTZ$(11,1)=ITEM_TYPE$,FTZ$(12,10)=CUSTOMER$,FTZ$(22,10)=ITEM_CODE$,FTZ$(32,40)=ITEM_DESC$
30038 WRITE (_FIL_NO,KEY=OKEY$)IOL=0155
30050 CALL "ZZDISP","AX",CUSTOMER$,"A/R",X3$,X$,"",0,0,X4$; DCUST$=X$
30100 LIST_BOX LOAD REQ_GROUP_ITEMS.CTL,0,ITEM_TYPE$+SEP+DCUST$+SEP+ITEM_CODE$+SEP+ITEM_DESC$+SEP+CUSTOMER$
30130 DISABLE CONTROL BUTTON_1.CTL
30190 RETURN 
30199 ! 
40000 DELETE_REC:
40099 RETURN 
40199 ! 
50000 LIST_BOX_1:
50005 ! Populate list box FOR ITEMS
50010 IDX=0
50030 LIST_BOX LOAD LIST_BOX_1.CTL,""
50040 READ (TYP_NO,KEY=START_KEY$,DOM=*NEXT)
50045 KY$=KEY(TYP_NO,END=CONT1_LOOP); READ (TYP_NO)TREC$
50050 IF MID(KY$,1,LEN(KT$))<>KT$ THEN GOTO *RETURN
50055 ITEM$=MID(TREC$,TS,TL),DESC$=MID(TREC$,DS,DL)
50060 ! TYPE$=MID(A$,LEN(KT$)+1,1),LDESC$=MID(A$,LEN(KT$)+LEN(LTYPE$)+1,30)
50072 IDX+=1; LIST_BOX LOAD LIST_BOX_1.CTL,IDX,ITEM$+SEP+DESC$
50080 GOTO 50045
50081 CONT1_LOOP:
50085 RETURN 
50089 ! 
50090 SEL_LINE_LB_1:
50091 ! Select Line from ITEM to copy into FTZ
50092 DISABLE CONTROL BUTTON_2.CTL
50095 IF LIST_BOX_1$="" THEN EXIT 
50100 IF _EOM$<>$02$ THEN EXIT 
50120 BB=LIST_BOX_1.CTL'CURRENTITEM
50121 DD$=LIST_BOX_1.CTL'VALUE$
50122 FROM_LIST=1,NEW_COPY=0
50140 NEXT_ID=BUTTON_1.CTL
50145 ENABLE CONTROL BUTTON_1.CTL
50150 RETURN 
50159 ! 
50259 ! 
50599 ! 
56000 REM "242573-New file to hold list of items. Modify Auto Req Charge setup
