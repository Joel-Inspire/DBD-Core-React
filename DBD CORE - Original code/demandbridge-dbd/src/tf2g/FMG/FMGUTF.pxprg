0010 ! FMGUTF - File Maintenance Program for FMZ_FormDetActivity (="FMZ"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on May. 14, 2004 16:26
0030 ! ************************************************************************
0035 REM "5.7 - 05/10/18 - 13.096388 - tma - SSP# 300105
0037 REM "300105-GUI Panel issue in FMZ File Maintenance with P/O Number     
0040 REM "Copyright 2018 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0060 PROCESS "FMGUTF","../FMG/FM.EN"
0070 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="FMZ"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=5
0430 DIM _KEYS$[1:5]; _KEYS$[1]="CUSTOMER$",_KEYS$[2]="LOCATION$",_KEYS$[3]="ITEM_CODE$",_KEYS$[4]="ACTIVITY_DATE$",_KEYS$[5]="SEQ_NUM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$
1046 LOCATION$=PAD(LOCATION$,5); LOC_TYPE$=LOCATION$(1,1); LOC_CODE$=LOCATION$(2,4); SEQ_NUM$=STR((NUM(SEQ_NUM$,ERR=*NEXT)):"000")
1047 PONUM$=PO_DIV_DETAIL$+PO_NUM_DETAIL$
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1432 CALL "ZZWLKU;PARSE_PORDER",PONUM$,PO_DIV_DETAIL$,PO_NUM_DETAIL$ ! SSP#300105
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3061 CUSTOMER$=CUST_DIV$+CUST_CODE$
3062 LOCATION$=LOC_TYPE$+LOC_CODE$
3063 PONUM$=PO_DIV_DETAIL$+PO_NUM_DETAIL$
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUST_DIV.CTL,_FIRST_FIELD=PO_DATE.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 SELL_QTY_PER$=STR(SELL_QTY_PER)
10030 QTY_SHIPPED$=STR(QTY_SHIPPED)
10040 FMS_PRICE$=STR(FMS_PRICE)
10050 FMS_EXTENDED_VALUE$=STR(FMS_EXTENDED_VALUE)
10060 SELL_PRICE$=STR(SELL_PRICE)
10070 SELL_EXTENDED_VALUE$=STR(SELL_EXTENDED_VALUE)
10080 NET_SALE$=STR(NET_SALE)
10090 PRORATED_FRT$=STR(PRORATED_FRT)
10100 PRORATED_STAX$=STR(PRORATED_STAX)
10110 PRORATED_SPEC_CHG$=STR(PRORATED_SPEC_CHG)
10120 UNIT_PRICE_BILLED$=STR(UNIT_PRICE_BILLED)
10130 UNITS_PER_PACK$=STR(UNITS_PER_PACK)
10140 UNITS_PER_PACK_UNIT$=STR(UNITS_PER_PACK_UNIT)
10150 CNT_FROM_LOTS$=STR(CNT_FROM_LOTS)
10160 FMZ_UNUSED_4$=STR(FMZ_UNUSED_4)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="SELL_QTY_PER",_X=SELL_QTY_PER.CTL,SELL_QTY_PER=NUM(SELL_QTY_PER$,ERR=NON_NUMERIC)
11030 _X$="QTY_SHIPPED",_X=QTY_SHIPPED.CTL,QTY_SHIPPED=NUM(QTY_SHIPPED$,ERR=NON_NUMERIC)
11040 _X$="FMS_PRICE",_X=FMS_PRICE.CTL,FMS_PRICE=NUM(FMS_PRICE$,ERR=NON_NUMERIC)
11050 _X$="FMS_EXTENDED_VALUE",_X=FMS_EXTENDED_VALUE.CTL,FMS_EXTENDED_VALUE=NUM(FMS_EXTENDED_VALUE$,ERR=NON_NUMERIC)
11060 _X$="SELL_PRICE",_X=SELL_PRICE.CTL,SELL_PRICE=NUM(SELL_PRICE$,ERR=NON_NUMERIC)
11070 _X$="SELL_EXTENDED_VALUE",_X=SELL_EXTENDED_VALUE.CTL,SELL_EXTENDED_VALUE=NUM(SELL_EXTENDED_VALUE$,ERR=NON_NUMERIC)
11080 _X$="NET_SALE",_X=NET_SALE.CTL,NET_SALE=NUM(NET_SALE$,ERR=NON_NUMERIC)
11090 _X$="PRORATED_FRT",_X=PRORATED_FRT.CTL,PRORATED_FRT=NUM(PRORATED_FRT$,ERR=NON_NUMERIC)
11100 _X$="PRORATED_STAX",_X=PRORATED_STAX.CTL,PRORATED_STAX=NUM(PRORATED_STAX$,ERR=NON_NUMERIC)
11110 _X$="PRORATED_SPEC_CHG",_X=PRORATED_SPEC_CHG.CTL,PRORATED_SPEC_CHG=NUM(PRORATED_SPEC_CHG$,ERR=NON_NUMERIC)
11120 _X$="UNIT_PRICE_BILLED",_X=UNIT_PRICE_BILLED.CTL,UNIT_PRICE_BILLED=NUM(UNIT_PRICE_BILLED$,ERR=NON_NUMERIC)
11130 _X$="UNITS_PER_PACK",_X=UNITS_PER_PACK.CTL,UNITS_PER_PACK=NUM(UNITS_PER_PACK$,ERR=NON_NUMERIC)
11140 _X$="UNITS_PER_PACK_UNIT",_X=UNITS_PER_PACK_UNIT.CTL,UNITS_PER_PACK_UNIT=NUM(UNITS_PER_PACK_UNIT$,ERR=NON_NUMERIC)
11150 _X$="CNT_FROM_LOTS",_X=CNT_FROM_LOTS.CTL,CNT_FROM_LOTS=NUM(CNT_FROM_LOTS$,ERR=NON_NUMERIC)
11160 _X$="FMZ_UNUSED_4",_X=FMZ_UNUSED_4.CTL,FMZ_UNUSED_4=NUM(FMZ_UNUSED_4$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN CUST_DIV$=""
13030 IF _CLR_FLG$="R" THEN CUST_CODE$=""
13040 IF _CLR_FLG$="R" THEN LOC_TYPE$=""
13050 IF _CLR_FLG$="R" THEN LOC_CODE$=""
13060 IF _CLR_FLG$="R" THEN ITEM_CODE$=""
13070 IF _CLR_FLG$="R" THEN ACTIVITY_DATE$=""
13080 IF _CLR_FLG$="R" THEN SEQ_NUM$=""
13090 ACTIVITY_TYPE$=""
13100 ITEM_CUST_DIV$=""
13110 ITEM_CUST_CODE$=""
13120 ITEM_DESC$=""
13130 REV_DATE$=""
13140 FROM_LOC$=""
13150 SHIP_VIA_DESC$=""
13160 ORDER_TYPE$=""
13170 ORDER_DIV$=""
13180 ORDER_NUM$=""
13190 PO_CODE$=""
13200 CUST_PO$=""
13210 SRC_CODE$=""
13220 AUDIT_NUM$=""
13230 ORDER_DATE$=""
13240 ORDER_LINE_NUM$=""
13250 LOTTED_INV_ITEM$=""
13260 MEMO_REFERENCE$=""
13270 FMZ_UNUSED_1$=""
13280 VEND_DIV$=""
13290 VEND_CODE$=""
13300 VEND_PLANT$=""
13310 SELL_UM$=""
13320 EXT_DOESNT_MATH_OUT$=""
13330 INV_NUM$=""
13340 INV_DATE$=""
13350 STARTING_NUM$=""
13360 ENDING_NUM$=""
13370 REC_STAT$=""
13380 FMS_FISCAL_YEAR_PER$=""
13390 REC_REPORT$=""
13400 PO_DIV_DETAIL$=""
13410 PO_NUM_DETAIL$=""
13420 PO_DATE$=""
13430 FACTORY_JOB_NUM$=""
13440 BIN_LOC$=""
13450 PRIMARY_UM$=""
13460 PACKAGING_UM$=""
13470 CUST_CMNT$=""
13480 RECVD_AUDIT_NUM$=""
13490 RELEASED_ON_INV_NUM$=""
13500 RELEASED_ACN$=""
13510 COST_CENTER_CODE_1$=""
13520 FMZ_UNUSED_2$=""
13530 CUST_PO_FROM_LOT$=""
13540 RECVG_DEPT$=""
13550 BILLING_DEPT$=""
13560 CUST_SERV_REP$=""
13570 BUYER_ID$=""
13580 FMZ_UNUSED_3$=""
13582 ORDERED_BY$="" ! WO220977
13583 CUST_PO_TP$="" ! WO220977
13584 CONTRACT_PRICE$="" ! WO220977
13585 LOT_RECEIPT_DATE$="" ! WO220977
13586 FMZ_UNUSED_5$="" ! WO220977
13590 SELL_QTY_PER=0
13600 QTY_SHIPPED=0
13610 FMS_PRICE=0
13620 FMS_EXTENDED_VALUE=0
13630 SELL_PRICE=0
13640 SELL_EXTENDED_VALUE=0
13650 NET_SALE=0
13660 PRORATED_FRT=0
13670 PRORATED_STAX=0
13680 PRORATED_SPEC_CHG=0
13690 UNIT_PRICE_BILLED=0
13700 UNITS_PER_PACK=0
13710 UNITS_PER_PACK_UNIT=0
13720 CNT_FROM_LOTS=0
13730 FMZ_UNUSED_4=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; ELSE CALL "*wingrp;Disable",KEY4.GRP$
14060 IF _ENABLE_FLG=5 THEN CALL "*wingrp;Enable",KEY5.GRP$; ELSE CALL "*wingrp;Disable",KEY5.GRP$
14070 IF _ENABLE_FLG=6 THEN CALL "*wingrp;Enable",KEY6.GRP$; ELSE CALL "*wingrp;Disable",KEY6.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(72,"N")
15030 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15040 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15050 IF _ORIG.LOC_TYPE$=_CUR.LOC_TYPE$ OR LOC_TYPE$=_CUR.LOC_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_TYPE$=LOC_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_TYPE")+" = "+_CUR.LOC_TYPE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_TYPE")+" = "+_CUR.LOC_TYPE$
15060 IF _ORIG.LOC_CODE$=_CUR.LOC_CODE$ OR LOC_CODE$=_CUR.LOC_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_CODE$=LOC_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_CODE")+" = "+_CUR.LOC_CODE$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_CODE")+" = "+_CUR.LOC_CODE$
15070 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15080 IF _ORIG.ACTIVITY_DATE$=_CUR.ACTIVITY_DATE$ OR ACTIVITY_DATE$=_CUR.ACTIVITY_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.ACTIVITY_DATE$=ACTIVITY_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("ACTI_DT")+" = "+_CUR.ACTIVITY_DATE$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ACTI_DT")+" = "+_CUR.ACTIVITY_DATE$
15090 IF _ORIG.SEQ_NUM$=_CUR.SEQ_NUM$ OR SEQ_NUM$=_CUR.SEQ_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.SEQ_NUM$=SEQ_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$
15100 IF _ORIG.ACTIVITY_TYPE$=_CUR.ACTIVITY_TYPE$ OR ACTIVITY_TYPE$=_CUR.ACTIVITY_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.ACTIVITY_TYPE$=ACTIVITY_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("ACTI_T")+" = "+_CUR.ACTIVITY_TYPE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ACTI_T")+" = "+_CUR.ACTIVITY_TYPE$
15110 IF _ORIG.ITEM_CUST_DIV$=_CUR.ITEM_CUST_DIV$ OR ITEM_CUST_DIV$=_CUR.ITEM_CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CUST_DIV$=ITEM_CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_C_D")+" = "+_CUR.ITEM_CUST_DIV$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_C_D")+" = "+_CUR.ITEM_CUST_DIV$
15120 IF _ORIG.ITEM_CUST_CODE$=_CUR.ITEM_CUST_CODE$ OR ITEM_CUST_CODE$=_CUR.ITEM_CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CUST_CODE$=ITEM_CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_C_C")+" = "+_CUR.ITEM_CUST_CODE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_C_C")+" = "+_CUR.ITEM_CUST_CODE$
15130 IF _ORIG.ITEM_DESC$=_CUR.ITEM_DESC$ OR ITEM_DESC$=_CUR.ITEM_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_DESC$=ITEM_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_DESC")+" = "+_CUR.ITEM_DESC$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_DESC")+" = "+_CUR.ITEM_DESC$
15140 IF _ORIG.REV_DATE$=_CUR.REV_DATE$ OR REV_DATE$=_CUR.REV_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.REV_DATE$=REV_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("REV_DATE")+" = "+_CUR.REV_DATE$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REV_DATE")+" = "+_CUR.REV_DATE$
15150 IF _ORIG.FROM_LOC$=_CUR.FROM_LOC$ OR FROM_LOC$=_CUR.FROM_LOC$ THEN GOTO *NEXT ELSE IF _ORIG.FROM_LOC$=FROM_LOC$ THEN _CHG2$=_CHG2$+SEP+MSG("FROM_LOC")+" = "+_CUR.FROM_LOC$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FROM_LOC")+" = "+_CUR.FROM_LOC$
15160 IF _ORIG.SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$ OR SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_VIA_DESC$=SHIP_VIA_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_V_D")+" = "+_CUR.SHIP_VIA_DESC$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_V_D")+" = "+_CUR.SHIP_VIA_DESC$
15170 IF _ORIG.ORDER_TYPE$=_CUR.ORDER_TYPE$ OR ORDER_TYPE$=_CUR.ORDER_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_TYPE$=ORDER_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_TYPE")+" = "+_CUR.ORDER_TYPE$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_TYPE")+" = "+_CUR.ORDER_TYPE$
15180 IF _ORIG.ORDER_DIV$=_CUR.ORDER_DIV$ OR ORDER_DIV$=_CUR.ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DIV$=ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$
15190 IF _ORIG.ORDER_NUM$=_CUR.ORDER_NUM$ OR ORDER_NUM$=_CUR.ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_NUM$=ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$
15200 IF _ORIG.PO_CODE$=_CUR.PO_CODE$ OR PO_CODE$=_CUR.PO_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PO_CODE$=PO_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_CODE")+" = "+_CUR.PO_CODE$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_CODE")+" = "+_CUR.PO_CODE$
15210 IF _ORIG.CUST_PO$=_CUR.CUST_PO$ OR CUST_PO$=_CUR.CUST_PO$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_PO$=CUST_PO$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$
15220 IF _ORIG.SRC_CODE$=_CUR.SRC_CODE$ OR SRC_CODE$=_CUR.SRC_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SRC_CODE$=SRC_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SRC_CODE")+" = "+_CUR.SRC_CODE$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SRC_CODE")+" = "+_CUR.SRC_CODE$
15230 IF _ORIG.AUDIT_NUM$=_CUR.AUDIT_NUM$ OR AUDIT_NUM$=_CUR.AUDIT_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.AUDIT_NUM$=AUDIT_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("AUDIT_NUM")+" = "+_CUR.AUDIT_NUM$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUDIT_NUM")+" = "+_CUR.AUDIT_NUM$
15240 IF _ORIG.ORDER_DATE$=_CUR.ORDER_DATE$ OR ORDER_DATE$=_CUR.ORDER_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DATE$=ORDER_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DATE")+" = "+_CUR.ORDER_DATE$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DATE")+" = "+_CUR.ORDER_DATE$
15250 IF _ORIG.ORDER_LINE_NUM$=_CUR.ORDER_LINE_NUM$ OR ORDER_LINE_NUM$=_CUR.ORDER_LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_LINE_NUM$=ORDER_LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_L_N")+" = "+_CUR.ORDER_LINE_NUM$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_L_N")+" = "+_CUR.ORDER_LINE_NUM$
15260 IF _ORIG.LOTTED_INV_ITEM$=_CUR.LOTTED_INV_ITEM$ OR LOTTED_INV_ITEM$=_CUR.LOTTED_INV_ITEM$ THEN GOTO *NEXT ELSE IF _ORIG.LOTTED_INV_ITEM$=LOTTED_INV_ITEM$ THEN _CHG2$=_CHG2$+SEP+MSG("LOTT_I_I")+" = "+_CUR.LOTTED_INV_ITEM$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOTT_I_I")+" = "+_CUR.LOTTED_INV_ITEM$
15270 IF _ORIG.MEMO_REFERENCE$=_CUR.MEMO_REFERENCE$ OR MEMO_REFERENCE$=_CUR.MEMO_REFERENCE$ THEN GOTO *NEXT ELSE IF _ORIG.MEMO_REFERENCE$=MEMO_REFERENCE$ THEN _CHG2$=_CHG2$+SEP+MSG("MEMO_R")+" = "+_CUR.MEMO_REFERENCE$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MEMO_R")+" = "+_CUR.MEMO_REFERENCE$
15280 IF _ORIG.FMZ_UNUSED_1$=_CUR.FMZ_UNUSED_1$ OR FMZ_UNUSED_1$=_CUR.FMZ_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.FMZ_UNUSED_1$=FMZ_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FMZ_UNUSED_1$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FMZ_UNUSED_1$
15290 IF _ORIG.VEND_DIV$=_CUR.VEND_DIV$ OR VEND_DIV$=_CUR.VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV$=VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$
15300 IF _ORIG.VEND_CODE$=_CUR.VEND_CODE$ OR VEND_CODE$=_CUR.VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE$=VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$
15310 IF _ORIG.VEND_PLANT$=_CUR.VEND_PLANT$ OR VEND_PLANT$=_CUR.VEND_PLANT$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_PLANT$=VEND_PLANT$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_PLANT")+" = "+_CUR.VEND_PLANT$
15320 IF _ORIG.SELL_UM$=_CUR.SELL_UM$ OR SELL_UM$=_CUR.SELL_UM$ THEN GOTO *NEXT ELSE IF _ORIG.SELL_UM$=SELL_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("SELL_UM")+" = "+_CUR.SELL_UM$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_UM")+" = "+_CUR.SELL_UM$
15330 IF _ORIG.EXT_DOESNT_MATH_OUT$=_CUR.EXT_DOESNT_MATH_OUT$ OR EXT_DOESNT_MATH_OUT$=_CUR.EXT_DOESNT_MATH_OUT$ THEN GOTO *NEXT ELSE IF _ORIG.EXT_DOESNT_MATH_OUT$=EXT_DOESNT_MATH_OUT$ THEN _CHG2$=_CHG2$+SEP+MSG("EXT_D_M_O")+" = "+_CUR.EXT_DOESNT_MATH_OUT$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("EXT_D_M_O")+" = "+_CUR.EXT_DOESNT_MATH_OUT$
15340 IF _ORIG.INV_NUM$=_CUR.INV_NUM$ OR INV_NUM$=_CUR.INV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.INV_NUM$=INV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_NUM")+" = "+_CUR.INV_NUM$,_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_NUM")+" = "+_CUR.INV_NUM$
15350 IF _ORIG.INV_DATE$=_CUR.INV_DATE$ OR INV_DATE$=_CUR.INV_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.INV_DATE$=INV_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_DATE")+" = "+_CUR.INV_DATE$,_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_DATE")+" = "+_CUR.INV_DATE$
15360 IF _ORIG.STARTING_NUM$=_CUR.STARTING_NUM$ OR STARTING_NUM$=_CUR.STARTING_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.STARTING_NUM$=STARTING_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("STAR_N")+" = "+_CUR.STARTING_NUM$,_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("STAR_N")+" = "+_CUR.STARTING_NUM$
15370 IF _ORIG.ENDING_NUM$=_CUR.ENDING_NUM$ OR ENDING_NUM$=_CUR.ENDING_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ENDING_NUM$=ENDING_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ENDING_NUM")+" = "+_CUR.ENDING_NUM$,_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ENDING_NUM")+" = "+_CUR.ENDING_NUM$
15380 IF _ORIG.REC_STAT$=_CUR.REC_STAT$ OR REC_STAT$=_CUR.REC_STAT$ THEN GOTO *NEXT ELSE IF _ORIG.REC_STAT$=REC_STAT$ THEN _CHG2$=_CHG2$+SEP+MSG("REC_STAT")+" = "+_CUR.REC_STAT$,_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REC_STAT")+" = "+_CUR.REC_STAT$
15390 IF _ORIG.FMS_FISCAL_YEAR_PER$=_CUR.FMS_FISCAL_YEAR_PER$ OR FMS_FISCAL_YEAR_PER$=_CUR.FMS_FISCAL_YEAR_PER$ THEN GOTO *NEXT ELSE IF _ORIG.FMS_FISCAL_YEAR_PER$=FMS_FISCAL_YEAR_PER$ THEN _CHG2$=_CHG2$+SEP+MSG("FMS_F_Y_P")+" = "+_CUR.FMS_FISCAL_YEAR_PER$,_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FMS_F_Y_P")+" = "+_CUR.FMS_FISCAL_YEAR_PER$
15400 IF _ORIG.REC_REPORT$=_CUR.REC_REPORT$ OR REC_REPORT$=_CUR.REC_REPORT$ THEN GOTO *NEXT ELSE IF _ORIG.REC_REPORT$=REC_REPORT$ THEN _CHG2$=_CHG2$+SEP+MSG("REC_REPORT")+" = "+_CUR.REC_REPORT$,_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REC_REPORT")+" = "+_CUR.REC_REPORT$
15410 IF _ORIG.PO_DIV_DETAIL$=_CUR.PO_DIV_DETAIL$ OR PO_DIV_DETAIL$=_CUR.PO_DIV_DETAIL$ THEN GOTO *NEXT ELSE IF _ORIG.PO_DIV_DETAIL$=PO_DIV_DETAIL$ THEN _CHG2$=_CHG2$+SEP+MSG("P_D_D")+" = "+_CUR.PO_DIV_DETAIL$,_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("P_D_D")+" = "+_CUR.PO_DIV_DETAIL$
15420 IF _ORIG.PO_NUM_DETAIL$=_CUR.PO_NUM_DETAIL$ OR PO_NUM_DETAIL$=_CUR.PO_NUM_DETAIL$ THEN GOTO *NEXT ELSE IF _ORIG.PO_NUM_DETAIL$=PO_NUM_DETAIL$ THEN _CHG2$=_CHG2$+SEP+MSG("P_N_D")+" = "+_CUR.PO_NUM_DETAIL$,_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("P_N_D")+" = "+_CUR.PO_NUM_DETAIL$
15430 IF _ORIG.PO_DATE$=_CUR.PO_DATE$ OR PO_DATE$=_CUR.PO_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.PO_DATE$=PO_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("PO_DATE")+" = "+_CUR.PO_DATE$,_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PO_DATE")+" = "+_CUR.PO_DATE$
15440 IF _ORIG.FACTORY_JOB_NUM$=_CUR.FACTORY_JOB_NUM$ OR FACTORY_JOB_NUM$=_CUR.FACTORY_JOB_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.FACTORY_JOB_NUM$=FACTORY_JOB_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("FACT_J_N")+" = "+_CUR.FACTORY_JOB_NUM$,_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FACT_J_N")+" = "+_CUR.FACTORY_JOB_NUM$
15450 IF _ORIG.BIN_LOC$=_CUR.BIN_LOC$ OR BIN_LOC$=_CUR.BIN_LOC$ THEN GOTO *NEXT ELSE IF _ORIG.BIN_LOC$=BIN_LOC$ THEN _CHG2$=_CHG2$+SEP+MSG("BIN_LOC")+" = "+_CUR.BIN_LOC$,_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BIN_LOC")+" = "+_CUR.BIN_LOC$
15460 IF _ORIG.PRIMARY_UM$=_CUR.PRIMARY_UM$ OR PRIMARY_UM$=_CUR.PRIMARY_UM$ THEN GOTO *NEXT ELSE IF _ORIG.PRIMARY_UM$=PRIMARY_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIMARY_UM")+" = "+_CUR.PRIMARY_UM$,_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIMARY_UM")+" = "+_CUR.PRIMARY_UM$
15470 IF _ORIG.PACKAGING_UM$=_CUR.PACKAGING_UM$ OR PACKAGING_UM$=_CUR.PACKAGING_UM$ THEN GOTO *NEXT ELSE IF _ORIG.PACKAGING_UM$=PACKAGING_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("PACK_UM")+" = "+_CUR.PACKAGING_UM$,_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PACK_UM")+" = "+_CUR.PACKAGING_UM$
15480 IF _ORIG.CUST_CMNT$=_CUR.CUST_CMNT$ OR CUST_CMNT$=_CUR.CUST_CMNT$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CMNT$=CUST_CMNT$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CMNT")+" = "+_CUR.CUST_CMNT$,_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CMNT")+" = "+_CUR.CUST_CMNT$
15490 IF _ORIG.RECVD_AUDIT_NUM$=_CUR.RECVD_AUDIT_NUM$ OR RECVD_AUDIT_NUM$=_CUR.RECVD_AUDIT_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.RECVD_AUDIT_NUM$=RECVD_AUDIT_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("RECV_A_N")+" = "+_CUR.RECVD_AUDIT_NUM$,_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RECV_A_N")+" = "+_CUR.RECVD_AUDIT_NUM$
15500 IF _ORIG.RELEASED_ON_INV_NUM$=_CUR.RELEASED_ON_INV_NUM$ OR RELEASED_ON_INV_NUM$=_CUR.RELEASED_ON_INV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.RELEASED_ON_INV_NUM$=RELEASED_ON_INV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("RELE_O_I_N")+" = "+_CUR.RELEASED_ON_INV_NUM$,_CHG_VAR$(48,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RELE_O_I_N")+" = "+_CUR.RELEASED_ON_INV_NUM$
15510 IF _ORIG.RELEASED_ACN$=_CUR.RELEASED_ACN$ OR RELEASED_ACN$=_CUR.RELEASED_ACN$ THEN GOTO *NEXT ELSE IF _ORIG.RELEASED_ACN$=RELEASED_ACN$ THEN _CHG2$=_CHG2$+SEP+MSG("RELE_A")+" = "+_CUR.RELEASED_ACN$,_CHG_VAR$(49,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RELE_A")+" = "+_CUR.RELEASED_ACN$
15520 IF _ORIG.COST_CENTER_CODE_1$=_CUR.COST_CENTER_CODE_1$ OR COST_CENTER_CODE_1$=_CUR.COST_CENTER_CODE_1$ THEN GOTO *NEXT ELSE IF _ORIG.COST_CENTER_CODE_1$=COST_CENTER_CODE_1$ THEN _CHG2$=_CHG2$+SEP+MSG("COST_C_C_1")+" = "+_CUR.COST_CENTER_CODE_1$,_CHG_VAR$(50,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_C_C_1")+" = "+_CUR.COST_CENTER_CODE_1$
15530 IF _ORIG.FMZ_UNUSED_2$=_CUR.FMZ_UNUSED_2$ OR FMZ_UNUSED_2$=_CUR.FMZ_UNUSED_2$ THEN GOTO *NEXT ELSE IF _ORIG.FMZ_UNUSED_2$=FMZ_UNUSED_2$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FMZ_UNUSED_2$,_CHG_VAR$(51,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FMZ_UNUSED_2$
15540 IF _ORIG.CUST_PO_FROM_LOT$=_CUR.CUST_PO_FROM_LOT$ OR CUST_PO_FROM_LOT$=_CUR.CUST_PO_FROM_LOT$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_PO_FROM_LOT$=CUST_PO_FROM_LOT$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_P_F_L")+" = "+_CUR.CUST_PO_FROM_LOT$,_CHG_VAR$(52,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_P_F_L")+" = "+_CUR.CUST_PO_FROM_LOT$
15550 IF _ORIG.RECVG_DEPT$=_CUR.RECVG_DEPT$ OR RECVG_DEPT$=_CUR.RECVG_DEPT$ THEN GOTO *NEXT ELSE IF _ORIG.RECVG_DEPT$=RECVG_DEPT$ THEN _CHG2$=_CHG2$+SEP+MSG("RECVG_DEPT")+" = "+_CUR.RECVG_DEPT$,_CHG_VAR$(53,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RECVG_DEPT")+" = "+_CUR.RECVG_DEPT$
15560 IF _ORIG.BILLING_DEPT$=_CUR.BILLING_DEPT$ OR BILLING_DEPT$=_CUR.BILLING_DEPT$ THEN GOTO *NEXT ELSE IF _ORIG.BILLING_DEPT$=BILLING_DEPT$ THEN _CHG2$=_CHG2$+SEP+MSG("BILL_D")+" = "+_CUR.BILLING_DEPT$,_CHG_VAR$(54,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BILL_D")+" = "+_CUR.BILLING_DEPT$
15570 IF _ORIG.CUST_SERV_REP$=_CUR.CUST_SERV_REP$ OR CUST_SERV_REP$=_CUR.CUST_SERV_REP$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_SERV_REP$=CUST_SERV_REP$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_S_R")+" = "+_CUR.CUST_SERV_REP$,_CHG_VAR$(55,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_S_R")+" = "+_CUR.CUST_SERV_REP$
15580 IF _ORIG.BUYER_ID$=_CUR.BUYER_ID$ OR BUYER_ID$=_CUR.BUYER_ID$ THEN GOTO *NEXT ELSE IF _ORIG.BUYER_ID$=BUYER_ID$ THEN _CHG2$=_CHG2$+SEP+MSG("BUYER_ID")+" = "+_CUR.BUYER_ID$,_CHG_VAR$(56,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BUYER_ID")+" = "+_CUR.BUYER_ID$
15590 IF _ORIG.FMZ_UNUSED_3$=_CUR.FMZ_UNUSED_3$ OR FMZ_UNUSED_3$=_CUR.FMZ_UNUSED_3$ THEN GOTO *NEXT ELSE IF _ORIG.FMZ_UNUSED_3$=FMZ_UNUSED_3$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FMZ_UNUSED_3$,_CHG_VAR$(57,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FMZ_UNUSED_3$
15600 IF _ORIG.SELL_QTY_PER=_CUR.SELL_QTY_PER OR SELL_QTY_PER=_CUR.SELL_QTY_PER THEN GOTO *NEXT ELSE IF _ORIG.SELL_QTY_PER=SELL_QTY_PER THEN _CHG2$=_CHG2$+SEP+MSG("SELL_Q_P")+" = "+STR(_CUR.SELL_QTY_PER),_CHG_VAR$(58,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_Q_P")+" = "+STR(_CUR.SELL_QTY_PER)
15610 IF _ORIG.QTY_SHIPPED=_CUR.QTY_SHIPPED OR QTY_SHIPPED=_CUR.QTY_SHIPPED THEN GOTO *NEXT ELSE IF _ORIG.QTY_SHIPPED=QTY_SHIPPED THEN _CHG2$=_CHG2$+SEP+MSG("QTY_S")+" = "+STR(_CUR.QTY_SHIPPED),_CHG_VAR$(59,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QTY_S")+" = "+STR(_CUR.QTY_SHIPPED)
15620 IF _ORIG.FMS_PRICE=_CUR.FMS_PRICE OR FMS_PRICE=_CUR.FMS_PRICE THEN GOTO *NEXT ELSE IF _ORIG.FMS_PRICE=FMS_PRICE THEN _CHG2$=_CHG2$+SEP+MSG("FMS_PRICE")+" = "+STR(_CUR.FMS_PRICE),_CHG_VAR$(60,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FMS_PRICE")+" = "+STR(_CUR.FMS_PRICE)
15630 IF _ORIG.FMS_EXTENDED_VALUE=_CUR.FMS_EXTENDED_VALUE OR FMS_EXTENDED_VALUE=_CUR.FMS_EXTENDED_VALUE THEN GOTO *NEXT ELSE IF _ORIG.FMS_EXTENDED_VALUE=FMS_EXTENDED_VALUE THEN _CHG2$=_CHG2$+SEP+MSG("FMS_E_V")+" = "+STR(_CUR.FMS_EXTENDED_VALUE),_CHG_VAR$(61,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FMS_E_V")+" = "+STR(_CUR.FMS_EXTENDED_VALUE)
15640 IF _ORIG.SELL_PRICE=_CUR.SELL_PRICE OR SELL_PRICE=_CUR.SELL_PRICE THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE=SELL_PRICE THEN _CHG2$=_CHG2$+SEP+MSG("SELL_PRICE")+" = "+STR(_CUR.SELL_PRICE),_CHG_VAR$(62,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_PRICE")+" = "+STR(_CUR.SELL_PRICE)
15650 IF _ORIG.SELL_EXTENDED_VALUE=_CUR.SELL_EXTENDED_VALUE OR SELL_EXTENDED_VALUE=_CUR.SELL_EXTENDED_VALUE THEN GOTO *NEXT ELSE IF _ORIG.SELL_EXTENDED_VALUE=SELL_EXTENDED_VALUE THEN _CHG2$=_CHG2$+SEP+MSG("SELL_E_V")+" = "+STR(_CUR.SELL_EXTENDED_VALUE),_CHG_VAR$(63,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_E_V")+" = "+STR(_CUR.SELL_EXTENDED_VALUE)
15660 IF _ORIG.NET_SALE=_CUR.NET_SALE OR NET_SALE=_CUR.NET_SALE THEN GOTO *NEXT ELSE IF _ORIG.NET_SALE=NET_SALE THEN _CHG2$=_CHG2$+SEP+MSG("NET_SALE")+" = "+STR(_CUR.NET_SALE),_CHG_VAR$(64,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NET_SALE")+" = "+STR(_CUR.NET_SALE)
15670 IF _ORIG.PRORATED_FRT=_CUR.PRORATED_FRT OR PRORATED_FRT=_CUR.PRORATED_FRT THEN GOTO *NEXT ELSE IF _ORIG.PRORATED_FRT=PRORATED_FRT THEN _CHG2$=_CHG2$+SEP+MSG("PROR_F")+" = "+STR(_CUR.PRORATED_FRT),_CHG_VAR$(65,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROR_F")+" = "+STR(_CUR.PRORATED_FRT)
15680 IF _ORIG.PRORATED_STAX=_CUR.PRORATED_STAX OR PRORATED_STAX=_CUR.PRORATED_STAX THEN GOTO *NEXT ELSE IF _ORIG.PRORATED_STAX=PRORATED_STAX THEN _CHG2$=_CHG2$+SEP+MSG("PROR_S")+" = "+STR(_CUR.PRORATED_STAX),_CHG_VAR$(66,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROR_S")+" = "+STR(_CUR.PRORATED_STAX)
15690 IF _ORIG.PRORATED_SPEC_CHG=_CUR.PRORATED_SPEC_CHG OR PRORATED_SPEC_CHG=_CUR.PRORATED_SPEC_CHG THEN GOTO *NEXT ELSE IF _ORIG.PRORATED_SPEC_CHG=PRORATED_SPEC_CHG THEN _CHG2$=_CHG2$+SEP+MSG("PROR_S_C")+" = "+STR(_CUR.PRORATED_SPEC_CHG),_CHG_VAR$(67,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROR_S_C")+" = "+STR(_CUR.PRORATED_SPEC_CHG)
15700 IF _ORIG.UNIT_PRICE_BILLED=_CUR.UNIT_PRICE_BILLED OR UNIT_PRICE_BILLED=_CUR.UNIT_PRICE_BILLED THEN GOTO *NEXT ELSE IF _ORIG.UNIT_PRICE_BILLED=UNIT_PRICE_BILLED THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_P_B")+" = "+STR(_CUR.UNIT_PRICE_BILLED),_CHG_VAR$(68,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_P_B")+" = "+STR(_CUR.UNIT_PRICE_BILLED)
15710 IF _ORIG.UNITS_PER_PACK=_CUR.UNITS_PER_PACK OR UNITS_PER_PACK=_CUR.UNITS_PER_PACK THEN GOTO *NEXT ELSE IF _ORIG.UNITS_PER_PACK=UNITS_PER_PACK THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_P_P")+" = "+STR(_CUR.UNITS_PER_PACK),_CHG_VAR$(69,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_P_P")+" = "+STR(_CUR.UNITS_PER_PACK)
15720 IF _ORIG.UNITS_PER_PACK_UNIT=_CUR.UNITS_PER_PACK_UNIT OR UNITS_PER_PACK_UNIT=_CUR.UNITS_PER_PACK_UNIT THEN GOTO *NEXT ELSE IF _ORIG.UNITS_PER_PACK_UNIT=UNITS_PER_PACK_UNIT THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_P_P_U")+" = "+STR(_CUR.UNITS_PER_PACK_UNIT),_CHG_VAR$(70,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_P_P_U")+" = "+STR(_CUR.UNITS_PER_PACK_UNIT)
15730 IF _ORIG.CNT_FROM_LOTS=_CUR.CNT_FROM_LOTS OR CNT_FROM_LOTS=_CUR.CNT_FROM_LOTS THEN GOTO *NEXT ELSE IF _ORIG.CNT_FROM_LOTS=CNT_FROM_LOTS THEN _CHG2$=_CHG2$+SEP+MSG("CNT_F_L")+" = "+STR(_CUR.CNT_FROM_LOTS),_CHG_VAR$(71,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CNT_F_L")+" = "+STR(_CUR.CNT_FROM_LOTS)
15740 IF _ORIG.FMZ_UNUSED_4=_CUR.FMZ_UNUSED_4 OR FMZ_UNUSED_4=_CUR.FMZ_UNUSED_4 THEN GOTO *NEXT ELSE IF _ORIG.FMZ_UNUSED_4=FMZ_UNUSED_4 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FMZ_UNUSED_4),_CHG_VAR$(72,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FMZ_UNUSED_4)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16030 IF _CHG_VAR$(2,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16040 IF _CHG_VAR$(3,1)="Y" THEN LOC_TYPE$=_CUR.LOC_TYPE$
16050 IF _CHG_VAR$(4,1)="Y" THEN LOC_CODE$=_CUR.LOC_CODE$
16060 IF _CHG_VAR$(5,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN ACTIVITY_DATE$=_CUR.ACTIVITY_DATE$
16080 IF _CHG_VAR$(7,1)="Y" THEN SEQ_NUM$=_CUR.SEQ_NUM$
16090 IF _CHG_VAR$(8,1)="Y" THEN ACTIVITY_TYPE$=_CUR.ACTIVITY_TYPE$
16100 IF _CHG_VAR$(9,1)="Y" THEN ITEM_CUST_DIV$=_CUR.ITEM_CUST_DIV$
16110 IF _CHG_VAR$(10,1)="Y" THEN ITEM_CUST_CODE$=_CUR.ITEM_CUST_CODE$
16120 IF _CHG_VAR$(11,1)="Y" THEN ITEM_DESC$=_CUR.ITEM_DESC$
16130 IF _CHG_VAR$(12,1)="Y" THEN REV_DATE$=_CUR.REV_DATE$
16140 IF _CHG_VAR$(13,1)="Y" THEN FROM_LOC$=_CUR.FROM_LOC$
16150 IF _CHG_VAR$(14,1)="Y" THEN SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$
16160 IF _CHG_VAR$(15,1)="Y" THEN ORDER_TYPE$=_CUR.ORDER_TYPE$
16170 IF _CHG_VAR$(16,1)="Y" THEN ORDER_DIV$=_CUR.ORDER_DIV$
16180 IF _CHG_VAR$(17,1)="Y" THEN ORDER_NUM$=_CUR.ORDER_NUM$
16190 IF _CHG_VAR$(18,1)="Y" THEN PO_CODE$=_CUR.PO_CODE$
16200 IF _CHG_VAR$(19,1)="Y" THEN CUST_PO$=_CUR.CUST_PO$
16210 IF _CHG_VAR$(20,1)="Y" THEN SRC_CODE$=_CUR.SRC_CODE$
16220 IF _CHG_VAR$(21,1)="Y" THEN AUDIT_NUM$=_CUR.AUDIT_NUM$
16230 IF _CHG_VAR$(22,1)="Y" THEN ORDER_DATE$=_CUR.ORDER_DATE$
16240 IF _CHG_VAR$(23,1)="Y" THEN ORDER_LINE_NUM$=_CUR.ORDER_LINE_NUM$
16250 IF _CHG_VAR$(24,1)="Y" THEN LOTTED_INV_ITEM$=_CUR.LOTTED_INV_ITEM$
16260 IF _CHG_VAR$(25,1)="Y" THEN MEMO_REFERENCE$=_CUR.MEMO_REFERENCE$
16270 IF _CHG_VAR$(26,1)="Y" THEN FMZ_UNUSED_1$=_CUR.FMZ_UNUSED_1$
16280 IF _CHG_VAR$(27,1)="Y" THEN VEND_DIV$=_CUR.VEND_DIV$
16290 IF _CHG_VAR$(28,1)="Y" THEN VEND_CODE$=_CUR.VEND_CODE$
16300 IF _CHG_VAR$(29,1)="Y" THEN VEND_PLANT$=_CUR.VEND_PLANT$
16310 IF _CHG_VAR$(30,1)="Y" THEN SELL_UM$=_CUR.SELL_UM$
16320 IF _CHG_VAR$(31,1)="Y" THEN EXT_DOESNT_MATH_OUT$=_CUR.EXT_DOESNT_MATH_OUT$
16330 IF _CHG_VAR$(32,1)="Y" THEN INV_NUM$=_CUR.INV_NUM$
16340 IF _CHG_VAR$(33,1)="Y" THEN INV_DATE$=_CUR.INV_DATE$
16350 IF _CHG_VAR$(34,1)="Y" THEN STARTING_NUM$=_CUR.STARTING_NUM$
16360 IF _CHG_VAR$(35,1)="Y" THEN ENDING_NUM$=_CUR.ENDING_NUM$
16370 IF _CHG_VAR$(36,1)="Y" THEN REC_STAT$=_CUR.REC_STAT$
16380 IF _CHG_VAR$(37,1)="Y" THEN FMS_FISCAL_YEAR_PER$=_CUR.FMS_FISCAL_YEAR_PER$
16390 IF _CHG_VAR$(38,1)="Y" THEN REC_REPORT$=_CUR.REC_REPORT$
16400 IF _CHG_VAR$(39,1)="Y" THEN PO_DIV_DETAIL$=_CUR.PO_DIV_DETAIL$
16410 IF _CHG_VAR$(40,1)="Y" THEN PO_NUM_DETAIL$=_CUR.PO_NUM_DETAIL$
16420 IF _CHG_VAR$(41,1)="Y" THEN PO_DATE$=_CUR.PO_DATE$
16430 IF _CHG_VAR$(42,1)="Y" THEN FACTORY_JOB_NUM$=_CUR.FACTORY_JOB_NUM$
16440 IF _CHG_VAR$(43,1)="Y" THEN BIN_LOC$=_CUR.BIN_LOC$
16450 IF _CHG_VAR$(44,1)="Y" THEN PRIMARY_UM$=_CUR.PRIMARY_UM$
16460 IF _CHG_VAR$(45,1)="Y" THEN PACKAGING_UM$=_CUR.PACKAGING_UM$
16470 IF _CHG_VAR$(46,1)="Y" THEN CUST_CMNT$=_CUR.CUST_CMNT$
16480 IF _CHG_VAR$(47,1)="Y" THEN RECVD_AUDIT_NUM$=_CUR.RECVD_AUDIT_NUM$
16490 IF _CHG_VAR$(48,1)="Y" THEN RELEASED_ON_INV_NUM$=_CUR.RELEASED_ON_INV_NUM$
16500 IF _CHG_VAR$(49,1)="Y" THEN RELEASED_ACN$=_CUR.RELEASED_ACN$
16510 IF _CHG_VAR$(50,1)="Y" THEN COST_CENTER_CODE_1$=_CUR.COST_CENTER_CODE_1$
16520 IF _CHG_VAR$(51,1)="Y" THEN FMZ_UNUSED_2$=_CUR.FMZ_UNUSED_2$
16530 IF _CHG_VAR$(52,1)="Y" THEN CUST_PO_FROM_LOT$=_CUR.CUST_PO_FROM_LOT$
16540 IF _CHG_VAR$(53,1)="Y" THEN RECVG_DEPT$=_CUR.RECVG_DEPT$
16550 IF _CHG_VAR$(54,1)="Y" THEN BILLING_DEPT$=_CUR.BILLING_DEPT$
16560 IF _CHG_VAR$(55,1)="Y" THEN CUST_SERV_REP$=_CUR.CUST_SERV_REP$
16570 IF _CHG_VAR$(56,1)="Y" THEN BUYER_ID$=_CUR.BUYER_ID$
16580 IF _CHG_VAR$(57,1)="Y" THEN FMZ_UNUSED_3$=_CUR.FMZ_UNUSED_3$
16590 IF _CHG_VAR$(58,1)="Y" THEN SELL_QTY_PER=_CUR.SELL_QTY_PER
16600 IF _CHG_VAR$(59,1)="Y" THEN QTY_SHIPPED=_CUR.QTY_SHIPPED
16610 IF _CHG_VAR$(60,1)="Y" THEN FMS_PRICE=_CUR.FMS_PRICE
16620 IF _CHG_VAR$(61,1)="Y" THEN FMS_EXTENDED_VALUE=_CUR.FMS_EXTENDED_VALUE
16630 IF _CHG_VAR$(62,1)="Y" THEN SELL_PRICE=_CUR.SELL_PRICE
16640 IF _CHG_VAR$(63,1)="Y" THEN SELL_EXTENDED_VALUE=_CUR.SELL_EXTENDED_VALUE
16650 IF _CHG_VAR$(64,1)="Y" THEN NET_SALE=_CUR.NET_SALE
16660 IF _CHG_VAR$(65,1)="Y" THEN PRORATED_FRT=_CUR.PRORATED_FRT
16670 IF _CHG_VAR$(66,1)="Y" THEN PRORATED_STAX=_CUR.PRORATED_STAX
16680 IF _CHG_VAR$(67,1)="Y" THEN PRORATED_SPEC_CHG=_CUR.PRORATED_SPEC_CHG
16690 IF _CHG_VAR$(68,1)="Y" THEN UNIT_PRICE_BILLED=_CUR.UNIT_PRICE_BILLED
16700 IF _CHG_VAR$(69,1)="Y" THEN UNITS_PER_PACK=_CUR.UNITS_PER_PACK
16710 IF _CHG_VAR$(70,1)="Y" THEN UNITS_PER_PACK_UNIT=_CUR.UNITS_PER_PACK_UNIT
16720 IF _CHG_VAR$(71,1)="Y" THEN CNT_FROM_LOTS=_CUR.CNT_FROM_LOTS
16730 IF _CHG_VAR$(72,1)="Y" THEN FMZ_UNUSED_4=_CUR.FMZ_UNUSED_4
16990 RETURN 
56000 REM "220977-Add new field, Lot Receipt Date, to FMZ file, modify updates
56001 REM "300105-GUI Panel issue in FMZ File Maintenance.                    
