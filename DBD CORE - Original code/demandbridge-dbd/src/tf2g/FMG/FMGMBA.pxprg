0010 ! FMGMBA - File Maintenance Program for ASL_SuggSell (="ASL"+%C$)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Oct. 25, 2002 8:49
0030 ! ************************************************************************
0035 REM "5.7 - 06/23/09 - 11.236388 - jdf - SSP# 230619
0037 REM "230619-Suggestive Selling-if you leave the suggest item cust blank 
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "FMGMBA","../FMG/FM.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0155 %CUST_CODE$="",%CUST_DIV$="" ! SSP230619 jdf
0160 _FILE_NAME$="ASL"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0182 _IC0=HFN; OPEN (_IC0,IOL=*,ERR=OPEN_ERR)"IC0"+%C$ ! SSP230619 jdf
0184 _FM1=HFN; OPEN (_FM1,IOL=*,ERR=OPEN_ERR)"FM1"+%C$ ! SSP230619 jdf
0186 _IC0_SUGG=HFN; OPEN (_IC0_SUGG,ERR=OPEN_ERR)"IC0"+%C$ ! SSP230619 jdf
0188 _FM1_SUGG=HFN; OPEN (_FM1_SUGG,ERR=OPEN_ERR)"FM1"+%C$ ! SSP230619 jdf
0189 _AR1=HFN; OPEN (_AR1,IOL=*,ERR=OPEN_ERR)"AR1"+%C$ ! SSP230619 jdf
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=4
0430 DIM _KEYS$[1:4]; _KEYS$[1]="CUSTOMER$",_KEYS$[2]="ITEM_CODE$",_KEYS$[3]="SUGG_CUSTOMER$",_KEYS$[4]="SUGGESTED_ITEM_NUM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0925 %STOCK$="" ! SSP230619 jdf
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0942 IF _IC0<>0 THEN CLOSE (_IC0); _IC0=0 ! SSP230619 jdf
0943 IF _IC0_SUGG<>0 THEN CLOSE (_IC0_SUGG); _IC0_SUGG=0 ! SSP230619 jdf
0944 IF _FM1<>0 THEN CLOSE (_FM1); _FM1=0 ! SSP230619 jdf
0945 IF _FM1_SUGG<>0 THEN CLOSE (_FM1_SUGG); _FM1_SUGG=0 ! SSP230619 jdf
0946 IF _AR1<>0 THEN CLOSE (_AR1); _AR1=0 ! SSP230619 jdf
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$
1047 CALL "ZZWLKU;PARSE_CUST",SUGG_CUSTOMER$,SUGGESTED_CUST_DIV$,SUGGESTED_CUST_CODE$; SUGG_CUSTOMER$=SUGGESTED_CUST_DIV$+SUGGESTED_CUST_CODE$
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 REM IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS ! SSP230619 jdf
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3061 CUSTOMER$=CUST_DIV$+CUST_CODE$
3063 SUGG_CUSTOMER$=SUGGESTED_CUST_DIV$+SUGGESTED_CUST_CODE$
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUST_DIV.CTL,_FIRST_FIELD=MESSAGE_TO_OPERATOR.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
8000 QUERY_CUST:! SSP230619 jdf
8010 IF STP(CUSTOMER$)="" THEN PROCESS "QRY_IC0","../ICG/IC.EN",VAL$ ELSE PROCESS "QRY_FM1_ITEM","../FMG/FM.EN",VAL$ ! SSP230619 jdf
8015 QRY_VAL$=VAL$ ! SSP230619 jdf
8020 CUSTOMER$=PAD(CUSTOMER$,10," ") ! SSP230619 jdf
8026 _KEY_Q$=CUSTOMER$+VAL$ ! SSP230619 jdf
8030 IF STP(CUSTOMER$)="" THEN READ (_IC0,KEY=_KEY_Q$,ERR=*NEXT) ELSE READ (_FM1,KEY=_KEY_Q$,ERR=*NEXT) ! SSP230619 jdf
8035 REFRESH_FLG=1 ! SSP230619 jdf
8040 RETURN ! SSP230619 jdf
8100 QUERY_CUST_SUGG:! SSP230619 jdf
8110 IF STP(SUGG_CUSTOMER$)="" THEN PROCESS "QRY_IC0","../ICG/IC.EN",VAL$ ELSE PROCESS "QRY_FM1_ITEM","../FMG/FM.EN",VAL$ ! SSP230619 jdf
8115 QRY_VAL$=VAL$ ! SSP230619 jdf
8120 SUGG_CUSTOMER$=PAD(SUGG_CUSTOMER$,10," ") ! SSP230619 jdf
8126 _KEY_Q$=SUGG_CUSTOMER$+VAL$ ! SSP230619 jdf
8130 IF STP(SUGG_CUSTOMER$)="" THEN READ (_IC0_SUGG,KEY=_KEY_Q$,ERR=*NEXT)IC0_SUGG$ ELSE READ (_FM1_SUGG,KEY=_KEY_Q$,ERR=*NEXT)FM1_SUGG$ ! SSP230619 jdf
8132 IF STP(SUGG_CUSTOMER$)="" THEN ITEM_DESC_SUGG$=MID(IC0_SUGG$,21,40),SUGGESTED_ITEM_NUM$=MID(IC0_SUGG$,11,10) ELSE ITEM_DESC_SUGG$=MID(FM1_SUGG$,42,40),SUGGESTED_ITEM_NUM$=MID(FM1_SUGG$,11,10) ! SSP230619 jdf
8135 REFRESH_FLG=1 ! SSP230619 jdf
8140 RETURN ! SSP230619 jdf
8200 GET_ITEM:! SSP230619 jdf
8210 ITEM_CODE$=PAD(ITEM_CODE$,10," "); _KEY_Q$=CUSTOMER$+ITEM_CODE$ ! SSP230619 jdf
8215 IF STP(CUSTOMER$)="" THEN _KEY_Q$=PAD(_KEY_Q$(1,10),20,0," ") ! SSP230619 jdf
8220 IF STP(CUSTOMER$)="" THEN READ (_IC0,KEY=_KEY_Q$,ERR=*NEXT) ELSE READ (_FM1,KEY=_KEY_Q$,ERR=*NEXT) ! SSP230619 jdf
8230 REM %ITEM_DESC$=ITEM_DESC$ ! SSP230619 jdf
8260 RETURN ! SSP230619 jdf
8300 GET_ITEM_SUGG:! SSP230619 jdf
8310 IF STP(SUGGESTED_ITEM_NUM$)<>"" THEN { SUGGESTED_ITEM_NUM$=PAD(SUGGESTED_ITEM_NUM$,10," "); _KEY_Q$=SUGG_CUSTOMER$+SUGGESTED_ITEM_NUM$ ! SSP230619 jdf
8320 IF STP(SUGG_CUSTOMER$)="" THEN READ (_IC0_SUGG,KEY=_KEY_Q$,ERR=*NEXT)IC0_SUGG$ ELSE READ (_FM1_SUGG,KEY=_KEY_Q$,ERR=*NEXT)FM1_SUGG$ ! SSP230619 jdf
8325 IF STP(FM1_SUGG$)="" THEN _KEY_Q$=PAD(_KEY_Q$(1,10),20,0," "); READ (_IC0_SUGG,KEY=_KEY_Q$,ERR=*NEXT)IC0_SUGG$ ! SSP230619 jdf
8330 IF STP(FM1_SUGG$)="" THEN ITEM_DESC_SUGG$=MID(IC0_SUGG$,21,40),SUGGESTED_ITEM_NUM$=MID(IC0_SUGG$,11,10) ! SSP230619 jdf
8340  } ! SSP230619 jdf
8344 IF STP(FM1_SUGG$)<>"" THEN ITEM_DESC_SUGG$=MID(FM1_SUGG$,42,40) ! SSP230619 jdf
8347 CALL "*WINGRP;ENABLE",FIELDS.GRP$ ! SSP230619 jdf
8348 CALL "*WINGRP;DISABLE",KEY4.GRP$ ! SSP230619 jdf
8350 RETURN ! SSP230619 jdf
8400 GET_CUST_NAME:! SSP230619 jdf
8410 READ (_AR1,KEY=CUSTOMER$,ERR=*NEXT) ! SSP230619 jdf
8415 CUST_NAME1$=CUST_NAME$ ! SSP230619 jdf
8417 CALL "*WINGRP;ENABLE",KEY2.GRP$ ! SSP230619 jdf
8418 NEXT_ID=ITEM_CODE.CTL,REFRESH_FLG=1 ! SSP230619 jdf
8420 RETURN ! SSP230619 jdf
8500 GET_CUST_NAME_SUGG:! SSP230619 jdf
8510 IF STP(SUGG_CUSTOMER$)<>"" THEN {READ (_AR1,KEY=SUGG_CUSTOMER$,ERR=*NEXT) ! SSP230619 jdf
8515 CUST_NAME_SUGG$=CUST_NAME$ } ! SSP230619 jdf
8517 NEXT_ID=SUGGESTED_ITEM_NUM.CTL ! SSP230619 jdf
8518 CALL "*WINGRP;ENABLE",KEY4.GRP$ ! SSP230619 jdf
8520 RETURN ! SSP230619 jdf
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN CUST_DIV$=""
13030 IF _CLR_FLG$="R" THEN CUST_CODE$=""
13040 IF _CLR_FLG$="R" THEN ITEM_CODE$=""
13050 IF _CLR_FLG$="R" THEN SUGGESTED_CUST_DIV$=""
13060 IF _CLR_FLG$="R" THEN SUGGESTED_CUST_CODE$=""
13070 IF _CLR_FLG$="R" THEN SUGGESTED_ITEM_NUM$=""
13080 MESSAGE_TO_OPERATOR$=""
13090 WHEN_TO_SUGGEST$=""
13100 ASL_UNUSED_1$=""
13200 IF _CLR_FLG$="R" THEN CUSTOMER$="",CUST_NAME1$="",ITEM_CODE$="",ITEM_DESC$="",SUGG_CUSTOMER$="",CUST_NAME_SUGG$="",SUGGESTED_ITEM_NUM$="",ITEM_DESC_SUGG$="",MESSAGE_TO_OPERATOR$="",WHEN_TO_SUGGEST$=" ",CUST_NAME$="",VAL$="",FM1_SUGG$="",IC0_SUGG$="" ! SSP230619 jdf
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=CUST_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=ITEM_CODE.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=SUGGESTED_CUST_DIV.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14060 IF _ENABLE_FLG=5 THEN CALL "*wingrp;Enable",KEY5.GRP$; NEXT_ID=SUGGESTED_CUST_CODE.CTL ELSE CALL "*wingrp;Disable",KEY5.GRP$
14070 IF _ENABLE_FLG=6 THEN CALL "*wingrp;Enable",KEY6.GRP$; NEXT_ID=SUGGESTED_ITEM_NUM.CTL ELSE CALL "*wingrp;Disable",KEY6.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(9,"N")
15030 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15040 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15050 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15060 IF _ORIG.SUGGESTED_CUST_DIV$=_CUR.SUGGESTED_CUST_DIV$ OR SUGGESTED_CUST_DIV$=_CUR.SUGGESTED_CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.SUGGESTED_CUST_DIV$=SUGGESTED_CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("SUGG_C_D")+" = "+_CUR.SUGGESTED_CUST_DIV$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SUGG_C_D")+" = "+_CUR.SUGGESTED_CUST_DIV$
15070 IF _ORIG.SUGGESTED_CUST_CODE$=_CUR.SUGGESTED_CUST_CODE$ OR SUGGESTED_CUST_CODE$=_CUR.SUGGESTED_CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SUGGESTED_CUST_CODE$=SUGGESTED_CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SUGG_C_C")+" = "+_CUR.SUGGESTED_CUST_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SUGG_C_C")+" = "+_CUR.SUGGESTED_CUST_CODE$
15080 IF _ORIG.SUGGESTED_ITEM_NUM$=_CUR.SUGGESTED_ITEM_NUM$ OR SUGGESTED_ITEM_NUM$=_CUR.SUGGESTED_ITEM_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.SUGGESTED_ITEM_NUM$=SUGGESTED_ITEM_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("SUGG_I_N")+" = "+_CUR.SUGGESTED_ITEM_NUM$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SUGG_I_N")+" = "+_CUR.SUGGESTED_ITEM_NUM$
15090 IF _ORIG.MESSAGE_TO_OPERATOR$=_CUR.MESSAGE_TO_OPERATOR$ OR MESSAGE_TO_OPERATOR$=_CUR.MESSAGE_TO_OPERATOR$ THEN GOTO *NEXT ELSE IF _ORIG.MESSAGE_TO_OPERATOR$=MESSAGE_TO_OPERATOR$ THEN _CHG2$=_CHG2$+SEP+MSG("MESS_T_O")+" = "+_CUR.MESSAGE_TO_OPERATOR$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MESS_T_O")+" = "+_CUR.MESSAGE_TO_OPERATOR$
15100 IF _ORIG.WHEN_TO_SUGGEST$=_CUR.WHEN_TO_SUGGEST$ OR WHEN_TO_SUGGEST$=_CUR.WHEN_TO_SUGGEST$ THEN GOTO *NEXT ELSE IF _ORIG.WHEN_TO_SUGGEST$=WHEN_TO_SUGGEST$ THEN _CHG2$=_CHG2$+SEP+MSG("WHEN_T_S")+" = "+_CUR.WHEN_TO_SUGGEST$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WHEN_T_S")+" = "+_CUR.WHEN_TO_SUGGEST$
15110 IF _ORIG.ASL_UNUSED_1$=_CUR.ASL_UNUSED_1$ OR ASL_UNUSED_1$=_CUR.ASL_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.ASL_UNUSED_1$=ASL_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.ASL_UNUSED_1$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.ASL_UNUSED_1$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16030 IF _CHG_VAR$(2,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16040 IF _CHG_VAR$(3,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16050 IF _CHG_VAR$(4,1)="Y" THEN SUGGESTED_CUST_DIV$=_CUR.SUGGESTED_CUST_DIV$
16060 IF _CHG_VAR$(5,1)="Y" THEN SUGGESTED_CUST_CODE$=_CUR.SUGGESTED_CUST_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN SUGGESTED_ITEM_NUM$=_CUR.SUGGESTED_ITEM_NUM$
16080 IF _CHG_VAR$(7,1)="Y" THEN MESSAGE_TO_OPERATOR$=_CUR.MESSAGE_TO_OPERATOR$
16090 IF _CHG_VAR$(8,1)="Y" THEN WHEN_TO_SUGGEST$=_CUR.WHEN_TO_SUGGEST$
16100 IF _CHG_VAR$(9,1)="Y" THEN ASL_UNUSED_1$=_CUR.ASL_UNUSED_1$
16990 RETURN 
56000 REM "230619-Suggestive Selling-if you leave the suggest item cust blank 
