0010 ! FMGUT9 - Rebuild Committed & Sorts for S/O & P/O
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 09/26/13 - 8.708055 - tma - SSP# 265765
0037 REM "265765-pvx10- error running the SOP R2 in gui                      
0040 REM "Copyright 2013 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "FMGUT9","../FMG/FM.EN"
0060 EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0105 INIT:
0110 X0$="FM2UT9",X1$="Rebuild Committed Fields & Order Sorts"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0140 DIM A[15],B[13],I[20]
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF MID(X3$,66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12],A[13],A[14],A[15]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13]
0330 IOLIST C$
0410 IOLIST KT2$,KT2[0],KT2[1],KT2[2]
0420 IOLIST I$,I[0],I[1],I[2],I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14],I[15],I[16],I[17],I[18],I[19],I[20]
0421 IOLIST I$,I[0],STR(I[1]),STR(I[2]),I[3],I[4],I[5],I[6],I[7],I[8],I[9],I[10],I[11],I[12],I[13],I[14],I[15],I[16],I[17],I[18],I[19],I[20]
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1...  02O FS1...  03O PO1...  11O KT2...  12O IC1...  13O ZZPARM  20O ICF...  "
0515 IF NOT(%IN_JOBSTREAM) THEN Z$=Z$+"04O FS4...  05O FS5...  06O PO4...  07O PO5...  08O FSO...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0540 READ (Z[13],KEY=X3$(9,3)+"I/C")P0$
0585 RT$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT$
0600 REM "
0610 GOSUB 6000
0615 RETURN 
0640 IF Q1$<>"*" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 0641,9900
0650 PROCEED:
0660 IF NOT(%IN_JOBSTREAM) THEN CALL "ZZINIT",STR(Z[4]:"00")+STR(Z[5]:"00")+STR(Z[6]:"00")+STR(Z[7]:"00")+STR(Z[8]:"00")
0665 REM "IF NOT(%IN_JOBSTREAM) THEN Z$=Z$+"04C FS4...  05C FS5...  06C PO4... 07C PO5...  08C FSO...  ";!206627                                       
0670 IF NOT(%IN_JOBSTREAM) THEN CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0671,9900
0680 REM "Clear Customer Open Order Balance"
0685 READ (Z[1],KEY="",DOM=0686)
0690 EXTRACT (Z[1],END=0720)IOL=0310
0695 ML_MESS.CTL'VALUE$="Customer: "+A$(1,10)
0700 A[13]=0; WRITE (Z[1])IOL=0310
0710 GOTO 0690
0720 REM "Clear Inventory Committed Fields
0725 READ (Z[12],KEY="",DOM=0726)
0730 EXTRACT (Z[12],END=0760)IOL=0420
0735 ML_MESS1.CTL'VALUE$="Item: "+I$(1,20) ! SSP#265765
0740 I[7]=0,I[8]=0,I[11]=0,I[13]=0
0750 WRITE (Z[12])IOL=0421; GOTO 0730
0755 IF RT$>"" THEN IF MID(RT$,7,1)="H" THEN CUST$=I$(1,10); CALL "RT2WOC",ERR=0756,X3$,X4$,CUST$,"IC1...","U",I$(1,24)
0760 REM "Clear Order Header Totals
0770 READ (Z[2],KEY="",DOM=0771)
0780 EXTRACT (Z[2],END=0820)IOL=0320
0785 ML_MESS1.CTL'VALUE$="Order: "+B$(118,8)
0790 B[6]=0,B[7]=0
0800 WRITE (Z[2])IOL=0320
0810 GOTO 0780
1000 REM "Rebuild Sales Orders
1010 READ (Z[2],KEY="",DOM=1011)
1015 ! PRINT 'DIALOGUE'(15,18,80,12)  SSP#213461
1020 K$=KEY(Z[2],END=1100); READ (Z[2])IOL=0320
1022 IF LEN(B$)<300 THEN GOTO 1020; REM "SSP#207158
1030 ML_MESS1.CTL'VALUE$="Sales Order No: "+K$
1040 CALL "FMGODH",X3$,99,B$,B{ALL}
1060 WRITE (Z[2],KEY=K$)IOL=0320
1080 GOTO 1020
1100 REM "Rebuild P/O's"
1101 ! PRINT 'POP',  SSP#213461
1110 READ (Z[3],KEY="",DOM=1111)
1120 K$=KEY(Z[3],END=1900); READ (Z[3])IOL=0330
1125 ML_MESS1.CTL'VALUE$="Purchase Order No:"+K$
1128 WRITE (Z(6),KEY=C$(7,14)+C$(297,9)) ! SSP#206627                         
1130 IF MID(C$,173,1)<>"S" THEN GOTO 1120
1140 CALL "PO2MAH",X3$,C$(173,1),C$(297,9),"1"
1145 READ (Z[3],KEY=K$,DOM=1146)
1150 GOTO 1120
1900 REM "Rebuild Kit Production Committed
1905 GOSUB NEW_ROUTINE_KIT; GOTO 5000
1920 READ (Z[11],KEY="",DOM=1921)
1925 DIM KT2[2]
1930 READ (Z[11],END=5000)IOL=0410
1935 IF MID(KT2$,1,3)="sum" THEN GOTO 5000
1940 EXTRACT (Z[12],KEY=KT2$(33,24),DOM=1930)IOL=0420
1950 I[13]=I[13]+KT2[0]
1960 WRITE (Z[12])IOL=0421
1965 IF RT$>"" THEN IF MID(RT$,7,1)="H" THEN CUST$=KT2$(33,10); CALL "RT2WOC",ERR=1966,X3$,X4$,CUST$,"IC1...","U",KT2$(33,24)
1990 GOTO 1930
5000 REM "EOJ
5010 IF MID(P0$,67,1)="Y" THEN CALL "IC2TDD",X3$,X4$
5015 IF %IN_JOBSTREAM THEN GOSUB 7500 ! Job stream mode, didn't initialize sort files, need to check each record to make sure it's valid.
5020 IF Q1$<>"*" THEN MSGBOX "Process complete",MSG("CONFIRMING"),"!,TIM=5"
5030 CMD_STR$="E"
5040 GOTO 9900
6000 REM "BACKGROUND
6001 RETURN 
6005 PRINT (0,ERR=6016)'SB',
6020 REM PRINT @(0,4),"This program will blank the old county field so that the new Fax number field may be entered. The files effected are AR1,AP4,FM0,ZP4,FSA. ---IMPORTANT: Do not run this program after Fax numbers have been entered!",
6030 PRINT @(0,4),"This program will rebuild the on purchase order and committed fields based on   the open orders and open purchase orders.  It will then rebuild the open order  sort files."
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
7500 REMOVE_INVALID_SORT_RECORDS:
7505 ! If in Job Stream Mode, then we didn't initialize the sort files.  Will read all records then make sure they are valid, if not then remove.
7510 Z$="01C AR1...  11C KT2...  12C IC1...  13C ZZPARM  04O FS4...  05O FS5...  06O PO4...  07O PO5...  08O FSO...  09O FS2...  10O PO2...  14O PO3...  "
7515 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 7516,7990
7520 ! 
7525 CHECK_FS4:
7530 READ (Z[4],KEY="",DOM=*NEXT)
7535 GET_FS4: K$=KEY(Z[4],END=CHECK_FSO); READ (Z[4])
7540 DIM FS1$(100); READ (Z[2],KEY=K$(11,8),DOM=REMOVE_FS4)FS1$
7545 IF FS1$(6,10)=K$(1,10) THEN GOTO GET_FS4
7550 REMOVE_FS4:
7555 REMOVE (Z[4],KEY=K$,DOM=*NEXT)
7560 GOTO GET_FS4
7565 ! 
7570 CHECK_FSO:
7575 READ (Z[8],KEY="",DOM=*NEXT)
7580 GET_FSO: K$=KEY(Z[8],END=CHECK_FS5); READ (Z[8])
7585 DIM FS1$(100); READ (Z[2],KEY=K$(26,8),DOM=REMOVE_FSO)FS1$
7590 IF FS1$(6,10)=K$(1,10) AND FS1$(28,15)=K$(11,15) THEN GOTO GET_FSO
7595 REMOVE_FSO:
7600 REMOVE (Z[8],KEY=K$,DOM=*NEXT)
7605 GOTO GET_FSO
7610 ! 
7615 CHECK_FS5:
7620 READ (Z[5],KEY="",DOM=*NEXT)
7625 GET_FS5: K$=KEY(Z[5],END=CHECK_PO4); READ (Z[5])
7630 DIM FS2$(200); READ (Z[9],KEY=K$(25,11),DOM=REMOVE_FS5)FS2$
7635 IF POS(FS2$(155,1)="IC ")=0 THEN GOTO REMOVE_FS5
7640 IF FS2$(155,1)="I" THEN IF K$(1,24)=DIM(10)+FS2$(19,10)+FS2$(10,4) THEN GOTO GET_FS5 ELSE GOTO REMOVE_FS5
7645 I$=FS2$(161,10)+FS2$(19,10); IF FS2$(155,1)=" " THEN IF STP(I$(1,10),3)="" THEN DIM FS1$(100); READ (Z[2],KEY=FS2$(147,8),DOM=REMOVE_FS5)FS1$; I$(1,10)=FS1$(6,10)
7650 IF K$(1,24)=I$+FS2$(10,4) THEN GOTO GET_FS5
7655 REMOVE_FS5:
7660 REMOVE (Z[5],KEY=K$,DOM=*NEXT)
7665 GOTO GET_FS5
7670 ! 
7675 CHECK_PO4:
7680 READ (Z[6],KEY="",DOM=*NEXT)
7685 GET_PO4: K$=KEY(Z[6],END=CHECK_PO5); READ (Z[6])
7690 DIM PO1$(100); READ (Z[3],KEY=K$(15,9),DOM=REMOVE_PO4)PO1$
7695 IF K$(1,14)=PO1$(7,14) THEN GOTO GET_PO4
7700 REMOVE_PO4:
7705 REMOVE (Z[6],KEY=K$,DOM=*NEXT)
7710 GOTO GET_PO4
7715 ! 
7720 CHECK_PO5:
7725 READ (Z[7],KEY="",DOM=*NEXT)
7730 GET_PO5: K$=KEY(Z[7],END=REMOVE_INVALID_SORT_RECORDS_END); READ (Z[7])
7735 DIM PO2$(170); READ (Z[10],KEY=K$(25,12),DOM=REMOVE_PO5)PO2$
7740 IF POS(PO2$(10,1)="IC")=0 THEN GOTO REMOVE_PO5
7745 IF K$(1,20)<>PO2$(91,20) THEN GOTO REMOVE_PO5
7750 DIM PO3$(100); IF K$(37,1)=" " THEN PO3_KEY$=K$(25,8)+DIM(5) ELSE PO3_KEY$=K$(25,8)+" "+K$(34,3)+K$(37,1)
7755 READ (Z[14],KEY=PO3_KEY$,DOM=REMOVE_PO5)PO3$
7760 IF PO3$(11,1)="D" THEN IF K$(21,4)<>PO3$(12,4) THEN GOTO REMOVE_PO5 ELSE GOTO GET_PO5
7765 IF K$(21,4)<>"DS  " THEN GOTO REMOVE_PO5 ELSE GOTO GET_PO5
7770 REMOVE_PO5:
7775 REMOVE (Z[7],KEY=K$,DOM=*NEXT)
7780 GOTO GET_PO5
7785 ! 
7990 REMOVE_INVALID_SORT_RECORDS_END:RETURN 
7995 ! 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9011 IF MID(Q0$,1,2)="JS" THEN A1$=$FF$+X0$+"|Error|"+STR(Y5)+"|Line|"+STR(Y6)+"|"; GOTO 9900
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF MID(X3$,47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9905 END_PRG:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 IF %GUI THEN EXIT ELSE RUN "ZMENU"
9999 END 
10000 NEW_ROUTINE_KIT:
10005 DIM ICF[12]
10010 READ (Z[20],KEY="",DOM=*NEXT)
10020 K_ICF$=KEY(Z[20],END=*RETURN); READ (Z[20])ICF$,ICF{ALL}
10030 IF ICF$(110,2)<>"KT" THEN GOTO 10020
10040 IF ICF$(125,4)=DIM(4) THEN QTY=ICF[4]*ICF[3] ELSE QTY=ICF[4]*ICF[2]*ICF[3]
10050 EXTRACT (Z[12],KEY=K_ICF$(1,24))I$,I{ALL}
10060 I[7]=I[7]+QTY
10070 WRITE (Z[12],KEY=K_ICF$(1,24))I$,I{ALL}
10080 GOTO 10020
56000 REM "206627-P/O #69626 will not print.                                  
56002 ! "208675-Kit Module - Allow processing of items not in inventory     
56003 REM "265765-pvx10- error running the SOP R2 in gui                      
