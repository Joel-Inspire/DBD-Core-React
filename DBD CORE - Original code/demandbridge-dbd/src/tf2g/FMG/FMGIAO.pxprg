0010 ! FMGIAO - Display Shipment Tracking Detail
0035 ! "6.0 - 02/24/04 - 09:02 AM - jir
0040 ! "Copyright 2004 Computer Software Inc.; Norcross, Georgia
0041 ! "        Licensed Software - All Rights Reserved.
0045 SETERR 0046; ENTER ARG_1$
0050 PROCESS "FMGIAO","../FMG/FM.EN",ARG_1$
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ASJ"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 _FM1=HFN,_FILE_NAME$="FM1"+%C$; OPEN (_FM1,ERR=OPEN_ERR)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=2
0430 DIM _KEYS$[1:2]; _KEYS$[1]="CUSTOMER$",_KEYS$[2]="ITEM_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 ORIG_KEY$=ARG_1$,_KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1670 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_REMOVE$+_R_KEY$,_FYI$,"INFO"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF ARG_1$<>"" AND ARG_1$<>_KEY$(1,19) THEN MSGBOX MSG("FMGIAO_M1"),MSG("WARNING"),"!",OPT$; CMD_STR$="E"; RETURN 
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT)
2232 IF MID(_KEY$,1,19)<>ORIG_KEY$ THEN GOTO FIRST_REC
2235 GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2425 READ (_FIL_NO,KEY=ORIG_KEY$,DOM=*NEXT)
2430 _KEY$=KEY(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); IF MID(_KEY$,1,19)<>ORIG_KEY$ THEN GOTO 2430
2455 GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3065 CUSTOMER$=CUST_DIV$+CUST_CODE$,ID$="CUSTOMER"; ; IF ARG_1$<>"" THEN CALL "*WINGRP;DISABLE",KEY1.GRP$; CALL "*WINGRP;DISABLE",KEY2.GRP$; PERFORM "ICGMDA;PROCESS_AR1"; B_ITEM_CODE$=ITEM_CODE$; PERFORM "ICGMDA;PROCESS_IC0"; NEXT_ID=BT_EXIT.CTL
3070 IF STP(ITEM_CODE$)<>"" THEN GOTO 3090
3075 READ (_FM1,KEY=CUSTOMER$+B_ITEM_CODE$,DOM=*RETURN)FM1$
3080 ITEM_CODE$=B_ITEM_CODE$,ML_ITEM_DESC$=STP(FM1$(42,40))
3090 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3330 _R_KEY$=KEC(_FIL_NO); TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO"
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUST_DIV.CTL,_FIRST_FIELD=ITEM_CODE.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 SPEC_SHIP_QTY_SHIPD$=STR(SPEC_SHIP_QTY_SHIPD)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="SPEC_SHIP_QTY_SHIPD",_X=SPEC_SHIP_QTY_SHIPD.CTL,SPEC_SHIP_QTY_SHIPD=NUM(SPEC_SHIP_QTY_SHIPD$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN CUST_DIV$=""
13030 IF _CLR_FLG$="R" THEN CUST_CODE$=""
13040 IF _CLR_FLG$="R" THEN ORDER_DIV$=""
13050 IF _CLR_FLG$="R" THEN ORDER_NUM$=""
13060 IF _CLR_FLG$="R" THEN SEQ_NUM$=""
13070 IF _CLR_FLG$="R" THEN SPECIAL_SHIPPING_PT$=""
13080 IF _CLR_FLG$="R" THEN INV_NUM$=""
13090 ITEM_CODE$=""
13100 ORDER_HIST_TYPE$=""
13110 LOC_CODE$=""
13120 LOC_DESC$=""
13130 LOC_ATTENTION$=""
13140 LOC_ADDR_1$=""
13150 LOC_ADDR_2$=""
13160 LOC_CITY$=""
13170 LOC_ST$=""
13180 LOC_ZIP_CODE$=""
13190 FOB$=""
13200 HOW_TO_SHIP_CODE$=""
13210 INSIDE_DELIVERY$=""
13220 SHIP_VIA_CODE$=""
13230 SHIP_WITH$=""
13240 MARK_FOR$=""
13250 SHIP_VIA_DESC$=""
13260 COST_CODE$=""
13270 INV_DATE$=""
13280 SHIP_DT_FROM_INV_HDR$=""
13290 SHIPPED_VIA_INV_HDR$=""
13300 CUST_SERV_REP$=""
13310 PRIMARY_SPER$=""
13320 ASJ_UNUSED_1$=""
13330 SPEC_SHIP_QTY_SHIPD=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=ITEM_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=ORDER_DIV.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=ORDER_NUM.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14060 IF _ENABLE_FLG=5 THEN CALL "*wingrp;Enable",KEY5.GRP$; NEXT_ID=SEQ_NUM.CTL ELSE CALL "*wingrp;Disable",KEY5.GRP$
14070 IF _ENABLE_FLG=6 THEN CALL "*wingrp;Enable",KEY6.GRP$; NEXT_ID=SPECIAL_SHIPPING_PT.CTL ELSE CALL "*wingrp;Disable",KEY6.GRP$
14080 IF _ENABLE_FLG=7 THEN CALL "*wingrp;Enable",KEY7.GRP$; NEXT_ID=INV_NUM.CTL ELSE CALL "*wingrp;Disable",KEY7.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(32,"N")
15030 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15040 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15050 IF _ORIG.ORDER_DIV$=_CUR.ORDER_DIV$ OR ORDER_DIV$=_CUR.ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DIV$=ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$
15060 IF _ORIG.ORDER_NUM$=_CUR.ORDER_NUM$ OR ORDER_NUM$=_CUR.ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_NUM$=ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$
15070 IF _ORIG.SEQ_NUM$=_CUR.SEQ_NUM$ OR SEQ_NUM$=_CUR.SEQ_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.SEQ_NUM$=SEQ_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$
15080 IF _ORIG.SPECIAL_SHIPPING_PT$=_CUR.SPECIAL_SHIPPING_PT$ OR SPECIAL_SHIPPING_PT$=_CUR.SPECIAL_SHIPPING_PT$ THEN GOTO *NEXT ELSE IF _ORIG.SPECIAL_SHIPPING_PT$=SPECIAL_SHIPPING_PT$ THEN _CHG2$=_CHG2$+SEP+MSG("SPEC_S_P")+" = "+_CUR.SPECIAL_SHIPPING_PT$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPEC_S_P")+" = "+_CUR.SPECIAL_SHIPPING_PT$
15090 IF _ORIG.INV_NUM$=_CUR.INV_NUM$ OR INV_NUM$=_CUR.INV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.INV_NUM$=INV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_NUM")+" = "+_CUR.INV_NUM$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_NUM")+" = "+_CUR.INV_NUM$
15100 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15110 IF _ORIG.ORDER_HIST_TYPE$=_CUR.ORDER_HIST_TYPE$ OR ORDER_HIST_TYPE$=_CUR.ORDER_HIST_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_HIST_TYPE$=ORDER_HIST_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_H_T")+" = "+_CUR.ORDER_HIST_TYPE$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_H_T")+" = "+_CUR.ORDER_HIST_TYPE$
15120 IF _ORIG.LOC_CODE$=_CUR.LOC_CODE$ OR LOC_CODE$=_CUR.LOC_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_CODE$=LOC_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_CODE")+" = "+_CUR.LOC_CODE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_CODE")+" = "+_CUR.LOC_CODE$
15130 IF _ORIG.LOC_DESC$=_CUR.LOC_DESC$ OR LOC_DESC$=_CUR.LOC_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_DESC$=LOC_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_DESC")+" = "+_CUR.LOC_DESC$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_DESC")+" = "+_CUR.LOC_DESC$
15140 IF _ORIG.LOC_ATTENTION$=_CUR.LOC_ATTENTION$ OR LOC_ATTENTION$=_CUR.LOC_ATTENTION$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_ATTENTION$=LOC_ATTENTION$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_A")+" = "+_CUR.LOC_ATTENTION$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_A")+" = "+_CUR.LOC_ATTENTION$
15150 IF _ORIG.LOC_ADDR_1$=_CUR.LOC_ADDR_1$ OR LOC_ADDR_1$=_CUR.LOC_ADDR_1$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_ADDR_1$=LOC_ADDR_1$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_ADDR_1")+" = "+_CUR.LOC_ADDR_1$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_ADDR_1")+" = "+_CUR.LOC_ADDR_1$
15160 IF _ORIG.LOC_ADDR_2$=_CUR.LOC_ADDR_2$ OR LOC_ADDR_2$=_CUR.LOC_ADDR_2$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_ADDR_2$=LOC_ADDR_2$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_ADDR_2")+" = "+_CUR.LOC_ADDR_2$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_ADDR_2")+" = "+_CUR.LOC_ADDR_2$
15170 IF _ORIG.LOC_CITY$=_CUR.LOC_CITY$ OR LOC_CITY$=_CUR.LOC_CITY$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_CITY$=LOC_CITY$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_CITY")+" = "+_CUR.LOC_CITY$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_CITY")+" = "+_CUR.LOC_CITY$
15180 IF _ORIG.LOC_ST$=_CUR.LOC_ST$ OR LOC_ST$=_CUR.LOC_ST$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_ST$=LOC_ST$ THEN _CHG2$=_CHG2$+SEP+MSG("LOC_ST")+" = "+_CUR.LOC_ST$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LOC_ST")+" = "+_CUR.LOC_ST$
15190 IF _ORIG.LOC_ZIP_CODE$=_CUR.LOC_ZIP_CODE$ OR LOC_ZIP_CODE$=_CUR.LOC_ZIP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.LOC_ZIP_CODE$=LOC_ZIP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ZIP_CODE")+" = "+_CUR.LOC_ZIP_CODE$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ZIP_CODE")+" = "+_CUR.LOC_ZIP_CODE$
15200 IF _ORIG.FOB$=_CUR.FOB$ OR FOB$=_CUR.FOB$ THEN GOTO *NEXT ELSE IF _ORIG.FOB$=FOB$ THEN _CHG2$=_CHG2$+SEP+MSG("FOB")+" = "+_CUR.FOB$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FOB")+" = "+_CUR.FOB$
15210 IF _ORIG.HOW_TO_SHIP_CODE$=_CUR.HOW_TO_SHIP_CODE$ OR HOW_TO_SHIP_CODE$=_CUR.HOW_TO_SHIP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.HOW_TO_SHIP_CODE$=HOW_TO_SHIP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("HOW_T_S_C")+" = "+_CUR.HOW_TO_SHIP_CODE$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HOW_T_S_C")+" = "+_CUR.HOW_TO_SHIP_CODE$
15220 IF _ORIG.INSIDE_DELIVERY$=_CUR.INSIDE_DELIVERY$ OR INSIDE_DELIVERY$=_CUR.INSIDE_DELIVERY$ THEN GOTO *NEXT ELSE IF _ORIG.INSIDE_DELIVERY$=INSIDE_DELIVERY$ THEN _CHG2$=_CHG2$+SEP+MSG("INSI_D")+" = "+_CUR.INSIDE_DELIVERY$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INSI_D")+" = "+_CUR.INSIDE_DELIVERY$
15230 IF _ORIG.SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$ OR SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_VIA_CODE$=SHIP_VIA_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_V_C")+" = "+_CUR.SHIP_VIA_CODE$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_V_C")+" = "+_CUR.SHIP_VIA_CODE$
15240 IF _ORIG.SHIP_WITH$=_CUR.SHIP_WITH$ OR SHIP_WITH$=_CUR.SHIP_WITH$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_WITH$=SHIP_WITH$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_WITH")+" = "+_CUR.SHIP_WITH$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_WITH")+" = "+_CUR.SHIP_WITH$
15250 IF _ORIG.MARK_FOR$=_CUR.MARK_FOR$ OR MARK_FOR$=_CUR.MARK_FOR$ THEN GOTO *NEXT ELSE IF _ORIG.MARK_FOR$=MARK_FOR$ THEN _CHG2$=_CHG2$+SEP+MSG("MARK_FOR")+" = "+_CUR.MARK_FOR$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MARK_FOR")+" = "+_CUR.MARK_FOR$
15260 IF _ORIG.SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$ OR SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_VIA_DESC$=SHIP_VIA_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_V_D")+" = "+_CUR.SHIP_VIA_DESC$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_V_D")+" = "+_CUR.SHIP_VIA_DESC$
15270 IF _ORIG.COST_CODE$=_CUR.COST_CODE$ OR COST_CODE$=_CUR.COST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.COST_CODE$=COST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("COST_CODE")+" = "+_CUR.COST_CODE$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_CODE")+" = "+_CUR.COST_CODE$
15280 IF _ORIG.INV_DATE$=_CUR.INV_DATE$ OR INV_DATE$=_CUR.INV_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.INV_DATE$=INV_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_DATE")+" = "+_CUR.INV_DATE$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_DATE")+" = "+_CUR.INV_DATE$
15290 IF _ORIG.SHIP_DT_FROM_INV_HDR$=_CUR.SHIP_DT_FROM_INV_HDR$ OR SHIP_DT_FROM_INV_HDR$=_CUR.SHIP_DT_FROM_INV_HDR$ THEN GOTO *NEXT ELSE IF _ORIG.SHIP_DT_FROM_INV_HDR$=SHIP_DT_FROM_INV_HDR$ THEN _CHG2$=_CHG2$+SEP+MSG("S_D_F_I_H")+" = "+_CUR.SHIP_DT_FROM_INV_HDR$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("S_D_F_I_H")+" = "+_CUR.SHIP_DT_FROM_INV_HDR$
15300 IF _ORIG.SHIPPED_VIA_INV_HDR$=_CUR.SHIPPED_VIA_INV_HDR$ OR SHIPPED_VIA_INV_HDR$=_CUR.SHIPPED_VIA_INV_HDR$ THEN GOTO *NEXT ELSE IF _ORIG.SHIPPED_VIA_INV_HDR$=SHIPPED_VIA_INV_HDR$ THEN _CHG2$=_CHG2$+SEP+MSG("SHIP_V_I_H")+" = "+_CUR.SHIPPED_VIA_INV_HDR$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SHIP_V_I_H")+" = "+_CUR.SHIPPED_VIA_INV_HDR$
15310 IF _ORIG.CUST_SERV_REP$=_CUR.CUST_SERV_REP$ OR CUST_SERV_REP$=_CUR.CUST_SERV_REP$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_SERV_REP$=CUST_SERV_REP$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_S_R")+" = "+_CUR.CUST_SERV_REP$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_S_R")+" = "+_CUR.CUST_SERV_REP$
15320 IF _ORIG.PRIMARY_SPER$=_CUR.PRIMARY_SPER$ OR PRIMARY_SPER$=_CUR.PRIMARY_SPER$ THEN GOTO *NEXT ELSE IF _ORIG.PRIMARY_SPER$=PRIMARY_SPER$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIM_S")+" = "+_CUR.PRIMARY_SPER$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIM_S")+" = "+_CUR.PRIMARY_SPER$
15330 IF _ORIG.ASJ_UNUSED_1$=_CUR.ASJ_UNUSED_1$ OR ASJ_UNUSED_1$=_CUR.ASJ_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.ASJ_UNUSED_1$=ASJ_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.ASJ_UNUSED_1$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.ASJ_UNUSED_1$
15340 IF _ORIG.SPEC_SHIP_QTY_SHIPD=_CUR.SPEC_SHIP_QTY_SHIPD OR SPEC_SHIP_QTY_SHIPD=_CUR.SPEC_SHIP_QTY_SHIPD THEN GOTO *NEXT ELSE IF _ORIG.SPEC_SHIP_QTY_SHIPD=SPEC_SHIP_QTY_SHIPD THEN _CHG2$=_CHG2$+SEP+MSG("SPEC_S_Q_S")+" = "+STR(_CUR.SPEC_SHIP_QTY_SHIPD),_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPEC_S_Q_S")+" = "+STR(_CUR.SPEC_SHIP_QTY_SHIPD)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16030 IF _CHG_VAR$(2,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16040 IF _CHG_VAR$(3,1)="Y" THEN ORDER_DIV$=_CUR.ORDER_DIV$
16050 IF _CHG_VAR$(4,1)="Y" THEN ORDER_NUM$=_CUR.ORDER_NUM$
16060 IF _CHG_VAR$(5,1)="Y" THEN SEQ_NUM$=_CUR.SEQ_NUM$
16070 IF _CHG_VAR$(6,1)="Y" THEN SPECIAL_SHIPPING_PT$=_CUR.SPECIAL_SHIPPING_PT$
16080 IF _CHG_VAR$(7,1)="Y" THEN INV_NUM$=_CUR.INV_NUM$
16090 IF _CHG_VAR$(8,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16100 IF _CHG_VAR$(9,1)="Y" THEN ORDER_HIST_TYPE$=_CUR.ORDER_HIST_TYPE$
16110 IF _CHG_VAR$(10,1)="Y" THEN LOC_CODE$=_CUR.LOC_CODE$
16120 IF _CHG_VAR$(11,1)="Y" THEN LOC_DESC$=_CUR.LOC_DESC$
16130 IF _CHG_VAR$(12,1)="Y" THEN LOC_ATTENTION$=_CUR.LOC_ATTENTION$
16140 IF _CHG_VAR$(13,1)="Y" THEN LOC_ADDR_1$=_CUR.LOC_ADDR_1$
16150 IF _CHG_VAR$(14,1)="Y" THEN LOC_ADDR_2$=_CUR.LOC_ADDR_2$
16160 IF _CHG_VAR$(15,1)="Y" THEN LOC_CITY$=_CUR.LOC_CITY$
16170 IF _CHG_VAR$(16,1)="Y" THEN LOC_ST$=_CUR.LOC_ST$
16180 IF _CHG_VAR$(17,1)="Y" THEN LOC_ZIP_CODE$=_CUR.LOC_ZIP_CODE$
16190 IF _CHG_VAR$(18,1)="Y" THEN FOB$=_CUR.FOB$
16200 IF _CHG_VAR$(19,1)="Y" THEN HOW_TO_SHIP_CODE$=_CUR.HOW_TO_SHIP_CODE$
16210 IF _CHG_VAR$(20,1)="Y" THEN INSIDE_DELIVERY$=_CUR.INSIDE_DELIVERY$
16220 IF _CHG_VAR$(21,1)="Y" THEN SHIP_VIA_CODE$=_CUR.SHIP_VIA_CODE$
16230 IF _CHG_VAR$(22,1)="Y" THEN SHIP_WITH$=_CUR.SHIP_WITH$
16240 IF _CHG_VAR$(23,1)="Y" THEN MARK_FOR$=_CUR.MARK_FOR$
16250 IF _CHG_VAR$(24,1)="Y" THEN SHIP_VIA_DESC$=_CUR.SHIP_VIA_DESC$
16260 IF _CHG_VAR$(25,1)="Y" THEN COST_CODE$=_CUR.COST_CODE$
16270 IF _CHG_VAR$(26,1)="Y" THEN INV_DATE$=_CUR.INV_DATE$
16280 IF _CHG_VAR$(27,1)="Y" THEN SHIP_DT_FROM_INV_HDR$=_CUR.SHIP_DT_FROM_INV_HDR$
16290 IF _CHG_VAR$(28,1)="Y" THEN SHIPPED_VIA_INV_HDR$=_CUR.SHIPPED_VIA_INV_HDR$
16300 IF _CHG_VAR$(29,1)="Y" THEN CUST_SERV_REP$=_CUR.CUST_SERV_REP$
16310 IF _CHG_VAR$(30,1)="Y" THEN PRIMARY_SPER$=_CUR.PRIMARY_SPER$
16320 IF _CHG_VAR$(31,1)="Y" THEN ASJ_UNUSED_1$=_CUR.ASJ_UNUSED_1$
16330 IF _CHG_VAR$(32,1)="Y" THEN SPEC_SHIP_QTY_SHIPD=_CUR.SPEC_SHIP_QTY_SHIPD
16990 RETURN 
