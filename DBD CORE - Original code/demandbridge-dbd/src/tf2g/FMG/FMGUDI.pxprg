0010 ! FMGUDI - Import User Defined Specs from Excel
0020 ! "6.0 - 04/22/04 - 02:04 PM - jir
0030 ! "Copyright 2004 Computer Software Inc.; Norcross, Georgia
0035 REM "5.7 - 08/03/21 - 15.115429 - jvv - SSP# 307370
0037 REM "307370-User Defined Specs import does not recognize date fields    
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0049 ! 
0050 IF TCB(13)=1 THEN BEGIN 
0052 IF TCB(88)=0 THEN MSGBOX MSG("WARN_WINDX"),MSG("ERROR"),"OK"; GOTO 0075
0055 IF NOT(%GUI) THEN CHUI_MODE=1; %GUI=1; PRINT 'SHOW'(0)
0060 PROCESS "FMGUDI","../FMG/FM.EN"
0065 IF CHUI_MODE THEN %GUI=0; PRINT 'SHOW'(1); RUN "ZMENU"
0075 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 OPEN (HFN,IOL=*)"FSE"+%C$; _FSE=LFO
0125 OPEN (HFN)"providex.dde"; _DDE=LFO
0126 OPEN (HFN)"providex.ddf"; _DDF=LFO
0127 OPEN (HFN)"providex.dcl"; _DCL=LFO
0140 LOG_FILE$="FSF_UserDefSpec"
0150 PERFORM "FMGUDS;LOAD_SPEC_CODES"
0310 RETURN 
0320 ! 
0330 SEL_SPEC_CODE:
0340 ! 
0343 FOR X=1 TO AA; GRID DELETE GR.CTL,0,2; NEXT X; REFRESH_FLG=1 ! SSP#250385
0345 DIM REC$[500,6]
0470 GOSUB LOAD_SPEC_FIELDS
0490 CALL "*WINGRP;SHOW",FIELDS.GRP$
0510 GRID GOTO GR.CTL,5,1; NEXT_ID=GR.CTL
0540 RETURN 
0550 ! 
1090 GENERATE: B=LB_FIELDS_SEL.CTL,FMT$="",LBLST$="",DBFLD$="",IDX=0,NO=0,TEXT$=""
1100 IOL_DDF:IOLIST TF_NAME$,PATH$
1110 IF B'ITEMCOUNT=0 THEN MSGBOX "No Fields Selected",MSG("WARNING"),"!,TIM=3"; RETURN 
1120 READ (_DDF,KEY=LOG_FILE$,KNO=1,REC=WRK$)IOL=IOL_DDF
1130 FOR X=1 TO B'ITEMCOUNT
1140 LIST_BOX FIND B,X,LB$
1145 READ DATA FROM LB$ TO IOL=IOL_FLD
1170 LN=NUM(LEN$)+1
1180 VAR$=TF_NAME$+"$"; IF X>4 THEN ALL_VAL$=ALL_VAL$+VAR$+","
1225 IF TF_TYPE$="S" THEN TEXT$+="@" ELSE TEXT$+=" "
1230 FMT$=FMT$+"["+TF_DESC$+"]"+JUSTIFY$+STR(LN)+" "
1240 LBLST$=LBLST$+VAR$+"+SEP+"
1250 DBFLD$=DBFLD$+TF_NAME$+"/"
1260 NEXT 
1265 FMT$+=" [Key Information]L30 ",LBLST$+="FIL_NO_KEY$+SEP+",XX=POS("@"=TEXT$,-1)
1280 ! 
1290 GENERATE_PHASE_II:
1300 ! 
1310 PRINT 'CAPTION'("Import File: "+LOG_FILE$+" - FMGUDI")
1320 READ (_DDF,KEY=LOG_FILE$,KNO=1,REC=WRK$)IOL=IOL_DDF
1330 IF POS("="=WRK.PATH$)<>0 THEN WRK.PATH$=WRK.PATH$(2) ELSE WRK.PATH$=QUO+WRK.PATH$+QUO
1340 IF LBLST$(LEN(LBLST$))="+" THEN LBLST$=LBLST$(1,LEN(LBLST$)-1)
1350 IDX=0; LN$=STR(TCB(4)+10); EXECUTE LN$+" _FIL_NO=HFN;OPEN (_FIL_NO,IOL=*)"+WRK.PATH$
1355 KEYDSP$="N",KEY_FILE$=EVS(WRK.PATH$); PERFORM "*win/qrydef.fil;LOAD_KEYS"
1356 IF SSN>="14" THEN KEYSTR$[0]=SUB(UCS(KEYSTR$[0]),"PRIME_KEY","") ! SSP#303760
1360 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*)"AP4"+%C$
1365 IF MID(FMGUDI_OPTIONS$,1,1)="Y" THEN LOCK (_FIL_NO); PURGE (_FIL_NO)
1370 NUMREC=NUM(FN%FIN$(_FIL_NO,"NUMREC")),KEY_SIZE=NUM(FIN(_FIL_NO,"KEY_SIZE")) ! DIM NUMREC$[NUMREC]
1372 ERASE MID(KEY_FILE$,1,3)+".SRT",ERR=*NEXT; GOTO 1375
1373 IF ERR=12 THEN GOTO 1375
1374 MSGBOX "File : "+MID(KEY_FILE$,1,3)+".SRT"+SEP+"It's open, please close to continue","WARNING","!,RETRYCANCEL",OPT$; IF OPT$="RETRY" THEN GOTO 1372 ELSE CMD_STR$="E"; EXIT 
1375 SORT MID(KEY_FILE$,1,3)+".SRT",KEY_SIZE,0
1378 _SRT=HFN; OPEN (_SRT)MID(KEY_FILE$,1,3)+".SRT"
1380 LN$=STR(TCB(4)+60); EXECUTE LN$+" IDX+=1; LIST_BOX LOAD LB_LIST.CTL,IDX,"+LBLST$
1390 LINE$=LST(PGM(NUM(LN$)))
1391 IF MID(FMGUDI_OPTIONS$,3,1)="Y" THEN GOSUB COPY_FILE
1395 GOSUB SEL_GRID; GOSUB CREATE_HEADER; FMT$=B_FMT$
1396 GOSUB EXCEL_NAME; EXCEL=HFN; OPEN (EXCEL,ERR=*NEXT)"[DDE]Excel;"+EXCEL_NAME$; GOTO 1398
1397 PRINT 'SHOW'(-1); MSGBOX "Excel Not Ready",MSG("WARNING"),"INFO,RETRYCANCEL",OPT$; PRINT 'SHOW'(3); IF OPT$="RETRY" THEN GOTO 1396 ELSE CMD_STR$="E"; EXIT ! ssp#240295
1398 GOSUB READ_EXCEL
1399 MSGBOX MSG("COMPLETED")+"!",MSG("FYI"),"!"
1400 EXIT 
1410 READ_FILE:
1420 ! 
1430 FIL_NO_KEY$=KEY(_FIL_NO,END=END_READ_FILE); READ (_FIL_NO)
1440 IDX+=1; LIST_BOX LOAD LB_LIST.CTL,IDX,FN%ZZDISP$(VEND_DIV$+VEND_CODE$,"A/P")+SEP+VEND_NAME$+SEP+VEND_ADDR_1$+SEP+VEND_ADDR_2$+SEP+VEND_CITY$+SEP+VEND_ST$+SEP+STR(VEND_ZIP$:"XXXXX-XXXX")+SEP+STR(VEND_FAX$:%PHONE_MASK$)+SEP+VEND_LOOKUP$+SEP+VEND_CONT_PERSON$+SEP+VEND_GREETING$+SEP+STR(VEND_PHONE$:%PHONE_MASK$)+SEP+INTERCOMPANY_GL_ACCT$+SEP+FILE_OUTPUT_FORMAT$+SEP+SPC$+SEP+PRINT_PO$+SEP+AP4_UNUSED_1$+SEP+VEND_STAT$+SEP+VEND_CATEGORY$+SEP+STND_INV_COMMENT$+SEP+FN%ZZDISP$(GL_ACCT$,"G/L")+SEP+BANK_CODE$+SEP+TERMS_CODE$+SEP+PYMNT_SELECTION_CODE$+SEP+PYMNT_PRIORITY_CODE$+SEP+VEND_ON_HOLD$+SEP+SUBCONTRACTOR$+SEP+ALWAYS_TAKE_DISC$+SEP+EXC_SPCL_AMT_IN_DISC$+SEP+MAILING_LABEL_TYPE_1$+SEP+MAILING_LABEL_TYPE_2$+SEP+MAILING_LABEL_TYPE_3$+SEP+OUR_ACCT_NUM$+SEP+WEB_ADDRESS$+SEP+AP4_UNUSED_2$+SEP+STR(STND_AMT:"-###,###.00")+SEP+STR(EXTRA_DUE_DAYS:"-#0")+SEP+FIL_NO_KEY$+SEP
1445 IF MOD(IDX,500)=0 THEN PHASE.CTL'VALUE$="Reading File :"+STP(STR(IDX:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))+" - "+STR(IDX/NUMREC*100)+"%"
1450 GOTO READ_FILE ! NUMREC$[IDX]=FIL_NO_KEY$; GOTO READ_FILE
1460 ! 
1470 END_READ_FILE:PRINT 'CAPTION'(LOG_FILE$+"> Records "+STR(IDX)+" - ZZGFLE.1")
1475 HIDE CONTROL PHASE.CTL
1480 IF SORT_BY<>0 THEN LB_LIST.CTL'SORT=SORT_BY,SORT_BY=0
1490 ! 
1500 RETURN 
1510 ! 
1520 SEARCH:
1530 ! 
1540 DIM EXP$[8]; EXP$[1]="=",EXP$[2]="<=",EXP$[3]="=>",EXP$[4]="<>",EXP$[5]="<",EXP$[6]=">",YESNO$=""
1550 PROCESS "ZZGFLE.2","../ZZG/ZZ.EN",DBFLD$,VAR$,OPT$,TF_VALUE$,YESNO$
1560 IF YESNO$<>"YES" THEN RETURN 
1570 IDX=0
1575 SHOW CONTROL PHASE.CTL
1580 LIST_BOX LOAD LB_LIST.CTL,""
1590 LIST_BOX LOAD LB_LIST.CTL,1,*
1600 XX=POS(VAR$=ALL_VAL$); IF XX<>0 THEN XXX=POS(","=ALL_VAL$(XX)),VAR$=ALL_VAL$(XX,XXX-1),TYPE=POS("$"=VAR$)
1610 EXECUTE "12605 IDX+=1; LIST_BOX LOAD LB_LIST.CTL,IDX,"+LBLST$
1615 COUNT=0
1620 READ (_FIL_NO,KEY="",DOM=*NEXT)
1630 ! 
1640 READ_FIL:IF MOD(COUNT,500)=0 THEN PHASE.CTL'VALUE$="Reading File :"+STP(STR(COUNT:"###,###,###"))+" of "+STP(STR(NUMREC:"###,###,###"))+" - "+STR(COUNT/NUMREC*100)+"%"
1650 ! 
1660 READ (_FIL_NO,END=END_READ_FILE); COUNT+=1
1670 IF STP(VAR$)="" THEN GOTO PRINT_REC
1671 IF OPT$<>"8" THEN GOTO 1675
1672 IF TYPE=0 THEN EXECUTE "if pos(value$=str("+VAR$+"))<>0 goto print_rec"
1673 IF TYPE<>0 THEN EXECUTE "if pos(value$="+VAR$+")<>0 goto print_rec"
1674 GOTO READ_FIL
1675 IF OPT$<>"7" THEN GOTO 1680
1676 IF TYPE=0 THEN EXECUTE "if mid(str("+VAR$+"),1,len(value$)) = value$ goto print_rec"
1678 IF TYPE<>0 THEN EXECUTE "if mid("+VAR$+",1,len(value$)) = value$ goto print_rec"
1679 GOTO READ_FIL
1680 IF TYPE=0 THEN EXECUTE "IF "+VAR$+" "+EXP$[NUM(OPT$)]+" NUM(TF_VALUE$,ERR=READ_FIL) GOTO PRINT_REC"
1690 IF TYPE<>0 THEN EXECUTE "IF STP("+VAR$+") "+EXP$[NUM(OPT$)]+" TF_VALUE$ GOTO PRINT_REC"
1700 GOTO READ_FIL
2000 CLOSE_FILES:
2005 CLOSE (_FSE)
2010 CLOSE (_DDF,ERR=*NEXT)
2020 CLOSE (_DDE,ERR=*NEXT)
2030 CLOSE (_MEM,ERR=*NEXT)
2040 CLOSE (_FIL_NO,ERR=*NEXT)
2045 CLOSE (_DCL,ERR=*NEXT)
2050 CLOSE (EXCEL,ERR=*NEXT)
2052 CLOSE (_ZZS,ERR=*NEXT)
2053 CLOSE (_SRT,ERR=*NEXT)
2060 RETURN 
3000 COPY_FILE:
3010 %FIL_NAME$=PTH(_FIL_NO)
3020 %FIL_NEW$=%FIL_NAME$+"_"+%X3$(40,3)+DTE(0:"_%Yl%mz%Dz%sz_")+FID(0)
3030 INVOKE "cp "+%FIL_NAME$+" "+%FIL_NEW$
3040 RETURN 
3050 RESTORE_FILE:
3060 INVOKE "cp "+%FIL_NEW$+" "+%FL_NAME$
3070 RETURN 
9999 END 
10000 ! 10000,10 Check Class
10010 CHECK_CLASS:
10120 RETURN 
10160 CNVRT_DATE:! SSP 307370
10162 FDT$=EX$; IF STP(FDT$)<>"" THEN PERFORM "ZZGIMP;CHECK_CENTURY"; CALL "ZZWDTE;validate",FDT$; %CNV_CENTURY=0; IF MID(FDT$,1,1)=" " THEN FDT$="" ! SSP 307370
10165 EX$=FDT$
10168 RETURN 
10170 ! 
10200 LOAD_SPEC_FIELDS:
10205 GOSUB LOAD_SPEC_KEY_FIELDS
10210 SPEC_REF$="",SPEC_HDG$="",SPEC_DATATYPE$=""
10220 READ (_FSE,KEY=SPEC_CODE$,DOM=*NEXT)
10230 NEXT_FSE_FLD:DIM FSE$:IOL(_FSE); READ DATA FROM DIM(LEN(FSE$)),REC=FSE$ TO IOL=IOL(FSE$)
10240 READ (_FSE,REC=FSE$,END=FSE_DONE)IOL=IOL(_FSE); IF FSE.TEMPLATE_CODE$<>SPEC_CODE$ THEN GOTO FSE_DONE
10250 IF NUL(MID(FSE.DATA_TYPE$,1,1)) THEN GOTO NEXT_FSE_FLD
10260 L=NUM(FSE.MAX_LENGTH$,ERR=NEXT_FSE_FLD)
10270 SWITCH MID(FSE.DATA_TYPE$,1,1)
10280 CASE "D"; DATATYPE$="D"; BREAK
10290 CASE "P"; DATATYPE$="P"; BREAK
10300 DEFAULT ; DATATYPE$="S"; BREAK
10310 END SWITCH 
10320 FLDREF$=FSE.TEMPLATE_CODE$+"_"+FSE.SCREEN_NUM$+"_"+FSE.FIELD_NUM$
10330 FLDHDG$=STP(FSE.FLD_TXT_HDG_ON_SCRN$,2); IF NOT(NUL(FSE.F1_HDG_TEXT_1$)) THEN FLDHDG$=STP(FSE.F1_HDG_TEXT_1$,2)
10340 TF_NAME$=FLDREF$,TF_DESC$=STP(FLDHDG$,2),TF_TYPE$=DATATYPE$,LEN$=STR(L)
10350 LIST_BOX LOAD LB_FIELDS_SEL.CTL,0,TF_DESC$+SEP+TF_NAME$+SEP+TF_TYPE$+SEP+LEN$ ! SSP 219424
10355 AA=AA+1; GOSUB LOAD_GRID; CLS_OBJ_OUT$=""
10360 GOTO NEXT_FSE_FLD
10380 FSE_DONE:
10395 RETURN 
10399 ! 
10400 IOL_DDE:IOLIST IOLOBJ$,TF_NAME$,TF_DESC$,TF_TYPE$,LEN$,OCC$,FORMAT$,VALID$,TF_PRINT$,HELP$,NOTES$,KEYDEF$,QUERY$,CLASS$,FLAGS$,DFLT$,ALT_NAME$
10405 IOL_FLD:IOLIST TF_DESC$,TF_NAME$,TF_TYPE$,LEN$
10410 IOL_CLASS:IOLIST CLS_NAME$,CLS_DESC$,CLS_TYPE$,CLS_LEN$,CLS_OBJ_TYPE$,CLS_OBJ_VAL$,CLS_OBJ_DEF$,CLS_OBJ_LEN$,CLS_OBJ_OPT$,CLS_OBJ_TBL$,CLS_OBJ_FMT$,CLS_OBJ_NUL$,CLS_OBJ_INP$,CLS_OBJ_OUT$,CLS_OBJ_VALID$,CLS_OBJ_TAG$,CLS_OBJ_QRY$
10499 ! 
10500 LOAD_SPEC_KEY_FIELDS:
10501 KK=0
10510 READ (_DDF,KEY=LOG_FILE$,KNO=1,DOM=*RETURN); DDF_KEY$=KEC(_DDF,KNO=0)
10520 READ (_DDE,KEY=DDF_KEY$,KNO=0,DOM=*NEXT)
10530 K$=KEY(_DDE,END=*RETURN); IF K$(1,6)<>DDF_KEY$ OR KK>=4 THEN GOTO *RETURN
10540 READ (_DDE,KEY=K$)IOL=IOL_DDE
10550 IF POS(":1:"=KEYDEF$)<>0 THEN TF_DESC$="*"+TF_DESC$
10560 XX=POS("=MSG"=TF_DESC$); IF XX<>0 THEN EXECUTE "TF_DESC$="+TF_DESC$(XX+1)
10570 IF CLASS$<>"" THEN GOSUB CLASS
10580 LIST_BOX LOAD LB_FIELDS_SEL.CTL,0,TF_DESC$+SEP+TF_NAME$+SEP+TF_TYPE$+SEP+LEN$
10585 KK++; AA=AA+1; GOSUB LOAD_GRID; CLS_OBJ_OUT$=""; GOTO 10530
10595 RETURN 
10599 ! 
12600 PRINT_REC:! 12600,10
12610 GOTO READ_FIL
12620 ! 
12630 CHECK_VARIABLE_FMT:
12640 ! 
12650 DIM VAR_FMT$[10]; VAR_FMT$[1]="G/L",VAR_FMT$[2]="A/P",VAR_FMT$[3]="A/R",VAR_FMT$[4]="O/P",VAR_FMT$[5]="P/O",VAR_F$="GL_ACCT$       VEND_DIV$      CUST_DIV$      ORDER_DIV$     PO_DIV$        "
12660 XX=POS(VAR$=VAR_F$,15); IF XX=0 THEN RETURN 
12670 XX=INT(XX/15)+1
12680 IF VAR_FMT$[XX]="A/P" THEN NO=1,LN=10,VAR$=VAR$+"+VEND_CODE$",DE$=MSG("VENDOR"); GOTO 12720 ELSE NO=0
12690 IF VAR_FMT$[XX]="O/P" THEN NO=1,LN=9,VAR$=VAR$+"+ORDER_NUM$",DE$=MSG("ORD_NO"); GOTO 12720 ELSE NO=0
12700 IF VAR_FMT$[XX]="P/O" THEN NO=1,LN=10,VAR$=VAR$+"+PO_NUM$",DE$=MSG("PO_NUM"); GOTO 12720 ELSE NO=0
12710 IF VAR_FMT$[XX]="A/R" THEN NO=1,LN=10,VAR$=VAR$+"+CUST_CODE$",DE$=MSG("CUSTOMER") ELSE NO=0
12720 VAR$="FN%ZZDISP$("+VAR$+","+QUO+VAR_FMT$[XX]+QUO+")"
12730 RETURN 
12740 SEL_LINE:
12745 LB_LIST$=LB_LIST$(1,LEN(LB_LIST$)-1)
12750 %FIRST_KEY$=LB_LIST$(POS(SEP=LB_LIST$,-1)+1),SORT_BY=LB_LIST.CTL'SORT
12760 %CHN_N=_FIL_NO,%FILE_NAME$=FIN(%CHN_N,"FILENAME"); PROCESS "FILEMANT","../KTG/KT.EN","1"
12770 READ (_FIL_NO,KEY="",DOM=*NEXT)
12775 PHASE.CTL'VALUE$="Reading File :"; SHOW CONTROL PHASE.CTL
12780 LIST_BOX LOAD LB_LIST.CTL,""
12790 NUMREC=NUM(FN%FIN$(_FIL_NO,"NUMREC")),IDX=0 ! DIM NUMREC$[NUMREC]
12800 EXECUTE LINE$
12810 GOTO READ_FILE
13000 GRAPHIC: SH=1
13010 FOR A=37 TO 1 STEP -1
13015 CT=EVN("bt"+STR(A)+".ctl")
13020 SHOW CONTROL CT
13025 WAIT .5
13030 FOR BB=1 TO 100000
13040 NEXT 
13050 NEXT 
13070 FOR A=1 TO 37
13075 CT=EVN("bt"+STR(A)+".ctl")
13080 HIDE CONTROL CT
13085 WAIT .5
13090 FOR BB=1 TO 100000
13100 NEXT 
13110 NEXT 
13120 L=L+1; IF L<=40 THEN GOTO 13010
14000 WRITE_REC:
14010 LOG_F$=PAD(LOG_FILE$,30)
14020 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"000")%C$,%X3$(40,3),LOG_F$,"000",WRK.PATH$,ALL_VAL$
14030 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"001")FMT$
14040 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"002")LBLST$
14050 WRITE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+"003")DBFLD$
14060 MSGBOX "Query Record: "+STP(LOG_F$)+SEP+SEP+"Updated","Update","!,tim=3"
14070 RETURN 
14100 DELETE_REC:
14110 LOG_F$=PAD(LOG_FILE$,30)
14120 FOR AA=0 TO 3
14130 REMOVE (_ZZS,KEY=%C$+%X3$(40,3)+LOG_F$+STR(AA:"000"),DOM=*NEXT)
14140 NEXT 
14150 MSGBOX "Query Record: "+STP(LOG_F$)+SEP+SEP+"Deleted","Delete","!,tim=3"
14160 RETURN 
15250 CREATE_HEADER: B_FMT$=FMT$
15255 XX=POS(" [Key Information]L30 "=FMT$),FMT$=FMT$(1,XX-1)
15260 HEADER$="",COL=0,ALL_LEN$=""
15270 XX=POS("["=FMT$); IF XX=0 THEN RETURN 
15280 XXX=POS("]"=FMT$(XX)),COL=COL+1
15290 TMP$=FMT$(XX+1,XXX-1-XX),FMT$=FMT$(XXX+XX),HEADER$=HEADER$+TMP$+$09$
15300 XX=POS(" "=FMT$),TMP$=FMT$(1,XX-1),FMT$=FMT$(XX+1)
15500 ! Rutine for len
15510 IF POS(TMP$(1,1)="0123456789")=0 THEN TMP$=TMP$(2); GOTO 15510
15520 ALL_LEN$=ALL_LEN$+TMP$+","
15600 GOTO 15270
15699 ! 
23000 LOAD_GRID:
23005 _BKEY$=_KEY$,BPO_NUMBER$=PO_NUMBER$,GRIDD$="",OPR$="",MAX_LINES=0
23008 ! X'COLUMM=-1,X'ROW=2,X'CELLTYPE$="Normal"
23045 IF AA>1 THEN GRIDD$=GRIDD$+"A"; GRID LOAD GR.CTL,1,0,"A"
23050 LINES=LINES+1,GR.CTL'ROW=LINES,GR.CTL'COLUMN=-1,GR.CTL'VALUE$=STR(LINES:"000")
23060 GRID WRITE GR.CTL,1,LINES,TF_NAME$; GRID LOCK GR.CTL,1,LINES
23070 GRID WRITE GR.CTL,2,LINES,TF_TYPE$; GRID LOCK GR.CTL,2,LINES
23075 GRID WRITE GR.CTL,3,LINES,TF_DESC$; GRID LOCK GR.CTL,3,LINES
23078 GRID WRITE GR.CTL,4,LINES,LEN$; GRID LOCK GR.CTL,4,LINES
23079 REC$[LINES,5]=CLASS$
23080 GRID WRITE GR.CTL,5,LINES,STR(LINES)
23082 ! IF POS("_DIV"=TF_NAME$)<>0 THEN GRID LOCK GR.CTL,5,LINES; GRID LOCK GR.CTL,6,LINES; GRID LOCK GR.CTL,7,LINES
23085 IF POS("_DIV"=TF_NAME$)<>0 THEN GRID WRITE GR.CTL,8,LINES,"00"; GRID WRITE GR.CTL,6,LINES,"1"; GRID WRITE GR.CTL,7,LINES,"2"
23087 GR.CTL'ROW=LINES,GR.CTL'COLUMN=8,GR.CTL'LEN=NUM(LEN$)
23090 RETURN 
23100 END_LOAD_GRID:
23120 IF LINES=0 THEN GOTO PROC_RE
24509 ! X=GR.CTL,X'COLUMM=2,X'ROW=-1,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
24510 PROC_RE: _KEY$=_BKEY$
24515 GRID SHOW GR.CTL
24530 GRID_FOCUS:
24535 IF ID$<>"GR" THEN GOTO *RETURN
24540 GRID SELECT READ GR.CTL,COL,ROW
24550 IF COL=5 THEN GRID GOTO GR.CTL,6,ROW; NEXT_ID=GR.CTL
24552 IF COL=6 THEN GRID GOTO GR.CTL,7,ROW; NEXT_ID=GR.CTL
24555 IF COL=7 THEN GRID GOTO GR.CTL,8,ROW; NEXT_ID=GR.CTL
24560 IF COL=8 AND ROW+1<=LINES THEN GRID GOTO GR.CTL,5,ROW+1; NEXT_ID=GR.CTL ELSE %GRID=0
24599 RETURN 
24600 ADD_LINES:
24610 LINES=LINES+1
24620 GRID ADD GR.CTL,0,LINES
24630 GR.CTL'ROW=LINES,GR.CTL'COLUMN=-1,GR.CTL'VALUE$=STR(LINES:"000"),GR.CTL'FONT$="MS Sans Serif"
24635 X=GR.CTL,X'COLUMN=1,X'ROW=LINES
24640 GRID WRITE GR.CTL,1,LINES,PRINT_LINE$
24645 GRID GOTO GR.CTL,1,LINES; NEXT_ID=GR.CTL
24650 RETURN 
25700 SEL_GRID:
25710 FOR AA=1 TO LINES
25720 X=GR.CTL
25730 GRID FIND X,1,AA,FLD$
25735 GRID FIND X,2,AA,TYP$
25738 GRID FIND X,4,AA,LEN$
25740 GRID FIND X,5,AA,COLUMN$
25742 GRID FIND X,8,AA,DEFLT$
25745 IF NUM(COLUMN$)>MXCOL THEN MXCOL=NUM(COLUMN$)
25750 REC$[AA,1]=FLD$,REC$[AA,2]=TYP$,REC$[AA,3]=COLUMN$,REC$[AA,4]=LEN$,REC$[AA,6]=DEFLT$
25770 NEXT AA
25771 RETURN 
25772 DEL_GRID:IF LINES=0 THEN GOTO *RETURN
25773 FOR AA=2 TO LINES; GRID DELETE GR.CTL,0,2; NEXT AA
25775 CHANGE_FLG=0,REFRESH_FLG=1,CHANGE_FLG=0
25780 GRID WRITE GR.CTL,1,1,""
25790 GRID WRITE GR.CTL,2,1,""
25800 IF MAX_LINES=0 THEN GOTO *RETURN
25900 RETURN 
26000 CREATE_REC:
26020 PO_DIV$=PO_NUMBER$(1,%PO_DIV_LEN),PO_NUM$=PO_NUMBER$(%PO_DIV_LEN+1)
26030 PO_LINE_NUM$="001",PRINT_LINE$="Y",TF_COMMENT$="",POE_UNUSED_1$=""
26040 _KEY$=PO_NUMBER$+PO_LINE_NUM$
27050 WRITE (_FIL_NO,KEY=_KEY$)
27060 RETURN 
27100 DEL_LN: AB=GR.CTL
27105 IF LINES>MAX_LINES THEN MAX_LINES=LINES
27110 GRID SELECT READ GR.CTL,COL,ROW
27120 GRID FIND GR.CTL,1,ROW,SEL$,ERR=NO_LN
27130 GRID FIND GR.CTL,2,ROW,SEL1$
27140 COLOR$="Light Red",AB'ROW=ROW,AB'COLUMN=2,AB'BACKCOLOR$=COLOR$,AB'COLUMN=1,AB'BACKCOLOR$=COLOR$
27150 MSGBOX MSG("WISH")+" "+MSG("DELETE")+" "+MSG("LINE")+" "+STR(ROW:"000B")+SEP+"("+SEL$+"-"+STP(SEL1$)+")",MSG("CONFIRMING"),"?,YESNO",OPT$
27155 AB'ROW=ROW,AB'COLUMN=2,AB'BACKCOLOR$="White",AB'COLUMN=1,AB'BACKCOLOR$="White"
27160 IF OPT$="NO" THEN EXIT 
27170 GRID DELETE GR.CTL,0,ROW
27180 LINES=LINES-1
27190 FOR AA=ROW TO LINES
27200 GR.CTL'ROW=AA,GR.CTL'COLUMN=-1,GR.CTL'VALUE$=STR(AA:"000")
27210 NEXT AA
27220 RETURN 
27300 INS_LN:
27310 GRID SELECT READ GR.CTL,COL,ROW
27315 AB=GR.CTL,COLOR$="Light Blue",AB'ROW=ROW,AB'COLUMN=2,AB'BACKCOLOR$=COLOR$,AB'COLUMN=1,AB'BACKCOLOR$=COLOR$
27320 MSGBOX MSG("WISH")+" "+MSG("INSERT")+" "+MSG("LINE")+" "+STR(ROW:"000B"),MSG("CONFIRMING"),"!,YESNO",OPT$
27325 AB'ROW=ROW,AB'COLUMN=2,AB'BACKCOLOR$="White",AB'COLUMN=1,AB'BACKCOLOR$="White"
27330 IF OPT$="NO" THEN RETURN 
27340 ! GRID ADD GR.CTL,0,ROW
27350 LINES=LINES+1,BLINES=LINES,LINES=ROW-1
27355 GOSUB ADD_LINES; LINES=BLINES; BLINES=0
27357 GR.CTL'FONT$="MS Sans Serif"
27360 FOR AA=ROW TO LINES
27370 GR.CTL'ROW=AA,GR.CTL'COLUMN=-1,GR.CTL'VALUE$=STR(AA:"000"),GR.CTL'FONT$="MS Sans Serif"
27380 NEXT AA
27390 RETURN 
27400 NO_LN:
27410 MSGBOX MSG("NO_LN"),MSG("WARNING"),"!",OPT$
27420 RETURN 
28000 DEL_RECORDS:
28010 B_PO$=PO_NUMBER$
28020 READ (_FIL_NO,KEY=B_PO$,DOM=*NEXT)
28025 READ_NXT:
28030 _KEY$=KEY(_FIL_NO,END=END_DEL_RECORDS); READ (_FIL_NO)
28040 IF MID(_KEY$,1,LEN(B_PO$))<>B_PO$ THEN GOTO END_DEL_RECORDS
28050 REMOVE (_FIL_NO,KEY=_KEY$)
28060 GOTO READ_NXT
28070 END_DEL_RECORDS: PO_NUMBER$=B_PO$; RETURN 
34004 EXECUTE "37045 WRITE (_SRT,KEY="+KEYSTR$[0]+")"
34230 WRITE RECORD (EXCEL)"[SELECT(""R2C1:"+X$+"C12"","""+X$+"C12"")]"
35000 READ_EXCEL:
35001 CALL "*WINGRP;HIDE",FIELDS.GRP$; CALL "*WINGRP;HIDE",HIDE.GRP$; CALL "*WINGRP;SHOW",PHASE.GRP$; PRINT 'SIZE'(53,5),'MOVE'(35,8)
35002 PHASE.CTL'VALUE$="Opening Excel"
35003 EXECUTE "35150 WRITE (_SRT,KEY="+KEYSTR$[0]+")"
35004 EXECUTE "40110 READ (_FIL_NO,KEY="+KEYSTR$[0]+",rec=orig$,DOM=*NEXT)"
35005 EXECUTE "35140 WRITE (_FIL_NO,KEY="+KEYSTR$[0]+",DOM=DUP_KEYS)"
35006 EXECUTE "37040 WRITE (_FIL_NO,KEY="+KEYSTR$[0]+")"
35007 EXECUTE "35130 USER_DEF_SPEC$="+SUB(STP(ALL_VAL$,1,","),",","+")
35008 PHASE.CTL'VALUE$="Reading First 500 Rows"
35010 FOR FR=TF_FROM TO TO_CELL ! SSP 211380
35020 K$="R"+STR(FR)
35025 IF MOD(FR,500)=0 THEN PHASE.CTL'VALUE$="Reading Row:"+STR(FR)+" of "+STR(TO_CELL)+"["+STR(FR/TO_CELL*100)+"%]"
35028 IF MOD(FR,500)=0 THEN WRITE RECORD (EXCEL)"[SELECT(""R"+STR(FR)+"C1:R"+STR(FR)+"C1"","""+"R"+STR(FR)+"C1"")]"
35029 K$="R"+STR(FR)+"C1:R"+STR(FR)+"C"+STR(MXCOL); READ RECORD (EXCEL,KEY=K$)REC$; GOSUB INSERT_INTO_VAR
35030 FOR VAR=1 TO LINES
35040 IF NUM(REC$[VAR,3])=0 THEN CONTINUE
35050 EX$=RECO$[NUM(REC$[VAR,3])] ! K$="R"+STR(FR)+"C"+REC$[VAR,3]; FIND (EXCEL,KEY=K$)EX$
35060 EX$=STP(EX$,3,$0A$),EX$=STP(EX$,3,$0D$)
35065 IF STP(EX$)="" AND STP(REC$[VAR,6])<>"" THEN EX$=REC$[VAR,6]
35066 IF REC$[VAR,2]="D" AND STP(EX$)<>"" THEN GOSUB CNVRT_DATE ! SSP 307370
35070 IF POS(REC$[VAR,2]="SD")<>0 THEN EXECUTE REC$[VAR,1]+"$=PAD(EX$,"+REC$[VAR,4]+")"
35080 IF REC$[VAR,2]="N" THEN EXECUTE "EX$=STP(EX$,3,"",""),"+REC$[VAR,1]+"=NUM(EX$,ERR=*NEXT)"
35091 ! INPUT "* ",*
35120 NEXT 
35130 USER_DEF_SPEC$="THIS IS A TEST IMPORT"
35140 WRITE (_FIL_NO,KEY=STAX_CODE$,DOM=DUP_KEYS)
35150 WRITE (_SRT,KEY=STAX_CODE$)
35500 NEXT 
35501 CALL "$CTL-10;AGENT_MSG",%USER_NAME$+", Import Done",1; CMD_STR$="E"; MSGBOX "Import done!",MSG("CONFIRMING"),"INFO"; CMD_STR$="E"
35503 ARG_1$=MID(KEY_FILE$,1,3)
35505 PHASE.CTL'VALUE$="File Imported; Closing Excel"; CLOSE (EXCEL); CALL "*wingrp;show",HIDE.GRP$; CALL "*wingrp;hide",PHASE.GRP$
35506 CALL "[WDX]*CMDWORD;CLOSE",ERR=*NEXT,AA_OBJ
35508 PRINT 'MOVE'(15,4),'SIZE'(81,29); EXIT 
35510 RETURN 
36000 CLASS:
36010 FIND (_DCL,KEY=CLASS$,DOM=*RETURN)IOL=IOL_CLASS
36020 RETURN 
37000 DUP_KEYS:
37010 EXECUTE "DUP_KEYS$="+KEYSTR$[0]
37015 IF MID(FMGUDI_OPTIONS$,2,1)="Y" THEN GOTO 37035
37020 MSGBOX "Key : "+DUP_KEYS$+", Already exists in file"+SEP+SEP+"Do you wish to overwrite",MSG("WARNING"),"!,YESNO",OPT$
37030 IF OPT$="NO" THEN GOTO 35150
37035 GOSUB CHECK_CHANGES
37040 WRITE (_FIL_NO,KEY=STAX_CODE$)
37050 GOTO 35150
38000 NUM_CONV: XX=POS("("=EX$); IF XX=0 THEN RETURN ELSE EX$=EX$(1,XX-1)+EX$(XX+1),EX$=EX$+"-",EX$=STP(EX$,3,")"); RETURN 
39000 INSERT_INTO_VAR:
39010 LL=1,REC$+=$09$; DIM RECO$[MXCOL]
39020 XX=POS($09$=REC$); IF XX=0 THEN RETURN 
39030 RECO$[LL]=REC$(1,XX-1),REC$=REC$(XX+1),LL+=1
39040 GOTO 39020
40000 CLEAR_COLUMN:
40010 FOR AA=1 TO LINES
40020 GRID WRITE GR.CTL,5,AA,""
40022 GRID WRITE GR.CTL,6,AA,""
40025 GRID WRITE GR.CTL,7,AA,""
40028 GRID WRITE GR.CTL,8,AA,""
40030 NEXT 
40040 RETURN 
40100 CHECK_CHANGES:
40110 READ (_FIL_NO,KEY=STAX_CODE$,REC=ORIG$,DOM=*NEXT)
43120 FOR AA=1 TO LINES
43130 IF REC$[AA,2]="S" THEN BB$=EVS(REC$[AA,1]+"$"),BBB$=EVS("ORIG."+REC$[AA,1]+"$") ELSE BB$=STR(EVN(REC$[AA,1])),BBB$=STR(EVN("ORIG."+REC$[AA,1]))
43135 IF NUM(REC$[AA,3])=0 THEN BB$=""; GOTO 43150
43140 IF BB$=BBB$ OR STP(BB$)<>"" THEN CONTINUE
43150 IF STP(BB$)="" THEN BB$=BBB$
43160 IF REC$[AA,2]="S" THEN EXECUTE REC$[AA,1]+"$=ORIG."+REC$[AA,1]+"$" ELSE EXECUTE REC$[AA,1]+"=ORIG."+REC$[AA,1]
43200 NEXT 
43210 RETURN 
43500 EXCEL_NAME:
43510 XX=POS("[wdx]"=EXCEL_NAME$); IF XX<>0 THEN EXCEL_NAME$=EXCEL_NAME$(6)
43515 XX=POS("[WDX]"=EXCEL_NAME$); IF XX<>0 THEN EXCEL_NAME$=EXCEL_NAME$(6)
43520 EXCEL_NAME$=SUB(EXCEL_NAME$,"/","\",0)
43530 CALL "[WDX]*CMDWORD;GET_EXCEL1",ERR=*NEXT,AA_OBJ,EXCEL_NAME$
43540 RETURN 
56000 ! 
56001 REM "273353-User Defined Spec Export and Import programs.  See 272455   
56002 REM "303760-Bulk Import for APP Item Specs and Comments Section         
56003 REM "307370-User Defined Specs import does not recognize date fields    
