0010 ! FMGIAX - Item Specification Comments fmg
0035 REM "5.6 - 02/11/09 - 12.603333 - jdf - SSP# 206206
0037 REM "206206-RFQ. When setting up a new form and you use the copy feature
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0042 SETERR 0043; ENTER RFQ_NUM$,LINE$,CUSTOMER$,ITEM_CODE$; GOTO 0044
0043 CUSTOMER$=%CUSTOMER$,ITEM_CODE$=%ITEM_CODE$
0044 BB$=RFQ_NUM$; PROCESS "FMGIAX","../FMG/FM.EN",RFQ_NUM$,LINE$,CUSTOMER$,ITEM_CODE$; RFQ_NUM$=BB$
0045 EXIT 
0050 IF TCB(13)=1 THEN BEGIN 
0055 _CUSTOMER$=%CUSTOMER$,_ITEM_CODE$=%ITEM_CODE$
0060 PROCESS "FMGIAX","../FMG/FM.EN"
0065 %CUSTOMER$=_CUSTOMER$,%ITEM_CODE$=_ITEM_CODE$
0075 END 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0111 IF ARG_1$+ARG_2$<>"" THEN QUOTE$=ARG_1$,LINE$=ARG_2$ ! ,%CUSTOMER$=ARG_3$,%ITEM_CODE$=ARG_4$
0113 _CUSTOMER$=%CUSTOMER$,_ITEM_CODE$=%ITEM_CODE$
0115 GRID_TR$=MSG("GRID_TR"),GRID_T$=MSG("GRID_T")
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0145 %COMMENT_LEN=65
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="QSV"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0185 _FILE_NAME$="QS1"+%C$,QS1=HFN; OPEN (QS1,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0186 _FILE_NAME$="FM1"+%C$,_FM1=HFN; OPEN (_FM1,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0188 _FILE_NAME$="AR1"+%C$,_AR1=HFN; OPEN (_AR1,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=4
0430 DIM _KEYS$[1:4]; _KEYS$[1]="QUOTE$",_KEYS$[2]="LINES$",_KEYS$[3]="CUSTOMER$",_KEYS$[4]="ITEM_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0515 CALLED$="N"
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 IF ARG_1$+ARG_2$<>"" THEN ARG_1$=QUOTE$+LINE$+_CUSTOMER$+_ITEM_CODE$+"001",CUSTOMER$=_CUSTOMER$,ITEM_CODE$=_ITEM_CODE$,%CUSTOMER$=CUSTOMER$,%ITEM_CODE$=ITEM_CODE$
0536 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$
0537 CALL "ZZWLKU;parse_quote",QUOTE$,QUOTE_DIV$,QUOTE_NUM$
0540 ! GRID_TR$=MSG("GRID_TR"),GRID_T$=MSG("GRID_T"),X=GRID_COMMENT.CTL,X'COLUMM=-1,X'ROW=0,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
0542 GRID_TR$=MSG("GRID_TR"),GRID_T$=MSG("GRID_T")
0545 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; NEXT_ID=QUOTE.CTL; GOTO *RETURN
0550 _KEY$=ARG_1$,_ENABLE_FLG=_NUMKEYS,_CURKEY=_NUMKEYS-1,_KCNT=_NUMKEYS,CALLED$="Y"; GOSUB ENABLE_GROUPS; READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD)
0560 IF ARG_1$+ARG_2$<>"" THEN _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC; CALL "*WINGRP;HIDE",ARROW.GRP$
0565 GOSUB CUST; GOSUB ITEM
0568 IF STP(ITEM_CODE$)="" AND _ITEM_CODE$<>"" THEN ITEM_CODE$=_ITEM_CODE$
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0915 READ DATA FROM "" TO IOL=GLOBAL_IOL
0920 ! ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0945 IF QS1<>0 THEN CLOSE (QS1); QS1=0
0946 IF _FM1<>0 THEN CLOSE (_FM1); _FM1=0
0948 IF _AR1<>0 THEN CLOSE (_AR1); _AR1=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0965 %GRID=0
0966 ARG_1$=QUOTE$
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1011 IF ID$="CUSTOMER" AND STP(CUSTOMER$)="" THEN CUSTOMER$="          ",%CUSTOMER$=CUSTOMER$
1015 IF ID$="ITEM_CODE" THEN ITEM_CODE$=PAD(ITEM_CODE$,10," "); GOSUB ITEM; %ITEM_CODE$=ITEM_CODE$
1018 IF STP(CUSTOMER$)<>"" THEN CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$,%CUSTOMER$=CUSTOMER$; GOSUB CUST
1019 CALL "ZZWLKU;parse_quote",QUOTE$,QUOTE_DIV$,QUOTE_NUM$
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1042 IF CUSTOMER$="          " THEN GOTO 1047
1045 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$
1048 LINE_NUM$="001",_KEY$=CUSTOMER$+ITEM_CODE$+LINE_NUM$
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1065 IF LINE_NUM$="009" THEN GOSUB NUM_LINES_WARNING
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=GRID_COMMENT.CTL
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD: TF_PRINT$="Y"; WRITE (_FIL_NO,KEY=_KEY$); GOTO 0550
1211 GOSUB CUST; GOSUB READ_ITEM_RECORD
1212 CALL "*WINGRP;ENABLE",FIELDS.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$; RETURN 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=COMMENT.CTL
1275 IF POS(%C$="101500",3)>0 THEN %COMMENT_LEN=65 ELSE %COMMENT_LEN=60
1280 GOSUB READ_ITEM_RECORD
1285 GRID GOTO GRID_COMMENT.CTL,1,1
1286 LINES=1,NEXT_ID=GRID_COMMENT.CTL
1287 GRID_COMMENT.CTL'ROW=LINES,GRID_COMMENT.CTL'COLUMN=-1,GRID_COMMENT.CTL'VALUE$=STR(LINES:"000")
1290 X=GRID_COMMENT.CTL,X'COLUMN=1,X'ROW=AA,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
1300 TF_PRINT$=GRID_T$(1,POS("/"=GRID_T$)-1); GRID WRITE GRID_COMMENT.CTL,1,LINES,TF_PRINT$; OPR$=OPR$+TF_PRINT$
1310 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1415 GOSUB SEL_GRID; GOTO 1490
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF CALLED$<>"Y" THEN IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 IF CALLED$<>"Y" THEN NEXT_ID=QUOTE.CTL
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$(1,20); TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1652 FOR AA=1 TO LINES; _KEY$(21,3)=STR(AA:"000")
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1662 NEXT AA
1665 IF CALLED$="Y" THEN CHANGE_FLG=0; GOSUB CLEAR_REC; GOTO 1710
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=QUOTE.CTL
1705 GOSUB DEL_GRID
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF CALLED$="Y" THEN _ENABLE_FLG=_NUMKEYS,_CURKEY=_NUMKEYS-1,_KCNT=_NUMKEYS; GOSUB ENABLE_GROUPS ELSE IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1855 IF CALLED$="Y" THEN NEXT_ID=LINE_NUM.CTL ELSE NEXT_ID=CUSTOMER.CTL
1870 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF CALLED$="Y" THEN IF _KEY$(1,20)<>%CUSTOMER$+%ITEM_CODE$ THEN GOTO END_OF_FILE ! Only scroll thru records pertaining to this item if coming from menu or other program
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE)
2231 IF CALLED$="Y" THEN IF _KEY$(1,20)<>%CUSTOMER$+%ITEM_CODE$ THEN GOTO START_OF_FILE ! Only scroll thru records pertaining to this item if coming from menu of other program
2232 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 IF CALLED$="Y" THEN READ (_FIL_NO,KEY=%CUSTOMER$+%ITEM_CODE$,ERR=*NEXT) ! If coming from menu or other program, position file to first record for this item
2431 IF CALLED$="Y" THEN _KEY$=KEY(_FIL_NO,ERR=NO_FIRST) ELSE _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2440 IF CALLED$="Y" THEN IF _KEY$(1,20)<>%CUSTOMER$+%ITEM_CODE$ THEN GOTO NO_FIRST
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 IF CALLED$="Y" THEN READ (_FIL_NO,KEY=%CUSTOMER$+%ITEM_CODE$+$FE$,ERR=*NEXT) ! If coming from menu or other program, position file to last record for this item
2640 IF CALLED$="Y" THEN _KEY$=KEP(_FIL_NO,ERR=NO_LAST) ELSE _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2645 IF CALLED$="Y" THEN IF _KEY$(1,20)<>%CUSTOMER$+%ITEM_CODE$ THEN GOTO NO_LAST
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3061 CUSTOMER$=CUST_DIV$+CUST_CODE$
3062 IF STP(ITEM_DESC$)="" THEN ITEM_DESC$=%ITEM_DESC$
3065 IF TF_PRINT$=" " THEN TF_PRINT$="Y"
3066 IF STP(MID(TF_COMMENT$,61,5),3)="" THEN %COMMENT_LEN=60
3067 ! IF POS(%C$="101500",3)>0 THEN %COMMENT_LEN=65
3068 GOSUB READ_ITEM_RECORD
3070 IF FLAG=0 THEN GOSUB LOAD_GRID
3080 IF FLAG=0 THEN GRID GOTO GRID_COMMENT.CTL,1,1; NEXT_ID=GRID_COMMENT.CTL
3099 CALL "*WINGRP;ENABLE",FIELDS.GRP$
3110 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3325 IF CALLED$="Y" THEN CHANGE_FLG=0; GOSUB CLEAR_REC; GOTO *RETURN
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=QUOTE.CTL,_FIRST_FIELD=COMMENT.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13001 GLOBAL_IOL:IOLIST %CUSTOMER$,%ITEM_CODE$
13010 CLEAR_FIELDS:
13015 IF CALLED$="Y" THEN GOTO 13050
13020 IF _CLR_FLG$="R" THEN CUST_DIV$=""
13030 IF _CLR_FLG$="R" THEN CUST_CODE$="",CUSTOMER$=""; READ DATA FROM "" TO IOL=GLOBAL_IOL
13040 IF _CLR_FLG$="R" THEN ITEM_CODE$=""
13050 IF _CLR_FLG$="R" THEN LINE_NUM$=""
13060 TF_PRINT$=""
13070 TF_COMMENT$=""
13080 FMV_UNUSED_1$="",ITEM_DESC$="",CUST_NAME$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1; GOSUB DEL_GRID
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14040 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=ITEM_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$; DISABLE CONTROL BTN_ADD.CTL
14050 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=LINE_NUM.CTL; ENABLE CONTROL BTN_ADD.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14988 IF CALLED$="Y" THEN DISABLE CONTROL QUOTE.CTL,LINE.CTL,CUSTOMER.CTL,ITEM_CODE.CTL
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(7,"N")
15030 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15040 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15050 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15060 IF _ORIG.LINE_NUM$=_CUR.LINE_NUM$ OR LINE_NUM$=_CUR.LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.LINE_NUM$=LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("LINE_NUM")+" = "+_CUR.LINE_NUM$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_NUM")+" = "+_CUR.LINE_NUM$
15070 IF _ORIG.TF_PRINT$=_CUR.TF_PRINT$ OR TF_PRINT$=_CUR.TF_PRINT$ THEN GOTO *NEXT ELSE IF _ORIG.TF_PRINT$=TF_PRINT$ THEN _CHG2$=_CHG2$+SEP+MSG("PRINT")+" = "+_CUR.TF_PRINT$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRINT")+" = "+_CUR.TF_PRINT$
15080 IF _ORIG.TF_COMMENT$=_CUR.TF_COMMENT$ OR TF_COMMENT$=_CUR.TF_COMMENT$ THEN GOTO *NEXT ELSE IF _ORIG.TF_COMMENT$=TF_COMMENT$ THEN _CHG2$=_CHG2$+SEP+MSG("COMMENT")+" = "+_CUR.TF_COMMENT$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMMENT")+" = "+_CUR.TF_COMMENT$
15090 IF _ORIG.FMV_UNUSED_1$=_CUR.FMV_UNUSED_1$ OR FMV_UNUSED_1$=_CUR.FMV_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.FMV_UNUSED_1$=FMV_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FMV_UNUSED_1$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FMV_UNUSED_1$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16030 IF _CHG_VAR$(2,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16040 IF _CHG_VAR$(3,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16050 IF _CHG_VAR$(4,1)="Y" THEN LINE_NUM$=_CUR.LINE_NUM$
16060 IF _CHG_VAR$(5,1)="Y" THEN TF_PRINT$=_CUR.TF_PRINT$
16070 IF _CHG_VAR$(6,1)="Y" THEN TF_COMMENT$=_CUR.TF_COMMENT$
16080 IF _CHG_VAR$(7,1)="Y" THEN FMV_UNUSED_1$=_CUR.FMV_UNUSED_1$
16990 RETURN 
20000 LINE_NUM_FMT:ENTER FIELD$,VAR_TAG$,ERR=*NEXT
20005 LINE_NUM_VAL:ENTER FIELD$,ERR_MSG$,VAR_TAG$,ERR=*NEXT
20010 FIELD$=STR(NUM(FIELD$,ERR=*NEXT):"000"); GOTO LINE_NUM_FMT_END
20015 ERR_MSG$="Line number field must be numeric."
20040 LINE_NUM_FMT_END:EXIT 
20045 ! 
21450 READ_ITEM_RECORD:
21455 ITEM:READ (QS1,KEY=%SPEC$,DOM=*NEXT,ERR=*NEXT); GOTO 21470
21460 READ (_FM1,KEY=CUST_DIV$+CUST_CODE$+ITEM_CODE$,DOM=*NEXT); GOTO 21470
21470 CUST:READ (_AR1,KEY=CUSTOMER$,DOM=*NEXT,ERR=*NEXT)
21480 REFRESH_FLG=1
21490 READ_ITEM_RECORD_END:RETURN 
21495 ! 
21500 NO_ITEM: ITEM_CODE$="",NEXT_ID=ITEM_CODE.CTL
21510 IF STP(ITEM_CODE$)="" AND _ITEM_CODE$<>"" THEN ITEM_CODE$=_ITEM_CODE$
21515 RETURN 
21520 RETURN 
21600 ! ^21600,10 - Add Line
21610 ADD_LINE:
21620 DIM PKEY$(34)
21630 READ (_FIL_NO,KEY=QUOTE_DIV$+QUOTE_NUM$+LINE$+CUST_DIV$+CUST_CODE$+ITEM_CODE$+"zzz",DOM=*NEXT)
21640 PKEY$=KEP(_FIL_NO,ERR=*NEXT)
21650 LINE_NUM$="001"
21660 IF PKEY$(1,34)=QUOTE_DIV$+QUOTE_NUM$+QUOTE_LINE_NUM$+CUST_DIV$+CUST_CODE$+ITEM_CODE$+LINE_NUM$ THEN LINE_NUM$=STR(NUM(MID(PKEY$,32,3),ERR=*NEXT)+1:"000")
21680 REFRESH_FLG=1
21690 _EOM$=$0D$,_KCNT=3,_FIRST_FIELD=COMMENT.CTL,_KEY$=CUST_DIV$+CUST_CODE$+ITEM_CODE$+LINE_NUM$
21700 GOSUB NEW_RECORD
21710 _ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
21715 IF LINE_NUM$="009" THEN GOSUB NUM_LINES_WARNING
21720 RETURN 
21730 ! 
22000 NUM_LINES_WARNING:
22010 MSGBOX MSG("FMGIAW_M01"),"WARNING","!,OK,TIM=4"
22040 NUM_LINES_WARNING_END:RETURN 
22045 ! 
23000 LOAD_GRID:
23002 GRID HIDE GRID_COMMENT.CTL
23005 LINES=0,_BKEY$=_KEY$,BCUSTOMER$=CUSTOMER$,BITEM_CODE$=ITEM_CODE$,GRIDD$="",OPR$=""
23008 ! X'COLUMM=-1,X'ROW=2,X'CELLTYPE$="Normal"
23010 READ (_FIL_NO,KEY=QUOTE$+LINE$+CUSTOMER$+ITEM_CODE$,DOM=*NEXT)
23020 _KEY$=KEY(_FIL_NO,END=END_LOAD_GRID); READ (_FIL_NO)
23030 IF MID(_KEY$,1,8)<>QUOTE$ THEN GOTO END_LOAD_GRID
23040 FLAG=1; GOSUB PROCESS_READ
23045 GRIDD$=GRIDD$+"A"; GRID LOAD GRID_COMMENT.CTL,1,0,ESC ! GRIDD$ ! SSP206206 jdf
23047 ! IF LINES=0 THEN GRID_COMMENT.CTL'ROW=-1,GRID_COMMENT.CTL'COLUMN=0,GRID_COMMENT.CTL'VALUE$="Ln#"
23050 LINES=LINES+1,GRID_COMMENT.CTL'ROW=LINES,GRID_COMMENT.CTL'COLUMN=-1,GRID_COMMENT.CTL'VALUE$=MID(_KEY$,32,3) ! SSP206206 jdf
23055 ! GRID WRITE GRID_COMMENT.CTL,0,0,GRIDD$
23060 GRID WRITE GRID_COMMENT.CTL,1,LINES,TF_PRINT$; OPR$=OPR$+TF_PRINT$
23070 GRID WRITE GRID_COMMENT.CTL,2,LINES,STP(TF_COMMENT$)
23072 GRID_COMMENT.CTL'COLUMN=2,GRID_COMMENT.CTL'ROW=LINES,GRID_COMMENT.CTL'LEN=60
23075 IF LINES=9 THEN GOSUB NUM_LINES_WARNING
23080 GOTO 23020
23100 END_LOAD_GRID:
23110 GRID_TR$=MSG("GRID_TR"),GRID_T$=MSG("GRID_T")
23120 IF LINES=0 THEN GOTO PROC_RE
24501 FOR AA=LINES TO 1 STEP -1
24504 X=GRID_COMMENT.CTL,X'COLUMN=1,X'ROW=AA,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
24505 XX=POS(OPR$(AA,1)=GRID_T$),XXX=POS("/"=GRID_T$(XX))-1,TEXT$=GRID_T$(XX,XXX); GRID WRITE GRID_COMMENT.CTL,1,AA,TEXT$
24508 NEXT AA
24509 ! X=GRID_COMMENT.CTL,X'COLUMM=2,X'ROW=-1,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
24510 PROC_RE: _KEY$=_BKEY$
24515 GRID SHOW GRID_COMMENT.CTL
24520 GOSUB PROCESS_READ; FLAG=0; RETURN 
24530 GRID_COMMENT_FOCUS:
24535 RETURN 
24600 ADD_LINES:
24610 LINES=LINES+1
24620 GRID ADD GRID_COMMENT.CTL,0,LINES
24630 GRID_COMMENT.CTL'ROW=LINES,GRID_COMMENT.CTL'COLUMN=-1,GRID_COMMENT.CTL'VALUE$=STR(LINES:"000")
24635 X=GRID_COMMENT.CTL,X'COLUMN=1,X'ROW=LINES,X'CELLTYPE$="DropBox",X'TEXT$=GRID_T$
24640 TF_PRINT$=GRID_T$(1,POS("/"=GRID_T$)-1); GRID WRITE GRID_COMMENT.CTL,1,LINES,TF_PRINT$; OPR$=OPR$+TF_PRINT$
24645 GRID GOTO X,1,LINES
24648 IF LINES=9 THEN GOSUB NUM_LINES_WARNING
24650 RETURN 
25700 SEL_GRID:
25705 GOSUB DEL_RECORDS
25710 FOR AA=1 TO LINES
25720 X=GRID_COMMENT.CTL
25730 GRID FIND X,1,AA,TF_PRINT$,ERR=*BREAK
25735 TF_PRINT$=MID(TF_PRINT$,1,1)
25740 GRID FIND X,2,AA,TF_COMMENT$
25745 RFQ_DIV$=QUOTE_DIV$,RFQ_NUM$=QUOTE_NUM$ ! SSP 197860
25750 LINE_NUM$=STR(AA:"000"),RFQ_LINE_NUM$=LINE$,_KEY$=QUOTE$+LINE$+%CUSTOMER$+%ITEM_CODE$+LINE_NUM$,ITEM_CODE$=%ITEM_CODE$
25755 CALL "ZZWLKU;PARSE_CUST",%CUSTOMER$,CUST_DIV$,CUST_CODE$
25760 WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
25770 NEXT AA
25771 CHANGE_FLG=0; GOSUB CLEAR_REC
25772 DEL_GRID:IF LINES=0 THEN GOTO *RETURN
25773 FOR AA=2 TO LINES; GRID DELETE GRID_COMMENT.CTL,0,2; NEXT AA
25775 CHANGE_FLG=0,REFRESH_FLG=1,CHANGE_FLG=0
25780 GRID WRITE GRID_COMMENT.CTL,1,1,""
25790 GRID WRITE GRID_COMMENT.CTL,2,1,""
25795 IF ARG_1$+ARG_2$<>"" THEN CMD_STR$="END"
25800 RETURN 
30000 SEL_LB_LINE:
30005 PROCESS "XMGIAW.1","../FMG/FM.EN",STR(_FIL_NO),VAL$
30008 RETURN 
30009 INIT_QRY: _FIL_NO=NUM(ARG_1$)
30010 READ (_FIL_NO,KEY="",DOM=*NEXT)
30020 READ (_FIL_NO,REC=FMV$,END=END_REC)
30025 IDX=IDX+1,LN$=FMV.CUST_DIV$+"-"+FMV.CUST_CODE$+SEP+FMV.ITEM_CODE$+SEP+FMV.LINE_NUM$+SEP+FMV.TF_PRINT$+SEP+FMV.TF_COMMENT$
30026 LN1$=SEP+SEP+FMV.LINE_NUM$+SEP+FMV.TF_PRINT$+SEP+FMV.TF_COMMENT$
30028 IF BKEY$<>FMV.CUST_DIV$+FMV.CUST_CODE$+FMV.ITEM_CODE$ THEN LIST_BOX LOAD LB_LINE.CTL,IDX,LN$; BKEY$=FMV.CUST_DIV$+FMV.CUST_CODE$+FMV.ITEM_CODE$; GOTO 30020
30030 LIST_BOX LOAD LB_LINE.CTL,IDX,LN1$
30040 GOTO 30020
30050 END_REC:
30060 RETURN 
31000 DEL_RECORDS:
31010 READ (_FIL_NO,KEY=QUOTE$,DOM=*NEXT)
31020 _KEY$=KEY(_FIL_NO,END=END_DEL_REC); READ (_FIL_NO)
31030 IF MID(_KEY$,1,8)<>QUOTE$ THEN GOTO END_DEL_REC
31035 REMOVE (_FIL_NO,KEY=_KEY$)
31040 GOTO 31020
31050 END_DEL_REC:
31060 RETURN 
56000 ! "197860-RFQ comments disappear after you exit the RFQ.              
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56004 REM "206206-RFQ. When setting up a new form and you use the copy feature
