0010 ! FMGRKS - Finders Fee report
0035 REM "5.7 - 02/15/17 - 11.293888 - tma - SSP# 283238
0037 REM "283238-Minor issues with the Multi Finders Fee option and Finders  
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "FMGRKS","../FMG/FM.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 X0=-1,X2=-1
0140 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0150 ! 
0155 DIM ZZS$(90),PRT$(125),RNG$(60),RNG[4],B.RNG[4],SPC$(126)
0160 ! iolist
0170 IOLIST ZZS$(1)
0180 IOLIST PRT$(1),RNG$,RNG{ALL}
0300 ! Open Files
0310 DIM Z[NUM(X3$(60,3))]
0320 Z$="01O ZZS...  03O FSB...  06O ZZPARM  07O ZZP     "
0330 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0400 ! 
0410 RPT_SELEC$="            "; VIEW$=""
0480 GOSUB GET_PARAM
0485 PRT_MODES$="QS" ! SSP 240570
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 KEY_1$="FM2RKA"+RPT_SELEC$; %K9$="FM2RKA"
0530 READ (Z[1],KEY=KEY_1$,DOM=ADD_OPT)IOL=0170,IOL=0180
0550 IF AR_PARM$(117,1)="Y" THEN CALL "*WINGRP;SHOW",REP.GRP$
0570 B_ZZS$=ZZS$; B_PRT$=PRT$; B_RNG$=RNG$; CHG_FLG=0
0580 GOSUB SELECT_OPTIONS
0590 RETURN 
0600 ! selection Options
0610 SELECT_OPTIONS:
0630 PRG_NAME$=ZZS$(1,6); RPT_SELEC$=ZZS$(7,12); RPT_DESC$=ZZS$(19,40)
0640 RPT_OPT$=ZZS$(59,12); RPT_SEQ$=ZZS$(71,1)
0650 RPT_ZEROBAL$=ZZS$(73,1); RPT_POSTAGE$=ZZS$(74,1)
0800 ! Output Options
0810 PRT_MODE$=PRT$(1,1); RPT_OUTDEV$=PRT$(2,6)
0820 RPT_VERT$=PRT$(9,1); RPT_HORIZ$=PRT$(10,1)
0830 RPT_AUX1$=PRT$(11,1); RPT_AUX2$=PRT$(12,1); RPT_AUX3$=PRT$(13,1); RPT_AUX4$=PRT$(14,1)
0840 RPT_LINES$=PRT$(15,2); RPT_FORMCODE$=PRT$(17,1)
0850 RPT_JOBCARD$=PRT$(65,60); RPT_JOBCARD_FLG$=PRT$(125,1)
0860 GOSUB LOAD_RANGE
0870 NEXT_ID=RPT_VEIW.CTL
0880 REFRESH_FLG=1
0890 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0960 SET_PARAM 'KR'=_SV_KR
0970 EXIT 
1000 ! load the sequence range
1010 LOAD_RANGE:
1020 SWITCH RPT_SEQ$
1030 CASE "1"
1040 IF NUL(RNG$(1,4)) THEN START_FISCAL$="FIRST" ELSE START_FISCAL$=RNG$(1,4)
1050 IF RNG$(5,3)="~~~" THEN END_FISCAL$="LAST" ELSE END_FISCAL$=RNG$(5,4)
1060 IF NUL(RNG$(9,2)) THEN START_ACCTPD$="FIRST" ELSE START_ACCTPD$=RNG$(9,2)
1070 IF RNG$(11,2)="~~" THEN END_ACCTPD$="LAST" ELSE END_ACCTPD$=RNG$(11,2)
1080 IF NUL(RNG$(13,4)) THEN SLS_START$="" ELSE SLS_START$=RNG$(13,4)
1090 IF RNG$(17,3)="~~~" THEN SLS_END$="" ELSE SLS_END$=RNG$(17,4)
1100 IF NUL(RNG$(21,10)) THEN VEND_START$="" ELSE VEND_START$=RNG$(21,10)
1110 IF RNG$(31,3)="~~~" THEN VEND_END$="" ELSE VEND_END$=RNG$(31,10)
1120 IF NUL(RNG$(41,8)) THEN INVNUM_START$="" ELSE INVNUM_START$=RNG$(41,8)
1130 IF RNG$(49,3)="~~~" THEN INVNUM_END$="" ELSE INVNUM_END$=RNG$(49,8)
1190 NEXTFOLDER_FLG=FLDR.FM1.5.CTL
1200 RETURN 
1300 CASE "2"
1310 IF NUL(RNG$(1,4)) THEN START_FISCAL$="FIRST" ELSE START_FISCAL$=RNG$(1,4)
1320 IF RNG$(5,3)="~~~" THEN END_FISCAL$="LAST" ELSE END_FISCAL$=RNG$(5,4)
1330 IF NUL(RNG$(9,2)) THEN START_ACCTPD$="FIRST" ELSE START_ACCTPD$=RNG$(9,2)
1340 IF RNG$(11,2)="~~" THEN END_ACCTPD$="LAST" ELSE END_ACCTPD$=RNG$(11,2)
1350 IF NUL(RNG$(13,10)) THEN VEND_START$="" ELSE VEND_START$=RNG$(13,10)
1360 IF RNG$(23,3)="~~~" THEN VEND_END$="" ELSE VEND_END$=RNG$(23,10)
1370 IF NUL(RNG$(33,4)) THEN SLS_START$="" ELSE SLS_START$=RNG$(33,4)
1380 IF RNG$(37,3)="~~~" THEN SLS_END$="" ELSE SLS_END$=RNG$(37,4)
1390 IF NUL(RNG$(41,8)) THEN INVNUM_START$="" ELSE INVNUM_START$=RNG$(41,8)
1400 IF RNG$(49,3)="~~~" THEN INVNUM_END$="" ELSE INVNUM_END$=RNG$(49,8)
1480 RETURN 
1490 END SWITCH 
1500 RETURN 
3800 CHECK_CHANGES:
3805 GOSUB LOAD_OPTIONS
3810 IF CHG_FLG=0 THEN RETURN 
3820 MSGBOX MSG("UPD_RPT_1")+SEP+MSG("UPD_RPT_2"),MSG("CONFIRM"),"?,YESNO",ANS$
3840 IF ANS$="NO" THEN RETURN 
3850 WRITE (Z[1],KEY=KEY_1$)IOL=0170,IOL=0180
3860 B_ZZS$=ZZS$; B_PRT$=PRT$; B_RNG$=RNG$; CHG_FLG=0
3870 RETURN 
3880 ! 
8000 ! Messages
8010 ADD_OPT:
8020 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YesNo",ANS$
8030 IF ANS$="NO" THEN CMD_STR$="END"; RETURN 
8040 KEY_1$="FM2RKA"+RPT_SELEC$
8050 DIM ZZS$(90),RNG$(100); ZZS$(1,18)=KEY_1$,ZZS$(71,1)="1",ZZS$(73,2)="NNN",RNG$(5,4)=DIM(4,"~"),RNG$(11,2)=DIM(2,"~")
8060 GOSUB SELECT_OPTIONS
8070 REFRESH_FLG=1; NEXT_ID=RPT_DESC.CTL
8090 RETURN 
9000 ! Get System Parameters
9010 GET_PARAM:
9020 F0=0
9030 READ (Z[6],KEY=X3$(9,3)+"A/R")AR_PARM$
9040 FIND (Z[6],KEY=X3$(9,3)+"F/M",DOM=*NEXT)FMPARM$ ! SSP#283238
9045 MFF_PARM=0; IF MID(FMPARM$,337,1)="Y" THEN MFF_PARM=1 ! SSP#283238
9090 RETURN 
9999 END 
17000 ! 
20000 LOAD_OPTIONS:
20010 ! View Report Routine.
20020 ! 
20030 ZZS$(1,6)=PRG_NAME$
20040 ZZS$(7,12)=RPT_SELEC$; ZZS$(19,40)=RPT_DESC$
20050 ZZS$(59,12)=RPT_OPT$; ZZS$(71,1)=RPT_SEQ$
20060 ZZS$(73,1)=RPT_ZEROBAL$; ZZS$(74,1)=RPT_POSTAGE$
20100 ! 
20110 PRT$(1,1)=PRT_MODE$; PRT$(2,2)=RPT_OUTDEV$
20120 PRT$(9,1)=RPT_VERT$; PRT$(10,1)=RPT_HORIZ$
20130 PRT$(11,1)=RPT_AUX1$; PRT$(12,1)=RPT_AUX2$
20140 PRT$(13,1)=RPT_AUX3$; PRT$(14,1)=RPT_AUX4$
20150 PRT$(15,2)=RPT_LINES$; PRT$(17,1)=RPT_FORMCODE$
20160 PRT$(65,60)=RPT_JOBCARD$; PRT$(125,1)=RPT_JOBCARD_FLG$
20170 ! 
20175 RNG$=""
20180 ! 
20190 IF RPT_SEQ$="1" THEN {
20200 T1$="FSL..."
20205 GOSUB GET_FISYR_RANGE; GOSUB GET_ACCT_RANGE
20210 GOSUB GET_SLSMAN_RANGE; GOSUB GET_VEND_RANGE; GOSUB GET_INV_RANGE
20215  }
20220 IF RPT_SEQ$="2" THEN {
20230 T1$="FSK..."
20235 GOSUB GET_FISYR_RANGE; GOSUB GET_ACCT_RANGE
20240 GOSUB GET_VEND_RANGE; GOSUB GET_SLSMAN_RANGE; GOSUB GET_INV_RANGE
20250  }
20300 IF B_ZZS$=ZZS$ AND B_PRT$=PRT$ AND B_RNG$=RNG$ THEN CHG_FLG=0 ELSE CHG_FLG=1
20390 RETURN 
25000 ! 
25010 PRINT_REPORT:
25020 IF NOT(NUL(VIEW$)) THEN PRT$(2,2)=VIEW$
25030 K$=X3$(1,8)
25040 %B_WINDATE_FMT$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD",JJ$=DTE(0:"%Yl%Mz%Dz"); CALL "ZZWDTE;VALIDATE",JJ$,JJJ$,JJJJ$; X3$(21,6)=JJ$
25045 IF POS(PRT_MODE$="QS")>0 THEN GOSUB REPORT_PRINT_MODE; CMD_STR$="END"; RETURN ! SSP 240570
25050 WRITE (Z[7],KEY=K$)X3$,X4$,T1$,PRT$,RNG$,ZZS$
25055 GOSUB GET_PROG
25060 CALL K9$
25070 CMD_STR$="END"
25080 RETURN 
26000 ! GET THE CORRECT PRGRAM TO RUN
26010 GET_PROG:
26020 K9$="FM2RKA"
26025 IF K9$>"" THEN IF MFF_PARM THEN K9$="FM2RKF" ! SSP#283238
26090 RETURN 
28000 ! 
28010 GET_VEND_RANGE:
28020 IF NUL(VEND_START$) THEN RNG$+="          " ELSE RNG$+=VEND_START$
28030 IF NUL(VEND_END$) THEN RNG$=RNG$+"~~~~~~~~~~" ELSE RNG$=RNG$+VEND_END$
28040 RETURN 
28050 ! 
28060 GET_SLSMAN_RANGE:
28070 IF NUL(SLS_START$) THEN RNG$+="    " ELSE RNG$+=SLS_START$
28080 IF NUL(SLS_END$) THEN RNG$+="~~~~" ELSE RNG$+=SLS_END$
28090 RETURN 
28100 ! 
28110 GET_ITEM_RANGE:
28120 IF NUL(ITEM_START$) THEN RNG$+="          " ELSE RNG$=RNG$+ITEM_START$
28130 IF NUL(ITEM_END$) THEN RNG$=RNG$+"~~~~~~~~~~" ELSE RNG$=RNG$+ITEM_END$
28140 RETURN 
28150 ! 
28160 GET_PROD_RANGE:
28170 IF NUL(PROD_START$) THEN RNG$=RNG$+"   " ELSE RNG$=RNG$+PROD_START$
28180 IF NUL(PROD_END$) THEN RNG$=RNG$+"~~~" ELSE RNG$=RNG$+PROD_END$
28190 RETURN 
28200 ! 
28210 GET_FISYR_RANGE:
28220 IF NUL(START_FISCAL$) OR START_FISCAL$="FIRST" THEN RNG$=RNG$+"    " ELSE RNG$=RNG$+START_FISCAL$
28230 IF NUL(END_FISCAL$) OR END_FISCAL$="LAST" THEN RNG$+="~~~~" ELSE RNG$+=END_FISCAL$
28240 RETURN 
28250 ! 
28260 GET_INV_RANGE:
28270 IF NUL(INVNUM_START$) THEN RNG$=RNG$+"        " ELSE RNG$=RNG$+INVNUM_START$
28280 IF NUL(INVNUM_END$) THEN RNG$=RNG$+"~~~~~~~~" ELSE RNG$=RNG$+INVNUM_END$
28290 RETURN 
28300 ! 
28310 GET_ACCT_RANGE:
28320 IF NUL(START_ACCTPD$) OR START_ACCTPD$="FIRST" THEN RNG$=RNG$+"  " ELSE RNG$=RNG$+START_ACCTPD$
28330 IF NUL(END_ACCTPD$) OR END_ACCTPD$="LAST" THEN RNG$=RNG$+"~~" ELSE RNG$=RNG$+END_ACCTPD$
28340 RETURN 
28350 ! 
30000 LOAD_FY:
30010 ! ONLY_OPEN$="Y" means only load open FY's, TF_MODULE$ can be set to second part of key for that system parameter record, ie A/P, A/R, I/C
30020 ONLY_OPEN$="N" ! SSP 200662
30030 CUR_FY$="",CUR_ACCTPD$=""; READ (Z[6],KEY=%C$+"A/R",DOM=*NEXT)SYS_PARMS$; CUR_FY$=SYS_PARMS$(7,4),CUR_ACCTPD$=SYS_PARMS$(11,2)
30032 IF NOT(NUL(START_FISCAL$)) THEN CUR_FY$=START_FISCAL$; START_FISCAL$=""
30034 IF NOT(NUL(END_FISCAL$)) THEN END_FY$=END_FISCAL$; END_FISCAL$=""
30036 START_FISCAL$="FIRST"+"/"; END_FISCAL$="LAST"+"/"
30040 DIM GL$(300); READ (Z[6],KEY=%C$+"G/L")GL$(1)
30050 DIM OSEC$(255); READ (Z[6],KEY="osec"+%X3_OP_ID$,DOM=*NEXT)OSEC$
30060 READ (Z[6],KEY=%C$+"G/LYE",DOM=*NEXT)
30070 K$=KEY(Z[6],END=LOAD_FY_DROP_BOX); READ (Z[6],KEY=K$)GLYE$
30080 IF LEN(K$)<8 OR K$(1,8)<>%C$+"G/LYE" THEN GOTO LOAD_FY_DROP_BOX
30090 IF ONLY_OPEN$="Y" AND POS(GLYE$(99,1)="CR")>0 THEN GOTO 30070
30100 ! IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND K$(9,4)<GL$(34,4) THEN GOTO 30070
30110 START_FISCAL$=START_FISCAL$+K$(9,4)+"/"; END_FISCAL$+=K$(9,4)+"/"
30120 GOTO 30070
30130 LOAD_FY_DROP_BOX:
30140 DROP_BOX LOAD START_FISCAL.CTL,START_FISCAL$
30145 DROP_BOX LOAD END_FISCAL.CTL,END_FISCAL$
30150 IF CUR_FY$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_FY$<GL$(34,4) THEN CUR_FY$=GL$(34,4),CUR_ACCTPD$=GL$(38,2)
30160 IF CUR_ACCTPD$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_ACCTPD$<GL$(38,2) THEN CUR_ACCTPD$=GL$(38,2)
30170 IF CUR_FY$<>"" THEN DROP_BOX WRITE START_FISCAL.CTL,CUR_FY$
30175 IF END_FY$<>"" THEN DROP_BOX WRITE END_FISCAL.CTL,END_FY$
30180 START_FISCAL$=CUR_FY$; END_FISCAL$=END_FY$
30190 ! IF CUR_FY$<>"" THEN FROM_FY$="Y",START_FISCAL$=CUR_FY$; GOSUB LOAD_ACCTPD
30195 GOSUB LOAD_ACCTPD
30200 LOAD_FY_END:RETURN 
30210 ! 
30220 LOAD_ACCTPD:
30230 ! FY$ should be set to a valid fiscal year
30240 FROM_FY$="Y"
30242 IF NOT(NUL(START_ACCTPD$)) THEN CUR_ACCTPD$=START_ACCTPD$; START_ACCTPD$=""
30244 IF NOT(NUL(END_ACCTPD$)) THEN END_PER$=END_ACCTPD$; END_ACCTPD$=""
30250 ! IF FROM_FY$="Y" THEN GOTO 30260
30255 START_ACCTPD$="FIRST"+"/"; END_ACCTPD$="LAST"+"/"
30260 READ (Z[6],KEY=%C$+"G/LYE"+SYS_PARMS$(7,4),DOM=LOAD_ACCTPD_END)GLYE$
30270 PDS=12; PDS=NUM(GLYE$(13,2),ERR=*NEXT) ! Number of periods in this FY
30280 FOR X=1 TO PDS
30285 START_ACCTPD$+=STR(X:"00")+"/",END_ACCTPD$+=STR(X:"00")+"/" ! SSP 200662
30290 ! X$=STR(X:"00"),FLAG$="NO"; CALL "ARGDTE",%X3$,%X4$,START_FISCAL$+X$,FLAG$; IF FLAG$<>"*" THEN START_ACCTPD$+=X$+"/"; END_ACCTPD$+=X$+"/" ! Checks osec, only load valid periods
30300 NEXT X
30310 DROP_BOX LOAD START_ACCTPD.CTL,START_ACCTPD$
30315 DROP_BOX LOAD END_ACCTPD.CTL,END_ACCTPD$
30320 IF FROM_FY$="Y" THEN DROP_BOX WRITE START_ACCTPD.CTL,CUR_ACCTPD$; DROP_BOX WRITE END_ACCTPD.CTL,END_PER$
30330 START_ACCTPD$=CUR_ACCTPD$; END_ACCTPD$=END_PER$
30340 ! GOSUB LOAD_ENDING_DATE
30350 LOAD_ACCTPD_END:RETURN 
30360 ! 
40000 SEL_QRY:ENTER PRIME_KEY$
40010 IF NUL(MID(PRIME_KEY$,7,6)) THEN EXIT 123
40020 EXIT 
45000 ! 
45005 REPORT_PRINT_MODE:
45010 GOSUB GET_PROG; RPT_PGM$=K9$ ! Report Print Program Name
45015 RPT_SPLIT$="" ! Separate File Option
45020 DIM RPT_OPTIONS$[10,20]
45030 ! Set variable names X3$,X4$,T1$,PRT$,RNG$,ZZS$ if required
45070 IF NOT(NUL(RB_PRT$)) AND RB_PRT$>"0" THEN RPT_SPLIT$="Y"
45075 GOSUB SCHD_DATE_VARS
45080 PERFORM "ZGXOPO;PROCESS_PRINT_MODE"
45090 RETURN 
45099 ! 
46000 SCHD_DATE_VARS:
46010 RPT_OPTIONS_COUNT=4 ! Maximum 9 allowed
46015 RPT_OPTIONS$[1,0]=MSG("START_F_Y") ! Starting Fiscal Year
46020 RPT_OPTIONS$[1,1]="4"
46025 RPT_OPTIONS$[1,2]="1"
46030 RPT_OPTIONS$[1,3]="RNG"
46032 RPT_OPTIONS$[1,4]="AR"
46035 RPT_OPTIONS$[2,0]=MSG("END_F_Y") ! Ending Fiscal Year
46040 RPT_OPTIONS$[2,1]="4"
46045 RPT_OPTIONS$[2,2]="5"
46050 RPT_OPTIONS$[2,3]="RNG"
46052 RPT_OPTIONS$[2,4]="AR"
46055 RPT_OPTIONS$[3,0]=MSG("STAR_A_P") ! Starting Accounting Period
46060 RPT_OPTIONS$[3,1]="2"
46065 RPT_OPTIONS$[3,2]="9"
46070 RPT_OPTIONS$[3,3]="RNG"
46072 RPT_OPTIONS$[3,4]="AR"
46075 RPT_OPTIONS$[4,0]=MSG("END_A_P") ! Ending Accounting Period
46080 RPT_OPTIONS$[4,1]="2"
46085 RPT_OPTIONS$[4,2]="11"
46090 RPT_OPTIONS$[4,3]="RNG"
46092 RPT_OPTIONS$[4,4]="AR"
46095 RETURN 
46099 ! 
56000 ! "200662-Finders Fee report - The DropDown for the accounting period 
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56004 REM "240570-GUI Printing - Support for queueing and scheduling reports. 
