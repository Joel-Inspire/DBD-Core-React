0010 REM "FMGFN1 - Layered customer maintenance
0035 REM "5.7 - 11/26/24 - 11.711981 - jvv - SSP# 307512
0037 REM "307512-DBD-515 Utility to set up Parent Child Customer accounnt and
0040 REM "Copyright 2024 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! 
0070 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "FMGFN1","../FMG/FM.EN"
0080 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 X0=-1
0160 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2; IF X1>0 THEN CMD_STR$="END"; EXIT 
0190 DIM Z[NUM(X3$(60,3))]
0200 ! Files
0210 Z$="01O FN1...  02O AR1...  03O FM1...  04S FM1...  05O ECR...  06O FTL...  07S FTL... 13O ZZPARM  "
0220 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
0300 ! IOList Section
0320 IOL_AR1:IOLIST AR1$
0330 IOL_FM1:IOLIST FM1$
0340 IOL_FN1:IOLIST FFN1$
0400 ! 
0410 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
0420 CTAB$=DIM(2)
0460 LOG_OPTIONS$="A",LOG_FILE$="FMGFN1."+FID(0)+".log"; CALL "ZZ2LOG;OPEN_LOG",ERR=*NEXT,X3$,X4$,LOG_FILE$,LOG_OPTIONS$,%LOG_CHANNEL
0470 IF NOT(%LOG_CHANNEL) THEN %LOG_CHANNEL=FN%FFN(LOG_FILE$) ! In case the file was already open in a previous call (to handle second printing scenario)
0490 RETURN 
0499 ! 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0530 ! GOSUB CLEAR_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0950 CALL "ZZ2LOG;CLOSE_LOG",ERR=*NEXT,X3$,X4$,%LOG_CHANNEL
0970 RETURN 
0999 ! 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1001 FIND_CUSTOMER:
1003 IF STP(SOURCE_CUSTOMER$,3)="" THEN RETURN 
1005 CALL "ZZWLKU;Parse_cust",SOURCE_CUSTOMER$,SRC_CUST_DIV$,SRC_CUST_CODE$
1010 FIND (Z[2],KEY=SRC_CUST_DIV$+SRC_CUST_CODE$,DOM=*RETURN)SRC_AR1$
1015 CUST_NAME$=MID(SRC_AR1$,11,35)
1018 CALL "FMGFN1;CHECK_FOR_CHILD",X3$,X4$,SRC_CUST_DIV$+SRC_CUST_CODE$,"CC",SRCC_FOUND; CC=0; IF SRCC_FOUND=1 THEN MSGBOX ("This customer already exists as a child for parent "); ANS$="NO"; GOTO 1035
1020 CALL "FMGFN1;CHECK_FOR_PARENT",X3$,X4$,SRC_CUST_DIV$+SRC_CUST_CODE$,SRC_FOUND
1025 IF SRC_FOUND=1 THEN GOTO PROCEED
1030 MSGBOX MSG("FMGFN1_00"),MSG("VERIFY"),"?,YESNO",ANS$
1035 IF ANS$="NO" THEN SOURCE_CUSTOMER$=""; NEXT_ID=SOURCE_CUSTOMER.CTL; REFRESH_FLG=1; EXIT 
1038 PROCEED:
1040 GOSUB LOAD_FILTERS
1042 REFRESH_FLG=1
1045 NEXT_ID=SUB_CUST.CTL
1050 RETURN 
1059 ! 
1060 FIND_SUB_CUST:
1065 IF STP(SUB_CUST$,3)="" THEN RETURN 
1070 CALL "ZZWLKU;Parse_cust",SUB_CUST$,SUB_CUST_DIV$,SUB_CUST_CODE$
1072 FIND (Z[2],KEY=SUB_CUST_DIV$+SUB_CUST_CODE$,DOM=*RETURN)SUB_AR1$
1074 SUB_CUST_NAME$=MID(SUB_AR1$,11,35); REFRESH_FLG=1
1075 CALL "FMGFN1;CHECK_FOR_PARENT",X3$,X4$,SUB_CUST_DIV$+SUB_CUST_CODE$,SRC_FOUND; IF SRC_FOUND THEN MSGBOX ("The Sub customer already exists as a Parent customer"); GOTO ADD_SUB_CLEAR
1076 SUBCUST_KEY$=SRC_CUST_DIV$+SRC_CUST_CODE$+SUB_CUST_DIV$+SUB_CUST_CODE$
1080 FIND (Z[1],KEY=SUBCUST_KEY$,DOM=*NEXT)
1170 REFRESH_FLG=1
1180 RETURN 
1199 ! 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1500 ! Add new Sub Customer for a parent customer
1510 ADD_SUB_CUSTOMER:
1515 MSGBOX MSG("ADD_RECORD"),MSG("VERIFY"),"?,YESNO",ANS$
1520 IF ANS$="NO" THEN GOTO ADD_SUB_CLEAR
1530 DIM NEWFN1$(280)
1540 NEWFN1$(1,10)=SRC_CUST_DIV$+SRC_CUST_CODE$
1545 NEWFN1$(11,10)=SUB_CUST_DIV$+SUB_CUST_CODE$
1550 NEWFN1$(21,1)=ALLOW_FM1_OVERRIDE$
1555 NEWFN1$(22,1)=CREATE_ECR$
1560 NEWFN1$(23,1)=ECR_OVERRIDE$
1562 NEWFN1$(24,1)=CREATE_UDF$
1565 WRITE (Z[1],KEY=NEWFN1$(1,20))NEWFN1$
1568 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,%LOG_CHANNEL,"PARENT|"+NEWFN1$(1,10)+"|SUB|"+NEWFN1$(11,10)+"|HAS BEEN ADDED|",%LOG_INFO
1570 GOSUB LOAD_FILTERS
1575 ADD_SUB_CLEAR:
1578 SUB_CUST$=""; SUB_CUST_NAME$="" ! CALL "*wingrp;Disable",SUBCUST.GRP$
1580 NEXT_ID=SOURCE_CUSTOMER.CTL; REFRESH_FLG=1
1585 RETURN 
1599 ! 
1600 ! 1600 - Delete
1610 DELETE_REC:
1690 CHANGE_FLG=0
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 SOURCE_CUSTOMER$="",CUST_NAME$="",SUB_CUST$="",SUB_CUST_NAME$=""
1825 CALL "*wingrp;Disable",SUBCUST.GRP$
1830 GRID LOAD FILTER_GRID.CTL,0,0,""; FILT_CNT=0
1850 REFRESH_FLG=1
1860 RETURN 
1899 ! 
2000 LOAD_FILTERS:
2001 ! POPULATE GRID WITH NEW/ALL SUB CUSTOMERS
2002 CUSTOMER$=SRC_CUST_DIV$+SRC_CUST_CODE$
2005 GRID LOAD FILTER_GRID.CTL,0,0,""; FILT_CNT=0
2007 IF FCHAN THEN CLOSE (FCHAN); FCHAN=0
2010 READ (Z[1],KEY=PAD(CUSTOMER$,10),DOM=*NEXT)
2020 NEXT_FILTER:
2030 READ (Z[1],END=END_LOAD_FILTERS)IOL=IOL_FN1
2040 IF MID(FFN1$,1,10)<>PAD(CUSTOMER$,10) THEN GOTO END_LOAD_FILTERS
2095 LOAD_GRID_LINE:
2096 GOSUB SET_READONLY; FIND (Z[2],KEY=FFN1$(11,10),DOM=*NEXT)FILTER_REC$ ! SSP#253613
2097 FILTER_DESC$=MID(FILTER_REC$,11,35)
2098 GOSUB CLEAR_READONLY ! SSP#253613
2200 GRID LOAD FILTER_GRID.CTL,1,0,SEP+MID(FFN1$,11,10)+SEP+CTAB$+FN%ZZDISP$(MID(FFN1$,11,10),"A/R")+SEP+CTAB$+FILTER_DESC$+SEP; ++FILT_CNT
2210 GOTO NEXT_FILTER
2220 END_LOAD_FILTERS:
2230 IF NOT(FILT_CNT) THEN GRID LOAD FILTER_GRID.CTL,1,0,SEP
2235 GRID LOCK FILTER_GRID.CTL,0,0; IF FILT_CNT THEN GRID UNLOCK FILTER_GRID.CTL,1,0
2240 REFRESH_FLG=1
2250 RETURN 
2299 ! 
4000 ! Delete selected filters
4010 DELETE_FILTERS:
4012 MSGBOX MSG("FMGFN1_11"),MSG("CONFIRM"),"YESNO,2",ANS$
4014 IF ANS$<>"YES" THEN GOTO END_DELETE_FILTERS
4020 IF NOT(FN%ISOPEN(FCHAN)) THEN GOTO END_DELETE_FILTERS
4030 READ (FCHAN,KEY="",DOM=*NEXT)
4040 DKEY$=KEY(FCHAN,END=END_DELETE_FILTERS); READ (FCHAN,KEY=DKEY$)C_FILTER$
4050 REMOVE (Z[1],KEY=PAD(CUSTOMER$,10)+PAD(STP(C_FILTER$,2),10),ERR=*NEXT)
4060 GOTO 4040
4105 END_DELETE_FILTERS:
4110 GOSUB LOAD_FILTERS
4195 RETURN 
4199 ! 
4200 PROCESS_SELECTED_CUSTOMERS:! Process selected SUB CUSTOMERS
4215 SEL_CNT=0
4220 FOR XX=1 TO FILT_CNT
4225 FILTER_GRID.CTL'ROW=XX
4230 READ DATA FROM FILTER_GRID.CTL'ROWDATA$ TO IOL=FILTER_GRID.CTL'LOADIOLIST$
4232 ! IF C_PROC$="1" THEN IF EML_STAT$<>"2" THEN GOTO 4240 ! SSP 304343
4235 IF C_DELETE$="1" THEN SEL_CNT=SEL_CNT+1 ! SSP 304343
4240 NEXT XX
4250 IF SEL_CNT=0 THEN MSGBOX ("No sub customers selected to process"),MSG("WARNING"),"OK",X$; GOSUB CLEAR_REC; GRID LOAD FILTER_GRID.CTL,1,0,SEP; RETURN ! SSP 304343
4258 OK_TO_PROCESS:
4260 MSGBOX MSG("Continue to copy/create Items?"),MSG("CONFIRM"),"YESNO,2",ANS$
4270 IF ANS$<>"YES" THEN GOSUB LOAD_FILTERS; REFRESH_FLG=1; RETURN 
4275 CALL "FMGFN1;MAIN_PROCESS_CUST",X3$,X4$,CUSTOMER$,FCHAN,"ALL",PROGRESS1.CTL,1 ! 239169
4280 END_SELECTED_CUSTOMERS:
4285 GOSUB LOAD_FILTERS; REFRESH_FLG=1 ! 232963
4290 MSGBOX MSG("Select customers have been processed"),MSG("FYI"),"!" ! 232963
4292 GOSUB CLEAR_REC; GRID LOAD FILTER_GRID.CTL,1,0,SEP; RETURN ! SSP 304343
4295 RETURN 
4299 ! 
4300 SET_READONLY:! SSP#253613   
4310 SET_PARAM 'XI'
4320 SET_READONLY_END:RETURN 
4330 CLEAR_READONLY:! SSP#253613             
4340 SET_PARAM -'XI'
4350 CLEAR_READONLY_END:RETURN 
4399 ! 
5000 REM "Event handler - OnSelect
5005 SELECT_FILTER:
5010 READ DATA FROM FILTER_GRID.CTL'ROWDATA$ TO IOL=FILTER_GRID.CTL'LOADIOLIST$
5015 IF NOT(FN%ISOPEN(FCHAN)) THEN FCHAN=HFN; OPEN (FCHAN)"*MEMORY*"
5020 IF C_DELETE$="1" THEN {
5030 WRITE (FCHAN,KEY=PAD(C_FILTER$,10),ERR=*NEXT)C_FILTER$
5040  } ELSE {
5050 REMOVE (FCHAN,KEY=PAD(C_FILTER$,10),ERR=*NEXT)
5060  }
5095 RETURN 
5099 ! 
6000 SELECT_ALL:
6010 FOR XX=1 TO FILT_CNT
6020 GRID WRITE FILTER_GRID.CTL,1,XX,"1"
6050 FILTER_GRID.CTL'ROW=XX
6060 GOSUB SELECT_FILTER
6070 NEXT XX
6090 RETURN 
6099 ! 
6100 DESELECT_ALL:
6110 FOR XX=1 TO FILT_CNT
6120 GRID WRITE FILTER_GRID.CTL,1,XX,""
6150 FILTER_GRID.CTL'ROW=XX
6160 GOSUB SELECT_FILTER
6170 NEXT XX
6190 RETURN 
6199 ! 
8099 ! 
9999 END 
10000 MAIN_PROCESS_CUST:! Main process from Gui Panel
10010 ENTER X3$,X4$,PCUSTOMER$,FCHAN,FITEM$,(PROG1),(PROG2)
10020 GOSUB INIT
10030 MCUST$=PCUSTOMER$
10040 REM "
10045 SAVE_PERCENT_GUI=%GUI; %GUI=1
10050 ! IF %DRGQRF_NO_PROG_DISP$="Y" THEN PROG1=0,PROG2=0 ! 232963
10100 READ (FCHAN,KEY="",DOM=*NEXT)
10105 NEXT_FCHAN:
10110 MK$=KEY(FCHAN,END=END_MAIN_PROCESS_CUST); READ (FCHAN,KEY=MK$)C_FILTER$
10120 SCUST$=C_FILTER$
10130 GOSUB PROCESS_PARENT_CHILD
10140 GOTO NEXT_FCHAN
10190 END_MAIN_PROCESS_CUST:
10195 EXIT 
10199 ! 
10200 ! ******************************************************************
10500 CHECK_FOR_PARENT:
10510 ENTER X3$,X4$,SRCE_CUSTOMER$,SRC_FOUND
10512 ! F UID="jvv" THEN ESCAPE 
10515 SRC_FOUND=0
10520 _PFN1=HFN; OPEN (_PFN1,ERR=END_CHECK_FOR_PARENT)"FN1"+%C$ ! _PFN1=LFO
10530 READ (_PFN1,KEY=SRCE_CUSTOMER$,ERR=*NEXT)
10540 PKEY$=KEY(_PFN1,END=END_CHECK_FOR_PARENT); READ (_PFN1,KEY=PKEY$)*
10550 IF PKEY$(1,10)=SRCE_CUSTOMER$ THEN SRC_FOUND=1
10560 END_CHECK_FOR_PARENT:
10565 CLOSE (_PFN1)
10570 EXIT 
10599 ! 
10600 CHECK_FOR_CHILD:
10610 ENTER X3$,X4$,ICUSTOMER$,IFROM$,SRCC_FOUND
10615 SRCC_FOUND=0
10620 _PFN1=HFN; OPEN (HFN,ERR=END_CHECK_FOR_CHILD)"FN1"+%C$ ! _PFN1=LFO
10630 READ (_PFN1,KEY=ICUSTOMER$,KNO=1,ERR=*NEXT)
10640 PKEY$=KEY(_PFN1,KNO=1,END=END_CHECK_FOR_CHILD); READ (_PFN1,KEY=PKEY$)*
10650 IF PKEY$(1,10)=ICUSTOMER$ THEN GOTO *NEXT ELSE GOTO END_CHECK_FOR_CHILD
10652 IF IFROM$="CC" THEN IFROM$=PKEY$(11,10); SRCC_FOUND=1
10655 IF IFROM$=PKEY$(11,10) THEN SRCC_FOUND=1
10660 END_CHECK_FOR_CHILD:
10665 CLOSE (_PFN1)
10670 EXIT 
10699 ! 
11000 PROCESS_PARENT_CHILD:
11060 RFN1_KEY$=MCUST$+SCUST$
11100 FIND (Z[1],KEY=RFN1_KEY$,DOM=PROCESS_PARENT_CHILD_EXIT)RFN1$ ! GET OPTIONS FOR FM1 AND ECR
11120 IF MID(RFN1$,21,1)<>"Y" THEN GOTO PROCESS_PARENT_CHILD_EXIT ! Ignore changes for items for this sub customer
11210 GOSUB CREATE_CHILD_ITEMS
11300 PROCESS_PARENT_CHILD_EXIT:
11500 RETURN 
11599 ! 
12000 CREATE_CHILD_ITEMS:
12010 ! Read through FM1 for selected master record items, and create/modify sub customer items
12020 READ (Z[3],KEY=MCUST$,DOM=*NEXT)
12022 NEXT_ITEM:
12025 FM1K$=KEY(Z[3],END=END_CREATE_ITEMS); READ RECORD (Z[3],KEY=FM1K$)FM1_PARENT$
12030 IF MID(FM1K$,1,10)<>MCUST$ THEN GOTO END_CREATE_ITEMS
12032 IF FITEM$="ALL" THEN GOTO *NEXT ELSE IF FM1K$(11,10)<>FITEM$ THEN GOTO NEXT_ITEM
12035 FM1SUB_KEY$=FM1K$,FM1SUB_KEY$(1,10)=SCUST$
12040 FIND RECORD (Z[4],KEY=FM1SUB_KEY$,DOM=*NEXT)FM1_SUB$
12050 FM1_SUB$=FM1_PARENT$,FM1_SUB$(1,LEN(FM1K$))=FM1SUB_KEY$
12090 WRITE_FM1_CHILD:
12100 FM1_SUB$(185,10)=MCUST$
12110 WRITE RECORD (Z[4],KEY=FM1SUB_KEY$)FM1_SUB$
12120 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,%LOG_CHANNEL,"CHILD ITEM |"+FM1SUB_KEY$+"|PARENT|"+MCUST$+"|HAS BEEN ADDED|",%LOG_INFO
12300 CREATE_ECR:
12310 IF UID="jvv" THEN ESCAPE 
12320 IF MID(RFN1$,22,1)="Y" THEN GOTO *NEXT ELSE GOTO CHECK_UDF
12330 FIND RECORD (Z[5],KEY=FM1K$,DOM=CHECK_UDF)ECR$
12340 FIND RECORD (Z[5],KEY=FM1SUB_KEY$,DOM=*NEXT)ECR2$
12350 ECR2$=ECR$,ECR2$(1,LEN(FM1SUB_KEY$))=FM1SUB_KEY$
12360 WRITE RECORD (Z[5],KEY=FM1SUB_KEY$)ECR2$
12365 CALL "ZZ2LOG;LOG_MSG",ERR=*NEXT,X3$,X4$,%LOG_CHANNEL,"CHILD ECR |"+FM1SUB_KEY$+"|PARENT|"+MCUST$+"|HAS BEEN ADDED|",%LOG_INFO
12366 CHECK_UDF:
12368 IF MID(RFN1$,24,1)="Y" THEN GOSUB CREATE_UDF
12370 GOTO NEXT_ITEM
12380 END_CREATE_ITEMS:
12390 RETURN 
12399 ! 
13000 CREATE_UDF:
13010 READ (Z[6],KEY=MCUST$,DOM=*NEXT)
13015 NEXT_ITEM_UDF:
13020 FTLK$=KEY(Z[6],END=END_CREATE_UDF); READ RECORD (Z[6],KEY=FTLK$)FTL_PARENT$
13025 IF MID(FTLK$,1,10)<>MCUST$ THEN GOTO END_CREATE_UDF
13030 IF FITEM$="ALL" THEN GOTO *NEXT ELSE IF FTLK$(11,10)<>FITEM$ THEN GOTO NEXT_ITEM_UDF
13040 FTLSUB_KEY$=FTLK$,FTLSUB_KEY$(1,10)=SCUST$
13050 FTL_SUB$=FTL_PARENT$,FTL_SUB$(1,LEN(FTLK$))=FTLSUB_KEY$
13060 WRITE RECORD (Z[7],KEY=FTLSUB_KEY$)FTL_SUB$
13070 GOTO NEXT_ITEM_UDF
13080 END_CREATE_UDF:
13090 RETURN 
13099 ! 
13180 ! 
13205 ! 
13210 INIT_ALL:
13215 CALL "ZZINFO",Z[1],T9,X3$,T,T0,K,B,D,S0,S1,F$
13220 T0=INT(T*.02); IF T0<=1 THEN T0=2
13225 RETURN 
13230 ! 
13235 UPDATE_PROG_ALL:
13240 ! IF PROG1 THEN CALL "ZZBARG",X3$,"HG",PROG1,10,50,T1,T,C
13242 IF PROG1 THEN IF C<>T THEN PROG1'VALUE$="Processing files: "+STR(C)+" of "+STR(T) ELSE PROG1'VALUE$="Processing files: "+STR(C)+" files done!"
13245 RETURN 
13250 ! 
13300 ! 
13999 ! 
14000 ALL_PARENT_ROUTINE:
14010 ENTER X3$,X4$
14020 GOSUB INIT
14030 FITEM$="ALL"
14050 READ (Z[1],KEY="",DOM=*NEXT)
14055 NEXT_FN1:
14060 FK$=KEY(Z[1],END=EXIT_ALL_PARENT_ROUTINE); READ (Z[1],KEY=FK$)*
14100 MCUST$=FK$(1,10),SCUST$=FK$(11,10)
14110 GOSUB PROCESS_PARENT_CHILD
14150 GOTO NEXT_FN1
14180 EXIT_ALL_PARENT_ROUTINE:
14190 GOSUB WRAPUP
14195 EXIT 
14199 ! 
14300 UPDATE_ITEM_ROUTINE:
14310 ! This routine is called when a specific parent item is added/modified. All subcustomers will be updated for the specific item code
14320 ENTER X3$,X4$,MAINCUST$,SUBCUST$,FITEM$,XX,XY ! 239169
14325 GOSUB INIT
14340 READ (Z[1],KEY=MAINCUST$+"",DOM=*NEXT)
14345 NEXT_FN1_FOR_ITEM:
14350 IK$=KEY(Z[1],END=END_UPDATE_ITEM_ROUTINE); READ (Z[1],KEY=IK$)*
14360 IF IK$(1,10)<>MAINCUST$ THEN GOTO END_UPDATE_ITEM_ROUTINE
14370 MCUST$=IK$(1,10),SCUST$=IK$(11,10)
14380 GOSUB PROCESS_PARENT_CHILD
14390 GOTO NEXT_FN1_FOR_ITEM
14400 END_UPDATE_ITEM_ROUTINE:
14410 GOSUB WRAPUP
14440 EXIT 
14490 ! 
56000 REM "307512-DBD-515 Utility to set up Parent Child Customer accounnt and
56001 ! 
