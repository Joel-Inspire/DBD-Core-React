0010 ! FMGIAZ - Customer Setup & Inquiry
0035 REM "5.7 - 07/16/20 - 10.066111 - crg - DBSPT-95443
0037 REM "DBSPT-95443-User Defined Specs panel pops up in continuous loop
0040 REM "Copyright 2020 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 IF TCB(13)=1 THEN BEGIN 
0055 _CUSTOMER$=%CUSTOMER$
0060 PROCESS "FMGIAZ","../FMG/FM.EN"
0065 %CUSTOMER$=_CUSTOMER$
0070 ! IF TCB(13)=1 THEN RUN "ZMENU"
0075 EXIT 
0095 ! 
0100 INIT:! ^100,5 - Initialization routine
0200 ! ^100,5 - Constants & functions
0205 DIM Q$[1:11],P$[1:11]
0210 DEF FNE$(Z9$)=MID(Z9$,3,2)+"/"+MID(Z9$,5,2)+"/"+STR((ASC(MID(Z9$,1,1))-65)*10+1900+NUM(MID(Z9$,2,1))-1570*POS("  "=MID(Z9$,1,2)):"####")
0300 ! ^100,5 - Iolists and templates
0305 GLOBAL_IOL:IOLIST %CUST_NAME$,%ITEM_DESC$,%CUSTOMER$,%ITEM_CODE$,%COPY_CUSTOMER$,%COPY_ITEM_CODE$,%COPY$,%RETRY$
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20],C[21],C[22],C[23],C[24],C[25],C[26],C[27],C[28],C[29],C[30],C[31]
0340 IOLIST FMP$
0500 ! 500,5 - Open files
0503 GOSUB SETUP_MESSAGES
0504 DIM Z[12]
0505 _FILE_NAME$="FM1"+%C$; _FM1=HFN; OPEN (_FM1,ERR=OPEN_ERR,IOL=*)_FILE_NAME$ ! Customer master
0520 _FILE_NAME$="ZZPARM"; ZZPARM=HFN; OPEN (ZZPARM,ERR=OPEN_ERR)_FILE_NAME$
0525 _FILE_NAME$="FMP"+%C$,_FMP=HFN; OPEN (_FMP,ERR=OPEN_ERR)_FILE_NAME$
0530 _FILE_NAME$="FM2"+%C$,_FM2=HFN; OPEN (_FM2,ERR=OPEN_ERR)_FILE_NAME$
0540 _FILE_NAME$="FMS"+%C$,Z[8]=HFN; OPEN (Z[8],ERR=OPEN_ERR)_FILE_NAME$
0545 _FILE_NAME$="FMU"+%C$,Z[9]=HFN; OPEN (Z[9],ERR=OPEN_ERR)_FILE_NAME$
0550 _FILE_NAME$="FMV"+%C$,Z[10]=HFN; OPEN (Z[10],ERR=OPEN_ERR)_FILE_NAME$
0555 _FILE_NAME$="FSF"+%C$,Z[11]=HFN; OPEN (Z[11],ERR=OPEN_ERR)_FILE_NAME$
0560 _FILE_NAME$="ZZO"+%C$,Z[12]=HFN; OPEN (Z[12],ERR=OPEN_ERR)_FILE_NAME$
0565 GOTO CONTINUE
0570 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0575 CMD_STR$="E"
0580 EXIT 
0585 ! 
0590 CONTINUE:
0595 ! 
0600 ! ^100,5 - Get parameters
0605 IF X1>1 THEN CMD_STR$="E"; EXIT 
0610 READ (ZZPARM,KEY=%C$+"A/R",DOM=*NEXT)P0$; GOTO 0620
0615 CMD_STR$="E"; EXIT 
0620 READ (ZZPARM,KEY=%C$+"F/M",DOM=*NEXT)P1$
0625 SEC$=""; READ (ZZPARM,KEY="osec"+%X3_OP_ID$,DOM=*NEXT)SEC$
0630 TM_PARMS$=""; CALL "RTGPRM",ERR=*NEXT,TM_PARMS$
0640 RETURN 
0645 ! 
0700 POST_DISPLAY:! ^100,5 - Do stuff after the panel is created
0710 IF %CUSTOMER$<>"" THEN {
0715 CUSTOMER$=%CUSTOMER$,NO_CLEAR=1
0716 DISABLE CONTROL CUSTOMER.CTL; DISABLE CONTROL BT_QRY.CTL
0720 GOSUB PROCESS_CUSTOMER
0725  }
0730 IF %ITEM_CODE$<>"" THEN {
0735 ITEM_CODE$=%ITEM_CODE$,_KEY$=CUSTOMER$+ITEM_CODE$
0736 DISABLE CONTROL ITEM_CODE.CTL
0740 CUSTOMER$=MID(_KEY$,1,10),ITEM_CODE$=MID(_KEY$,11,10); GOSUB PROCESS_CUSTOMER; GOSUB PROCESS_ITEM
0745  }
0760 ! PROCESS "GGNOTE.5","../ZZG/ZZ.EN"
0780 GOSUB BUILD_OPTIONS
0785 NO_MORE=1
0790 RETURN 
0795 ! 
1000 PROCESS_CUSTOMER:! ^1000,5 - Get customer code and associated fields
1005 IF STP(CUSTOMER$,3)="" THEN RETURN 
1010 CALL "ZZWLKU;Parse_cust",CUSTOMER$,CUST_DIV$,CUST_CODE$
1015 CUSTOMER$=CUST_DIV$+CUST_CODE$
1020 REFRESH_FLG=1,%CUSTOMER$=CUSTOMER$
1025 RETURN 
1030 ! 
1100 PROCESS_ITEM:
1103 IF STP(ITEM_CODE$,3)="" THEN GOTO *RETURN
1105 ITEM_CODE$=PAD(ITEM_CODE$,10),_KEY$=CUST_DIV$+CUST_CODE$+ITEM_CODE$
1110 READ (_FM1,KEY=_KEY$,DOM=NEW_ITEM,ERR=CHECK_ERR)
1115 CALL "*wingrp;enable",GRID.GRP$
1120 NEXT_ID=OPTION.CTL
1125 DIM FMP$(50); READ (_FMP,KEY="T"+PROD_CODE$,DOM=*NEXT)IOL=0340
1127 SPEC_FLG=0; IF NOT(NUL(FMP$(33,3))) THEN SPEC_FLG=1
1130 LIST_BOX WRITE OPTION.CTL,1,ERR=*NEXT
1140 REFRESH_FLG=1,%ITEM_CODE$=ITEM_CODE$,VENDOR$=VEND_DIV$+VEND_CODE$,%VENDOR$=VENDOR$
1150 IF ACTIVE_STATUS$="I" THEN STATUS$="* Inactive *"; MSGBOX "This item has been set to INACTIVE status for removal!","NOTE","" ELSE STATUS$=""
1160 READ (Z[12],KEY="003"+CUST_DIV$+CUST_CODE$+ITEM_CODE$,DOM=*NEXT)
1165 KEY_12$=KEY(Z[12],END=*NEXT); IF MID(KEY_12$,1,23)="003"+CUST_DIV$+CUST_CODE$+ITEM_CODE$ THEN PROCESS "GGNOTE.5","../ZZG/ZZ.EN"
1190 PROCESS_ITEM_END:RETURN 
1195 ! 
1200 NEW_ITEM:
1205 IF STP(CUSTOMER$,3)="" THEN MSGBOX "Customer code may not be blank.","Attention","!"; NEXT_ID=CUSTOMER.CTL; EXIT 
1206 IF STP(ITEM_CODE$,3)="" THEN MSGBOX "Item code may not be blank.","Attention","!"; NEXT_ID=ITEM_CODE.CTL; EXIT 
1210 IF MID(P1$,246,1)="Y" THEN USED$="",CIC_ITEM$="",TF_ITEM$=""; CALL "FSGDAK",X3$,X4$,2,_KEY$,USED$,CIC_ITEM$,TF_ITEM$; IF USED$="Y" THEN MSGBOX STP(TF_ITEM$,1)+" is using "+STP(CIC_ITEM$,1)+" as it's CIC,"+SEP+"you may not add this item code.","","!"; NEXT_ID=ITEM_CODE.CTL,REFRESH_FLG=1; LIST_BOX WRITE OPTION.CTL,0; EXIT 
1215 %ITEM_CODE$=ITEM_CODE$
1230 %COPY$="N",%RETRY$="N",%COPY_CUSTOMER$="",%COPY_ITEM_CODE$=""; PROCESS "FMGIAZ.C","../FMG/FM.EN"
1232 IF %COPY$="CONTINUE" THEN %SRC_CUST_DIV$=CUST_DIV$,%SRC_CUST_CODE$=CUST_CODE$ ! SSP#208991   
1235 IF %RETRY$="Y" THEN GOTO 1230
1240 IF %COPY$<>"Y" THEN GOTO 1280
1245 GOSUB COPY_FROM_OTHER_ITEM
1280 IF %COPY$<>"CANCEL" THEN CALL "*WINGRP;ENABLE",GRID.GRP$; OPT=1; IF NO_MORE=0 THEN DIM Q$[1:11],P$[1:11]; GOSUB BUILD_OPTIONS; NO_MORE=1 END_IF ; GOTO PROCESS_OPT ! Run setup program
1282 IF %COPY$="CANCEL" THEN IF STP(%ORDER_NUM$)<>"" THEN CMD_STR$="E" ELSE NEXT_ID=ITEM_CODE.CTL,ITEM_CODE$="",REFRESH_FLG=1; GOTO *RETURN ! CMD_STR$="E" SSP227843 jdf
1285 NEXT_ID=ITEM_CODE.CTL; EXIT 
1290 NEW_ITEM_END:RETURN 
1295 ! 
1300 COPY_CUSTOMER_ENTRY:
1310 CALL "ZZWLKU;Parse_cust",COPY_CUSTOMER$,COPY_CUST_DIV$,COPY_CUST_CODE$
1315 %CUST_DIV$=COPY_CUST_DIV$,%CUST_CODE$=COPY_CUST_CODE$
1320 REFRESH_FLG=1,%COPY_CUSTOMER$=COPY_CUSTOMER$
1340 COPY_CUSTOMER_ENTRY_END:RETURN 
1345 ! 
1350 COPY_ITEM_CODE_ENTRY:
1360 REFRESH_FLG=1,%COPY_ITEM_CODE$=COPY_ITEM_CODE$
1390 COPY_ITEM_CODE_ENTRY_END:RETURN 
1395 ! 
1400 COPY:
1410 IF STP(%COPY_CUSTOMER$,3)="" OR STP(%COPY_ITEM_CODE$,3)="" THEN MSGBOX "Customer or item code are blank."+SEP+"Do you wish to retry?",MSG("CONFIRM"),"?,YESNO",ANSWER$; %COPY_CUSTOMER$="",%COPY_ITEM_CODE$="",%COPY$="N"; IF ANSWER$="YES" THEN %RETRY$="Y"; GOTO COPY_END ELSE %RETRY$="N"; GOTO COPY_END
1430 %COPY$="Y"
1440 COPY_END:RETURN 
1445 ! 
1600 ! 1600 - Delete
1605 DELETE_REC:
1610 IF MID(SEC$,71,1)="Y" THEN MSGBOX "You may not delete a custom item.","Access Denied!",""; RETURN 
1615 IF ACTIVE_STATUS$="I" THEN MSGBOX "Verify you wish to Reactivate this custom item.","Confirm","?,YESNO",ANSWER$; IF ANSWER$<>"YES" THEN GOTO DELETE_REC_END ELSE ACTIVE_STATUS$="A",STATUS$="",REFRESH_FLG=1; WRITE (_FM1,KEY=_KEY$); IF TM_PARMS$<>"" THEN CUST$=_KEY$(1,10); CALL "RTGWOC",ERR=DELETE_REC_END,CUST$,"FM1...","U",_KEY$ END_IF ; GOTO DELETE_REC_END
1620 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1625 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1630 IF _X$<>"YES" THEN GOTO DELETE_REC_END
1635 A4$="",A5$="A/R",A6$=_KEY$,A7$="M"; CALL "FMGUAB",X3$,X4$,A5$,A6$,A4$,A7$
1640 IF A4$="Y" THEN MSGBOX "Record deleted!","Attention","!,TIM=2"; GOTO PROCESS_CLEAR
1645 MSGBOX "Activity detected. (Open Orders) - Record set to inactive for later removal.","Attention","!"; ACTIVE_STATUS$="I",STATUS$="*INACTIVE*",REFRESH_FLG=1; WRITE (_FM1,KEY=_KEY$); IF TM_PARMS$<>"" THEN CUST$=_KEY$(1,10); CALL "RTGWOC",ERR=DELETE_REC_END,CUST$,"FM1...","U",_KEY$ END_IF ; GOTO DELETE_REC_END
1650 DELETE_REC_END:RETURN 
1655 ! 
1990 ! 
2000 BUILD_OPTIONS:! ^1000,5 - Get data to populate the list boxes
2001 IF NO_MORE THEN RETURN 
2005 ! LIST_BOX LOAD OPTION.CTL,""
2010 MAX_OPT=1
2015 Q$[MAX_OPT]="Custom Item Setup/Inquiry",P$[MAX_OPT]="FMGIAB",MAX_OPT+=1; GOSUB 2200
2017 ! Q$[MAX_OPT]="Just for testing sake",P$[MAX_OPT]="FMGIAR",MAX_OPT+=1; GOSUB 2200
2020 Q$[MAX_OPT]="Item Inventory",P$[MAX_OPT]="ICGMAZ",MAX_OPT+=1; GOSUB 2200
2025 Q$[MAX_OPT]="Custom Item Spec - Ply Section",P$[MAX_OPT]="FMGIAS",MAX_OPT+=1; GOSUB 2200
2030 Q$[MAX_OPT]="Custom Item Spec - Composition",P$[MAX_OPT]="FMGIAU",MAX_OPT+=1; GOSUB 2200
2035 Q$[MAX_OPT]="Custom Item Spec - Comment",P$[MAX_OPT]="FMGIAW",MAX_OPT+=1; GOSUB 2200
2045 Q$[MAX_OPT]="Sales Order History Display",P$[MAX_OPT]="ICGMAK",MAX_OPT+=1; GOSUB 2200
2050 Q$[MAX_OPT]="Customer Location Data",P$[MAX_OPT]="FMGIAF",MAX_OPT+=1; GOSUB 2200
2055 Q$[MAX_OPT]="Custom Item Usage History",P$[MAX_OPT]="FMGMDA",MAX_OPT+=1; GOSUB 2200
2060 Q$[MAX_OPT]="Custom Item Reorder Notes",P$[MAX_OPT]="FMGIAN",MAX_OPT+=1; GOSUB 2200
2070 Q$[MAX_OPT]="Delete/Reactivate",P$[MAX_OPT]="DELETE",MAX_OPT+=1; GOSUB 2200
2072 GOSUB CREATE_GRID
2165 REFRESH_FLG=1,NO_MORE=1
2170 RETURN 
2195 ! 
2200 ! ^100,5 - Add option to list box
2201 RETURN 
2215 LIST_BOX LOAD OPTION.CTL,0,Q$[X-1]
2220 RETURN 
2225 ! 
2300 PROCESS_OPTION:! ^100,5 - Option selected see if it can be run
2305 OPT$="Y"
2310 IF CVS(CUSTOMER$,3)="" THEN {
2315 MSGBOX "Customer code is missing - cannot proceed.","Attention",""
2320 NEXT_ID=CUSTOMER.CTL,REFRESH_FLG=1
2325 LIST_BOX WRITE OPTION.CTL,0
2330 EXIT 
2335  }
2340 IF CVS(ITEM_CODE$,3)="" THEN {
2345 MSGBOX "Item code is missing - cannot proceed.","Attention",""
2350 NEXT_ID=ITEM_CODE.CTL,REFRESH_FLG=1
2355 LIST_BOX WRITE OPTION.CTL,0
2360 EXIT 
2365  }
2370 OPT_NUM=OPTION.CTL'SELECTITEM
2375 IF NOT(OPT_NUM) THEN {
2380 NEXT_ID=OPTION.CTL,REFRESH_FLG=1
2385 EXIT 
2390  }
2395 IF OPT_NUM=3 AND NUM(PLYS$)<=0 THEN OPT$="N",MSG_TEXT$="The number of plys is zero!"
2396 IF POS(FMS$="YU")=0 AND (OPT_NUM=7 OR OPT_NUM=8) THEN OPT$="N",MSG_TEXT$="This is not an FMS item!"
2400 IF OPT$="N" THEN GOTO OPTION_NOT_AVAILABLE
2403 IF POS(STR(OPT_NUM)="6789")>0 THEN GOTO CALL_ERROR ! Remove option numbers as they become available
2405 IF P$[OPT_NUM]="DELETE" THEN GOSUB DELETE_REC ELSE CALL P$[OPT_NUM],ERR=CALL_ERROR
2410 NEXT_ID=CLEAR.CTL,REFRESH_FLG=1
2415 LIST_BOX WRITE OPTION.CTL,0
2420 RETURN 
2425 ! 
2600 CALL_ERROR:! ^100,5 - Can't run the option
2605 MSGBOX "Unable to perform "+Q$[OPT_NUM]+"."+SEP+"This option is currently under construction","Attention","info"
2610 NEXT_ID=OPTION.CTL,REFRESH_FLG=1
2615 RETURN 
2620 ! 
2650 OPTION_NOT_AVAILABLE:
2655 MSGBOX "Option "+STR(OPT_NUM)+" is not available: "+SEP+MSG_TEXT$,"Attention","info"
2660 NEXT_ID=OPTION.CTL; REFRESH_FLG=1
2665 RETURN 
2670 ! 
2700 PROCESS_CLEAR:! ^100,5 - Clear Customer Code and Item Code
2705 %ITEM_DESC$="",ITEM_CODE$="",STATUS$=""
2710 IF NO_CLEAR=0 THEN CUST_DIV$="",CUST_CODE$="",CUSTOMER$="",%CUST_NAME$=""
2715 NEXT_ID=CUSTOMER.CTL,REFRESH_FLG=1
2720 LIST_BOX WRITE OPTION.CTL,0
2722 IF NO_CLEAR=0 THEN NEXT_ID=CUSTOMER.CTL ! SSP219593 jdf
2725 RETURN 
2730 ! 
4400 CHECK_ERR:! ^100,5 - Error on file read
4405 IF ERR<>0 THEN EXIT ERR
4410 MSGBOX "Record is busy.  Do you wish to Retry?",MSG("CONFIRM"),"?,YESNO",ANSWER$
4415 IF ANSWER$="NO" THEN GOTO PROCESS_CLEAR ELSE RETRY 
4420 ! 
5200 COPY_FROM_OTHER_ITEM:
5204 DIM N$(20),C$(167),C[31]
5210 N$=%COPY_CUSTOMER$+%COPY_ITEM_CODE$
5212 SRC_CUST_DIV$=CUST_DIV$,SRC_CUST_CODE$=CUST_CODE$ ! SSP#208991
5220 FIND (_FM1,KEY=N$,DOM=*NEXT)IOL=0330; GOTO CONVERT_TO_NEW
5225 MSGBOX "Copy item code not found."+SEP+"Do you wish to retry?",MSG("CONFIRM"),"?,YESNO",ANSWER$; IF ANSWER$="YES" THEN EXITTO 1230 ELSE EXITTO 1280
5300 CONVERT_TO_NEW:
5305 Q$=C$
5310 C$(1,20)=CUSTOMER$+ITEM_CODE$,C$(109)="",C[6]=0,C[7]=0,C[8]=0,C[9]=0,C[10]=0,C[11]=0,C[12]=0,C[13]=0,C[14]=0,C[15]=0,C[16]=0,C[17]=0,C$(254,1)="0",C$(255,6)=%X3_TODAY$
5311 C$(387,1)=Q$(387,1); REM SSP 201823       
5312 IF C$(105,1)<>"Y" THEN C$(185,10)=C$(1,10) ! SSP#208991!SSP#267008            
5315 C$(238,16)=Q$(238,16),C$(212,3)=Q$(212,3),C[24]=0
5317 READ (_FMP,KEY="A"+C$(1,10),DOM=5320)%CUST_PARM_A$
5318 C$(108,1)=%CUST_PARM_A$(12,1); IF NUM(%CUST_PARM_A$(13,3))>0 THEN C[22]=NUM(%CUST_PARM_A$(13,3))
5320 WRITE (_FM1,KEY=C$(1,20))IOL=0330; IF TM_PARMS$<>"" THEN CUST$=C$(1,10); CALL "RTGWOC",ERR=*NEXT,CUST$,"FM1...","U",C$(1,20)
5325 READ (_FM1,KEY=C$(1,20))
5330 GOSUB COPY_OTHER_RECORDS
5395 COPY_FROM_OTHER_ITEM_END:RETURN 
8300 COPY_OTHER_RECORDS:
8320 WRITE (_FM2,KEY=C$(21,3)+C$(24,16)+C$(40,2)+C$(11,10)+C$(1,10))
8325 FOR I=8 TO 11
8330 GOSUB COPY_SPEC_RECORDS
8335 NEXT I
8340 COPY_OTHER_RECORDS_END:RETURN 
8350 COPY_SPEC_RECORDS:
8355 EXTRACT (Z[I],KEY=N$,DOM=8356)
8357 K$=KEY(Z[I],END=8380)
8358 IF MID(K$,1,LEN(N$))<>N$ THEN GOTO 8380
8360 READ RECORD (Z[I],END=8380)A8$
8365 A8$(1,20)=C$(1,20)
8370 WRITE RECORD (Z[I],KEY=A8$(1,LEN(K$)))A8$
8373 READ (Z[I],KEY=K$,END=8380)
8375 GOTO 8357
8390 COPY_SPEC_RECORDS_END:RETURN 
9200 SETUP_MESSAGES:
9210 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9220 _MSG_DIRECTORY$=MSG("DIRECTORY")
9230 _MSG_PREFIX$=MSG("PREFIX")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9290 SETUP_MESSAGES_END:RETURN 
9295 ! 
9700 WRAPUP:! 9700,5 - Close files and clean up
9705 READ DATA FROM "" TO IOL=GLOBAL_IOL
9710 IF _FM1 THEN CLOSE (_FM1)
9725 IF ZZPARM THEN CLOSE (ZZPARM)
9730 IF _FMP<>0 THEN CLOSE (_FMP)
9735 FOR I=8 TO 11
9740 IF Z[I]<>0 THEN CLOSE (Z[I])
9745 NEXT I
9747 %GRID=0
9790 EXIT 
9999 END 
10000 ! 10000,10 - Browsing mode
10010 ! - Next
10020 NEXT_REC:
10030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
10040 _KEY$=KEY(_FM1,END=END_OF_FILE)
10050 READ (_FM1,KEY=_KEY$,ERR=*NEXT); CUSTOMER$=MID(_KEY$,1,10),ITEM_CODE$=MID(_KEY$,11,10); GOSUB PROCESS_CUSTOMER; GOSUB PROCESS_ITEM; GOTO DISP_REC
10060 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
10070 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
10080 _KEY$=KEN(_FM1,KEY=_KEY$,END=END_OF_FILE); READ (_FM1,KEY=_KEY$,ERR=CHK_ERR_NXT); CUSTOMER$=_KEY$(1,10),ITEM_CODE$=_KEY$(11,10); GOSUB PROCESS_CUSTOMER; GOSUB PROCESS_ITEM; GOTO DISP_REC
10090 END_OF_FILE: MSGBOX "End of file","F.Y.I.","!,tim=3"; EXIT 
10100 ! 2200 - Prior record
10110 PRIOR_REC:
10120 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
10130 _KEY$=KEP(_FM1,END=START_OF_FILE); READ (_FM1,KEY=_KEY$,ERR=*NEXT); CUSTOMER$=_KEY$(1,10),ITEM_CODE$=_KEY$(11,10); GOSUB PROCESS_CUSTOMER; GOSUB PROCESS_ITEM; GOTO DISP_REC
10140 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
10150 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
10160 _KEY$=KEP(_FM1,KEY=_KEY$,END=START_OF_FILE); READ (_FM1,KEY=_KEY$,ERR=CHK_ERR_PRE); CUSTOMER$=_KEY$(1,10),ITEM_CODE$=_KEY$(11,10); GOSUB PROCESS_CUSTOMER; GOSUB PROCESS_ITEM; GOTO DISP_REC
10170 START_OF_FILE: MSGBOX "Start of File","F.Y.I.","!,tim=3"; EXIT 
10180 ! 2400 - First record
10190 FIRST_REC:
10200 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
10210 _KEY$=KEF(_FM1,ERR=NO_FIRST)
10220 READ (_FM1,KEY=_KEY$,ERR=CHK_ERR_NXT); CUSTOMER$=_KEY$(1,10),ITEM_CODE$=_KEY$(11,10); GOSUB PROCESS_CUSTOMER; GOSUB PROCESS_ITEM; GOTO DISP_REC
10230 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
10240 ! 2600 - Last record
10250 LAST_REC:
10260 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
10270 _KEY$=KEL(_FM1,ERR=NO_LAST)
10280 READ (_FM1,KEY=_KEY$,ERR=CHK_ERR_PRE); CUSTOMER$=_KEY$(1,10),ITEM_CODE$=_KEY$(11,10); GOSUB PROCESS_CUSTOMER; GOSUB PROCESS_ITEM; GOTO DISP_REC
10290 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
10300 BUSY_CHK:! 10300,10
10310 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
10320 IF _D$="NO" THEN EXIT 
10330 RETURN 
11000 CHECK_CHANGES:RETURN 
11010 DISP_REC:RETURN 
12000 PROCESS_QRY: VAL$=""
12010 PROCESS "QRY_FM1","../FMG/FM.EN",VAL$; IF STP(VAL$)="" THEN NEXT_ID=CUSTOMER.CTL; EXIT 
12020 CUSTOMER$=VAL$(1,10); GOSUB PROCESS_CUSTOMER
12030 ITEM_CODE$=VAL$(11,10); GOSUB PROCESS_ITEM
12040 NEXT_ID=X.CTL
12050 RETURN 
40000 ! 40000,10
40010 SEL_GRID:
40012 REFRESH_FLG=1
40020 GRID SELECT READ X,COL,ROW
40030 GRID FIND X,COL,ROW,VAL$
40035 IF STP(VAL$)="" THEN RETURN 
40036 IF AROW+ACOL<>0 THEN X'COLUMN=ACOL,X'ROW=AROW,X'TEXTCOLOR$="Black",X'BACKCOLOR$="Gray",X'BITMAP$=""
40038 X'COLUMN=COL,X'ROW=ROW,X'TEXTCOLOR$="Light Blue",X'BITMAP$="!Arrow_Right" ! ,X'BACKCOLOR$="White"
40040 AROW=ROW,ACOL=COL
40045 OPT=INT(POS(STP(VAL$)=ALL_MESS$)/40)+1; GOSUB PROCESS_OPT; GRID GOTO X,COL,ROW; RETURN 
40050 CREATE_GRID:
40060 GOSUB CREATE_OPT
40070 X=X.CTL,BOPT$=OPT$,ROW=1,COLUMN=0; GRID DELETE X,-1,-1
40080 HIDE CONTROL X
40082 HI=OPT_LN/3; IF FPT(HI)<>0 THEN HI=INT(HI)+1
40085 ! GRID REMOVE X; GRID X,@(2,9.6,75,HI)
40090 XX=POS(SEP=OPT$); IF XX=0 THEN GOTO END_LOAD
40100 COLUMN=COLUMN+1; IF COLUMN>3 THEN COLUMN=1,ROW=ROW+1; GRID ADD X,0,ROW; GRID LOCK X,0,ROW
40110 TX$=OPT$(1,XX-1),OPT$=OPT$(XX+1),X'ROW=ROW,X'COLUMN=COLUMN,X'COLUMNWIDTH=25,X'VALUE$=TX$,X'BACKCOLOR$="Gray",X'CELLTYPE$="Button",X'ALIGN$="Left",X'LOCK=1,X'ROWHEIGHT=1.6,X'BITMAP$="" ! 265555
40120 ! GRID LOAD X,ROW,COLUMN,TX$
40130 GOTO 40090
40140 END_LOAD: HIG=HI*X'HEIGHT/5,X'HEIGHT=HIG; SHOW CONTROL X; RETURN 
40150 CREATE_OPT:
40160 SE$="123456789ABCDEFG"
40170 FOR A=1 TO MAX_OPT-1
40182 MESS$=STP(Q$[A]),MESS$=PAD(MESS$,40," "),ALL_MESS$=ALL_MESS$+MESS$
40190 OPT$=OPT$+STP(MESS$)+SEP,OPT_LN=OPT_LN+1
40191 NXT_OPT:
40195 NEXT A
40200 RETURN 
42000 PROCESS_OPT:
42015 DIM FMP$(50); READ (_FMP,KEY="T"+PROD_CODE$,DOM=*NEXT)IOL=0340
42017 SPEC_FLG=0; IF NOT(NUL(FMP$(33,3))) AND STP(FMP$(21,1))<>"Y" THEN SPEC_FLG=2 ELSE IF NOT(NUL(FMP$(33,3))) THEN SPEC_FLG=1
42020 IF P$[OPT]="DELETE" THEN GOSUB DELETE_REC; RETURN 
42040 P_OPT$=P$[OPT],_ITEM_DESC$=%ITEM_DESC$
42060 IF P_OPT$="FMGIAU" AND SPEC_FLG=1 THEN P_OPT$="FMGIAR"
42080 _CUST$=%CUSTOMER$,_ITEM$=%ITEM_CODE$
42090 IF LEN(CASUAL_CNT_DATE$)=0 THEN CASUAL_CNT_DATE$="      "
42100 IF P_OPT$="FMGIAF" AND POS(FMS$="YU")=0 THEN MSGBOX "Last casual count date: "+FNE$(CASUAL_CNT_DATE$)+SEP+SEP+"Total count - all customer locations:"+STR(LAST_CASUAL_CNT_QTY:"###,###.00-"),MSG("CONFIRMING"),"INFO,OK"; RETURN 
42110 IF P_OPT$="FMGMDA" AND POS(FMS$="YU")=0 THEN MSGBOX "Option : "+Q$[OPT]+" is not available"+SEP+SEP+"This is not an IMS Item",MSG("WARNING"),"INFO,OK"; RETURN ! SSP#230845
42120 IF P_OPT$="FMGMDA" THEN CALL "FMGMDA",%CUSTOMER$,%ITEM_CODE$; GOTO 42160
42130 IF P_OPT$="ICGMAZ" THEN %FMGIAZ=1; CALL "*info;GetDialogLocation",ERR=*NEXT,XX,YY ! PRINT 'MOVE'(XX,YY)
42135 %GRID=0
42140 CALL P_OPT$; IF P_OPT$="FMGIAU" AND SPEC_FLG=2 THEN P_OPT$="FMGIAR"; CALL P_OPT$
42145 IF ID$="X" THEN %GRID=1
42150 ! IF P_OPT$="ICGMAZ" THEN PRINT 'MOVE'(INT(XX)+16,INT(YY)+10); XX=0,YY=0
42160 %CUSTOMER$=_CUST$; %ITEM_CODE$=_ITEM$,%ITEM_DESC$=_ITEM_DESC$,%FMGIAZ=0
42165 IF NOT(NUL(%FM1_PROD_CODE$)) THEN IF %FM1_PROD_CODE$<>PROD_CODE$ THEN PROD_CODE$=%FM1_PROD_CODE$
42166 PRINT 'CI',
42180 RETURN 
50000 TAB_GRID:
50010 GRID SELECT READ X,COL,ROW
50020 IF AROW+ACOL<>0 THEN X'COLUMN=ACOL,X'ROW=AROW,X'TEXTCOLOR$="Black",X'BACKCOLOR$="Gray",X'BITMAP$=""
50025 COL+=1; IF COL>3 THEN COL=1,ROW+=1
50027 IF ROW>HI THEN %GRID=0,ROW=HI,NEXT_ID=BT_WRITE.CTL; GOTO *RETURN
50030 X'COLUMN=COL,X'ROW=ROW,X'TEXTCOLOR$="Light Blue",X'BITMAP$="!Arrow_Right" ! ,X'BACKCOLOR$="White"
50040 AROW=ROW,ACOL=COL
50050 NEXT_ID=X.CTL; GRID GOTO X,COL,ROW
50060 RETURN 
56000 REM "201823-Provide the ability to set the taxable flag  by Item     
56001 REM "208991-Need the From Field to be automatically populated when you  
56003 REM "219593-                                                            
56005 REM "227843-When using the item copy feature from the custom item setup.
56006 REM "047384-Show where the activity is when a delete is not allowed.    
56007 REM "267008-Stock items are not showing the pricing in the shopping cart
56008 REM "263584-Grid size issues Upgrade from Pvx 7.1 to PxPlus 2017        
56009 REM "DBSPT-95443-User Defined Specs panel pops up in continuous loop
