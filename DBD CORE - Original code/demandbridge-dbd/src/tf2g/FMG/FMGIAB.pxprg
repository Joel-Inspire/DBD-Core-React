0010 ! FMGIAB - Customer Items Setup
0035 REM "5.7 - 11/26/24 - 12.821963 - jvv - SSP# 307512
0037 REM "307512-DBD-515 Utility to set up Parent Child Customer accounnt and
0040 REM "Copyright 2024 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 IF TCB(13)=1 THEN BEGIN 
0055 _CUSTOMER$=%CUSTOMER$,_ITEM_CODE$=%ITEM_CODE$
0060 PROCESS "FMGIAB","../FMG/FM.EN"
0065 %CUSTOMER$=_CUSTOMER$,%ITEM_CODE$=_ITEM_CODE$
0066 IF %SPEC THEN EXIT 
0068 ZZ9=HFN; OPEN (ZZ9)"ECS"+%C$
0070 READ (ZZ9,KEY=%CUSTOMER$,DOM=*NEXT); PROCESS "ECGFM1","../ECG/EC.EN"
0075 ! PROCESS "ECGFM1","../ECG/EC.EN"
0085 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0113 _CUSTOMER$=%CUSTOMER$,_ITEM_CODE$=%ITEM_CODE$
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 IF %RFQ THEN _FILE_NAME$="QS1"+%C$ ELSE _FILE_NAME$="FM1"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0182 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0183 DIM Z[NUM(X3$(60,3))] ! SSP245153 jdf
0184 Z$="09O FMI...  11O FMP...  12O FM5...  " ! SSP245153 jdf
0185 _ZZPARM=HFN; OPEN (_ZZPARM,ERR=OPEN_ERR)"ZZPARM"; READ (_ZZPARM,KEY=%C$+"F/M")%OPS_PARM$; READ (_ZZPARM,KEY=%C$+"FMS")%FMS_PARM$; DIM %SEC_BY_OP$(255); READ (_ZZPARM,KEY="osec"+%X3_OP_ID$,DOM=*NEXT)%SEC_BY_OP$ ! SSP#267008
0186 _FT1=HFN; OPEN (_FT1,ERR=OPEN_ERR)"FT1"+%C$
0187 _FM2=HFN; IF %RFQ THEN OPEN (_FM2,ERR=OPEN_ERR)"QS2"+%C$; ELSE OPEN (_FM2,ERR=OPEN_ERR)"FM2"+%C$ ! SSP206206 jdf
0188 _FMG=HFN; OPEN (_FMG,ERR=OPEN_ERR)"FMG"+%C$
0189 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1 ! SSP245153 jdf
0190 RT_PARM$=""; CALL "RTGPRM",ERR=*NEXT,RT_PARM$
0191 GOSUB UDEF_FILES
0192 GOSUB LOAD_USER_DEF
0193 IOLIST FMP$ ! SSP245153 jdf
0194 IOLIST FM5$ ! SSP245153 jdf
0195 MFF_PARM=0; IF MID(%OPS_PARM$,337,1)="Y" THEN MFF_PARM=1 ! SSP 276772
0199 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=2
0430 DIM _KEYS$[1:2]; _KEYS$[1]="CUSTOMER$",_KEYS$[2]="ITEM_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0531 IF %SPEC$<>"" THEN ARG_1$=%SPEC$
0533 IF NOT(NUL(_CUSTOMER$)) AND NUL(_ITEM_CODE$) THEN OE_MODE=1; CUSTOMER$=_CUSTOMER$; CALLED$="Y"; _EOM$=$09$,ID$="CUSTOMER"; _ENABLE_FLG=1; NEXT_ID=ITEM_CODE.CTL; GOTO FIND_REC
0535 IF STP(_CUSTOMER$,3)<>"" AND STP(_ITEM_CODE$,3)<>"" THEN ARG_1$=_CUSTOMER$+_ITEM_CODE$,CUSTOMER$=_CUSTOMER$,ITEM_CODE$=_ITEM_CODE$
0536 IF %SPEC$<>"" THEN ARG_1$=%SPEC$
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$,_ENABLE_FLG=_KCNT,CALLED$="Y"; READ (_FIL_NO,KEY=_KEY$,ERR=NEW_RECORD)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0561 DIM FMP$(135) ! SSP245153 jdf
0562 FMP$(1)=""; FIND (Z[11],KEY="D"+CUSTOMER$,DOM=*NEXT)IOL=0193 ! SSP245153 jdf
0563 GOSUB READ_ALT_DATA ! SSP245153 jdf
0565 CHANGE_FLG=0 ! SSP 300361
0570 RETURN 
0700 ! 700 - Set up tabbing between folders
0710 INIT_FOLDER:
0715 CALL "FMGFN1;CHECK_FOR_CHILD",ERR=*NEXT,X3$,X4$,CUST_DIV$+CUST_CODE$,SRC_CUST_DIV$+SRC_CUST_CODE$,SRCC_FOUND; IF SRCC_FOUND THEN MSGBOX ("This is a child item and should not be changed") ! SSP 307512
0720 GOSUB ENABLE_GROUPS
0721 IF FOLDER_ID$="FMGIAB.1" THEN GOSUB CHECK_QL
0722 IF FOLDER_ID$="FMGIAB.1" AND CALLED$="Y" THEN NEXT_ID=ITEM_DESC.CTL; EXIT 
0725 IF OE_MODE AND FOLDER_ID$="FMGIAB.1" THEN NEXT_ID=ITEM_CODE.CTL; EXIT 
0730 IF _ENABLE_FLG<>_KEY1 THEN IF TAB_FLG$="<" THEN NEXT_ID=_LAST_TAB ELSE NEXT_ID=_FIRST_TAB
0736 IF FOLDER_ID$="FMGIAB.7" THEN {
0737 GOSUB LOAD_GRID
0738  }
0740 EXIT 
0800 CHECK_QL:! SSP 307387
0805 QLL=FN%HAS_MODULE("QL"); CALL "*WINGRP;HIDE",ELINK.GRP$ ! SSP#307387
0806 ! QLL=FN%HAS_MODULE("QL"); IF NOT(QLL) THEN CALL "*WINGRP;HIDE",ELINK.GRP$ ! SSP#307387
0820 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0915 READ DATA FROM "" TO IOL=GLOBAL_IOL; READ DATA FROM "" TO IOL=GLOBAL_CUST_IOL
0917 %FM1_PROD_CODE$=PROD_CODE$
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0941 GOSUB CLOSE_UDEF_FILES
0945 IF _ZZPARM<>0 THEN CLOSE (_ZZPARM)
0946 IF _FT1<>0 THEN CLOSE (_FT1)
0947 IF _FM2<>0 THEN CLOSE (_FM2)
0948 IF _FMG<>0 THEN CLOSE (_FMG)
0950 MESSAGE_LIB _SV_MSGLIB$
0955 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0 ! SSP245153 jdf
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1021 NXT:
1023 IF ID$="CUSTOMER" THEN IF CUSTOMER$="" THEN TEXT$="Customer field may not  be blank"; MSGBOX TEXT$; NEXT_ID=CUSTOMER.CTL; EXIT ELSE GOSUB LOAD_CLASS_VARS; GOSUB READ_CUST_PARMS
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 GOSUB LOAD_CLASS_VARS
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1255 IF MID(%OPS_PARM$,246,1)="Y" THEN USED$="",CIC_ITEM$="",TF_ITEM$=""; CALL "FSGDAK",X3$,X4$,2,_KEY$,USED$,CIC_ITEM$,TF_ITEM$; IF USED$="Y" THEN MSGBOX STP(TF_ITEM$,1)+" is using "+STP(CIC_ITEM$,1)+" as it's CIC,"+SEP+"you may not add this item code.","","!"; NEXT_ID=ITEM_CODE.CTL; GOTO *RETURN
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 NEXT_FOLDER=_FIRST_FOLDER
1285 IF CALLED$="Y" THEN GOSUB LOAD_CLASS_VARS; GOSUB READ_CUST_PARMS
1286 GOSUB SET_NEW_RECORD_DEFAULTS
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1425 IF MID(%CUST_PARM_D$,236,1)="Y" AND %FMB_LEN THEN DFLT_COST_CODE$=PAD(DEPT$,9,0) ! Set cost code from DEPT$ field
1426 CALL "ZZWLKU;PARSE_ORD",LAST_ORDER$,LAST_ORDER_DIV$,LAST_ORDER_NUM$ ! SSP206206 jdf   !SSP#233026
1427 IF %RFQ THEN GOSUB GET_FM1 ! SSP206206 jdf
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1435 IF STP(ITEM_STAT_CODE$,3)="" THEN ITEM_STAT_CODE$="0",ITEM_STAT_DATE$=%X3_TODAY$
1440 GOSUB REVIEW_WRITE
1441 GOSUB WRITE_USER_DEF
1450 CALL "FMGFN1;CHECK_FOR_PARENT",ERR=*NEXT,X3$,X4$,CUST_DIV$+CUST_CODE$,SRC_FOUND; IF SRC_FOUND THEN CALL "FMGFN1;UPDATE_ITEM_ROUTINE",X3$,X4$,CUST_DIV$+CUST_CODE$,"ALL",ITEM_CODE$,0,0 ! SSP 307512
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1485 IF OE_MODE THEN %ITEM_CODE$=""; NEXT_ID=ITEM_CODE.CTL,_ENABLE_FLG=2,_KCNT=2
1487 CMD_STR$="E"
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1611 IF %SEC_BY_OP$(71,1)="Y" THEN MSGBOX "You may not delete a custom item.","Access Denied!",""; RETURN 
1613 IF ACTIVE_STATUS$="I" THEN MSGBOX "Verify you wish to Reactivate this custom item.","Confirm","?,YESNO",ANSWER$; IF ANSWER$<>"YES" THEN RETURN ELSE ACTIVE_STATUS$="A"; GOTO WRITE_REC
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1655 A4$="",A5$="A/R",A6$=_KEY$,A7$="M"; CALL "FMGUAB",X3$,X4$,A5$,A6$,A4$,A7$
1656 IF A4$="Y" THEN MSGBOX "Record deleted!",_FYI$,"!,TIM=2"; GOTO 1660
1657 MSGBOX "Activity detected. Record set to inactive for later removal.",_FYI$,"!"; ACTIVE_STATUS$="I"; GOTO WRITE_REC
1660 ! REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY,CMD_STR$="E"
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1855 NEXT_ID=CUSTOMER.CTL
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3025 IF %RFQ THEN GOSUB GET_QS1 ! SSP206206 jdf
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3052 ORG_REC$=REC(IOL(_FIL_NO))
3060 CHANGE_FLG=0,%ML_VEND_CODE$=VEND_DIV$+VEND_CODE$
3061 GOSUB UPDATE_CLASS_VARS
3062 IF ACTIVE_STATUS$="I" THEN STATUS$="*INACTIVE*" ELSE STATUS$=""
3063 GOSUB READ_CUST_PARMS ! SSP#228688
3065 IF %RFQ THEN GOSUB SET_CHECK_BOX_FIELD_VALUES ! 237110 - Default if this is an RFQ based FM1 setup
3067 GOSUB SET_OLD_SORT_KEY_VALS
3068 ! GOSUB READ_CUST_PARMS!SSP#228688
3070 IF MID(%CUST_PARM_D$,236,1)="Y" AND %FMB_LEN THEN DEPT$=MID(DFLT_COST_CODE$,9-%FMB_LEN+1),DEPT$=PAD(DEPT$,%FMB_LEN) ELSE DEPT$=DIM(9) ! Use DEPT$ field for display/entry, will set back before write
3080 IF MID(%OPS_PARM$,304,1)<>"Y" OR DIST_ITEM$<>"Y" THEN CALL "*WINGRP;DISABLE",CONT_GRP$ ELSE CALL "*WINGRP;ENABLE",CONT_GRP$
3085 NEXT_ID=ITEM_DESC.CTL
3090 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:IF POS("QS1"=FN%FID$(_FIL_NO))=0 THEN ITEM_CODE$=_KEY$(11,10) END_IF ; GOSUB CHECK_SET_FROM_CUST; WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR); GOSUB WRITE_SORT_FILES; GOSUB REORDER_POINT_QTY; REM "SSP#205228! SSP#215056 ! SSP245153 jdf SSP260170, if stock$="Y" then can't have from customer 
3325 CALL "FMGUTI",X3$,_KEY$,"F"
3330 IF RT_PARM$>"" THEN CUST$=_KEY$(1,10); CALL "RTGWOC",ERR=*NEXT,CUST$,"FM1...","U",_KEY$
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUSTOMER.CTL,_FIRST_FIELD=ITEM_DESC.CTL,_FIRST_FOLDER=FLDR.FMGIAB.1.CTL
3815 GOSUB EXIT_NO_CHANGE
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
4200 EXIT_NO_CHANGE:
4210 IF NUL(CUSTOMER$) AND NUL(ITEM_CODE$) THEN RETURN 
4220 CUR_REC$=REC(IOL(_FIL_NO))
4230 IF ORG_REC$=CUR_REC$ THEN CHANGE_FLG=0
4280 RETURN 
4500 GET_QS1:! SSP206206 jdf
4510 PRICE=SELL_PRICE,EST_YRLY_USAGE=EST_ANNUAL_USAGE,YTD_NUM_INV=NUM_OF_INV,YTD_QTY=QTY,YTD_NET_SALE=NET_SALE,YTD_GP=GP,LAST_QTY_ORDERED=LAST_ORDER_QTY,AVG_MTHLY_USAGE=MTHLY_AVG_USAGE,ALT_UNIT_QTY_PER_1=PACK_PER_ALT_UM_1,ALT_UNIT_QTY_PER_2=PACK_PER_ALT_UM_2,ALT_UNIT_QTY_PER_3=PACK_PER_ALT_UM_3,ALT_UNIT_QTY_PER_4=PACK_PER_ALT_UM_4,AUTO_PRICE_EST_GROUP$=AUTO_EST_PRICE_GROUP$,NO_RON_TIL$=RON_PRINT_DATE$,ITEM_CONT_CODE$=ITEM_CONT_PERSON$ ! SSP206206 jdf     
4515 REFRESH_FLG=1 ! SSP206206 jdf
4520 RETURN ! SSP206206 jdf
4600 GET_FM1:! SSP206206 jdf
4610 SELL_PRICE=PRICE,EST_ANNUAL_USAGE=EST_YRLY_USAGE,NUM_OF_INV=YTD_NUM_INV,QTY=YTD_QTY,NET_SALE=YTD_NET_SALE,GP=YTD_GP,LAST_ORDER_QTY=LAST_QTY_ORDERED,MTHLY_AVG_USAGE=AVG_MTHLY_USAGE,PACK_PER_ALT_UM_1=ALT_UNIT_QTY_PER_1,PACK_PER_ALT_UM_2=ALT_UNIT_QTY_PER_2,PACK_PER_ALT_UM_3=ALT_UNIT_QTY_PER_3,PACK_PER_ALT_UM_4=ALT_UNIT_QTY_PER_4,AUTO_EST_PRICE_GROUP$=AUTO_PRICE_EST_GROUP$,RON_PRINT_DATE$=NO_RON_TIL$,ITEM_CONT_PERSON$=ITEM_CONT_CODE$ ! SSP206206 jdf     
4620 RETURN ! SSP206206 jdf
6600 READ_ALT_DATA:! SSP245153 jdf
6640 Q$=FMP$(108,1); IF Q$=" " THEN RETURN ELSE Q$="R"+Q$+CUSTOMER$+"    "+ITEM_CODE$ ! SSP245153 jdf
6650 FM5$=""; FIND (Z[12],KEY=Q$,DOM=*NEXT)IOL=0194 ! SSP245153 jdf
6660 RETURN ! SSP245153 jdf
6700 REORDER_ON_FILE:! SSP245153 jdf
6710 IF FM5$="" THEN GOTO 6770 ELSE MSGBOX MSG("FMGIAB_10"),MSG("MB_ATTN"),"?,Yesno",_YESNO$ ! SSP245153 jdf
6720 IF _YESNO$="YES" THEN GOTO 6721 ELSE GOTO 6770 ! SSP245153 jdf
6730 REMOVE (Z[12],KEY=FM5$(1,26),DOM=6750) ! SSP245153 jdf
6740 REMOVE (Z[9],KEY=CUSTOMER$+ITEM_CODE$+"    ",DOM=*NEXT) ! SSP245153 jdf
6750 FM5$="" ! SSP245153 jdf
6760 ITEM_STAT_CODE$="1",ITEM_STAT_DATE$=X3$(21,6),ITEM_STAT_MEMO$="Reorder notice cancelled" ! SSP245153 jdf
6770 RETURN ! SSP245153 jdf
6800 REORDER_POINT_QTY:! SSP245153 jdf
6802 IOLIST FM1$,FM1{ALL} ! SSP245153 jdf
6803 DIM FM1[31] ! SSP245153 jdf
6804 READ (_FIL_NO,KEY=_KEY$,DOM=*NEXT)IOL=6802 ! SSP245153 jdf
6810 IF %OPS_PARM$(223,1)="Y" THEN CALL "FM2IAM",X3$,X4$,FM1$(1,20),FM1{ALL} ! SSP245153 jdf
6830 RETURN ! SSP245153 jdf
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 CTN_PACK$=STR(CTN_PACK)
10030 TF_COST$=STR(TF_COST)
10040 COST_QTY_PER$=STR(COST_QTY_PER)
10050 PRICE$=STR(PRICE)
10060 SELL_QTY_PER$=STR(SELL_QTY_PER)
10070 FM1_UNUSED_4$=STR(FM1_UNUSED_4)
10080 EST_YRLY_USAGE$=STR(EST_YRLY_USAGE)
10090 FIND_FEE_PRCNT$=STR(FIND_FEE_PRCNT)
10100 YTD_NUM_INV$=STR(YTD_NUM_INV)
10110 YTD_QTY$=STR(YTD_QTY)
10120 YTD_NET_SALE$=STR(YTD_NET_SALE)
10130 YTD_GP$=STR(YTD_GP)
10140 LY_NUM_INV$=STR(LY_NUM_INV)
10150 LY_QTY$=STR(LY_QTY)
10160 LY_NET_SALE$=STR(LY_NET_SALE)
10170 LY_GP$=STR(LY_GP)
10180 LAST_QTY_ORDERED$=STR(LAST_QTY_ORDERED)
10190 COMBO_QTY$=STR(COMBO_QTY)
10200 CTN_WT$=STR(CTN_WT)
10210 RO_PT_WEEKS_SUPPLY$=STR(RO_PT_WEEKS_SUPPLY)
10220 LAST_CASUAL_CNT_QTY$=STR(LAST_CASUAL_CNT_QTY)
10230 STOCK_LEVEL$=STR(STOCK_LEVEL)
10240 RO_PT_DAYS$=STR(RO_PT_DAYS)
10250 RO_PT_QTY$=STR(RO_PT_QTY)
10260 AVG_MTHLY_USAGE$=STR(AVG_MTHLY_USAGE)
10270 ALT_UNIT_QTY_PER_1$=STR(ALT_UNIT_QTY_PER_1)
10280 ALT_UNIT_QTY_PER_2$=STR(ALT_UNIT_QTY_PER_2)
10290 ALT_UNIT_QTY_PER_3$=STR(ALT_UNIT_QTY_PER_3)
10300 ALT_UNIT_QTY_PER_4$=STR(ALT_UNIT_QTY_PER_4)
10310 FMS_PRICE$=STR(FMS_PRICE)
10320 FMS_PRCNT$=STR(FMS_PRCNT)
10330 REQUISITION_MAXIMUM$=STR(REQUISITION_MAXIMUM)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="CTN_PACK",_X=CTN_PACK.CTL,CTN_PACK=NUM(CTN_PACK$,ERR=NON_NUMERIC)
11030 _X$="COST",_X=TF_COST.CTL,TF_COST=NUM(TF_COST$,ERR=NON_NUMERIC)
11040 _X$="COST_QTY_PER",_X=COST_QTY_PER.CTL,COST_QTY_PER=NUM(COST_QTY_PER$,ERR=NON_NUMERIC)
11050 _X$="PRICE",_X=PRICE.CTL,PRICE=NUM(PRICE$,ERR=NON_NUMERIC)
11060 _X$="SELL_QTY_PER",_X=SELL_QTY_PER.CTL,SELL_QTY_PER=NUM(SELL_QTY_PER$,ERR=NON_NUMERIC)
11070 _X$="FM1_UNUSED_4",_X=FM1_UNUSED_4.CTL,FM1_UNUSED_4=NUM(FM1_UNUSED_4$,ERR=NON_NUMERIC)
11080 _X$="EST_YRLY_USAGE",_X=EST_YRLY_USAGE.CTL,EST_YRLY_USAGE=NUM(EST_YRLY_USAGE$,ERR=NON_NUMERIC)
11090 _X$="FIND_FEE_PRCNT",_X=FIND_FEE_PRCNT.CTL,FIND_FEE_PRCNT=NUM(FIND_FEE_PRCNT$,ERR=NON_NUMERIC)
11100 _X$="YTD_NUM_INV",_X=YTD_NUM_INV.CTL,YTD_NUM_INV=NUM(YTD_NUM_INV$,ERR=NON_NUMERIC)
11110 _X$="YTD_QTY",_X=YTD_QTY.CTL,YTD_QTY=NUM(YTD_QTY$,ERR=NON_NUMERIC)
11120 _X$="YTD_NET_SALE",_X=YTD_NET_SALE.CTL,YTD_NET_SALE=NUM(YTD_NET_SALE$,ERR=NON_NUMERIC)
11130 _X$="YTD_GP",_X=YTD_GP.CTL,YTD_GP=NUM(YTD_GP$,ERR=NON_NUMERIC)
11140 _X$="LY_NUM_INV",_X=LY_NUM_INV.CTL,LY_NUM_INV=NUM(LY_NUM_INV$,ERR=NON_NUMERIC)
11150 _X$="LY_QTY",_X=LY_QTY.CTL,LY_QTY=NUM(LY_QTY$,ERR=NON_NUMERIC)
11160 _X$="LY_NET_SALE",_X=LY_NET_SALE.CTL,LY_NET_SALE=NUM(LY_NET_SALE$,ERR=NON_NUMERIC)
11170 _X$="LY_GP",_X=LY_GP.CTL,LY_GP=NUM(LY_GP$,ERR=NON_NUMERIC)
11180 _X$="LAST_QTY_ORDERED",_X=LAST_QTY_ORDERED.CTL,LAST_QTY_ORDERED=NUM(LAST_QTY_ORDERED$,ERR=NON_NUMERIC)
11190 _X$="COMBO_QTY",_X=COMBO_QTY.CTL,COMBO_QTY=NUM(COMBO_QTY$,ERR=NON_NUMERIC)
11200 _X$="CTN_WT",_X=CTN_WT.CTL,CTN_WT=NUM(CTN_WT$,ERR=NON_NUMERIC)
11210 _X$="RO_PT_WEEKS_SUPPLY",_X=RO_PT_WEEKS_SUPPLY.CTL,RO_PT_WEEKS_SUPPLY=NUM(RO_PT_WEEKS_SUPPLY$,ERR=NON_NUMERIC)
11220 _X$="LAST_CASUAL_CNT_QTY",_X=LAST_CASUAL_CNT_QTY.CTL,LAST_CASUAL_CNT_QTY=NUM(LAST_CASUAL_CNT_QTY$,ERR=NON_NUMERIC)
11230 _X$="STOCK_LEVEL",_X=STOCK_LEVEL.CTL,STOCK_LEVEL=NUM(STOCK_LEVEL$,ERR=NON_NUMERIC)
11240 _X$="RO_PT_DAYS",_X=RO_PT_DAYS.CTL,RO_PT_DAYS=NUM(RO_PT_DAYS$,ERR=NON_NUMERIC)
11250 _X$="RO_PT_QTY",_X=RO_PT_QTY.CTL,RO_PT_QTY=NUM(RO_PT_QTY$,ERR=NON_NUMERIC)
11260 _X$="AVG_MTHLY_USAGE",_X=AVG_MTHLY_USAGE.CTL,AVG_MTHLY_USAGE=NUM(AVG_MTHLY_USAGE$,ERR=NON_NUMERIC)
11270 _X$="ALT_UNIT_QTY_PER_1",_X=ALT_UNIT_QTY_PER_1.CTL,ALT_UNIT_QTY_PER_1=NUM(ALT_UNIT_QTY_PER_1$,ERR=NON_NUMERIC)
11280 _X$="ALT_UNIT_QTY_PER_2",_X=ALT_UNIT_QTY_PER_2.CTL,ALT_UNIT_QTY_PER_2=NUM(ALT_UNIT_QTY_PER_2$,ERR=NON_NUMERIC)
11290 _X$="ALT_UNIT_QTY_PER_3",_X=ALT_UNIT_QTY_PER_3.CTL,ALT_UNIT_QTY_PER_3=NUM(ALT_UNIT_QTY_PER_3$,ERR=NON_NUMERIC)
11300 _X$="ALT_UNIT_QTY_PER_4",_X=ALT_UNIT_QTY_PER_4.CTL,ALT_UNIT_QTY_PER_4=NUM(ALT_UNIT_QTY_PER_4$,ERR=NON_NUMERIC)
11310 _X$="FMS_PRICE",_X=FMS_PRICE.CTL,FMS_PRICE=NUM(FMS_PRICE$,ERR=NON_NUMERIC)
11320 _X$="FMS_PRCNT",_X=FMS_PRCNT.CTL,FMS_PRCNT=NUM(FMS_PRCNT$,ERR=NON_NUMERIC)
11330 _X$="REQUISITION_MAXIMUM",_X=REQUISITION_MAXIMUM.CTL,REQUISITION_MAXIMUM=NUM(REQUISITION_MAXIMUM$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12030 ! IF STP(CUST_DIV$,3)="" THEN _W_FLG=0,FLD$=MSG("CUST_DIV"); GOTO REQD_FLD_MISSING ; REM "Commented out in SSP 204859
12035 ! IF STP(CUST_CODE$,3)="" THEN _W_FLG=0,FLD$=MSG("CUST_CODE"); GOTO REQD_FLD_MISSING ; REM "Commented out in SSP 204859
12040 IF STP(ITEM_CODE$,3)="" THEN _W_FLG=0,FLD$=MSG("ITEM_CODE"); GOTO REQD_FLD_MISSING
12045 IF STP(PROD_CODE$,3)="" THEN _W_FLG=0,NEXT_ID=PROD_CODE.CTL,FLD$=MSG("PROD_CODE"); GOTO REQD_FLD_MISSING
12047 IF STP(SELL_UM$,3)="" THEN _W_FLG=0,FLD$=MSG("PRIC_P_U"); GOTO REQD_FLD_MISSING
12050 IF STP(COST_UM$,3)="" THEN _W_FLG=0,FLD$=MSG("COST_UNIT"); GOTO REQD_FLD_MISSING
12055 IF STP(VENDOR$,3)="" AND %RFQ=0 THEN _W_FLG=0,FLD$=MSG("VENDOR"); GOTO REQD_FLD_MISSING ! SSP 192579
12056 IF NUM(SELL_QTY_PER$)=0 THEN _W_FLG=0,FLD$=MSG("PRIC_Q_P_U"); GOTO REQD_FLD_MISSING
12057 IF NUM(COST_QTY_PER$)=0 THEN _W_FLG=0,FLD$=MSG("COST_Q_P_U"); GOTO REQD_FLD_MISSING
12090 RETURN 
12900 REQD_FLD_MISSING:
12910 TEXT$=FLD$+" is a required field and it is blank."+SEP+"You may not write this record."
12920 MSGBOX TEXT$,"","!"
12999 RETURN 
13000 ! 13000 - Clear the record fields
13001 GLOBAL_IOL:IOLIST %OPS_PARM$,%CUST_CONT_NAME$,%CUST_NAME1$,%PLANT_VEND$,%VEND_NAME$,%PLANT_NAME$,%REORDER_GROUP_DESC$,%ART_STATUS_DESC$,%VENDOR$,%ITEM_CODE$
13002 GLOBAL_CUST_IOL:IOLIST %CUSTOMER$,%CUST_NAME$,%CUST_PARM_D$,%CUST_PARM_A$,%CUST_PARM_D
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN CUST_DIV$=""
13030 IF _CLR_FLG$="R" THEN CUST_CODE$="",CUSTOMER$=""; READ DATA FROM "" TO IOL=GLOBAL_CUST_IOL
13040 IF _CLR_FLG$="R" THEN ITEM_CODE$="",%ITEM_CODE$=""
13050 PROD_CODE$=""
13060 LEFT_RIGHT$=""
13070 TOP_BOTTOM$=""
13080 PLYS$=""
13090 ITEM_DESC$=""
13100 VEND_DIV$=""
13110 VEND_CODE$="",VENDOR$="",%PLANT_VEND$="",%VEND_NAME$=""; %PLANT_NAME$="",%VENDOR$=""
13120 PLANT_CODE$=""
13125 ESTATUS$="" ! ssp 307387
13130 COST_UM$=""
13140 SELL_UM$=""
13150 NUMBERING$=""
13160 DIST_ITEM$=""
13170 FM1_UNUSED_1$=""
13180 FMS$=""
13190 RO_DATE$=""
13200 FIND_FEE$=""
13210 FIND_FEE_VEND_DIV$=""
13220 FIND_FEE_VEND_CODE$=""
13230 LAST_ORDER_DATE$=""
13240 LAST_ORDER_DIV$=""
13250 LAST_ORDER_NUM$=""
13251 LAST_ORDER$=""
13260 ENDING_NUM$=""
13270 PREV_JOB_NUM$=""
13280 PREV_JOB_NUM_DATE$=""
13290 ITEM_REVISION$=""
13300 FUNC_CODE$=""
13310 SRC_CUST_DIV$="",SRC_CUSTOMER$="",%CUST_NAME1$=""
13320 SRC_CUST_CODE$=""
13330 ACTIVE_STATUS$="",STATUS$=""
13340 FM1_UNUSED_2$=""
13350 PREV_ITEM_CODE$=""
13360 ITEM_CONT_CODE$="",%CUST_CONT_NAME$=""
13370 ITEM_GROUP_CODE$="",%REORDER_GROUP_DESC$=""
13380 ART_DISK_FILE$=""
13390 ART_STATUS_CODE$="",%ART_STATUS_DESC$=""
13400 ART_STAT_DATE$=""
13410 ALT_UM_1$=""
13420 ALT_UM_2$=""
13430 ALT_UM_3$=""
13440 ALT_UM_4$=""
13450 ITEM_STAT_CODE$=""
13460 ITEM_STAT_DATE$=""
13470 ITEM_STAT_MEMO$=""
13480 AUTO_PRICE_EST_GROUP$=""
13490 AUTO_PRICE_FEATURES$=""
13500 REQ_ACCESS_CNTL_CODE$=""
13510 NO_RON_TIL$=""
13520 CASUAL_CNT_DATE$=""
13530 ITEM_1ST_USED$=""
13540 ITEM_LAST_WHSE_SHIP$=""
13550 DFLT_COST_CODE$="",DEPT$=""
13560 CIC$=""
13570 SPEC_CODE$=""
13580 FM1_UNUSED_3$=""
13585 TAX_TYPE$=""; REM SSP 201823
13590 TF_MEMO$=""
13600 CTN_PACK=0
13610 TF_COST=0
13620 COST_QTY_PER=0
13630 PRICE=0
13640 SELL_QTY_PER=0
13650 FM1_UNUSED_4=0
13660 EST_YRLY_USAGE=0
13670 FIND_FEE_PRCNT=0
13680 YTD_NUM_INV=0
13690 YTD_QTY=0
13700 YTD_NET_SALE=0
13710 YTD_GP=0
13720 LY_NUM_INV=0
13730 LY_QTY=0
13740 LY_NET_SALE=0
13750 LY_GP=0
13760 LAST_QTY_ORDERED=0
13770 COMBO_QTY=0
13780 CTN_WT=0
13790 RO_PT_WEEKS_SUPPLY=0
13800 LAST_CASUAL_CNT_QTY=0
13810 STOCK_LEVEL=0
13820 RO_PT_DAYS=0
13830 RO_PT_QTY=0
13840 AVG_MTHLY_USAGE=0
13850 ALT_UNIT_QTY_PER_1=0
13860 ALT_UNIT_QTY_PER_2=0
13870 ALT_UNIT_QTY_PER_3=0
13880 ALT_UNIT_QTY_PER_4=0
13890 FMS_PRICE=0
13900 FMS_PRCNT=0
13910 REQUISITION_MAXIMUM=0
13920 RON_MONTHS$="" ! SSP197206 jdf
13970 OLD_FT1_KEY$="",OLD_FM2_KEY$="",OLD_FMG_KEY$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13991 CLOSE (UDEF); OPEN (UDEF)"*memory*"
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14040 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=ITEM_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14985 GOSUB HIDE_GROUPS
14987 IF CALLED$="Y" THEN CALL "*wingrp;Hide",SCROLL.GRP$ ! if coming from menu or other program, no access to scroll buttons
14988 IF CALLED$="Y" THEN DISABLE CONTROL CUSTOMER.CTL; IF _ENABLE_FLG=1 THEN CALL "*wingrp;enable",KEY2.GRP$ ! If coming from menu or other program, no access to key fields.
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(93,"N"); REM SSP 201823 SSP 307387
15030 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15040 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15050 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15060 IF _ORIG.PROD_CODE$=_CUR.PROD_CODE$ OR PROD_CODE$=_CUR.PROD_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PROD_CODE$=PROD_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PROD_CODE")+" = "+_CUR.PROD_CODE$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROD_CODE")+" = "+_CUR.PROD_CODE$
15070 IF _ORIG.LEFT_RIGHT$=_CUR.LEFT_RIGHT$ OR LEFT_RIGHT$=_CUR.LEFT_RIGHT$ THEN GOTO *NEXT ELSE IF _ORIG.LEFT_RIGHT$=LEFT_RIGHT$ THEN _CHG2$=_CHG2$+SEP+MSG("LEFT_RIGHT")+" = "+_CUR.LEFT_RIGHT$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LEFT_RIGHT")+" = "+_CUR.LEFT_RIGHT$
15080 IF _ORIG.TOP_BOTTOM$=_CUR.TOP_BOTTOM$ OR TOP_BOTTOM$=_CUR.TOP_BOTTOM$ THEN GOTO *NEXT ELSE IF _ORIG.TOP_BOTTOM$=TOP_BOTTOM$ THEN _CHG2$=_CHG2$+SEP+MSG("TOP_BOTTOM")+" = "+_CUR.TOP_BOTTOM$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TOP_BOTTOM")+" = "+_CUR.TOP_BOTTOM$
15090 IF _ORIG.PLYS$=_CUR.PLYS$ OR PLYS$=_CUR.PLYS$ THEN GOTO *NEXT ELSE IF _ORIG.PLYS$=PLYS$ THEN _CHG2$=_CHG2$+SEP+MSG("PLYS")+" = "+_CUR.PLYS$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLYS")+" = "+_CUR.PLYS$
15100 IF _ORIG.ITEM_DESC$=_CUR.ITEM_DESC$ OR ITEM_DESC$=_CUR.ITEM_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_DESC$=ITEM_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_DESC")+" = "+_CUR.ITEM_DESC$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_DESC")+" = "+_CUR.ITEM_DESC$
15110 IF _ORIG.VEND_DIV$=_CUR.VEND_DIV$ OR VEND_DIV$=_CUR.VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_DIV$=VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_DIV")+" = "+_CUR.VEND_DIV$
15120 IF _ORIG.VEND_CODE$=_CUR.VEND_CODE$ OR VEND_CODE$=_CUR.VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.VEND_CODE$=VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VEND_CODE")+" = "+_CUR.VEND_CODE$
15130 IF _ORIG.PLANT_CODE$=_CUR.PLANT_CODE$ OR PLANT_CODE$=_CUR.PLANT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PLANT_CODE$=PLANT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PLANT_CODE")+" = "+_CUR.PLANT_CODE$
15135 IF _ORIG.ESTATUS$=_CUR.ESTATUS$ OR ESTATUS$=_CUR.ESTATUS$ THEN GOTO *NEXT ELSE IF _ORIG.ESTATUS$=ESTATUS$ THEN _CHG2$=_CHG2$+SEP+MSG("ESTATUS")+" = "+_CUR.ESTATUS$,_CHG_VAR$(93,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ESTATUS")+" = "+_CUR.ESTATUS$ ! SSP 307387
15140 IF _ORIG.COST_UM$=_CUR.COST_UM$ OR COST_UM$=_CUR.COST_UM$ THEN GOTO *NEXT ELSE IF _ORIG.COST_UM$=COST_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("COST_UM")+" = "+_CUR.COST_UM$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_UM")+" = "+_CUR.COST_UM$
15150 IF _ORIG.SELL_UM$=_CUR.SELL_UM$ OR SELL_UM$=_CUR.SELL_UM$ THEN GOTO *NEXT ELSE IF _ORIG.SELL_UM$=SELL_UM$ THEN _CHG2$=_CHG2$+SEP+MSG("SELL_UM")+" = "+_CUR.SELL_UM$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_UM")+" = "+_CUR.SELL_UM$
15160 IF _ORIG.NUMBERING$=_CUR.NUMBERING$ OR NUMBERING$=_CUR.NUMBERING$ THEN GOTO *NEXT ELSE IF _ORIG.NUMBERING$=NUMBERING$ THEN _CHG2$=_CHG2$+SEP+MSG("NUMBERING")+" = "+_CUR.NUMBERING$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NUMBERING")+" = "+_CUR.NUMBERING$
15170 IF _ORIG.DIST_ITEM$=_CUR.DIST_ITEM$ OR DIST_ITEM$=_CUR.DIST_ITEM$ THEN GOTO *NEXT ELSE IF _ORIG.DIST_ITEM$=DIST_ITEM$ THEN _CHG2$=_CHG2$+SEP+MSG("DIST_ITEM")+" = "+_CUR.DIST_ITEM$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DIST_ITEM")+" = "+_CUR.DIST_ITEM$
15180 IF _ORIG.FM1_UNUSED_1$=_CUR.FM1_UNUSED_1$ OR FM1_UNUSED_1$=_CUR.FM1_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.FM1_UNUSED_1$=FM1_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FM1_UNUSED_1$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FM1_UNUSED_1$
15190 IF _ORIG.FMS$=_CUR.FMS$ OR FMS$=_CUR.FMS$ THEN GOTO *NEXT ELSE IF _ORIG.FMS$=FMS$ THEN _CHG2$=_CHG2$+SEP+MSG("FMS")+" = "+_CUR.FMS$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FMS")+" = "+_CUR.FMS$
15200 IF _ORIG.RO_DATE$=_CUR.RO_DATE$ OR RO_DATE$=_CUR.RO_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.RO_DATE$=RO_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("RO_DATE")+" = "+_CUR.RO_DATE$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RO_DATE")+" = "+_CUR.RO_DATE$
15210 IF _ORIG.FIND_FEE$=_CUR.FIND_FEE$ OR FIND_FEE$=_CUR.FIND_FEE$ THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE$=FIND_FEE$ THEN _CHG2$=_CHG2$+SEP+MSG("FIND_FEE")+" = "+_CUR.FIND_FEE$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIND_FEE")+" = "+_CUR.FIND_FEE$
15220 IF _ORIG.FIND_FEE_VEND_DIV$=_CUR.FIND_FEE_VEND_DIV$ OR FIND_FEE_VEND_DIV$=_CUR.FIND_FEE_VEND_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_VEND_DIV$=FIND_FEE_VEND_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("FIND_F_V_D")+" = "+_CUR.FIND_FEE_VEND_DIV$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIND_F_V_D")+" = "+_CUR.FIND_FEE_VEND_DIV$
15230 IF _ORIG.FIND_FEE_VEND_CODE$=_CUR.FIND_FEE_VEND_CODE$ OR FIND_FEE_VEND_CODE$=_CUR.FIND_FEE_VEND_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_VEND_CODE$=FIND_FEE_VEND_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("FIND_F_V_C")+" = "+_CUR.FIND_FEE_VEND_CODE$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIND_F_V_C")+" = "+_CUR.FIND_FEE_VEND_CODE$
15240 IF _ORIG.LAST_ORDER_DATE$=_CUR.LAST_ORDER_DATE$ OR LAST_ORDER_DATE$=_CUR.LAST_ORDER_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.LAST_ORDER_DATE$=LAST_ORDER_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("LAST_O_D")+" = "+_CUR.LAST_ORDER_DATE$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LAST_O_D")+" = "+_CUR.LAST_ORDER_DATE$
15250 IF _ORIG.LAST_ORDER_DIV$=_CUR.LAST_ORDER_DIV$ OR LAST_ORDER_DIV$=_CUR.LAST_ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.LAST_ORDER_DIV$=LAST_ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("LST_OR_DIV")+" = "+_CUR.LAST_ORDER_DIV$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LST_OR_DIV")+" = "+_CUR.LAST_ORDER_DIV$
15260 IF _ORIG.LAST_ORDER_NUM$=_CUR.LAST_ORDER_NUM$ OR LAST_ORDER_NUM$=_CUR.LAST_ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.LAST_ORDER_NUM$=LAST_ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("LAST_O_N")+" = "+_CUR.LAST_ORDER_NUM$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LAST_O_N")+" = "+_CUR.LAST_ORDER_NUM$
15270 IF _ORIG.ENDING_NUM$=_CUR.ENDING_NUM$ OR ENDING_NUM$=_CUR.ENDING_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ENDING_NUM$=ENDING_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ENDING_NUM")+" = "+_CUR.ENDING_NUM$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ENDING_NUM")+" = "+_CUR.ENDING_NUM$
15280 IF _ORIG.PREV_JOB_NUM$=_CUR.PREV_JOB_NUM$ OR PREV_JOB_NUM$=_CUR.PREV_JOB_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.PREV_JOB_NUM$=PREV_JOB_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("PREV_J_N")+" = "+_CUR.PREV_JOB_NUM$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PREV_J_N")+" = "+_CUR.PREV_JOB_NUM$
15290 IF _ORIG.PREV_JOB_NUM_DATE$=_CUR.PREV_JOB_NUM_DATE$ OR PREV_JOB_NUM_DATE$=_CUR.PREV_JOB_NUM_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.PREV_JOB_NUM_DATE$=PREV_JOB_NUM_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("PREV_J_N_D")+" = "+_CUR.PREV_JOB_NUM_DATE$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PREV_J_N_D")+" = "+_CUR.PREV_JOB_NUM_DATE$
15300 IF _ORIG.ITEM_REVISION$=_CUR.ITEM_REVISION$ OR ITEM_REVISION$=_CUR.ITEM_REVISION$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_REVISION$=ITEM_REVISION$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_REV")+" = "+_CUR.ITEM_REVISION$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_REV")+" = "+_CUR.ITEM_REVISION$
15310 IF _ORIG.FUNC_CODE$=_CUR.FUNC_CODE$ OR FUNC_CODE$=_CUR.FUNC_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.FUNC_CODE$=FUNC_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("FUNC_CODE")+" = "+_CUR.FUNC_CODE$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FUNC_CODE")+" = "+_CUR.FUNC_CODE$
15320 IF _ORIG.SRC_CUST_DIV$=_CUR.SRC_CUST_DIV$ OR SRC_CUST_DIV$=_CUR.SRC_CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.SRC_CUST_DIV$=SRC_CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("SRC_C_D")+" = "+_CUR.SRC_CUST_DIV$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SRC_C_D")+" = "+_CUR.SRC_CUST_DIV$
15330 IF _ORIG.SRC_CUST_CODE$=_CUR.SRC_CUST_CODE$ OR SRC_CUST_CODE$=_CUR.SRC_CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SRC_CUST_CODE$=SRC_CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SRC_CST_C")+" = "+_CUR.SRC_CUST_CODE$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SRC_CST_C")+" = "+_CUR.SRC_CUST_CODE$
15340 IF _ORIG.ACTIVE_STATUS$=_CUR.ACTIVE_STATUS$ OR ACTIVE_STATUS$=_CUR.ACTIVE_STATUS$ THEN GOTO *NEXT ELSE IF _ORIG.ACTIVE_STATUS$=ACTIVE_STATUS$ THEN _CHG2$=_CHG2$+SEP+MSG("ACTI_S")+" = "+_CUR.ACTIVE_STATUS$,_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ACTI_S")+" = "+_CUR.ACTIVE_STATUS$
15350 IF _ORIG.FM1_UNUSED_2$=_CUR.FM1_UNUSED_2$ OR FM1_UNUSED_2$=_CUR.FM1_UNUSED_2$ THEN GOTO *NEXT ELSE IF _ORIG.FM1_UNUSED_2$=FM1_UNUSED_2$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FM1_UNUSED_2$,_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FM1_UNUSED_2$
15360 IF _ORIG.PREV_ITEM_CODE$=_CUR.PREV_ITEM_CODE$ OR PREV_ITEM_CODE$=_CUR.PREV_ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PREV_ITEM_CODE$=PREV_ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PREV_I_C")+" = "+_CUR.PREV_ITEM_CODE$,_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PREV_I_C")+" = "+_CUR.PREV_ITEM_CODE$
15370 IF _ORIG.ITEM_CONT_CODE$=_CUR.ITEM_CONT_CODE$ OR ITEM_CONT_CODE$=_CUR.ITEM_CONT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CONT_CODE$=ITEM_CONT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CNT_C")+" = "+_CUR.ITEM_CONT_CODE$,_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CNT_C")+" = "+_CUR.ITEM_CONT_CODE$
15380 IF _ORIG.ITEM_GROUP_CODE$=_CUR.ITEM_GROUP_CODE$ OR ITEM_GROUP_CODE$=_CUR.ITEM_GROUP_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_GROUP_CODE$=ITEM_GROUP_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_G_C")+" = "+_CUR.ITEM_GROUP_CODE$,_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_G_C")+" = "+_CUR.ITEM_GROUP_CODE$
15390 IF _ORIG.ART_DISK_FILE$=_CUR.ART_DISK_FILE$ OR ART_DISK_FILE$=_CUR.ART_DISK_FILE$ THEN GOTO *NEXT ELSE IF _ORIG.ART_DISK_FILE$=ART_DISK_FILE$ THEN _CHG2$=_CHG2$+SEP+MSG("ART_D_F")+" = "+_CUR.ART_DISK_FILE$,_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ART_D_F")+" = "+_CUR.ART_DISK_FILE$
15400 IF _ORIG.ART_STATUS_CODE$=_CUR.ART_STATUS_CODE$ OR ART_STATUS_CODE$=_CUR.ART_STATUS_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ART_STATUS_CODE$=ART_STATUS_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ART_S_C")+" = "+_CUR.ART_STATUS_CODE$,_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ART_S_C")+" = "+_CUR.ART_STATUS_CODE$
15410 IF _ORIG.ART_STAT_DATE$=_CUR.ART_STAT_DATE$ OR ART_STAT_DATE$=_CUR.ART_STAT_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.ART_STAT_DATE$=ART_STAT_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("ART_S_D")+" = "+_CUR.ART_STAT_DATE$,_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ART_S_D")+" = "+_CUR.ART_STAT_DATE$
15420 IF _ORIG.ALT_UM_1$=_CUR.ALT_UM_1$ OR ALT_UM_1$=_CUR.ALT_UM_1$ THEN GOTO *NEXT ELSE IF _ORIG.ALT_UM_1$=ALT_UM_1$ THEN _CHG2$=_CHG2$+SEP+MSG("ALT_UM_1")+" = "+_CUR.ALT_UM_1$,_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALT_UM_1")+" = "+_CUR.ALT_UM_1$
15430 IF _ORIG.ALT_UM_2$=_CUR.ALT_UM_2$ OR ALT_UM_2$=_CUR.ALT_UM_2$ THEN GOTO *NEXT ELSE IF _ORIG.ALT_UM_2$=ALT_UM_2$ THEN _CHG2$=_CHG2$+SEP+MSG("ALT_UM_2")+" = "+_CUR.ALT_UM_2$,_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALT_UM_2")+" = "+_CUR.ALT_UM_2$
15440 IF _ORIG.ALT_UM_3$=_CUR.ALT_UM_3$ OR ALT_UM_3$=_CUR.ALT_UM_3$ THEN GOTO *NEXT ELSE IF _ORIG.ALT_UM_3$=ALT_UM_3$ THEN _CHG2$=_CHG2$+SEP+MSG("ALT_UM_3")+" = "+_CUR.ALT_UM_3$,_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALT_UM_3")+" = "+_CUR.ALT_UM_3$
15450 IF _ORIG.ALT_UM_4$=_CUR.ALT_UM_4$ OR ALT_UM_4$=_CUR.ALT_UM_4$ THEN GOTO *NEXT ELSE IF _ORIG.ALT_UM_4$=ALT_UM_4$ THEN _CHG2$=_CHG2$+SEP+MSG("ALT_UM_4")+" = "+_CUR.ALT_UM_4$,_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALT_UM_4")+" = "+_CUR.ALT_UM_4$
15460 IF _ORIG.ITEM_STAT_CODE$=_CUR.ITEM_STAT_CODE$ OR ITEM_STAT_CODE$=_CUR.ITEM_STAT_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_STAT_CODE$=ITEM_STAT_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_S_C")+" = "+_CUR.ITEM_STAT_CODE$,_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_S_C")+" = "+_CUR.ITEM_STAT_CODE$
15470 IF _ORIG.ITEM_STAT_DATE$=_CUR.ITEM_STAT_DATE$ OR ITEM_STAT_DATE$=_CUR.ITEM_STAT_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_STAT_DATE$=ITEM_STAT_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_S_D")+" = "+_CUR.ITEM_STAT_DATE$,_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_S_D")+" = "+_CUR.ITEM_STAT_DATE$
15480 IF _ORIG.ITEM_STAT_MEMO$=_CUR.ITEM_STAT_MEMO$ OR ITEM_STAT_MEMO$=_CUR.ITEM_STAT_MEMO$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_STAT_MEMO$=ITEM_STAT_MEMO$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_S_M")+" = "+_CUR.ITEM_STAT_MEMO$,_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_S_M")+" = "+_CUR.ITEM_STAT_MEMO$
15490 IF _ORIG.AUTO_PRICE_EST_GROUP$=_CUR.AUTO_PRICE_EST_GROUP$ OR AUTO_PRICE_EST_GROUP$=_CUR.AUTO_PRICE_EST_GROUP$ THEN GOTO *NEXT ELSE IF _ORIG.AUTO_PRICE_EST_GROUP$=AUTO_PRICE_EST_GROUP$ THEN _CHG2$=_CHG2$+SEP+MSG("AUTO_P_E_G")+" = "+_CUR.AUTO_PRICE_EST_GROUP$,_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUTO_P_E_G")+" = "+_CUR.AUTO_PRICE_EST_GROUP$
15500 IF _ORIG.AUTO_PRICE_FEATURES$=_CUR.AUTO_PRICE_FEATURES$ OR AUTO_PRICE_FEATURES$=_CUR.AUTO_PRICE_FEATURES$ THEN GOTO *NEXT ELSE IF _ORIG.AUTO_PRICE_FEATURES$=AUTO_PRICE_FEATURES$ THEN _CHG2$=_CHG2$+SEP+MSG("AUTO_P_F")+" = "+_CUR.AUTO_PRICE_FEATURES$,_CHG_VAR$(48,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUTO_P_F")+" = "+_CUR.AUTO_PRICE_FEATURES$
15510 IF _ORIG.REQ_ACCESS_CNTL_CODE$=_CUR.REQ_ACCESS_CNTL_CODE$ OR REQ_ACCESS_CNTL_CODE$=_CUR.REQ_ACCESS_CNTL_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.REQ_ACCESS_CNTL_CODE$=REQ_ACCESS_CNTL_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("REQ_A_C_C")+" = "+_CUR.REQ_ACCESS_CNTL_CODE$,_CHG_VAR$(49,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REQ_A_C_C")+" = "+_CUR.REQ_ACCESS_CNTL_CODE$
15520 IF _ORIG.NO_RON_TIL$=_CUR.NO_RON_TIL$ OR NO_RON_TIL$=_CUR.NO_RON_TIL$ THEN GOTO *NEXT ELSE IF _ORIG.NO_RON_TIL$=NO_RON_TIL$ THEN _CHG2$=_CHG2$+SEP+MSG("NO_RON_TIL")+" = "+_CUR.NO_RON_TIL$,_CHG_VAR$(50,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NO_RON_TIL")+" = "+_CUR.NO_RON_TIL$
15530 IF _ORIG.CASUAL_CNT_DATE$=_CUR.CASUAL_CNT_DATE$ OR CASUAL_CNT_DATE$=_CUR.CASUAL_CNT_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.CASUAL_CNT_DATE$=CASUAL_CNT_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("CASU_C_D")+" = "+_CUR.CASUAL_CNT_DATE$,_CHG_VAR$(51,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CASU_C_D")+" = "+_CUR.CASUAL_CNT_DATE$
15540 IF _ORIG.ITEM_1ST_USED$=_CUR.ITEM_1ST_USED$ OR ITEM_1ST_USED$=_CUR.ITEM_1ST_USED$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_1ST_USED$=ITEM_1ST_USED$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_1_U")+" = "+_CUR.ITEM_1ST_USED$,_CHG_VAR$(52,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_1_U")+" = "+_CUR.ITEM_1ST_USED$
15550 IF _ORIG.ITEM_LAST_WHSE_SHIP$=_CUR.ITEM_LAST_WHSE_SHIP$ OR ITEM_LAST_WHSE_SHIP$=_CUR.ITEM_LAST_WHSE_SHIP$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_LAST_WHSE_SHIP$=ITEM_LAST_WHSE_SHIP$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_L_W_S")+" = "+_CUR.ITEM_LAST_WHSE_SHIP$,_CHG_VAR$(53,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_L_W_S")+" = "+_CUR.ITEM_LAST_WHSE_SHIP$
15560 IF _ORIG.DFLT_COST_CODE$=_CUR.DFLT_COST_CODE$ OR DFLT_COST_CODE$=_CUR.DFLT_COST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.DFLT_COST_CODE$=DFLT_COST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("DFLT_C_C")+" = "+_CUR.DFLT_COST_CODE$,_CHG_VAR$(54,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DFLT_C_C")+" = "+_CUR.DFLT_COST_CODE$
15570 IF _ORIG.CIC$=_CUR.CIC$ OR CIC$=_CUR.CIC$ THEN GOTO *NEXT ELSE IF _ORIG.CIC$=CIC$ THEN _CHG2$=_CHG2$+SEP+MSG("CIC")+" = "+_CUR.CIC$,_CHG_VAR$(55,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CIC")+" = "+_CUR.CIC$
15580 IF _ORIG.SPEC_CODE$=_CUR.SPEC_CODE$ OR SPEC_CODE$=_CUR.SPEC_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SPEC_CODE$=SPEC_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SPEC_CODE")+" = "+_CUR.SPEC_CODE$,_CHG_VAR$(56,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPEC_CODE")+" = "+_CUR.SPEC_CODE$
15590 IF _ORIG.FM1_UNUSED_3$=_CUR.FM1_UNUSED_3$ OR FM1_UNUSED_3$=_CUR.FM1_UNUSED_3$ THEN GOTO *NEXT ELSE IF _ORIG.FM1_UNUSED_3$=FM1_UNUSED_3$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FM1_UNUSED_3$,_CHG_VAR$(57,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FM1_UNUSED_3$
15600 IF _ORIG.TF_MEMO$=_CUR.TF_MEMO$ OR TF_MEMO$=_CUR.TF_MEMO$ THEN GOTO *NEXT ELSE IF _ORIG.TF_MEMO$=TF_MEMO$ THEN _CHG2$=_CHG2$+SEP+MSG("MEMO")+" = "+_CUR.TF_MEMO$,_CHG_VAR$(58,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MEMO")+" = "+_CUR.TF_MEMO$
15610 IF _ORIG.CTN_PACK=_CUR.CTN_PACK OR CTN_PACK=_CUR.CTN_PACK THEN GOTO *NEXT ELSE IF _ORIG.CTN_PACK=CTN_PACK THEN _CHG2$=_CHG2$+SEP+MSG("CTN_PACK")+" = "+STR(_CUR.CTN_PACK),_CHG_VAR$(59,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_PACK")+" = "+STR(_CUR.CTN_PACK)
15620 IF _ORIG.TF_COST=_CUR.TF_COST OR TF_COST=_CUR.TF_COST THEN GOTO *NEXT ELSE IF _ORIG.TF_COST=TF_COST THEN _CHG2$=_CHG2$+SEP+MSG("COST")+" = "+STR(_CUR.TF_COST),_CHG_VAR$(60,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST")+" = "+STR(_CUR.TF_COST)
15630 IF _ORIG.COST_QTY_PER=_CUR.COST_QTY_PER OR COST_QTY_PER=_CUR.COST_QTY_PER THEN GOTO *NEXT ELSE IF _ORIG.COST_QTY_PER=COST_QTY_PER THEN _CHG2$=_CHG2$+SEP+MSG("COST_Q_P")+" = "+STR(_CUR.COST_QTY_PER),_CHG_VAR$(61,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COST_Q_P")+" = "+STR(_CUR.COST_QTY_PER)
15640 IF _ORIG.PRICE=_CUR.PRICE OR PRICE=_CUR.PRICE THEN GOTO *NEXT ELSE IF _ORIG.PRICE=PRICE THEN _CHG2$=_CHG2$+SEP+MSG("PRICE")+" = "+STR(_CUR.PRICE),_CHG_VAR$(62,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRICE")+" = "+STR(_CUR.PRICE)
15650 IF _ORIG.SELL_QTY_PER=_CUR.SELL_QTY_PER OR SELL_QTY_PER=_CUR.SELL_QTY_PER THEN GOTO *NEXT ELSE IF _ORIG.SELL_QTY_PER=SELL_QTY_PER THEN _CHG2$=_CHG2$+SEP+MSG("SELL_Q_P")+" = "+STR(_CUR.SELL_QTY_PER),_CHG_VAR$(63,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_Q_P")+" = "+STR(_CUR.SELL_QTY_PER)
15660 IF _ORIG.FM1_UNUSED_4=_CUR.FM1_UNUSED_4 OR FM1_UNUSED_4=_CUR.FM1_UNUSED_4 THEN GOTO *NEXT ELSE IF _ORIG.FM1_UNUSED_4=FM1_UNUSED_4 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FM1_UNUSED_4),_CHG_VAR$(64,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FM1_UNUSED_4)
15670 IF _ORIG.EST_YRLY_USAGE=_CUR.EST_YRLY_USAGE OR EST_YRLY_USAGE=_CUR.EST_YRLY_USAGE THEN GOTO *NEXT ELSE IF _ORIG.EST_YRLY_USAGE=EST_YRLY_USAGE THEN _CHG2$=_CHG2$+SEP+MSG("EST_Y_U")+" = "+STR(_CUR.EST_YRLY_USAGE),_CHG_VAR$(65,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("EST_Y_U")+" = "+STR(_CUR.EST_YRLY_USAGE)
15680 IF _ORIG.FIND_FEE_PRCNT=_CUR.FIND_FEE_PRCNT OR FIND_FEE_PRCNT=_CUR.FIND_FEE_PRCNT THEN GOTO *NEXT ELSE IF _ORIG.FIND_FEE_PRCNT=FIND_FEE_PRCNT THEN _CHG2$=_CHG2$+SEP+MSG("FIND_F_P")+" = "+STR(_CUR.FIND_FEE_PRCNT),_CHG_VAR$(66,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIND_F_P")+" = "+STR(_CUR.FIND_FEE_PRCNT)
15690 IF _ORIG.YTD_NUM_INV=_CUR.YTD_NUM_INV OR YTD_NUM_INV=_CUR.YTD_NUM_INV THEN GOTO *NEXT ELSE IF _ORIG.YTD_NUM_INV=YTD_NUM_INV THEN _CHG2$=_CHG2$+SEP+MSG("YTD_N_I")+" = "+STR(_CUR.YTD_NUM_INV),_CHG_VAR$(67,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("YTD_N_I")+" = "+STR(_CUR.YTD_NUM_INV)
15700 IF _ORIG.YTD_QTY=_CUR.YTD_QTY OR YTD_QTY=_CUR.YTD_QTY THEN GOTO *NEXT ELSE IF _ORIG.YTD_QTY=YTD_QTY THEN _CHG2$=_CHG2$+SEP+MSG("YTD_QTY")+" = "+STR(_CUR.YTD_QTY),_CHG_VAR$(68,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("YTD_QTY")+" = "+STR(_CUR.YTD_QTY)
15710 IF _ORIG.YTD_NET_SALE=_CUR.YTD_NET_SALE OR YTD_NET_SALE=_CUR.YTD_NET_SALE THEN GOTO *NEXT ELSE IF _ORIG.YTD_NET_SALE=YTD_NET_SALE THEN _CHG2$=_CHG2$+SEP+MSG("YTD_N_S")+" = "+STR(_CUR.YTD_NET_SALE),_CHG_VAR$(69,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("YTD_N_S")+" = "+STR(_CUR.YTD_NET_SALE)
15720 IF _ORIG.YTD_GP=_CUR.YTD_GP OR YTD_GP=_CUR.YTD_GP THEN GOTO *NEXT ELSE IF _ORIG.YTD_GP=YTD_GP THEN _CHG2$=_CHG2$+SEP+MSG("YTD_GP")+" = "+STR(_CUR.YTD_GP),_CHG_VAR$(70,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("YTD_GP")+" = "+STR(_CUR.YTD_GP)
15730 IF _ORIG.LY_NUM_INV=_CUR.LY_NUM_INV OR LY_NUM_INV=_CUR.LY_NUM_INV THEN GOTO *NEXT ELSE IF _ORIG.LY_NUM_INV=LY_NUM_INV THEN _CHG2$=_CHG2$+SEP+MSG("LY_NUM_INV")+" = "+STR(_CUR.LY_NUM_INV),_CHG_VAR$(71,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LY_NUM_INV")+" = "+STR(_CUR.LY_NUM_INV)
15740 IF _ORIG.LY_QTY=_CUR.LY_QTY OR LY_QTY=_CUR.LY_QTY THEN GOTO *NEXT ELSE IF _ORIG.LY_QTY=LY_QTY THEN _CHG2$=_CHG2$+SEP+MSG("LY_QTY")+" = "+STR(_CUR.LY_QTY),_CHG_VAR$(72,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LY_QTY")+" = "+STR(_CUR.LY_QTY)
15750 IF _ORIG.LY_NET_SALE=_CUR.LY_NET_SALE OR LY_NET_SALE=_CUR.LY_NET_SALE THEN GOTO *NEXT ELSE IF _ORIG.LY_NET_SALE=LY_NET_SALE THEN _CHG2$=_CHG2$+SEP+MSG("L_N_S")+" = "+STR(_CUR.LY_NET_SALE),_CHG_VAR$(73,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("L_N_S")+" = "+STR(_CUR.LY_NET_SALE)
15760 IF _ORIG.LY_GP=_CUR.LY_GP OR LY_GP=_CUR.LY_GP THEN GOTO *NEXT ELSE IF _ORIG.LY_GP=LY_GP THEN _CHG2$=_CHG2$+SEP+MSG("LY_GP")+" = "+STR(_CUR.LY_GP),_CHG_VAR$(74,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LY_GP")+" = "+STR(_CUR.LY_GP)
15770 IF _ORIG.LAST_QTY_ORDERED=_CUR.LAST_QTY_ORDERED OR LAST_QTY_ORDERED=_CUR.LAST_QTY_ORDERED THEN GOTO *NEXT ELSE IF _ORIG.LAST_QTY_ORDERED=LAST_QTY_ORDERED THEN _CHG2$=_CHG2$+SEP+MSG("LAST_Q_O")+" = "+STR(_CUR.LAST_QTY_ORDERED),_CHG_VAR$(75,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LAST_Q_O")+" = "+STR(_CUR.LAST_QTY_ORDERED)
15780 IF _ORIG.COMBO_QTY=_CUR.COMBO_QTY OR COMBO_QTY=_CUR.COMBO_QTY THEN GOTO *NEXT ELSE IF _ORIG.COMBO_QTY=COMBO_QTY THEN _CHG2$=_CHG2$+SEP+MSG("COMBO_QTY")+" = "+STR(_CUR.COMBO_QTY),_CHG_VAR$(76,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMBO_QTY")+" = "+STR(_CUR.COMBO_QTY)
15790 IF _ORIG.CTN_WT=_CUR.CTN_WT OR CTN_WT=_CUR.CTN_WT THEN GOTO *NEXT ELSE IF _ORIG.CTN_WT=CTN_WT THEN _CHG2$=_CHG2$+SEP+MSG("CTN_WT")+" = "+STR(_CUR.CTN_WT),_CHG_VAR$(77,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_WT")+" = "+STR(_CUR.CTN_WT)
15800 IF _ORIG.RO_PT_WEEKS_SUPPLY=_CUR.RO_PT_WEEKS_SUPPLY OR RO_PT_WEEKS_SUPPLY=_CUR.RO_PT_WEEKS_SUPPLY THEN GOTO *NEXT ELSE IF _ORIG.RO_PT_WEEKS_SUPPLY=RO_PT_WEEKS_SUPPLY THEN _CHG2$=_CHG2$+SEP+MSG("R_P_W_S")+" = "+STR(_CUR.RO_PT_WEEKS_SUPPLY),_CHG_VAR$(78,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("R_P_W_S")+" = "+STR(_CUR.RO_PT_WEEKS_SUPPLY)
15810 IF _ORIG.LAST_CASUAL_CNT_QTY=_CUR.LAST_CASUAL_CNT_QTY OR LAST_CASUAL_CNT_QTY=_CUR.LAST_CASUAL_CNT_QTY THEN GOTO *NEXT ELSE IF _ORIG.LAST_CASUAL_CNT_QTY=LAST_CASUAL_CNT_QTY THEN _CHG2$=_CHG2$+SEP+MSG("LAST_C_C_Q")+" = "+STR(_CUR.LAST_CASUAL_CNT_QTY),_CHG_VAR$(79,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LAST_C_C_Q")+" = "+STR(_CUR.LAST_CASUAL_CNT_QTY)
15820 IF _ORIG.STOCK_LEVEL=_CUR.STOCK_LEVEL OR STOCK_LEVEL=_CUR.STOCK_LEVEL THEN GOTO *NEXT ELSE IF _ORIG.STOCK_LEVEL=STOCK_LEVEL THEN _CHG2$=_CHG2$+SEP+MSG("STOC_L")+" = "+STR(_CUR.STOCK_LEVEL),_CHG_VAR$(80,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("STOC_L")+" = "+STR(_CUR.STOCK_LEVEL)
15830 IF _ORIG.RO_PT_DAYS=_CUR.RO_PT_DAYS OR RO_PT_DAYS=_CUR.RO_PT_DAYS THEN GOTO *NEXT ELSE IF _ORIG.RO_PT_DAYS=RO_PT_DAYS THEN _CHG2$=_CHG2$+SEP+MSG("RO_PT_DAYS")+" = "+STR(_CUR.RO_PT_DAYS),_CHG_VAR$(81,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RO_PT_DAYS")+" = "+STR(_CUR.RO_PT_DAYS)
15840 IF _ORIG.RO_PT_QTY=_CUR.RO_PT_QTY OR RO_PT_QTY=_CUR.RO_PT_QTY THEN GOTO *NEXT ELSE IF _ORIG.RO_PT_QTY=RO_PT_QTY THEN _CHG2$=_CHG2$+SEP+MSG("RO_PT_QTY")+" = "+STR(_CUR.RO_PT_QTY),_CHG_VAR$(82,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RO_PT_QTY")+" = "+STR(_CUR.RO_PT_QTY)
15850 IF _ORIG.AVG_MTHLY_USAGE=_CUR.AVG_MTHLY_USAGE OR AVG_MTHLY_USAGE=_CUR.AVG_MTHLY_USAGE THEN GOTO *NEXT ELSE IF _ORIG.AVG_MTHLY_USAGE=AVG_MTHLY_USAGE THEN _CHG2$=_CHG2$+SEP+MSG("AVG_M_U")+" = "+STR(_CUR.AVG_MTHLY_USAGE),_CHG_VAR$(83,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AVG_M_U")+" = "+STR(_CUR.AVG_MTHLY_USAGE)
15860 IF _ORIG.ALT_UNIT_QTY_PER_1=_CUR.ALT_UNIT_QTY_PER_1 OR ALT_UNIT_QTY_PER_1=_CUR.ALT_UNIT_QTY_PER_1 THEN GOTO *NEXT ELSE IF _ORIG.ALT_UNIT_QTY_PER_1=ALT_UNIT_QTY_PER_1 THEN _CHG2$=_CHG2$+SEP+MSG("A_U_Q_P_1")+" = "+STR(_CUR.ALT_UNIT_QTY_PER_1),_CHG_VAR$(84,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("A_U_Q_P_1")+" = "+STR(_CUR.ALT_UNIT_QTY_PER_1)
15870 IF _ORIG.ALT_UNIT_QTY_PER_2=_CUR.ALT_UNIT_QTY_PER_2 OR ALT_UNIT_QTY_PER_2=_CUR.ALT_UNIT_QTY_PER_2 THEN GOTO *NEXT ELSE IF _ORIG.ALT_UNIT_QTY_PER_2=ALT_UNIT_QTY_PER_2 THEN _CHG2$=_CHG2$+SEP+MSG("A_U_Q_P_2")+" = "+STR(_CUR.ALT_UNIT_QTY_PER_2),_CHG_VAR$(85,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("A_U_Q_P_2")+" = "+STR(_CUR.ALT_UNIT_QTY_PER_2)
15880 IF _ORIG.ALT_UNIT_QTY_PER_3=_CUR.ALT_UNIT_QTY_PER_3 OR ALT_UNIT_QTY_PER_3=_CUR.ALT_UNIT_QTY_PER_3 THEN GOTO *NEXT ELSE IF _ORIG.ALT_UNIT_QTY_PER_3=ALT_UNIT_QTY_PER_3 THEN _CHG2$=_CHG2$+SEP+MSG("A_U_Q_P_3")+" = "+STR(_CUR.ALT_UNIT_QTY_PER_3),_CHG_VAR$(86,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("A_U_Q_P_3")+" = "+STR(_CUR.ALT_UNIT_QTY_PER_3)
15890 IF _ORIG.ALT_UNIT_QTY_PER_4=_CUR.ALT_UNIT_QTY_PER_4 OR ALT_UNIT_QTY_PER_4=_CUR.ALT_UNIT_QTY_PER_4 THEN GOTO *NEXT ELSE IF _ORIG.ALT_UNIT_QTY_PER_4=ALT_UNIT_QTY_PER_4 THEN _CHG2$=_CHG2$+SEP+MSG("A_U_Q_P_4")+" = "+STR(_CUR.ALT_UNIT_QTY_PER_4),_CHG_VAR$(87,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("A_U_Q_P_4")+" = "+STR(_CUR.ALT_UNIT_QTY_PER_4)
15900 IF _ORIG.FMS_PRICE=_CUR.FMS_PRICE OR FMS_PRICE=_CUR.FMS_PRICE THEN GOTO *NEXT ELSE IF _ORIG.FMS_PRICE=FMS_PRICE THEN _CHG2$=_CHG2$+SEP+MSG("FMS_PRICE")+" = "+STR(_CUR.FMS_PRICE),_CHG_VAR$(88,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FMS_PRICE")+" = "+STR(_CUR.FMS_PRICE)
15910 IF _ORIG.FMS_PRCNT=_CUR.FMS_PRCNT OR FMS_PRCNT=_CUR.FMS_PRCNT THEN GOTO *NEXT ELSE IF _ORIG.FMS_PRCNT=FMS_PRCNT THEN _CHG2$=_CHG2$+SEP+MSG("FMS_PRCNT")+" = "+STR(_CUR.FMS_PRCNT),_CHG_VAR$(89,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FMS_PRCNT")+" = "+STR(_CUR.FMS_PRCNT)
15915 IF _ORIG.TAX_TYPE$=_CUR.TAX_TYPE$ OR TAX_TYPE$=_CUR.TAX_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.TAX_TYPE$=TAX_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("TAX_TYPE ")+" = "+STR(_CUR.TAX_TYPE),_CHG_VAR$(90,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TAX_TYPE")+" = "+STR(_CUR.TAX_TYPE); REM SSP 201823
15920 IF _ORIG.REQUISITION_MAXIMUM=_CUR.REQUISITION_MAXIMUM OR REQUISITION_MAXIMUM=_CUR.REQUISITION_MAXIMUM THEN GOTO *NEXT ELSE IF _ORIG.REQUISITION_MAXIMUM=REQUISITION_MAXIMUM THEN _CHG2$=_CHG2$+SEP+MSG("REQU_M")+" = "+STR(_CUR.REQUISITION_MAXIMUM),_CHG_VAR$(90,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REQU_M")+" = "+STR(_CUR.REQUISITION_MAXIMUM)
15925 IF _ORIG.RON_MONTHS$=_CUR.RON_MONTHS$ OR RON_MONTHS$=_CUR.RON_MONTHS$ THEN GOTO *NEXT ELSE IF _ORIG.RON_MONTHS$=RON_MONTHS$ THEN _CHG2$=_CHG2$+SEP+MSG("SUGG_R_N_M")+" = "+_CUR.RON_MONTHS$,_CHG_VAR$(92,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SUGG_R_N_M")+" = "+_CUR.RON_MONTHS$ ! SSP197206 jdf
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16030 IF _CHG_VAR$(2,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16040 IF _CHG_VAR$(3,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16050 IF _CHG_VAR$(4,1)="Y" THEN PROD_CODE$=_CUR.PROD_CODE$
16060 IF _CHG_VAR$(5,1)="Y" THEN LEFT_RIGHT$=_CUR.LEFT_RIGHT$
16070 IF _CHG_VAR$(6,1)="Y" THEN TOP_BOTTOM$=_CUR.TOP_BOTTOM$
16080 IF _CHG_VAR$(7,1)="Y" THEN PLYS$=_CUR.PLYS$
16090 IF _CHG_VAR$(8,1)="Y" THEN ITEM_DESC$=_CUR.ITEM_DESC$
16100 IF _CHG_VAR$(9,1)="Y" THEN VEND_DIV$=_CUR.VEND_DIV$
16110 IF _CHG_VAR$(10,1)="Y" THEN VEND_CODE$=_CUR.VEND_CODE$
16120 IF _CHG_VAR$(11,1)="Y" THEN PLANT_CODE$=_CUR.PLANT_CODE$
16130 IF _CHG_VAR$(12,1)="Y" THEN COST_UM$=_CUR.COST_UM$
16140 IF _CHG_VAR$(13,1)="Y" THEN SELL_UM$=_CUR.SELL_UM$
16150 IF _CHG_VAR$(14,1)="Y" THEN NUMBERING$=_CUR.NUMBERING$
16160 IF _CHG_VAR$(15,1)="Y" THEN DIST_ITEM$=_CUR.DIST_ITEM$
16170 IF _CHG_VAR$(16,1)="Y" THEN FM1_UNUSED_1$=_CUR.FM1_UNUSED_1$
16180 IF _CHG_VAR$(17,1)="Y" THEN FMS$=_CUR.FMS$
16190 IF _CHG_VAR$(18,1)="Y" THEN RO_DATE$=_CUR.RO_DATE$
16200 IF _CHG_VAR$(19,1)="Y" THEN FIND_FEE$=_CUR.FIND_FEE$
16210 IF _CHG_VAR$(20,1)="Y" THEN FIND_FEE_VEND_DIV$=_CUR.FIND_FEE_VEND_DIV$
16220 IF _CHG_VAR$(21,1)="Y" THEN FIND_FEE_VEND_CODE$=_CUR.FIND_FEE_VEND_CODE$
16230 IF _CHG_VAR$(22,1)="Y" THEN LAST_ORDER_DATE$=_CUR.LAST_ORDER_DATE$
16240 IF _CHG_VAR$(23,1)="Y" THEN LAST_ORDER_DIV$=_CUR.LAST_ORDER_DIV$
16250 IF _CHG_VAR$(24,1)="Y" THEN LAST_ORDER_NUM$=_CUR.LAST_ORDER_NUM$
16260 IF _CHG_VAR$(25,1)="Y" THEN ENDING_NUM$=_CUR.ENDING_NUM$
16270 IF _CHG_VAR$(26,1)="Y" THEN PREV_JOB_NUM$=_CUR.PREV_JOB_NUM$
16280 IF _CHG_VAR$(27,1)="Y" THEN PREV_JOB_NUM_DATE$=_CUR.PREV_JOB_NUM_DATE$
16290 IF _CHG_VAR$(28,1)="Y" THEN ITEM_REVISION$=_CUR.ITEM_REVISION$
16300 IF _CHG_VAR$(29,1)="Y" THEN FUNC_CODE$=_CUR.FUNC_CODE$
16310 IF _CHG_VAR$(30,1)="Y" THEN SRC_CUST_DIV$=_CUR.SRC_CUST_DIV$
16320 IF _CHG_VAR$(31,1)="Y" THEN SRC_CUST_CODE$=_CUR.SRC_CUST_CODE$
16330 IF _CHG_VAR$(32,1)="Y" THEN ACTIVE_STATUS$=_CUR.ACTIVE_STATUS$
16340 IF _CHG_VAR$(33,1)="Y" THEN FM1_UNUSED_2$=_CUR.FM1_UNUSED_2$
16350 IF _CHG_VAR$(34,1)="Y" THEN PREV_ITEM_CODE$=_CUR.PREV_ITEM_CODE$
16360 IF _CHG_VAR$(35,1)="Y" THEN ITEM_CONT_CODE$=_CUR.ITEM_CONT_CODE$
16370 IF _CHG_VAR$(36,1)="Y" THEN ITEM_GROUP_CODE$=_CUR.ITEM_GROUP_CODE$
16380 IF _CHG_VAR$(37,1)="Y" THEN ART_DISK_FILE$=_CUR.ART_DISK_FILE$
16390 IF _CHG_VAR$(38,1)="Y" THEN ART_STATUS_CODE$=_CUR.ART_STATUS_CODE$
16400 IF _CHG_VAR$(39,1)="Y" THEN ART_STAT_DATE$=_CUR.ART_STAT_DATE$
16410 IF _CHG_VAR$(40,1)="Y" THEN ALT_UM_1$=_CUR.ALT_UM_1$
16420 IF _CHG_VAR$(41,1)="Y" THEN ALT_UM_2$=_CUR.ALT_UM_2$
16430 IF _CHG_VAR$(42,1)="Y" THEN ALT_UM_3$=_CUR.ALT_UM_3$
16440 IF _CHG_VAR$(43,1)="Y" THEN ALT_UM_4$=_CUR.ALT_UM_4$
16450 IF _CHG_VAR$(44,1)="Y" THEN ITEM_STAT_CODE$=_CUR.ITEM_STAT_CODE$
16460 IF _CHG_VAR$(45,1)="Y" THEN ITEM_STAT_DATE$=_CUR.ITEM_STAT_DATE$
16470 IF _CHG_VAR$(46,1)="Y" THEN ITEM_STAT_MEMO$=_CUR.ITEM_STAT_MEMO$
16480 IF _CHG_VAR$(47,1)="Y" THEN AUTO_PRICE_EST_GROUP$=_CUR.AUTO_PRICE_EST_GROUP$
16490 IF _CHG_VAR$(48,1)="Y" THEN AUTO_PRICE_FEATURES$=_CUR.AUTO_PRICE_FEATURES$
16500 IF _CHG_VAR$(49,1)="Y" THEN REQ_ACCESS_CNTL_CODE$=_CUR.REQ_ACCESS_CNTL_CODE$
16510 IF _CHG_VAR$(50,1)="Y" THEN NO_RON_TIL$=_CUR.NO_RON_TIL$
16520 IF _CHG_VAR$(51,1)="Y" THEN CASUAL_CNT_DATE$=_CUR.CASUAL_CNT_DATE$
16530 IF _CHG_VAR$(52,1)="Y" THEN ITEM_1ST_USED$=_CUR.ITEM_1ST_USED$
16540 IF _CHG_VAR$(53,1)="Y" THEN ITEM_LAST_WHSE_SHIP$=_CUR.ITEM_LAST_WHSE_SHIP$
16550 IF _CHG_VAR$(54,1)="Y" THEN DFLT_COST_CODE$=_CUR.DFLT_COST_CODE$
16560 IF _CHG_VAR$(55,1)="Y" THEN CIC$=_CUR.CIC$
16570 IF _CHG_VAR$(56,1)="Y" THEN SPEC_CODE$=_CUR.SPEC_CODE$
16580 IF _CHG_VAR$(57,1)="Y" THEN FM1_UNUSED_3$=_CUR.FM1_UNUSED_3$
16590 IF _CHG_VAR$(58,1)="Y" THEN TF_MEMO$=_CUR.TF_MEMO$
16600 IF _CHG_VAR$(59,1)="Y" THEN CTN_PACK=_CUR.CTN_PACK
16610 IF _CHG_VAR$(60,1)="Y" THEN TF_COST=_CUR.TF_COST
16620 IF _CHG_VAR$(61,1)="Y" THEN COST_QTY_PER=_CUR.COST_QTY_PER
16630 IF _CHG_VAR$(62,1)="Y" THEN PRICE=_CUR.PRICE
16640 IF _CHG_VAR$(63,1)="Y" THEN SELL_QTY_PER=_CUR.SELL_QTY_PER
16650 IF _CHG_VAR$(64,1)="Y" THEN FM1_UNUSED_4=_CUR.FM1_UNUSED_4
16660 IF _CHG_VAR$(65,1)="Y" THEN EST_YRLY_USAGE=_CUR.EST_YRLY_USAGE
16670 IF _CHG_VAR$(66,1)="Y" THEN FIND_FEE_PRCNT=_CUR.FIND_FEE_PRCNT
16680 IF _CHG_VAR$(67,1)="Y" THEN YTD_NUM_INV=_CUR.YTD_NUM_INV
16690 IF _CHG_VAR$(68,1)="Y" THEN YTD_QTY=_CUR.YTD_QTY
16700 IF _CHG_VAR$(69,1)="Y" THEN YTD_NET_SALE=_CUR.YTD_NET_SALE
16710 IF _CHG_VAR$(70,1)="Y" THEN YTD_GP=_CUR.YTD_GP
16720 IF _CHG_VAR$(71,1)="Y" THEN LY_NUM_INV=_CUR.LY_NUM_INV
16730 IF _CHG_VAR$(72,1)="Y" THEN LY_QTY=_CUR.LY_QTY
16740 IF _CHG_VAR$(73,1)="Y" THEN LY_NET_SALE=_CUR.LY_NET_SALE
16750 IF _CHG_VAR$(74,1)="Y" THEN LY_GP=_CUR.LY_GP
16760 IF _CHG_VAR$(75,1)="Y" THEN LAST_QTY_ORDERED=_CUR.LAST_QTY_ORDERED
16770 IF _CHG_VAR$(76,1)="Y" THEN COMBO_QTY=_CUR.COMBO_QTY
16780 IF _CHG_VAR$(77,1)="Y" THEN CTN_WT=_CUR.CTN_WT
16790 IF _CHG_VAR$(78,1)="Y" THEN RO_PT_WEEKS_SUPPLY=_CUR.RO_PT_WEEKS_SUPPLY
16800 IF _CHG_VAR$(79,1)="Y" THEN LAST_CASUAL_CNT_QTY=_CUR.LAST_CASUAL_CNT_QTY
16810 IF _CHG_VAR$(80,1)="Y" THEN STOCK_LEVEL=_CUR.STOCK_LEVEL
16820 IF _CHG_VAR$(81,1)="Y" THEN RO_PT_DAYS=_CUR.RO_PT_DAYS
16830 IF _CHG_VAR$(82,1)="Y" THEN RO_PT_QTY=_CUR.RO_PT_QTY
16840 IF _CHG_VAR$(83,1)="Y" THEN AVG_MTHLY_USAGE=_CUR.AVG_MTHLY_USAGE
16850 IF _CHG_VAR$(84,1)="Y" THEN ALT_UNIT_QTY_PER_1=_CUR.ALT_UNIT_QTY_PER_1
16860 IF _CHG_VAR$(85,1)="Y" THEN ALT_UNIT_QTY_PER_2=_CUR.ALT_UNIT_QTY_PER_2
16870 IF _CHG_VAR$(86,1)="Y" THEN ALT_UNIT_QTY_PER_3=_CUR.ALT_UNIT_QTY_PER_3
16880 IF _CHG_VAR$(87,1)="Y" THEN ALT_UNIT_QTY_PER_4=_CUR.ALT_UNIT_QTY_PER_4
16890 IF _CHG_VAR$(88,1)="Y" THEN FMS_PRICE=_CUR.FMS_PRICE
16900 IF _CHG_VAR$(89,1)="Y" THEN FMS_PRCNT=_CUR.FMS_PRCNT
16910 IF _CHG_VAR$(90,1)="Y" THEN REQUISITION_MAXIMUM=_CUR.REQUISITION_MAXIMUM
16920 IF _CHG_VAR$(91,1)="Y" THEN TAX_TYPE$=_CUR.TAX_TYPE$; REM SSP 201823
16930 IF _CHG_VAR$(92,1)="Y" THEN RON_MONTHS$=_CUR.RON_MONTHS$ ! SSP197206 jdf
16935 IF _CHG_VAR$(93,1)="Y" THEN ESTATUS$=_CUR.ESTATUS$ ! SSP 307387
17000 RETURN 
18000 SEL_PRICE:
18002 IF ID$="TF_COST" OR FMS$="Y" THEN GOTO 18005 ELSE RETURN ! SSP 191604
18005 ! IF FMS$<>"Y" THEN RETURN ;!SSP 191604
18010 SP0=HFN; OPEN (SP0)"SP0"+%C$ ! SSP 191604
18015 GOSUB STR_TO_NUM ! SSP 191604
18025 IF ID$="TF_COST" THEN CALL "UPDSP0;GET_IGP",SP0,CUSTOMER$+ITEM_CODE$,PRICE,TF_COST,NEWPRICE,COST_QTY_PER,SELL_QTY_PER,FOUNDSP0; IF FOUNDSP0 AND NEWPRICE<>PRICE THEN PRICE=NEWPRICE ! SSP 191604
18035 FMSPERCENT=FMS_PRCNT
18040 CALL "UPDSP0;DETERMINE_FMS",SP0,CUSTOMER$,ITEM_CODE$,FMS_PRICE,TF_COST,NEWFMS,FMSPERCENT,PRICE,COST_QTY_PER,SELL_QTY_PER
18045 FMS_PRICE=NEWFMS
18050 GOSUB NUM_TO_STR
18060 REFRESH_FLG=1
18070 CLOSE (SP0)
18080 RETURN 
20000 ! 20000
20005 LOAD_CLASS_VARS:
20010 CALL "ZZWLKU;parse_cust",CUSTOMER$,CUST_DIV$,CUST_CODE$
20015 CUSTOMER$=CUST_DIV$+CUST_CODE$,%CUSTOMER$=CUSTOMER$
20020 CALL "ZZWLKU;PARSE_VEND",FIND_FEE_VENDOR$,FIND_FEE_VEND_DIV$,FIND_FEE_VEND_CODE$
20025 CALL "ZZWLKU;PARSE_VEND",VENDOR$,VEND_DIV$,VEND_CODE$
20030 VENDOR$=VEND_DIV$+VEND_CODE$,%PLANT_VEND$=VENDOR$,%VENDOR$=VENDOR$
20035 CALL "ZZWLKU;PARSE_ORD",LAST_ORDER$,LAST_ORDER_DIV$,LAST_ORDER_NUM$
20040 CALL "ZZWLKU;PARSE_CUST",SRC_CUSTOMER$,SRC_CUST_DIV$,SRC_CUST_CODE$
20041 SRC_CUSTOMER$=SRC_CUST_DIV$+SRC_CUST_CODE$
20045 %ITEM_CODE$=ITEM_CODE$
20050 GOSUB CALC_PERCENTAGES
20055 RETURN 
20060 ! 
20065 UPDATE_CLASS_VARS:
20070 CUSTOMER$=CUST_DIV$+CUST_CODE$,%CUSTOMER$=CUSTOMER$
20075 FIND_FEE_VENDOR$=FIND_FEE_VEND_DIV$+FIND_FEE_VEND_CODE$
20080 VENDOR$=VEND_DIV$+VEND_CODE$,%PLANT_VEND$=VENDOR$,%VENDOR$=VENDOR$
20082 CALL "ZZWLKU;vend_code_fmt",VENDOR$ ! SSP#286786
20085 LAST_ORDER$=LAST_ORDER_DIV$+LAST_ORDER_NUM$
20090 SRC_CUSTOMER$=SRC_CUST_DIV$+SRC_CUST_CODE$
20095 %ITEM_CODE$=ITEM_CODE$
20100 GOSUB CALC_PERCENTAGES
20105 RETURN 
20110 ! 
20115 CALC_PERCENTAGES:
20120 IF YTD_NET_SALE=0 THEN YTD_GP_PRC$=STR(0) ELSE YTD_GP_PRC$=STR(YTD_GP*100/YTD_NET_SALE)
20125 ! IF NUM(YTD_NET_SALE$,ERR=*NEXT)=0 THEN YTD_GP_PRC$=STR(0) ELSE YTD_GP_PRC$=STR(NUM(YTD_GP$,ERR=*NEXT)*100/NUM(YTD_NET_SALE$,ERR=*NEXT))
20130 IF LY_NET_SALE=0 THEN LY_GP_PRC$=STR(0) ELSE LY_GP_PRC$=STR(LY_GP*100/LY_NET_SALE)
20135 ! IF NUM(LY_NET_SALE$,ERR=*NEXT)=0 THEN LY_GP_PRC$=STR(0) ELSE LY_GP_PRC$=STR(NUM(LY_GP$,ERR=*NEXT)*100/NUM(LY_NET_SALE$,ERR=*NEXT))
20140 RETURN 
20145 ! 
20150 LOAD_FIND_FEE:
20155 DROP_BOX LOAD FIND_FEE.CTL,MSG("SALES")+DLM+MSG("GROSS_PFT")+DLM+MSG("COST")+DLM+MSG("NONE")+DLM
20160 FIND_FEE.CTL'TBL$="SGC "
20165 RETURN 
20170 ! 
20175 FIND_FEE_READ:
20180 DROP_BOX READ FIND_FEE.CTL,FIND_FEE$
20185 GOSUB ENABLE_FEE
20190 RETURN 
20195 ! 
20200 ENABLE_FEE:
20205 IF STP(FIND_FEE$,2)="" THEN {
20210 CALL "*wingrp;Disable",FEE.GRP$
20215 FIND_FEE_PRCNT$="",FIND_FEE_PRCNT=0,FIND_FEE_VEND_DIV$="",FIND_FEE_VEND_CODE$="",FIND_FEE_VENDOR$=""
20220  } ELSE {
20225 CALL "*wingrp;Enable",FEE.GRP$
20230  }
20235 RETURN 
20240 ! 
22000 SET_CHECK_BOX_FIELD_VALUES:
22010 IF DIST_ITEM$=" " THEN DIST_ITEM$="N"
22015 IF NUMBERING$=" " THEN NUMBERING$="N"
22020 IF FMS$=" " AND STP(%CUST_PARM_A$)<>"" THEN FMS$=%CUST_PARM_A$(12,1) ELSE IF FMS$=" " AND STP(%CUST_PARM_A$)="" THEN FMS$="N" ! SSP#228688
22040 SET_CHECK_BOX_FIELD_VALUES_END:RETURN 
22045 ! 
22050 VENDOR_ENTRY:
22060 GOSUB LOAD_CLASS_VARS
22070 GOSUB ENABLE_VENDOR
22090 VENDOR_ENTRY_END:EXIT 
22095 ! 
22100 ART_STATUS_VAL:ENTER FIELD$,ERR_MSG$,VAR_TAG$,ERR=ART_STATUS
22105 ART_STATUS_FMT:ENTER FIELD$,VAR_TAG$,ERR=*NEXT
22110 ART_STATUS:
22113 %ART_STATUS_DESC$=""
22115 IF STP(FIELD$,2)="" THEN EXIT 
22120 _FMP=HFN; OPEN (_FMP,ERR=OPEN_ERR)"FMP"+%C$
22125 READ (_FMP,KEY="b"+FIELD$,DOM=*NEXT)FMP$; %ART_STATUS_DESC$=FMP$(3,30); GOTO ART_STATUS_VAL_END
22130 ERR_MSG$="Art status flag not found"
22140 ART_STATUS_VAL_END:CLOSE (_FMP); EXIT 
22145 ! 
23000 FORMAT_PLYS:ENTER FIELD$,ERR_MSG$,VAR_TAG$,ERR=*NEXT
23010 IF FIELD$="" THEN GOTO FORMAT_PLYS_END
23020 IF FN%NMV(FIELD$)<=0 THEN ERR_MSG$="Entry must be numeric"
23040 FORMAT_PLYS_END:EXIT 
23045 ! 
23050 READ_CUST_PARMS:
23060 _FMP=HFN; OPEN (_FMP,ERR=OPEN_ERR)"FMP"+%C$
23065 %CUST_PARM_D$="",%CUST_PARM_D=0; READ (_FMP,KEY="D"+CUSTOMER$,DOM=*NEXT)%CUST_PARM_D$,*,%CUST_PARM_D
23070 %CUST_PARM_A$=""; READ (_FMP,KEY="A"+CUSTOMER$,DOM=*NEXT)%CUST_PARM_A$
23090 READ_CUST_PARMS_END:CLOSE (_FMP); RETURN 
23095 ! 
24000 ENABLE_FMS:
24010 IF FMS$<>"Y" THEN {
24015 CALL "*wingrp;Disable",FMS.GRP$
24020 FMS_PRICE=0,FMS_PRICE$="",FMS_PRCNT=0,FMS_PRCNT$=""
24025  } ELSE {
24030 CALL "*wingrp;Enable",FMS.GRP$
24035  }
24040 ENABLE_FMS_END:RETURN 
24045 ! 
24050 ENABLE_FMS2:
24060 IF POS(MID(%CUST_PARM_D$,24,1)="YU")=0 THEN {
24065 CALL "*wingrp;Disable",FMS2.GRP$
24070 FMS$="N",FMS_PRICE=0,FMS_PRICE$="",FMS_PRCNT=0,FMS_PRCNT$=""
24075  } ELSE {
24080 CALL "*wingrp;enable",FMS2.GRP$
24085  }
24090 ENABLE_FMS2_END:RETURN 
24095 ! 
24100 ENABLE_VENDOR:
24110 IF STP(VENDOR$,2)="" THEN {
24115 CALL "*wingrp;Disable",VENDOR.GRP$
24120 VEND_DIV$="",VEND_CODE$="",VENDOR$="",PLANT_CODE$="",%VEND_NAME$="",%PLANT_NAME$="",%PLANT_VEND$="",%VENDOR$=""
24125  } ELSE {
24130 CALL "*wingrp;Enable",VENDOR.GRP$
24135  }
24140 ENABLE_VENDOR_END:RETURN 
24145 ! 
24150 ENABLE_DEPT:
24160 IF MID(%CUST_PARM_D$,236,1)<>"Y" THEN {
24165 CALL "*wingrp;Disable",DEPT.GRP$
24170 DFLT_COST_CODE$="",DEPT$=""
24175  } ELSE {
24180 CALL "*wingrp;Enable",DEPT.GRP$
24185  }
24190 ENABLE_DEPT_END:RETURN 
24195 ! 
24200 ENABLE_MEMO:
24210 IF MID(%OPS_PARM$,198,1)<>"Y" THEN {
24215 CALL "*wingrp;Disable",MEMO.GRP$
24220 TF_MEMO$=""
24225  } ELSE {
24230 CALL "*wingrp;Enable",MEMO.GRP$
24235  }
24240 ENABLE_MEMO_END:RETURN 
24245 ! 
24250 ENABLE_CIC:
24260 IF MID(%OPS_PARM$,246,1)<>"Y" THEN {
24265 CALL "*wingrp;Disable",CIC.GRP$
24270 CIC$=""
24275  } ELSE {
24280 CALL "*wingrp;Enable",CIC.GRP$
24285  }
24290 ENABLE_CIC_END:RETURN 
24295 ! 
24300 CIC_ENTRY:ENTER FIELD$,ERR_MSG$,VAR_TAG$,ERR=*NEXT
24310 IF CVS(FIELD$,3)="" THEN GOTO CIC_ENTRY_END ELSE FIELD$=PAD(FIELD$,20)
24315 CIC_ITEM$=FIELD$; CALL "FSGDAK",X3$,X4$,1,%CUSTOMER$,"",CIC_ITEM$,TF_ITEM$
24320 IF POS(" "<>TF_ITEM$)>0 THEN ERR_MSG$="INVALID! This CIC already points to item code: "+TF_ITEM$
24340 CIC_ENTRY_END:EXIT 
24345 ! 
24350 ENABLE_FEATURE_DRIVEN_PRICING:
24360 IF MID(%OPS_PARM$,149,1)<>"Y" THEN {
24365 CALL "*wingrp;Disable",FEATURE.GRP$
24370 AUTO_PRICE_EST_GROUP$="",AUTO_PRICE_FEATURES$=""
24375  } ELSE {
24380 CALL "*wingrp;Enable",FEATURE.GRP$
24385  }
24390 ENABLE_FEATURE_DRIVEN_PRICING_END:RETURN 
24395 ! 
24400 COST_UM_ENTRY:
24410 Q4=Q3; COST_UM$=PAD(COST_UM$,4)
24415 DIM COST_UNIT$(21),COST_UNIT[1]; FIND (_ZZPARM,KEY="U/M"+COST_UM$,DOM=*NEXT)COST_UNIT$,COST_UNIT[0],COST_UNIT[1]
24420 P2=NUM(COST_QTY_PER$,ERR=NON_NUMERIC)
24425 IF COST_UNIT$(20,1)<>"Y" THEN CALL "*wingrp;Enable",COST_UNIT.GRP$; GOTO COST_UM_ENTRY_END
24430 CALL "*wingrp;Disable",COST_UNIT.GRP$; IF COST_UNIT[0]<>0 THEN COST_QTY_PER$=STR(COST_UNIT[0]) ELSE COST_QTY_PER$=STR(COST_UNIT[1])
24435 Q3=COST_UNIT[1],Q3=1; IF Q3<>Q4 THEN GOSUB DISPLAY_COST_DEPENDENT_QTYS
24437 IF P2<>NUM(COST_QTY_PER$,ERR=NON_NUMERIC) THEN GOSUB CHANGE_COST
24440 COST_UM_ENTRY_END:RETURN 
24445 ! 
24450 SELL_UM_ENTRY:
24460 Q2=Q1,SELL_UM$=PAD(SELL_UM$,4)
24465 DIM SELL_UNIT$(21),SELL_UNIT[1]; FIND (_ZZPARM,KEY="U/M"+SELL_UM$,DOM=*NEXT)SELL_UNIT$,SELL_UNIT[0],SELL_UNIT[1]
24470 P1=NUM(SELL_QTY_PER$,ERR=NON_NUMERIC)
24475 IF SELL_UNIT$(20,1)<>"Y" THEN CALL "*wingrp;Enable",SELL_UNIT.GRP$; GOTO SELL_UM_ENTRY_END
24480 CALL "*wingrp;Disable",SELL_UNIT.GRP$; IF SELL_UNIT[0]<>0 THEN SELL_QTY_PER$=STR(SELL_UNIT[0]) ELSE SELL_QTY_PER$=STR(SELL_UNIT[1])
24485 Q1=SELL_UNIT[1],Q1=1; IF Q1<>Q2 THEN GOSUB DISPLAY_PRICE_DEPENDENT_QTYS
24487 IF P1<>NUM(SELL_QTY_PER$,ERR=NON_NUMERIC) THEN GOSUB CHANGE_PRICE
24490 SELL_UM_ENTRY_END:RETURN 
24495 ! 
24500 SELL_QTY_PER_ENTRY:
24510 IF SELL_UNIT$(20,1)<>"Y" THEN Q1=NUM(SELL_QTY_PER$,ERR=NON_NUMERIC)
24515 Q1=1; IF Q1<>Q2 THEN GOSUB DISPLAY_PRICE_DEPENDENT_QTYS
24520 IF P1<>NUM(SELL_QTY_PER$,ERR=NON_NUMERIC) THEN GOSUB CHANGE_PRICE
24540 SELL_QTY_PER_ENTRY_END:RETURN 
24545 ! 
24550 DISPLAY_PRICE_DEPENDENT_QTYS:
24590 DISPLAY_PRICE_DEPENDENT_QTYS_END:RETURN 
24595 ! 
24600 CHANGE_PRICE:
24610 IF P1<>0 THEN PRICE$=STR(NUM(PRICE$,ERR=NON_NUMERIC)*NUM(SELL_QTY_PER$,ERR=NON_NUMERIC)/P1)
24620 IF P1<>0 AND P1<>NUM(SELL_QTY_PER$,ERR=NON_NUMERIC) THEN FMS_PRICE$=STR(NUM(FMS_PRICE$,ERR=NON_NUMERIC)*NUM(SELL_QTY_PER$,ERR=NON_NUMERIC)/P1)
24640 CHANGE_PRICE_END:RETURN 
24645 ! 
24650 COST_QTY_PER_ENTRY:
24660 IF COST_UNIT$(20,1)<>"Y" THEN Q3=NUM(COST_QTY_PER$,ERR=NON_NUMERIC)
24665 Q3=1; IF Q3<>Q4 THEN GOSUB DISPLAY_COST_DEPENDENT_QTYS
24670 IF P2<>NUM(COST_QTY_PER$,ERR=NON_NUMERIC) THEN GOSUB CHANGE_COST
24690 COST_QTY_PER_ENTRY_END:RETURN 
24700 DISPLAY_COST_DEPENDENT_QTYS:
24740 DISPLAY_COST_DEPENDENT_QTYS_END:RETURN 
24745 ! 
24750 CHANGE_COST:
24760 IF P2<>0 THEN TF_COST$=STR(NUM(TF_COST$,ERR=NON_NUMERIC)*NUM(COST_QTY_PER$,ERR=NON_NUMERIC)/P2)
24790 CHANGE_COST_END:RETURN 
24795 ! 
24800 YTD_NET_SALE_ENTRY:
24810 YTD_GP_PRC$=STR(0); IF NUM(YTD_NET_SALE$,ERR=*NEXT)<>0 THEN YTD_GP_PRC$=STR(NUM(YTD_GP$,ERR=*NEXT)*100/NUM(YTD_NET_SALE$,ERR=*NEXT))
24840 YTD_NET_SALE_ENTRY_END:RETURN 
24845 ! 
24850 YTD_GP_ENTRY:
24860 GOSUB YTD_NET_SALE_ENTRY
24890 YTD_GP_ENTRY_END:RETURN 
24895 ! 
24900 LY_NET_SALE_ENTRY:
24910 LY_GP_PRC$=STR(0); IF NUM(LY_NET_SALE$,ERR=*NEXT)<>0 THEN LY_GP_PRC$=STR(NUM(LY_GP$,ERR=*NEXT)*100/NUM(LY_NET_SALE$,ERR=*NEXT))
24940 LY_NET_SALE_ENTRY_END:RETURN 
24945 ! 
24950 LY_GP_ENTRY:
24960 GOSUB LY_NET_SALE_ENTRY
24990 LY_GP_ENTRY_END:RETURN 
24995 ! 
30000 WRITE_SORT_FILES:
30005 IF OLD_FT1_KEY$<>"" THEN REMOVE (_FT1,KEY=OLD_FT1_KEY$,DOM=*NEXT)
30010 IF CVS(CIC$,3)<>"" THEN WRITE (_FT1,KEY=PAD(CUST_DIV$,2)+PAD(CUST_CODE$,8)+PAD(CIC$,20)+PAD(ITEM_CODE$,10))
30015 IF OLD_FM2_KEY$<>"" THEN REMOVE (_FM2,KEY=OLD_FM2_KEY$,DOM=*NEXT)
30020 IF %RFQ THEN WRITE (_FM2,KEY=PAD(PROD_CODE$,3)+PAD(LEFT_RIGHT$,8)+PAD(TOP_BOTTOM$,8)+PAD(PLYS$,2)+%SPEC$) ELSE WRITE (_FM2,KEY=PAD(PROD_CODE$,3)+PAD(LEFT_RIGHT$,8)+PAD(TOP_BOTTOM$,8)+PAD(PLYS$,2)+PAD(ITEM_CODE$,10)+PAD(CUST_DIV$,2)+PAD(CUST_CODE$,8)) ! SSP206206 jdf
30025 IF OLD_FMG_KEY$<>"" THEN REMOVE (_FMG,KEY=OLD_FMG_KEY$,DOM=*NEXT)
30030 IF CVS(SRC_CUST_DIV$,3)<>"" AND CVS(SRC_CUST_CODE$,3)<>"" THEN WRITE (_FMG,KEY=PAD(SRC_CUST_DIV$,2)+PAD(SRC_CUST_CODE$,8)+PAD(ITEM_CODE$,10)+PAD(CUST_DIV$,2)+PAD(CUST_CODE$,8))
30090 WRITE_SORT_FILES_END:RETURN 
30095 ! 
30100 HIDE_GROUPS:
30110 IF MID(%OPS_PARM$,198,1)<>"Y" THEN CALL "*wingrp;Hide",MEMO.GRP$
30120 IF MID(%OPS_PARM$,246,1)<>"Y" THEN CALL "*wingrp;Hide",CIC.GRP$
30130 IF MID(%OPS_PARM$,149,1)<>"Y" THEN CALL "*wingrp;Hide",FEATURE.GRP$
30140 IF MID(%CUST_PARM_D$,236,1)<>"Y" THEN CALL "*wingrp;Hide",DEPT.GRP$
30150 IF MID(%CUST_PARM_D$,195,1)<>"1" THEN CALL "*wingrp;Hide",FMS3.GRP$
30190 HIDE_GROUPS_END:RETURN 
30195 ! 
30200 PANEL2_GROUPS:
30210 CALL "*wingrp;Disable",SELL_UNIT.GRP$
30215 CALL "*wingrp;Disable",COST_UNIT.GRP$
30240 PANEL2_GROUPS_END:RETURN 
30245 ! 
30300 SET_OLD_SORT_KEY_VALS:
30310 OLD_FT1_KEY$=CUST_DIV$+CUST_CODE$+CIC$+ITEM_CODE$
30315 IF %RFQ THEN OLD_FM2_KEY$=PROD_CODE$+LEFT_RIGHT$+TOP_BOTTOM$+PLYS$+%SPEC$ ELSE OLD_FM2_KEY$=PROD_CODE$+LEFT_RIGHT$+TOP_BOTTOM$+PLYS$+ITEM_CODE$+CUST_DIV$+CUST_CODE$ ! SSP206206 jdf
30320 OLD_FMG_KEY$=SRC_CUST_DIV$+SRC_CUST_CODE$+ITEM_CODE$+CUST_DIV$+CUST_CODE$
30340 SET_OLD_SORT_KEY_VALS_END:RETURN 
30345 ! 
30350 SET_NEW_RECORD_DEFAULTS:
30360 IF %CUST_PARM_D$>"" THEN IF MID(%CUST_PARM_D$,195,1)="1" THEN FMS_PRCNT$=STR(%CUST_PARM_D)
30365 IF %CUST_PARM_A$>"" THEN FMS$=%CUST_PARM_A$(12,1); IF NUM(MID(%CUST_PARM_A$,13,3))>0 THEN RO_PT_DAYS$=%CUST_PARM_A$(13,3)
30370 ! IF %COPY$="CONTINUE" AND DIST_ITEM$<>"Y" THEN SRC_CUST_CODE$=%SRC_CUST_CODE$,SRC_CUST_DIV$=%SRC_CUST_DIV$,SRC_CUSTOMER$=SRC_CUST_DIV$+SRC_CUST_CODE$,%COPY$="",%SRC_CUST_CODE$="",%SRC_CUST_DIV$="" ! SSP#208991 !SSP#267008    
30380 GOSUB SET_CHECK_BOX_FIELD_VALUES ! 237110 - Default checkbox values for all new records
30390 SET_NEW_RECORD_DEFAULTS_END:RETURN 
30395 ! 
31000 PARSE_SRC_CUST:
31020 IF NOT(NUL(SRC_CUSTOMER$)) THEN {
31030 SRC_CUST_DIV$=MID(SRC_CUSTOMER$,1,2),SRC_CUST_CODE$=MID(SRC_CUSTOMER$,3)
31035  } ELSE {
31040 SRC_CUST_DIV$="",SRC_CUST_CODE$=""
31045  }
31095 RETURN 
31099 ! ***************************************************
31100 CHECK_SET_FROM_CUST:! SSP260170, from customer must be blank if Stock? flag set to Y.  If Stock? not set to Y then from customer is ok, and if from customer is blank then set it to the item's customer.
31102 IF QLL THEN XET$="ITM",XSYS$="EQLINK",XKY$=_KEY$,XVL$=CIC$,XVLD$="N"; CALL "UPDZYR;WRITE_XITM",ERR=*NEXT,XET$,XSYS$,XKY$,XVL$,"Y",XVLD$; IF XVLD$<>"Y" THEN ESTATUS$="" ! SSP 307387
31103 ! IF QLL AND ESTATUS$="Y" THEN XET$="ITM",XSYS$="EQLINK",XKY$=_KEY$,XVL$=CIC$,XVLD$="N"; CALL "UPDZYR;WRITE_XITM",ERR=*NEXT,XET$,XSYS$,XKY$,XVL$,"Y",XVLD$; IF XVLD$<>"Y" THEN ESTATUS$="" ! SSP 307387
31105 IF DIST_ITEM$="Y" AND MID(%FMS_PARM$,28,1)="Y" AND STP(SRC_CUSTOMER$)<>"" THEN RETURN ! SSP#267008
31110 IF DIST_ITEM$="Y" THEN SRC_CUST_DIV$="",SRC_CUST_CODE$="",SRC_CUSTOMER$=""; GOTO *RETURN
31120 IF STP(SRC_CUST_DIV$)="" AND STP(SRC_CUST_CODE$)="" THEN SRC_CUST_DIV$=CUST_DIV$,SRC_CUST_CODE$=CUST_CODE$,SRC_CUSTOMER$=CUSTOMER$
31145 RETURN 
31149 ! 
50000 UDEF_IOL:IOLIST FIELD_NUMBER$,FIELD_DATA$
50100 UDEF_FILES:! ^100,5
50105 _ASV=HFN; OPEN (_ASV,IOL=*)"ASV"+%C$ ! User Defined fields
50110 _FTL=HFN; OPEN (_FTL,IOL=*)"FTL"+%C$ ! FORM - User Defined field data
50115 WORK=HFN; OPEN (WORK)"*memory*" ! Holding file for 'F' type ASV rec's
50120 UDEF=HFN; OPEN (UDEF)"*memory*" ! Holding file for FORM -user defined data
50125 RETURN 
50130 ! 
50200 LOAD_USER_DEF:! ^100,5 - take contents of ASV and write to Work
50205 WRITE (WORK,IND=I)"Index 0" ! to make processing grid easier
50210 I=1
50215 SELECT * FROM _ASV BEGIN "F" END "F"+$FF$
50220 WRITE (WORK,IND=I)FIELD_NUMBER$,FIELD_DESCRIPTION$,FIELD_LENGTH ! SSP 204788
50225 I++
50230 NEXT RECORD 
50235 RETURN 
50240 ! 
50300 LOAD_GRID:! ^100,5 - Load user defined fields and customer data
50305 _CHANGE_FLG=CHANGE_FLG
50310 GRID CLEAR USER_GRID.CTL,0,0
50315 GRID_ROWS=NUM(FN%FIN$(WORK,"NUMREC"))-1
50320 IF NOT(GRID_ROWS) THEN {
50325 NEXT_FOLDER=FLDR.FMGIAB.1.CTL,REFRESH_FLG=1,CHANGE_FLG=0,NEXT_ID=-1 ! SSP 221568
50330 RETURN 
50335  }
50340 USER_GRID.CTL'COLUMN=-1,USER_GRID.CTL'COLUMNWIDTH=0
50345 USER_GRID.CTL'ROW=-1,USER_GRID.CTL'ROWHEIGHT=0
50350 USER_GRID.CTL'ROWSHIGH=GRID_ROWS
50355 USER_GRID.CTL'COLUMNSWIDE=2
50360 GRID LOCK USER_GRID.CTL,1,0
50365 USER_GRID.CTL'COLUMN=2
50370 USER_GRID.CTL'COLUMNWIDTH=40
50375 USER_GRID.CTL'COLUMN=1
50380 USER_GRID.CTL'COLUMNWIDTH=30,USER_GRID.CTL'ALIGN$="Right"
50385 FOR ROW=1 TO GRID_ROWS
50390 USER_GRID.CTL'COLUMN=1
50395 READ (WORK,IND=ROW)FIELD_NUMBER$,FIELD_DESCRIPTION$,FIELD_LENGTH ! SSP 204788
50400 USER_GRID.CTL'ROW=ROW,USER_GRID.CTL'VALUE$=STP(FIELD_DESCRIPTION$,2)+":",USER_GRID.CTL'CELLTYPE$="multi_line",USER_GRID.CTL'ALIGN$="Right"
50401 IF LEN(STP(FIELD_DESCRIPTION$))>=35 THEN USER_GRID.CTL'ROWHEIGHT=2 ELSE USER_GRID.CTL'ROWHEIGHT=1.33
50405 FIELD_DATA$="",FIELD_DATA_NEW$=""
50410 READ (_FTL,KEY=CUST_DIV$+CUST_CODE$+ITEM_CODE$+FIELD_NUMBER$,DOM=*NEXT) ! SSP211461, key was wrong, missing ITEM_CODE$
50415 READ (UDEF,KEY=FIELD_NUMBER$,DOM=*NEXT)*,FIELD_DATA_NEW$
50420 IF STP(FIELD_DATA_NEW$,2)<>"" THEN FIELD_DATA$=FIELD_DATA_NEW$
50425 IF STP(FIELD_DATA$,2)<>"" THEN {
50430 USER_GRID.CTL'COLUMN=2
50435 USER_GRID.CTL'VALUE$=STP(FIELD_DATA$,2),USER_GRID.CTL'CELLTYPE$="Multi_line",USER_GRID.CTL'LEN=FIELD_LENGTH ! SSP 204788
50440  }
50442 USER_GRID.CTL'ROW=ROW,USER_GRID.CTL'COLUMN=2,USER_GRID.CTL'LEN=FIELD_LENGTH ! SSP 204788
50445 NEXT ROW
50450 CHANGE_FLG=_CHANGE_FLG
50455 RETURN 
50460 ! 
50500 UPDATE_FIELD:! ^100,5 - User defined field has been accessed
50505 EDIT_ROW=USER_GRID.CTL'CURRENTROW
50510 GRID FIND USER_GRID.CTL,2,EDIT_ROW,FIELD_DATA$,ERR=*RETURN ! SSP 221568
50515 READ (WORK,IND=EDIT_ROW)FIELD_NUMBER$,*,FIELD_LENGTH
50520 IF LEN(FIELD_DATA$)>FIELD_LENGTH THEN {
50525 MSGBOX "Maximum field length of "+STR(FIELD_LENGTH)+" characters has been exceeded.  ","Attention","!"
50530 FIELD_DATA$=PAD(FIELD_DATA$,FIELD_LENGTH)
50535 USER_GRID.CTL'COLUMN=2
50540 USER_GRID.CTL'ROW=EDIT_ROW
50545 USER_GRID.CTL'VALUE$=FIELD_DATA$
50550  }
50555 WRITE (UDEF,KEY=FIELD_NUMBER$)IOL=UDEF_IOL
50560 REFRESH_FLG=1,NEXT_ID=USER_GRID.CTL
50562 TAB_GRID: EDIT_ROW=USER_GRID.CTL'CURRENTROW ! SSP 204788
50563 EDIT_ROW+=1,NEXT_ID=USER_GRID.CTL
50564 IF EDIT_ROW>GRID_ROWS THEN %GRID=0,NEXT_ID=BUTTON_1.CTL ELSE GRID GOTO USER_GRID.CTL,2,EDIT_ROW
50565 RETURN 
50570 ! 
50600 WRITE_USER_DEF:! ^100,5 - Look for user defined fields data changes
50605 IF NUM(FN%FIN$(UDEF,"numrec")) THEN {
50610 SELECT IOL=UDEF_IOL FROM UDEF BEGIN "" END $FF$
50615 IF STP(FIELD_DATA$,2)<>"" THEN {
50620 WRITE (_FTL,KEY=CUST_DIV$+CUST_CODE$+ITEM_CODE$+FIELD_NUMBER$) ! SSP211461, key was wrong, missing ITEM_CODE$
50625  } ELSE {
50630 REMOVE (_FTL,KEY=CUST_DIV$+CUST_CODE$+ITEM_CODE$+FIELD_NUMBER$,DOM=*NEXT) ! SSP211461, key was wrong, missing ITEM_CODE$   
50635  }
50640 NEXT RECORD 
50645  }
50650 CLOSE (UDEF); OPEN (UDEF)"*memory*"
50655 RETURN 
50670 ! 
50700 CLOSE_UDEF_FILES:! ^100,5
50705 CLOSE (_FTL,ERR=*NEXT)
50710 CLOSE (_FTL,ERR=*NEXT)
50715 CLOSE (WORK,ERR=*NEXT)
50720 CLOSE (UDEF,ERR=*NEXT)
50725 RETURN 
50730 ! 
50800 SEL_QUERY:
50810 PROCESS "QRY_FM1","../FMG/FM.EN",RESULT$; IF STP(RESULT$)="" THEN GOTO *RETURN
50820 CUSTOMER$=RESULT$(1,10),ITEM_CODE$=RESULT$(11,10),_KEY$=RESULT$
50830 ID$="CUSTOMER"; GOSUB NXT; ID$="ITEM_CODE"; GOSUB NXT
50840 GOSUB PROCESS_READ; GOSUB NUM_TO_STR
50850 RETURN 
51000 SEL_CIC:
51010 CIC_ITEM$="",TF_ITEM$="",CIC$=PAD(CIC$,20," ")
51030 IF POS(" "<>CIC$)=0 THEN GOTO *RETURN ELSE CIC_ITEM$=CIC$; CALL "FS2DAK",%X3$,%X4$,1,CUSTOMER$,"",CIC_ITEM$,TF_ITEM$
51040 IF STP(TF_ITEM$)<>"" AND TF_ITEM$<>ITEM_CODE$ THEN MSGBOX "This CIC already points to item code: "+TF_ITEM$,MSG("WARNING"),"INFO,TIM=5"; CIC$="",REFRESH_FLG=1,NEXT_ID=CIC.CTL; EXIT 
51050 RETURN 
56000 ! "187238-FMS% is calculated differently in GUI than in CHUI          
56001 ! "       also, if you change the FMS%, GUI will not recalc FMS price
56002 REM "201823-Provide the ability to set the taxable flag  by Item   
56003 ! "204788-They are unable to actually enter Notes into the user       
56004 REM "205460-Oracle - FIN(CHANNEL,"NUMREC") changed to use FN%FIN$()     
56005 ! 208991-Need the From Field to be automatically populated when you
56006 ! 211461-user defined FTL records written with wrong key
56008 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56010 REM "197206-Suggested Reorder number of Months for F/M Item setup not   
56011 ! "221568-Program exception setting up item, in user defined tab      
56012 REM "237110-F/M Item setup - IMS checkbox shows checked when it is blank
56013 REM "245153-Custom Item setup does not ask you to delete an existing    
56014 REM "260170-FM1, if stock? is Y then from customer must be blank.       
56015 REM "276772-Multiple Finder's Fees per Customer/Item/Order Line.        
56016 REM "286786-With the last release, the vendor name does not show up in  
56017 REM "300361-Getting message - current record has been altered.          
56018 REM "300361-Getting message - current record has been altered.          
56019 REM "307387-EQLink DBD Bridge to Qnet                                   
56020 REM "307387-EQLink DBD Bridge to Qnet                                   
56021 REM "307512-DBD-515 Utility to set up Parent Child Customer accounnt and
