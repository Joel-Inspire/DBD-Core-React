0010 ! FMGUT0 - Order Booking File Setup
0035 REM "5.7 - 07/21/11 - 12.295833 - jdf - SSP# 245296
0037 REM "245296-Needs order #185394 completely deleted, shows on order      
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "FMGUT0","../FMG/FM.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="FSA"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=4
0430 DIM _KEYS$[1:5]; _KEYS$[1]="DIV_NUM$",_KEYS$[2]="TF_DATE$",_KEYS$[3]="ORDER$",_KEYS$[4]="SEQ_NUM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$
1046 CALL "ZZWLKU;PARSE_ORD",ORDER$,ORDER_DIV$,ORDER_NUM$; ORDER$=ORDER_DIV$+ORDER_NUM$
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$ ! SSP245296 jdf
1240 IF _YESNO$="NO" THEN _ENABLE_FLG=-1,CHANGE_FLG=0,_CLR_FLG$="R"; GOSUB CLEAR_REC; NEXT_ID=DIV_NUM.CTL; EXIT ! SSP245296 jdf
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1265 CALL "*WINGRP;DISABLE",BUTTONS_2.GRP$ ! SSP245296 jdf
1270 CHANGE_FLG=1,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD ! SSP245296 jdf
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1485 IF ID$="BUTTON_8" THEN GOSUB CLEAR_FIELDS ! SSP245296 jdf
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3061 CUSTOMER$=CUST_DIV$+CUST_CODE$
3062 ORDER$=ORDER_DIV$+ORDER_NUM$
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3215 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$ ! SSP245296 jdf
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3355 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS ! SSP245296 jdf
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=DIV_NUM.CTL,_FIRST_FIELD=CUSTOMER.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 SPER_COMM_PRCNT_1$=STR(SPER_COMM_PRCNT_1)
10030 SPER_COMM_PRCNT_2$=STR(SPER_COMM_PRCNT_2)
10040 SPER_COMM_PRCNT_3$=STR(SPER_COMM_PRCNT_3)
10050 SPER_COMM_PRCNT_4$=STR(SPER_COMM_PRCNT_4)
10060 SPER_COMM_PRCNT_5$=STR(SPER_COMM_PRCNT_5)
10070 ORDER_AMT$=STR(ORDER_AMT)
10080 ORDER_COST$=STR(ORDER_COST)
10090 EST_COMM$=STR(EST_COMM)
10100 EST_ADJ_TO_GP$=STR(EST_ADJ_TO_GP)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="SPER_COMM_PRCNT_1",_X=SPER_COMM_PRCNT_1.CTL,SPER_COMM_PRCNT_1=NUM(SPER_COMM_PRCNT_1$,ERR=NON_NUMERIC)
11030 _X$="SPER_COMM_PRCNT_2",_X=SPER_COMM_PRCNT_2.CTL,SPER_COMM_PRCNT_2=NUM(SPER_COMM_PRCNT_2$,ERR=NON_NUMERIC)
11040 _X$="SPER_COMM_PRCNT_3",_X=SPER_COMM_PRCNT_3.CTL,SPER_COMM_PRCNT_3=NUM(SPER_COMM_PRCNT_3$,ERR=NON_NUMERIC)
11050 _X$="SPER_COMM_PRCNT_4",_X=SPER_COMM_PRCNT_4.CTL,SPER_COMM_PRCNT_4=NUM(SPER_COMM_PRCNT_4$,ERR=NON_NUMERIC)
11060 _X$="SPER_COMM_PRCNT_5",_X=SPER_COMM_PRCNT_5.CTL,SPER_COMM_PRCNT_5=NUM(SPER_COMM_PRCNT_5$,ERR=NON_NUMERIC)
11070 _X$="ORDER_AMT",_X=ORDER_AMT.CTL,ORDER_AMT=NUM(ORDER_AMT$,ERR=NON_NUMERIC)
11080 _X$="ORDER_COST",_X=ORDER_COST.CTL,ORDER_COST=NUM(ORDER_COST$,ERR=NON_NUMERIC)
11090 _X$="EST_COMM",_X=EST_COMM.CTL,EST_COMM=NUM(EST_COMM$,ERR=NON_NUMERIC)
11100 _X$="EST_ADJ_TO_GP",_X=EST_ADJ_TO_GP.CTL,EST_ADJ_TO_GP=NUM(EST_ADJ_TO_GP$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12030 IF NUL(CUSTOMER.CTL'VALUE$) THEN _W_FLG=0,NEXT_ID=CUSTOMER.CTL; MSGBOX MSG("REQ_CUST"),MSG("MB_ATTN"),"!" ! SSP245296 jdf
12035 CUSTOMER$=CUSTOMER.CTL'VALUE$ ! SSP245296 jdf
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN DIV_NUM$=""
13030 IF _CLR_FLG$="R" THEN TF_DATE$=""
13040 IF _CLR_FLG$="R" THEN ORDER_DIV$="",ORDER$=""
13050 IF _CLR_FLG$="R" THEN ORDER_NUM$=""
13060 IF _CLR_FLG$="R" THEN SEQ_NUM$=""
13070 CUST_DIV$="",CUSTOMER$="",OLD_CUSTOMER$="" ! SSP245296 jdf
13080 CUST_CODE$=""
13090 SPER$=""
13100 SPER_CODE_2$=""
13110 SPER_CODE_3$=""
13120 SPER_CODE_4$=""
13130 SPER_CODE_5$=""
13140 BOOKED$=""
13150 ORDER_TYPE$=""
13160 FSA_UNUSED_1$=""
13170 SPER_COMM_PRCNT_1=0
13180 SPER_COMM_PRCNT_2=0
13190 SPER_COMM_PRCNT_3=0
13200 SPER_COMM_PRCNT_4=0
13210 SPER_COMM_PRCNT_5=0
13220 ORDER_AMT=0
13230 ORDER_COST=0
13240 EST_COMM=0
13250 EST_ADJ_TO_GP=0
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=DATE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=ORDER_DIV.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=ORDER_NUM.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14060 IF _ENABLE_FLG=5 THEN CALL "*wingrp;Enable",KEY5.GRP$; NEXT_ID=SEQ_NUM.CTL ELSE CALL "*wingrp;Disable",KEY5.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(24,"N")
15030 IF _ORIG.DIV_NUM$=_CUR.DIV_NUM$ OR DIV_NUM$=_CUR.DIV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.DIV_NUM$=DIV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("DIV_NUM")+" = "+_CUR.DIV_NUM$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DIV_NUM")+" = "+_CUR.DIV_NUM$
15040 IF _ORIG.TF_DATE$=_CUR.TF_DATE$ OR TF_DATE$=_CUR.TF_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.TF_DATE$=TF_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("DATE")+" = "+_CUR.TF_DATE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATE")+" = "+_CUR.TF_DATE$
15050 IF _ORIG.ORDER_DIV$=_CUR.ORDER_DIV$ OR ORDER_DIV$=_CUR.ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DIV$=ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$
15060 IF _ORIG.ORDER_NUM$=_CUR.ORDER_NUM$ OR ORDER_NUM$=_CUR.ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_NUM$=ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$
15070 IF _ORIG.SEQ_NUM$=_CUR.SEQ_NUM$ OR SEQ_NUM$=_CUR.SEQ_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.SEQ_NUM$=SEQ_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ_NUM")+" = "+_CUR.SEQ_NUM$
15080 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15090 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15100 IF _ORIG.SPER$=_CUR.SPER$ OR SPER$=_CUR.SPER$ THEN GOTO *NEXT ELSE IF _ORIG.SPER$=SPER$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER")+" = "+_CUR.SPER$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER")+" = "+_CUR.SPER$
15110 IF _ORIG.SPER_CODE_2$=_CUR.SPER_CODE_2$ OR SPER_CODE_2$=_CUR.SPER_CODE_2$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE_2$=SPER_CODE_2$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_2")+" = "+_CUR.SPER_CODE_2$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_2")+" = "+_CUR.SPER_CODE_2$
15120 IF _ORIG.SPER_CODE_3$=_CUR.SPER_CODE_3$ OR SPER_CODE_3$=_CUR.SPER_CODE_3$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE_3$=SPER_CODE_3$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_3")+" = "+_CUR.SPER_CODE_3$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_3")+" = "+_CUR.SPER_CODE_3$
15130 IF _ORIG.SPER_CODE_4$=_CUR.SPER_CODE_4$ OR SPER_CODE_4$=_CUR.SPER_CODE_4$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE_4$=SPER_CODE_4$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_4")+" = "+_CUR.SPER_CODE_4$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_4")+" = "+_CUR.SPER_CODE_4$
15140 IF _ORIG.SPER_CODE_5$=_CUR.SPER_CODE_5$ OR SPER_CODE_5$=_CUR.SPER_CODE_5$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE_5$=SPER_CODE_5$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_5")+" = "+_CUR.SPER_CODE_5$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_5")+" = "+_CUR.SPER_CODE_5$
15150 IF _ORIG.BOOKED$=_CUR.BOOKED$ OR BOOKED$=_CUR.BOOKED$ THEN GOTO *NEXT ELSE IF _ORIG.BOOKED$=BOOKED$ THEN _CHG2$=_CHG2$+SEP+MSG("BOOKED")+" = "+_CUR.BOOKED$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BOOKED")+" = "+_CUR.BOOKED$
15160 IF _ORIG.ORDER_TYPE$=_CUR.ORDER_TYPE$ OR ORDER_TYPE$=_CUR.ORDER_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_TYPE$=ORDER_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_TYPE")+" = "+_CUR.ORDER_TYPE$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_TYPE")+" = "+_CUR.ORDER_TYPE$
15170 IF _ORIG.FSA_UNUSED_1$=_CUR.FSA_UNUSED_1$ OR FSA_UNUSED_1$=_CUR.FSA_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.FSA_UNUSED_1$=FSA_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FSA_UNUSED_1$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FSA_UNUSED_1$
15180 IF _ORIG.SPER_COMM_PRCNT_1=_CUR.SPER_COMM_PRCNT_1 OR SPER_COMM_PRCNT_1=_CUR.SPER_COMM_PRCNT_1 THEN GOTO *NEXT ELSE IF _ORIG.SPER_COMM_PRCNT_1=SPER_COMM_PRCNT_1 THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_P_1")+" = "+STR(_CUR.SPER_COMM_PRCNT_1),_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_P_1")+" = "+STR(_CUR.SPER_COMM_PRCNT_1)
15190 IF _ORIG.SPER_COMM_PRCNT_2=_CUR.SPER_COMM_PRCNT_2 OR SPER_COMM_PRCNT_2=_CUR.SPER_COMM_PRCNT_2 THEN GOTO *NEXT ELSE IF _ORIG.SPER_COMM_PRCNT_2=SPER_COMM_PRCNT_2 THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_P_2")+" = "+STR(_CUR.SPER_COMM_PRCNT_2),_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_P_2")+" = "+STR(_CUR.SPER_COMM_PRCNT_2)
15200 IF _ORIG.SPER_COMM_PRCNT_3=_CUR.SPER_COMM_PRCNT_3 OR SPER_COMM_PRCNT_3=_CUR.SPER_COMM_PRCNT_3 THEN GOTO *NEXT ELSE IF _ORIG.SPER_COMM_PRCNT_3=SPER_COMM_PRCNT_3 THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_P_3")+" = "+STR(_CUR.SPER_COMM_PRCNT_3),_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_P_3")+" = "+STR(_CUR.SPER_COMM_PRCNT_3)
15210 IF _ORIG.SPER_COMM_PRCNT_4=_CUR.SPER_COMM_PRCNT_4 OR SPER_COMM_PRCNT_4=_CUR.SPER_COMM_PRCNT_4 THEN GOTO *NEXT ELSE IF _ORIG.SPER_COMM_PRCNT_4=SPER_COMM_PRCNT_4 THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_P_4")+" = "+STR(_CUR.SPER_COMM_PRCNT_4),_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_P_4")+" = "+STR(_CUR.SPER_COMM_PRCNT_4)
15220 IF _ORIG.SPER_COMM_PRCNT_5=_CUR.SPER_COMM_PRCNT_5 OR SPER_COMM_PRCNT_5=_CUR.SPER_COMM_PRCNT_5 THEN GOTO *NEXT ELSE IF _ORIG.SPER_COMM_PRCNT_5=SPER_COMM_PRCNT_5 THEN _CHG2$=_CHG2$+SEP+MSG("SPER_C_P_5")+" = "+STR(_CUR.SPER_COMM_PRCNT_5),_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_C_P_5")+" = "+STR(_CUR.SPER_COMM_PRCNT_5)
15230 IF _ORIG.ORDER_AMT=_CUR.ORDER_AMT OR ORDER_AMT=_CUR.ORDER_AMT THEN GOTO *NEXT ELSE IF _ORIG.ORDER_AMT=ORDER_AMT THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_AMT")+" = "+STR(_CUR.ORDER_AMT),_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_AMT")+" = "+STR(_CUR.ORDER_AMT)
15240 IF _ORIG.ORDER_COST=_CUR.ORDER_COST OR ORDER_COST=_CUR.ORDER_COST THEN GOTO *NEXT ELSE IF _ORIG.ORDER_COST=ORDER_COST THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_COST")+" = "+STR(_CUR.ORDER_COST),_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_COST")+" = "+STR(_CUR.ORDER_COST)
15250 IF _ORIG.EST_COMM=_CUR.EST_COMM OR EST_COMM=_CUR.EST_COMM THEN GOTO *NEXT ELSE IF _ORIG.EST_COMM=EST_COMM THEN _CHG2$=_CHG2$+SEP+MSG("EST_COMM")+" = "+STR(_CUR.EST_COMM),_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("EST_COMM")+" = "+STR(_CUR.EST_COMM)
15260 IF _ORIG.EST_ADJ_TO_GP=_CUR.EST_ADJ_TO_GP OR EST_ADJ_TO_GP=_CUR.EST_ADJ_TO_GP THEN GOTO *NEXT ELSE IF _ORIG.EST_ADJ_TO_GP=EST_ADJ_TO_GP THEN _CHG2$=_CHG2$+SEP+MSG("EST_A_T_G")+" = "+STR(_CUR.EST_ADJ_TO_GP),_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("EST_A_T_G")+" = "+STR(_CUR.EST_ADJ_TO_GP)
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN DIV_NUM$=_CUR.DIV_NUM$
16030 IF _CHG_VAR$(2,1)="Y" THEN TF_DATE$=_CUR.TF_DATE$
16040 IF _CHG_VAR$(3,1)="Y" THEN ORDER_DIV$=_CUR.ORDER_DIV$
16050 IF _CHG_VAR$(4,1)="Y" THEN ORDER_NUM$=_CUR.ORDER_NUM$
16060 IF _CHG_VAR$(5,1)="Y" THEN SEQ_NUM$=_CUR.SEQ_NUM$
16070 IF _CHG_VAR$(6,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16080 IF _CHG_VAR$(7,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16090 IF _CHG_VAR$(8,1)="Y" THEN SPER$=_CUR.SPER$
16100 IF _CHG_VAR$(9,1)="Y" THEN SPER_CODE_2$=_CUR.SPER_CODE_2$
16110 IF _CHG_VAR$(10,1)="Y" THEN SPER_CODE_3$=_CUR.SPER_CODE_3$
16120 IF _CHG_VAR$(11,1)="Y" THEN SPER_CODE_4$=_CUR.SPER_CODE_4$
16130 IF _CHG_VAR$(12,1)="Y" THEN SPER_CODE_5$=_CUR.SPER_CODE_5$
16140 IF _CHG_VAR$(13,1)="Y" THEN BOOKED$=_CUR.BOOKED$
16150 IF _CHG_VAR$(14,1)="Y" THEN ORDER_TYPE$=_CUR.ORDER_TYPE$
16160 IF _CHG_VAR$(15,1)="Y" THEN FSA_UNUSED_1$=_CUR.FSA_UNUSED_1$
16170 IF _CHG_VAR$(16,1)="Y" THEN SPER_COMM_PRCNT_1=_CUR.SPER_COMM_PRCNT_1
16180 IF _CHG_VAR$(17,1)="Y" THEN SPER_COMM_PRCNT_2=_CUR.SPER_COMM_PRCNT_2
16190 IF _CHG_VAR$(18,1)="Y" THEN SPER_COMM_PRCNT_3=_CUR.SPER_COMM_PRCNT_3
16200 IF _CHG_VAR$(19,1)="Y" THEN SPER_COMM_PRCNT_4=_CUR.SPER_COMM_PRCNT_4
16210 IF _CHG_VAR$(20,1)="Y" THEN SPER_COMM_PRCNT_5=_CUR.SPER_COMM_PRCNT_5
16220 IF _CHG_VAR$(21,1)="Y" THEN ORDER_AMT=_CUR.ORDER_AMT
16230 IF _CHG_VAR$(22,1)="Y" THEN ORDER_COST=_CUR.ORDER_COST
16240 IF _CHG_VAR$(23,1)="Y" THEN EST_COMM=_CUR.EST_COMM
16250 IF _CHG_VAR$(24,1)="Y" THEN EST_ADJ_TO_GP=_CUR.EST_ADJ_TO_GP
16990 RETURN 
17000 SEL_QRY:
17010 VAL$=""; PROCESS "QRY_FSA","../FMG/FM.EN",VAL$ ! SSP245296 jdf
17020 IF VAL$="" THEN RETURN 
17030 _KEY$=VAL$,DIV_NUM$=VAL$(1,2),TF_DATE$=VAL$(3,6),ORDER$=VAL$(9,8),SEQ_NUM$=VAL$(17,1),REFRESH_FLG=1
17040 GOTO 1045
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56002 REM "245296-Needs order #185394 completely deleted, shows on order      
