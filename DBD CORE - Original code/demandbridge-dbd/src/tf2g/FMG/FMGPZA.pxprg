0010 ! FMGPZA - F/M Physical Count Control
0020 SETESC 9300; SETERR 9000
0035 REM "5.5 - 02/13/07 - 9.479166 - mhe - SSP# 202868
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "FMGPZA","../FMG/FM.EN"
0060 EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0101 INIT:
0102 ! PRINT 'SIZE'(64,4),'MOVE'(18,13),
0110 X0$="FM2PZA",X1$="Cycle Processor",K9$="",K9=0
0120 DIM S$(20),B[15]
0125 R0=0,R1=0
0130 K0=14,K1=2
0135 C9=-1
0140 PERFORM "BRGMAA;SETUP_LIBRARY"; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0200 REM "
0210 DIM XPD[6] ! [202868] Customer Defaults
0215 DIM XPE[1] ! [202868] Customer Fiscal Year
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$(1)
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15]
0330 IOLIST C$
0332 IOLIST C1$
0350 IOLIST E$,E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],E[8],E[9],E[10],E[11],E[12],E[13]
0360 IOLIST F$,F[0],F[1],F[2],F[3],F[4],F[5],F[6],F[7]
0400 IOLIST J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12],J[13],J[14],J[15],J[16],J[17],J[18],J[19],J[20]
0420 IOLIST XPD$,XPD[0],XPD[1],XPD[2],XPD[3],XPD[4],XPD[5] ! [202868] Customer Defaults
0425 IOLIST XPE$ ! [202868] Customer Fiscal Year
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X FM8...  02O AR1...  03O FM0... 04O FMP... 05O FMZ... 06O ICF...  07O IC0...  08O FM1...  09OSFMP...  10O ICG...  11O IC1...  13O ZZPARM  20O FTP...  21O XPD...  22O XPE...  " ! [202868]-added XPD, XPE            
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0525 XPD_LFN=Z[21] ! [202868] Customer Defaults
0526 XPE_LFN=Z[22] ! [202868] Customer Fiscal Year
0530 READ (Z[13],KEY=X3$(9,3)+"I/C")P0$
0585 RT$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT$
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
0670 DIM X$(16); RETURN 
0680 GOSUB 6000
0810 CALL "ZZPROM",".X0FM2PZA",X3$,S3,"Starts the FMS cycle for one customer or all customers in one cycle","","",0; ON S3 GOTO 1000,0811,9900
0815 CALL "ZZPROM","X1FM2PZA",X3$,S3,"","","",0
0820 IF S3=0 THEN GOTO 9900
0824 REM "1 = COUNT SYSLE, 2 = CUSTOMER, 3=ONE LOCATION
0830 DIM X$(16); PRINT @(0,6+V0),'CE','SB',; IF S3=1 THEN PRINT @(14,7),"Count cycle to process:" ELSE PRINT @(17,7),"Customer to process:",
0840 S3=1
0842 SEL_CYCLE: S3=1,REFRESH_FLG=1
0845 X$(1,2)=CYCLE$ ! CALL "ZZENTR","SZ",X{ALL},X$,X4$,X3$,38,7,1,2,C0,"","","","FM2PZA90","","",""; IF C0=4 THEN GOTO 0010
0847 CALL "*WINGRP;ENABLE",PROCEED.GRP$
0855 GOTO 0900
0857 SEL_CUSTOMER: REFRESH_FLG=1,S3=2
0858 IF STP(CUSTOMER$)="" THEN EXIT 
0859 DIM X$(16)
0860 X$(3,10)=CUSTOMER$ ! CALL "ZZENTR","AU",X{ALL},X$,X4$,X3$,38,7,3,10,C0,"A/R","","","FM2PZA92","11AR1","",""; IF C0=4 THEN GOTO 0010
0865 DIM B$(394),B[15]; FIND (Z[2],KEY=X$(3,10),DOM=0860)IOL=0320 ! PRINT @(48,7),B$(11,40),; IF C0=4 THEN GOTO 9900
0880 IF X$(13,4)=S$(1,4) THEN GOTO 0895 ELSE FIND (Z[3],KEY="C"+X$(3,14),DOM=0875)IOL=0330
0890 IF C0=2 THEN GOTO 0860
0895 CALL "*WINGRP;ENABLE",PROCEED.GRP$
0897 RETURN 
0900 RETURN ! CALL "ZZPROM","X2FM2PZA",X3$,Q,"","","",0; ON Q GOTO 9900,0840,0901
0901 PROCEED:
0902 C9=0 ! PRINT @(0,6),'CE',; GOSUB 6000
0905 ON S3-1 GOTO 0910,0950
0910 REM "Process locations sort by count cycle
0915 READ (Z[4],KEY="D",DOM=0916)
0920 K0$=KEY(Z[4],END=5000); IF K0$(1,1)<>"D" THEN GOTO 5000 ELSE READ (Z[4])K$; IF K$(24,1)<>"Y" OR K$(46,2)<>X$(1,2) THEN GOTO 0920 ELSE Q$=K0$(2,10); GOSUB 8300; READ (Z[3],KEY="C"+K$(2,10),DOM=0921)
0922 READ (Z[3],END=0920)IOL=0330; IF C$(1,11)<>"C"+K0$(2,10) THEN GOTO 0920
0923 IF C$(223,1)=" " THEN GOTO 0922
0925 DIM A$(45); A$(1,14)=C$(2,14),A$(15,6)=X3$(21,6)
0928 GOSUB 6600; GOSUB 6450
0929 A$(28,6)=C1$(52,6),A$(34,1)=C$(223,1)
0930 WRITE (Z[1],KEY=A$(1,14),DOM=0990)A$
0945 GOSUB 7800; GOTO 0922
0950 REM "Customer Data
0952 DIM A$(45); A$(15,6)=X3$(21,6)
0958 Q$=X$(3,10); GOSUB 8300
0960 READ (Z[3],KEY="C"+X$(3,10),DOM=0961)
0965 READ (Z[3],END=5000)IOL=0330; IF C$(1,11)<>"C"+X$(3,10) THEN GOTO 5000
0970 IF C$(223,1)=" " THEN GOTO 0965
0975 DIM A$(45); A$(1,14)=C$(2,14),A$(15,6)=X3$(21,6)
0978 GOSUB 6600; GOSUB 6450
0979 A$(28,6)=C1$(52,6),A$(34,1)=C$(223,1)
0980 WRITE (Z[1],KEY=A$(1,14),DOM=0990)A$
0985 GOSUB 7800; GOTO 0965
0990 READ (Z[1],KEY=A$(1,14))IOL=0310; GOSUB 6200
0992 MSGBOX MSG("CYC_READY"),MSG("WARNING"),"!,CANCEL",OPT$; IF OPT$="CANCEL" THEN GOTO 9900 ! CALL "ZZPROM","X4FM2PZA",X3$,Z,"","","",0; ON Z GOTO 0993,9900
0995 ON S3-1 GOTO 0922,0965
1000 REM "
1010 Y8=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,-1,X1,X2
1030 DIM B$(400),B[15],C$(224)
1035 DIM A$(45)
1045 A$(1,LEN(A1$))=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1060 GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1250,1500
1200 REM "
1205 IF LEN(A1$)>0 THEN A$(1,10)=A1$(1,10); GOTO 1220 ELSE IF ID$="BT_DELETE" THEN NEXT_ID=CUSTOMER1.CTL; EXIT 
1206 SEL_CUST1: REFRESH_FLG=1,%CUST_NAME.CTL'VALUE$=%CUST_NAME$; IF STP(CUSTOMER1$)="" THEN NEXT_ID=RB_OPT.CTL; EXIT 
1207 DIM B$(400),B[15],C$(224),A$(45)
1210 A$(1,10)=CUSTOMER1$ ! CALL "ZZENTR","AXUX",A{ALL},A$,X4$,X3$,27,3,1,10,C0,"A/R","{1"+X$,K9$,"FM2PZA00","FM8","AR2MAB",""; IF C0=6 THEN GOSUB 6400; C0=1
1212 IF INT(ABS(C0))=3 THEN C0=-ABS(C0); READ (Z[1],KEY=A$(1,10),DOM=1213)
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1220 IF V9<>-2 THEN FIND (Z[2],KEY=A$(1,10),DOM=NEXT_REC)IOL=0320
1222 DIM C1$(260); FIND (Z[9],KEY="D"+A$(1,10),DOM=NO_REC)IOL=0332
1225 ! PRINT @(41,3),B$(11,35),
1240 RETURN 
1241 SEL_LOC: REFRESH_FLG=1,%LOC_DESC.CTL'VALUE$=%LOC_DESC$
1242 IF STP(LOCATION$)="" THEN RETURN 
1252 Q$="C"+A$(1,10)
1260 A$(11,4)=LOCATION$ ! CALL "ZZENTR","SZUX",A{ALL},A$,X4$,X3$,27,4,11,4,C0,"","{2"+X$,Q$,"FM2PZA02","FM0","FM2SKA",""; IF C0=6 THEN GOSUB 6400; C0=1
1261 IF ABS(C0)=2 AND LEN(A1$)>0 THEN A1$=A1$(1,0)
1265 IF INT(ABS(C0))=3 THEN GOTO 6800 ELSE IF ABS(C0)=4 THEN GOTO 9900
1270 IF V9<>-2 THEN FIND (Z[3],KEY="C"+A$(1,10)+A$(11,4),DOM=1260)IOL=0330
1275 %LOC_DESC$=STP(C$(16,35)) ! PRINT @(33,4),C$(16,35),
1290 X0=2; GOTO 1120
1500 REM "
1505 Z9=-1,Z8=0,C9=0,A2$="",A3$="",A4$="",A5$=""
1510 A1$=A$(1,14)
1520 READ (Z[1],ERR=7200,KEY=A1$,DOM=1600)IOL=0310
1525 Z9=0,V7$=""; GOSUB 5800
1590 GOTO 1700
1600 REM "
1615 IF X3$(185,1)="I" THEN CALL "ZZPROM","2A",X3$,0,"","","",0; GOTO 1630
1620 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$; IF _YESNO$="NO" THEN NEXT_ID=CUSTOMER1.CTL,CUSTOMER1$=""; EXIT 
1625 CALL "*WINGRP;ENABLE",OPT3.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$
1630 IF Z8=1 THEN REMOVE (Z[1],KEY=A1$,DOM=1000); GOTO 1000 ELSE GOTO 1000
1655 Z8=1
1680 GOSUB 7450
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1815 IF X3$(185,1)="I" THEN CALL "ZZPROM","4A",X3$,Z,"","","",0; GOTO 6790
1816 IF RB_OPTION$="3" THEN NEXT_ID=FROZE.DATA.CTL
1818 CALL "*WINGRP;ENABLE",OPT3.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$; RETURN 
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700,1821
1825 GOTO 6700
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 GOSUB 7400
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 SETERR 9000; X$="",Q$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF INT(C0)=3 THEN GOSUB 7300 ELSE IF C0>3 OR X0<0 THEN GOTO 1800
2038 IF X0<LEN(V7$) THEN V7$(X0+1,1)=""
2040 ON X0 GOTO 2100,2150,2200,2250,2300,2350,1800
2100 SEL_FROZE_DATE:
2110 A$(15,6)=FROZE_DATE$ ! CALL "ZZENTR","D",A{ALL},A$,X4$,X3$,38,6,15,6,C0,"","{3"+X$,"","FM2PZA04","","",""
2120 RETURN 
2140 GOTO 2020
2145 SEL_COUNT_DATE:
2160 A$(21,6)=COUNT_DATE$ ! CALL "ZZENTR","D",A{ALL},A$,X4$,X3$,38,8,21,6,C0,"","{3"+X$,"","FM2PZA06","","",""
2190 RETURN 
2200 SEL_STATUS:
2210 A$(27,1)=STATUS$ ! CALL "ZZENTR","V",A{ALL},A$,X4$,X3$,38,10,27,1,C0,"COUNTCYC","{T"+X$,"","FM2PZA08","","",""
2240 X0=2; GOTO 2020
2255 GOTO 2020
2260 CALL "ZZENTR","SZ",A{ALL},A$,X4$,X3$,38,12,28,4,C0,"","{3"+X$,"","FM2PZA10","","",""
2290 GOTO 2020
2305 GOTO 2020
2310 CALL "ZZENTR","Z",A{ALL},A$,X4$,X3$,55,12,32,2,C0,"","{3"+X$,"","FM2PZA12","","",""
2340 GOTO 2020
2355 GOTO 2020
2360 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,38,14,34,1,C0,"","{3"+X$,"","FM2PZA14","","",""
2390 GOTO 2020
5000 REM "
5010 GOSUB 7700
5020 CALL "FM2PAA"
5030 CMD_STR$="E"
5800 REM "Alt sort keys
5890 RETURN 
6000 REM "BACKGROUND
6001 GOTO 6190
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(12,3+V0),"Customer code:",@(17,4+V0),"Location:",@(0,5+V0),Z0$,
6070 PRINT @(19,6+V0),"Data frozen as of:",@(12,8+V0),"Date that count was made:",@(22,10+V0),"Current status:",@(13,12+V0),"Fiscal year of customer:",@(47,12+V0),"Period:",@(19,14+V0),"Location FMS Type:",
6075 PRINT @(24,16),"Reports type:",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6220 ! PRINT @(38,6),FND$(A$(15,6)),@(38,8),FND$(A$(21,6)),
6224 ! CALL "ZZDISP","V   ",A$(27,1),"COUNTCYC",X3$,"","",38,10,X4$
6228 ! PRINT @(38,12),A$(28,4),@(55,12),A$(32,2),@(38,14),A$(34,1),
6240 ! PRINT @(38,12),C1$(52,4),@(55,12),C1$(56,2),
6245 ! PRINT @(38,14),C$(223,1),
6250 ! PRINT @(38,16),'CL',; IF A$(35,1)="I" THEN PRINT @(38,16),"Interim Reports!" ELSE PRINT @(38,16),"Periodic"
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6464 ! CALL "ZZDISP","A   ",A$(1,10),"A/R",X3$,"","",27,3,X4$
6468 ! PRINT @(41,3),B$(11,35),@(27,4),A$(11,4),@(33,4),C$(16,35),
6470 GOSUB ASSIGN_LIB
6490 RETURN 
6500 REM "DELETE
6501 DELETE_REC:
6502 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$; IF _X$="NO" THEN CUSTOMER1$="",LOCATION$="",%LOC_DESC$="",%CUST_NAME$="",REFRESH_FLG=1; EXIT 
6505 GOSUB 7500; GOSUB CLEAR_REC
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 A1$=""; GOTO 1630
6600 REM "ALT KEY DATA READS
6605 FIND (Z[2],KEY=A$(1,10),DOM=6606)IOL=0320
6610 FIND (Z[3],KEY="C"+A$(1,10)+A$(11,4),DOM=6611)IOL=0330
6615 GOSUB 7500
6620 GOSUB 8100
6690 RETURN 
6700 REM "ADD ENTRY
6701 WRITE_REC:
6702 GOTO 6706
6705 IF Z9=0 THEN GOTO 6790 ELSE IF V7$>"" THEN X0=POS(" "<>V7$); IF X0>0 THEN X0=X0-1; GOTO 2038
6706 A$(28,6)=C1$(52,6),A$(34,1)=C$(223,1)
6710 WRITE (Z[1],KEY=A1$)IOL=0310
6720 GOSUB CLEAR_REC; NEXT_ID=CUSTOMER1.CTL,REFRESH_FLG=1; RETURN 
6790 C9=0; IF Z=6 OR K1=0 THEN GOTO 9900 ELSE IF Z<4 THEN GOTO 1000 ELSE C0=-(3.1+(Z-4)/10); GOTO 6800
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 IF A1$="" THEN GOTO 6800 ELSE IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM "PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6856 CALL "ZZPROM","K0",X3$,S3,"","","",0; ON S3 GOTO 6857,9900
6860 PRINT 'RB',; CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6865 GOTO 1100
6870 GOTO 6895
6890 GOTO 1515
6895 CALL "ZZPROM","K1",X3$,S3,"","","",0; IF S3=1 THEN GOTO 9900 ELSE IF A1$="" THEN GOTO 6860 ELSE PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=6896)
6898 ON S9 GOTO 6810,1100
7200 REM "Forced read
7210 IF ERR<>0 THEN GOTO 9000
7220 CALL "ZZREAD",Z[1],A1$,A$,A{ALL},S8; ON S8 GOTO 7221,1630
7230 GOSUB 6200
7240 CALL "ZZPROM","E0",X3$,0,"","","",0; GOTO 7290
7250 CALL "ZZPROM","E0A",X3$,0,"","","",0; GOTO 7290
7290 GOTO 1630
7300 REM 
7310 ON FPT(C0)*10 GOTO 7390,7325,7330,7390
7325 IF V8$="" THEN X0=X0+4; GOTO 7390 ELSE X0=NUM(V8$(POS(STR(X0:"00")<=V8$,2),2)); GOTO 7390
7330 IF V8$="" THEN X0=X0-6; GOTO 7335 ELSE X0=POS(STR(X0-1:"00")<=V8$,2)-2; IF X0<0 THEN X0=0; GOTO 7390 ELSE X0=NUM(V8$(X0,2)); GOTO 7390
7335 IF X0<0 THEN X0=0; GOTO 7390
7390 IF X0>0 THEN X0=X0-0
7395 C0=3; RETURN 
7400 REM "EXTRACT
7410 EXTRACT (Z[1],ERR=7200,KEY=A1$,DOM=7440)IOL=0310
7420 C9=1,Z9=1; GOSUB 5800
7440 RETURN 
7450 REM "EXTRACT NEW ENTRY
7460 WRITE (Z[1],KEY=A1$,DOM=7250)IOL=0310; GOTO 7400
7490 RETURN 
7500 REM "GET CUSTOMER DATA
7505 IF C1$>"" THEN IF C1$(2,10)=B$(1,10) THEN GOTO 7550
7510 READ (Z[9],KEY="D"+B$(1,10),DOM=7580)C1$
7525 P0=NUM(C1$(52,4)),P1=NUM(C1$(56,2))
7530 P1=P1+1; IF P1>12 THEN P0=P0+1,P1=1
7535 C1$(52,6)=STR(P0:"0000")+STR(P1:"00")
7580 RETURN 
7700 REM "UPDATE PERIOD AND YEAR FOR A CUSTOMER
7705 PRINT @(0,6),'CE',@(12,8),"Updating Customer Fiscal Year/ Period...",@(12,10),"Customer:"
7710 IF A9$="" THEN GOTO 7795
7715 FOR X=1 TO LEN(A9$) STEP 10
7720 EXTRACT RECORD (Z[9],KEY="D"+A9$(X,10),DOM=7770)A$
7722 READ (Z[2],KEY=A$(2,10))IOL=0320
7725 P0=NUM(A$(52,4)),P1=NUM(A$(56,2))
7730 P1=P1+1; IF P1>12 THEN P0=P0+1,P1=1; GOSUB 8500
7735 A$(52,6)=STR(P0:"0000")+STR(P1:"00")
7740 WRITE RECORD (Z[9],KEY="D"+A9$(X,10))A$
7742 READ (Z[9],KEY="D"+A9$(X,10))IOL=0420 ! [202867]
7743 CALL "UPDFMP;DUPLICATE_XPD",XPD_LFN,XPD$,XPD{ALL},"U" ! [202867]
7745 CALL "ZZDISP","A   ",A$(2,10),"A/R",X3$,"","",23,10,X4$; PRINT @(35,10),B$(11,35),
7750 GOSUB 7900
7770 NEXT X
7795 RETURN 
7800 REM "ADD TO STRING OF CUSTOMERS
7810 IF POS(A$(1,10)=A9$,10)=0 THEN A9$=A9$+A$(1,10)
7840 RETURN 
7850 REM "ADDITIONAL A$ DATA
7900 REM "Freeze any IC1 data in ICG
7902 DIM J[20]
7905 READ (Z[10],KEY=A9$(X,10),DOM=7906)
7912 PRINT @(15,12),'CL',"Removing last period's data:",
7915 K$=KEY(Z[10],END=7950); IF K$(1,10)<>A9$(X,10) THEN GOTO 7950
7920 REMOVE (Z[10],KEY=K$); GOTO 7915
7925 PRINT @(44,12),K$(11,10),"-",K$(21,4),
7950 REM 
7952 PRINT @(15,12),'CL',"Freezing current I/C data:",
7955 READ (Z[11],KEY=A9$(X,10),DOM=7956)
7960 K$=KEY(Z[11],END=7990); IF K$(1,10)<>A9$(X,10) THEN GOTO 7990
7965 EXTRACT (Z[11],KEY=K$)IOL=0400
7967 ! PRINT @(42,12),K$(11,10),"-",K$(21,4),
7970 REM "Read IC & check for lotted items to add to ICG the carton count
7971 IF P0$(44,1)="Y" THEN READ (Z[7],KEY=J$(1,20),DOM=7974)I$ ELSE GOTO 7974
7972 IF I$(112,1)="Y" THEN GOSUB 8400
7974 WRITE (Z[10],KEY=K$)IOL=0400
7975 J[3]=J[3]+J[4]-J[5]+J[6],J[4]=0,J[5]=0,J[6]=0,J$(53,6)=X3$(21,6)
7980 WRITE (Z[11],KEY=K$)IOL=0400
7985 IF RT$>"" THEN IF RT$(7,1)="H" THEN CUST$=K$(1,10); CALL "RT2WOC",ERR=7986,X3$,X4$,CUST$,"IC1...","U",K$
7988 GOTO 7960
7990 GOSUB 8000
7995 RETURN 
8000 REM "MARK FMZ DATA
8005 PRINT @(15,12),"Processing detailed shipment history file:",'CL'
8008 DIM C1$(260); FIND (Z[9],KEY="D"+A9$(X,10),DOM=1210)IOL=0332
8010 H0$=C1$(52,6),H0=NUM(C1$(56,2)),H1=H0-NUM(C1$(58,2)); IF H0<2 THEN H0=2
8011 H1$=H0$,H1$(5,2)=STR(NUM(H1$(5,2))-1:"00"); IF H1$(5,2)="00" THEN H1$(1,4)=STR(NUM(H1$(1,4))-1:"0000")+"12"
8012 IF H1<1 THEN H1=H1+12,H0$(1,4)=STR(NUM(H0$(1,4))-1:"0000"); GOTO 8012 ELSE H0$(5,2)=STR(H1:"00")
8020 READ (Z[5],KEY=A9$(X,10),DOM=8021)
8030 DIM E[13]; K$=KEY(Z[5],END=8050); IF K$(1,10)<>A9$(X,10) THEN GOTO 8050 ELSE EXTRACT (Z[5],KEY=K$)IOL=0350
8031 R0=R0+1; IF MOD(R0,25)=0 THEN PRINT @(15,14),'CL',R0," records processed, ",R1," Removed",
8032 H1=999999; IF E$(216,1)="H" THEN H1=-1,H1=NUM(E$(217,6),ERR=8033)
8035 IF E$(216,1)="H" THEN IF H1<=0 THEN E$(217,6)=H1$; GOTO 8040
8036 IF E$(216,1)="H" THEN IF H1<0 OR E$(217,6)<H0$ THEN GOSUB 8200; GOTO 8030 ELSE READ (Z[5]); GOTO 8030
8038 IF E$(216,1)="P" OR H1<0 THEN E$(216,7)="H"+C1$(52,6) ELSE IF E$(216,1)=" " THEN E$(216,1)="P"
8040 WRITE (Z[5],KEY=K$)IOL=0350
8045 GOTO 8030
8050 PRINT @(0,12),'CE',; RETURN 
8100 REM "CHECK FOR ESTIMATED LOCATIONS
8105 IF C$(223,1)<>"E" THEN RETURN 
8110 IF C$(223,1)="E" THEN IF LEN(C$)>321 THEN IF POS(C1$(56,2)=C$(321,24),2)>0 THEN C$(223,1)="C"
8190 RETURN 
8200 REM "DELETE OLD HISTORY RECORDS
8210 REMOVE (Z[5],KEY=K$)
8215 R1=R1+1
8225 REMOVE (Z[20],KEY=K$(1,10)+K$(16,10)+K$(11,5)+K$(26,9),DOM=8226); REM " SSP# 142993
8245 RETURN 
8300 REM "CHECK FOR INTERIM RECORDS FOR THIS CUSTOMER
8310 READ (Z[1],KEY=Q$,DOM=8311)
8320 DIM A$(45); READ (Z[1],END=8350)IOL=0310; IF A$(1,10)<>Q$ THEN GOTO 8350
8330 IF A$(35,1)="I" THEN REMOVE (Z[1],KEY=A$(1,14)); GOTO 8320
8390 RETURN 
8400 REM "If count the # of cartons and place in to ICG @ bucket 12 for later reporting use (Items Manufacturing (#122) mod)
8405 J[12]=0; DIM K[6]
8410 CALL "IC2LOT",X3$,"ICF",J$(1,24),"","","",C,K{ALL}
8415 I0=0; READ (Z[8],KEY=I$(1,20),DOM=8416)I0$,I0; REM "Get item master to compare carton pack size
8420 J[12]=K[4]
8425 IF K[3]=-1 OR K[2]=-1 OR K[3]<>I0 THEN J$(25,1)="Y" ELSE J$(25,1)="N"; REM "SET TO Y IF LOT SIZE VARIES or is primary size is different from carton pack
8440 REM "Write to Z(10) is done after return from this gosub, @7974
8445 RETURN 
8500 REM " Set up New Year for Customers rolling over
8510 READ (Z[9],KEY="E"+A9$(X,10)+STR(P0-1:"0000"),DOM=8590)PRIORYR$
8520 PEREND$=PRIORYR$(NUM(PRIORYR$(11+5,2))*6+18,6),Y=NUM(PRIORYR$(11+1,4))+1,NEWYR$=PRIORYR$
8530 NEWYR$(11+7,LEN(PEREND$))=PEREND$,NEWYR$(11+1,4)=STR(Y:"0000")
8540 CALL "FM2UBZ",X3$,"",NEWYR$,11
8550 WRITE (Z[9],KEY=NEWYR$(1,15),DOM=8551)NEWYR$
8560 CALL "UPDFMP;DUPLICATE_XPE",XPE_LFN,NEWYR$,XPE{ALL},"U" ! [202867]
8590 RETURN 
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNB$(Z9$)=X3$(214-6*NUM(Z9$),1)
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9901 CMD_STR$="E"; EXIT 
9902 END_PRG:
9905 Y8=2
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 SEL_OPTION:
10005 DIM AA$[3],AA[3]; AA$[1]="CUSTOMER.CTL",AA$[2]="CYCLE.CTL",AA$[3]="CUSTOMER1.CTL",AA[1]=9,AA[2]=9,AA[3]=24,XX=EVN(ID$+".CTL")
10008 PRINT 'SIZE'(64,AA[NUM(ID$(LEN(ID$)))]),
10010 FOR AA=1 TO 3
10020 EXECUTE "CALL"+QUO+"*WINGRP;HIDE"+QUO+",OPT"+STR(AA)+".GRP$"
10025 XX=EVN(ID$(1,LEN(ID$)-1)+STR(AA)+".CTL"),XX'TEXTCOLOR$="Default",XX'LINES=1.6
10026 V$=XX'TEXT$,PO=POS("}"=V$); IF PO<>0 THEN XX'TEXT$=V$(PO+1)
10030 NEXT AA
10040 EXECUTE "CALL"+QUO+"*WINGRP;SHOW"+QUO+",OPT"+ID$(LEN(ID$))+".GRP$"
10050 AA=EVN(AA$[NUM(ID$(LEN(ID$)))]),XX=EVN(ID$+".CTL"),XX'TEXTCOLOR$="Light Blue"
10060 NEXT_ID=AA,XX'LINES=2.5,V$=XX'TEXT$,XX'TEXT$="{!Arrow_down}"+V$
10065 ! IF RB_OPT$="3" THEN PRINT 'MOVE'(18,8),
10070 RETURN 
10080 SEL_OPT_FOCUS:
10085 XX=RB_OPT.CTL
10090 FOR AA=1 TO 3
10100 EXECUTE "CALL"+QUO+"*WINGRP;HIDE"+QUO+",OPT"+STR(AA)+".GRP$"
10105 XX=EVN(ID$(1,LEN(ID$)-1)+STR(AA)+".CTL"),XX'TEXTCOLOR$="Default"
10108 XX'LINES=1.6
10110 NEXT AA
10120 PRINT 'SIZE'(64,4),'MOVE'(18,10),
10130 RETURN 
10200 ASSIGN_LIB:
10210 CUSTOMER1$=A$(1,10),LOCATION$=A$(11,4),FROZE_DATE$=A$(15,6)
10220 COUNT_DATE$=A$(21,6),STATUS$=A$(27,1),FISYR$=A$(28,4),ACCTPD$=A$(32,2)
10230 FMS_TYPE$=A$(34,1),REP_TYPE$=A$(35,1),REFRESH_FLG=1
10235 IF STP(A$(28,4))="" THEN FISYR$=C1$(52,4),ACCTPD$=C1$(56,2),FMS_TYPE$=C$(223,1)
10250 RETURN 
10300 CLEAR_REC:
10310 CUSTOMER1$="",LOCATION$="",FROZE_DATE$=""
10320 COUNT_DATE$="",STATUS$="",FISYR$="",ACCTPD$=""
10330 FMS_TYPE$="",REP_TYPE$=""
10335 %CUST_NAME$="",%LOC_DESC$=""
10340 RETURN 
10500 NO_REC: NEXT_ID=CUSTOMER1.CTL; EXIT 
11000 ! 11000,10 - Browsing mode
11010 ! - Next
11020 NEXT_REC:
11030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
11040 _KEY$=KEY(Z(1),END=END_OF_FILE)
11050 READ (Z(1),KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
11060 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
11070 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
11080 _KEY$=KEN(Z(1),KEY=_KEY$,END=END_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
11090 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
11100 ! 2200 - Prior record
11110 PRIOR_REC:
11120 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
11130 _KEY$=KEP(Z(1),END=START_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
11140 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
11150 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
11160 _KEY$=KEP(Z(1),KEY=_KEY$,END=START_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
11170 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
11180 ! 2400 - First record
11190 FIRST_REC:
11200 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
11210 _KEY$=KEF(Z(1),ERR=NO_FIRST)
11220 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
11230 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
11240 ! 2600 - Last record
11250 LAST_REC:
11260 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
11270 _KEY$=KEL(Z(1),ERR=NO_LAST)
11280 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
11290 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
11300 BUSY_CHK:! 11300,10
11310 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
11320 IF _D$="NO" THEN EXIT 
11330 RETURN 
11340 DISP_REC:GOTO 1500
11400 PROCESS_READ:
11405 DIM A$(45)
11410 CUSTOMER1$=_KEY$(1,10); GOSUB SEL_CUST1
11420 LOCATION$=_KEY$(11,4); GOSUB SEL_LOC
11430 RETURN 
11500 CHECK_CHANGES:
11510 RETURN 
56000 REM + Modification History
56002 REM "202868-Modify FMGPZA to also call UPDFMP to update XPD after       
