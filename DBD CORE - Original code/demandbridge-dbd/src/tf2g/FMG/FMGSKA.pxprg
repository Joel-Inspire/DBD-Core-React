0010 ! FMGSKA - Location Setup
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 03/17/22 - 0.625659 - crg - SSP# 307397
0037 REM "307397-DBD-255 - Impending Whse Receipt notification - 943 XML     
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0049 ! 
0050 IF TCB(13)=1 THEN BEGIN 
0052 IF NUL(%WDX$) THEN MSGBOX MSG("WARN_WINDX"); GOTO 0075
0055 IF NOT(%GUI) THEN CHUI_MODE=1; %GUI=1
0060 PROCESS "FMGSKA","../FMG/FM.EN"
0065 IF CHUI_MODE THEN %GUI=0; RUN "ZMENU"
0075 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0079 ! 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0092 IF Q1$="" THEN Q1$=Q0$
0095 INIT:
0100 SETERR 9000
0110 X0$="FM2SKA",X1$="Location Setup",K9$="",K9=0
0120 DIM Z0$(80,"-"),S0$(220)
0130 K0=15,K1=3
0135 C9=-1
0140 PERFORM "GLGMAA;SETUP_LIBRARY"; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0200 REM "
0230 IF Q1$<>"" THEN X2=-1
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$(1)
0320 IOLIST B$,B[0],B[1],B[2]
0340 IOLIST D$
0370 IOLIST G$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X FM0...  02ORAP4...  03ORAR1...  04O AR5... 05O FMG...  06O FMP...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0585 RT_PARM$=""; CALL "RT2PRM",ERR=0586,X3$,X4$,RT_PARM$
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 _ZY0=HFN; OPEN (_ZY0)"ZY0"+%C$
0610 _ZY1=HFN; OPEN (_ZY1)"ZY1"+%C$
0620 GOSUB 6000
0630 FIND (Z[13],KEY=X3$(9,3)+"I/C")K8$
0635 FIND (Z[13],KEY=X3$(9,3)+"F/M")P0$
0636 FIND (Z[13],KEY=X3$(9,3)+"A/R")AR$; REM "SSP# 137035 
0640 K8=NUM(K8$(42,1))
0910 IF Q1$<>"" THEN READ (Z[1],KEY=Q1$,DOM=0911)
1000 REM "
1010 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1030 DIM B$(227),B[2],D$(40),G$(60),F$(243)
1035 DIM A$(618); REM " SSP# 149504
1040 IF LEN(A1$)<LEN(Q1$) THEN A1$=Q1$ ELSE A1$(1,LEN(Q1$))=Q1$
1045 A$(1,11+K9)=K9$+A1$
1050 IF Q1$<>"" THEN GOSUB 7700; GOTO 1100
1060 GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1250,1300,1500
1200 REM "Location type
1204 IF Q1$>"" THEN J9$=A$(1,1),C0=0; GOSUB 6000; GOSUB 6460; GOTO 1120
1205 IF C0<>2 THEN IF LEN(A1$)>0 THEN A$(1,1)=A1$(1,1),J9$=A$(1,1); GOTO 1212
1206 IF %VENDOR$<>"" THEN NXT_FOLDER=FLDR.FMGSKA.P.CTL
1207 RETURN 
1208 ! PRINT @(0,16+V0),'CL',
1209 X$="P=plant, D=distributor",J9$=A$(1+K9,1); REM USED TO ALLOW CUSTOMER
1210 CALL "ZZENTR","SRUXUX",A{ALL},A$,X4$,X3$,17,3+V0,1+K9,1,C0,"","{1"+X$,"PD ","FM2SKA00","CPD","",""
1211 IF A$(1,1)=" " THEN IF INT(ABS(C0))=3 THEN GOTO 6800 ELSE IF ABS(C0)<>4 THEN GOTO 1210
1212 IF J8$<>A$(1,1) OR J8$="D" THEN GOSUB 7800; J8$=A$(1,1)
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1216,6800,9800,6970
1216 IF J9$<>A$(1+K9,1) THEN PRINT @(17,5+V0),S0$(1,12),@(38,5+V0),'CL',; A$(2+K9,10)=""
1220 IF A$(1+K9,1)="D" THEN A$(2+K9,10)="          "; DIM B$(LEN(B$))
1240 GOTO 1120
1250 REM "Customer/Vendor
1252 SEL_ML_VEND_CODE: A$(1,1)=REC_TYPE$,%ML_VEND_CODE$=""
1256 IF Q1$<>"" THEN IF ABS(C0)=2 THEN GOTO 9900 ELSE GOSUB 7700; GOTO 1270
1257 GOSUB 7700; IF A$(1+K9,1)="D" THEN GOTO 1270
1258 CALL "ZZWLKU;PARSE_VEND",ML_VEND_CODE$,VEND_DIV$,VEND_CODE$; ML_VEND_CODE$=VEND_DIV$+VEND_CODE$,%ML_VEND_CODE$=ML_VEND_CODE$
1259 ! IF %AP_DIV_LEN=0 AND LEN(ML_VEND_CODE$)<10 THEN ML_VEND_CODE$="00"+ML_VEND_CODE$
1260 REFRESH_FLG=1,CHANGE_FLG=0,ML_VEND_CODE$=PAD(ML_VEND_CODE$,10,1,"0"),A$(2+K9,10)=ML_VEND_CODE$,ML_VEND_NAME$="" ! CALL "ZZENTR","AUX",A{ALL},A$,X4$,X3$,17,5+V0,2+K9,10,C0,T0$,"{2"+X$,"","FM2SKA02",T1$,T2$,""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1260,1261
1262 IF ABS(C0)=2 AND LEN(A1$)>0 THEN A1$=A1$(1,0)
1265 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1266,6800,9800,6970
1268 REM IF POS(" "<>A$(2+K9,10))=0 THEN GOTO 1275
1270 DIM B$(227); IF A$(1+K9,1)<>"D" THEN FIND (Z[T0],KEY=A$(2+K9,10),DOM=NOT_REC)IOL=0320
1275 ML_VEND_NAME$=B$(11,35) ! PRINT @(38,5+V0+L0),B$(11,35),
1280 DIM F$(243); FIND (Z[6],DOM=*NEXT,KEY="D"+A$(2,10))F$; IF F$(24,1)="Y" THEN GOSUB 8100 ELSE REM PRINT @(0,16),'CE',
1285 ! CALL "*WINGRP;ENABLE",FIELDS.GRP$
1286 ! IF %AP_DIV_LEN=0 THEN ML_VEND_CODE$=ML_VEND_CODE$(3),REFRESH_FLG=1
1287 NEXT_ID=ML_WHSE_LOC.CTL
1290 RETURN 
1292 NOT_REC:
1293 ML_VEND_NAME$="",ML_VEND_CODE$="",NEXT_ID=ML_VEND_CODE.CTL
1295 CALL "*WINGRP;DISABLE",FIELDS.GRP$
1297 CALL "*WINGRP;HIDE",WMS.GRP$
1298 RETURN 
1300 REM "Location code
1302 REM IF F$(24,1)="Y" THEN LET X$="Main Location (Blank) allowed for F/M Customers"
1305 J$=A$(1+K9,11),J2$="ZX"
1308 IF A$(1+K9,1)<>"D" THEN J2$="SU"+J2$ ELSE X$="Codes 0001 - 0999 Distributor Owned ; 9000 -9999 Customer Owned"
1309 SEL_WHSE_LOC:IF _EOM$=$00$ AND QRY_VAL$="" THEN CHANGE_FLG=0; EXIT END_IF ; FRESH_FLG=1,XXX=NUM(ML_WHSE_LOC$,ERR=*NEXT),ML_WHSE_LOC$=PAD(ML_WHSE_LOC$,4,0,"0"),ML_WHSE_DESC$="",A$(12+K9,4)=ML_WHSE_LOC$,ML_WHSE_LOC.CTL'VALUE$=ML_WHSE_LOC$; GOTO 1311
1310 REFRESH_FLG=1,ML_WHSE_LOC$=PAD(ML_WHSE_LOC$,4," "),ML_WHSE_DESC$="",A$(12+K9,4)=ML_WHSE_LOC$,ML_WHSE_LOC.CTL'VALUE$=ML_WHSE_LOC$
1311 IF X0=0 THEN X0=2
1312 IF Q1$="" THEN IF ABS(C0)=2 AND LEN(A1$)>1 THEN A1$=A1$(1,1)
1313 REM "IF C0>0 THEN IF A$(1+K9,1)="D" THEN IF POS(A$(12+K9,1)="09")=0 THEN GOTO 01310
1315 IF C0=-1 THEN GOTO 1310 ELSE IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1316,6800,9800,6970
1320 IF ABS(C0)<>2 THEN IF A$(1,1)="C" AND A$(12,4)="    " THEN GOTO 1310
1340 GOTO 1120
1500 REM "
1505 Z9=-1
1510 A1$=K9$+A$(LEN(K9$)+1,15),A$(1,LEN(K9$))=K9$,A2$=""
1515 CALL "ZZ2PRP","WW",WW_RESULT$,WW_DATE$; IF WW_RESULT$<>"Y" OR A1$(1,1)<>"D" THEN USE_WMS$="N" ELSE CALL "*WINGRP;SHOW",WMS.GRP$; DROP_BOX WRITE USE_WMS.CTL,""
1520 READ (Z[1],KEY=A1$,DOM=NEW_RECORD)IOL=0310; GOSUB ASSIGN_LIB
1525 Z9=0,A2$=A$(234,2)+A1$
1530 CALL "*WINGRP;ENABLE",FIELDS.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$
1580 GOSUB 6600; GOSUB 8100
1585 IF A$(1,1)="C" THEN IF A$(223+K9,1)=" " THEN ! PRINT @(0,17),'CL',@(0,18),'CL',
1590 GOTO 1700
1600 NEW_RECORD:
1601 ! 
1605 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1606 IF A1$(1,1)="D" AND (NUM(A1$(12,4))>=8000 AND NUM(A1$(12,4))<=8999) THEN CALL "*WINGRP;SHOW",WHSE_LOC.GRP$
1608 IF _YESNO$="NO" THEN EXECUTE ID$+"$="""""+",NEXT_ID="+ID$+".CTL"; ML_WHSE_LOC$=""; REFRESH_FLG=1; RETURN ! SSP242881 jdf
1609 DIM A$(618); A$(1,LEN(A1$))=A1$
1610 IF A$(1+K9,1)<>"D" THEN A$(16+K9,35)=B$(11,35); ML_LOOKUP$=B$(11,10) ! PRINT @(38,7+V0),A$(16+K9,35),
1615 IF A$(1,1)="C" THEN A$(224,10)=B$(235,10); GOSUB 8000
1618 GOSUB CLEAR_REC; GOSUB ASSIGN_ADDRS_LIB; GOSUB ASSIGN_LIB; CHANGE_FLG=0
1619 CALL "*WINGRP;ENABLE",FIELDS.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$
1620 NEXT_ID=ML_WHSE_DESC.CTL,REFRESH_FLG=1
1622 RETURN 
1629 ! CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 GOTO 1000
1650 IF A$(1,1)="D" THEN IF NUM(A$(12,4))>=8000 AND NUM(A$(12,4))<9000 THEN GOSUB 7500
1660 IF A$(1,1)="C" THEN GOSUB 7900
1690 GOTO 2000
1700 REM "
1710 IF A$(1,1)="D" THEN IF NUM(A$(12,4))>=8000 AND NUM(A$(12,4))<9000 THEN GOSUB 7500
1790 GOSUB 6200
1800 REM "
1801 RETURN 
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 EXTRACT (Z[1],KEY=A1$,DOM=1870)IOL=0310
1865 C9=1
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2040 ON X0 GOTO 2300,2400,2100,2150,2850,2900,2200,2500,2250,2550,2650,2700,2600,2750,2800,1800
2100 REM "Location description
2110 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,38,7+V0,16+K9,35,C0,"","{3"+X$,"","FM2SKA06","","",""
2140 GOTO 2020
2150 REM "Name & address info
2155 A9$=A$(51+K9,163)
2160 CALL "ZY2AAA",X3$,X4$,0,9+V0,"A","20Attn",2,A9$,A$(16+K9,35),0,C0,C3; IF ABS(C0)>4 THEN A$(51+K9,163)=A9$; GOSUB 6400; GOTO 2160
2165 A$(51+K9,163)=A9$
2190 GOTO 2020
2200 REM "Inventory sub-account
2210 IF A$(1,1)<>"D" THEN GOTO 2240
2215 IF K8$(39,1)<>"Y" THEN GOTO 2240
2220 CALL "ZZENTR","Z",A{ALL},A$,X4$,X3$,32,16+V0,214+K9,K8,C0,"","{3"+X$,"","FM2SKA69","","",""
2240 GOTO 2020
2250 REM "Items Management?
2255 X$="C=Physical Count, I=Issues and Shipments, E=Estimated, blank=none"
2260 IF A$(1,1)<>"C" THEN GOTO 2290
2267 IF F$(24,1)<>"Y" THEN GOTO 2290
2270 CALL "ZZENTR","SURX",A{ALL},A$,X4$,X3$,39,16+V0,223+K9,1,C0,"","{3"+X$," CIE","FM2SKA70","","",""
2275 IF C0>0 THEN GOSUB 8100; GOSUB 8200
2290 GOTO 2020
2300 REM "Vendor for 8000-8999
2310 IF A$(1,1)<>"D" THEN GOTO 2350 ELSE IF NUM(A$(12,4))>=8000 AND NUM(A$(12,4))<9000 THEN GOTO 2311 ELSE GOTO 2350
2315 SEL_VENDOR_D:
2318 IF STP(ML_VEND_CODE$)="" THEN NEXT_ID=ML_VEND_CODE.CTL,REFRESH_FLG=1; RETURN ! SSP220574 jdf
2320 A$(582+K9,10)=ML_VEND_CODE$ ! CALL "ZZENTR","AUX",A{ALL},A$,X4$,X3$,17,4+V0,224+K9,10,C0,"A/P","{2"+X$,"","FM2SKA20","AP4","AP2MAB",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2320,2321
2330 DIM B1$(227); FIND (Z[2],KEY=A$(582+K9,10),DOM=2320)B1$
2335 ML_VEND_NAME$=STP(B1$(11,35)),REFRESH_FLG=1
2340 RETURN 
2400 REM "Plant for loc 8000-8999
2405 IF A$(1,1)<>"D" THEN GOTO 2460 ELSE IF NUM(A$(12,4))>=8000 AND NUM(A$(12,4))<9000 THEN GOTO 2406 ELSE GOTO 2460
2406 SEL_PLANT_D: ML_PLANT_CODE$=PAD(ML_PLANT_CODE$,4,0,"0"),ML_PLANT_CODE.CTL'VALUE$=ML_PLANT_CODE$
2410 J1$="P"+A$(582,10)
2420 A$(592+K9,4)=ML_PLANT_CODE$ ! CALL "ZZENTR","SZUX",A{ALL},A$,X4$,X3$,17,5+V0,234+K9,4,C0,"","{2"+X$,J1$,"FM2SKA21",T3$,"",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2410,2411
2430 DIM A3$(238); READ (Z[1],KEY="P"+A$(582,14),DOM=2431)A3$
2440 IF A$(16,188)=S0$(16,188) THEN A$(16,188)=A3$(16,188)
2450 GOSUB 6200
2460 RETURN 
2500 REM "SALES TAX CODE"
2502 IF AR$(128,1)="N" AND A$(1,1)="D" THEN A$(224,10)=""; GOTO 2020; REM "SSP# 137035 
2503 ! IF A$(1,1)<>"D" THEN GOTO 2020; REM "SSP# 137035 
2504 SEL_SALES_TAX: ML_SALES_TAX$=PAD(ML_SALES_TAX$,10," "),REFRESH_FLG=1
2510 A$(224+K9,10)=ML_SALES_TAX$ ! CALL "ZZENTR","AU",A{ALL},A$,X4$,X3$,39,15,224+K9,10,C0,"AR5","{3"+X$,"","FM2SKA20","AR5","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2510,2511
2520 IF POS(" "<>A$(224,10))>0 THEN FIND (Z[4],DOM=NO_SALES_TAX,KEY=A$(224,10),KNO=0)IOL=0340 ELSE GOTO 2540
2530 ML_TAX_DESC$=D$(11,25)
2540 RETURN 
2545 NO_SALES_TAX: ML_SALES_TAX$="",NEXT_ID=ML_SALES_TAX.CTL; EXIT 
2550 REM "Count Cycle
2555 IF A$(1,1)<>"C" OR A$(223+K9,1)=" " THEN GOTO 2020
2560 CALL "ZZENTR","SUZ",A{ALL},A$,X4$,X3$,39,17,234+K9,2,C0,"","{3"+X$,"","FM2SKA22","","",""
2590 GOTO 2020
2605 IF A$(1,1)<>"C" THEN GOTO 2020
2606 Q$="c"+A$(2,10)
2610 CALL "ZZENTR","A",A{ALL},A$,X4$,X3$,39,19,236,9,C0,"FMC","{3"+X$,Q$,"FM2SKA24","FMPc","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2610,2611
2620 IF A$(236,9)=S0$(1,9) THEN GOTO 2640
2625 IF V9<>-2 THEN FIND (Z[6],KEY=Q$+A$(236,9),DOM=2610)IOL=0370
2630 ! PRINT @(49,19),G$(21,30),
2640 GOTO 2020
2655 IF A$(1,1)<>"C" OR A$(223+K9,1)=" " THEN GOTO 2020
2656 X$="If there is more than one place where inventory is counted, answer 'Y'"
2660 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,39,18,245,1,C0,"","{3"+X$,"","FM2SKA26","","",""
2690 GOTO 2020
2700 REM "digits for multiple count stops
2702 IF A$(1,1)<>"C" OR A$(223+K9,1)=" " THEN GOTO 2020
2705 X$="16 digits available for count stop / bin location."
2710 CALL "ZZENTR","Z",A{ALL},A$,X4$,X3$,72,18,246,2,C0,"","{3"+X$,"","FM2SKA28","","",""
2715 IF A$(246,2)>"16" THEN GOTO 2710
2740 GOTO 2020
2750 REM "Hidden warehouse?
2755 IF A$(1,1)<>"D" OR P0$(195,1)<>"Y" THEN GOTO 2020
2760 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,32,17,234,1,C0,"","{3"+X$,"","FM2SKA30","","",""
2790 GOTO 2020
2800 REM "Exclude setting GP adjustment to cost for C-type releases?
2805 IF A$(1,1)<>"D" OR P0$(171,1)<>"Y" THEN GOTO 2020
2810 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,59,18,235,1,C0,"","{3"+X$,"","FM2SKA32","","",""
2840 GOTO 2020
2850 REM "Override for stock PO order type
2851 IF A$(1,1)<>"D" THEN GOTO 2020
2852 GOTO 2020
2855 IF P0$(196,1)<>"Y" THEN GOTO 2020 ELSE X$="Enter order history order type for POs to this whse (B/Z)"
2860 CALL "ZZENTR","SUR",A{ALL},A$,X4$,X3$,59,14,375,1,C0,"","{3"+X$,"BZ","FM2SKA32","","",""
2890 GOTO 2020
2900 REM "Override for requisitions from this warehouse
2901 IF A$(1,1)<>"D" THEN GOTO 2020
2902 GOTO 2020
2905 IF P0$(196,1)<>"Y" THEN GOTO 2020 ELSE X$="Enter the order history type for custom items from this whse (D/B)"
2910 CALL "ZZENTR","SUR",A{ALL},A$,X4$,X3$,59,15,376,1,C0,"","{3"+X$,"DB","FM2SKA32","","",""
2940 GOTO 2020
6000 REM "BACKGROUND
6005 ! PRINT (0,ERR=6016)'SB',
6010 ! PRINT @(0,3+V0),"Location Type:"
6020 ! PRINT @(0,8+V0),Z0$,@(0,13+V0),Z0$,
6060 GOSUB 7800
6075 ! CALL "ZY2AAA",X3$,X4$,0,9+V0,"A","Attn",0,"","",0,0,0
6165 ! PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6220 ! PRINT @(17,7+V0),A$(12+K9,4),@(38,7+V0),A$(16+K9,35),
6225 IF K8$(39,1)="Y" THEN IF A$(1,1)="D" THEN ! PRINT @(32,16+V0),A$(214,K8),
6230 ! CALL "ZY2AAA",X3$,X4$,0,9+V0,"A","20Attn:",1,A$(51+K9,163),"",0,0,0
6240 GOSUB 8000
6250 IF A$(1,1)="C" AND F$(24,1)="Y" THEN GOSUB 8200
6255 IF A$(1,1)="D" AND P0$(195,1)="Y" THEN ! PRINT @(32,17),A$(234,1),
6260 IF A$(1,1)="D" THEN ! PRINT @(59,18),A$(235,1),
6321 IF A1$="" OR A1$(1,LEN(J8$))<>J8$ THEN GOTO 6895
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF Q1$="" THEN IF C9<0 THEN GOTO 6490
6460 ! PRINT @(17,3+V0),A$(1+K9,1),
6463 IF A$(1+K9,1)="D" THEN IF NUM(A$(12+K9,4))>=8000 AND NUM(A$(12+K9,4))<9000 THEN GOTO 6480
6464 GOSUB ASSIGN_LIB; GOSUB ASSIGN_ADDRS_LIB ! CALL "ZZDISP","A",A$(2+K9,10),T0$,X3$,"","",17,5+V0,X4$
6468 ! PRINT @(38,5+V0),B$(11,35),@(17,7+V0),A$(12+K9,4),
6470 RETURN 
6480 GOSUB 7500
6490 RETURN 
6500 DELETE_REC:
6502 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
6505 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
6508 IF _X$="NO" THEN GOTO *RETURN
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6511 IF RT_PARM$<>"" THEN IF A1$(1,1)="C" THEN CUST$=A1$(2,10); CALL "RT2WOC",ERR=6512,X3$,X4$,CUST$,"FM0...","D",A1$ ELSE CALL "RT2WOR",ERR=6512,X3$,X4$,"    ","FM0...","D",A1$,A$,0,A{ALL}
6512 IF REC_TYPE$="D" THEN NEXT_ID=ML_WHSE_LOC.CTL ELSE IF REC_TYPE$="P" THEN NEXT_ID=ML_VEND_CODE.CTL END_IF ; RETURN 
6513 GOSUB CLEAR_REC ! SSP242881 jdf
6515 RETURN 
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6605 DIM B$(227); IF T0>0 THEN FIND (Z[T0],KEY=A$(2+K9,10),DOM=6606)IOL=0320
6615 IF A$(1,1)="C" THEN FIND (Z[6],KEY="c"+A$(2,10)+A$(236,9),DOM=6616)IOL=0370
6620 IF AR$(128,1)="Y" AND A$(1,1)="D" THEN READ (Z(4),KEY=A$(582+K9,10),DOM=*NEXT)IOL=0340; ML_TAX_DESC$=D$(11,25)
6690 RETURN 
6700 REM "ADD ENTRY
6705 IF Z9=0 THEN GOTO 6790
6708 WRT_REC:
6710 WRITE (Z[1],KEY=A1$)IOL=0310
6711 IF RT_PARM$<>"" THEN IF A1$(1,1)="C" THEN CUST$=A1$(2,10); CALL "RT2WOC",ERR=6712,X3$,X4$,CUST$,"FM0...","U",A1$ ELSE CALL "RT2WOR",ERR=6712,X3$,X4$,"    ","FM0...","U",A1$,A$,0,A{ALL}
6715 IF A2$<>"" THEN REMOVE (Z[5],KEY=A2$,DOM=6716)
6720 ! WRITE (Z[5],KEY=A$(234,2)+A1$)  SSP#294284 Short key FMG
6775 IF MID(A1$,1,1)="P" THEN IF POS(X3$(30,1)="M")>0 THEN IF POS(MID(A1$,2,2)="0001",2)>0 THEN CALL "CM2AAA",X3$,Z[1],1,A1$,"",X9; REM "Update if vendor plant and master location
6790 RETURN 
6791 GOTO 1630
6795 IF Z=6 THEN GOTO 9900 ELSE GOTO 1630
6800 REM "NEXT ENTRY IN FILE
6805 T0=2,T0$="A/P",T1$="AP4",T2$="AP2MAB"; IF A$(1+K9,1)="C" THEN T0=3,T0$="A/R",T1$="AR1",T2$="AR2MAB"
6810 A1$=KEY(Z[1],END=6895)
6820 IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6821 IF A1$(1,LEN(J8$))<>J8$ THEN GOTO 6895
6822 IF Q1$<>"" THEN IF A1$(1,LEN(Q1$))<>Q1$ THEN PRINT 'RB',; READ (Z[1],KEY=Q1$,DOM=1515); GOTO 1515
6823 IF A1$(1,LEN(A$(1,11)))<>A$(1,11) THEN PRINT 'RB',; READ (Z[1],KEY=A$(1,11),DOM=1515); GOTO 1515
6825 A$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6870 GOTO 6895
6890 GOTO 1515
6895 PRINT 'RB',; READ (Z[1],KEY=J8$,DOM=1140); GOTO 1140
6902 V9$="1703  1705  1707  3807  "
7500 REM "CUSTOM PROGRAMMING ROUTINES
7510 REM "Vendor for "D" of 8000-8999
7520 ! PRINT (0,ERR=7521)'SB',
7530 ! PRINT @(2,4+V0),"Vendor Code:",@(3,5+V0),"Plant Code:",
7535 ! PRINT (0,ERR=7521)'SF',
7540 ! CALL "ZZDISP","A",A$(224+K9,10),"A/P",X3$,"","",17,4+V0,X4$
7550 ! PRINT @(17,5+V0),A$(234,4),
7590 RETURN 
7600 REM "Plant Code
7610 J1$="P"+A$(224,10)
7620 CALL "ZZENTR","SZUX",A{ALL},A$,X4$,X3$,17,5+V0,234+K9,4,C0,"","{2"+X$,J1$,"FM2SKA21",T3$,"",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 7610,7611
7650 DIM A3$(238); READ (Z[1],KEY="P"+A$(224,14),DOM=7651)A3$
7655 A$(16,188)=A3$(16,188)
7690 RETURN 
7700 REM "Set enter & disp params
7710 ON POS(A$(1+K9,1)="CDP") GOTO 7740,7720,7725,7730
7720 T3$="FM0C",T0=3,T0$="A/R",T1$="AR1",T2$="AR2MAB"; GOTO 7740
7725 T3$="FM0D"; GOTO 7740 ! PRINT @(17,5+V0),S0$(1,12),@(38,5+V0),'CL',; GOTO 7740
7730 T3$="FM0P",T0=2,T0$="A/P",T1$="AP4",T2$="AP2MAB"; GOTO 7740
7740 RETURN 
7800 REM "Top display
7801 IF LEN(A$)=0 THEN DIM A$(618); REM " SSP# 149504
7802 ! IF A$(1+K9,1)="D" THEN IF NUM(A$(12+K9,4))>=8000 AND NUM(A$(12+K9,4))<9000 THEN GOTO 7805 ! PRINT @(0,7+V0),S0$(1,14),@(32,7+V0),S0$(1,5)
7803 ! PRINT @(0,4+V0),S0$,@(0,5+V0),S0$(1,14),@(32,5+V0),S0$(1,5),@(0,7+V0),S0$(1,14),@(32,7+V0),S0$(1,5),@(0,16),'CE',
7805 ! PRINT (0,ERR=7806)'SB',
7810 ! IF A$(1+K9,1)="C" OR MID(AR$,128,1)="Y" THEN ! PRINT @(0,5+V0),"Customer Code:",@(0,7),"Location Code:",@(32,5+V0),"Name:",@(17,15),"Sales Tax Code:",; GOSUB 8100 ; REM "SSP# 137035 
7812 ! PRINT 'SB',
7820 ! IF A$(1+K9,1)="P" THEN ! PRINT 'SB',@(2,5+V0),"Vendor Code:",@(32,5+V0),"Name:",@(3,7+V0),"Plant Code:",@(32,7+V0),"Name:",
7830 IF A$(1+K9,1)="D" AND K8$(39,1)="Y" THEN CALL "*WINGRP;SHOW",INVENTORY.GRP$
7835 IF A$(1,1)="D" AND P0$(195,1)="Y" THEN CALL "*WINGRP;SHOW",HIDDEN.GRP$
7837 IF A$(1,1)="D" AND P0$(171,1)="Y" THEN CALL "*WINGRP;SHOW",GP.GRP$
7838 IF MID(AR$,128,1)="Y" THEN CALL "*WINGRP;SHOW",SALES_TAX.GRP$
7895 RETURN 
7900 REM "Main Cust. Loc"
7910 DIM D0$(200); DIM D0$(200); FIND (Z[6],KEY="D"+A1$(2,10),DOM=7911)D0$
7915 IF A$(234,2)="  " THEN A$(234,2)=D0$(46,2); IF D0$(46,2)<>"  " THEN A$(223,1)="I"
7920 A$(51,163)=B$(56,163)
7940 GOSUB 6200
7950 RETURN 
8000 REM 
8005 IF AR$(128,1)="Y" OR (AR$(128,1)="N" AND A$(1,1)="C") THEN ! THEN CALL "ZZDISP","A",A$(224,10),"AR5",X3$,"","",39,15,X4$; REM "SSP# 137035 
8014 IF A$(1,1)="C" OR (AR$(128,1)="Y" AND A$(1,1)="D") THEN IF D$>"" THEN ! PRINT @(53,15),D$(11,25),; REM "SSP#137035 
8040 RETURN 
8100 REM "C TYPE SCREEN
8102 IF A$(1,1)<>"C" THEN RETURN 
8105 ! PRINT @(8,16),"Items management method:",
8110 IF A$(223+K9,1)=" " THEN GOTO 8130
8120 ! PRINT @(8,16),"Items management method:",@(20,17),"Count Cycle:",@(11,18),"Multiple count stops?",
8125 ! PRINT @(45,18),"Positions for count stops:"
8130 ! PRINT 'SB',@(20,19),"Cost center:",
8135 ! PRINT 'SF',
8145 RETURN 
8200 REM "
8210 ! PRINT @(39,16+V0),A$(223+K9,1),
8220 IF A$(223+K9,1)<>" " THEN ! PRINT @(39,17),A$(234+K9,2),@(39,18),A$(245,1),@(72,18),A$(246,2),
8230 ! CALL "ZZDISP","A",A$(236,9),"FMC",X3$,"","",39,19,X4$
8240 IF G$>"" THEN ! PRINT @(49,19),G$(21,30),
8290 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 END_PROG: CMD_STR$="END"
9907 REM %VENDOR$="" ! SSP233025 jdf ! SSP246186 jdf
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 CLOSE (_ZY0); CLOSE (_ZY1)
9917 RETURN 
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 DISABLE_FIELDS:
10010 GOSUB CHECK_CHANGES
10020 GOSUB CLEAR_REC
10030 RETURN 
10500 SEL_ZIP_CODE:
10505 NEW_ZIP=0 ! SSP232397 jdf
10510 ML_ZIP_CODE$=PAD(ML_ZIP_CODE$,9,1," "),REFRESH_FLG=1
10520 READ (_ZY1,KEY=ML_ZIP_CODE$,DOM=NO_ZIP)_ZY1$; ML_CITY$=_ZY1$(10,15),ML_STATE$=_ZY1$(26,2); IF LEN(ML_PHONE$)=0 THEN ML_PHONE$=DIM(3); END_IF ; IF STP(MID(ML_PHONE$,1,3))="" THEN ML_PHONE$(1,3)=_ZY1$(40,3); END_IF ; IF LEN(ML_FAX$)=0 THEN ML_FAX$=DIM(3); END_IF ; IF STP(MID(ML_FAX$,1,3))="" THEN ML_FAX$(1,3)=_ZY1$(40,3); END_IF ; NEXT_ID=ML_FAX.CTL; GOSUB SEL_STATE; GOTO *RETURN ! SSP247904 jdf
10530 NEXT_ID=ML_CITY.CTL
10540 RETURN 
10550 NO_ZIP:
10555 NEW_ZIP=1,_ZY1$="" ! SSP232397 jdf
10560 K_ZIP$=KEY(_ZY1,END=9999)
10570 IF K_ZIP$(1,3)=MID(ML_ZIP_CODE$,1,3) THEN IF K_ZIP$(4,2)="XX" OR K_ZIP$(6,2)="TO" AND MID(ML_ZIP_CODE$,4,2)<=K_ZIP$(4,2) AND MID(ML_ZIP_CODE$,4,2)>=K_ZIP$(8,2) THEN READ (_ZY1)_ZY1$; GOTO END_ZIP
10800 END_ZIP:
10810 ML_CITY$=MID(_ZY1$,10,15),ML_STATE$=MID(_ZY1$,26,2),ML_FAX$=MID(_ZY1$,40,3),ML_PHONE$=ML_FAX$; NEXT_ID=ML_FAX.CTL; GOSUB SEL_STATE; GOTO *RETURN
11000 CLEAR_REC:
11010 REFRESH_FLG=1,ML_ADDR1$="",ML_ADDR2$="",ML_CITY$="",ML_STATE$="",ML_ZIP_CODE$="",ML_FAX$="",ML_LOOKUP$="",ML_AGENT$="",ML_GREETING$="",ML_PHONE$="",ML_ST_DESC$="",ML_SALES_TAX$="",ML_TAX_DESC$="",ML_BUS_UNIT$="",XML_MAP$="",ML_LOC_COUNTRY$="",CB_XML_IWR$="" ! SSP233063 jdf SSP307210, DBD-255
11020 ON POS(REC_TYPE$="DP") GOTO *RETURN,CLR_REC_D,CLR_REC_P
11030 CLR_REC_D:
11040 ML_WHSE_LOC$="",ML_SUBACCT$="",CB_HIDDEN$=" ",CB_EXCLUDE$=" ",ML_WHSE_DESC$="",NEXT_ID=ML_WHSE_LOC.CTL,ML_SALES_TAX$="",ML_TAX_DESC$="",BIN_MASK$="" ! SSP 217316
11199 RETURN 
11200 CLR_REC_P:
11210 ML_WHSE_LOC$="",ML_WHSE_DESC$="",ML_VEND_CODE$="",ML_VEND_NAME$="",NEXT_ID=ML_VEND_CODE.CTL
11299 RETURN 
12000 ! 12000 - Browsing mode
12010 ! - Next
12020 NEXT_REC:
12030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12040 _KEY$=KEY(Z(1),END=END_OF_FILE); IF _KEY$(1,1)<>REC_TYPE$ THEN READ (Z(1),ERR=CHK_ERR_NXT); GOTO 12040
12045 IF %VENDOR$<>"" AND REC_TYPE$="P" AND _KEY$(2,10)<>%VENDOR$ THEN READ (Z(1),END=END_OF_FILE); GOTO 12040
12050 READ (Z(1),KEY=_KEY$,ERR=*NEXT); GOTO PROCESS_REC
12060 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
12070 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
12080 _KEY$=KEN(Z(1),KEY=_KEY$,END=END_OF_FILE); IF _KEY$(1,1)<>REC_TYPE$ THEN READ (Z(1),ERR=CHK_ERR_NXT); GOTO 12080 ELSE READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); GOTO PROCESS_REC
12090 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
12200 ! 12200 - Prior record
12210 PRIOR_REC:
12220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12230 _KEY$=KEP(Z(1),END=START_OF_FILE); IF MID(_KEY$,1,1)<>REC_TYPE$ THEN READ (Z(1),KEY=_KEY$,ERR=*NEXT); GOTO 12230 ELSE READ (Z(1),KEY=_KEY$,ERR=*NEXT)
12232 IF %VENDOR$<>"" AND REC_TYPE$="P" AND _KEY$(2,10)<>%VENDOR$ THEN GOTO 12230
12239 GOTO PROCESS_REC
12240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
12250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
12260 _KEY$=KEP(Z(1),KEY=_KEY$,END=START_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); GOTO PROCESS_REC
12270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
12400 ! 12400 - First record
12410 FIRST_REC:
12420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12425 IF %VENDOR$<>"" AND REC_TYPE$="P" THEN READ (Z(1),KEY="P"+%VENDOR$,DOM=NEXT_REC)
12430 _KEY$=KEF(Z(1),ERR=NO_FIRST); READ (Z(1),KEY=_KEY$)
12432 IF MID(_KEY$,1,1)<>REC_TYPE$ THEN _KEY$=KEY(Z(1),ERR=NO_FIRST); READ (Z(1),ERR=CHK_ERR_NXT); GOTO 12432
12440 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); GOTO PROCESS_REC
12450 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
12600 ! 12600 - Last record
12610 LAST_REC:
12620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12625 IF %VENDOR$<>"" AND REC_TYPE$="P" THEN READ (Z(1),KEY="P"+%VENDOR$+"~~~~",DOM=PRIOR_REC)
12630 _KEY$=KEL(Z(1),ERR=NO_LAST)
12636 IF _KEY$(1,1)=REC_TYPE$ THEN GOTO 12640
12638 _KEY$=KEP(Z(1),ERR=NO_LAST); IF _KEY$(1,1)<>REC_TYPE$ THEN READ (Z(1),ERR=NO_LAST); GOTO 12637
12640 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); GOTO PROCESS_REC
12650 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
12700 ! 12700,10
12710 BUSY_CHK:
12720 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
12730 IF _D$="NO" THEN EXIT 
12740 RETURN 
13000 RECORD_TYPE:
13010 A$(1,1)=FOLDER_ID$(LEN(FOLDER_ID$)),REC_TYPE$=A$(1,1),A$(2,10)="",REFRESH_FLG=1; GOSUB CLEAR_REC
13020 CALL "*WINGRP;DISABLE",FIELDS.GRP$
13022 CALL "*WINGRP;HIDE",WMS.GRP$
13025 READ (Z(1),KEY=REC_TYPE$,DOM=*NEXT)
13027 GOSUB 7800
13030 RETURN 
13620 IF _YESNO$="YES" THEN GOSUB ASSIGN_PROG; CHANGE_FLG=0; GOSUB WRITE_REC
14000 ASSIGN_ADDRS_LIB:
14010 REFRESH_FLG=1,ML_ADDR1$=A$(51,30),ML_ADDR2$=A$(81,30),ML_CITY$=A$(111,15),ML_STATE$=A$(127,2),ML_ZIP_CODE$=A$(129,9),ML_FAX$=A$(138,12),ML_LOOKUP$=A$(150,10),ML_AGENT$=A$(160,20),ML_GREETING$=A$(180,20),ML_PHONE$=A$(200,14),ML_BUS_UNIT$=A$(568,10),XML_MAP$=A$(568,10),ML_LOC_COUNTRY$=A$(380,2),CB_XML_IWR$=A$(378,1) ! SSP233063 jdf SSP307210, DBD-255
14015 IF STP(ML_LOOKUP$)="" THEN ML_LOOKUP$=UCS(MID(B$,11,10))
14020 GOSUB SEL_STATE
14050 RETURN 
14060 SEL_STATE:
14070 A$(127,2)=ML_STATE$,REFRESH_FLG=1
14080 READ (_ZY0,KEY=A$(127,2),DOM=*NEXT)_ZY0$; ML_ST_DESC$=_ZY0$(3,30); GOTO *RETURN
14090 IF NEW_ZIP THEN NEXT_ID=ML_CITY.CTL ELSE NEXT_ID=ML_STATE.CTL ! SSP232397 jdf
14095 ML_STATE$="",ML_ST_DESC$="" ! NEW_ZIP=0 ! SSP232397 jdf
14100 RETURN 
14200 PROCESS_REC:
14210 A$(1,LEN(_KEY$))=_KEY$
14215 IF REC_TYPE$="P" THEN T0=2 ELSE T0=0
14220 GOTO 1500
14299 RETURN 
15000 CHECK_CHANGES:
15010 IF CHANGE_FLG=0 THEN GOTO *RETURN
15020 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
15030 IF _YESNO$="YES" THEN GOSUB WRITE_REC
15290 CHANGE_FLG=0
15299 RETURN 
15500 SELECT_USE_WMS:
15510 A$(602,1)=USE_WMS$
15590 RETURN 
15800 GLOBAL_VEND_CLEAR:! SSP246186 jdf
15805 ENTER ! SSP246186 jdf
15807 IF %MAZ_FLG=1 THEN GOTO 15820 ! SSP246186 jdf
15810 %VENDOR$="" ! SSP246186 jdf
15820 EXIT ! SSP246186 jdf
16000 ! Validate Mask SSP 217136
16005 VALIDATE_BIN_MASK:
16010 IF BIN_MASK.CTL'FOCUS=1 THEN BIN_MASK.CTL'AUTO=1 ELSE BIN_MASK.CTL'AUTO=0; GOTO 16065
16015 MSG_TITLE$="Invalid Mask Format"
16020 MSG_TEXT$="The mask format can only contain an X or -."
16025 GOSUB PAD_TMP_BIN
16030 FOR AB=1 TO LEN(STP(TMP_BIN_MASK$))
16035 IF TMP_BIN_MASK$(AB,1)<>"X" AND TMP_BIN_MASK$(AB,1)<>"-" THEN {
16040 MSGBOX MSG_TEXT$,MSG_TITLE$,"!,OK",MSG_RESP$
16045 EXITTO 16065
16050  }
16055 NEXT AB
16060 A$(603,15)=BIN_MASK$ ! SSP 217316
16065 EXIT 
16070 ! Pad Temp Bin Mask
16075 PAD_TMP_BIN:
16080 TMP_BIN_MASK$=PAD(STP(BIN_MASK$),15,1,"X")
16085 RETURN 
16090 ! Display Bin Mask Example
16095 DISPLAY_BIN_EX:
16100 BIN_MASK_EX$=STR(LOC_ID$:TMP_BIN_MASK$)
16105 REFRESH_FLG=1
16110 RETURN 
17000 WRITE_REC:
17010 GOSUB ASSIGN_PROG
17020 GOSUB WRT_REC
17025 GOSUB UPDATE_ZIP ! SSP232397 jdf
17030 CHANGE_FLG=0
17040 IF REC_TYPE$="D" THEN NEXT_ID=ML_WHSE_LOC.CTL
17050 IF REC_TYPE$="P" THEN NEXT_ID=ML_VEND_CODE.CTL
17199 RETURN 
18000 ASSIGN_LIB: REFRESH_FLG=1
18005 CHANGE_FLG=0
18008 REFRESH_FLG=1,ML_ADDR1$=A$(51,30),ML_ADDR2$=A$(81,30),ML_CITY$=A$(111,15),ML_STATE$=A$(127,2),ML_ZIP_CODE$=A$(129,9),ML_FAX$=A$(138,12),ML_LOOKUP$=A$(150,10),ML_AGENT$=A$(160,20),ML_GREETING$=A$(180,20),ML_PHONE$=A$(200,14),ML_BUS_UNIT$=A$(568,10),XML_MAP$=A$(568,10),ML_LOC_COUNTRY$=A$(380,2),CB_XML_IWR$=A$(378,1) ! SSP233063 jdf SSP307210, DBD-255
18010 ON POS(REC_TYPE$="DP") GOTO *RETURN,LIB_REC_D,LIB_REC_P
18020 LIB_REC_D:
18040 ML_WHSE_LOC$=A$(12+K9,4),ML_SUBACCT$=A$(214,K8),CB_HIDDEN$=A$(234,1),CB_EXCLUDE$=A$(235,1),ML_WHSE_DESC$=A$(16,35),ML_SALES_TAX$=STP(A$(224,10)) ! SSP212316 jdf
18045 IF STP(ML_SUBACCT$)="" THEN ML_SUBACCT$="00"; REM "SSP 206988
18050 IF STP(ML_SALES_TAX$)="" THEN ML_TAX_DESC$="" ELSE GOSUB SEL_SALES_TAX
18060 IF NUM(A$(12,4))>=8000 AND NUM(A$(12,4))<9000 THEN ML_VEND_CODE$=A$(582,10),ML_PLANT_CODE$=A$(592,4)
18065 USE_WMS$=A$(602,1)
18070 BIN_MASK$=A$(603,15) ! SSP 217316
18199 RETURN 
18200 LIB_REC_P:
18210 ML_VEND_CODE$=A$(2+K9,10),ML_VEND_NAME$=B$(11,35),ML_WHSE_LOC$=A$(12+K9,4),ML_WHSE_DESC$=A$(16,35),ML_SALES_TAX$=STP(A$(224,10))
18220 ! IF %AP_VEND_LEN=0 THEN ML_VEND_CODE$=ML_VEND_CODE$(3)
18230 IF STP(ML_SALES_TAX$)="" THEN ML_TAX_DESC$="" ELSE GOSUB SEL_SALES_TAX
18399 RETURN 
19000 ASSIGN_PROG:
19010 REFRESH_FLG=1,A$(51,30)=ML_ADDR1$,A$(81,30)=ML_ADDR2$,A$(111,15)=ML_CITY$,A$(127,2)=ML_STATE$,A$(129,9)=ML_ZIP_CODE$,A$(138,12)=ML_FAX$,A$(150,10)=ML_LOOKUP$,A$(160,20)=ML_AGENT$,A$(180,20)=ML_GREETING$,A$(200,14)=ML_PHONE$,A$(568,10)=ML_BUS_UNIT$,A$(568,10)=XML_MAP$,A$(380,2)=ML_LOC_COUNTRY$,A$(378,1)=CB_XML_IWR$ ! SSP233063 jdf SSP307210, DBD-255
19020 ON POS(REC_TYPE$="DP") GOTO *RETURN,PRG_REC_D,PRG_REC_P
19030 PRG_REC_D:
19040 A$(12+K9,4)=ML_WHSE_LOC$,A$(214,K8)=ML_SUBACCT$,A$(234,1)=CB_HIDDEN$,A$(235,1)=CB_EXCLUDE$,A$(16,35)=ML_WHSE_DESC$,A$(224+K9,10)=ML_SALES_TAX$ ! SSP212316 jdf
19042 A$(603+K9,15)=BIN_MASK$ ! SSP 217136
19050 IF A$(1,1)<>"D" THEN GOTO *RETURN ELSE IF NUM(A$(12,4))>=8000 AND NUM(A$(12,4))<9000 THEN GOTO *NEXT ELSE GOTO *RETURN
19060 A$(582,10)=ML_VEND_CODE$,A$(592,4)=ML_PLANT_CODE$
19100 RETURN 
19200 PRG_REC_P:
19205 ! IF %AP_DIV_LEN=0 AND LEN(ML_VEND_CODE$)<10 THEN ML_VEND_CODE$="00"+ML_VEND_CODE$
19210 A$(2+K9,10)=ML_VEND_CODE$,A$(12+K9,4)=ML_WHSE_LOC$,A$(16,35)=ML_WHSE_DESC$,A$(224,10)=ML_SALES_TAX$
19399 RETURN 
21100 UPDATE_ZIP:! If new_zip then update the zip code table ! SSP232397 jdf
21110 IF NEW_ZIP THEN CALL "ZYGMBA;UPDATE_ZIP",ML_ZIP_CODE$,ML_CITY$,ML_STATE$,"",MID(ML_PHONE$,1,3),ML_CITY$ ! get area code from phone,long city from regular city ! SSP232397 jdf
21180 NEW_ZIP=0 ! SSP232397 jdf
21195 RETURN ! SSP232397 jdf
56000 ! "194356-For American, Program FMGIAB,Customer Item setup, query     
56002 REM "180032-Wireless Warehousing                                        
56004 REM "198995-Export po receipts in XML. customer owned and supplied      
56006 REM "206988-If doing GL Substitution by location force the entry        
56008 REM "212316-On the warehouse setup screen, the Inventory Sub-Account to 
56010 REM "217136-Ability to print the Bin location with the mask in WMS on   
56012 REM "220574-FMGSKA - Using 8000 level warehouse should require a vendor 
56014 REM "232397-When setting up a plant location for a vendor could the     
56016 REM "233025-GUI - Stock PO - in the shipping (POGMAE), in the warehouse 
56018 REM "233063-Add 208887 changes to GUI-Add XML Mapping Code to FMGSKA    
56020 REM "242881-FMGSKA - Other Issues w/ whse setup screen                  
56022 REM "247904-Area code disappears when zip code/tax code is updated...?? 
56023 REM "294284-PE in FM2UT2 error 47 line 7080                             
56024 REM "307210-International shipping address - add country code           
56025 REM "307386-Correct display issue in FMGSKA - to use WMS drop down      
56026 REM "307397-DBD-255 - Impending Whse Receipt notification - 943 XML     
