0010 ! FMGMPH - File Maintenance Program for FMPM_FreightMarkup (FMPM)
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Mar. 22, 2002 14:11
0030 ! ************************************************************************
0035 REM "5.7 - 06/06/17 - 15.6925 - dmm - SSP# 291546
0037 REM "291546-Freight Markup; ability to toggle percentage vs. flat in    
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "FMGMPH","../OPG/OP.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0113 REM + [202335]-Added the IOLIST for XPM at 115
0114 DIM A[12]
0115 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11]
0130 DIM FMP$:"M_CONSTANT:C(1),frt_markup_table:C(2),FRT_MARKUP_TBL_DESC:C(30),ALLOW_OR_OVERRIDE:C(1),BASED_ON_SLS_OR_FRT:C(1),ORD_HIST:C(1),APPLY_COMM:C(1),COMM_CODE:C(5),PC_INV_LINE:C(3),COST_ONLY:C(1),SHIP_VIA_CODE:C(2)" ! ,PRCENT_MARKUP,UP_TO_AMOUNT_01,PRCNT_MARKUP_01,UP_TO_AMOUNT_02,PRCNT_MARKUP_02,UP_TO_AMOUNT_03,PRCNT_MARKUP_03,UNUSED_1,UNUSED_2,UNUSED_3,CEILING_AMT,MIN_AMOUNT_TO_MARKUP"
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=2,_FIRST_KEY=0,_FIRST_FIELD=0
0155 FMPIOL:IOLIST FMP$,PRCENT_MARKUP,UP_TO_AMOUNT_01,PRCNT_MARKUP_01,UP_TO_AMOUNT_02,PRCNT_MARKUP_02,UP_TO_AMOUNT_03,PRCNT_MARKUP_03,UNUSED_1,UNUSED_2,FLAT_AMT_MARKUP,CEILING_AMT,MIN_AMOUNT_TO_MARKUP ! SSP 225881
0159 FMPPFX$="M"
0160 _FILE_NAME$="FMP"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO)_FILE_NAME$
0175 FFA=HFN; OPEN (FFA)"FFA"+%C$
0178 REM + [202335]-Renumbered line 180 to 185
0179 REM + [202335]-Added lines 180-182 to open XPM
0180 _XPM_NAME$="XPM"+%C$
0181 _XPM_CHN=HFN
0182 OPEN (_XPM_CHN)_XPM_NAME$
0185 SEG2$="",SEG$="",SEG4$="",SEG5$=""
0190 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 CALL "*WINGRP;DISABLE",FIELDS.GRP$
0530 GOSUB CLEAR_REC
0540 _FIRST_FIELD=FMP.FRT_MARKUP_TBL_DESC.CTL
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0935 IF FFA<>0 THEN CLOSE (FFA); FFA=0
0939 REM + [202335]-Added line 940 to close XPM
0940 IF _XPM_CHN<>0 THEN CLOSE (_XPM_CHN); _XPN_CHN=0
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 IF NUL(FMP.FRT_MARKUP_TABLE$) THEN RETURN 
1030 KEY_1$="M"+FMP.FRT_MARKUP_TABLE$; KEY_SIZE=LEN(KEY_1$)
1040 READ DATA FROM "" TO IOL=FMPIOL
1050 READ (_FIL_NO,KEY=KEY_1$,DOM=NEW_RECORD)IOL=FMPIOL; CALL "UPDFFA;READBYKEY",FFA,0,MID(KEY_1$,2,2),SEG2$,SEG3$,SEG4$,SEG5$,FFA$,FFA{ALL},FOUNDFFA; GOSUB GET_FFA
1060 CALL "*WINGRP;ENABLE",FIELDS.GRP$; GOSUB SELECT_FMPBASED
1070 CALL "*WINGRP;ENABLE",BUTTONS.GRP$
1095 GOSUB PANEL_PROCESS; GOSUB SHIP_CODE_SET
1100 CHANGE_FLG=0; GOSUB STORE_INFO; REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 MSGBOX MSG("ADD_RECORD"),MSG("VERIFY"),"?,YESNO",ANS$
1230 IF ANS$="NO" THEN FMP.FRT_MARKUP_TABLE$=""; NEXT_ID=FMP.FRT_MARKUP_TABLE.CTL; RETURN 
1240 IF KEY_1$="MZZ" THEN MSGBOX MSG("MPH_02")+SEP+MSG("MPH_03"),MSG("FYI"),"!"
1250 GOSUB CLEAR_FIELDS
1260 FMP.M_CONSTANT$="M"; FMP.FRT_MARKUP_TABLE$=KEY_1$(2,2)
1265 FMP.ALLOW_OR_OVERRIDE$="Y" ! SSP#234561
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 CALL "*WINGRP;ENABLE",FIELDS.GRP$; CALL "*WINGRP;ENABLE",BUTTONS.GRP$; GOSUB SELECT_FMPBASED
1290 REFRESH_FLG=1
1295 RETURN 
1400 ! 1400 - Add RECORD
1401 REM + [202335]-Renumbered the 1400-1490
1410 WRITE_REC:
1412 GOSUB CHECK_FIELDS; IF CHK_PC THEN NEXT_ID=FMP.PC_INV_LINE.CTL; IGNORE_EXIT=1; EXIT ! SSP 224104
1415 MSGBOX MSG("REC_UPDADD"),MSG("VERIFY"),"?,YESNO",ANS$
1420 GOSUB SET_FFA
1425 IF ANS$="NO" THEN RETURN 
1430 WRITE (_FIL_NO,KEY=KEY_1$)IOL=FMPIOL; CALL "UPDFFA;UPDATE",FFA,FFA$,FFA{ALL},BUSYFFA
1435 REM + [202335]-Added lines 1440-1450 to update XPM
1440 GOSUB CLEAR_XPM
1445 GOSUB SET_XPM
1450 CALL "UPDFMP;DUPLICATE_XPM",_XPM_CHN,FMP$,A{ALL},"U"
1455 GOSUB CLEAR_FIELDS
1460 CALL "*WINGRP;DISABLE",BUTTONS.GRP$; CALL "*WINGRP;DISABLE",FIELDS.GRP$
1465 NEXT_ID=FMP.FRT_MARKUP_TABLE.CTL
1470 CHANGE_FLG=0
1490 EXIT 
1600 ! 1600 - Delete
1601 REM + [202335]-Renumbered 1600-1690
1610 DELETE_REC:
1615 MSGBOX MSG("DELETE_REC"),MSG("VERIFY"),"?,YESNO",ANS$
1620 IF ANS$="NO" THEN RETURN 
1625 REMOVE (_FIL_NO,KEY=KEY_1$,DOM=*RETURN)
1630 REM + [202335]-Added lines 1635-1645 to update XPM
1635 GOSUB CLEAR_XPM
1640 GOSUB SET_XPM
1645 CALL "UPDFMP;DUPLICATE_XPM",_XPM_CHN,FMP$,A{ALL},"D"
1650 GOSUB CLEAR_FIELDS
1655 CALL "*WINGRP;DISABLE",FIELDS.GRP$; CALL "*WINGRP;DISABLE",BUTTONS.GRP$
1660 NEXT_ID=FMP.FRT_MARKUP_TABLE.CTL
1665 REFRESH_FLG=1
1690 RETURN 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 CALL "*WINGRP;DISABLE",FIELDS.GRP$; CALL "*WINGRP;DISABLE",BUTTONS.GRP$
1845 NEXT_ID=FMP.FRT_MARKUP_TABLE.CTL
1850 REFRESH_FLG=1
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 GOSUB CHECK_CHANGES
2035 IF NUL(KEY_1$) THEN READ (_FIL_NO,KEY="M  ",DOM=*NEXT) ELSE READ (_FIL_NO,KEY=KEY_1$,DOM=*NEXT)
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF _KEY$(1,1)<>FMPPFX$ THEN GOTO END_OF_FILE
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*RETURN)IOL=FMPIOL; KEY_1$=_KEY$; CALL "UPDFFA;READBYKEY",FFA,0,MID(KEY_1$,2,2),SEG2$,SEG3$,SEG4$,SEG5$,FFA$,FFA{ALL},FOUNDFFA; GOSUB GET_FFA; GOSUB ENABLE_ROUTINE; RETURN 
2100 END_OF_FILE: MSGBOX MSG("END_OF_FIL"),MSG("FYI"),"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 GOSUB CHECK_CHANGES
2225 IF NUL(KEY_1$) THEN GOTO START_OF_FILE ELSE READ (_FIL_NO,KEY=KEY_1$,DOM=*NEXT)
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE)
2231 IF _KEY$(1,1)<>FMPPFX$ THEN GOTO START_OF_FILE
2232 READ (_FIL_NO,KEY=_KEY$,ERR=*RETURN)IOL=FMPIOL; KEY_1$=_KEY$; CALL "UPDFFA;READBYKEY",FFA,0,MID(KEY_1$,2,2),SEG2$,SEG3$,SEG4$,SEG5$,FFA$,FFA{ALL},FOUNDFFA; GOSUB GET_FFA; GOSUB ENABLE_ROUTINE; RETURN 
2270 START_OF_FILE: MSGBOX MSG("START_FILE"),MSG("FYI"),"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 GOSUB CHECK_CHANGES
2430 READ (_FIL_NO,KEY=FMP.M_CONSTANT$,ERR=*NEXT)
2431 _KEY$=KEY(_FIL_NO,ERR=NO_FIRST)
2440 IF _KEY$(1,1)<>FMPPFX$ THEN GOTO NO_FIRST
2450 READ (_FIL_NO,KEY=_KEY$,ERR=*RETURN)IOL=FMPIOL; KEY_1$=_KEY$; CALL "UPDFFA;READBYKEY",FFA,0,MID(KEY_1$,2,2),SEG2$,SEG3$,SEG4$,SEG5$,FFA$,FFA{ALL},FOUNDFFA; GOSUB GET_FFA; GOSUB ENABLE_ROUTINE; RETURN 
2460 NO_FIRST: MSGBOX MSG("REC_NO_1ST"),MSG("FYI"),"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 GOSUB CHECK_CHANGES
2630 READ (_FIL_NO,KEY=FMP.M_CONSTANT$+$FE$,ERR=*NEXT)
2640 _KEY$=KEP(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=*RETURN)IOL=FMPIOL; KEY_1$=_KEY$; CALL "UPDFFA;READBYKEY",FFA,0,MID(KEY_1$,2,2),SEG2$,SEG3$,SEG4$,SEG5$,FFA$,FFA{ALL},FOUNDFFA; GOSUB GET_FFA; GOSUB ENABLE_ROUTINE; RETURN 
2660 NO_LAST: MSGBOX MSG("REC_NO_LST"),MSG("FYI"),"!"; EXIT 
3600 ! Busy Record Display
3610 BUSY_CHK:
3620 MSGBOX MSG("REC_LOCKED"),MSG("REC_ACCESS"),"!,YESNO",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3800 CHECK_CHANGES:
3810 GOSUB DETERMINE_CHANGES
3820 IF CHANGE_FLG=0 THEN RETURN 
3830 MSGBOX MSG("REC_ALTERD"),MSG("UPDATE"),"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3870 RETURN 
5000 CHECK_FIELDS:! SSP 224104
5010 CHK_PC=0 ! SSP 224104
5020 IF STP(FMP.APPLY_COMM$)<>"Y" THEN RETURN ! ssp 224104
5040 IF STP(FMP.PC_INV_LINE$)<>"" THEN RETURN ! ssp 224104
5050 MSGBOX MSG("FMGODB_96") ! NEXT_ID=FMP.PC_INV_LINE.CTL ! SSP 224104
5060 CHK_PC=1 ! SSP 224104
5090 RETURN ! SSP 224104
9999 END 
11000 ! Save off information.....
11010 STORE_INFO:
11020 ! 
11030 _FRT_MARKUP_TBL_DESC$=FMP.FRT_MARKUP_TBL_DESC$
11040 _ALLOW_OR_OVERRIDE$=FMP.ALLOW_OR_OVERRIDE$
11050 _BASED_ON_SLS_OR_FRT$=FMP.BASED_ON_SLS_OR_FRT$
11060 _ORD_HIST$=FMP.ORD_HIST$
11070 _APPLY_COMM$=FMP.APPLY_COMM$
11080 _COMM_CODE$=FMP.COMM_CODE$
11090 _SHIP_VIA_CODE$=FMP.SHIP_VIA_CODE$
11100 _PC_INV_LINE$=FMP.PC_INV_LINE$
11110 _COST_ONLY$=FMP.COST_ONLY$
11120 _PRCENT_MARKUP=PRCENT_MARKUP
11125 _CEILING_AMT=CEILING_AMT
11130 _UP_TO_AMOUNT_01=UP_TO_AMOUNT_01
11140 _PRCNT_MARKUP_01=PRCNT_MARKUP_01
11150 _UP_TO_AMOUNT_02=UP_TO_AMOUNT_02
11160 _PRCNT_MARKUP_02=PRCNT_MARKUP_02
11170 _UP_TO_AMOUNT_03=UP_TO_AMOUNT_03
11180 _PRCNT_MARKUP_03=PRCNT_MARKUP_03
11230 _MIN_AMOUNT_TO_MARKUP=MIN_AMOUNT_TO_MARKUP
11290 RETURN 
12000 SET_FFA:
12010 FFA[0]=FRT_UPTO_1,FFA[2]=FRT_UPTO_2,FFA[4]=FRT_UPTO_3,FFA[6]=FRT_UPTO_4
12020 FFA[1]=MKUP_PER_1,FFA[3]=MKUP_PER_2,FFA[5]=MKUP_PER_3,FFA[7]=MKUP_PER_4
12030 FFA$(1,2)=FMP$(2,2) ! SSP#234561
12040 FFA$(3,1)=MODE_1$,FFA$(4,1)=MODE_2$,FFA$(5,1)=MODE_3$,FFA$(6,1)=MODE_4$ ! WO291546
12090 RETURN 
12100 GET_FFA:
12110 FRT_UPTO_1=FFA[0],FRT_UPTO_2=FFA[2],FRT_UPTO_3=FFA[4],FRT_UPTO_4=FFA[6]
12120 MKUP_PER_1=FFA[1],MKUP_PER_2=FFA[3],MKUP_PER_3=FFA[5],MKUP_PER_4=FFA[7]
12130 MODE_1$=FFA$(3,1),MODE_2$=FFA$(4,1),MODE_3$=FFA$(5,1),MODE_4$=FFA$(6,1) ! WO291546
12190 RETURN 
12400 REM + [202332]-Added this routine to set the fields in an array
12405 SET_XPM:
12410 A[0]=PRCENT_MARKUP
12412 A[1]=UP_TO_AMOUNT_01,A[2]=PRCNT_MARKUP_01
12416 A[3]=UP_TO_AMOUNT_02,A[4]=PRCNT_MARKUP_02
12418 A[5]=UP_TO_AMOUNT_03,A[6]=PRCNT_MARKUP_03
12420 A[7]=UNUSED_1,A[8]=UNUSED_2,A[9]=FLAT_AMT_MARKUP ! SSP 225881
12422 A[10]=CEILING_AMT
12424 A[11]=MIN_AMOUNT_TO_MARKUP
12495 RETURN 
12500 REM + [202332]-Added this routine to clear the array
12505 CLEAR_XPM:
12510 FOR AB%=0 TO 12
12520 A[AB%]=0
12530 NEXT AB%
12595 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13015 CALL "UPDFFA;CLEAR_FIELDS",FFA$,FFA{ALL}
13020 IF _CLR_FLG$="R" THEN FMP.M_CONSTANT$="M"
13030 IF _CLR_FLG$="R" THEN FMP.FRT_MARKUP_TABLE$=""
13040 FMP.FRT_MARKUP_TBL_DESC$=""
13050 FMP.ALLOW_OR_OVERRIDE$=""
13060 FMP.BASED_ON_SLS_OR_FRT$=""
13070 FMP.ORD_HIST$=""
13080 FMP.APPLY_COMM$=""
13090 FMP.COMM_CODE$=""
13093 FMP.SHIP_VIA_CODE$=""; SHIP_CODE_DESC$=""
13100 FMP.PC_INV_LINE$=""
13110 FMP.COST_ONLY$=""
13120 PRCENT_MARKUP=0
13130 UP_TO_AMOUNT_01=0
13140 PRCNT_MARKUP_01=0
13150 UP_TO_AMOUNT_02=0
13160 PRCNT_MARKUP_02=0
13170 UP_TO_AMOUNT_03=0
13180 PRCNT_MARKUP_03=0
13190 UNUSED_1=0
13200 UNUSED_2=0
13210 FLAT_AMT_MARKUP=0 ! SSP 225881
13220 CEILING_AMT=0
13230 MIN_AMOUNT_TO_MARKUP=0
13970 CALL "*WINGRP;DISABLE",CODE.GRP$; CALL "*WINGRP;HIDE",CEILING.GRP$
13980 GOSUB STORE_INFO
13990 REFRESH_FLG=1
13999 RETURN 
15000 ! Check for Changes in the information.
15010 DETERMINE_CHANGES:
15020 CHANGE_FLG=0
15030 IF _FRT_MARKUP_TBL_DESC$<>FMP.FRT_MARKUP_TBL_DESC$ THEN CHANGE_FLG=1
15040 IF _ALLOW_OR_OVERRIDE$<>FMP.ALLOW_OR_OVERRIDE$ THEN CHANGE_FLG=1
15050 IF _BASED_ON_SLS_OR_FRT$<>FMP.BASED_ON_SLS_OR_FRT$ THEN CHANGE_FLG=1
15060 IF _ORD_HIST$<>FMP.ORD_HIST$ THEN CHANGE_FLG=1
15070 IF _APPLY_COMM$<>FMP.APPLY_COMM$ THEN CHANGE_FLG=1
15080 IF _COMM_CODE$<>FMP.COMM_CODE$ THEN CHANGE_FLG=1
15090 IF _SHIP_VIA_CODE$<>FMP.SHIP_VIA_CODE$ THEN CHANGE_FLG=1
15100 IF _PC_INV_LINE$<>FMP.PC_INV_LINE$ THEN CHANGE_FLG=1
15110 IF _COST_ONLY$<>FMP.COST_ONLY$ THEN CHANGE_FLG=1
15120 IF _PRCENT_MARKUP<>PRCENT_MARKUP THEN CHANGE_FLG=1
15125 IF _CEILING_AMT<>CEILING_AMT THEN CHANGE_FLG=1
15130 IF _UP_TO_AMOUNT_01<>UP_TO_AMOUNT_01 THEN CHANGE_FLG=1
15140 IF _PRCNT_MARKUP_01<>PRCNT_MARKUP_01 THEN CHANGE_FLG=1
15150 IF _UP_TO_AMOUNT_02<>UP_TO_AMOUNT_02 THEN CHANGE_FLG=1
15160 IF _PRCNT_MARKUP_02<>PRCNT_MARKUP_02 THEN CHANGE_FLG=1
15170 IF _UP_TO_AMOUNT_03<>UP_TO_AMOUNT_03 THEN CHANGE_FLG=1
15180 IF _PRCNT_MARKUP_03<>PRCNT_MARKUP_03 THEN CHANGE_FLG=1
15230 IF _MIN_AMOUNT_TO_MARKUP<>MIN_AMOUNT_TO_MARKUP THEN CHANGE_FLG=1
15290 RETURN 
16000 SELECT_FMPBASED:
16010 IF FMP.BASED_ON_SLS_OR_FRT$=" " THEN EN_F$="Y",EN_S$="N",UP_TO_AMOUNT_01=0,UP_TO_AMOUNT_02=0,UP_TO_AMOUNT_03=0,PRCNT_MARKUP_01=0,PRCNT_MARKUP_02=0,PRCNT_MARKUP_03=0 ELSE EN_F$="N",EN_S$="Y"; DIM FFA[12]
16012 GOSUB GET_FFA
16015 REFRESH_FLG=1
16020 GOSUB ENABLE_GROUPS
16090 RETURN 
20000 ! Process Panel Options
20010 PANEL_PROCESS:
20020 IF STP(FMP.APPLY_COMM$)="Y" THEN CALL "*WINGRP;ENABLE",CODE.GRP$ ELSE CALL "*WINGRP;DISABLE",CODE.GRP$
20030 IF POS(STP(FMP.ALLOW_OR_OVERRIDE$)="CM")<>0 THEN CALL "*WINGRP;SHOW",CEILING.GRP$ ELSE CALL "*WINGRP;HIDE",CEILING.GRP$ ! SSP 217965
20080 REFRESH_FLG=1
20090 RETURN 
20100 ! Get the description for Code Set for Ship Via
20110 SHIP_CODE_SET:
20120 IF NUL(FMP.SHIP_VIA_CODE$) THEN SHIP_CODE_DESC$=""; RETURN 
20130 SHIP_CODE_DESC$=""
20140 READ (_FIL_NO,KEY="eV"+FMP.SHIP_VIA_CODE$,DOM=*RETURN)SHIP_VIA$
20150 SHIP_CODE_DESC$=SHIP_VIA$(5,15)
20180 REFRESH_FLG=1
20190 RETURN 
21000 ! Format code
21010 CODE_FORMAT:
21020 IF NUL(FMP.FRT_MARKUP_TABLE$) THEN RETURN 
21030 FRT_NUM=NUM(FMP.FRT_MARKUP_TABLE$,ERR=*NEXT); FMP.FRT_MARKUP_TABLE$=PAD(STR(FRT_NUM),2,0,"0"); GOTO 21080
21040 FMP.FRT_MARKUP_TABLE$=PAD(FMP.FRT_MARKUP_TABLE$,2)
21080 REFRESH_FLG=1
21090 RETURN 
21200 ! Enable Fields..
21210 ENABLE_ROUTINE:
21220 CALL "*WINGRP;ENABLE",FIELDS.GRP$; GOSUB SELECT_FMPBASED
21230 CALL "*WINGRP;ENABLE",BUTTONS.GRP$
21240 GOSUB PANEL_PROCESS; GOSUB SHIP_CODE_SET
21250 CHANGE_FLG=0; GOSUB STORE_INFO; REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
21290 RETURN 
55000 ENABLE_GROUPS:
55010 IF EN_F$="Y" THEN CALL "*wingrp;enable",MKUP_F.GRP$; EN_F$=""
55020 IF EN_F$="N" THEN CALL "*wingrp;disable",MKUP_F.GRP$; EN_F$=""
55030 IF EN_S$="Y" THEN CALL "*wingrp;enable",MKUP_S.GRP$; EN_S$=""
55040 IF EN_S$="N" THEN CALL "*wingrp;disable",MKUP_S.GRP$; EN_S$=""
55090 RETURN 
56000 REM + Modification History
56001 REM "192240-looking for the ability to markup freight based on the orig 
56002 REM "5.5 - 11/22/06 - 14.013888 - mhe - SSP# 202335
56003 REM "202335-Modify FMGMPH to also call UPDFMP to update XPM after       
56004 REM "217965-Modify Freight Markup table with option to enter ceiling amt
56006 REM "224104-Program Exception in Customer Invoice Gateway               
56008 REM "225881-Modify the Freight Market Table to have an option to mark   
56009 REM "234561-They are trying to setup some new Frt Markup tables.  The   
56010 REM "291546-Freight Markup; ability to toggle percentage vs. flat in    
