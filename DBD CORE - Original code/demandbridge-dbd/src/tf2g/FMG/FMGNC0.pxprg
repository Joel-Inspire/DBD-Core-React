0010 ! FMGNC0 - Item Number Change Setup
0035 REM "5.7 - 01/23/12 - 15.69 - jdf - SSP# 252235
0037 REM "252235-Panel FMGNC0 - Item number change                           
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "FMGNC0","../FMG/FM.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="FSS"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _AR1=HFN,_FILE_NAME$="AR1"+%C$; OPEN (_AR1,ERR=OPEN_ERR)_FILE_NAME$
0185 _IC0=HFN,_FILE_NAME$="IC0"+%C$; OPEN (_IC0,ERR=OPEN_ERR)_FILE_NAME$
0187 _FM1=HFN,_FILE_NAME$="FM1"+%C$; OPEN (_FM1,ERR=OPEN_ERR)_FILE_NAME$ ! SSP 197064 ! ssp 197064
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=2,_CUR_KEY$=""
0430 DIM _KEYS$[1:2]; _KEYS$[1]="CUSTOMER$",_KEYS$[2]="FROM_ITEM_ITEM_NUM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 CLOSE (_AR1),(_IC0)
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1011 IF ID$="CUSTOMER" THEN CUSTOMER$=PAD(CUSTOMER$,10," "); CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,FROM_CUST_DIV$,FROM_CUST_CODE$; CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,%CUST_DIV$,%CUST_CODE$
1015 QRY_VAL$=STP(QRY_VAL$,3,"-")
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; IF ID$="CUSTOMER" THEN NEXT_ID=FROM_ITEM_ITEM_NUM.CTL END_IF ; RETURN ! If multiple key segments, enable the _KCNT segment
1047 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,FROM_CUST_DIV$,FROM_CUST_CODE$; CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,%CUST_DIV$,%CUST_CODE$
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=BT_WRITE.CTL
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN FROM_ITEM_ITEM_NUM$="",NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; GOSUB CLEAR_REC; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD,CUSTOMER1$=CUSTOMER$; IF STP(CUSTOMER1$)<>"" THEN GOSUB SEL_CUSTOMER
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1431 _KEY$=CUSTOMER$+FROM_ITEM_ITEM_NUM$
1440 WRITE (_FIL_NO,KEY=_KEY$)
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY; GOSUB CLEAR_REC
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0; _CLR_FLG$="R"; GOSUB CLEAR_FIELDS ! ssp 197064
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1855 REFRESH_FLG=1,NEXT_ID=CUSTOMER.CTL ! SSP#232991
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF _KEY$=_CUR_KEY$ THEN _KEY$=KEN(_FIL_NO,END=END_OF_FILE) ! Get past extracted record
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3032 CUSTOMER$=FROM_CUST_DIV$+FROM_CUST_CODE$; CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,FROM_CUST_DIV$,FROM_CUST_CODE$
3033 CUSTOMER1$=TO_CUST_DIV$+TO_CUST_CODE$; CALL "ZZWLKU;PARSE_CUST",CUSTOMER1$,TO_CUST_DIV$,TO_CUST_CODE$
3038 GOSUB SEL_CUSTOMER; GOSUB SEL_ITEM; GOSUB SEL_ITEM1
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 EXTRACT (_FIL_NO,KEY=_KEY$)
3060 _CUR_KEY$=_KEY$,OLD_REC=1
3070 RETURN 
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUSTOMER.CTL,_FIRST_FIELD=CUSTOMER1.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN CUSTOMER$="",%CUST_NAME$=""
13040 IF _CLR_FLG$="R" THEN FROM_ITEM_ITEM_NUM$="",%ITEM_DESC$="",ITEM_DESC1$=""
13050 TO_CUST_DIV$="",CUSTOMER1$=""
13060 TO_CUST_CODE$=""
13070 FOR_ITEM_ITEM_NUM$="",CUST_NAME$="",ITEM_DESC$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=FROM_CUST_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=FROM_ITEM_ITEM_NUM.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 SEL_QRY:
15010 PROCESS "QRY_FSS","../FMG/FM.EN",VAL$
15020 IF VAL$="" THEN NEXT_ID=CUSTOMER.CTL; RETURN 
15030 _KEY$=VAL$,REFRESH_FLG=1
15040 READ (_FIL_NO,KEY=_KEY$)
15050 GOSUB PROCESS_READ; NEXT_ID=CUSTOMER1.CTL
15060 RETURN 
15100 SEL_CUSTOMER:
15101 IF STP(CUSTOMER1$)="" THEN CUSTOMER1$=DIM(10); DIM AR1$(100); GOTO 15120
15110 READ (_AR1,KEY=CUSTOMER1$,ERR=NO_CUSTOMER)AR1$
15120 CALL "ZZWLKU;PARSE_CUST",CUSTOMER1$,TO_CUST_DIV$,TO_CUST_CODE$
15130 CUST_NAME$=AR1$(11,40),CUST_NAME.CTL'VALUE$=AR1$(11,40)
15132 CALL "*wingrp;enable",FIELDS.GRP$; NEXT_ID=FOR_ITEM_ITEM_NUM.CTL ! SSP#232991
15140 RETURN 
15200 SEL_ITEM:! FOR_ITEM_ITEM_NUM$=STR(NUM(FOR_ITEM_ITEM_NUM$):"0000000",ERR=*NEXT)
15205 FOR_ITEM_ITEM_NUM$=PAD(FOR_ITEM_ITEM_NUM$,10," "),REFRESH_FLG=1; REM CHANGE_FLG=0  ! SSP252235 jdf
15208 IF STP(FOR_ITEM_ITEM_NUM$,3)="" THEN NEXT_ID=FOR_ITEM_ITEM_NUM.CTL,CHANGE_FLG=0,REFRESH_FLG=1; RETURN ! SSP#232991
15210 FIND (_IC0,KEY=CUSTOMER1$+FOR_ITEM_ITEM_NUM$,ERR=NO_IC0)IC0$
15220 FOR_ITEM_ITEM_NUM$="",NEXT_ID=FOR_ITEM_ITEM_NUM.CTL ! ITEM_DESC.CTL'VALUE$=IC0$(21,40)
15225 MSGBOX MSG("ITEM_EXITS"),MSG("WARNING"),"!"
15227 CALL "*WINGRP;DISABLE",BUTTONS.GRP$
15230 RETURN 
15240 NO_CUSTOMER: CUSTOMER1$="",ITEM_DESC$="",CUSTOMER1.CTL'VALUE$="",ITEM_DESC.CTL'VALUE$="",NEXT_ID=CUSTOMER1.CTL; RETURN 
15250 NO_IC0:CALL "*WINGRP;ENABLE",BUTTONS.GRP$ ! FROM_ITEM_ITEM_NUM$="",FROM_ITEM_ITEM_NUM.CTL'VALUE$="",ITEM_DESC$="",ITEM_DESC.CTL'VALUE$="",NEXT_ID=FROM_ITEM_ITEM_NUM.CTL; RETURN  ! ssp 197064
15255 RETURN ! ssp 197064
15260 SEL_ITEM1:
15270 VAL_ITEM=0; FIND (_IC0,KEY=CUSTOMER$+FROM_ITEM_ITEM_NUM$,ERR=NO_IC01)IC0$; VAL_ITEM=1
15290 ITEM_DESC1.CTL'VALUE$=IC0$(21,40)
15300 RETURN 
15310 NO_IC01: FROM_ITEM_ITEM_NUM$="",FROM_ITEM_ITEM_NUM.CTL'VALUE$="",ITEM_DESC1$="",ITEM_DESC1.CTL'VALUE$="",NEXT_ID=FROM_ITEM_ITEM_NUM.CTL; RETURN 
15500 SEL_ITEM_FM1:! SSP 197064
15505 IF QRY_VAL$="" THEN IF _CUR_FCS=10016 THEN CHANGE_FLG=0,REFRESH_FLG=1; GOTO CLEAR_REC
15506 IF _CUR_FCS=10005 THEN REFRESH_FLG=1,_CUR_FCS=0; GOSUB SEL_QRY_FM1
15510 VAL_ITEM=0; READ (_FM1,KEY=CUSTOMER$+FROM_ITEM_ITEM_NUM$,DOM=SEL_ITEM1)FM1$; VAL_ITEM=1 ! SSP#232991
15520 ITEM_DESC1.CTL'VALUE$=FM1$(42,40)
15530 RETURN 
15540 SEL_QRY_FM1: %CUSTOMER$=CUSTOMER$,VAL$=""
15550 PROCESS "QRY_FM1_ITM2","../FMG/FM.EN",VAL$; IF STP(VAL$)="" THEN NEXT_ID=FROM_ITEM_ITEM_NUM.CTL; EXIT 
15560 FROM_ITEM_ITEM_NUM$=VAL$,ID$="FROM_ITEM_ITEM_NUM",_KEY$=CUSTOMER$+VAL$,FROM_ITEM_ITEM_NUM.CTL'VALUE$=VAL$
15570 GOSUB SEL_ITEM_FM1
15580 GOTO 1050
15590 RETURN 
56000 ! "197064-Item number change does not appear to be looking at the     
56001 ! "       correct file
56002 REM "252235-Panel FMGNC0 - Item number change                           
