0010 ! FMGPEA - Reorder Status Entry
0035 REM "5.7 - 04/12/11 - 16.120833 - jdf - SSP# 245849
0037 REM "245849-Needs help print reorder notices.                           
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "FMGPEA","../FMG/FM.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0145 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,-1,X1,X2 ! SSP245849 jdf
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="FMI"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,ERR=OPEN_ERR)_FILE_NAME$
0174 IOLIST F$ ! SSP245849 jdf
0176 IOLIST E$,E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7] ! SSP245849 jdf
0180 DIM Z[NUM(X3$(60,3))] ! SSP245849 jdf
0182 Z$="02O AR1...  03O FM1...  04O FM0... 05O FM5... 06O FMP... 07O FS0...  13O ZZPARM  " ! SSP245849 jdf
0184 GOSUB 9750; ON Z0 GOTO 0185,9900 ! SSP245849 jdf
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=3,_CUR_KEY$=""
0430 DIM _KEYS$[1:3]; _KEYS$[1]="CUSTOMER$",_KEYS$[2]="ITEM_CODE$",_KEYS$[3]="LOC_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0 ! SSP245849 jdf
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1015 IF ID$="CUSTOMER" THEN CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; GOSUB CLEAR_FIELDS; EXIT ! SSP245849 jdf
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1255 DIM FMI$(250),A(4)
1258 GOSUB ADD_DEFAULTS ! SSP245849 jdf
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1435 GOSUB ASSIGN_PRG
1440 WRITE (_FIL_NO,KEY=_KEY$)FMI$,A{ALL}
1450 GOSUB ADD_REORDER_DATA ! SSP245849 jdf
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=CUSTOMER.CTL
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1615 DIM E[7] ! SSP245849 jdf
1620 ! READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1662 FIND (Z[6],KEY="D"+CUSTOMER$,DOM=*NEXT)IOL=0174 ! SSP245849 jdf
1665 A2$="R"+F$(108,1)+CUSTOMER$+LOC_CODE$+ITEM_CODE$ ! SSP245849 jdf
1670 FIND (Z[5],KEY=A2$,DOM=*NEXT)IOL=0176 ! SSP245849 jdf
1675 REMOVE (Z[5],KEY=A2$,DOM=*NEXT) ! SSP245849 jdf
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0,NEXT_ID=CUSTOMER.CTL
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF _KEY$=_CUR_KEY$ THEN _KEY$=KEN(_FIL_NO,END=END_OF_FILE) ! Get past extracted record
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 DIM A(4); READ (_FIL_NO,KEY=_KEY$)FMI$,A{ALL}
3035 FMI$=PAD(FMI$,250); GOSUB ASSIGN_LIB
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 EXTRACT (_FIL_NO,KEY=_KEY$)
3060 _CUR_KEY$=_KEY$,%CUSTOMER$=CUSTOMER$
3199 RETURN 
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=CUST_DIV.CTL,_FIRST_FIELD=SEND_NOTICE.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
6000 ADD_DEFAULTS:! SSP245849 jdf
6005 DIM E[7],S$(20) ! SSP245849 jdf
6010 READ (Z[6],KEY="D"+CUSTOMER$,DOM=*RETURN)IOL=0174 ! SSP245849 jdf
6020 A2$="R"+F$(108,1); IF FMI$(21,4)<>"    " THEN A2$="L"+F$(112,1); IF A2$(2,1)="" THEN MSGBOX MSG("The notice type for this customer has not been setup"); NEXT_ID=_FIRST_KEY; CHANGE_FLG=0; _CLR_FLG$="R"; GOSUB CLEAR_FIELDS; EXIT ! SSP245849 jdf
6030 FIND (Z[5],KEY=A2$+CUSTOMER$+PAD(LOC_CODE$,4," ")+PAD(ITEM_CODE$,10," "),DOM=*NEXT)IOL=0176; GOTO 6060 ! SSP245849 jdf
6060 FMI$(25,1)="1" ! SSP245849 jdf
6070 IF LEN(F$)>240 THEN FMI$(206,5)="C"+F$(125,4); IF F$(238,4)<>S$(1,4) THEN FMI$(206,5)="D"+F$(238,4) ! SSP245849 jdf
6080 GOSUB 6600; GOSUB 7700 ! SSP245849 jdf
6090 GOSUB 7450 ! SSP245849 jdf
6100 RETURN ! SSP245849 jdf
6500 REMOVE_REORDER:! SSP245849 jdf
6510 REMOVE (_FIL_NO,KEY=_KEY$,ERR=*NEXT) ! SSP245849 jdf
6520 A2$="R"+F$(108,1)+CUSTOMER$+LOC_CODE$+ITEM_CODE$ ! SSP245849 jdf
6530 REMOVE (Z[5],KEY=A2$,DOM=*NEXT) ! SSP245849 jdf
6540 _KEY$="" ! SSP245849 jdf
6550 RETURN ! SSP245849 jdf
6600 REM "Read Files    ! SSP245849 jdf
6610 IOLIST B$,B[0],B[1],B[2],B[3],B[4],B[5],B[6],B[7],B[8],B[9],B[10],B[11],B[12],B[13],B[14],B[15] ! SSP245849 jdf
6620 IOLIST C$(1),C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7],C[8],C[9],C[10],C[11],C[12],C[13],C[14],C[15],C[16],C[17],C[18],C[19],C[20],C[21],C[22],C[23],C[24],C[25],C[26],C[27],C[28],C[29],C[30],C[31] ! SSP245849 jdf
6630 IOLIST D$ ! SSP245849 jdf
6640 IOLIST G$,G[0],G[1],G[2],G[3],G[4],G[5],G[6] ! SSP245849 jdf
6650 DIM B[15],C[31],G[6] ! SSP245849 jdf
6660 FIND (Z[2],KEY=CUSTOMER$,DOM=*NEXT)IOL=6610 ! SSP245849 jdf
6670 FIND (Z[3],KEY=CUSTOMER$+PAD(ITEM_CODE$,10," "),DOM=*NEXT)IOL=6620 ! SSP245849 jdf
6680 FIND (Z[4],KEY="C"+CUSTOMER$+PAD(LOC_CODE$,4," "),DOM=*NEXT)IOL=6630 ! SSP245849 jdf
6690 FIND (Z[6],KEY="D"+CUSTOMER$,DOM=*NEXT)IOL=0174 ! SSP245849 jdf
6700 DIM G$(200),G[6]; FIND (Z[7],KEY=CUSTOMER$+PAD(ITEM_CODE$,10," "),DOM=*NEXT)IOL=6640 ! SSP245849 jdf
6710 A2$=FMI$(206,1)+B$(1,10)+FMI$(207,4); IF FMI$(206,1)="D" THEN A2$(2,10)="" ! SSP245849 jdf
6720 DIM D0$(250); READ (Z[4],KEY=A2$,DOM=*NEXT)D0$ ! SSP245849 jdf
6730 RETURN ! SSP245849 jdf
7450 REM "WRITE DEFAULTS  ! SSP245849 jdf
7452 FMI$(1,10)=CUSTOMER$,FMI$(11,10)=ITEM_CODE$,FMI$(21,4)=LOC_CODE$ ! SSP245849 jdf
7455 WRITE (_FIL_NO,KEY=_KEY$,DOM=*RETURN)FMI$,A{ALL} ! SSP245849 jdf
7460 READ (_FIL_NO,KEY=_KEY$,DOM=*RETURN)FMI$,A{ALL} ! SSP245849 jdf
7465 GOSUB ASSIGN_LIB ! SSP245849 jdf
7470 A2$="R"+F$(108,1)+FMI$(1,10)+FMI$(21,4)+FMI$(11,10) ! SSP245849 jdf
7475 E$=""; DIM E[7] ! SSP245849 jdf
7480 FIND (Z[5],KEY=A2$,DOM=*NEXT)IOL=0176 ! SSP245849 jdf
7485 RETURN ! SSP245849 jdf
7500 ADD_REORDER_DATA:! add reorder notice data record   ! SSP245849 jdf
7506 DIM E[7] ! SSP245849 jdf
7510 FIND (Z[6],KEY="D"+CUSTOMER$,DOM=*NEXT)IOL=0174 ! SSP245849 jdf
7520 A2$="R"+F$(108,1)+CUSTOMER$+LOC_CODE$+ITEM_CODE$ ! SSP245849 jdf
7530 FIND (Z[5],KEY=A2$,DOM=7550)IOL=0176 ! SSP245849 jdf
7540 MSGBOX MSG("FMGPEA_01"),MSG("CONFIRM"),"?,YESNO",_YESNO$ ! SSP245849 jdf       
7545 IF _YESNO$="NO" THEN RETURN ! SSP245849 jdf
7550 CALL "FM2UZC",ERR=7555,X3$,_KEY$(1,20),"\0Manual",1; GOTO 7590 ! SSP245849 jdf
7555 IF ERR<>11 THEN RETURN ELSE GOSUB REMOVE_REORDER ! SSP245849 jdf
7595 RETURN ! SSP245849 jdf
7700 REM ! SSP245849 jdf
7710 A[0]=C[21] ! SSP245849 jdf
7720 FMI$(26,60)=G$(21,60) ! SSP245849 jdf
7730 FMI$(86,60)=F$(135,60) ! SSP245849 jdf
7740 IF F$(130,3)="   " THEN GOTO 7770 ELSE FIND (Z[6],KEY="g"+F$(130,3),DOM=7770)Q$; FMI$(146,60)=Q$(40,60) ! SSP245849 jdf
7795 RETURN ! SSP245849 jdf
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR"),_MSG_DIRECTORY$=MSG("DIRECTORY"),_MSG_END_OF_FIL$=MSG("END_OF_FIL"),_MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK"),_MSG_MANDATORY$=MSG("MANDATORY"),_MSG_NEXT$=MSG("NEXT"),_MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND"),_MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG"),_MSG_PRECEDING$=MSG("PRECEDING"),_MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS"),_MSG_REC_ALTERD$=MSG("REC_ALTERD"),_MSG_REC_CR_NEW$=MSG("REC_CR_NEW"),_MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND"),_MSG_REC_NO_1ST$=MSG("REC_NO_1ST"),_MSG_REC_NO_LST$=MSG("REC_NO_LST"),_MSG_REC_REMOVE$=MSG("REC_REMOVE"),_MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS"),_MSG_START_FILE$=MSG("START_FILE"),_MSG_UPDATE$=MSG("UPDATE"),_MSG_UPD_OTHER1$=MSG("UPD_OTHER1"),_MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME"),_MSG_WARNING$=MSG("WARNING"),_MSG_CANNOT_WRITE$=MSG("CANT_WRITE"),_MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9750 REM "FILES  ! SSP245849 jdf
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1 ! SSP245849 jdf
9790 RETURN ! SSP245849 jdf
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 SUGGESTED_RO_QTY$=STR(SUGGESTED_RO_QTY)
10030 RO_PT_DAYS$=STR(RO_PT_DAYS)
10040 RO_PT_QTY$=STR(RO_PT_QTY)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="SUGGESTED_RO_QTY",_X=SUGGESTED_RO_QTY.CTL,SUGGESTED_RO_QTY=NUM(SUGGESTED_RO_QTY$,ERR=NON_NUMERIC)
11030 _X$="RO_PT_DAYS",_X=RO_PT_DAYS.CTL,RO_PT_DAYS=NUM(RO_PT_DAYS$,ERR=NON_NUMERIC)
11040 _X$="RO_PT_QTY",_X=RO_PT_QTY.CTL,RO_PT_QTY=NUM(RO_PT_QTY$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN CUSTOMER$=""
13040 IF _CLR_FLG$="R" THEN ITEM_CODE$=""
13050 IF _CLR_FLG$="R" THEN LOC_CODE$=""
13060 SEND_NOTICE$="",COMMENT_1$="",COMMENT_2$="",COMMENT_3$="",OBSOLETE_ITEM$="",REVISED_ITEM$=""
13120 CUST_HOLD_DATE$="",MEMO_FIELD$="",MANUAL_REORDER_DATE$="",FMI_UNUSED_1$="",SHIPTO$="",WARE$="",RB_TYPE$="",SUGGESTED_RO_QRY$="",RO_PT_DAYS$="",RO_PT_QTY$="",SUGG_MTH_SUPP$="" ! SSP245849 jdf
13130 SUGGESTED_RO_QTY=0,RO_PT_DAYS=0,RO_PT_QTY=0,SUGG_MTH_SUPP=0 ! SSP245849 jdf
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=ITEM_CODE.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=LOC_CODE.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY4.GRP$; NEXT_ID=LOC_CODE.CTL ELSE CALL "*wingrp;Disable",KEY4.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ASSIGN_LIB:
15010 CUSTOMER$=FMI$(1,10),%CUSTOMER$=CUSTOMER$,ITEM_CODE$=FMI$(11,10),LOC_CODE$=FMI$(21,4)
15020 SEND_NOTICE$=FMI$(25,1),SUGGESTED_RO_QTY=A(0),SUGGESTED_RO_QTY$=STR(A(0))
15030 COMMENT_1$=FMI$(26,60),COMMENT_2$=FMI$(86,60),COMMENT_3$=FMI$(146,60)
15040 RB_TYPE$=FMI$(206,1),SHIPTO$=FMI$(207,4),SUGG_MTH_SUPP$=STR(A(4))
15050 IF RB_TYPE$="C" THEN CALL "*WINGRP;SHOW",SHIPTO.GRP$; CALL "*WINGRP;HIDE",WARE.GRP$; SHIPTO$=FMI$(207,4) ELSE IF RB_TYPE$="D" THEN CALL "*WINGRP;SHOW",WARE.GRP$; CALL "*WINGRP;HIDE",SHIPTO.GRP$; WARE$=FMI$(207,4) ELSE CALL "*WINGRP;HIDE",WARE.GRP$; CALL "*WINGRP;HIDE",SHIPTO.GRP$
15100 REFRESH_FLG=1; RETURN 
16000 SEL_RADIO:
16010 IF RB_TYPE$="C" THEN CALL "*WINGRP;SHOW",SHIPTO.GRP$; CALL "*WINGRP;HIDE",WARE.GRP$; SHIPTO$=FMI$(207,4),NEXT_ID=SHIPTO.CTL ELSE IF RB_TYPE$="D" THEN CALL "*WINGRP;SHOW",WARE.GRP$; CALL "*WINGRP;HIDE",SHIPTO.GRP$; WARE$=FMI$(207,4),NEXT_ID=WARE.CTL ELSE CALL "*WINGRP;HIDE",WARE.GRP$; CALL "*WINGRP;HIDE",SHIPTO.GRP$
16030 REFRESH_FLG=1
16040 RETURN 
16050 ASSIGN_PRG:DIM A(4),FMI$(250)
16060 FMI$(1,10)=CUSTOMER$,FMI$(11,10)=ITEM_CODE$,FMI$(21,4)=LOC_CODE$
16070 FMI$(25,1)=SEND_NOTICE$,A(0)=NUM(SUGGESTED_RO_QTY$),A(4)=NUM(SUGG_MTH_SUPP$) ! SSP245849 jdf
16080 FMI$(26,60)=COMMENT_1$,FMI$(86,60)=COMMENT_2$,FMI$(146,60)=COMMENT_3$
16090 FMI$(206,1)=RB_TYPE$
16100 IF RB_TYPE$="C" THEN FMI$(207,4)=SHIPTO$ ELSE FMI$(207,4)=WARE$
16110 REFRESH_FLG=1; RETURN 
16500 QUERY:
16510 PROCESS "QRY_FMI","../FMG/FM.EN",VAL$
16520 IF VAL$="" THEN RETURN 
16530 _KEY$=VAL$,NEXT_ID=SEND_NOTICE.CTL; GOTO PROCESS_READ
56000 REM "245849-Needs help print reorder notices.                           
