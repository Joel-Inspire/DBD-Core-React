0010 ! FMGODA - Sales Order Entry I - Header
0035 REM "5.7 - 08/07/23 - 14.948497 - jvv - SSP# 307453
0037 REM "307453-DBD-401: Default order type nt being set correctly in GUI   
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0115 ! %FLMAINT_MSG$="./lib/_tfmsglib.en" !SSP 228879
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0125 CALL "ZZWMX3"
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; DIM Z[NUM(X3$(60,3))]
0165 Z$="01O FS1... 02O AR1... 03O AS5... 04O FMP... 05O AR3... 06O AR5... 07O ASC... 08O FSO... 09O ASP... 10O AR2... 11O FSV... 12O FS6... 13O ZZPARM 14O FT7... 18O FTS...  19O FTU...  26O EDD...  " ! [SSP-200893] SSP 193030 SSP 206505 WO212768
0170 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
0172 BB$=PTH(Z(2)); CLOSE (Z(2)); OPEN (Z(2),IOL=*,REC=AR1$)BB$
0175 _FILE_NAME$=FIN(Z[1],"FILENAME"),_FIL_NO=Z[1]
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0181 DIM FTS[9] ! [SSP-200893]
0182 FTS_LFN=Z[18] ! [SSP-200893]
0183 FTS_IOLIST:IOLIST FTS$,FTS[0],FTS[1],FTS[2],FTS[3],FTS[4],FTS[5],FTS[6],FTS[7],FTS[8] ! [SSP-200893]
0185 GOSUB GET_PARMS
0195 RETURN 
0199 ! 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="ORDER$"
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; IF ARG_2$="NEW" THEN READ (_FIL_NO,KNO=0,KEY=_KEY$,ERR=NEW_RECORD) ELSE READ (_FIL_NO,KNO=0,KEY=_KEY$,ERR=NEXT_REC) ! ssp 193564
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0700 ! 700 - Set up tabbing between folders
0710 INIT_FOLDER:
0713 EXTRACT (_FIL_NO,KEY=_KEY$,ERR=*NEXT)* ! SSP248358 jdf
0715 IF _ENABLE_FLG<>1 THEN IF TAB_FLG$="<" THEN NEXT_ID=_LAST_TAB ELSE NEXT_ID=_FIRST_TAB
0720 GOSUB ENABLE_GROUPS
0722 ! IF ARG_2$<>"NEW" THEN _FIRST_TAB=CUSTOMER.CTL,_LAST_TAB=STAX_CODE.CTL,NEXT_ID=_FIRST_TAB; GOTO 0761
0725 SWITCH FOLDER_ID$
0730 CASE "FMGODA.1"; _FIRST_TAB=CUSTOMER.CTL,_LAST_TAB=STAX_CODE.CTL,NEXT_ID=_FIRST_TAB
0731 GOSUB DEFAULT_CUST_CODE
0732 IF NUL(CUSTOMER$) THEN HIDE CONTROL WZ_NEXT.CTL; HIDE CONTROL WZ_FINISH1.CTL
0733 IF ARG_2$="NEW" THEN HIDE CONTROL WZ_BACK.CTL END_IF ; IF NOT(NUL(CUSTOMER$)) THEN CUSTOMER.CTL'ENABLED=0
0734 GOSUB LOAD_CREDIT_CARD
0735 IF NUL(ORDERED_BY$) AND MID(FMP$,63,1)="Y" THEN NEXT_ID=ORDERED_BY.CTL ! [215780]-move prompt to Ordered By field if required 
0736 BREAK ! CASE "FMGODA.1 [215780]-renumbered line 
0740 CASE "FMGODA.2"; GOSUB FOLDER_2
0745 BREAK ! CASE "FMGODA.2
0750 CASE "FMGODA.3"; IF ARG_2$="NEW" THEN NEXT_ID=WZ_FINISH.CTL; DISABLE CONTROL WZ_FINISH1.CTL ELSE NEXT_ID=CUST_SERV_REP.CTL END_IF ; GOSUB CHECK_TOTAL ! SSP227474 jdf
0751 IF %AR1_PARM$(68,1)="Y" AND STP(AR1.SIC_CODE$)<>"" THEN CALL "*WINGRP;HIDE",HIDE.GRP$; CALL "*WINGRP;SHOW",SIC.GRP$; COMM_CODE$=AR1.SIC_CODE$,REFRESH_FLG=1,COMM_CODE.CTL'VALUE$=COMM_CODE$,%COMMISSION_DESC$="" ! CALL "*WINGRP;DISABLE",DISAB.GRP$
0752 IF %AR1_PARM$(68,1)="Y" AND STP(COMM_CODE$)<>"" THEN CALL "*WINGRP;HIDE",HIDE.GRP$; CALL "*WINGRP;SHOW",SIC.GRP$; REFRESH_FLG=1,%COMMISSION_DESC$="" ! CALL "*WINGRP;DISABLE",DISAB.GRP$
0754 IF %MSLC THEN HIDE CONTROL COMM_CODE.CTL; ID=COMM_CODE.CTL; HIDE CONTROL ID+3000; SHOW CONTROL BT_COMM.CTL; ENABLE CONTROL BT_COMM.CTL; %COMMISSION_DESC$="** MULTI COMM **"; SHOW CONTROL %COMMISSION_DESC.CTL ELSE HIDE CONTROL BT_COMM.CTL; SHOW CONTROL COMM_CODE.CTL ! SSP 225300
0755 BREAK ! CASE "FMGODA.3
0760 END SWITCH 
0765 EXIT 
0900 ! 900 - Wrapup
0910 WRAPUP:
0915 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=1,_ENABLE_FLG=1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1045 CALL "ZZWLKU;PARSE_ORD",ORDER$,ORDER_DIV$,ORDER_NUM$
1050 FIND_NOW: READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 RETURN 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1254 IF ARG_2$="NEW" OR ARG_2$="MODIFY" THEN _ENABLE_FLG=-1; ORDER_DIV$=MID(ARG_1$,1,2),ORDER_NUM$=MID(ARG_1$,3),ORDER$=ARG_1$
1255 GOSUB DEFAULT_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 NEXT_FOLDER=_FIRST_FOLDER
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1411 IF %OLD_REC=0 THEN {! [SSP-200893]
1412 GOSUB VALIDATE_CONTRACT_NUM ! [SSP-200893]
1413 IF VALID_CONTRACT<>0 THEN RETURN ! [SSP-200893]
1414  }
1415 MASTER_QUOTE_PART_1$=MID(MASTER_QUOTE$,1,5),MASTER_QUOTE_PART_2$=MID(MASTER_QUOTE$,6)
1420 GOSUB STR_TO_NUM
1430 CHECK_ALL=1; GOSUB CHECK_REQD_FLDS; IF NOT(RECORD_OK) THEN IGNORE_EXIT=1; CMD_STR$="END"; EXIT ! SSP214286  jdf
1440 GOSUB REVIEW_WRITE
1442 IF %MSLC THEN IF %DET_MOD$="Y" THEN CCKEY$="O"+ORDER$+CUST_DIV$+CUST_CODE$,CMMSG$=""; CALL "ARGSCM;UPDATE_DETAIL_RECS",CCKEY$,CMMSG$; %DET_MOD$=""; IF CMMSG$="Y" THEN MSGBOX "Existing Detail Lines have been modified to Default Commission Codes - Please Review!",MSG("WARNING") ! SSP 225300
1450 IF ARG_2$="NEW" OR ARG_2$="MODIFY" THEN CMD_STR$="END",CHANGE_FLG=0; EXIT ! SSP214286 jdf
1460 IF _ENABLE_FLG THEN _KCNT=1,_ENABLE_FLG=1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1640 IF ARG_2$="NEW" THEN MSGBOX MSG("CANCEL_CHK"),_MSG_JUST_CHECK$,"?,YESNO",_X$ ELSE MSGBOX _MSG_REC_VFYDEL1$+MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1655 ARG_3$="DELETE"
1657 IF ARG_2$="NEW" AND STP(REPEAT_ORDER_DIV$+REPEAT_ORDER_NUM$)<>"" THEN FM2ODH_CMD=-2; PERFORM "FMGODM;DO_FM2ODH" ! SSP#236627
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=1,_ENABLE_FLG=1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 GOTO DELETE_DONE
1720 NO_SUCH:IF ARG_2$="NEW" OR ARG_2$="MODIFY" THEN GOTO DELETE_DONE ELSE MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; GOTO DELETE_DONE
1725 DELETE_DONE:IF ARG_2$="NEW" OR ARG_2$="MODIFY" THEN CMD_STR$="END"
1726 IF ARG_2$="NEW" THEN CANCEL_FLDR_1=1 ! SSP 240052
1728 IF %MSLC THEN CCKEY$="O"+ORDER$+CUST_DIV$+CUST_CODE$; CALL "ARGSCM;DELETE_ALL",CCKEY$ ! SSP 225300
1730 EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=1,_ENABLE_FLG=1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=*NEXT); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2440 MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=*NEXT); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2640 MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3055 ORDER$=ORDER_DIV$+ORDER_NUM$
3056 MASTER_QUOTE$=PAD(MASTER_QUOTE_PART_1$,5)+PAD(MASTER_QUOTE_PART_2$,3)
3057 GOSUB SET_STAX_RATE
3058 DIM FMP$(243),FMP[3]; FIND (Z[4],KEY="D"+CUST_DIV$+CUST_CODE$,ERR=*NEXT)FMP$,FMP[0],FMP[1],FMP[2],FMP[3]
3060 ALLOW_ORDER_TYPE_ENTRY=0
3065 GOSUB LOAD_CONTRACT_NUM ! [SSP-200893]
3075 GOSUB SET_BILL_TO_ADDRESS
3090 CHANGE_FLG=0
3091 DIM FT7$(120); REPEAT_ORD_COMMENT$=""; READ (Z(14),KEY=CUST_DIV$+CUST_CODE$+ORDER_DIV$+ORDER_NUM$,DOM=*NEXT)FT7$; REPEAT_ORD_COMMENT$=FT7$(34,35) ! ssp 194886
3095 RETURN 
3099 ! 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=_KEY$,DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3319 ! Make sure the order number is not blank
3320 WRT:IF NUL(ORDER_DIV$+ORDER_NUM$) THEN ORDER_DIV$=MID(_KEY$,1,2),ORDER_NUM$=MID(_KEY$,3,8),ORDER$=ORDER_DIV$+ORDER_NUM$ END_IF ; WRITE (_FIL_NO,KEY=_KEY$); GOSUB WRITE_BILL_TO_ADDRESS ! SSP 211838
3325 IF REPEAT_ORDER$="Y" THEN GOSUB CHECK_PO_VAR ! ssp 198212
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3804 IF LEN(STP(CUSTOMER$))>0 THEN {
3805 IF %OLD_REC=0 THEN GOSUB VALIDATE_CONTRACT_NUM
3806 IF VALID_CONTRACT<>0 THEN RETURN 
3807  }
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=ORDER.CTL,_FIRST_FIELD=ORDER_TYPE_3.CTL,_FIRST_FOLDER=FLDR.FMGODA.1.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=1,_ENABLE_FLG=1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
4500 CHECK_TOTAL:! ^100,5 - Add commission totals
4505 VAR$=ID$; IF STP(VAR$,3)="" THEN GOTO CHECK_TOTAL_END
4510 IF VIN(VAR$)>100 THEN {
4515 MSGBOX MSG("MB_2_M"),MSG("MB_ATTN"),"!"
4520 NEXT_ID=ID,REFRESH_FLG=1
4525 VIA (VAR$)=0
4530 RETURN 
4535  }
4540 TOTAL=FN_CALC_TOTAL
4545 IF TOTAL>100 THEN {
4550 MSGBOX MSG("MB_1_M"),MSG("MB_ATTN"),"!"
4555 NEXT_ID=ID
4560 VAR$=ID$
4565 TOTAL-=VIN(VAR$)
4570 VIA (VAR$)=0
4575  }
4580 REFRESH_FLG=1
4585 CHECK_TOTAL_END:RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9340 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 DEPOSIT_AMT$=STR(DEPOSIT_AMT)
10030 ! SALESMAN_1_PCT_SALE$=STR(SALESMAN_1_PCT_SALE)
10040 ! ALT_SPER_PRCNT_1$=STR(ALT_SPER_PRCNT_1)
10050 ! ALT_SPER_PRCNT_2$=STR(ALT_SPER_PRCNT_2)
10060 ! ALT_SPER_PRCNT_3$=STR(ALT_SPER_PRCNT_3)
10070 ! ALT_SPER_PRCNT_4$=STR(ALT_SPER_PRCNT_4)
10080 ORDER_AMT$=STR(ORDER_AMT)
10090 ORDER_COST$=STR(ORDER_COST)
10100 FRT_AMT$=STR(FRT_AMT)
10110 LINE_ITEM_DISC_PRCNT$=STR(LINE_ITEM_DISC_PRCNT)
10120 FRT_FROM_LOTS$=STR(FRT_FROM_LOTS)
10130 FS1_UNUSED_2$=STR(FS1_UNUSED_2)
10140 FS1_UNUSED_3$=STR(FS1_UNUSED_3)
10150 FS1_UNUSED_4$=STR(FS1_UNUSED_4)
10500 IF %AR_DIV_LEN=0 THEN CUSTOMER$=CUST_CODE$ ELSE CUSTOMER$=CUST_DIV$+MID(CUST_CODE$,1,%CUST_LEN)
10505 IF ORDER_TYPE_1$="R" THEN INPUT_TYPE_3$="R" ELSE IF ORDER_TYPE_1$="W" THEN INPUT_TYPE_3$="W" ELSE IF ORDER_TYPE_3$="B" THEN INPUT_TYPE_3$="B" ELSE INPUT_TYPE_3$="b" ! SSP# 203200
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="DEPOSIT_AMT",_X=DEPOSIT_AMT.CTL,DEPOSIT_AMT=NUM(DEPOSIT_AMT$,ERR=NON_NUMERIC)
11030 ! _X$="SALESMAN_1_PCT_SALE",_X=SALESMAN_1_PCT_SALE.CTL,SALESMAN_1_PCT_SALE=NUM(SALESMAN_1_PCT_SALE$,ERR=NON_NUMERIC)
11040 ! _X$="ALT_SPER_PRCNT_1",_X=ALT_SPER_PRCNT_1.CTL,ALT_SPER_PRCNT_1=NUM(ALT_SPER_PRCNT_1$,ERR=NON_NUMERIC)
11050 ! _X$="ALT_SPER_PRCNT_2",_X=ALT_SPER_PRCNT_2.CTL,ALT_SPER_PRCNT_2=NUM(ALT_SPER_PRCNT_2$,ERR=NON_NUMERIC)
11060 ! _X$="ALT_SPER_PRCNT_3",_X=ALT_SPER_PRCNT_3.CTL,ALT_SPER_PRCNT_3=NUM(ALT_SPER_PRCNT_3$,ERR=NON_NUMERIC)
11070 ! _X$="ALT_SPER_PRCNT_4",_X=ALT_SPER_PRCNT_4.CTL,ALT_SPER_PRCNT_4=NUM(ALT_SPER_PRCNT_4$,ERR=NON_NUMERIC)
11080 _X$="ORDER_AMT",_X=ORDER_AMT.CTL,ORDER_AMT=NUM(ORDER_AMT$,ERR=NON_NUMERIC)
11090 _X$="ORDER_COST",_X=ORDER_COST.CTL,ORDER_COST=NUM(ORDER_COST$,ERR=NON_NUMERIC)
11100 _X$="FRT_AMT",_X=FRT_AMT.CTL,FRT_AMT=NUM(FRT_AMT$,ERR=NON_NUMERIC)
11110 _X$="LINE_ITEM_DISC_PRCNT",_X=LINE_ITEM_DISC_PRCNT.CTL,LINE_ITEM_DISC_PRCNT=NUM(LINE_ITEM_DISC_PRCNT$,ERR=NON_NUMERIC)
11120 _X$="FRT_FROM_LOTS",_X=FRT_FROM_LOTS.CTL,FRT_FROM_LOTS=NUM(FRT_FROM_LOTS$,ERR=NON_NUMERIC)
11130 _X$="FS1_UNUSED_2",_X=FS1_UNUSED_2.CTL,FS1_UNUSED_2=NUM(FS1_UNUSED_2$,ERR=NON_NUMERIC)
11140 _X$="FS1_UNUSED_3",_X=FS1_UNUSED_3.CTL,FS1_UNUSED_3=NUM(FS1_UNUSED_3$,ERR=NON_NUMERIC)
11150 _X$="FS1_UNUSED_4",_X=FS1_UNUSED_4.CTL,FS1_UNUSED_4=NUM(FS1_UNUSED_4$,ERR=NON_NUMERIC)
11505 SWITCH INPUT_TYPE_3$
11510 CASE "b"; ORDER_TYPE_1$=" ",ORDER_TYPE_3$=" "; BREAK ! Sales/Factory order
11515 CASE "R"; ORDER_TYPE_1$="R",ORDER_TYPE_3$=" "; BREAK ! Release
11520 CASE "W"; ORDER_TYPE_1$="W"; ORDER_TYPE_3$=" "; BREAK ! Warehouse release
11525 CASE "B"; ORDER_TYPE_1$=" "; ORDER_TYPE_3$="B"; BREAK ! Bill as shipped
11530 END SWITCH 
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 RECORD_OK=1
12025 IF CANCEL_FLDR_1 THEN GOTO CHECK_DONE ! SSP 240052
12050 IF CHECK_FLDR_1 OR CHECK_ALL THEN {
12055 ! Use repeat around the checks so that when we find an exception, the *BREAK will skip the other checks
12060 REPEAT 
12070 GOSUB CHECK_ORDERED_BY; IF NOT(VALID_ORDERED_BY) THEN RECORD_OK=0; BREAK
12072 GOSUB CHECK_CUST_PO; IF NOT(VALID_CUST_PO) THEN RECORD_OK=0; BREAK
12074 GOSUB CHECK_DATE_REQ; IF NOT(VALID_DATE_REQ) THEN RECORD_OK=0; BREAK
12076 GOSUB CHECK_CREDIT_CARD_TERM; IF NOT(VALID_CREDIT_TERM) THEN RECORD_OK=0; BREAK ! SSP219116 jdf
12080 UNTIL 1=1 ! only do loop once
12085 IF NOT(RECORD_OK) THEN NEXT_FOLDER=FLDR.FMGODA.1.CTL,REFRESH_FLG=1; GOTO CHECK_DONE
12090  }
12095 ! 
12100 IF CHECK_FLDR_2 OR CHECK_ALL THEN {
12190 IF NOT(RECORD_OK) THEN IF FOLDER_ID$<>"FMGODA.2" THEN REPLACEMENT_FOLDER$="FMGODA.2" END_IF ; REFRESH_FLG=1; GOTO CHECK_DONE
12195  }
12199 ! 
12200 IF CHECK_FLDR_3 OR CHECK_ALL THEN {
12205 REPEAT 
12220 TOTAL=FN_CALC_TOTAL; IF TOTAL<>100 THEN MSGBOX MSG("MB_1_M"),MSG("MB_ATTN"),"!"; RECORD_OK=0,NEXT_ID=SALESMAN_1_PCT_SALE.CTL; BREAK
12285 UNTIL 1=1 ! Only do loop onsce
12290 IF NOT(RECORD_OK) THEN NEXT_FOLDER=FLDR.FMGODA.3.CTL,REFRESH_FLG=1; GOTO CHECK_DONE
12295  }
12298 GOSUB SEL_CSR_CODE; IF CSR_NOTOK=1 THEN NEXT_FOLDER=FLDR.FMGODA.3.CTL,RECORD_OK=0,REFRESH_FLG=1; GOTO CHECK_DONE
12299 ! 
12990 CHECK_DONE:
12995 CHECK_ALL=0,CHECK_FLDR_1=0,CHECK_FLDR_2=0,CHECK_FLDR_3=0
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 NUM_TIMES_PL_PRINTED$=""
13030 BACKGROUND_PROC$=""
13040 MASTER_QUOTE_PART_2$=""
13050 CUST_DIV$=""
13060 CUST_CODE$=""
13070 ORDER_DATE$=""
13080 ORDER_TYPE_2$=""
13090 MASTER_QUOTE_PART_1$=""
13100 CUST_PO$=""
13110 WORK_ORDER$=""
13120 WD_TYPE$=""
13130 WORK_ORDER_PRINTED$=""
13140 WORK_ORDER_REV_NUM$=""
13150 ORDER_TYPE_1$=""
13160 BACK_ORDER$=""
13170 PROMOTION_CODE$=""
13180 ORDER_ACKNOW_PRINTED$=""
13190 RFQ_TYPE_QUOTATION$=""
13200 CONSOLIDATED_PL$=""
13210 ORDER_TYPE_3$=""
13220 DATE_REQUESTED$=""
13230 SO_LETTER_TYPE_CODE$=""
13240 PRINT_SHIPPING_ACK$=""
13250 INV_IN_PROGRESS$=""
13260 DEPOSIT_CHECK_NUM$=""
13270 DEPOSIT_CHECK_DATE$=""
13280 STAX_CODE$=""
13290 TAXABLE$=""
13300 TERMS_CODE$=""
13310 CUST_SERV_REP$=""
13320 SPER_CODE$=""
13330 COMM_CODE$=""
13340 OTHER_SPER_1$=""
13350 OTHER_SPER_2$=""
13360 OTHER_SPER_3$=""
13370 OTHER_SPER_4$=""
13380 IF _CLR_FLG$="R" THEN ORDER_DIV$=""
13390 IF _CLR_FLG$="R" THEN ORDER_NUM$=""
13400 SALES_ORDER_PRINTED$=""
13410 CTN_LBL_PRINTED$=""
13420 PACKING_LIST_PRINTD$=""
13430 ORDERED_BY$=""
13440 ORDER_GREETING$=""
13450 OPER_CODE_1ST$=""
13460 OPER_CODE_LAST_MOD$=""
13470 DATE_LAST_MODIFIED$=""
13480 AUTO_REQ_TYPE$=""
13490 CONSOL_ORDER_TYPE$=""
13500 QUOTE_FROM_LINES$=""
13510 REPEAT_ORDER$=""
13520 REPEAT_FROM_ORD$=""
13530 EXCLUDE_REBATE$=""
13540 ON_HOLD$=""
13550 GB_GOLD_RUSH$=""
13560 GB_SAMPLE_ORD$=""
13570 GB_USE_REBATE$=""
13580 GB_OVERRUNS$=""
13590 GB_PROD_DEPT$=""
13600 GB_PL_COPIES$=""
13610 GB_IMPRINT_COLOR$=""
13620 GB_SAMPLES_DIST$=""
13630 GB_SURE$=""
13640 SCALE_SEQ_NUM$=""
13650 SAMPLE_REBATE_LN$=""
13660 FM2ODH_OPTIONS$=""
13670 INV_COST_SEQ$=""
13680 INV_COST_PARM$=""
13690 NO_DELETE$=""
13700 BO_FILL_REQ_CHG$=""
13701 CIG_FLAG$=""
13702 FREIGHT_MARKUP_TABLE$=""
13703 ORDER_SOURCE$=""
13704 WEBEC_BUYER$=""
13705 WEB_SESSION$=""
13706 DATE_CREATED$=""
13707 TIME_CREATED$=""
13708 FS1_UNUSED_5$=""
13709 CC_TYPE$=""
13710 FS1_UNUSED_1$=""
13720 DEPOSIT_AMT=0
13730 SALESMAN_1_PCT_SALE=0
13740 ALT_SPER_PRCNT_1=0
13750 ALT_SPER_PRCNT_2=0
13760 ALT_SPER_PRCNT_3=0
13770 ALT_SPER_PRCNT_4=0
13780 ORDER_AMT=0
13790 ORDER_COST=0
13800 FRT_AMT=0
13810 LINE_ITEM_DISC_PRCNT=0
13820 FRT_FROM_LOTS=0
13830 FS1_UNUSED_2=0
13840 FS1_UNUSED_3=0
13850 FS1_UNUSED_4=0
13860 MASTER_QUOTE$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 ! IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$ ELSE CALL "*wingrp;Disable",KEY2.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14985 IF ARG_2$="NEW" THEN CALL "*wingrp;hide",MOVE_BUTTONS.GRP$; CALL "*wingrp;hide",BUTTONS.GRP$; CALL "*wingrp;show",WIZARD.GRP$; CALL "*wingrp;show",HIDE.GRP$ ELSE CALL "*wingrp;show",BUTTONS.GRP$; CALL "*wingrp;hide",WIZARD.GRP$; CALL "*wingrp;hide",HIDE.GRP$
14987 IF ARG_2$="NEW" THEN IF FOLDER_ID$="FMGODA.3" THEN HIDE CONTROL WZ_NEXT.CTL; SHOW CONTROL WZ_FINISH.CTL ! If last screen then hide next, show finish
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(93,"N")
15030 IF _ORIG.NUM_TIMES_PL_PRINTED$=_CUR.NUM_TIMES_PL_PRINTED$ OR NUM_TIMES_PL_PRINTED$=_CUR.NUM_TIMES_PL_PRINTED$ THEN GOTO *NEXT ELSE IF _ORIG.NUM_TIMES_PL_PRINTED$=NUM_TIMES_PL_PRINTED$ THEN _CHG2$=_CHG2$+SEP+MSG("NUM_T_P_P")+" = "+_CUR.NUM_TIMES_PL_PRINTED$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NUM_T_P_P")+" = "+_CUR.NUM_TIMES_PL_PRINTED$
15040 IF _ORIG.BACKGROUND_PROC$=_CUR.BACKGROUND_PROC$ OR BACKGROUND_PROC$=_CUR.BACKGROUND_PROC$ THEN GOTO *NEXT ELSE IF _ORIG.BACKGROUND_PROC$=BACKGROUND_PROC$ THEN _CHG2$=_CHG2$+SEP+MSG("BACK_P")+" = "+_CUR.BACKGROUND_PROC$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BACK_P")+" = "+_CUR.BACKGROUND_PROC$
15050 IF _ORIG.MASTER_QUOTE_PART_2$=_CUR.MASTER_QUOTE_PART_2$ OR MASTER_QUOTE_PART_2$=_CUR.MASTER_QUOTE_PART_2$ THEN GOTO *NEXT ELSE IF _ORIG.MASTER_QUOTE_PART_2$=MASTER_QUOTE_PART_2$ THEN _CHG2$=_CHG2$+SEP+MSG("MAST_Q_P_2")+" = "+_CUR.MASTER_QUOTE_PART_2$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAST_Q_P_2")+" = "+_CUR.MASTER_QUOTE_PART_2$
15060 IF _ORIG.CUST_DIV$=_CUR.CUST_DIV$ OR CUST_DIV$=_CUR.CUST_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_DIV$=CUST_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_DIV")+" = "+_CUR.CUST_DIV$
15070 IF _ORIG.CUST_CODE$=_CUR.CUST_CODE$ OR CUST_CODE$=_CUR.CUST_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_CODE$=CUST_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_CODE")+" = "+_CUR.CUST_CODE$
15080 IF _ORIG.ORDER_DATE$=_CUR.ORDER_DATE$ OR ORDER_DATE$=_CUR.ORDER_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DATE$=ORDER_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DATE")+" = "+_CUR.ORDER_DATE$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DATE")+" = "+_CUR.ORDER_DATE$
15090 IF _ORIG.ORDER_TYPE_2$=_CUR.ORDER_TYPE_2$ OR ORDER_TYPE_2$=_CUR.ORDER_TYPE_2$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_TYPE_2$=ORDER_TYPE_2$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_T_2")+" = "+_CUR.ORDER_TYPE_2$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_T_2")+" = "+_CUR.ORDER_TYPE_2$
15100 IF _ORIG.MASTER_QUOTE_PART_1$=_CUR.MASTER_QUOTE_PART_1$ OR MASTER_QUOTE_PART_1$=_CUR.MASTER_QUOTE_PART_1$ THEN GOTO *NEXT ELSE IF _ORIG.MASTER_QUOTE_PART_1$=MASTER_QUOTE_PART_1$ THEN _CHG2$=_CHG2$+SEP+MSG("MAST_Q_P_1")+" = "+_CUR.MASTER_QUOTE_PART_1$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAST_Q_P_1")+" = "+_CUR.MASTER_QUOTE_PART_1$
15110 IF _ORIG.CUST_PO$=_CUR.CUST_PO$ OR CUST_PO$=_CUR.CUST_PO$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_PO$=CUST_PO$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_PO")+" = "+_CUR.CUST_PO$
15120 IF _ORIG.WORK_ORDER$=_CUR.WORK_ORDER$ OR WORK_ORDER$=_CUR.WORK_ORDER$ THEN GOTO *NEXT ELSE IF _ORIG.WORK_ORDER$=WORK_ORDER$ THEN _CHG2$=_CHG2$+SEP+MSG("WORK_ORDER")+" = "+_CUR.WORK_ORDER$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WORK_ORDER")+" = "+_CUR.WORK_ORDER$
15130 IF _ORIG.WD_TYPE$=_CUR.WD_TYPE$ OR WD_TYPE$=_CUR.WD_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.WD_TYPE$=WD_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("WD_TYPE")+" = "+_CUR.WD_TYPE$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WD_TYPE")+" = "+_CUR.WD_TYPE$
15140 IF _ORIG.WORK_ORDER_PRINTED$=_CUR.WORK_ORDER_PRINTED$ OR WORK_ORDER_PRINTED$=_CUR.WORK_ORDER_PRINTED$ THEN GOTO *NEXT ELSE IF _ORIG.WORK_ORDER_PRINTED$=WORK_ORDER_PRINTED$ THEN _CHG2$=_CHG2$+SEP+MSG("WORK_O_P")+" = "+_CUR.WORK_ORDER_PRINTED$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WORK_O_P")+" = "+_CUR.WORK_ORDER_PRINTED$
15150 IF _ORIG.WORK_ORDER_REV_NUM$=_CUR.WORK_ORDER_REV_NUM$ OR WORK_ORDER_REV_NUM$=_CUR.WORK_ORDER_REV_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.WORK_ORDER_REV_NUM$=WORK_ORDER_REV_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("WORK_O_R_N")+" = "+_CUR.WORK_ORDER_REV_NUM$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WORK_O_R_N")+" = "+_CUR.WORK_ORDER_REV_NUM$
15160 IF _ORIG.ORDER_TYPE_1$=_CUR.ORDER_TYPE_1$ OR ORDER_TYPE_1$=_CUR.ORDER_TYPE_1$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_TYPE_1$=ORDER_TYPE_1$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_T_1")+" = "+_CUR.ORDER_TYPE_1$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_T_1")+" = "+_CUR.ORDER_TYPE_1$
15170 IF _ORIG.BACK_ORDER$=_CUR.BACK_ORDER$ OR BACK_ORDER$=_CUR.BACK_ORDER$ THEN GOTO *NEXT ELSE IF _ORIG.BACK_ORDER$=BACK_ORDER$ THEN _CHG2$=_CHG2$+SEP+MSG("BACK_ORDER")+" = "+_CUR.BACK_ORDER$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BACK_ORDER")+" = "+_CUR.BACK_ORDER$
15180 IF _ORIG.PROMOTION_CODE$=_CUR.PROMOTION_CODE$ OR PROMOTION_CODE$=_CUR.PROMOTION_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PROMOTION_CODE$=PROMOTION_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PROM_C")+" = "+_CUR.PROMOTION_CODE$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROM_C")+" = "+_CUR.PROMOTION_CODE$
15190 IF _ORIG.ORDER_ACKNOW_PRINTED$=_CUR.ORDER_ACKNOW_PRINTED$ OR ORDER_ACKNOW_PRINTED$=_CUR.ORDER_ACKNOW_PRINTED$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_ACKNOW_PRINTED$=ORDER_ACKNOW_PRINTED$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_A_P")+" = "+_CUR.ORDER_ACKNOW_PRINTED$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_A_P")+" = "+_CUR.ORDER_ACKNOW_PRINTED$
15200 IF _ORIG.RFQ_TYPE_QUOTATION$=_CUR.RFQ_TYPE_QUOTATION$ OR RFQ_TYPE_QUOTATION$=_CUR.RFQ_TYPE_QUOTATION$ THEN GOTO *NEXT ELSE IF _ORIG.RFQ_TYPE_QUOTATION$=RFQ_TYPE_QUOTATION$ THEN _CHG2$=_CHG2$+SEP+MSG("RFQ_T_Q")+" = "+_CUR.RFQ_TYPE_QUOTATION$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("RFQ_T_Q")+" = "+_CUR.RFQ_TYPE_QUOTATION$
15210 IF _ORIG.CONSOLIDATED_PL$=_CUR.CONSOLIDATED_PL$ OR CONSOLIDATED_PL$=_CUR.CONSOLIDATED_PL$ THEN GOTO *NEXT ELSE IF _ORIG.CONSOLIDATED_PL$=CONSOLIDATED_PL$ THEN _CHG2$=_CHG2$+SEP+MSG("CONS_P")+" = "+_CUR.CONSOLIDATED_PL$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CONS_P")+" = "+_CUR.CONSOLIDATED_PL$
15220 IF _ORIG.ORDER_TYPE_3$=_CUR.ORDER_TYPE_3$ OR ORDER_TYPE_3$=_CUR.ORDER_TYPE_3$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_TYPE_3$=ORDER_TYPE_3$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_T_3")+" = "+_CUR.ORDER_TYPE_3$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_T_3")+" = "+_CUR.ORDER_TYPE_3$
15230 IF _ORIG.DATE_REQUESTED$=_CUR.DATE_REQUESTED$ OR DATE_REQUESTED$=_CUR.DATE_REQUESTED$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_REQUESTED$=DATE_REQUESTED$ THEN _CHG2$=_CHG2$+SEP+MSG("DATE_R")+" = "+_CUR.DATE_REQUESTED$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATE_R")+" = "+_CUR.DATE_REQUESTED$
15240 IF _ORIG.SO_LETTER_TYPE_CODE$=_CUR.SO_LETTER_TYPE_CODE$ OR SO_LETTER_TYPE_CODE$=_CUR.SO_LETTER_TYPE_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SO_LETTER_TYPE_CODE$=SO_LETTER_TYPE_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("S_L_T_C")+" = "+_CUR.SO_LETTER_TYPE_CODE$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("S_L_T_C")+" = "+_CUR.SO_LETTER_TYPE_CODE$
15250 IF _ORIG.PRINT_SHIPPING_ACK$=_CUR.PRINT_SHIPPING_ACK$ OR PRINT_SHIPPING_ACK$=_CUR.PRINT_SHIPPING_ACK$ THEN GOTO *NEXT ELSE IF _ORIG.PRINT_SHIPPING_ACK$=PRINT_SHIPPING_ACK$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_S_A")+" = "+_CUR.PRINT_SHIPPING_ACK$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_S_A")+" = "+_CUR.PRINT_SHIPPING_ACK$
15260 IF _ORIG.INV_IN_PROGRESS$=_CUR.INV_IN_PROGRESS$ OR INV_IN_PROGRESS$=_CUR.INV_IN_PROGRESS$ THEN GOTO *NEXT ELSE IF _ORIG.INV_IN_PROGRESS$=INV_IN_PROGRESS$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_I_P")+" = "+_CUR.INV_IN_PROGRESS$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_I_P")+" = "+_CUR.INV_IN_PROGRESS$
15270 IF _ORIG.DEPOSIT_CHECK_NUM$=_CUR.DEPOSIT_CHECK_NUM$ OR DEPOSIT_CHECK_NUM$=_CUR.DEPOSIT_CHECK_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.DEPOSIT_CHECK_NUM$=DEPOSIT_CHECK_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("DEPO_C_N")+" = "+_CUR.DEPOSIT_CHECK_NUM$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DEPO_C_N")+" = "+_CUR.DEPOSIT_CHECK_NUM$
15280 IF _ORIG.DEPOSIT_CHECK_DATE$=_CUR.DEPOSIT_CHECK_DATE$ OR DEPOSIT_CHECK_DATE$=_CUR.DEPOSIT_CHECK_DATE$ THEN GOTO *NEXT ELSE IF _ORIG.DEPOSIT_CHECK_DATE$=DEPOSIT_CHECK_DATE$ THEN _CHG2$=_CHG2$+SEP+MSG("DEPO_C_D")+" = "+_CUR.DEPOSIT_CHECK_DATE$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DEPO_C_D")+" = "+_CUR.DEPOSIT_CHECK_DATE$
15290 IF _ORIG.STAX_CODE$=_CUR.STAX_CODE$ OR STAX_CODE$=_CUR.STAX_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.STAX_CODE$=STAX_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("STAX_CODE")+" = "+_CUR.STAX_CODE$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("STAX_CODE")+" = "+_CUR.STAX_CODE$
15300 IF _ORIG.TAXABLE$=_CUR.TAXABLE$ OR TAXABLE$=_CUR.TAXABLE$ THEN GOTO *NEXT ELSE IF _ORIG.TAXABLE$=TAXABLE$ THEN _CHG2$=_CHG2$+SEP+MSG("TAXABLE")+" = "+_CUR.TAXABLE$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TAXABLE")+" = "+_CUR.TAXABLE$
15310 IF _ORIG.TERMS_CODE$=_CUR.TERMS_CODE$ OR TERMS_CODE$=_CUR.TERMS_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.TERMS_CODE$=TERMS_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("TERMS_CODE")+" = "+_CUR.TERMS_CODE$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TERMS_CODE")+" = "+_CUR.TERMS_CODE$
15320 IF _ORIG.CUST_SERV_REP$=_CUR.CUST_SERV_REP$ OR CUST_SERV_REP$=_CUR.CUST_SERV_REP$ THEN GOTO *NEXT ELSE IF _ORIG.CUST_SERV_REP$=CUST_SERV_REP$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_S_R")+" = "+_CUR.CUST_SERV_REP$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_S_R")+" = "+_CUR.CUST_SERV_REP$
15330 IF _ORIG.SPER_CODE$=_CUR.SPER_CODE$ OR SPER_CODE$=_CUR.SPER_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.SPER_CODE$=SPER_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SPER_CODE")+" = "+_CUR.SPER_CODE$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPER_CODE")+" = "+_CUR.SPER_CODE$
15340 IF _ORIG.COMM_CODE$=_CUR.COMM_CODE$ OR COMM_CODE$=_CUR.COMM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.COMM_CODE$=COMM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("COMM_CODE")+" = "+_CUR.COMM_CODE$,_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMM_CODE")+" = "+_CUR.COMM_CODE$
15350 IF _ORIG.OTHER_SPER_1$=_CUR.OTHER_SPER_1$ OR OTHER_SPER_1$=_CUR.OTHER_SPER_1$ THEN GOTO *NEXT ELSE IF _ORIG.OTHER_SPER_1$=OTHER_SPER_1$ THEN _CHG2$=_CHG2$+SEP+MSG("OTHE_S_1")+" = "+_CUR.OTHER_SPER_1$,_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OTHE_S_1")+" = "+_CUR.OTHER_SPER_1$
15360 IF _ORIG.OTHER_SPER_2$=_CUR.OTHER_SPER_2$ OR OTHER_SPER_2$=_CUR.OTHER_SPER_2$ THEN GOTO *NEXT ELSE IF _ORIG.OTHER_SPER_2$=OTHER_SPER_2$ THEN _CHG2$=_CHG2$+SEP+MSG("OTHE_S_2")+" = "+_CUR.OTHER_SPER_2$,_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OTHE_S_2")+" = "+_CUR.OTHER_SPER_2$
15370 IF _ORIG.OTHER_SPER_3$=_CUR.OTHER_SPER_3$ OR OTHER_SPER_3$=_CUR.OTHER_SPER_3$ THEN GOTO *NEXT ELSE IF _ORIG.OTHER_SPER_3$=OTHER_SPER_3$ THEN _CHG2$=_CHG2$+SEP+MSG("OTHE_S_3")+" = "+_CUR.OTHER_SPER_3$,_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OTHE_S_3")+" = "+_CUR.OTHER_SPER_3$
15380 IF _ORIG.OTHER_SPER_4$=_CUR.OTHER_SPER_4$ OR OTHER_SPER_4$=_CUR.OTHER_SPER_4$ THEN GOTO *NEXT ELSE IF _ORIG.OTHER_SPER_4$=OTHER_SPER_4$ THEN _CHG2$=_CHG2$+SEP+MSG("OTHE_S_4")+" = "+_CUR.OTHER_SPER_4$,_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OTHE_S_4")+" = "+_CUR.OTHER_SPER_4$
15390 IF _ORIG.ORDER_DIV$=_CUR.ORDER_DIV$ OR ORDER_DIV$=_CUR.ORDER_DIV$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_DIV$=ORDER_DIV$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$,_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_DIV")+" = "+_CUR.ORDER_DIV$
15400 IF _ORIG.ORDER_NUM$=_CUR.ORDER_NUM$ OR ORDER_NUM$=_CUR.ORDER_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_NUM$=ORDER_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$,_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_NUM")+" = "+_CUR.ORDER_NUM$
15410 IF _ORIG.SALES_ORDER_PRINTED$=_CUR.SALES_ORDER_PRINTED$ OR SALES_ORDER_PRINTED$=_CUR.SALES_ORDER_PRINTED$ THEN GOTO *NEXT ELSE IF _ORIG.SALES_ORDER_PRINTED$=SALES_ORDER_PRINTED$ THEN _CHG2$=_CHG2$+SEP+MSG("SALE_O_P")+" = "+_CUR.SALES_ORDER_PRINTED$,_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SALE_O_P")+" = "+_CUR.SALES_ORDER_PRINTED$
15420 IF _ORIG.CTN_LBL_PRINTED$=_CUR.CTN_LBL_PRINTED$ OR CTN_LBL_PRINTED$=_CUR.CTN_LBL_PRINTED$ THEN GOTO *NEXT ELSE IF _ORIG.CTN_LBL_PRINTED$=CTN_LBL_PRINTED$ THEN _CHG2$=_CHG2$+SEP+MSG("CTN_L_P")+" = "+_CUR.CTN_LBL_PRINTED$,_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CTN_L_P")+" = "+_CUR.CTN_LBL_PRINTED$
15430 IF _ORIG.PACKING_LIST_PRINTD$=_CUR.PACKING_LIST_PRINTD$ OR PACKING_LIST_PRINTD$=_CUR.PACKING_LIST_PRINTD$ THEN GOTO *NEXT ELSE IF _ORIG.PACKING_LIST_PRINTD$=PACKING_LIST_PRINTD$ THEN _CHG2$=_CHG2$+SEP+MSG("PACK_L_P")+" = "+_CUR.PACKING_LIST_PRINTD$,_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PACK_L_P")+" = "+_CUR.PACKING_LIST_PRINTD$
15440 IF _ORIG.ORDERED_BY$=_CUR.ORDERED_BY$ OR ORDERED_BY$=_CUR.ORDERED_BY$ THEN GOTO *NEXT ELSE IF _ORIG.ORDERED_BY$=ORDERED_BY$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDERED_BY")+" = "+_CUR.ORDERED_BY$,_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDERED_BY")+" = "+_CUR.ORDERED_BY$
15450 IF _ORIG.ORDER_GREETING$=_CUR.ORDER_GREETING$ OR ORDER_GREETING$=_CUR.ORDER_GREETING$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_GREETING$=ORDER_GREETING$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDE_G")+" = "+_CUR.ORDER_GREETING$,_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDE_G")+" = "+_CUR.ORDER_GREETING$
15460 IF _ORIG.OPER_CODE_1ST$=_CUR.OPER_CODE_1ST$ OR OPER_CODE_1ST$=_CUR.OPER_CODE_1ST$ THEN GOTO *NEXT ELSE IF _ORIG.OPER_CODE_1ST$=OPER_CODE_1ST$ THEN _CHG2$=_CHG2$+SEP+MSG("OPER_C_1")+" = "+_CUR.OPER_CODE_1ST$,_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OPER_C_1")+" = "+_CUR.OPER_CODE_1ST$
15470 IF _ORIG.OPER_CODE_LAST_MOD$=_CUR.OPER_CODE_LAST_MOD$ OR OPER_CODE_LAST_MOD$=_CUR.OPER_CODE_LAST_MOD$ THEN GOTO *NEXT ELSE IF _ORIG.OPER_CODE_LAST_MOD$=OPER_CODE_LAST_MOD$ THEN _CHG2$=_CHG2$+SEP+MSG("OPER_C_L_M")+" = "+_CUR.OPER_CODE_LAST_MOD$,_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OPER_C_L_M")+" = "+_CUR.OPER_CODE_LAST_MOD$
15480 IF _ORIG.DATE_LAST_MODIFIED$=_CUR.DATE_LAST_MODIFIED$ OR DATE_LAST_MODIFIED$=_CUR.DATE_LAST_MODIFIED$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_LAST_MODIFIED$=DATE_LAST_MODIFIED$ THEN _CHG2$=_CHG2$+SEP+MSG("DATE_L_M")+" = "+_CUR.DATE_LAST_MODIFIED$,_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATE_L_M")+" = "+_CUR.DATE_LAST_MODIFIED$
15490 IF _ORIG.AUTO_REQ_TYPE$=_CUR.AUTO_REQ_TYPE$ OR AUTO_REQ_TYPE$=_CUR.AUTO_REQ_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.AUTO_REQ_TYPE$=AUTO_REQ_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("AUTO_R_T")+" = "+_CUR.AUTO_REQ_TYPE$,_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUTO_R_T")+" = "+_CUR.AUTO_REQ_TYPE$
15500 IF _ORIG.CONSOL_ORDER_TYPE$=_CUR.CONSOL_ORDER_TYPE$ OR CONSOL_ORDER_TYPE$=_CUR.CONSOL_ORDER_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.CONSOL_ORDER_TYPE$=CONSOL_ORDER_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("CONS_O_T")+" = "+_CUR.CONSOL_ORDER_TYPE$,_CHG_VAR$(48,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CONS_O_T")+" = "+_CUR.CONSOL_ORDER_TYPE$
15510 IF _ORIG.QUOTE_FROM_LINES$=_CUR.QUOTE_FROM_LINES$ OR QUOTE_FROM_LINES$=_CUR.QUOTE_FROM_LINES$ THEN GOTO *NEXT ELSE IF _ORIG.QUOTE_FROM_LINES$=QUOTE_FROM_LINES$ THEN _CHG2$=_CHG2$+SEP+MSG("QUOT_F_L")+" = "+_CUR.QUOTE_FROM_LINES$,_CHG_VAR$(49,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("QUOT_F_L")+" = "+_CUR.QUOTE_FROM_LINES$
15520 IF _ORIG.REPEAT_ORDER$=_CUR.REPEAT_ORDER$ OR REPEAT_ORDER$=_CUR.REPEAT_ORDER$ THEN GOTO *NEXT ELSE IF _ORIG.REPEAT_ORDER$=REPEAT_ORDER$ THEN _CHG2$=_CHG2$+SEP+MSG("REPE_O")+" = "+_CUR.REPEAT_ORDER$,_CHG_VAR$(50,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REPE_O")+" = "+_CUR.REPEAT_ORDER$
15530 IF _ORIG.REPEAT_FROM_ORD$=_CUR.REPEAT_FROM_ORD$ OR REPEAT_FROM_ORD$=_CUR.REPEAT_FROM_ORD$ THEN GOTO *NEXT ELSE IF _ORIG.REPEAT_FROM_ORD$=REPEAT_FROM_ORD$ THEN _CHG2$=_CHG2$+SEP+MSG("REPE_F_O")+" = "+_CUR.REPEAT_FROM_ORD$,_CHG_VAR$(51,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REPE_F_O")+" = "+_CUR.REPEAT_FROM_ORD$
15540 IF _ORIG.EXCLUDE_REBATE$=_CUR.EXCLUDE_REBATE$ OR EXCLUDE_REBATE$=_CUR.EXCLUDE_REBATE$ THEN GOTO *NEXT ELSE IF _ORIG.EXCLUDE_REBATE$=EXCLUDE_REBATE$ THEN _CHG2$=_CHG2$+SEP+MSG("EXCL_R")+" = "+_CUR.EXCLUDE_REBATE$,_CHG_VAR$(52,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("EXCL_R")+" = "+_CUR.EXCLUDE_REBATE$
15550 IF _ORIG.ON_HOLD$=_CUR.ON_HOLD$ OR ON_HOLD$=_CUR.ON_HOLD$ THEN GOTO *NEXT ELSE IF _ORIG.ON_HOLD$=ON_HOLD$ THEN _CHG2$=_CHG2$+SEP+MSG("ON_HOLD")+" = "+_CUR.ON_HOLD$,_CHG_VAR$(53,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ON_HOLD")+" = "+_CUR.ON_HOLD$
15560 IF _ORIG.GB_GOLD_RUSH$=_CUR.GB_GOLD_RUSH$ OR GB_GOLD_RUSH$=_CUR.GB_GOLD_RUSH$ THEN GOTO *NEXT ELSE IF _ORIG.GB_GOLD_RUSH$=GB_GOLD_RUSH$ THEN _CHG2$=_CHG2$+SEP+MSG("G_G_R")+" = "+_CUR.GB_GOLD_RUSH$,_CHG_VAR$(54,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("G_G_R")+" = "+_CUR.GB_GOLD_RUSH$
15570 IF _ORIG.GB_SAMPLE_ORD$=_CUR.GB_SAMPLE_ORD$ OR GB_SAMPLE_ORD$=_CUR.GB_SAMPLE_ORD$ THEN GOTO *NEXT ELSE IF _ORIG.GB_SAMPLE_ORD$=GB_SAMPLE_ORD$ THEN _CHG2$=_CHG2$+SEP+MSG("G_S_O")+" = "+_CUR.GB_SAMPLE_ORD$,_CHG_VAR$(55,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("G_S_O")+" = "+_CUR.GB_SAMPLE_ORD$
15580 IF _ORIG.GB_USE_REBATE$=_CUR.GB_USE_REBATE$ OR GB_USE_REBATE$=_CUR.GB_USE_REBATE$ THEN GOTO *NEXT ELSE IF _ORIG.GB_USE_REBATE$=GB_USE_REBATE$ THEN _CHG2$=_CHG2$+SEP+MSG("G_U_R")+" = "+_CUR.GB_USE_REBATE$,_CHG_VAR$(56,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("G_U_R")+" = "+_CUR.GB_USE_REBATE$
15590 IF _ORIG.GB_OVERRUNS$=_CUR.GB_OVERRUNS$ OR GB_OVERRUNS$=_CUR.GB_OVERRUNS$ THEN GOTO *NEXT ELSE IF _ORIG.GB_OVERRUNS$=GB_OVERRUNS$ THEN _CHG2$=_CHG2$+SEP+MSG("G_O")+" = "+_CUR.GB_OVERRUNS$,_CHG_VAR$(57,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("G_O")+" = "+_CUR.GB_OVERRUNS$
15600 IF _ORIG.GB_PROD_DEPT$=_CUR.GB_PROD_DEPT$ OR GB_PROD_DEPT$=_CUR.GB_PROD_DEPT$ THEN GOTO *NEXT ELSE IF _ORIG.GB_PROD_DEPT$=GB_PROD_DEPT$ THEN _CHG2$=_CHG2$+SEP+MSG("G_P_D")+" = "+_CUR.GB_PROD_DEPT$,_CHG_VAR$(58,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("G_P_D")+" = "+_CUR.GB_PROD_DEPT$
15610 IF _ORIG.GB_PL_COPIES$=_CUR.GB_PL_COPIES$ OR GB_PL_COPIES$=_CUR.GB_PL_COPIES$ THEN GOTO *NEXT ELSE IF _ORIG.GB_PL_COPIES$=GB_PL_COPIES$ THEN _CHG2$=_CHG2$+SEP+MSG("G_P_C")+" = "+_CUR.GB_PL_COPIES$,_CHG_VAR$(59,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("G_P_C")+" = "+_CUR.GB_PL_COPIES$
15620 IF _ORIG.GB_IMPRINT_COLOR$=_CUR.GB_IMPRINT_COLOR$ OR GB_IMPRINT_COLOR$=_CUR.GB_IMPRINT_COLOR$ THEN GOTO *NEXT ELSE IF _ORIG.GB_IMPRINT_COLOR$=GB_IMPRINT_COLOR$ THEN _CHG2$=_CHG2$+SEP+MSG("G_I_C")+" = "+_CUR.GB_IMPRINT_COLOR$,_CHG_VAR$(60,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("G_I_C")+" = "+_CUR.GB_IMPRINT_COLOR$
15630 IF _ORIG.GB_SAMPLES_DIST$=_CUR.GB_SAMPLES_DIST$ OR GB_SAMPLES_DIST$=_CUR.GB_SAMPLES_DIST$ THEN GOTO *NEXT ELSE IF _ORIG.GB_SAMPLES_DIST$=GB_SAMPLES_DIST$ THEN _CHG2$=_CHG2$+SEP+MSG("G_S_D")+" = "+_CUR.GB_SAMPLES_DIST$,_CHG_VAR$(61,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("G_S_D")+" = "+_CUR.GB_SAMPLES_DIST$
15640 IF _ORIG.GB_SURE$=_CUR.GB_SURE$ OR GB_SURE$=_CUR.GB_SURE$ THEN GOTO *NEXT ELSE IF _ORIG.GB_SURE$=GB_SURE$ THEN _CHG2$=_CHG2$+SEP+MSG("GB_SURE")+" = "+_CUR.GB_SURE$,_CHG_VAR$(62,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("GB_SURE")+" = "+_CUR.GB_SURE$
15650 IF _ORIG.SCALE_SEQ_NUM$=_CUR.SCALE_SEQ_NUM$ OR SCALE_SEQ_NUM$=_CUR.SCALE_SEQ_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.SCALE_SEQ_NUM$=SCALE_SEQ_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("SCAL_S_N")+" = "+_CUR.SCALE_SEQ_NUM$,_CHG_VAR$(63,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SCAL_S_N")+" = "+_CUR.SCALE_SEQ_NUM$
15660 IF _ORIG.SAMPLE_REBATE_LN$=_CUR.SAMPLE_REBATE_LN$ OR SAMPLE_REBATE_LN$=_CUR.SAMPLE_REBATE_LN$ THEN GOTO *NEXT ELSE IF _ORIG.SAMPLE_REBATE_LN$=SAMPLE_REBATE_LN$ THEN _CHG2$=_CHG2$+SEP+MSG("SAMP_R_L")+" = "+_CUR.SAMPLE_REBATE_LN$,_CHG_VAR$(64,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SAMP_R_L")+" = "+_CUR.SAMPLE_REBATE_LN$
15670 IF _ORIG.FM2ODH_OPTIONS$=_CUR.FM2ODH_OPTIONS$ OR FM2ODH_OPTIONS$=_CUR.FM2ODH_OPTIONS$ THEN GOTO *NEXT ELSE IF _ORIG.FM2ODH_OPTIONS$=FM2ODH_OPTIONS$ THEN _CHG2$=_CHG2$+SEP+MSG("FM2O_O")+" = "+_CUR.FM2ODH_OPTIONS$,_CHG_VAR$(65,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FM2O_O")+" = "+_CUR.FM2ODH_OPTIONS$
15680 IF _ORIG.INV_COST_SEQ$=_CUR.INV_COST_SEQ$ OR INV_COST_SEQ$=_CUR.INV_COST_SEQ$ THEN GOTO *NEXT ELSE IF _ORIG.INV_COST_SEQ$=INV_COST_SEQ$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_C_S")+" = "+_CUR.INV_COST_SEQ$,_CHG_VAR$(66,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_C_S")+" = "+_CUR.INV_COST_SEQ$
15690 IF _ORIG.INV_COST_PARM$=_CUR.INV_COST_PARM$ OR INV_COST_PARM$=_CUR.INV_COST_PARM$ THEN GOTO *NEXT ELSE IF _ORIG.INV_COST_PARM$=INV_COST_PARM$ THEN _CHG2$=_CHG2$+SEP+MSG("INV_C_P")+" = "+_CUR.INV_COST_PARM$,_CHG_VAR$(67,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("INV_C_P")+" = "+_CUR.INV_COST_PARM$
15700 IF _ORIG.NO_DELETE$=_CUR.NO_DELETE$ OR NO_DELETE$=_CUR.NO_DELETE$ THEN GOTO *NEXT ELSE IF _ORIG.NO_DELETE$=NO_DELETE$ THEN _CHG2$=_CHG2$+SEP+MSG("NO_DELETE")+" = "+_CUR.NO_DELETE$,_CHG_VAR$(68,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NO_DELETE")+" = "+_CUR.NO_DELETE$
15710 IF _ORIG.BO_FILL_REQ_CHG$=_CUR.BO_FILL_REQ_CHG$ OR BO_FILL_REQ_CHG$=_CUR.BO_FILL_REQ_CHG$ THEN GOTO *NEXT ELSE IF _ORIG.BO_FILL_REQ_CHG$=BO_FILL_REQ_CHG$ THEN _CHG2$=_CHG2$+SEP+MSG("BO_FILL")+" = "+_CUR.BO_FILL_REQ_CHG$,_CHG_VAR$(69,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BO_FILL")+" = "+_CUR.BO_FILL_REQ_CHG$
15711 IF _ORIG.CIG_FLAG$=_CUR.CIG_FLAG$ OR CIG_FLAG$=_CUR.CIG_FLAG$ THEN GOTO *NEXT ELSE IF _ORIG.CIG_FLAG$=CIG_FLAG$ THEN _CHG2$=_CHG2$+SEP+MSG("CIG_FLAG")+" = "+_CUR.CIG_FLAG$,_CHG_VAR$(70,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CIG_FLAG")+" = "+_CUR.CIG_FLAG$
15712 IF _ORIG.FREIGHT_MARKUP_TABLE$=_CUR.FREIGHT_MARKUP_TABLE$ OR FREIGHT_MARKUP_TABLE$=_CUR.FREIGHT_MARKUP_TABLE$ THEN GOTO *NEXT ELSE IF _ORIG.FREIGHT_MARKUP_TABLE$=FREIGHT_MARKUP_TABLE$ THEN _CHG2$=_CHG2$+SEP+MSG("FRT_MU_TBL")+" = "+_CUR.FREIGHT_MARKUP_TABLE$,_CHG_VAR$(71,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRT_MU_TBL")+" = "+_CUR.FREIGHT_MARKUP_TABLE$
15713 IF _ORIG.ORDER_SOURCE$=_CUR.ORDER_SOURCE$ OR ORDER_SOURCE$=_CUR.ORDER_SOURCE$ THEN GOTO *NEXT ELSE IF _ORIG.ORDER_SOURCE$=ORDER_SOURCE$ THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_SRC")+" = "+_CUR.ORDER_SOURCE$,_CHG_VAR$(72,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_SRC")+" = "+_CUR.ORDER_SOURCE$
15714 IF _ORIG.WEBEC_BUYER$=_CUR.WEBEC_BUYER$ OR WEBEC_BUYER$=_CUR.WEBEC_BUYER$ THEN GOTO *NEXT ELSE IF _ORIG.WEBEC_BUYER$=WEBEC_BUYER$ THEN _CHG2$=_CHG2$+SEP+MSG("WEB_BUYER")+" = "+_CUR.WEBEC_BUYER$,_CHG_VAR$(73,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WEB_BUYER")+" = "+_CUR.WEBEC_BUYER$
15715 IF _ORIG.WEB_SESSION$=_CUR.WEB_SESSION$ OR WEB_SESSION$=_CUR.WEB_SESSION$ THEN GOTO *NEXT ELSE IF _ORIG.WEB_SESSION$=WEB_SESSION$ THEN _CHG2$=_CHG2$+SEP+MSG("WEB_SESS")+" = "+_CUR.WEB_SESSION$,_CHG_VAR$(74,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("WEB_SESS")+" = "+_CUR.WEB_SESSION$
15720 IF _ORIG.FS1_UNUSED_1$=_CUR.FS1_UNUSED_1$ OR FS1_UNUSED_1$=_CUR.FS1_UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.FS1_UNUSED_1$=FS1_UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FS1_UNUSED_1$,_CHG_VAR$(75,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FS1_UNUSED_1$
15730 IF _ORIG.DEPOSIT_AMT=_CUR.DEPOSIT_AMT OR DEPOSIT_AMT=_CUR.DEPOSIT_AMT THEN GOTO *NEXT ELSE IF _ORIG.DEPOSIT_AMT=DEPOSIT_AMT THEN _CHG2$=_CHG2$+SEP+MSG("DEPO_A")+" = "+STR(_CUR.DEPOSIT_AMT),_CHG_VAR$(76,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DEPO_A")+" = "+STR(_CUR.DEPOSIT_AMT)
15740 IF _ORIG.SALESMAN_1_PCT_SALE=_CUR.SALESMAN_1_PCT_SALE OR SALESMAN_1_PCT_SALE=_CUR.SALESMAN_1_PCT_SALE THEN GOTO *NEXT ELSE IF _ORIG.SALESMAN_1_PCT_SALE=SALESMAN_1_PCT_SALE THEN _CHG2$=_CHG2$+SEP+MSG("SALE_1_P_S")+" = "+STR(_CUR.SALESMAN_1_PCT_SALE),_CHG_VAR$(77,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SALE_1_P_S")+" = "+STR(_CUR.SALESMAN_1_PCT_SALE)
15750 IF _ORIG.ALT_SPER_PRCNT_1=_CUR.ALT_SPER_PRCNT_1 OR ALT_SPER_PRCNT_1=_CUR.ALT_SPER_PRCNT_1 THEN GOTO *NEXT ELSE IF _ORIG.ALT_SPER_PRCNT_1=ALT_SPER_PRCNT_1 THEN _CHG2$=_CHG2$+SEP+MSG("ALT_S_P_1")+" = "+STR(_CUR.ALT_SPER_PRCNT_1),_CHG_VAR$(78,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALT_S_P_1")+" = "+STR(_CUR.ALT_SPER_PRCNT_1)
15760 IF _ORIG.ALT_SPER_PRCNT_2=_CUR.ALT_SPER_PRCNT_2 OR ALT_SPER_PRCNT_2=_CUR.ALT_SPER_PRCNT_2 THEN GOTO *NEXT ELSE IF _ORIG.ALT_SPER_PRCNT_2=ALT_SPER_PRCNT_2 THEN _CHG2$=_CHG2$+SEP+MSG("ALT_S_P_2")+" = "+STR(_CUR.ALT_SPER_PRCNT_2),_CHG_VAR$(79,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALT_S_P_2")+" = "+STR(_CUR.ALT_SPER_PRCNT_2)
15770 IF _ORIG.ALT_SPER_PRCNT_3=_CUR.ALT_SPER_PRCNT_3 OR ALT_SPER_PRCNT_3=_CUR.ALT_SPER_PRCNT_3 THEN GOTO *NEXT ELSE IF _ORIG.ALT_SPER_PRCNT_3=ALT_SPER_PRCNT_3 THEN _CHG2$=_CHG2$+SEP+MSG("ALT_S_P_3")+" = "+STR(_CUR.ALT_SPER_PRCNT_3),_CHG_VAR$(80,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALT_S_P_3")+" = "+STR(_CUR.ALT_SPER_PRCNT_3)
15780 IF _ORIG.ALT_SPER_PRCNT_4=_CUR.ALT_SPER_PRCNT_4 OR ALT_SPER_PRCNT_4=_CUR.ALT_SPER_PRCNT_4 THEN GOTO *NEXT ELSE IF _ORIG.ALT_SPER_PRCNT_4=ALT_SPER_PRCNT_4 THEN _CHG2$=_CHG2$+SEP+MSG("ALT_S_P_4")+" = "+STR(_CUR.ALT_SPER_PRCNT_4),_CHG_VAR$(81,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALT_S_P_4")+" = "+STR(_CUR.ALT_SPER_PRCNT_4)
15790 IF _ORIG.ORDER_AMT=_CUR.ORDER_AMT OR ORDER_AMT=_CUR.ORDER_AMT THEN GOTO *NEXT ELSE IF _ORIG.ORDER_AMT=ORDER_AMT THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_AMT")+" = "+STR(_CUR.ORDER_AMT),_CHG_VAR$(82,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_AMT")+" = "+STR(_CUR.ORDER_AMT)
15800 IF _ORIG.ORDER_COST=_CUR.ORDER_COST OR ORDER_COST=_CUR.ORDER_COST THEN GOTO *NEXT ELSE IF _ORIG.ORDER_COST=ORDER_COST THEN _CHG2$=_CHG2$+SEP+MSG("ORDER_COST")+" = "+STR(_CUR.ORDER_COST),_CHG_VAR$(83,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ORDER_COST")+" = "+STR(_CUR.ORDER_COST)
15810 IF _ORIG.FRT_AMT=_CUR.FRT_AMT OR FRT_AMT=_CUR.FRT_AMT THEN GOTO *NEXT ELSE IF _ORIG.FRT_AMT=FRT_AMT THEN _CHG2$=_CHG2$+SEP+MSG("FRT_AMT")+" = "+STR(_CUR.FRT_AMT),_CHG_VAR$(84,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRT_AMT")+" = "+STR(_CUR.FRT_AMT)
15820 IF _ORIG.LINE_ITEM_DISC_PRCNT=_CUR.LINE_ITEM_DISC_PRCNT OR LINE_ITEM_DISC_PRCNT=_CUR.LINE_ITEM_DISC_PRCNT THEN GOTO *NEXT ELSE IF _ORIG.LINE_ITEM_DISC_PRCNT=LINE_ITEM_DISC_PRCNT THEN _CHG2$=_CHG2$+SEP+MSG("LINE_I_D_P")+" = "+STR(_CUR.LINE_ITEM_DISC_PRCNT),_CHG_VAR$(85,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_I_D_P")+" = "+STR(_CUR.LINE_ITEM_DISC_PRCNT)
15830 IF _ORIG.FRT_FROM_LOTS=_CUR.FRT_FROM_LOTS OR FRT_FROM_LOTS=_CUR.FRT_FROM_LOTS THEN GOTO *NEXT ELSE IF _ORIG.FRT_FROM_LOTS=FRT_FROM_LOTS THEN _CHG2$=_CHG2$+SEP+MSG("FRT_F_L")+" = "+STR(_CUR.FRT_FROM_LOTS),_CHG_VAR$(86,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FRT_F_L")+" = "+STR(_CUR.FRT_FROM_LOTS)
15840 IF _ORIG.FS1_UNUSED_2=_CUR.FS1_UNUSED_2 OR FS1_UNUSED_2=_CUR.FS1_UNUSED_2 THEN GOTO *NEXT ELSE IF _ORIG.FS1_UNUSED_2=FS1_UNUSED_2 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS1_UNUSED_2),_CHG_VAR$(87,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS1_UNUSED_2)
15850 IF _ORIG.FS1_UNUSED_3=_CUR.FS1_UNUSED_3 OR FS1_UNUSED_3=_CUR.FS1_UNUSED_3 THEN GOTO *NEXT ELSE IF _ORIG.FS1_UNUSED_3=FS1_UNUSED_3 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS1_UNUSED_3),_CHG_VAR$(88,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS1_UNUSED_3)
15860 IF _ORIG.FS1_UNUSED_4=_CUR.FS1_UNUSED_4 OR FS1_UNUSED_4=_CUR.FS1_UNUSED_4 THEN GOTO *NEXT ELSE IF _ORIG.FS1_UNUSED_4=FS1_UNUSED_4 THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS1_UNUSED_4),_CHG_VAR$(89,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+STR(_CUR.FS1_UNUSED_4)
15865 IF _ORIG.DATE_CREATED$=_CUR.DATE_CREATED$ OR DATE_CREATED$=_CUR.DATE_CREATED$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_CREATED$=DATE_CREATED$ THEN _CHG2$=_CHG2$+SEP+MSG("DATE_CRTED")+" = "+_CUR.DATE_CREATED$,_CHG_VAR$(90,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATE_CRTED")+" = "+_CUR.DATE_CREATED$
15870 IF _ORIG.TIME_CREATED$=_CUR.TIME_CREATED$ OR TIME_CREATED$=_CUR.TIME_CREATED$ THEN GOTO *NEXT ELSE IF _ORIG.TIME_CREATED$=TIME_CREATED$ THEN _CHG2$=_CHG2$+SEP+MSG("TIME_CRTED")+" = "+_CUR.TIME_CREATED$,_CHG_VAR$(91,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TIME_CRTED")+" = "+_CUR.TIME_CREATED$
15875 IF _ORIG.FS1_UNUSED_5$=_CUR.FS1_UNUSED_5$ OR FS1_UNUSED_5$=_CUR.FS1_UNUSED_5$ THEN GOTO *NEXT ELSE IF _ORIG.FS1_UNUSED_5$=FS1_UNUSED_5$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.FS1_UNUSED_5$,_CHG_VAR$(92,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.FS1_UNUSED_5$
15880 IF _ORIG.CREDIT_CARD_TYPE$=_CUR.CREDIT_CARD_TYPE$ OR CREDIT_CARD_TYPE$=_CUR.CREDIT_CARD_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.CREDIT_CARD_TYPE$=CREDIT_CARD_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("CC_TYPE")+" = "+_CUR.CREDIT_CARD_TYPE$,_CHG_VAR$(93,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CC_TYPE")+" = "+_CUR.CREDIT_CARD_TYPE$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN NUM_TIMES_PL_PRINTED$=_CUR.NUM_TIMES_PL_PRINTED$
16030 IF _CHG_VAR$(2,1)="Y" THEN BACKGROUND_PROC$=_CUR.BACKGROUND_PROC$
16040 IF _CHG_VAR$(3,1)="Y" THEN MASTER_QUOTE_PART_2$=_CUR.MASTER_QUOTE_PART_2$
16050 IF _CHG_VAR$(4,1)="Y" THEN CUST_DIV$=_CUR.CUST_DIV$
16060 IF _CHG_VAR$(5,1)="Y" THEN CUST_CODE$=_CUR.CUST_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN ORDER_DATE$=_CUR.ORDER_DATE$
16080 IF _CHG_VAR$(7,1)="Y" THEN ORDER_TYPE_2$=_CUR.ORDER_TYPE_2$
16090 IF _CHG_VAR$(8,1)="Y" THEN MASTER_QUOTE_PART_1$=_CUR.MASTER_QUOTE_PART_1$
16100 IF _CHG_VAR$(9,1)="Y" THEN CUST_PO$=_CUR.CUST_PO$
16110 IF _CHG_VAR$(10,1)="Y" THEN WORK_ORDER$=_CUR.WORK_ORDER$
16120 IF _CHG_VAR$(11,1)="Y" THEN WD_TYPE$=_CUR.WD_TYPE$
16130 IF _CHG_VAR$(12,1)="Y" THEN WORK_ORDER_PRINTED$=_CUR.WORK_ORDER_PRINTED$
16140 IF _CHG_VAR$(13,1)="Y" THEN WORK_ORDER_REV_NUM$=_CUR.WORK_ORDER_REV_NUM$
16150 IF _CHG_VAR$(14,1)="Y" THEN ORDER_TYPE_1$=_CUR.ORDER_TYPE_1$
16160 IF _CHG_VAR$(15,1)="Y" THEN BACK_ORDER$=_CUR.BACK_ORDER$
16170 IF _CHG_VAR$(16,1)="Y" THEN PROMOTION_CODE$=_CUR.PROMOTION_CODE$
16180 IF _CHG_VAR$(17,1)="Y" THEN ORDER_ACKNOW_PRINTED$=_CUR.ORDER_ACKNOW_PRINTED$
16190 IF _CHG_VAR$(18,1)="Y" THEN RFQ_TYPE_QUOTATION$=_CUR.RFQ_TYPE_QUOTATION$
16200 IF _CHG_VAR$(19,1)="Y" THEN CONSOLIDATED_PL$=_CUR.CONSOLIDATED_PL$
16210 IF _CHG_VAR$(20,1)="Y" THEN ORDER_TYPE_3$=_CUR.ORDER_TYPE_3$
16220 IF _CHG_VAR$(21,1)="Y" THEN DATE_REQUESTED$=_CUR.DATE_REQUESTED$
16230 IF _CHG_VAR$(22,1)="Y" THEN SO_LETTER_TYPE_CODE$=_CUR.SO_LETTER_TYPE_CODE$
16240 IF _CHG_VAR$(23,1)="Y" THEN PRINT_SHIPPING_ACK$=_CUR.PRINT_SHIPPING_ACK$
16250 IF _CHG_VAR$(24,1)="Y" THEN INV_IN_PROGRESS$=_CUR.INV_IN_PROGRESS$
16260 IF _CHG_VAR$(25,1)="Y" THEN DEPOSIT_CHECK_NUM$=_CUR.DEPOSIT_CHECK_NUM$
16270 IF _CHG_VAR$(26,1)="Y" THEN DEPOSIT_CHECK_DATE$=_CUR.DEPOSIT_CHECK_DATE$
16280 IF _CHG_VAR$(27,1)="Y" THEN STAX_CODE$=_CUR.STAX_CODE$
16290 IF _CHG_VAR$(28,1)="Y" THEN TAXABLE$=_CUR.TAXABLE$
16300 IF _CHG_VAR$(29,1)="Y" THEN TERMS_CODE$=_CUR.TERMS_CODE$
16310 IF _CHG_VAR$(30,1)="Y" THEN CUST_SERV_REP$=_CUR.CUST_SERV_REP$
16320 IF _CHG_VAR$(31,1)="Y" THEN SPER_CODE$=_CUR.SPER_CODE$
16330 IF _CHG_VAR$(32,1)="Y" THEN COMM_CODE$=_CUR.COMM_CODE$
16340 IF _CHG_VAR$(33,1)="Y" THEN OTHER_SPER_1$=_CUR.OTHER_SPER_1$
16350 IF _CHG_VAR$(34,1)="Y" THEN OTHER_SPER_2$=_CUR.OTHER_SPER_2$
16360 IF _CHG_VAR$(35,1)="Y" THEN OTHER_SPER_3$=_CUR.OTHER_SPER_3$
16370 IF _CHG_VAR$(36,1)="Y" THEN OTHER_SPER_4$=_CUR.OTHER_SPER_4$
16380 IF _CHG_VAR$(37,1)="Y" THEN ORDER_DIV$=_CUR.ORDER_DIV$
16390 IF _CHG_VAR$(38,1)="Y" THEN ORDER_NUM$=_CUR.ORDER_NUM$
16400 IF _CHG_VAR$(39,1)="Y" THEN SALES_ORDER_PRINTED$=_CUR.SALES_ORDER_PRINTED$
16410 IF _CHG_VAR$(40,1)="Y" THEN CTN_LBL_PRINTED$=_CUR.CTN_LBL_PRINTED$
16420 IF _CHG_VAR$(41,1)="Y" THEN PACKING_LIST_PRINTD$=_CUR.PACKING_LIST_PRINTD$
16430 IF _CHG_VAR$(42,1)="Y" THEN ORDERED_BY$=_CUR.ORDERED_BY$
16440 IF _CHG_VAR$(43,1)="Y" THEN ORDER_GREETING$=_CUR.ORDER_GREETING$
16450 IF _CHG_VAR$(44,1)="Y" THEN OPER_CODE_1ST$=_CUR.OPER_CODE_1ST$
16460 IF _CHG_VAR$(45,1)="Y" THEN OPER_CODE_LAST_MOD$=_CUR.OPER_CODE_LAST_MOD$
16470 IF _CHG_VAR$(46,1)="Y" THEN DATE_LAST_MODIFIED$=_CUR.DATE_LAST_MODIFIED$
16480 IF _CHG_VAR$(47,1)="Y" THEN AUTO_REQ_TYPE$=_CUR.AUTO_REQ_TYPE$
16490 IF _CHG_VAR$(48,1)="Y" THEN CONSOL_ORDER_TYPE$=_CUR.CONSOL_ORDER_TYPE$
16500 IF _CHG_VAR$(49,1)="Y" THEN QUOTE_FROM_LINES$=_CUR.QUOTE_FROM_LINES$
16510 IF _CHG_VAR$(50,1)="Y" THEN REPEAT_ORDER$=_CUR.REPEAT_ORDER$
16520 IF _CHG_VAR$(51,1)="Y" THEN REPEAT_FROM_ORD$=_CUR.REPEAT_FROM_ORD$
16530 IF _CHG_VAR$(52,1)="Y" THEN EXCLUDE_REBATE$=_CUR.EXCLUDE_REBATE$
16540 IF _CHG_VAR$(53,1)="Y" THEN ON_HOLD$=_CUR.ON_HOLD$
16550 IF _CHG_VAR$(54,1)="Y" THEN GB_GOLD_RUSH$=_CUR.GB_GOLD_RUSH$
16560 IF _CHG_VAR$(55,1)="Y" THEN GB_SAMPLE_ORD$=_CUR.GB_SAMPLE_ORD$
16570 IF _CHG_VAR$(56,1)="Y" THEN GB_USE_REBATE$=_CUR.GB_USE_REBATE$
16580 IF _CHG_VAR$(57,1)="Y" THEN GB_OVERRUNS$=_CUR.GB_OVERRUNS$
16590 IF _CHG_VAR$(58,1)="Y" THEN GB_PROD_DEPT$=_CUR.GB_PROD_DEPT$
16600 IF _CHG_VAR$(59,1)="Y" THEN GB_PL_COPIES$=_CUR.GB_PL_COPIES$
16610 IF _CHG_VAR$(60,1)="Y" THEN GB_IMPRINT_COLOR$=_CUR.GB_IMPRINT_COLOR$
16620 IF _CHG_VAR$(61,1)="Y" THEN GB_SAMPLES_DIST$=_CUR.GB_SAMPLES_DIST$
16630 IF _CHG_VAR$(62,1)="Y" THEN GB_SURE$=_CUR.GB_SURE$
16640 IF _CHG_VAR$(63,1)="Y" THEN SCALE_SEQ_NUM$=_CUR.SCALE_SEQ_NUM$
16650 IF _CHG_VAR$(64,1)="Y" THEN SAMPLE_REBATE_LN$=_CUR.SAMPLE_REBATE_LN$
16660 IF _CHG_VAR$(65,1)="Y" THEN FM2ODH_OPTIONS$=_CUR.FM2ODH_OPTIONS$
16670 IF _CHG_VAR$(66,1)="Y" THEN INV_COST_SEQ$=_CUR.INV_COST_SEQ$
16680 IF _CHG_VAR$(67,1)="Y" THEN INV_COST_PARM$=_CUR.INV_COST_PARM$
16690 IF _CHG_VAR$(68,1)="Y" THEN NO_DELETE$=_CUR.NO_DELETE$
16700 IF _CHG_VAR$(69,1)="Y" THEN BO_FILL_REQ_CHG$=_CUR.BO_FILL_REQ_CHG$
16701 IF _CHG_VAR$(70,1)="Y" THEN CIG_FLAG$=_CUR.CIG_FLAG$
16702 IF _CHG_VAR$(71,1)="Y" THEN FREIGHT_MARKUP_TABLE$=_CUR.FREIGHT_MARKUP_TABLE$
16703 IF _CHG_VAR$(72,1)="Y" THEN ORDER_SOURCE$=_CUR.ORDER_SOURCE$
16704 IF _CHG_VAR$(73,1)="Y" THEN WEBEC_BUYER$=_CUR.WEBEC_BUYER$
16705 IF _CHG_VAR$(74,1)="Y" THEN WEB_SESSION$=_CUR.WEB_SESSION$
16710 IF _CHG_VAR$(75,1)="Y" THEN FS1_UNUSED_1$=_CUR.FS1_UNUSED_1$
16720 IF _CHG_VAR$(76,1)="Y" THEN DEPOSIT_AMT=_CUR.DEPOSIT_AMT
16730 IF _CHG_VAR$(77,1)="Y" THEN SALESMAN_1_PCT_SALE=_CUR.SALESMAN_1_PCT_SALE
16740 IF _CHG_VAR$(78,1)="Y" THEN ALT_SPER_PRCNT_1=_CUR.ALT_SPER_PRCNT_1
16750 IF _CHG_VAR$(79,1)="Y" THEN ALT_SPER_PRCNT_2=_CUR.ALT_SPER_PRCNT_2
16760 IF _CHG_VAR$(80,1)="Y" THEN ALT_SPER_PRCNT_3=_CUR.ALT_SPER_PRCNT_3
16770 IF _CHG_VAR$(81,1)="Y" THEN ALT_SPER_PRCNT_4=_CUR.ALT_SPER_PRCNT_4
16780 IF _CHG_VAR$(82,1)="Y" THEN ORDER_AMT=_CUR.ORDER_AMT
16790 IF _CHG_VAR$(83,1)="Y" THEN ORDER_COST=_CUR.ORDER_COST
16800 IF _CHG_VAR$(84,1)="Y" THEN FRT_AMT=_CUR.FRT_AMT
16810 IF _CHG_VAR$(85,1)="Y" THEN LINE_ITEM_DISC_PRCNT=_CUR.LINE_ITEM_DISC_PRCNT
16820 IF _CHG_VAR$(86,1)="Y" THEN FRT_FROM_LOTS=_CUR.FRT_FROM_LOTS
16830 IF _CHG_VAR$(87,1)="Y" THEN FS1_UNUSED_2=_CUR.FS1_UNUSED_2
16840 IF _CHG_VAR$(88,1)="Y" THEN FS1_UNUSED_3=_CUR.FS1_UNUSED_3
16850 IF _CHG_VAR$(89,1)="Y" THEN FS1_UNUSED_4=_CUR.FS1_UNUSED_4
16860 IF _CHG_VAR$(90,1)="Y" THEN DATE_CREATED$=_CUR.DATE_CREATED$
16870 IF _CHG_VAR$(91,1)="Y" THEN TIME_CREATED$=_CUR.TIME_CREATED$
16880 IF _CHG_VAR$(92,1)="Y" THEN FS1_UNUSED_5$=_CUR.FS1_UNUSED_5$
16890 IF _CHG_VAR$(93,1)="Y" THEN CREDIT_CARD_TYPE$=_CUR.CREDIT_CARD_TYPE$
16990 RETURN 
18000 CLEAR_KEY:! SSP210521
18010 _KEY$=""
18090 RETURN 
20000 ! ^20000,5 Default values for new order
20005 DEFAULT_FIELDS:
20010 DIM DEFAULT$:IOL=OE_DEFAULTS_IOL
20015 READ (Z[13],KEY=PAD(%X3_OP_ID$,8)+"FD",DOM=*NEXT,REC=DEFAULT$)IOL=OE_DEFAULTS_IOL
20020 ORDER_DATE$=DEFAULT.ORDER_DATE$
20025 IF NUL(ORDER_DATE$) THEN ORDER_DATE$=TBL(SGN(POS(" "<>%X3_TODAY$)),%X3_MACH_DATE$,%X3_TODAY$) ! if %x3_today <> blank use it else use %x3_mach_date
20030 IF %OP_PARM$(273,1)="Y" THEN IF %OP_PARM$(274,1)="Y" OR %OP_PARM$(274,1)="A" THEN REPEAT_ORDER$="Y"
20031 IF %OP_PARM$(273,1)="Y" THEN IF %OP_PARM$(274,1)="O" THEN REPEAT_ORDER$="O" ! SSP# 210352
20032 SWITCH DEFAULT.ORDER_TYPE$
20033 CASE "b"; ORDER_TYPE_1$=" ",ORDER_TYPE_3$=" "; BREAK ! Sales/Factory order
20034 CASE "R"; ORDER_TYPE_1$="R",ORDER_TYPE_3$=" "; BREAK ! Release
20035 CASE "W"; ORDER_TYPE_1$="W"; ORDER_TYPE_3$=" "; BREAK ! Warehouse release
20036 CASE "B"; ORDER_TYPE_1$=" "; ORDER_TYPE_3$="B"; BREAK ! Bill as shipped
20037 END SWITCH 
20040 IF MID(%OP_PARM$,157,1)="Y" THEN ORDER_ACKNOW_PRINTED$="A"
20045 IF MID(%OP_PARM$,280,1)="Y" THEN INV_COST_PARM$="Y"
20048 IF DEFAULT.ORDER_TYPE$="b" THEN IF MID(SMP_PARM$,9,1)="Y" THEN CIG_FLAG$="Y" ! SSP 247589
20050 CUST_SERV_REP$=DEFAULT.CUST_SERV_REP$
20055 ALLOW_ORDER_TYPE_ENTRY=1
20060 IF POS(ORDER_TYPE_1$="RW")>0 THEN GOSUB DATE_REQ_PROCESS
20090 REFRESH_FLG=1
20095 RETURN 
20097 OE_DEFAULTS_IOL:IOLIST OPERATOR_CODE$:[LEN(8)],KEY_PART$:[LEN(2)],ORDER_DIV$:[LEN(2)],ORDER_DATE$:[LEN(6)],FOB$:[LEN(1)],HOW_TO_SHIP$:[LEN(1)],SHIP_VIA$:[LEN(1)],CUST_SERV_REP$:[LEN(4)],ORDER_TYPE$:[LEN(1)]
20099 ! 
20100 ! ^100,5 Default values on folder 1 panel
20105 FOLDER_2:
20110 IF ARG_2$="NEW" THEN {
20115 _FIRST_TAB=INPUT_TYPE_3.CTL,ORDER_TYPE_ENTRY_ALLOWED=1
20120 IF CHK_SB$="Y" THEN SBILL$=""; CALL "UPDFS1;CHECK_SUMM_BILL",Z[4],CUST_DIV$+CUST_CODE$,ORDER_TYPE_1$,ORDER_TYPE_3$,SBILL$; SUMMARY_BILL$=SBILL$; REFRESH_FLG=1 ! WO 255959                            
20135  } ELSE {
20140 ORDER_TYPE_ENTRY_ALLOWED=0
20141 _FIRST_TAB=QUOTE_FROM_LINES.CTL
20145  }
20150 _LAST_TAB=FREIGHT_MARKUP_TABLE.CTL,NEXT_ID=_FIRST_TAB
20155 IF FOLDER_2_NEXT$<>"" THEN NEXT_ID=EVN(FOLDER_2_NEXT$,ERR=*PROCEED); FOLDER_2_NEXT$=""
20160 IF ARG_2$="NEW" THEN IF MID(FMP$,25,1)="Y" THEN NEXT_ID=CUST_PO.CTL ELSE NEXT_ID=WZ_NEXT.CTL
20170 IF %OP_PARM$(226,1)="Y" AND MID(%OP_SECURITY$,88,1)="Y" AND %OP_PARM$(280,1)="Y" AND ORDER_TYPE_3$="B" THEN CALL "*wingrp;show",JOB.GRP$; IF ARG_2$<>"NEW" THEN DISABLE CONTROL JOB_COSTING.CTL END_IF ELSE CALL "*wingrp;hide",JOB.GRP$ ! SSP 239965. SSP275196, only if NEW
20195 RETURN 
20200 ! ^100,5 Default based on customer entered
20205 CUSTOMER_DEFAULTS:
20206 IF STP(CUSTOMER$,3)<>"" THEN CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$ ELSE CMD$="END"; RETURN 
20207 IF CUSTOMER_DEFAULTS_DONE$<>"Y" THEN CUSTOMER_DEFAULTS_DONE$="Y" ELSE RETURN 
20208 IF CUST_DIV$<>ORDER_DIV$ THEN MSGBOX MSG("FMGODB_32"),MSG("MB_ATTN"),"OK"; CUSTOMER$=""; CUST_DIV$=""; CUST_CODE$=""; NEXT_ID=CUSTOMER.CTL; REFRESH_FLG=1; RETURN 
20209 ORDER_NUM_INVALID=0; GOSUB CHECK_ORD_HIST; IF ORDER_NUM_INVALID THEN GOTO DELETE_REC
20210 FIND (Z[2],KEY=CUST_DIV$+CUST_CODE$,ERR=*NEXT,REC=AR1$)
20215 IF ARG_2$="MODIFY" THEN GOTO 20270
20220 STAX_CODE$=AR1.STAX_CODE$,TERMS_CODE$=AR1.TERMS_CODE$; IF AR1.TAX_EXEMPT$="Y" THEN TAXABLE$="N" ELSE TAXABLE$="Y"
20221 GOSUB SET_STAX_RATE; GOSUB LOAD_CREDIT_CARD
20225 SPER_CODE$=AR1.SPER_CODE$,OTHER_SPER_1$=AR1.SPER_CODE_2$,OTHER_SPER_2$=AR1.SPER_CODE_3$,OTHER_SPER_3$=AR1.SPER_CODE_4$,OTHER_SPER_4$=AR1.SPER_CODE_5$
20227 DIM AR3$:CPL(%AR3_IOL$); FIND (Z[5],KEY=SPER_CODE$,ERR=*NEXT,REC=AR3$); IF NOT(NUL(AR3.COMM_CODE$)) THEN COMM_CODE$=AR3.COMM_CODE$
20228 IF %AR1_PARM$(68,1)="Y" AND STP(AR1.SIC_CODE$)<>"" THEN COMM_CODE$=AR1.SIC_CODE$ ! SSP 223856
20230 ORDERED_BY$=AR1.PURCH_AGENT$,ORDER_GREETING$=AR1.CUST_GREETING$
20235 SALESMAN_1_PCT_SALE=AR1.SPER_COMM_SPLIT_1,ALT_SPER_PRCNT_1=AR1.SPER_COMM_SPLIT_2,ALT_SPER_PRCNT_2=AR1.SPER_COMM_SPLIT_3,ALT_SPER_PRCNT_3=AR1.SPER_COMM_SPLIT_4,ALT_SPER_PRCNT_4=AR1.SPER_COMM_SPLIT_5
20240 IF %OP_PARM$(155,1)="Y" THEN LINE_ITEM_DISC_PRCNT=NUM(AR1.CUST_PRICE_CATEGORY$,ERR=*NEXT)
20245 IF %MSLC THEN GOSUB MULTI_COMM_SETUP; CALL "ARGSCM;DEFAULT_HEADER_SETUP",SC_TYPE$,SC_KEY1$,SC_KEY2$,SC_LINE$,MCCDE${ALL},MCSPLT{ALL},MCOMM${ALL},SC_KEY2$,"","","" ! SSP 225300
20250 DIM FMP$(243),FMP[3]; FIND (Z[4],KEY="D"+CUST_DIV$+CUST_CODE$,ERR=*NEXT)FMP$,FMP[0],FMP[1],FMP[2],FMP[3]
20255 IF (%OP_PARM$(160,1)="A" OR %OP_PARM$(160,1)="S") AND FMP$(66,1)="Y" THEN CONSOLIDATED_PL$="Y"
20257 GOSUB LOAD_CONTRACT_NUM ! [SSP-200893]
20260 IF %OP_PARM$(248,1)<>"Y" AND FMP$(27,1)="Y" THEN PRINT_SHIPPING_ACK$="Y"
20262 SO_LETTER_TYPE_CODE$=FMP$(26,1)
20265 IF STP(CUST_SERV_REP$,3)="" THEN CUST_SERV_REP$=SPER_CODE$
20270 BILL_TO_ADDR_1$=AR1.CUST_ADDR_1$; BILL_TO_ADDR_2$=AR1.CUST_ADDR_2$; BILL_TO_CITY$=AR1.CUST_CITY$; BILL_TO_ST$=AR1.CUST_ST$; BILL_TO_ZIP_CODE$=AR1.CUST_ZIP_CODE$; BILL_TO_PHONE$=AR1.CUST_PHONE$
20280 GOSUB DEFAULT_FREIGHT_MARKUP
20390 GOSUB NUM_TO_STR; REFRESH_FLG=1
20391 SHOW CONTROL WZ_NEXT.CTL; CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Disable",CUST_NUM.GRP$
20392 IF FOLDER_ID$="FMGODA.1" THEN SHOW CONTROL WZ_FINISH1.CTL ELSE HIDE CONTROL CONTROL_WZ_FINISH1.CTL
20393 IF MID(AR2_REC$,57,1)="Y" AND NUL(CREDIT_CARD_TYPE$) THEN NEXT_ID=CUST_PO.CTL ELSE NEXT_ID=CUST_PO.CTL ! SSP219116 jdf
20394 REFRESH_FLG=1; PERFORM "*winproc;refresh_scrn"
20395 GOSUB CHECK_AR_MESSAGE
20396 CREDIT_CHECK:CALL "ARGCHK",CUST_DIV$+CUST_CODE$,ORDER_DIV$+ORDER_NUM$,0,RET_VAL; IF RET_VAL=1 THEN %CREDIT_CHECK_KEY$=""; GOSUB DELETE_REC; GOTO CREDIT_CHECK ! if denied, but they cancel the delete, then check again, clear global credit check key to insure check will be done again
20397 ! GOSUB PROCESS_REPEAT_ORDER
20398 IF RET_VAL=2 THEN CRDT_SUSPEND_PL$="Y" ! SSP246794 jdf
20399 RETURN 
20400 WIZARD_BACK:! They hit the back button in wizard mode
20450 SWITCH FOLDER_ID$
20455 CASE "FMGODA.1"; CMD_STR$="E",ARG_3$="DELETE"; BREAK
20460 CASE "FMGODA.2"; NEXT_FOLDER=FLDR.FMGODA.1.CTL; BREAK
20465 CASE "FMGODA.3"; NEXT_FOLDER=FLDR.FMGODA.2.CTL; HIDE CONTROL WZ_FINISH.CTL; SHOW CONTROL WZ_NEXT.CTL; BREAK
20480 END SWITCH 
20490 RETURN 
20500 WIZARD_NEXT:! They hit the next button in wizard mode
20510 GOSUB VALIDATE_CONTRACT_NUM ! [SSP-200893]
20515 IF VALID_CONTRACT<>0 THEN RETURN ! [SSP-200893]
20520 IF %MSLC THEN IF %DET_MOD$="Y" THEN CCKEY$="O"+ORDER$+CUST_DIV$+CUST_CODE$,CMMSG$=""; CALL "ARGSCM;UPDATE_DETAIL_RECS",CCKEY$,CMMSG$; %DET_MOD$=""; IF CMMSG$="Y" THEN MSGBOX "Existing Detail Lines have been modified to Default Commission Codes - Please Review!",MSG("WARNING") ! SSP 225300
20550 SWITCH FOLDER_ID$
20555 CASE "FMGODA.1"; GOSUB UPDATE_ZIP; CHECK_FLDR_1=1; GOSUB CHECK_REQD_FLDS; IF RECORD_OK THEN NEXT_FOLDER=FLDR.FMGODA.2.CTL END_IF ; REFRESH_FLG=1; BREAK
20560 CASE "FMGODA.2"; CHECK_FLDR_2=1; GOSUB CHECK_REQD_FLDS; IF RECORD_OK THEN NEXT_FOLDER=FLDR.FMGODA.3.CTL,ALLOW_ORDER_TYPE_ENTRY=0 END_IF ; REFRESH_FLG=1; BREAK
20565 CASE "FMGODA.3"; CHECK_FLDR_3=1; GOSUB CHECK_REQD_FLDS; IF RECORD_OK THEN GOSUB WRITE_REC; CMD_STR$="E" ELSE REFRESH_FLG=1 END_IF ; BREAK
20580 END SWITCH 
20590 RETURN 
20600 DEFAULT_CUST_CODE:! Default customer code from %FMGODA_CUST$ and goto to next field
20605 IF NOT(NUL(%CUSTOMER$)) THEN CUSTOMER$=%CUSTOMER$; GOSUB CUSTOMER_DEFAULTS; REFRESH_FLG=1; _FIRST_TAB=BILL_TO_ADDR_1.CTL,NEXT_ID=BILL_TO_ADDR_1.CTL,_FIRST_FIELD=BILL_TO_ADDR_1.CTL; RETURN 
20610 IF NOT(NUL(%FMGODA_CUST$)) THEN CUSTOMER$=%FMGODA_CUST$; GOSUB CUSTOMER_DEFAULTS; REFRESH_FLG=1; _FIRST_TAB=BILL_TO_ADDR_1.CTL,NEXT_ID=BILL_TO_ADDR_1.CTL,_FIRST_FIELD=BILL_TO_ADDR_1.CTL
20695 RETURN 
20699 ! 
20700 CHECK_AR_MESSAGE:! ^100,5 - Check for customer entry in _AS5
20705 LOCAL X$
20710 DIM AS5$:CPL(%AS5_IOL$); FIND (Z[3],KEY=CUST_DIV$+CUST_CODE$,DOM=*RETURN,REC=AS5$)
20715 IF STP(AS5.CUST_OE_MESSAGE_1$+AS5.CUST_OE_MESSAGE_2$+AS5.CUST_OE_MESSAGE_3$,2)="" THEN RETURN 
20720 X$=STP(AS5.CUST_OE_MESSAGE_1$,2)+SEP+STP(AS5.CUST_OE_MESSAGE_2$,2)+SEP+STP(AS5.CUST_OE_MESSAGE_3$)
20725 MSGBOX X$,MSG("IMP_MSG"),""
20730 RETURN 
20735 ! 
20800 WIZARD_FINISH1:
20802 IF ARG_2$="NEW" AND CHK_SB$="Y" THEN SBILL$=""; CALL "UPDFS1;CHECK_SUMM_BILL",Z[4],CUST_DIV$+CUST_CODE$,ORDER_TYPE_1$,ORDER_TYPE_3$,SBILL$; SUMMARY_BILL$=SBILL$ ! WO 255959                       
20804 ! GOSUB DEFAULT_FREIGHT_MARKUP ! SSP247833 jdf
20805 GOSUB VALIDATE_CONTRACT_NUM ! [SSP-200893]
20806 IF VALID_CONTRACT<>0 THEN RETURN ! [SSP-200893]
20810 GOSUB UPDATE_ZIP; CHECK_FLDR_1=1; GOSUB CHECK_REQD_FLDS; IF NOT(RECORD_OK) THEN GOTO *RETURN
20820 CHECK_FLDR_2=1; GOSUB CHECK_REQD_FLDS; IF NOT(RECORD_OK) THEN GOTO *RETURN
20830 CHECK_FLDR_3=1; GOSUB CHECK_REQD_FLDS; IF RECORD_OK THEN GOSUB WRITE_REC; CMD_STR$="E"
20990 RETURN 
21000 LOOKUP_ZIP:! Lookup zipcode, set city & state if found, set NEW_ZIP for later use
21005 NEW_ZIP=0
21010 CALL "ZYGMBA;CHECK_ZIP",BILL_TO_ZIP_CODE$,ZIP_FOUND,ZIP_CITY$,ZIP_ST$,"",ZIP_AREA_CODE$,""
21015 IF BILL_TO_PHONE$="" THEN DIM BILL_TO_PHONE$(14)
21020 IF ZIP_FOUND THEN BILL_TO_CITY$=ZIP_CITY$,BILL_TO_ST$=ZIP_ST$; IF STP(MID(BILL_TO_PHONE$,1,3))="" THEN BILL_TO_PHONE$(1,3)=ZIP_AREA_CODE$; END_IF ; REFRESH_FLG=1,NEXT_ID=BILL_TO_PHONE.CTL ELSE NEW_ZIP=1 ! SSP247904 jdf
21095 RETURN 
21099 ! 
21100 UPDATE_ZIP:! If new_zip then update the zip code table
21105 IF BILL_TO_PHONE$="" THEN DIM BILL_TO_PHONE$(14); REM "SSP#208217
21110 IF NEW_ZIP THEN CALL "ZYGMBA;UPDATE_ZIP",BILL_TO_ZIP_CODE$,BILL_TO_CITY$,BILL_TO_ST$,"",BILL_TO_PHONE$(1,3),BILL_TO_CITY$ ! get area code from phone,long city from regular city
21180 NEW_ZIP=0
21181 RETURN ! SSP215084  jdf
21182 UPDATE_CCARD:! SSP215084 jdf created subroutine
21183 IF CCARD=0 THEN {! SSP215084 jdf added this "if statement"
21185 IF MID(AR2_REC$,57,1)="Y" AND ORDER_TYPE_3$<>"B" THEN {
21186 GOSUB WRITE_BILL_TO_ADDRESS ! PROCESS "ECGMAD","../ECG/EC.EN",ORDER$ ! SSP230634 jdf SSP 229993
21187 IF NUL(%CUSTOMER$) THEN %CUSTOMER$=CUST_DIV$+CUST_CODE$ END_IF ; IF FN%HAS_MODULE("CV") THEN PROCESS "CVGMAD","../CVG/CV.EN",ORDER$ ELSE PROCESS "ECGMAD","../ECG/EC.EN",ORDER$ ! SSP230634 jdf SSP 229993
21189 IF MID(%OP_PARM$,315,1)="Y" THEN GOSUB CHECK_EDD; IF NOT(EDD_OK) THEN MSGBOX MSG("FMGODA_33"),MSG("MB_ATTN"),"OK"; CCARD=0; GOTO 21183 ! SSP295969, if force entry of CC info activated then if no EDD record or missing data then go through routine again
21191 CCARD=1 ! SSP 229993 SSP295969
21192  } ! SSP295969, was line 21189
21193  } ! SSP295969, was line 21190
21195 RETURN 
21199 ! 
21200 SET_OP_PARM:
21210 IF %OP_PARM$(148,1)="Y" THEN PROMO_CODE$="Y"
21215 IF %OP_PARM$(265,1)="Y" THEN QUOTE_LINE$="Y"
21220 IF %OP_PARM$(273,1)="Y" AND %OP_PARM$(274,1)<>"A" THEN USE_REPEAT$="Y"
21222 IF %OP_PARM$(273,1)="Y" THEN USE_REPEAT_COMMENT$="Y"
21225 IF %OP_PARM$(299,1)="Y" THEN USE_FREIGHT_MARKUP$="Y"
21230 IF %OP_PARM$(155,1)="Y" THEN USE_LID$="Y"
21235 IF %OP_PARM$(226,1)="Y" THEN USE_TYPE$="Y"
21240 IF %OP_PARM$(248,1)<>"Y" THEN USE_SA$="Y"
21245 IF %OP_PARM$(247,1)<>"Y" THEN USE_SL$="Y"
21250 IF %OP_PARM$(159,1)="Y" THEN USE_QSA$="Y",%USE_FE5=0,%MASTER_QUOTE_QRY$="QRY_QSA.1,../QSG/QS.EN" ELSE USE_QSA$="N",%USE_FE5=1,%MASTER_QUOTE_QRY$="QRY_FE5,../FEG/FE.EN" ! ssp 193332
21255 IF %OP_PARM$(265,1)="Y" THEN USE_QUOTE$="N" ELSE USE_QUOTE$="Y"
21260 IF %OP_PARM$(226,1)="Y" THEN ALLOW_BILL_AS_SHIPPED=1
21265 IF %OP_PARM$(22,1)="Y" THEN WORK_ORDER_SYSTEM$="Y"
21270 IF %OP_PARM$(197,1)="Y" THEN OP_PARM_197$="Y",TERMS_QRY$="" ELSE TERMS_QRY$="QRY_AR2,../ARG/AR.EN" ! ssp 193332
21272 IF %OP_SECURITY$(65,1)="Y" THEN NO_TERMS_ENTRY$="Y"
21274 IF %AR1_PARM$(7,1)<>"Y" THEN NO_COMMISSIONS=1
21276 IF %OP_SECURITY$(33,1)="Y" THEN NO_COMMISSION_ENTRY=1
21278 IF %OP_SECURITY$(84,1)="Y" THEN NO_COMM_CODE_ENTRY=1
21279 RESTRICT_SLSP=0; IF MID(%OP_SECURITY$,169,1)="Y" THEN RESTRICT_SLSP=1 ! WO 274987
21280 SPS_ON_ORDER=1; SPS_ON_ORDER=NUM(%AR1_PARM$(8,1))
21282 CHK_SB$="N"; IF MID(%OP_PARM$,334,1)="Y" THEN CHK_SB$="Y" ! WO 255959
21295 RETURN 
21299 ! 
21300 SO_LETTER_VAL:ENTER FIELD$,ERR_MSG$,VAR_TAG$,ERR=*NEXT
21305 _ZY3=HFN,_FILE_NAME$="ZY3"+%C$; OPEN (_ZY3,ERR=OPEN_ERR)_FILE_NAME$
21310 IF STP(FIELD$,3)="" THEN GOTO SO_LETTER_VAL_END
21315 DIM O9$(12); O9$(1)="ORDER",O9$=O9$+FIELD$
21320 READ (_ZY3,KEY=O9$,DOM=*NEXT)
21325 K$=KEY(_ZY3,END=21335)
21330 IF K$(1,13)=O9$ THEN GOTO SO_LETTER_VAL_END
21335 ERR_MSG$="Invalid Sales Order Letter Type"
21340 SO_LETTER_VAL_END:CLOSE (_ZY3); EXIT 
21345 ! 
21400 SET_STAX_RATE:! set sale tax rate from sales tax code
21405 DIM AR5$:CPL(%AR5_IOL$)
21410 FIND (Z[6],KEY=STAX_CODE$,DOM=*NEXT,REC=AR5$)
21420 STAX_RATE$=STR(AR5.STAX_RATE+AR5.STATE_TAX_IF_OTHER+AR5.COUNTY_TAX_IF_OTHER:"#0.00#%")
21495 RETURN 
21499 ! 
21500 CHECK_CUST_PO:! Check Customer P/O entered against constraints
21505 VALID_CUST_PO=1
21510 IF MID(FMP$,25,1)="Y" THEN IF NUL(CUST_PO$) THEN MSGBOX MSG("FMGODA_16"),MSG("WARNING"),"!,OK"; VALID_CUST_PO=0; GOTO CHECK_CUST_PO_END
21520 IF MID(FMP$,23,1)="Y" THEN {! make sure P/O is unique
21525 DUP_ORDER$=""
21530 ! Check ASC for duplicates
21535 READ (Z[7],KEY=CUST_DIV$+CUST_CODE$+CUST_PO$,REC=TMPP$,DOM=*NEXT)
21540 K7$=KEY(Z[7],END=*NEXT); IF MID(K7$,1,25)=PAD(CUST_DIV$+CUST_CODE$+CUST_PO$,25,1) THEN IF MID(K7$,37,8)=ORDER_DIV$+ORDER_NUM$ THEN READ (Z[7],REC=TMPP$,END=*NEXT); GOTO *SAME ELSE DUP_ORDER$=MID(K7$,37,8)
21545 ! IF ASC OK then check FSO for duplicates
21550 IF NUL(DUP_ORDER$) THEN {
21560 READ (Z[8],KEY=CUST_DIV$+CUST_CODE$+CUST_PO$,REC=TMPP$,DOM=*NEXT)
21565 K8$=KEY(Z[8],END=*NEXT); IF MID(K8$,1,25)=PAD(CUST_DIV$+CUST_CODE$+CUST_PO$,25,1) THEN IF MID(K8$,26,8)=ORDER_DIV$+ORDER_NUM$ THEN READ (Z[8],REC=TMPP$,END=*NEXT); GOTO *SAME ELSE DUP_ORDER$=MID(K7$,26,8)
21570  }
21575 IF NOT(NUL(DUP_ORDER$)) THEN MSGBOX MSG("FMGODA_17",CUST_PO$,FN%ZZDISP$(DUP_ORDER$,"O/P")),MSG("WARNING"),"!,OK"; VALID_CUST_PO=0,CUST_PO$="",REFRESH_FLG=1
21580  }
21585 CHECK_CUST_PO_END:
21590 IF NOT(VALID_CUST_PO) THEN NEXT_ID=CUST_PO.CTL,FOLDER_2_NEXT$="CUST_PO.CTL"
21595 RETURN 
21599 ! 
21600 PROCESS_REPEAT_ORDER:! IF given REPEAT_ORDER, Setup order
21605 REP_ORD$=""; IF ARG_2$="NEW" AND %OP_PARM$(273,1)="Y" THEN PROCESS "FMGODA.R","",REP_ORD$
21610 IF NOT(NUL(REP_ORD$)) THEN {
21615 RO_CMD$=REP_ORD$+ORDER_DIV$+ORDER_NUM$; IF %OP_PARM$(274,1)="A" THEN RO_CMD$+="Y" ELSE RO_CMD$+="N"; MSGBOX MSG("FMGODA_20",FN%ZZDISP$(ORDER_DIV$+ORDER_NUM$,"O/P")),_MSG_JUST_CHECK$,"?,YESNO",_X$; IF _X$="YES" THEN RO_CMD$(17,1)="Y" ELSE RO_CMD$(17,1)="N"
21617 DIM TMP[1]
21618 IF _X$<>"NO" THEN PROCESS "FMGODA.2.C","../OPG/OP.EN",REPEAT_ORD_COMMENT$; GOSUB REPEAT_COMMENT ! SSP 193030, SSP 195934
21620 CALL "FM2ODE",%X3$,2,RO_CMD$,TMP{ALL},X4$
21622 IF %BT_EXIT$="BUTTON_3" THEN %BT_EXIT$=""; GOTO 21695 ! SSP194940 jdf
21625 ! CALL "FMGODA;DO_LOT",ORDER_DIV$+ORDER_NUM$ ! SSP 181454 !SSP#236442 Selecting the lots has been moved to FM2ODE
21670 CHANGE_FLG=0,_CURKEY=1; GOSUB FIND_NOW ! reload FS1 record
21685 REPEAT_FROM_ORDER$=REP_ORD$,ARG_3$="REPEAT ORDER"
21688 CHECK_FOLDER_1=1; GOSUB CHECK_REQD_FLDS ! SSP 231757
21690  } ! IF NOT(NUL(rep_Ord$))
21695 RETURN 
21699 ! 
21700 GET_PARMS:! get parameters
21725 %OP_PARM$=""; FIND (Z[13],KEY=%X3_COMP$+"F/M",DOM=*PROCEED)%OP_PARM$; IF NUL(%OP_PARM$) THEN MSGBOX MSG("FMGODA_2"),MSG(ERR),"!"; CMD_STR$="END",ARG_3$="CANCEL"; RETURN 
21728 DIM %IC_PARM$(200); FIND (Z[13],KEY=%X3_COMP$+"I/C",DOM=*NEXT)%IC_PARM$
21730 %AR1_PARM$=""; FIND (Z[13],KEY=%X3_COMP$+"AR1",DOM=*PROCEED)%AR1_PARM$; IF NUL(%AR1_PARM$) THEN MSGBOX MSG("FMGODA_19"),MSG(ERR),"!"; CMD_STR$="END",ARG_3$="CANCEL"; RETURN 
21735 %AR_PARM$=""; FIND (Z[13],KEY=%X3_COMP$+"A/R",DOM=*PROCEED)%AR_PARM$; IF NUL(%AR_PARM$) THEN MSGBOX MSG("FMGODA_28"),MSG(ERR),"!"; CMD_STR$="END",ARG_3$="CANCEL"; RETURN 
21739 XP=PRM('XI'); SET_PARAM 'XI'
21740 DIM SMP_PARM$(50); CALL "ZZ2PRP","SP",RESULT$,TF_DATE$; IF RESULT$="Y" THEN CIG_PLUS$="Y"; READ (Z[13],KEY=X3$(9,3)+"SMP",DOM=*NEXT)SMP_PARM$ ELSE CIG_PLUS$="N"; REM "SSP144414
21741 SET_PARAM 'XI'=XP
21745 DIM %OP_SECURITY$(255); READ (Z[13],KEY="osec"+%X3_OP_ID$,DOM=*NEXT)%OP_SECURITY$
21790 GOSUB SET_OP_PARM
21795 RETURN 
21799 ! 
21800 CHECK_DATE_REQ:! Check date requested if needed
21810 VALID_DATE_REQ=1
21815 IF NUL(DATE_REQUESTED$) AND MID(%OP_PARM$,170,1)="Y" THEN {
21820 GOTO *NEXT ! If date req is blank and params allow that, then just go on
21825  } ELSE {
21830 IF DATE_REQUESTED$<ORDER_DATE$ THEN MSGBOX MSG("FMGODA_21",TBL(NUL(DATE_REQUESTED$),FN%FMT_TFDATE$(DATE_REQUESTED$,MSG("STD_DATE")),MSG("FMGODA_24")),FN%FMT_TFDATE$(ORDER_DATE$,MSG("STD_DATE"))),MSG("MB_ATTN"),"!"; NEXT_ID=DATE_REQUESTED.CTL,FOLDER_2_NEXT$="DATE_REQUESTED.CTL",VALID_DATE_REQ=0
21835  }
21895 RETURN 
21899 ! 
21900 ! ^ 100 Calculate total from the string numeric values
21905 DEF FN_CALC_TOTAL=VIN("SALESMAN_1_PCT_SALE")+VIN("ALT_SPER_PRCNT_1")+VIN("ALT_SPER_PRCNT_2")+VIN("ALT_SPER_PRCNT_3")+VIN("ALT_SPER_PRCNT_4")
21915 ! 
21950 ! ^50 Freight Markup Table defaulting
21955 DEFAULT_FREIGHT_MARKUP:
21956 IF ARG_2$<>"NEW" THEN RETURN 
21960 IF NOT(NUL(FMP$)) AND NUL(FREIGHT_MARKUP_TABLE$) THEN IF NOT(NUL(FMP$(50,2))) THEN FREIGHT_MARKUP_TABLE$=FMP$(50,2) ELSE IF NOT(NUL(FMP$(93,2))) THEN FREIGHT_MARKUP_TABLE$=FMP$(93,2)
21965 ! IF FMP$(50,2)<>DIM(2) AND POS(ORDER_TYPE_1$="RW",1)=0 THEN GOTO 21970; REM SSP 200110 if there is something in 50,2, use that and don't check the order type!SSP#225507   Always replace if other flds not blank
21966 FREIGHT_MARKUP_TABLE$=MID(FMP$,50,2); REM 200110
21967 IF ORDER_TYPE_1$="W" AND MID(FMP$,97,2)<>DIM(2) THEN FREIGHT_MARKUP_TABLE$=MID(FMP$,97,2); REM SSP 200110
21968 IF ORDER_TYPE_1$="R" AND MID(FMP$,95,2)<>DIM(2) THEN FREIGHT_MARKUP_TABLE$=MID(FMP$,95,2); REM SSP 200110
21969 IF ORDER_TYPE_1$=" " AND MID(FMP$,93,2)<>DIM(2) THEN FREIGHT_MARKUP_TABLE$=MID(FMP$,93,2); REM SSP 200110
21970 REFRESH_FLG=1
21995 RETURN 
21999 ! 
22000 LOAD_CREDIT_CARD:! Load credit card drop box
22005 IF %AR_PARM$(130,1)<>"Y" OR ORDER_TYPE_3$="B" THEN RETURN ! Credit cards not enabled
22010 FIND (Z[10],KEY=TERMS_CODE$,DOM=*RETURN)AR2_REC$
22015 IF MID(AR2_REC$,57,1)<>"Y" THEN DO_CREDIT_CARD_DB=0,DO_CREDIT_CARD_TYPE=0,CREDIT_CARD_TYPE$=DIM(4); RETURN ! this terms code does not support credit cards
22017 IF %OP_PARM$(197,1)="Y" THEN DO_CREDIT_CARD_TYPE=1,DO_CREDIT_CARD_DB=0,REFRESH_FLG=1; RETURN ELSE DO_CREDIT_CARD_DB=1,DO_CREDIT_CARD_TYPE=0
22018 IF DO_CREDIT_CARD_DB THEN CALL "*WINGRP;SHOW",CREDIT_CARD_DB.GRP$ ELSE CALL "*WINGRP;SHOW",CREDIT_CARD.GRP$
22019 IF ID$="CREDIT_CARD_TYPE_DB" THEN GOTO 22090 ! SSP 228428
22020 DROP_BOX WRITE CREDIT_CARD_TYPE_DB.CTL,""; CCT=0
22021 DFLT_CC$=""; IF FN%HAS_MODULE("CV") THEN CALL "CVGMAD;GET_FIRST_CC",CUSTOMER$,TYPE_CC$,CC_NUM$,CC_EXP_DAT$,CC_NAME$ ELSE CALL "ECGMAD;GET_FIRST_CC",CUSTOMER$,TYPE_CC$,CC_NUM$,CC_EXP_DAT$,CC_NAME$ ! ssp 230634! SSP 229993
22022 ! FLT_CC$=""; CALL "ECGMAD;GET_FIRST_CC",CUSTOMER$,TYPE_CC$,CC_NUM$,CC_EXP_DAT$,CC_NAME$ ! ssp 230634
22025 SELECT *,REC=ASP$ FROM Z[9] BEGIN "" END "z"
22030 DROP_BOX LOAD CREDIT_CARD_TYPE_DB.CTL,++CCT,ASP.CREDIT_CARD_TYPE$+" - "+ASP.TF_DESC$
22035 IF ASP.CREDIT_CARD_TYPE$=CREDIT_CARD_TYPE$ THEN DROP_BOX WRITE CREDIT_CARD_TYPE_DB.CTL,CCT
22036 IF ASP.CREDIT_CARD_TYPE$=TYPE_CC$ THEN DFLT_CC$=ASP.CREDIT_CARD_TYPE$+" - "+ASP.TF_DESC$ ! ssp 230634
22040 NEXT RECORD 
22090 REFRESH_FLG=1
22091 IF DFLT_CC$<>"" THEN DROP_BOX WRITE CREDIT_CARD_TYPE_DB.CTL,DFLT_CC$; CREDIT_CARD_TYPE_DB$=DFLT_CC$ ! ssp 230634
22095 RETURN 
22099 ! 
22100 SET_QUOTE_TYPE:! set query & file info for quote
22130 IF RFQ_TYPE_QUOTATION$="Y" THEN USE_QSA$="Y",%USE_FE5=0,%MASTER_QUOTE_QRY$="QRY_QSA.1,../QSG/QS.EN" ELSE USE_QSA$="N",%USE_FE5=1,%MASTER_QUOTE_QRY$="QRY_FE5,../FEG/FE.EN" ! ssp 193332
22190 REFRESH_FLG=1
22195 RETURN 
22199 ! 
22200 SET_BILL_TO_ADDRESS: REFRESH_FLG=1 ! set from customer or get from FSV
22205 IF %AR1_PARM$(64,1)="Y" THEN {
22206 DIM FSV$:CPL(%FSV_IOL$)
22210 FIND (Z[11],KEY=ORDER$,DOM=SET_FROM_CUSTOMER)FSV$
22215 SHOW_FSV_NAME=1 ! SSP279581
22220 BILL_TO_ADDR_1$=FSV.BILL_TO_ADDR_1$; BILL_TO_ADDR_2$=FSV.BILL_TO_ADDR_2$; BILL_TO_CITY$=FSV.BILL_TO_CITY$; BILL_TO_ST$=FSV.BILL_TO_ST$; BILL_TO_ZIP_CODE$=FSV.BILL_TO_ZIP_CODE$; BILL_TO_PHONE$=FSV.BILL_TO_PHONE$
22225 BILL_TO_NAME$=FSV.BILL_TO_NAME$ ! SSP279581
22250  } ELSE {
22251 SET_FROM_CUSTOMER:
22255 SHOW_FSV_NAME=0 ! SSP279581
22257 ! DIM AR1$:CPL(%AR1_IOL$)
22258 ! IF ARG_2$="NEW" THEN {! SSP 307334
22260 FIND (Z[2],KEY=CUST_DIV$+CUST_CODE$,ERR=*NEXT,REC=BILL_AR1$) ! SSP 307334
22270 BILL_TO_ADDR_1$=BILL_AR1.CUST_ADDR_1$; BILL_TO_ADDR_2$=BILL_AR1.CUST_ADDR_2$; BILL_TO_CITY$=BILL_AR1.CUST_CITY$; BILL_TO_ST$=BILL_AR1.CUST_ST$; BILL_TO_ZIP_CODE$=BILL_AR1.CUST_ZIP_CODE$; BILL_TO_PHONE$=BILL_AR1.CUST_PHONE$ ! SSP307334
22275 BILL_TO_NAME$=BILL_AR1.CUST_NAME$
22278 ! } ! SSP 307334
22290  }
22295 RETURN 
22299 ! **********************************************************
22300 WRITE_BILL_TO_ADDRESS:! if needed, load fields into FSV & write out
22305 IF %AR1_PARM$(64,1)="Y" THEN {
22310 DIM FSV$:CPL(%FSV_IOL$)
22315 FSV.ORDER_DIV$=ORDER$(1,2); FSV.ORDER_NUM$=ORDER$(3)
22320 FSV.BILL_TO_CUST_DIV$=CUST_DIV$,FSV.BILL_TO_CUST_CODE$=CUST_CODE$
22322 FIND (Z[2],KEY=CUST_DIV$+CUST_CODE$,ERR=*NEXT,REC=AAR1$) ! SSP 307334
22325 IF STP(BILL_TO_NAME$,3)>"" THEN FSV.BILL_TO_NAME$=BILL_TO_NAME$ ELSE FSV.BILL_TO_NAME$=AAR1.CUST_NAME$ ! SSP279581 was using AR1.CUST_NAME$ SSP279711, use AR1.CUST_NAME$ if BILL_TO_NAME$ is blank SSP 307334
22330 FSV.BILL_TO_ADDR_1$=BILL_TO_ADDR_1$,FSV.BILL_TO_ADDR_2$=BILL_TO_ADDR_2$
22335 FSV.BILL_TO_CITY$=BILL_TO_CITY$,FSV.BILL_TO_ST$=BILL_TO_ST$,FSV.BILL_TO_ZIP_CODE$=BILL_TO_ZIP_CODE$,FSV.BILL_TO_PHONE$=BILL_TO_PHONE$
22350 WRITE (Z[11],KEY=ORDER$)FSV$
22390  }
22395 RETURN 
22399 ! ***************************************************
22400 SALES_PERSON_COMM:! This will update the commission code when the first Sales Person is changed.
22430 DIM AR3$:CPL(%AR3_IOL$); FIND (Z[5],KEY=SPER_CODE$,ERR=*NEXT,REC=AR3$); COMM_CODE$=AR3.COMM_CODE$; IF %AR1_PARM$(68,1)="Y" AND STP(AR1.SIC_CODE$)<>"" THEN COMM_CODE$=AR1.SIC_CODE$ ! SSP 191999 SSP 234578
22490 REFRESH_FLG=1
22495 RETURN 
22499 ! *************************************************
22500 DATE_REQ_PROCESS:! Date Required
22510 IF NUL(DATE_REQUESTED$) THEN DATE_REQUESTED$=DEFAULT.ORDER_DATE$ ELSE GOTO 22560 ! SSP#217904
22520 IF POS(%OP_PARM$(301,1)="FS")=0 THEN GOTO 22560; REM " SSP# 154324
22530 CALL "ZZDAYT",DEFAULT.ORDER_DATE$,DAY_NUM
22540 IF %OP_PARM$(301,1)="F" AND DAY_NUM>0 AND DAY_NUM<6 THEN DAYS_TO_ADD=1 ELSE IF %OP_PARM$(301,1)="F" AND DAY_NUM=6 THEN DAYS_TO_ADD=3 ELSE IF %OP_PARM$(301,1)="F" AND DAY_NUM=7 THEN DAYS_TO_ADD=2 ELSE IF %OP_PARM$(301,1)="S" AND DAY_NUM=7 THEN DAYS_TO_ADD=2 ELSE IF %OP_PARM$(301,1)="S" AND DAY_NUM=1 THEN DAYS_TO_ADD=1
22550 CALL "ZZDATE",X3$,"",DEFAULT.ORDER_DATE$,DATE_REQUESTED$,DAYS_TO_ADD,0,0,0,0,0,0,"","",""
22560 DEFAULT.ORDER_DATE$=DATE_REQUESTED$
22595 RETURN 
22599 ! *******************************************
22600 CHECK_EDD:! SSP295969
22610 EDD_OK=0
22615 READ (Z[26],KEY=ORDER$,DOM=*NEXT)
22620 EDD_KEY$=DIM(11)
22625 EDD_KEY$=KEY(Z[26],END=*NEXT)
22630 IF EDD_KEY$(1,8)<>ORDER$ THEN RETURN 
22635 READ (Z[26],KEY=EDD_KEY$)EDD$
22640 IF MID(EDD$,16,20)=DIM(20) OR LEN(EDD$)<100 THEN RETURN 
22645 EDD_OK=1
22690 RETURN 
22695 ! ************************************
23000 ORDER_TYPE_SETUP:! Secondary Order type setup
23010 SWITCH INPUT_TYPE_3$
23020 CASE "b"; ORDER_TYPE_1$=" ",ORDER_TYPE_3$=" "; BREAK ! Sales/Factory order
23030 CASE "R"; ORDER_TYPE_1$="R",ORDER_TYPE_3$=" "; GOSUB DATE_REQ_PROCESS; BREAK ! Release
23040 CASE "W"; ORDER_TYPE_1$="W"; ORDER_TYPE_3$=" "; GOSUB DATE_REQ_PROCESS; BREAK ! Warehouse release
23050 CASE "B"; ORDER_TYPE_1$=" "; ORDER_TYPE_3$="B"; BREAK ! Bill as shipped
23060 END SWITCH 
23070 GOSUB DEFAULT_FREIGHT_MARKUP; REM SSP 200110
23080 IF INPUT_TYPE_3$="b" THEN IF MID(SMP_PARM$,9,1)="Y" THEN CIG_FLAG$="Y" ! SSP 307453
23090 REFRESH_FLG=1
23095 RETURN 
23099 ! **************************************
24000 REMOVE_SUSPENSION:! Check to see if credit limit has been increased, if it has then remove suspension and change the flag in FS1 to "N" ! SSP246794 jdf
24010 IF CRDT_SUSPEND_PL$="Y" THEN { %FMGODA_FLG=1; CALL "ARGCHK",CUST_DIV$+CUST_CODE$,ORDER_DIV$+ORDER_NUM$,0,RET_VAL ! SSP246794 jdf
24020 IF RET_VAL<>1 THEN CRDT_SUSPEND_PL$="N" ! SSP246794 jdf
24030 IF RET_VAL<>1 THEN WRITE (_FIL_NO,KEY=_KEY$) ! SSP246794 jdf
24032  } ! SSP246794 jdf
24035 %FMGODA_FLG=0 ! SSP246794 jdf
24040 RETURN ! SSP246794 jdf
25000 VALIDATE_CONTRACT_NUM:! [200893]-added routine
25010 CONTRACT_NUM$=PAD(CONTRACT_NUM$,20)
25020 IF REQ_CONTRACT$="Y" THEN CONTRACT_DATE$=DIM(6); GOTO *RETURN
25050 IF REQ_CONTRACT$="R" THEN {! 25300
25080 TMP_CUSTOMER$=CUST_DIV$+CUST_CODE$,TMP_CONTRACT$=PAD(CONTRACT_NUM$,20); TMP_CONTRACT_DATE$=PAD(CONTRACT_DATE$,6)
25085 IF %OLD_REC THEN NEW_OE_FLAG$="Y" ELSE NEW_OE_FLAG$="N"
25100 CALL "FM2CON;VALIDATE_CONTRACT_NUM",FTS_LFN,TMP_CUSTOMER$,TMP_CONTRACT$,TMP_CONTRACT_DATE$,HLD_CONTRACT$,NEW_OE_FLAG$,MSG_TEXT$,%X3$(21,6),VALID_CONTRACT ! [SSP-215144]-changed CONTRC to FM2CON
25102 IF VALID_CONTRACT<0 THEN GOSUB INVALID_CONTRACT_NUM; IF NEW_OE_FLAG$="Y" THEN CONTRACT_NUM$=HLD_CONTRACT$ ELSE CONTRACT_NUM$=""
25110 IF VALID_CONTRACT>0 THEN {! duplicate contracts
25115 %TMP_FTS_CONTRACT$=CUST_DIV$+CUST_CODE$+CONTRACT_NUM$
25120 PROCESS "QRY_FTS.D","../OPG/OP.EN",VAL$
25130 IF LEN(STP(VAL$))<>26 THEN {! 3899
25140 NEXT_ID=CONTRACT_NUM.CTL; IF NEW_OE_FLAG$="Y" THEN CONTRACT_NUM$=HLD_CONTRACT$ ELSE CONTRACT_NUM$=""
25150  } ELSE {! 3860
25160 TMP_CUSTOMER$=CUST_DIV$+CUST_CODE$,TMP_CONTRACT$=VAL$(1,20),TMP_CONTRACT_DATE$=VAL$(21,6)
25180 CALL "FM2CON;VALIDATE_CONTRACT_NUM",FTS_LFN,TMP_CUSTOMER$,TMP_CONTRACT$,TMP_CONTRACT_DATE$,HLD_CONTRACT$,NEW_OE_FLAG$,MSG_TEXT$,%X3$(21,6),VALID_CONTRACT ! [SSP-215144]-changed CONTRC to FM2CON
25190 IF VALID_CONTRACT<0 THEN GOSUB INVALID_CONTRACT_NUM; IF NEW_OE_FLAG$="Y" THEN CONTRACT_NUM$=HLD_CONTRACT$ ELSE CONTRACT_NUM$=""
25195  }
25197  } ! 25110
25200 VAL_CONTRACT_DET:
25205 IF VALID_CONTRACT=0 THEN {! contract on file - now verify date, user
25210 CALL "FM2CON;VALIDATE_CONTRACT_DATE",FTS_LFN,TMP_CUSTOMER$,TMP_CONTRACT$,TMP_CONTRACT_DATE$,%X3$(21,6),VALID_CONTRACT,MSG_TEXT$ ! [SSP-215144]-changed CONTRC to FM2CON
25215 ! IF VALID_CONTRACT<0 THEN GOSUB INVALID_CONTRACT_NUM; IF NEW_OE_FLAG$="Y" THEN CONTRACT_NUM$=HLD_CONTRACT$ ELSE CONTRACT_NUM$=""
25220 IF VALID_CONTRACT=0 THEN CALL "FM2CON;VALIDATE_CONTRACT_USER",FTS_LFN,TMP_CUSTOMER$,TMP_CONTRACT$,TMP_CONTRACT_DATE$,%X3$(40,3),VALID_CONTRACT,MSG_TEXT$ ! [SSP-215144]-changed CONTRC to FM2CON
25225 IF VALID_CONTRACT<0 THEN GOSUB INVALID_CONTRACT_NUM; IF NEW_OE_FLAG$="Y" THEN CONTRACT_NUM$=HLD_CONTRACT$ ELSE CONTRACT_NUM$=""
25230 IF VALID_CONTRACT=0 THEN CONTRACT_NUM$=TMP_CONTRACT$,CONTRACT_DATE$=TMP_CONTRACT_DATE$,HLD_CONTRACT$=TMP_CONTRACT$
25280 REFRESH_FLG=1; IF VALID_CONTRACT=0 THEN NEXT_ID=BLANKET_PO.CTL ! WO212768
25285  } ! 25200
25300  } ! 25050
25390 RETURN 
25398 ! 
25399 ! 
25500 VALIDATE_BLANKET_PO:! WO212768
25505 IF STP(BLANKET_PO$,3)="" THEN BLANKET_PO_DATE$=""; GOTO *RETURN
25510 FTU_CUSTOMER$=CUST_DIV$+CUST_CODE$,FTU_BLANKET_PO$=PAD(BLANKET_PO$,20),FTU_BLANKET_PO_DATE$=PAD(BLANKET_PO_DATE$,6),FTU_CONTRACT$=PAD(CONTRACT_NUM$,20),MSG_TEXT$=""
25515 CALL "FM2CON;VALIDATE_BLANKET_PO",X3$,X4$,Z[19],FTU_CUSTOMER$,FTU_BLANKET_PO$,FTU_BLANKET_PO_DATE$,FTU_CONTRACT$,MSG_TEXT$,VALID_BLANKET_PO
25520 IF VALID_BLANKET_PO<>0 THEN MSGBOX MSG_TEXT$,MSG("WARNING"),"!,OK"; NEXT_ID=BLANKET_PO.CTL,BLANKET_PO$="",BLANKET_PO_DATE$="",REFRESH_FLG=1; GOTO *RETURN
25525 BLANKET_PO$=FTU_BLANKET_PO$,BLANKET_PO_DATE$=FTU_BLANKET_PO_DATE$,NEXT_ID=BILL_TO_ADDR_1.CTL,REFRESH_FLG=1; IF STP(CUST_PO$,3)="" THEN CUST_PO$=BLANKET_PO$
25595 RETURN 
25599 ! 
30199 ! *********************************************************
31000 ! Check Order History for Exsistig Order Number
31010 CHECK_ORD_HIST:
31020 KEY_FS6$=CUSTOMER$+ORDER$
31030 READ (Z[12],KNO=2,KEY=KEY_FS6$,DOM=*NEXT)
31040 KEY_FS6$=KEY(Z[12],END=*RETURN); READ (Z[12],KEY=KEY_FS6$,REC=FS6_REC$)
31050 IF KEY_FS6$(1,18)<>CUSTOMER$+ORDER$ THEN RETURN 
31055 IF ARG_2$="MODIFY" THEN ANS$="YES"; GOTO 31070 ! SSP 201060
31060 MSGBOX MSG("FMGODM_33")+SEP+MSG("FMGODM_34")+"?",MSG("WARNING"),"STOP,YesNo",ANS$
31070 IF ANS$="YES" THEN {
31072 READ (Z[12],KNO=0,KEY=KEY_FS6$,DOM=*NEXT)
31074 RETURN  }
31080 ORDER_NUM_INVALID=1
31085 READ (Z[12],KNO=0,KEY=KEY_FS6$,DOM=*NEXT)
31090 REFRESH_FLG=1
31095 RETURN 
31300 ! ***************************
31301 ! ***************************
31305 CHECK_ORDERED_BY:
31320 VALID_ORDERED_BY=1
31340 IF NUL(ORDERED_BY$) AND MID(FMP$,63,1)="Y" THEN {
31360 MSGBOX MSG("REQ_ORD_BY"),MSG("MB_ATTN"),"!"; NEXT_ID=ORDERED_BY.CTL,FOLDER_1_NEXT$="ORDERED_BY.CTL",VALID_ORDERED_BY=0
31380  }
31400 RETURN 
31500 CHECK_CREDIT_CARD_TERM:! SSP219116 jdf
31510 VALID_CREDIT_TERM=1 ! SSP219116 jdf
31520 IF NUL(CREDIT_CARD_TYPE$) AND MID(AR2_REC$,57,1)="Y" THEN {! SSP219116 jdf
31530 MSGBOX MSG("REQ_CC_TYP"),MSG("MB_ATTN"),"!"; NEXT_ID=CREDIT_CARD_TYPE_DB.CTL,FOLDER_1_NEXT$="CREDIT_CARD_TYPE_DB.CTL",VALID_CREDIT_TERM=0 ! SSP219116 jdf
31540  } ! SSP219116 jdf
31550 RETURN ! SSP219116 jdf
32000 ! 32000,10 SSP 181454
32010 DO_LOT:
32011 RETURN ! SSP#236442 selecting the lots for repeats has been moved to FM2ODE
32020 ENTER ORDER$
32030 PERFORM "FMGODB;INIT"
32040 NEED_TO_DO_LOTS=1
32050 READ (Z(1),KEY=ORDER$,DOM=*NEXT)
32060 KEY_FS2$=KEY(Z(1),END=END_LOT); READ (Z(1))
32070 IF ORDER$<>ORDER_DIV$+ORDER_NUM$ THEN GOTO END_LOT
32090 IF POS(LINE_TYPE$="IC")=0 OR NOT(NUL(PO_CODE$)) THEN GOTO 32060 ! SSP 234234 
32100 IF WHSE$=DIM(4) THEN PERFORM "FMGODB;SETUP_WHSE"; WHSE$=DEFAULT_WHSE$
32110 Q0=OPEN_QTY; NEED_TO_DO_LOTS=1; PERFORM "FMGODB;NUM_TO_STR"; PERFORM "FMGODB;DO_LOTS"; PERFORM "FMGODB;STR_TO_NUM"
32120 PERFORM "FMGODB;CALCULATIONS"
32130 WRITE (Z(1),KEY=KEY_FS2$)
32140 GOTO 32060
32150 END_LOT:
32160 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
32170 EXIT 
32500 REPEAT_COMMENT:! SSP 193030
32510 DIM FT7$(120)
32530 READ (Z(14),KEY=CUST_DIV$+CUST_CODE$+ORDER_DIV$+ORDER_NUM$,DOM=*NEXT)FT7$
32540 FT7$(1,10)=CUST_DIV$+CUST_CODE$,FT7$(11,8)=ORDER_DIV$+ORDER_NUM$
32550 FT7$(34,35)=REPEAT_ORD_COMMENT$,FT7$(19,15)=CUST_PO$
32560 WRITE (Z(14),KEY=CUST_DIV$+CUST_CODE$+ORDER_DIV$+ORDER_NUM$)FT7$
32570 RETURN 
33000 DO_CATEGORY:! ssp 182373
33010 ENTER CUST$,CLASS$,Q0,QTY,SELL_PER,PER
33020 FMP=FN%FFN("FMP"+%C$); IF FMP<0 THEN FMP=HFN; OPEN (FMP)"FMP"+%C$ ! [205471]-changed FFN() to FN%FFN()
33030 DIM A(24); FIND (FMP,KEY="P"+CLASS$+CUST$,DOM=NO_FOUND)AA$,A{ALL}
33040 FOR A=1 TO 24 STEP 2
33050 IF QTY<A(A) THEN EXITTO NO_FOUND
33060 Q0=A(A+1)*SELL_PER/PER
33100 NEXT A
33120 NO_FOUND:EXIT 
34000 CHECK_NOTES:! SSP 193123
34010 _ZZO=HFN; OPEN (_ZZO)"ZZO"+%C$
34012 NOTE_CUST$=CUSTOMER$,NOTE_LCUST$=%CUSTOMER$,%CUSTOMER$=%CUST_KEY$,CUSTOMER$=%CUSTOMER$ ! SSP 234111
34020 READ (_ZZO,KEY="003"+%CUSTOMER$+ITEM_CODE$,DOM=*NEXT)
34030 ZZO_KEY$=KEY(_ZZO,END=END_CHECK)
34040 IF MID(ZZO_KEY$,1,23)<>"003"+%CUSTOMER$+ITEM_CODE$ THEN GOTO END_CHECK
34050 %ITEM_CODE$=ITEM_CODE$
34060 IF STP(%CUSTOMER$,2)="" THEN PROCESS "GGNOTE.51","../ZZG/ZZ.EN" ELSE PROCESS "GGNOTE.5","../ZZG/ZZ.EN" ! SSP 234111
34080 END_CHECK: %CUSTOMER$=NOTE_LCUST$,CUSTOMER$=NOTE_CUST$; CLOSE (_ZZO); RETURN ! SSP 234111 
34100 GET_WHRE_1: VV$="0" ! SSP 193558
34110 ENTER DIV$,VAL$
34120 _FM0=HFN; OPEN (_FM0)"FM0"+%C$; ZZP=HFN; OPEN (ZZP)"ZZPARM"; READ (ZZP,KEY=%C$+"A/R",DOM=*NEXT)AR_PARM$
34130 READ (_FM0,KEY="D"+DIM(10)+VV$,DOM=*NEXT)
34140 K_FM0$=KEY(_FM0,END=END_WHE); IF MID(K_FM0$,1,1)<>"D" THEN GOTO 34160
34150 VAL$=K_FM0$(12,4)
34160 GOSUB CHECK_DIV ! ssp 193767
34170 END_WHE:
34180 CLOSE (_FM0)
34190 EXIT 
34200 GET_WHRE_9: VV$="9"; GOTO 34110
34210 CHECK_DIV:
34220 FSH=HFN; OPEN (FSH,IOL=*,ERR=*RETURN)"FSH"+%C$
34230 READ (FSH,KEY=DIV$,DOM=END_DIV)
34240 V$=STP(ALT_ORD_SEQ_10$)
34250 IF STP(V$)<>"" THEN VAL$=VV$+V$
34260 END_DIV:
34270 CLOSE (FSH)
34280 RETURN 
35000 CHECK_PO_VAR:! SSP 198212
35010 PO_CH=FN%FFN("PO1"+%C$); IF PO_CH<0 THEN PO_CH=HFN; OPEN (PO_CH)"PO1"+%C$ ! [205471]-changed FFN() to FN%FFN()
35020 READ (PO_CH,KEY=_KEY$,DOM=*NEXT)
35030 PO1_KEY$=KEY(PO_CH,END=END_CHECK_PO_VAR); READ RECORD (PO_CH)PO1VAR$
35040 IF MID(PO1_KEY$,1,8)<>_KEY$ THEN GOTO END_CHECK_PO_VAR
35050 PO1VAR$(328,15)=CUST_PO$ ! Customer PO#
35060 PO1VAR$(343,4)=SPER_CODE$ ! Salesperson code
35070 PO1VAR$(347,4)=CUST_SERV_REP$ ! Customer Service Rep Code
35080 WRITE RECORD (PO_CH,KEY=PO1_KEY$)PO1VAR$
35090 GOTO 35030
35100 END_CHECK_PO_VAR:RETURN 
35198 ! 
35199 ! 
35200 LOAD_CONTRACT_NUM:! [SSP-200893]-added routine
35210 REQ_CONTRACT$=MID(FMP$,129,1)
35220 IF POS(REQ_CONTRACT$="YR",1)=0 THEN SHOW_CONTRACT_NUMBER=0 ELSE SHOW_CONTRACT_NUMBER=1
35295 RETURN 
35298 ! 
35299 ! 
35500 INVALID_CONTRACT_NUM:! [200893]-added routine
35510 MSG_TITLE$=MSG("CONTMSG_01")
35515 MSG_PARAM$="i,OK"
35520 IF VALID_CONTRACT=-1 THEN MSG_TEXT$=MSG("CONTMSG_02")
35525 IF VALID_CONTRACT=-2 THEN MSG_TEXT$=MSG("CONTMSG_03")
35530 IF VALID_CONTRACT=-3 THEN MSG_TEXT$=MSG("CONTMSG_04")
35535 IF VALID_CONTRACT=-4 THEN MSG_TEXT$=MSG("CONTMSG_05")
35580 MSGBOX MSG_TEXT$,MSG_TITLE$,MSG_PARAM$
35585 CONTRACT_DATE$=""
35590 NEXT_ID=CONTRACT_NUM.CTL
35592 REFRESH_FLG=1
35595 RETURN 
35598 ! 
35600 FTS_QRY:! [200893]-added routine
35602 %TMP_FTS_CUSTOMER$=CUST_DIV$+CUST_CODE$
35604 %TMP_FTS_USER$=%X3$(40,3)
35605 FROM_FTS_QRY=1
35610 PROCESS "QRY_FTS.2","../OPG/OP.EN",VAL$
35615 IF LEN(STP(VAL$))<>26 THEN {! 3899
35617 NEXT_ID=CONTRACT_NUM.CTL; IF NEW_OE_FLAG$="Y" THEN CONTRACT_NUM$=HLD_CONTRACT$ ELSE CONTRACT_NUM$=""
35620  } ELSE {! 3860
35625 CONTRACT_NUM$=VAL$(1,20),CONTRACT_DATE$=VAL$(21,6)
35630 GOSUB VALIDATE_CONTRACT_NUM
35680  }
35685 FROM_FTS_QRY=0,%TMP_FTS_CUSTOMER$="",%TMP_FTS_USER$=""
35695 RETURN 
36020 ! 
36100 FTU_QRY:! WO212768
36105 IF STP(CONTRACT_NUM$,3)="" THEN MSGBOX MSG("FMGODA_32"),MSG("WARNING"),"!,OK"; NEXT_ID=CONTRACT_NUM.CTL; GOTO *RETURN
36110 %CONTRACT$=CONTRACT_NUM$
36120 PROCESS "QRY_FTU.3","../FMG/FM.EN",VAL$
36125 %CONTRACT$=""
36130 IF LEN(STP(VAL$))<>26 THEN NEXT_ID=BLANKET_PO.CTL; BLANKET_PO$=""; GOTO *RETURN
36135 BLANKET_PO$=VAL$(1,20),BLANKET_PO_DATE$=VAL$(21,6)
36140 GOSUB VALIDATE_BLANKET_PO
36195 RETURN 
36199 ! 
37000 MULTI_COMM_MAINT:! SSP 225300
37005 GOSUB MULTI_COMM_SETUP ! SSP 225300
37200 CALL "ARGSCM",X3$,X4$,SC_KEY$,DF_COMM$; COMM_CODE$=DF_COMM$; IF SC_KEY$="MOD" THEN DET_MOD$="Y" ! SSP 225300
37999 RETURN ! SSP 225300
38000 MULTI_COMM_SETUP:! SSP 225300
38010 SC_TYPE$="O",SC_KEY1$=ORDER$,SC_KEY2$=CUST_DIV$+CUST_CODE$,SC_LINE$="000" ! SSP 225300
38011 SC_KEY$=SC_TYPE$+SC_KEY1$+SC_KEY2$+SC_LINE$ ! SSP 225300    
38020 DIM MCCDE$[5]; DIM MCSPLT[5],MCOMM$[10](5," ") ! SALESMAN CODES  SALESMAN SPLIT !SSP 225300
38030 MCCDE$[1]=SPER_CODE$,MCCDE$[2]=OTHER_SPER_1$,MCCDE$[3]=OTHER_SPER_2$,MCCDE$[4]=OTHER_SPER_3$,MCCDE$[5]=OTHER_SPER_4$
38040 MCSPLT[1]=SALESMAN_1_PCT_SALE,MCSPLT[2]=ALT_SPER_PRCNT_1,MCSPLT[3]=ALT_SPER_PRCNT_2,MCSPLT[4]=ALT_SPER_PRCNT_3,MCSPLT[5]=ALT_SPER_PRCNT_4
38050 FOR SLP=1 TO 5; IF STP(MCCDE$[SLP],2)<>"" AND MCSPLT[SLP]>0 THEN MCOMM$[SLP]=COMM_CODE$; END_IF ; NEXT SLP
38100 RETURN 
39200 MCOMM_CHANGE:! SSP 225300
39210 IF NOT(%MSLC) THEN RETURN ! SSP 225300
39220 GOSUB MULTI_COMM_SETUP; CALL "ARGSCM;DEFAULT_HEADER_SETUP",SC_TYPE$,SC_KEY1$,SC_KEY2$,SC_LINE$,MCCDE${ALL},MCSPLT{ALL},MCOMM${ALL},SC_KEY$,"","","" ! SSP 225300   
39225 %DET_MOD$="Y" ! SSP 225300
39250 RETURN 
40000 SEL_CSR_CODE:! SSP#273151
40010 CSR_NOTOK=0; FIND (Z[5],KEY=CUST_SERV_REP$,DOM=*NEXT)CSR_REC$; GOTO *RETURN ! SSP#274714
40020 REFRESH_FLG=1,NEXT_ID=CUST_SERV_REP.CTL,CSR_NOTOK=1
40030 RETURN 
52128 REM "223856-GUI - Order entry lines are not using correct commission    
56000 ! "191445-Order Entry Screen.  Add new option - Enter Repeat Order
56005 ! "181454-Problem with Lot committals in GUI Repeat orders dot not
56010 ! "       automatically commit"
56015 ! "182373- GUI-Pricing tables do not appear to work at all in GUI
56020 ! "193123-GGNOTE Item notes don't display in Order Entry in gui qatst.
56025 ! "193030-Repeat Order query should print the comment from the repeat
56030 ! "       order file ft7"
56035 ! "193558-Getting an error in Order Processing due to an invalid whse
56040 ! "193564-Order number display issue in open order inquiry.
56045 ! "193767-Default warehouse location is not being set for not div
56050 ! "194886-Repeat Order comments not saving
56055 ! "195934-GUI Repeat Order. Repeat Order Comment Box pops up when
56060 ! "       you do not save the new order as repeat."
56065 ! "191999-Customer is setup with a commission code in SIC field.  When
56070 ! "       you change the s/person in order entry, it is changing CC"
56075 ! "198212-In GUI, when you modify the order header for a repeat order
56080 ! "       some of the fields are not being saved."
56085 ! "201060-They are getting a msg in order entry that the order number
56090 ! "       was previously used. Occurs when they modify order header."
56095 REM "200110-System is not pulling the correct frt markup table info
56100 REM "203200-Order 10-133136 - This is a bill as ship order that is
56105 REM "205471-Oracle - FFN usage in tf2g progs. to be replaced by FN%FFN
56110 REM "210352-Notepad disappears in order history
56115 REM "200893-Create New Contract number field in order processing
56116 ! "211838-In sales order, when they all exit out of order entry for an
56118 REM "215144-program CONTRC from ssp 212325 needs to be renamed to an
56120 REM "214286-On Panel FMGODM if you click save and then the exit button
56122 REM "215780-FMGODA - When you get msg that 'Ordered by is required for
56124 REM "212768-Add Blanket PO feature to work with the Contract feature.
56126 REM "219116-We have a brand new issue which caused by the new update we 
56127 REM "225507-Wrong Freight Markup Table is displaying in Order Entry     
56128 REM "227474-Alt+F not working on this screen FMGODA Order Entry         
56129 ! "228428-Issue with credit card order and sequence number.           
56130 REM "194940-Issue with pulling in a repeat order and validating the     
56131 ! "230634-Experienceing issues with the cc name entered in the        
56134 REM "234234-Getting a message "there is no Lot inventory" when you      
56135 REM "231757-      
56136 REM "234111-Modify Custom Item Notes feature to allow for a blank cust  
56137 REM "239665-Getting error when click on item for more info while on     
56138 REM "247589-GUI OE needs to default SMP? to Y if CIG Plus is installed  
56139 REM "255959-Field in Order Header for Summary Bill Y/N which will carry 
56140 REM "273151-Program FMGODA: The CSR field should be a validated         
56142 REM "275196-B-Type bypass Job Costing flag not cleared for next order.  
56143 REM "229993-PCI/PA-DSS New CC Module                                    
56144 REM "279581-WO278444;BT OVR name works ok until order is accessed in GUI
56146 REM "279711-Customer name missing in Sold To of their invoices since    
56148 REM "295969-CC Plus; when OP parameter activated to force the user to   
56149 REM "307334-Commission code change in FMGODA not saving                 
56150 REM "307453-DBD-401: Default order type nt being set correctly in GUI   
