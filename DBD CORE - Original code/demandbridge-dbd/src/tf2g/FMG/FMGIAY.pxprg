0010 ! FMGIAY - User Defined Spec Template Setup
0035 REM "5.7 - 10/19/09 - 7.948333 - jdf - SSP# 233721
0037 REM "233721-Problem with setting up user def specs in GUI vs CHUI       
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "FMGIAY","../OPG/OP.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="FSE"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0182 DIM Z[NUM(%X3$(60,3))] ! SSP233721 jdf
0184 Z$="02O FSF...  " ! SSP233721 jdf
0186 GOSUB 9750 ! SSP233721 jdf
0188 CALL "ZZINFO",Z[2],0,X3$,0,0,0,V9,0,0,0,""; V9=V9-2 ! SSP233721 jdf
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=3
0430 DIM _KEYS$[1:3]; _KEYS$[1]="TEMPLATE_CODE$",_KEYS$[2]="SCREEN_NUM$",_KEYS$[3]="FIELD_NUM$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0700 ! 700 - Set up tabbing between folders
0710 INIT_FOLDER:
0720 GOSUB ENABLE_GROUPS
0730 IF _ENABLE_FLG<>_KEY1 THEN IF TAB_FLG$="<" THEN NEXT_ID=_LAST_TAB ELSE NEXT_ID=_FIRST_TAB
0740 EXIT 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0945 GOSUB 9900 ! SSP233721 jdf
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1015 IF ID$="TEMPLATE_CODE" THEN TEMPLATE_CODE$=PAD(TEMPLATE_CODE$,3,0,"0"),TEMPLATE_CODE.CTL'VALUE$=TEMPLATE_CODE$
1016 IF ID$="FIELD_NUM" THEN FIELD_NUM$=PAD(FIELD_NUM$,2,0,"0"),FIELD_NUM.CTL'VALUE$=FIELD_NUM$
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1280 NEXT_FOLDER=_FIRST_FOLDER
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1670 GOSUB GEN_DATA_POS ! SSP233721 jdf
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3061 DATA_TYPE$=CHR(ASC(DATA_TYPE$))
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3330 GOSUB GEN_DATA_POS ! SSP233721 jdf
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1; CHANGE_FLG=0; GOSUB CLEAR_REC; NEXT_FOLDER=FLDR_FMGIAY.CTL
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=TEMPLATE_CODE.CTL,_FIRST_FIELD=FIELD_DESC.CTL,_FIRST_FOLDER=FLDR.FMGIAY.1.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
7800 GEN_DATA_POS:REM "GENERATE DATA POSITIONS ! SSP233721 jdf
7802 DIM V9$(V9) ! SSP233721 jdf
7805 D0=31,D1=1 ! SSP233721 jdf
7810 K7$=_KEY$(1,3); READ (_FIL_NO,KEY=K7$,DOM=7811) ! SSP233721 jdf
7820 K8$=KEY(_FIL_NO,END=7900); READ (_FIL_NO,END=7900); IF TEMPLATE_CODE$<>K7$ THEN GOTO 7900 ! SSP233721 jdf
7822 IF DATA_TYPE$(1,1)=" " THEN GOTO 7820 ! SSP233721 jdf
7825 Q$="",Q=NUM(MAX_LENGTH$),Q$=FLD_DFLT_VAL_RSP_VER$; IF POS("|"=Q$)>0 THEN Q$=Q$(1,POS("|"=Q$)-1) ! SSP233721 jdf
7828 IF DATA_TYPE$(1,1)="N" THEN FSE_NUM1=D1,D1=D1+1 ELSE FSE_NUM1=D0,D0=D0+Q ! SSP233721 jdf
7830 WRITE (_FIL_NO,KEY=K8$) ! SSP233721 jdf
7835 IF FSE_NUM1+Q<V9 THEN V9$(FSE_NUM1,Q)=Q$ ELSE MSGBOX "Too much data for current file size! (FSF)","WARNING" ! SSP233721 jdf
7840 GOTO 7820 ! SSP233721 jdf
7900 REM ! SSP233721 jdf
7992 IF POS(" "<>V9$)>0 THEN WRITE (Z[2],KEY="DFL"+TEMPLATE_CODE$)V9$ ELSE REMOVE (Z[2],KEY="DFL"+TEMPLATE_CODE$,DOM=7993) ! SSP233721 jdf
7995 RETURN ! SSP233721 jdf
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9750 REM "FILES   ! SSP233721 jdf
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1 ! SSP233721 jdf
9790 RETURN ! SSP233721 jdf
9900 REM "END PROGRAM  ! SSP233721 jdf
9905 Y8=2 ! SSP233721 jdf
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0 ! SSP233721 jdf
9950 RETURN ! SSP233721 jdf
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN TEMPLATE_CODE$=""
13030 IF _CLR_FLG$="R" THEN SCREEN_NUM$=""
13040 IF _CLR_FLG$="R" THEN FIELD_NUM$=""
13050 FIELD_DESC$=""
13060 DATA_TYPE$="B" ! SSP233721 jdf
13070 MAX_LENGTH$=""
13080 FLD_HORIZ_DENTRY_POS$=""
13090 FLD_VERT_DENTRY_POS$=""
13100 FLD_DFLT_VAL_RSP_VER$=""
13110 FLD_TXT_HDG_ON_SCRN$=""
13120 FLD_TXT_HDG_HORIZNTL$=""
13130 FLD_TXT_HDG_VERTICAL$=""
13140 F1_HDG_TEXT_1$=""
13150 F1_HDG_TEXT_2$=""
13160 F1_COLUMN_POS_$=""
13170 F1_LINE_NUM$=""
13180 F1_OUTPUT_TYPE$=""
13190 F2_HDG_TEXT_1$=""
13200 F2_HDG_TEXT_2$=""
13210 F2_COLUMN_POS$=""
13220 F2_LINE_NUM$=""
13230 F2_OUTPUT_TYPE$=""
13240 F3_HDG_TEXT_1$=""
13250 F3_HDG_TEXT_2$=""
13260 F3_COLUMN_POS$=""
13270 F3_LINE_NUM$=""
13280 F3_OUTPUT_TYPE$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=SCREEN_NUM.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=FIELD_NUM.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$
14970 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(27,"N")
15030 IF _ORIG.TEMPLATE_CODE$=_CUR.TEMPLATE_CODE$ OR TEMPLATE_CODE$=_CUR.TEMPLATE_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.TEMPLATE_CODE$=TEMPLATE_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("TEMP_C")+" = "+_CUR.TEMPLATE_CODE$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("TEMP_C")+" = "+_CUR.TEMPLATE_CODE$
15040 IF _ORIG.SCREEN_NUM$=_CUR.SCREEN_NUM$ OR SCREEN_NUM$=_CUR.SCREEN_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.SCREEN_NUM$=SCREEN_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("SCREEN_NUM")+" = "+_CUR.SCREEN_NUM$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SCREEN_NUM")+" = "+_CUR.SCREEN_NUM$
15050 IF _ORIG.FIELD_NUM$=_CUR.FIELD_NUM$ OR FIELD_NUM$=_CUR.FIELD_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.FIELD_NUM$=FIELD_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("FIELD_NUM")+" = "+_CUR.FIELD_NUM$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIELD_NUM")+" = "+_CUR.FIELD_NUM$
15060 IF _ORIG.FIELD_DESC$=_CUR.FIELD_DESC$ OR FIELD_DESC$=_CUR.FIELD_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.FIELD_DESC$=FIELD_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("FIELD_DESC")+" = "+_CUR.FIELD_DESC$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FIELD_DESC")+" = "+_CUR.FIELD_DESC$
15070 IF _ORIG.DATA_TYPE$=_CUR.DATA_TYPE$ OR DATA_TYPE$=_CUR.DATA_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.DATA_TYPE$=DATA_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("DATA_TYPE")+" = "+_CUR.DATA_TYPE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DATA_TYPE")+" = "+_CUR.DATA_TYPE$
15080 IF _ORIG.MAX_LENGTH$=_CUR.MAX_LENGTH$ OR MAX_LENGTH$=_CUR.MAX_LENGTH$ THEN GOTO *NEXT ELSE IF _ORIG.MAX_LENGTH$=MAX_LENGTH$ THEN _CHG2$=_CHG2$+SEP+MSG("MAX_LENGTH")+" = "+_CUR.MAX_LENGTH$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("MAX_LENGTH")+" = "+_CUR.MAX_LENGTH$
15090 IF _ORIG.FLD_HORIZ_DENTRY_POS$=_CUR.FLD_HORIZ_DENTRY_POS$ OR FLD_HORIZ_DENTRY_POS$=_CUR.FLD_HORIZ_DENTRY_POS$ THEN GOTO *NEXT ELSE IF _ORIG.FLD_HORIZ_DENTRY_POS$=FLD_HORIZ_DENTRY_POS$ THEN _CHG2$=_CHG2$+SEP+MSG("FLD_H_D_P")+" = "+_CUR.FLD_HORIZ_DENTRY_POS$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FLD_H_D_P")+" = "+_CUR.FLD_HORIZ_DENTRY_POS$
15100 IF _ORIG.FLD_VERT_DENTRY_POS$=_CUR.FLD_VERT_DENTRY_POS$ OR FLD_VERT_DENTRY_POS$=_CUR.FLD_VERT_DENTRY_POS$ THEN GOTO *NEXT ELSE IF _ORIG.FLD_VERT_DENTRY_POS$=FLD_VERT_DENTRY_POS$ THEN _CHG2$=_CHG2$+SEP+MSG("FLD_V_D_P")+" = "+_CUR.FLD_VERT_DENTRY_POS$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FLD_V_D_P")+" = "+_CUR.FLD_VERT_DENTRY_POS$
15110 IF _ORIG.FLD_DFLT_VAL_RSP_VER$=_CUR.FLD_DFLT_VAL_RSP_VER$ OR FLD_DFLT_VAL_RSP_VER$=_CUR.FLD_DFLT_VAL_RSP_VER$ THEN GOTO *NEXT ELSE IF _ORIG.FLD_DFLT_VAL_RSP_VER$=FLD_DFLT_VAL_RSP_VER$ THEN _CHG2$=_CHG2$+SEP+MSG("F_D_V_R_V")+" = "+_CUR.FLD_DFLT_VAL_RSP_VER$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F_D_V_R_V")+" = "+_CUR.FLD_DFLT_VAL_RSP_VER$
15120 IF _ORIG.FLD_TXT_HDG_ON_SCRN$=_CUR.FLD_TXT_HDG_ON_SCRN$ OR FLD_TXT_HDG_ON_SCRN$=_CUR.FLD_TXT_HDG_ON_SCRN$ THEN GOTO *NEXT ELSE IF _ORIG.FLD_TXT_HDG_ON_SCRN$=FLD_TXT_HDG_ON_SCRN$ THEN _CHG2$=_CHG2$+SEP+MSG("F_T_H_O_S")+" = "+_CUR.FLD_TXT_HDG_ON_SCRN$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F_T_H_O_S")+" = "+_CUR.FLD_TXT_HDG_ON_SCRN$
15130 IF _ORIG.FLD_TXT_HDG_HORIZNTL$=_CUR.FLD_TXT_HDG_HORIZNTL$ OR FLD_TXT_HDG_HORIZNTL$=_CUR.FLD_TXT_HDG_HORIZNTL$ THEN GOTO *NEXT ELSE IF _ORIG.FLD_TXT_HDG_HORIZNTL$=FLD_TXT_HDG_HORIZNTL$ THEN _CHG2$=_CHG2$+SEP+MSG("FLD_T_H_H")+" = "+_CUR.FLD_TXT_HDG_HORIZNTL$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FLD_T_H_H")+" = "+_CUR.FLD_TXT_HDG_HORIZNTL$
15140 IF _ORIG.FLD_TXT_HDG_VERTICAL$=_CUR.FLD_TXT_HDG_VERTICAL$ OR FLD_TXT_HDG_VERTICAL$=_CUR.FLD_TXT_HDG_VERTICAL$ THEN GOTO *NEXT ELSE IF _ORIG.FLD_TXT_HDG_VERTICAL$=FLD_TXT_HDG_VERTICAL$ THEN _CHG2$=_CHG2$+SEP+MSG("FLD_T_H_V")+" = "+_CUR.FLD_TXT_HDG_VERTICAL$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FLD_T_H_V")+" = "+_CUR.FLD_TXT_HDG_VERTICAL$
15150 IF _ORIG.F1_HDG_TEXT_1$=_CUR.F1_HDG_TEXT_1$ OR F1_HDG_TEXT_1$=_CUR.F1_HDG_TEXT_1$ THEN GOTO *NEXT ELSE IF _ORIG.F1_HDG_TEXT_1$=F1_HDG_TEXT_1$ THEN _CHG2$=_CHG2$+SEP+MSG("F_H_T_1")+" = "+_CUR.F1_HDG_TEXT_1$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F_H_T_1")+" = "+_CUR.F1_HDG_TEXT_1$
15160 IF _ORIG.F1_HDG_TEXT_2$=_CUR.F1_HDG_TEXT_2$ OR F1_HDG_TEXT_2$=_CUR.F1_HDG_TEXT_2$ THEN GOTO *NEXT ELSE IF _ORIG.F1_HDG_TEXT_2$=F1_HDG_TEXT_2$ THEN _CHG2$=_CHG2$+SEP+MSG("F_H_T_2")+" = "+_CUR.F1_HDG_TEXT_2$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F_H_T_2")+" = "+_CUR.F1_HDG_TEXT_2$
15170 IF _ORIG.F1_COLUMN_POS_$=_CUR.F1_COLUMN_POS_$ OR F1_COLUMN_POS_$=_CUR.F1_COLUMN_POS_$ THEN GOTO *NEXT ELSE IF _ORIG.F1_COLUMN_POS_$=F1_COLUMN_POS_$ THEN _CHG2$=_CHG2$+SEP+MSG("F_C_P_")+" = "+_CUR.F1_COLUMN_POS_$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F_C_P_")+" = "+_CUR.F1_COLUMN_POS_$
15180 IF _ORIG.F1_LINE_NUM$=_CUR.F1_LINE_NUM$ OR F1_LINE_NUM$=_CUR.F1_LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.F1_LINE_NUM$=F1_LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("F_L_N")+" = "+_CUR.F1_LINE_NUM$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F_L_N")+" = "+_CUR.F1_LINE_NUM$
15190 IF _ORIG.F1_OUTPUT_TYPE$=_CUR.F1_OUTPUT_TYPE$ OR F1_OUTPUT_TYPE$=_CUR.F1_OUTPUT_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.F1_OUTPUT_TYPE$=F1_OUTPUT_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("F_O_T")+" = "+_CUR.F1_OUTPUT_TYPE$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F_O_T")+" = "+_CUR.F1_OUTPUT_TYPE$
15200 IF _ORIG.F2_HDG_TEXT_1$=_CUR.F2_HDG_TEXT_1$ OR F2_HDG_TEXT_1$=_CUR.F2_HDG_TEXT_1$ THEN GOTO *NEXT ELSE IF _ORIG.F2_HDG_TEXT_1$=F2_HDG_TEXT_1$ THEN _CHG2$=_CHG2$+SEP+MSG("F2_H_T_1")+" = "+_CUR.F2_HDG_TEXT_1$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F2_H_T_1")+" = "+_CUR.F2_HDG_TEXT_1$
15210 IF _ORIG.F2_HDG_TEXT_2$=_CUR.F2_HDG_TEXT_2$ OR F2_HDG_TEXT_2$=_CUR.F2_HDG_TEXT_2$ THEN GOTO *NEXT ELSE IF _ORIG.F2_HDG_TEXT_2$=F2_HDG_TEXT_2$ THEN _CHG2$=_CHG2$+SEP+MSG("F2_H_T_2")+" = "+_CUR.F2_HDG_TEXT_2$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F2_H_T_2")+" = "+_CUR.F2_HDG_TEXT_2$
15220 IF _ORIG.F2_COLUMN_POS$=_CUR.F2_COLUMN_POS$ OR F2_COLUMN_POS$=_CUR.F2_COLUMN_POS$ THEN GOTO *NEXT ELSE IF _ORIG.F2_COLUMN_POS$=F2_COLUMN_POS$ THEN _CHG2$=_CHG2$+SEP+MSG("F_C_P")+" = "+_CUR.F2_COLUMN_POS$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F_C_P")+" = "+_CUR.F2_COLUMN_POS$
15230 IF _ORIG.F2_LINE_NUM$=_CUR.F2_LINE_NUM$ OR F2_LINE_NUM$=_CUR.F2_LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.F2_LINE_NUM$=F2_LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("F2_L_N")+" = "+_CUR.F2_LINE_NUM$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F2_L_N")+" = "+_CUR.F2_LINE_NUM$
15240 IF _ORIG.F2_OUTPUT_TYPE$=_CUR.F2_OUTPUT_TYPE$ OR F2_OUTPUT_TYPE$=_CUR.F2_OUTPUT_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.F2_OUTPUT_TYPE$=F2_OUTPUT_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("F2_O_T")+" = "+_CUR.F2_OUTPUT_TYPE$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F2_O_T")+" = "+_CUR.F2_OUTPUT_TYPE$
15250 IF _ORIG.F3_HDG_TEXT_1$=_CUR.F3_HDG_TEXT_1$ OR F3_HDG_TEXT_1$=_CUR.F3_HDG_TEXT_1$ THEN GOTO *NEXT ELSE IF _ORIG.F3_HDG_TEXT_1$=F3_HDG_TEXT_1$ THEN _CHG2$=_CHG2$+SEP+MSG("F3_H_T_1")+" = "+_CUR.F3_HDG_TEXT_1$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F3_H_T_1")+" = "+_CUR.F3_HDG_TEXT_1$
15260 IF _ORIG.F3_HDG_TEXT_2$=_CUR.F3_HDG_TEXT_2$ OR F3_HDG_TEXT_2$=_CUR.F3_HDG_TEXT_2$ THEN GOTO *NEXT ELSE IF _ORIG.F3_HDG_TEXT_2$=F3_HDG_TEXT_2$ THEN _CHG2$=_CHG2$+SEP+MSG("F3_H_T_2")+" = "+_CUR.F3_HDG_TEXT_2$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F3_H_T_2")+" = "+_CUR.F3_HDG_TEXT_2$
15270 IF _ORIG.F3_COLUMN_POS$=_CUR.F3_COLUMN_POS$ OR F3_COLUMN_POS$=_CUR.F3_COLUMN_POS$ THEN GOTO *NEXT ELSE IF _ORIG.F3_COLUMN_POS$=F3_COLUMN_POS$ THEN _CHG2$=_CHG2$+SEP+MSG("F3_C_P")+" = "+_CUR.F3_COLUMN_POS$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F3_C_P")+" = "+_CUR.F3_COLUMN_POS$
15280 IF _ORIG.F3_LINE_NUM$=_CUR.F3_LINE_NUM$ OR F3_LINE_NUM$=_CUR.F3_LINE_NUM$ THEN GOTO *NEXT ELSE IF _ORIG.F3_LINE_NUM$=F3_LINE_NUM$ THEN _CHG2$=_CHG2$+SEP+MSG("F3_L_N")+" = "+_CUR.F3_LINE_NUM$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F3_L_N")+" = "+_CUR.F3_LINE_NUM$
15290 IF _ORIG.F3_OUTPUT_TYPE$=_CUR.F3_OUTPUT_TYPE$ OR F3_OUTPUT_TYPE$=_CUR.F3_OUTPUT_TYPE$ THEN GOTO *NEXT ELSE IF _ORIG.F3_OUTPUT_TYPE$=F3_OUTPUT_TYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("F3_O_T")+" = "+_CUR.F3_OUTPUT_TYPE$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("F3_O_T")+" = "+_CUR.F3_OUTPUT_TYPE$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN TEMPLATE_CODE$=_CUR.TEMPLATE_CODE$
16030 IF _CHG_VAR$(2,1)="Y" THEN SCREEN_NUM$=_CUR.SCREEN_NUM$
16040 IF _CHG_VAR$(3,1)="Y" THEN FIELD_NUM$=_CUR.FIELD_NUM$
16050 IF _CHG_VAR$(4,1)="Y" THEN FIELD_DESC$=_CUR.FIELD_DESC$
16060 IF _CHG_VAR$(5,1)="Y" THEN DATA_TYPE$=_CUR.DATA_TYPE$
16070 IF _CHG_VAR$(6,1)="Y" THEN MAX_LENGTH$=_CUR.MAX_LENGTH$
16080 IF _CHG_VAR$(7,1)="Y" THEN FLD_HORIZ_DENTRY_POS$=_CUR.FLD_HORIZ_DENTRY_POS$
16090 IF _CHG_VAR$(8,1)="Y" THEN FLD_VERT_DENTRY_POS$=_CUR.FLD_VERT_DENTRY_POS$
16100 IF _CHG_VAR$(9,1)="Y" THEN FLD_DFLT_VAL_RSP_VER$=_CUR.FLD_DFLT_VAL_RSP_VER$
16110 IF _CHG_VAR$(10,1)="Y" THEN FLD_TXT_HDG_ON_SCRN$=_CUR.FLD_TXT_HDG_ON_SCRN$
16120 IF _CHG_VAR$(11,1)="Y" THEN FLD_TXT_HDG_HORIZNTL$=_CUR.FLD_TXT_HDG_HORIZNTL$
16130 IF _CHG_VAR$(12,1)="Y" THEN FLD_TXT_HDG_VERTICAL$=_CUR.FLD_TXT_HDG_VERTICAL$
16140 IF _CHG_VAR$(13,1)="Y" THEN F1_HDG_TEXT_1$=_CUR.F1_HDG_TEXT_1$
16150 IF _CHG_VAR$(14,1)="Y" THEN F1_HDG_TEXT_2$=_CUR.F1_HDG_TEXT_2$
16160 IF _CHG_VAR$(15,1)="Y" THEN F1_COLUMN_POS_$=_CUR.F1_COLUMN_POS_$
16170 IF _CHG_VAR$(16,1)="Y" THEN F1_LINE_NUM$=_CUR.F1_LINE_NUM$
16180 IF _CHG_VAR$(17,1)="Y" THEN F1_OUTPUT_TYPE$=_CUR.F1_OUTPUT_TYPE$
16190 IF _CHG_VAR$(18,1)="Y" THEN F2_HDG_TEXT_1$=_CUR.F2_HDG_TEXT_1$
16200 IF _CHG_VAR$(19,1)="Y" THEN F2_HDG_TEXT_2$=_CUR.F2_HDG_TEXT_2$
16210 IF _CHG_VAR$(20,1)="Y" THEN F2_COLUMN_POS$=_CUR.F2_COLUMN_POS$
16220 IF _CHG_VAR$(21,1)="Y" THEN F2_LINE_NUM$=_CUR.F2_LINE_NUM$
16230 IF _CHG_VAR$(22,1)="Y" THEN F2_OUTPUT_TYPE$=_CUR.F2_OUTPUT_TYPE$
16240 IF _CHG_VAR$(23,1)="Y" THEN F3_HDG_TEXT_1$=_CUR.F3_HDG_TEXT_1$
16250 IF _CHG_VAR$(24,1)="Y" THEN F3_HDG_TEXT_2$=_CUR.F3_HDG_TEXT_2$
16260 IF _CHG_VAR$(25,1)="Y" THEN F3_COLUMN_POS$=_CUR.F3_COLUMN_POS$
16270 IF _CHG_VAR$(26,1)="Y" THEN F3_LINE_NUM$=_CUR.F3_LINE_NUM$
16280 IF _CHG_VAR$(27,1)="Y" THEN F3_OUTPUT_TYPE$=_CUR.F3_OUTPUT_TYPE$
16990 RETURN 
17000 DATA_TYPE:
17010 DIM L[4]
17020 L(1)=0,L(2)=6,L(3)=14,L(4)=1
17030 IF POS(DATA_TYPE$="SDPY")>1 THEN MAX_LENGTH$=STR(L(POS(DATA_TYPE$="SDPY"))) ! ,MAX_LENGTH.CTL'VALUE$=MAX_LENGTH$
17040 REFRESH_FLG=1,OPT_DATA=POS(DATA_TYPE$="SDPY"),AA=FLD_DFLT_VAL_RSP_VER.CTL; IF OPT_DATA>1 THEN AA'LEN=L(OPT_DATA),BB$=AA'VALUE$,AA'VALUE$=MID(BB$,1,L(OPT_DATA)); CALL "*WINGRP;DISABLE",M_LEN.GRP$ ELSE CALL "*WINGRP;ENABLE",M_LEN.GRP$; AA'LEN=30
17060 RETURN 
56000 REM "233721-Problem with setting up user def specs in GUI vs CHUI       
