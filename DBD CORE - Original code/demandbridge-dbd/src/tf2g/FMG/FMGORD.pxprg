0010 ! FMGORD - Search for orders and invoices in ARB files
0020 ! ************************************************************************
0030 REM "5.7 - 05/01/12 - 9.088611 - sns - SSP# 252589
0035 REM "5.7 - 05/15/12 - 16.987777 - sns - SSP# 252589
0037 REM "252589-ORDHUNT                                                     
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0080 CLEAR ; SETESC ERROR_PROCESSING; SETERR ERROR_PROCESSING
0090 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "FMGORD","../FMG/FM.EN"
0100 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0110 ! 
0120 ! 100 - Initialization
0130 INIT:
0140 X0$="FMGORD",X1$="Orders that have been invoiced"
0150 X0=-1; X2=-1
0160 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO END_PROGRAM
0170 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0180 ! IO list
0190 DETAILS_IOL:IOLIST MY_ORPH$,MY_FNAME$,MY_FY$,MY_PD$,MY_INVOICE$,MY_ORDER$,MY_TERMS$
0195 DETAILS_IOL_BLANK:IOLIST "","No data found","","","","",""
0200 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0210 ! Open Files
0220 OPEN (HFN)"ZY9"; ZY9=LFO
0230 RETURN 
0240 ! 400 - Set up the message library
0250 SETUP_LIBRARY:
0260 _SV_MSGLIB$=MSG(*)
0270 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0280 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO SETUP_LIBRARY2
0290 MESSAGE_LIB "*msglib.en"
0300 SETUP_LIBRARY2:GOSUB SETUP_MESSAGES
0310 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 ! IF NUL(ORDER_NUM$) THEN GOTO *RETURN
0540 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO *RETURN
0550 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0560 DIM Z[NUM(X3$(60,3))]
7000 ! 
7010 LOAD_RECORDS:
7020 A$=PAD(Q0$,8)
7030 DATAFOUND$=""
7040 GOSUB CLEAR_LIST_BOX
7050 SELECT FILENAME$ FROM %DATAPATH$ WHERE FILENAME$ LIKE "ARB*"
7060 OPEN (HFN,ERR=ERR_ARB_OPEN)FILENAME$; ARB=LFO
7070 GOSUB CHECK_BATCH
7080 MYLOOP:
7090 K$=KEY(ARB,END=NEXT_ARB,ERR=NEXT_ARB)
7100 READ (ARB,KEY=K$,BSY=ERR_FILE_BUSY)O$
7110 IF NUL(A$) THEN DATAFOUND$="1"; MY_FNAME$=FILENAME$; GOSUB LOAD_LIST_BOX
7120 GOTO MYLOOP
7130 ! 
7140 NEXT_ARB:
7150 CLOSE (ARB,ERR=*PROCEED); ARB=0
7160 NEXT RECORD 
7170 ! MSGBOX "data found: " + datafound$
7180 IF DATAFOUND$="" THEN LIST_BOX LOAD DETAILS.CTL,0,REC(IOL=DETAILS_IOL_BLANK)
7190 CLOSE (ARB,ERR=*PROCEED); ARB=0
7200 RETURN 
7210 ! 
7220 ERR_ARB_OPEN:
7230 MSGBOX "CANNOT OPEN FILE: "+FILENAME$
7240 GOTO NEXT_ARB
7250 ! 
7260 ERR_FILE_BUSY:
7270 ! MSGBOX "FILE BUSY: "+FILENAME$
7280 MY_ORPH$="BUSY"
7290 MY_FNAME$=FILENAME$
7300 MY_FY$=""
7310 MY_PD$=""
7320 MY_INVOICE$=""
7330 MY_ORDER$=""
7340 MY_TERMS$=""
7350 LIST_BOX LOAD DETAILS.CTL,0,REC(IOL=DETAILS_IOL)
7360 CLOSE (ARB,ERR=*PROCEED); ARB=0
7370 GOTO NEXT_ARB
7380 ! 
7390 CHECK_BATCH:
7400 MY_ORPH$=" "
7410 BATCH$=MID(FILENAME$,4)
7420 FIND (ZY9,KEY=PAD(BATCH$,5),DOM=*NEXT); GOTO *RETURN
7430 FIND (ZY9,KEY=PAD(BATCH$,4)+"B",DOM=*NEXT); GOTO *RETURN
7440 MY_ORPH$="     **"
7450 RETURN 
7460 ! 
7470 LOAD_LIST_BOX:
7480 MY_FY$=MID(O$,1,4)
7490 MY_PD$=MID(O$,5,2)
7500 MY_INVOICE$=MID(O$,7,8)
7510 MY_ORDER$=MID(O$,92,8)
7520 MY_TERMS$=MID(O$,65,2)
7530 LIST_BOX LOAD DETAILS.CTL,0,REC(IOL=DETAILS_IOL)
7540 RETURN 
7550 ! 
7560 CLEAR_LIST_BOX:
7570 LIST_BOX LOAD DETAILS.CTL,""
7580 RETURN 
7590 ! 
7600 SHOW_DETAILS:
7610 RETURN 
8999 ! 
9000 ERROR_PROCESSING:
9010 MSGBOX "UNKNOWN ERROR"
9020 ! 
9030 ! Retrieve messages from the *msglib.xxx library
9040 SETUP_MESSAGES:
9050 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9060 _MSG_DIRECTORY$=MSG("DIRECTORY")
9070 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9080 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9090 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9100 _MSG_MANDATORY$=MSG("MANDATORY")
9110 _MSG_NEXT$=MSG("NEXT")
9120 _MSG_NON_NUMER$=MSG("NON_NUMER")
9130 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9140 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9150 _MSG_PRECEDING$=MSG("PRECEDING")
9160 _MSG_PREFIX$=MSG("PREFIX")
9170 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9180 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9190 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9200 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9210 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9220 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9230 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9240 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9250 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9260 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9270 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9280 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9290 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9300 _MSG_START_FILE$=MSG("START_FILE")
9310 _MSG_UPDATE$=MSG("UPDATE")
9320 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9330 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9340 _MSG_UPD_SAME$=MSG("UPD_SAME")
9350 _MSG_WARNING$=MSG("WARNING")
9360 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9370 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9380 RETURN 
9390 ! 
9400 END_PROGRAM:
9410 CLOSE (ARB,ERR=*PROCEED); ARB=0
9420 CLOSE (ZY9)
9430 RETURN 
9999 END 
