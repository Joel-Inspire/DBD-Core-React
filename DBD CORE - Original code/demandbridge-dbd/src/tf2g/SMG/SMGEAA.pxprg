0010 ! SMGEAA - Customer Invoiceing Gateway Invoice Entry
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Oct. 8, 2001 9:11
0030 ! ************************************************************************
0035 REM "5.7 - 07/12/23 - 12.039907 - dmm - SSP# 307450
0037 REM "307450-DBD-270; Repeat Order Check - add back if needed            
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ENTER X3$,X4$,I$,ORD$,INV_NUM$,CR_FY$,CR_ACCTPD$
0055 ORDER$=ORD$
0105 GOSUB INIT
0106 EXTRACT (Z[10],KEY=ORD$,DOM=0980,ERR=BSY_REC)IOL=48290; FS1$(63,1)="Y"; WRITE (Z[10],KEY=ORD$)IOL=48290
0107 GOSUB GET_CUST_INFO ! 3000
0108 GOSUB LOAD_CUST_INFO ! 3200
0109 GOSUB LOAD_ORDER_HEADER ! 25600
0110 GOSUB INVOICE_ENTRY ! 2000
0120 GOSUB LOAD_HEADER_INFO ! 5000
0130 GOSUB WRITE_REC ! 5000
0150 GOSUB BILL_COMPLETE
0200 IF OK_INV THEN GOSUB LOAD_SUMMARY
0250 IF OK_INV THEN {
0260 WRITE (Z[1],KEY=KEY_1$)IOL=48140
0300  } ELSE {
0310 REMOVE (Z[1],KEY=KEY_1$,ERR=*NEXT)
0320 EXTRACT (Z[10],KEY=ORD$,DOM=0980,ERR=*NEXT)IOL=48290; FS1$(63,1)=" "; WRITE (Z[10],KEY=ORD$)IOL=48290
0330 INV_NUM$=""
0340 IF %MSLC THEN CCKEY$="I"+KEY_1$(7)+KEY_1$(1,6)+DIM(4); CALL "ARGSCM; DELETE_ALL",CCKEY$ ! SSP 225300
0350  }
0980 GOSUB WRAPUP
0990 EXIT 
1000 BSY_REC:
1010 MSGBOX ORD$+" "+MSG("BSY_RET"),"YESNO",ANS$
1020 IF ANS$="Y" THEN GOTO 0106 ELSE GOTO 0980
1900 ! Invoice button....
1910 INV_BUTTON:
1930 GOSUB INVOICE_ENTRY
1990 RETURN 
2000 ! Invoice Entry
2010 INVOICE_ENTRY:
2025 DIM KEY_1$(14)
2030 KEY_1$(1,6)=CR_FY$+CR_ACCTPD$
2040 GOSUB GET_NEXT_INV_NUM ! 2200
2050 INV_NUM$=KEY_1$(7,7)+" "
2075 INV_EXTRA$=INV_NUM$(8,1)
2080 INV_NUM=NUM(INV_NUM$); INV_NUM$=STR(INV_NUM:"0000000")+INV_EXTRA$
2190 RETURN 
2200 ! Get the next invoice Number
2210 GET_NEXT_INV_NUM:
2220 EXTRACT RECORD (Z[6],KEY=X3$(9,3)+"A/R")AR_PARM$
2230 KEY_1$(7,7)=AR_PARM$(89,7)
2240 IN0=NUM(AR_PARM$(89,7)),IN0+=1; IF IN0>9999999 THEN IN0=1
2250 AR_PARM$(89,7)=STR(IN0:"0000000"); WRITE RECORD (Z[6],KEY=X3$(9,3)+"A/R")AR_PARM$
2260 AR_PARM$=AR_PARM$(1,POS(SEP=AR_PARM$+SEP)-1)
2270 FIND (Z[1],KEY=KEY_1$,DOM=*NEXT); GOTO 2220
2290 RETURN 
3000 ! get customer information
3010 GET_CUST_INFO:
3015 CUSTOMER$=FS1$(6,10)
3020 KEY_3$=CUSTOMER$
3030 READ (Z[3],KEY=KEY_3$,DOM=*RETURN)IOL=48150
3040 CUST_NAME$=AR1$(11,35)
3050 CUST_ADDR_1$=AR1$(56,30); CUST_ADDR_2$=AR1$(86,30)
3060 CUST_CITY$=AR1$(116,16); CUST_ST$=AR1$(132,2); CUST_ZIP_CODE$=AR1$(134,9)
3070 LOC_DESC$=AR1$(11,35)
3080 LOC_ADDR_1$=AR1$(56,30); LOC_ADDR_2$=AR1$(86,30)
3090 LOC_CITY$=AR1$(116,16); LOC_ST$=AR1$(132,2); LOC_ZIP_CODE$=AR1$(134,9)
3100 CUST_CATEGORY$=AR1$(220,9)
3110 PRINT_INV$="Y" ! set print flag to yes for now
3150 DIM FMP_CUST$(300); READ (Z[14],KEY="D"+CUSTOMER$,DOM=*NEXT)FMP_CUST$
3160 IF POS("Y"=FMP_CUST$(117,4),1)<>0 THEN SUMMARY_BILL$="Y" ELSE SUMMARY_BILL$="N"
3190 RETURN 
3210 LOAD_CUST_INFO:
3215 DIM AR3$(320); FIND (Z[2],KEY=AR1$(278,4),ERR=*NEXT)IOL=48190
3220 TERMS_CODE$=AR1$(359,2)
3230 STAX_CODE$=AR1$(235,10); ST_PERCENT=AR5[0]+AR5[2]+AR5[3]
3240 SPER_CODE$=AR1$(278,4); COMM_AMT_1=AR1[0]
3250 SPER_CODE_2$=AR1$(282,4); COMM_AMT_2=AR1[1]
3260 SPER_CODE_3$=AR1$(286,4); COMM_AMT_3=AR1[2]
3270 SPER_CODE_4$=AR1$(290,4); COMM_AMT_4=AR1[3]
3280 SPER_CODE_5$=AR1$(294,4); COMM_AMT_5=AR1[4]
3290 IF MID(P2$,68,1)="Y" THEN COMM_CODE$=AR1$(262,5) ELSE COMM_CODE$=AR3$(219,5)
3300 GOSUB GET_SUMM_BILL ! SUMMARY_BILL$="N" ! Change when incorporate Orders
3305 IF RESULT$="Y" THEN GOSUB GET_TP ! REM " SSP 180448
3390 RETURN 
3500 ! Get the Location for the Customer
3510 GET_CUST_LOC:
3518 LOC_CODE$=PAD(LOC_CODE$,4,0,"0")
3520 KEY_13$="C"+CUSTOMER$+LOC_CODE$
3530 FIND (Z[13],KEY=KEY_13$,DOM=*RETURN)IOL=48220
3540 LOC_DESC$=FM0$(16,35)
3550 LOC_ADDR_1$=FM0$(51,30); LOC_ADDR_2$=FM0$(81,30)
3560 LOC_CITY$=FM0$(111,16); LOC_ST$=FM0$(127,2)
3570 LOC_ZIP_CODE$=FM0$(129,9)
3575 SHIP_VIA_CODE$=FM0$(305,1); SHIP_VIA_DESC$=FM0$(306,15)
3590 RETURN 
3600 ! GET SUMMARY FOR ORDER COMMING FROM P/O RECEIVING
3610 GET_SUMM_BILL_ORD:
3615 SUMMARY_BILL$="N"; PRINT_INV$="Y"; Z=0
3620 IF LEN(FS1$)>=197 THEN SAMP_REB$=FS1$(197,1)
3625 DIM XX$(171); FIND (Z[14],KEY="D"+CUSTOMER$,DOM=*RETURN)XX$
3630 IF FS1$(47,1)="R" THEN Z=POS("R"=XX$(113,4)); ORD_TYPE$="R"
3640 IF FS1$(47,1)="W" THEN Z=POS("W"=XX$(113,4)); ORD_TYPE$="W"
3650 IF FS1$(47,1)=" " THEN Z=POS("I"=XX$(113,4)); ORD_TYPE$="I"
3660 IF Z>0 THEN PRINT_INV$=XX$(117+Z-1,1); SUMMARY_BILL$="Y"
3690 RETURN 
3700 ! Get the Distribution Location
3710 GET_DIST_LOC:
3715 IF NUL(INV_LOC_CODE$) THEN NEXT_ID=INV_LOC_CODE.CTL; RETURN 
3720 KEY_13$="D"+"          "+INV_LOC_CODE$
3730 FIND (Z[13],KEY=KEY_13$,DOM=INVALID_LOC)IOL=48220
3740 LOC_DESC2$=STP(FM0$(111,16))+", "+FM0$(127,2)
3750 NEXT_ID=QTY_ORDERED.CTL
3770 IF INV_LOC_CODE$(1,1)="9" THEN CALL "*wingrp;Disable",ZERO_C.GRP$; UNIT_SELL_PRICE=0; UNIT_COST=0; SELL_PRICE_EXT=0; COST_EXT=0
3780 REFRESH_FLG=1
3790 RETURN 
3800 ! Invalid Location Message
3810 INVALID_LOC:
3820 MSGBOX MSG("INVA_LOC"),MSG("INFO"),"!"
3830 INV_LOC_CODE$=""
3840 NEXT_ID=INV_LOC_CODE.CTL
3880 REFRESH_FLG=1
3890 RETURN 
3900 ! CHECK IF ORDER IS SUMMARY BILL
3910 GET_SUMM_BILL:
3920 DIM FMS_REC$(171); FIND (Z[14],KEY="D"+CUSTOMER$,DOM=*NEXT)FMS_REC$
3930 II1=POS("I"=FMS_REC$)
3940 IF II1=0 THEN RETURN ! II1=1
3950 ! IF LEN(FS1$)<47 THEN RETURN
3960 IF MID(FMS_REC$,116+II1,1)="N" THEN SUMMARY_BILL$="N",PRINT_INV$="Y" ELSE SUMMARY_BILL$="Y",PRINT_INV$="N"
3970 ! IF SUMMARY_BILL$="N" THEN PRINT_INV$="Y"
3990 RETURN 
4200 ! Write out Record
4210 WRITE_REC:
4220 WRITE (Z[1],KEY=KEY_1$)IOL=48140
4230 IF %MSLC THEN DTC=0; GOSUB MULTI_COMM_KEY; GOSUB MULTI_COMM_SETUP; CALL "ARGSCM;DEFAULT_HEADER_SETUP",SC_TYPE$,SC_KEY1$,SC_KEY2$,SC_LINE$,MCCDE${ALL},MCSPLT{ALL},MCOMM${ALL},CUSTOMER$,INV_DATE$,X3$(174,5),X3$(21,6) ! SSP 225300   
4290 RETURN 
4400 ! Change the print invoice flag according to the summary bill.
4410 SUMM_PRINT:
4420 IF SUMMARY_BILL$="Y" THEN PRINT_INV$="N" ELSE PRINT_INV$="Y"
4490 RETURN 
4700 ! Continue process after User is alert of the Customer over 60
4710 CONT_PROCESS:
4720 CALL "*wingrp;hide",BUTTON_1.GRP$; CALL "*wingrp;show",BUTTONS.GRP$; CALL "*wingrp;enable",OVER.GRP$; CALL "*wingrp;enable",FIELD_1.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;enable",LOC_2.GRP$
4740 IF POS("Y"=FMP_CUST$(117,4),1)<>0 THEN CALL "*wingrp;Enable",SUMM.GRP$ ELSE CALL "*wingrp;Disable",SUMM.GRP$
4750 NEXT_ID=LOC_CODE.CTL
4780 REFRESH_FLG=1
4790 RETURN 
5000 ! load Collected Header Information....
5010 LOAD_HEADER_INFO:
5020 ARB$(1,4)=CR_FY$; ARB$(5,2)=CR_ACCTPD$
5030 ARB$(7,8)=INV_NUM$; ARB$(15,10)=FS1$(6,10); ARB$(25,35)=CUST_NAME$
5040 ARB$(65,2)=TERMS_CODE$; ARB$(67,10)=STAX_CODE$; STAX_CODE_2$=STAX_CODE$
5047 INV_DATE$=%X3_TODAY$; SHIP_DATE$=%SHIP_DATE$; IF STP(%SHIP_VIA_CODE$,3)<>"" THEN SHIP_VIA_CODE$=%SHIP_VIA_CODE$ END_IF ; IF STP(%SHIP_VIA_DESC$,3)<>"" THEN SHIP_VIA_DESC$=%SHIP_VIA_DESC$ END_IF ! SSP205068, don't reset ship via info here if tf590, it is correct from the order (PO3); 261300-Undo the custom comp 590 change SSP297493, only override SHIP_VIA_CODE$ and SHIP_VIA_DESC$  if they are not blank
5050 ARB$(77,1)=INV_TYPE$; ARB$(86,6)=INV_DATE$
5057 CUST_PO$=FS1$(28,15)
5060 ARB$(92,8)=ORD$; ARB$(100,15)=CUST_PO$
5070 ARB$(128,5)=COMM_CODE$
5080 ARB$(133,4)=SPER_CODE$; ARB$(137,4)=SPER_CODE_2$; ARB$(141,4)=SPER_CODE_3$; ARB$(145,4)=SPER_CODE_4$; ARB$(149,4)=SPER_CODE_5$
5090 ARB$(153,9)=AR1$(220,9); ARB$(162,15)=SHIP_VIA_DESC$
5095 ARB$(179,1)=FOB_PT$ ! SSP233089, FOB point from PO3 to ARB
5100 ARB$(180,6)=SHIP_DATE$; ARB$(186,1)=SHIP_VIA_CODE$
5110 ARB$(187,4)=LOC_CODE$
5120 ARB$(191,30)=LOC_ADDR_1$; ARB$(221,30)=LOC_ADDR_2$
5130 ARB$(251,16)=LOC_CITY$; ARB$(267,2)=LOC_ST$; ARB$(269,9)=LOC_ZIP_CODE$
5140 ARB$(290,35)=LOC_DESC$
5145 ARB[1]=ORD_AMT; ARB[2]=FRT_AMT; ARB[11]=ORD_COST; ARB[9]=ORD_AMT
5150 ARB[12]=COMM_AMT_1; ARB[13]=COMM_AMT_2; ARB[14]=COMM_AMT_3; ARB[15]=COMM_AMT_4; ARB[16]=COMM_AMT_5
5160 ARB$(344,1)=SUMMARY_BILL$; ARB$(345,1)=PRINT_INV$; ARB$(343,1)=ORD_TYPE$
5170 ARB$(338,3)=%C$
5180 ARB$(115,1)=TAX_EXEMPT$
5185 ARB$(447,3)=X3$(40,3),ARB$(450,3)=X3$(40,3) ! WO240665, operator code when first entered and operator code last accessed
5190 RETURN 
7000 ! Get the Foreign Currency
7010 GET_CURR:
7020 PRC2=PRC
7030 PRECISION 7
7040 DIM CUR$(36),CUR[1],XXX$(171),ASN$(45),ASN[1]
7050 CUR[0]=1
7060 READ (Z[14],KEY="D"+CUSTOMER$,DOM=*NEXT)XXX$
7070 READ (Z[24],KEY=CR_FY$+CR_ACCTPD$+INV_NUM$,DOM=*NEXT)IOL=48330; GOTO 7100
7080 READ (Z[25],KEY=XXX$(90,3),DOM=*NEXT)IOL=48340
7090 CUR$=CR_FY$+CR_ACCTPD$+INV_NUM$+ASN$(1,3)+ASN$(39,3)+"                ",CUR[0]=ASN[0]
7100 PRECISION PRC2
7120 CURRENCY$=CUR$(15,3); CURR_AMT=CUR[0]
7180 REFRESH_FLG=1
7190 RETURN 
7200 ! CHECK IF UPDATE HAS BEEN RUN
7210 CHECK_AUDIT:
7220 FIND (Z[1],KEY="",DOM=*RETURN)V0$,K0$
7230 IF %IN_WEBEC$="Y" THEN REMOVE (Z[1],KEY=""); RETURN 
7240 MSGBOX MSG("AUDIT_REPO")+" ("+V0$(22,4)+"."+V0$(26,2)+")"+SEP+MSG("WANT_MOD"),MSG("WARNING"),"?,YESNO",ANS$
7250 IF ANS$="NO" THEN CMD_STR$="END"; EXIT 
7290 RETURN 
7300 GET_TP:; REM " SSP 180448
7310 READ (Z[30],KEY=CUSTOMER$,DOM=*NEXT)
7320 EM2_KEY$=KEY(Z[30],END=7399)
7330 IF EM2_KEY$(1,10)<>CUSTOMER$ THEN GOTO 7399
7340 FIND (Z[31],KEY=EM2_KEY$(11,15),DOM=7399)EM1$
7360 TP$=EM1$(16,30)
7399 RETURN 
8100 ! Customer's Invoice Entry Message
8110 CUST_INV_MSG:
8114 IF INV_NUM$=%CUST_MSG_INV_NUM$ THEN RETURN ELSE %CUST_MSG_INV_NUM$=INV_NUM$
8115 IF NUL(CUSTOMER$) THEN RETURN 
8120 FIND (Z[16],KEY=CUSTOMER$,DOM=*RETURN)IOL=48210
8130 IF NUL(AS5$(11,180)) THEN RETURN 
8140 MSGBOX AS5$(11,60)+SEP+AS5$(71,60)+SEP+AS5$(131,60),MSG("FYI"),"!"
8190 RETURN 
8300 ! CLEAR SCREEN
8500 LOOKUP_ZIP:! Lookup zipcode, set city & state if found, set NEW_ZIP for later use
8510 IF NUL(LOC_ZIP_CODE$) THEN RETURN 
8520 NEW_ZIP=0
8530 CALL "ZYGMBA;CHECK_ZIP",LOC_ZIP_CODE$,ZIP_FOUND,ZIP_CITY$,ZIP_ST$,"",ZIP_AREA_CODE$,""
8540 IF CUST_PHONE$="" THEN CUST_PHONE$=DIM(14)
8550 IF ZIP_FOUND THEN LOC_CITY$=ZIP_CITY$,LOC_ST$=ZIP_ST$; REFRESH_FLG=1,NEXT_ID=CUST_PO.CTL ELSE NEW_ZIP=1
8560 RETURN 
8570 ! 
8580 UPDATE_ZIP:! If new_zip then update the zip code table
8590 IF NUL(CUST_PHONE$) THEN DIM CUST_PHONE$(14)
8600 IF NEW_ZIP THEN CALL "ZYGMBA;UPDATE_ZIP",LOC_ZIP_CODE$,LOC_CITY$,LOC_ST$,"",CUST_PHONE$(1,3),CUST_CITY$ ! get area code from phone,long city from regular city
8610 NEW_ZIP=0
8620 RETURN 
8630 ! 
9000 ! 
9010 GET_PARAM:
9020 FIND (Z[6],KEY=X3$(9,3)+"A/R")ARS$
9025 FIND (Z[6],KEY=X3$(9,3)+"AR1",DOM=*NEXT)P2$
9030 READ (Z[6],KEY=X3$(9,3)+"G/B",DOM=*NEXT)GB$; GB$="Y"
9040 FIND (Z[6],KEY=X3$(9,3)+"G/L")G0$; G8=NUM(G0$(170,2),ERR=*NEXT)
9045 READ (Z[6],KEY=X3$(9,3)+"A/R",DOM=*NEXT)P0$
9050 DIM I0$(40); FIND (Z[6],KEY=X3$(9,3)+"I/C",DOM=*NEXT)I0$
9060 DIM ASN$(45),ASN[1],CUR$(36),CUR[1]
9070 DIM OP_SEC$(255); READ (Z[6],KEY="osec"+X3$(40,3),DOM=*NEXT)OP_SEC$
9080 DIM FMM$(300); READ (Z[6],KEY=X3$(9,3)+"F/M",DOM=*NEXT)FMM$
9085 CHK_SB$="N"; IF MID(FMM$,334,1)="Y" THEN CHK_SB$="Y" ! WO255959
9090 GB$=""; FIND (Z[6],KEY=X3$(9,3)+"G/B",DOM=*NEXT)GB$
9100 DIM SH_PARM$(300); FIND (Z[6],KEY=X3$(9,3)+"S/H",DOM=*NEXT)SH_PARM$
9120 PERFORM "ARGSCM;MCOMM_DEFAULTS" ! SSP 225300
9190 RETURN 
9500 ! Get the Next Index
9510 GET_NEXT_INDEX:
9520 EXTRACT (Z[17],IND=0)IOL=48240
9530 IF Y[4]=-2 THEN READ (Z[17]); WAIT 0; GOTO 9520
9540 Y[4]=-2; WRITE (Z[17],IND=0)IOL=48240
9550 IF Y[1]<1 THEN A9=Y[2],Y[2]=Y[2]+1; GOTO 9570
9560 A9=Y[1]; READ (Z[17],IND=A9)Y[1]
9570 IF Y[0]<Y[3] AND Y[2]<=Y[3] THEN Y[0]=Y[0]+1,Y[4]=-1 ELSE Y[2]=Y[2]-1; GOTO 9700
9580 WRITE (Z[17],IND=0)IOL=48240
9590 RETURN 
9700 ! END OF LINES
9710 Y[4]=-1; WRITE (Z[17],IND=0)IOL=48240
9720 CALL "ZZEXPF",X3$,X4$,"X"+STR(Z[17])," ",G9; IF G9>0 THEN RETURN 
9730 EXTRACT (Z[17],IND=0)IOL=48240
9740 Z=NUM(FIN(Z[17],"MAXREC")); Y[3]=Z-1
9750 Y[4]=-2; WRITE (Z[17],IND=0)IOL=48240
9760 GOTO 9550
9790 RETURN 
9800 ! Add to the Delete Index
9810 DELETE_INDEX:
9820 EXTRACT (Z[17],IND=0)IOL=48240
9830 IF Y[4]=-2 THEN READ (Z[17]); WAIT 0; GOTO 9820 ELSE Y[4]=-2
9840 WRITE (Z[17],IND=0)IOL=48240
9850 WRITE (Z[17],IND=CURR_IDX)Y[1]
9860 Y[1]=CURR_IDX,Y[4]=-1,Y[0]=Y[0]-1
9870 WRITE (Z[17],IND=0)IOL=48240
9890 RETURN 
9999 END 
10000 ! LINES
10010 GET_INVOICE_LINE:
10013 READ (Z[1],KEY=KEY_1$)IOL=48140
10015 GOSUB CLEAR_LINES; GOSUB CLEAR_LINE_INFO
10020 IF ARB[20]=0 OR ARB[20]=-1 THEN LINE_NUM$="1"; GOSUB GET_NEXT_INDEX; IDX_FLG=1; DIM ART$(290); STAX_CODE_2$=STAX_CODE$; COMM_CODE$=ARB$(128,5); NEXT_ID=INV_TYPE.CTL; REFRESH_FLG=1; RETURN 
10030 READ (Z[17],IND=ARB[20])IOL=48230
10035 INV_LINE_NUM=1; INV_LINE_ARRAY[INV_LINE_NUM]=ARB[20]
10037 CALL "*wingrp;Enable",LINE.GRP$; CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Enable",NEXT_1.GRP$; CALL "*wingrp;Hide",SAVE_1.GRP$
10038 CALL "*wingrp;hide",DEL_LINE.GRP$; CALL "*wingrp;show",DEL_ORD.GRP$
10040 GOSUB LOAD_LINE
10050 IF ART9>0 THEN ART_IDX=ART9; READ (Z[17],IND=ART9)IOL=48230 ELSE RETURN 
10055 INV_LINE_NUM+=1; INV_LINE_ARRAY[INV_LINE_NUM]=ART_IDX
10060 GOSUB LOAD_LINE
10070 GOTO 10050
10090 RETURN 
10100 ! clear lines
10110 CLEAR_LINES:
10115 DIM INV_LINE_ARRAY[999]
10120 FOR ZZ=1 TO 999
10130 LIST_BOX LOAD INV_LINE.CTL,1,*,ERR=10160
10140 NEXT ZZ
10150 GOTO 10170
10160 EXITTO 10170
10170 RETURN 
10175 CLEAR_ORDER_LINES:
10177 FOR ZZ=1 TO 200
10179 LIST_BOX LOAD ORDER_LINE.CTL,1,*,ERR=10185
10180 NEXT ZZ
10183 GOTO 10187
10185 EXITTO 10187
10187 RETURN 
10200 ! Load Invoice Lines
10210 LOAD_LINE:
10213 IF ART$(1,1)="M" AND ART$(7,11)="Backordered" THEN QTY=ART[1]; LIST_BOX LOAD INV_LINE.CTL,0,STR(INV_LINE_NUM)+SEP+ART$(7,40)+SEP+STR(QTY:"###,###,###.00-")+SEP+""+SEP+""+SEP+ART$(1,1); GOTO 10280
10215 IF ART$(1,1)="M" THEN QTY=0; GOTO 10270
10217 ! UNIT$=ART$(50,4); GOSUB UM_PARAM
10220 IF ART[1]=1 THEN QTY=ART[1] ELSE QTY=FN%QTY_IN_UM(ART[1],ART$(50,4),ART[6]) ! IF P4$(20,1)<>"Y" THEN QTY=ART[1]/ART[6] ELSE QTY=ART[1]
10270 IF ART$(1,1)="M" THEN LIST_BOX LOAD INV_LINE.CTL,0,STR(INV_LINE_NUM)+SEP+ART$(7,40)+SEP+""+SEP+""+SEP+ART$(50,4)+SEP+ART$(1,1) ELSE IF ART[2]=0 THEN UP=ART[4] ELSE UP=ART[2] END_IF ; LIST_BOX LOAD INV_LINE.CTL,0,STR(INV_LINE_NUM)+SEP+ART$(7,40)+SEP+STR(QTY:"###,###,###.00-")+SEP+STR(UP:"###,###,###.00-")+SEP+ART$(50,4)+SEP+ART$(1,1)
10280 REFRESH_FLG=1
10290 RETURN 
10300 ! Delete Invoice Line
10310 DEL_INV_LINE:
10315 MSGBOX MSG("DELETE_REC"),MSG("VERIFY"),"?,YESNO",ANS$; IF ANS$="NO" THEN GOTO 10450
10320 CURR_IDX=0; NEXT_IDX=0; PREV_IDX=0
10330 CURR_IDX=INV_LINE_ARRAY[LINE_NUM]; NEXT_IDX=INV_LINE_ARRAY[LINE_NUM+1]
10340 IF NEXT_IDX=0 THEN NEXT_IDX=-1
10350 IF LINE_NUM<>0 THEN PREV_IDX=INV_LINE_ARRAY[LINE_NUM-1]
10360 IF PREV_IDX<>0 THEN {
10370 READ (Z[17],IND=PREV_IDX)IOL=48230
10380 ART9=NEXT_IDX
10390 WRITE (Z[17],IND=PREV_IDX)IOL=48230
10400  } ELSE {
10410 READ (Z[1],KEY=KEY_1$)IOL=48140
10420 ARB[20]=NEXT_IDX
10427 IF %RETAIN_INV THEN %RETAIN_INV=0 ! SSP187260
10430 WRITE (Z[1],KEY=KEY_1$)IOL=48140
10440  }
10450 CALL "*wingrp;hide",DEL_LINE.GRP$; CALL "*wingrp;show",DEL_ORD.GRP$; CALL "*wingrp;enable",ADDLINE.GRP$
10455 GOSUB DELETE_INDEX
10460 GOSUB CLEAR_LINE_INFO
10470 GOSUB GET_INVOICE_LINE
10480 CALL "*wingrp;hide",UPDATE.GRP$
10490 REFRESH_FLG=1
10495 RETURN 
10500 ! Select A/R Invoice Line
10510 SELECT_LINE:
10520 LIST_BOX READ INV_LINE.CTL,IDX
10530 LIST_BOX FIND INV_LINE.CTL,IDX,INV_LINE$
10540 LINE_NUM$=INV_LINE$(1,POS(SEP=INV_LINE$)-1)
10550 LINE_NUM=NUM(LINE_NUM$)
10560 READ (Z[17],IND=INV_LINE_ARRAY[LINE_NUM])IOL=48230
10570 GOSUB LOAD_LINE_INFO
10580 CALL "*wingrp;Disable",LINE.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Show",UPDATE.GRP$; CALL "*wingrp;Disable",ADDLINE.GRP$; CALL "*wingrp;Disable",NEXT_1.GRP$
10583 CALL "*wingrp;hide",DEL_ORD.GRP$; CALL "*wingrp;show",DEL_LINE.GRP$
10585 IF NOT(NUL(ART$(47,3))) THEN CALL "*WINGRP;DISABLE",ORDER.GRP$
10587 IF POS(ORD_TYPE$="RW",1)>0 THEN CALL "*wingrp;Disable",ZERO_C.GRP$
10590 GOSUB LINE_TYPE_PROC
10595 RETURN 
10700 ! This will load the line information
10710 LOAD_LINE_INFO:
10720 LINE_NUM$=STR(LINE_NUM)
10730 LINE_TYPE$=ART$(1,1); INV_LOC_CODE$=ART$(89,4)
10740 ITEM_CODE$=ART$(65,10); TF_DESC$=ART$(7,40)
10750 PROD_CODE$=ART$(3,3)
10760 LEFT_RIGHT$=ART$(93,8); TOP_BOTTOM$=ART$(101,8); PLYS$=ART$(109,2)
10765 UNIT$=ART$(50,4)
10770 PRINT_ON_INV$=ART$(6,1)
10775 QTY=FN%QTY_IN_UM(ART[0],ART$(50,4),ART[6]); QTY_SHIP=FN%QTY_IN_UM(ART[1],ART$(50,4),ART[6]) ! IF P4$(20,1)<>"Y" THEN QTY=ART[0]/ART[6],QTY_SHIP=ART[1]/ART[6] ELSE QTY=ART[0],QTY_SHIP=ART[1]
10780 QTY_PER_UNIT=ART[6]; QTY_ORDERED=QTY; QTY_SHIPPED=QTY_SHIP
10790 UNIT_SELL_PRICE=ART[2]; UNIT_COST=ART[3]
10800 SELL_PRICE_EXT=ART[4]; COST_EXT=ART[5]
10810 COMM_CODE$=ART$(84,5); SALES_DIST_CODE$=ART$(75,9)
10820 ORDER_TYPE$=ART$(111,1); STAX_CODE_2$=ART$(125,10)
10830 GP_ADJ_B4_LOAD=ART[8]; COMM_AMT=ART[7]
10840 TAXABLE$=ART$(54,1)
10860 IF MID(AR4$,32,1)<>"L" THEN CALL "*WINGRP;DISABLE",COMM.GRP$ ELSE CALL "*WINGRP;ENABLE",COMM.GRP$
10870 NEXT_ID=LINE_TYPE.CTL
10880 REFRESH_FLG=1
10890 RETURN 
11000 ! loading lines
11010 LOAD_INV_LINE_INFO:
11020 ART$(1,1)=LINE_TYPE$; ART$(89,4)=INV_LOC_CODE$
11025 ART$(55,10)=CUSTOMER$
11030 ART$(65,10)=ITEM_CODE$; ART$(7,40)=TF_DESC$
11040 ART$(3,3)=PROD_CODE$
11043 ! GOSUB PROD_CODE_INFO
11046 ART$(75,9)=MID(FMP2$,24,9)
11050 ART$(93,8)=LEFT_RIGHT$; ART$(101,8)=TOP_BOTTOM$; ART$(109,2)=PLYS$
11060 ART$(50,4)=UNIT$ ! GOSUB UM_PARAM
11065 IF QTY_ORDERED=1 THEN QTY=QTY_ORDERED ELSE QTY=FN%QTY_IN_UM(QTY_ORDERED,UNIT$,QTY_PER_UNIT) ! QTY_SHIP=FN%QTY_IN_UM(QTY_SHIPPED,UNIT$,QTY_PER_UNIT) ! IF P4$(20,1)<>"Y" THEN QTY=QTY_ORDERED*QTY_PER_UNIT,QTY_SHIP=QTY_SHIPPED*QTY_PER_UNIT ELSE QTY=QTY_ORDERED,QTY_SHIP=QTY_SHIPPED
11067 IF QTY_SHIPPED=1 THEN QTY_SHIP=QTY_SHIPPED ELSE QTY_SHIP=FN%QTY_IN_UM(QTY_SHIPPED,UNIT$,QTY_PER_UNIT) ! IF P4$(20,1)<>"Y" THEN QTY=QTY_ORDERED*QTY_PER_UNIT,QTY_SHIP=QTY_SHIPPED*QTY_PER_UNIT ELSE QTY=QTY_ORDERED,QTY_SHIP=QTY_SHIPPED
11070 ART[6]=QTY_PER_UNIT ! ART[0]=QTY_ORDERED; ART[1]=QTY_SHIPPED
11080 ART[2]=UNIT_SELL_PRICE; ART[3]=UNIT_COST
11090 ART[4]=SELL_PRICE_EXT; ART[5]=COST_EXT
11100 ART$(84,5)=COMM_CODE$; ART$(75,9)=SALES_DIST_CODE$
11110 ART$(111,1)=ORDER_TYPE$; ART$(125,10)=STAX_CODE_2$
11120 ART[8]=GP_ADJ_B4_LOAD; ART[7]=COMM_AMT
11130 ART$(54,1)=TAXABLE$
11140 ART$(6,1)=PRINT_ON_INV$
11190 RETURN 
11200 ! Write the Index Info
11210 WRITE_IDX_INFO:
11220 IF INV_LINE_ARRAY[LINE_NUM]<>0 THEN WRITE (Z[17],IND=INV_LINE_ARRAY[LINE_NUM])IOL=48230
11290 RETURN 
12000 ! Save Invoice Line
12010 SAVE_INV_LINE:
12020 READ (Z[1],KEY=KEY_1$)IOL=48140
12030 IF ARB[20]=0 OR ARB[20]=-1 THEN ARB[20]=A9; WRITE (Z[1],KEY=KEY_1$)IOL=48140; GOTO 12100
12040 READ (Z[17],IND=ARB[20])IOL=48230
12050 IF ART9=-1 OR ART9=0 THEN ART9=A9; IF ARB[20]<>0 THEN WRITE (Z[17],IND=ARB[20])IOL=48230; GOTO 12100
12055 NEXT_IDX=ART9
12060 READ (Z[17],IND=ART9)IOL=48230
12070 IF ART9=-1 OR ART9=0 THEN ART9=A9; IF NEXT_IDX<>0 THEN WRITE (Z[17],IND=NEXT_IDX)IOL=48230; GOTO 12100
12080 GOTO 12055
12100 ! 
12110 GOSUB LOAD_NEW_LINE
12120 ART9=(-1)
12150 IF A9<>0 THEN WRITE (Z[17],IND=A9)IOL=48230
12170 INV_LINE_ARRAY[NUM(LINE_NUM$)]=A9
12180 REFRESH_FLG=1
12190 RETURN 
12200 ! Save Order Line
12210 SAVE_ORD_LINE:
12220 READ (Z[1],KEY=KEY_1$)IOL=48140
12230 IF ARB[20]=0 OR ARB[20]=-1 THEN ARB[20]=A9; WRITE (Z[1],KEY=KEY_1$)IOL=48140; GOTO 12300
12240 READ (Z[17],IND=ARB[20])IOL=48230
12250 IF ART9=-1 OR ART9=0 THEN ART9=A9; IF ARB[20]<>0 THEN WRITE (Z[17],IND=ARB[20])IOL=48230; GOTO 12300
12255 NEXT_IDX=ART9
12260 READ (Z[17],IND=ART9)IOL=48230
12270 IF ART9=-1 OR ART9=0 THEN ART9=A9; IF NEXT_IDX<>0 THEN WRITE (Z[17],IND=NEXT_IDX)IOL=48230; GOTO 12300
12280 GOTO 12255
12300 ! 
12310 GOSUB CREATE_INV_LINE
12320 ART9=(-1)
12350 IF A9<>0 THEN WRITE (Z[17],IND=A9)IOL=48230
12380 REFRESH_FLG=1
12390 RETURN 
12500 ! QTY OREDERED...
12510 QTY_ORDER:
12520 IF POS(LINE_TYPE$="IC")=0 THEN RETURN 
12525 ! GOSUB UM_PARAM
12530 FOR ZZ9=1 TO 11 STEP 2
12535 IF IC0[ZZ9]=0 THEN GOTO 12560
12540 Q_B=FN%QTY_IN_UM(IC0[ZZ9],UNIT$,QTY_PER_UNIT) ! IF P4$(20,1)<>"Y" THEN Q_B=IC0[ZZ9]*QTY_PER_UNIT ELSE Q_B=IC0[ZZ9]
12550 IF QTY_ORDERED>=Q_B THEN UNIT_SELL_PRICE=IC0[ZZ9+1]
12560 NEXT ZZ9
12570 ! IF STP(UNIT$)="M" THEN Q_B=IC0[11]/QTY_PER_UNIT ELSE Q_B=IC0[11]
12580 ! IF IC0[11]<>0 AND QTY_ORDERED>Q_B THEN UNIT_SELL_PRICE=IC0[12]
12590 RETURN 
13000 ! load New Invoice Line
13010 LOAD_NEW_LINE:
13020 DIM ART$(290),ART[48] ! WO 249775
13030 ART$(1,1)=LINE_TYPE$; ART$(89,4)=INV_LOC_CODE$
13040 ART$(65,10)=ITEM_CODE$; ART$(7,40)=TF_DESC$
13045 ART$(54,1)=TAXABLE$
13050 ART$(3,3)=PROD_CODE$
13053 GOSUB PROD_CODE_INFO
13056 ART$(75,9)=MID(FMP2$,24,9)
13060 ART$(93,8)=LEFT_RIGHT$; ART$(101,8)=TOP_BOTTOM$; ART$(109,2)=PLYS$
13070 ART$(50,4)=UNIT$; GOSUB UM_PARAM
13075 IF MID(P4$,20,1)<>"Y" THEN QTY=QTY_ORDERED*QTY_PER_UNIT,QTY_SHIP=QTY_SHIPPED*QTY_PER_UNIT ELSE QTY=QTY_ORDERED,QTY_SHIP=QTY_SHIPPED
13080 ART[6]=QTY_PER_UNIT; ART[0]=QTY; ART[1]=QTY_SHIP
13090 ART[2]=UNIT_SELL_PRICE; ART[3]=UNIT_COST
13100 ART[4]=SELL_PRICE_EXT; ART[5]=COST_EXT
13110 ART$(84,5)=COMM_CODE$; ART$(75,9)=SALES_DIST_CODE$
13120 ART$(111,1)=ORDER_TYPE$; ART$(125,10)=STAX_CODE_2$
13130 ART[8]=GP_ADJ_B4_LOAD; ART[7]=COMM_AMT
13145 ART$(6,1)=PRINT_ON_INV$
13150 ! GOSUB GET_NEXT_INDEX
13190 RETURN 
15000 ! Product Code Information
15010 PROD_CODE_INFO:
15015 IF NUL(PROD_CODE$) THEN NEXT_ID=PROD_CODE.CTL; RETURN 
15020 KEY_14$="T"+PROD_CODE$
15025 DIM FMP2$(100),FMP[4]
15030 READ (Z[14],KEY=KEY_14$,DOM=*RETURN)IOL=48280
15040 SALES_DIST_CODE$=MID(FMP2$,24,9)
15050 ! COMM_CODE$=FMP2$(38,5)
15060 TAXABLE$=MID(FMP2$,23,1)
15080 REFRESH_FLG=1
15100 ! 
15110 S3=POS(LINE_TYPE$="FICNS"); IF S3=0 THEN RETURN 
15120 C3$="*"+LINE_TYPE$+X3$(9,3)+COMM_CODE$
15130 CALL "AR2COM","DEFAULT",C3$,C{ALL},Z[6],0,0
15140 COMM_CODE$=C3$
15150 GOSUB CALC_COMM
15180 REFRESH_FLG=1
15190 RETURN 
15300 ! UNIT OD MEASURE CALCULATION
15310 UM_PARAM:
15320 READ (Z[6],KEY="U/M"+UNIT$,DOM=*RETURN)P4$,P3,P4
15390 RETURN 
15500 ! Base Price Info
15510 QTY_BREAK:
15520 CALL "*wingrp;hide",LINE.GRP$; CALL "*wingrp;show",QTY_B.GRP$
15525 FOR XX9=0 TO 12; LIST_BOX LOAD PRICE_BREAK.CTL,0,*; NEXT XX9
15530 LIST_BOX LOAD PRICE_BREAK.CTL,0,STR(IC0[0]:"###,###,###.00")+SEP+""+SEP+""
15534 ! GOSUB UM_PARAM
15540 FOR ZZ9=1 TO 11 STEP 2
15550 IF IC0[ZZ9]=0 THEN GOTO 15570
15555 IC0[ZZ9]=FN%QTY_IN_UM(IC0[ZZ9],UNIT$,QTY_PER_UNIT) ! IF P4$(20,1)<>"Y" THEN IC0[ZZ9]=IC0[ZZ9]/QTY_PER_UNIT
15560 LIST_BOX LOAD PRICE_BREAK.CTL,0,""+SEP+STR(IC0[ZZ9]:"###,###.00")+SEP+STR(IC0[ZZ9+1]:"###,###,###.00")
15570 NEXT ZZ9
15590 RETURN 
15600 ! Switch List box
15610 SWITCH_LIST_BOX:
15620 CALL "*wingrp;show",LINE.GRP$; CALL "*wingrp;hide",QTY_B.GRP$
15680 REFRESH_FLG=1
15690 RETURN 
15900 ! Calculate Commission Amount
15910 CALC_COMM:
15920 KEY_8$=COMM_CODE$
15930 READ (Z[8],KEY=KEY_8$,DOM=*RETURN)IOL=48200
15940 IF AR4$(32,1)<>"L" THEN COMM_AMT=0; CALL "*WINGRP;DISABLE",COMM.GRP$; RETURN 
15950 IF AR4$(31,1)="T" THEN Q=0; IF POS(LINE_TYPR$="IC")>0 THEN CALL "FM2EXT",Z[6],0,UNIT$,QTY_PER_UNIT,QTY_SHIP,EE9,Q,2 ELSE Q=(COST_EXT-GP_ADJ_B4_LOAD)/.6
15960 X$="  "+ART$(112,4)+"[X3$B]"+X3$+"[X3$E]"+"[A$]"+ARB$+"[B$]"+ART$
15965 CALL "AR2COM",X$,AR4$,AR4{ALL},Q,SELL_PRICE_EXT,COST_EXT-GP_ADJ_B4_LOAD
15970 COMM_AMT=Q
15980 REFRESH_FLG=1
15990 RETURN 
16000 ! Get the Unit of Measure Amount
16010 PROCESS_UM:
16015 IF NUL(UNIT$) THEN NEXT_ID=UNIT.CTL; RETURN 
16020 UNIT$=PAD(UNIT$,4)
16030 GOSUB UM_PARAM
16040 IF STP(UNIT$)="EACH" OR STP(UNIT$)="EA" THEN QTY_PER_UNIT=1; REFRESH_FLG=1; RETURN 
16050 IF MID(P4$,20,1)="Y" THEN {
16060 QTY_PER_UNIT=P3
16070  } ELSE {
16080 CALL "*wingrp;unlock",U_M.GRP$; NEXT_ID=QTY_PER_UNIT.CTL }
16085 REFRESH_FLG=1
16090 RETURN 
17000 ! Update an exsisting line to the listbox
17010 UPDATE_LINE:
17020 IF NUL(LINE_TYPE$) THEN RETURN 
17030 GOSUB LOAD_INV_LINE_INFO
17040 GOSUB WRITE_IDX_INFO
17050 GOSUB CLEAR_LINE_INFO
17060 GOSUB GET_INVOICE_LINE
17070 CALL "*wingrp;hide",UPDATE.GRP$
17080 CALL "*wingrp;enable",ADDLINE.GRP$
17090 CALL "*wingrp;enable",DEL_ORD.GRP$
17095 IF %RETAIN_INV THEN %RETAIN_INV=0
17180 REFRESH_FLG=1
17190 RETURN 
17195 ! ********************************
19000 ! Clear Line Info
19010 CLEAR_LINE_INFO:
19030 LINE_TYPE$=""; INV_LOC_CODE$=""
19040 ITEM_CODE$=""; TF_DESC$=""
19050 PROD_CODE$=""
19060 LEFT_RIGHT$=""; TOP_BOTTOM$=""; PLYS$=""
19070 UNIT$=""
19080 QTY_PER_UNIT=0; QTY_ORDERED=0; QTY_SHIPPED=0
19090 UNIT_SELL_PRICE=0; UNIT_COST=0
19100 SELL_PRICE_EXT=0; COST_EXT=0
19110 COMM_CODE$=""; SALES_DIST_CODE$=""
19120 ORDER_TYPE$=""; STAX_CODE_2$=""
19130 GP_ADJ_B4_LOAD=0; COMM_AMT=0
19140 TAXABLE$=""
19180 REFRESH_FLG=1
19190 RETURN 
19500 ! Calculate Extention Charges
19510 CALC_EXT:
19515 GOSUB UM_PARAM
19517 IF STP(UNIT$)="EACH" OR STP(UNIT$)="EA" THEN P3=1
19518 IF STP(UNIT$)="M" OR STP(UNIT$)="C" THEN QTY=QTY_ORDERED/QTY_PER_UNIT; QTY_SHIP=QTY_SHIPPED/QTY_PER_UNIT; GOTO 19525
19520 ! QTY=FN%QTY_IN_UM(QTY_ORDERED,UNIT$,QTY_PER_UNIT); QTY_SHIP=FN%QTY_IN_UM(QTY_SHIPPED,UNIT$,QTY_PER_UNIT) ! IF P4$(20,1)<>"Y" THEN QTY=QTY_ORDERED/QTY_PER_UNIT,QTY_SHIP=QTY_SHIPPED/QTY_PER_UNIT ELSE QTY=QTY_ORDERED,QTY_SHIP=QTY_SHIPPED
19521 QTY=QTY_ORDERED; QTY_SHIP=QTY_SHIPPED ! IF P4$(20,1)<>"Y" THEN QTY=QTY_ORDERED*QTY_PER_UNIT,QTY_SHIP=QTY_SHIPPED*QTY_PER_UNIT ELSE QTY=QTY_ORDERED,QTY_SHIP=QTY_SHIPPED
19525 IF POS(LINE_TYPE$="SM")<>0 THEN SELL_PRICE_EXT=QTY_SHIP*UNIT_SELL_PRICE; GOTO 19537
19527 IF P3>1 THEN P1=P3 ELSE P1=P4
19530 IF MID(P4$,20,1)<>"Y" THEN IF UNIT_SELL_PRICE*QTY_PER_UNIT=0 THEN SELL_PRICE_EXT=0 ELSE SELL_PRICE_EXT=(QTY_SHIPPED)*UNIT_SELL_PRICE END_IF ELSE IF P3=0 THEN SELL_PRICE_EXT=0 ELSE SELL_PRICE_EXT=(QTY_SHIPPED/P1)*UNIT_SELL_PRICE
19535 ! 
19537 IF POS(LINE_TYPE$="SM")<>0 THEN COST_EXT=QTY_SHIP*UNIT_COST; GOTO 19570
19540 IF MID(P4$,20,1)<>"Y" THEN IF UNIT_COST*QTY_PER_UNIT=0 THEN COST_EXT=0 ELSE COST_EXT=(QTY_SHIPPED)*UNIT_COST END_IF ELSE IF P3=0 THEN COST_EXT=0 ELSE COST_EXT=(QTY_SHIPPED/P1)*UNIT_COST
19570 GOSUB CALC_COMM
19580 REFRESH_FLG=1
19590 RETURN 
20000 ! LINE TYPE PROCESS
20010 LINE_TYPE_PROC:
20020 IF LINE_TYPE$="N" THEN CALL "*WINGRP;DISABLE",FIELDS.GRP$; CALL "*WINGRP;ENABLE",LT_N.GRP$; CALL "*WINGRP;ENABLE",LINE_DESC.GRP$
20030 IF LINE_TYPE$="C" THEN CALL "*wingrp;Hide",LINE_TYPE.GRP$; CALL "*wingrp;show",LINE_CUST.GRP$; CUSTOMER_2$=CUSTOMER$
20040 IF LINE_TYPE$="S" THEN CALL "*WINGRP;ENABLE",LINE_DESC.GRP$; CALL "*WINGRP;ENABLE",ADD_3.GRP$
20050 IF LINE_TYPE$="M" THEN CALL "*wingrp;disable",FIELDS.GRP$; CALL "*wingrp;Enable",LINE_M.GRP$; CALL "*wingrp;ENABLE",LINE_M.GRP$
20060 IF LINE_TYPE$="I" THEN CALL "*wingrp;Enable",LINE_TYPE2.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$
20190 RETURN 
20200 ! Get customer 2 information
20210 CUSTOMER2_INFO:
20220 CALL "ZZWLKU;PARSE_CUST",CUSTOMER_2$,CUST2_DIV$,CUST2_CODE$
20230 CUSTOMER_2$=CUST2_DIV$+CUST2_CODE$
20240 ! MSGBOX MSG("CORRECT"),MSG("VERIFY"),"?,YESNO",ANS$
20250 ! IF ANS$="NO" THEN CUSTOMER_2$=""; NEXT_ID=CUSTOMER_2.CTL; REFRESH_FLG=1; RETURN
20260 CALL "*WINGRP;HIDE",LINE_CUST.GRP$; CALL "*WINGRP;SHOW",LINE_TYPE.GRP$; CALL "*wingrp;Enable",LINE_TYPE2.GRP$; CALL "*WINGRP;ENABLE",FIELDS.GRP$
20270 NEXT_ID=ITEM_CODE.CTL; REFRESH_FLG=1
20290 RETURN 
20500 ! Item Query
20510 ITEM_QUERY:
20515 VAL$=""
20520 IF LINE_TYPE$="I" THEN %ITEM_CUST$="          "; PROCESS "QRY_IC0.1.4","../ICG/IC.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
20530 IF LINE_TYPE$="C" THEN %ITEM_CUST$=CUSTOMER_2$; PROCESS "QRY_IC0.1.4","../ICG/IC.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
20540 IF LINE_TYPE$="F" THEN PROCESS "QRY_FM1_ITEM","../FMG/FM.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
20550 IF LINE_TYPE$="S" THEN PROCESS "QRY_FMPX","../FMG/FM.EN",VAL$; IF NUL(VAL$) THEN RETURN ELSE QRY_VAL$=VAL$
20580 REFRESH_FLG=1
20590 RETURN 
21000 ! ITEM INFORMATION
21010 ITEM_INFO:
21015 IF NUL(ITEM_CODE$) THEN ITEM_CODE$=""; NEXT_ID=ITEM_CODE.CTL; REFRESH_FLG=1; RETURN 
21017 IF LEN(ITEM_CODE$)<10 THEN ITEM_CODE$=PAD(ITEM_CODE$,10,1," ")
21020 IF LINE_TYPE$="I" THEN {
21030 READ (Z[19],KEY="          "+ITEM_CODE$,DOM=INVALID_ITEM)IOL=48250
21040 TF_DESC$=IC0$(21,40); PROD_CODE$=IC0$(61,3)
21050 LEFT_RIGHT$=IC0$(64,8); TOP_BOTTOM$=IC0$(72,8)
21060 PLYS$=IC0$(80,2); UNIT$=IC0$(120,4)
21070 QTY_PER_UNIT=IC0[14]; UNIT_SELL_PRICE=IC0[0]
21075 IF IC0[15]=0 THEN UNIT_COST=0 ELSE UNIT_COST=IC0[18]*IC0[14]/IC0[15]
21080 STAX_CODE$=AR1$(235,10)
21090 GOSUB PROD_CODE_INFO; GOSUB UM_PARAM
21095 GOSUB QTY_BREAK
21100  }
21110 IF LINE_TYPE$="C" THEN {
21120 READ (Z[19],KEY=CUSTOMER_2$+ITEM_CODE$,DOM=INVALID_ITEM)IOL=48250
21130 TF_DESC$=IC0$(21,40); PROD_CODE$=IC0$(61,3)
21140 LEFT_RIGHT$=IC0$(64,8); TOP_BOTTOM$=IC0$(72,8)
21150 PLYS$=IC0$(80,2); UNIT$=IC0$(120,4)
21160 QTY_PER_UNIT=IC0[14]; UNIT_SELL_PRICE=IC0[0]
21165 IF IC0[15]=0 THEN UNIT_COST=0 ELSE UNIT_COST=IC0[18]*IC0[14]/IC0[15]
21170 STAX_CODE$=AR1$(235,10)
21175 GOSUB PROD_CODE_INFO; GOSUB UM_PARAM
21177 GOSUB QTY_BREAK
21180  }
21200 IF LINE_TYPE$="F" THEN {
21210 READ (Z[18],KEY=CUSTOMER$+ITEM_CODE$,DOM=INVALID_ITEM)IOL=48260
21220 TF_DESC$=FM1$(42,40); PROD_CODE$=FM1$(21,3)
21230 LEFT_RIGHT$=FM1$(24,8); TOP_BOTTOM$=FM1$(32,8)
21240 PLYS$=FM1$(40,2); UNIT$=FM1$(100,4)
21250 QTY_PER_UNIT=FM1[4]; UNIT_SELL_PRICE=FM1[3]; UNIT_COST=FM1[1]
21260 STAX_CODE$=AR1$(235,10)
21265 GOSUB PROD_CODE_INFO; GOSUB UM_PARAM
21270  }
21300 IF LINE_TYPE$="S" THEN {
21310 READ (Z[14],KEY="X"+ITEM_CODE$,DOM=INVALID_ITEM)IOL=48270
21320 TF_DESC$=FMP$(12,40); PROD_CODE$=FMP$(52,3)
21330 UNIT$=FMP$(55,4)
21340 QTY_PER_UNIT=FMP[0]; UNIT_SELL_PRICE=FMP[1]; UNIT_COST=FMP[2]
21380 GOSUB PROD_CODE_INFO; GOSUB UM_PARAM
21390  }
21680 REFRESH_FLG=1
21690 RETURN 
21800 ! Invalid Item Code Message
21810 INVALID_ITEM:
21820 MSGBOX MSG("INVA_ITEM"),MSG("INFO"),"!"
21830 ITEM_CODE$=""
21840 NEXT_ID=ITEM_CODE.CTL
21880 REFRESH_FLG=1
21890 RETURN 
25100 ! UPDATE ORDER AS INVOICING IN PROGRESS
25110 INV_IN_PROG:
25120 FS1$(63,1)="Y"
25130 WRITE (Z[10],KEY=KEY_10$)IOL=48290
25190 RETURN 
25200 ! INVOICE IN PROGRESS MESSAGE
25210 INV_PROG_MSG:
25220 MSGBOX MSG("INVO_PROG"),MSG("FYI"),"!"
25290 RETURN 
25300 ! TAX CODE UPDATE
25310 TAX_CODE:
25320 DIM AR5$(400),AR5[15]; FIND (Z[7],KEY=STAX_CODE$,DOM=*NEXT)IOL=48170 ! WO 249775
25330 ST_PERCENT=AR5[0]+AR5[2]+AR5[3]
25390 RETURN 
25600 ! Load Order Information in Invoice Header
25610 LOAD_ORDER_HEADER:
25615 CALL "FM2ODO",ERR=*PROCEED,X3$,X4$,ORDER$,OTHER$ ! DBD-270-SSP307450"
25620 INV_TYPE$="I"
25630 COMM_CODE$=FS1$(97,5); TERMS_CODE$=FS1$(87,2); STAX_CODE$=FS1$(76,10)
25640 SPER_CODE$=FS1$(93,4); SPER_CODE_2$=FS1$(102,4); SPER_CODE_3$=FS1$(106,4)
25650 SPER_CODE_4$=FS1$(110,4); SPER_CODE_5$=FS1$(114,4); TAXABLE$=FS1$(86,1)
25655 IF FS1$(86,1)="Y" THEN TAX_EXEMPT$="N" ELSE TAX_EXEMPT$="Y"
25660 COMM_AMT_1=FS1[1]; COMM_AMT_2=FS1[2]; COMM_AMT_3=FS1[3]; COMM_AMT_4=FS1[4]; COMM_AMT_5=FS1[5],FRT_AMT=FS1[8]+FS1[10],ORD_AMT=FS1[6],ORD_COST=FS1[7]
25670 CUST_PO$=FS1$(28,15)
25680 INV_DATE$=%X3_TODAY$; SHIP_DATE$=%SHIP_DATE$
25690 GOSUB GET_SUMM_BILL_ORD
25691 IF CHK_SB$="Y" THEN IF STP(MID(FS1$,373,1),2)<>"" THEN SUMMARY_BILL$=FS1$(373,1) ! WO 255959   
25693 REM IF SUMMARY_BILL$="Y" THEN PRINT_INV$="N" ELSE PRINT_INV$="Y"
25695 DIM PO3$(300); READ (Z[4],KEY=ORDER$+"    ",DOM=*NEXT)IOL=48180; GOSUB CHECK_D_REC ! DONT FORGET TO ADD THE GOTO TO THE CORRECT LINE
25697 READ (Z[4],END=25710)IOL=48180; IF PO3$(166,8)<>ORDER$ THEN GOTO 25710
25700 LOC_CODE$=PO3$(12,4); LOC_ADDR_1$=PO3$(46,30); LOC_ADDR_2$=PO3$(76,30); LOC_CITY$=PO3$(106,16); LOC_ST$=PO3$(122,2); LOC_ZIP_CODE$=PO3$(124,9)
25702 SHIP_VIA_CODE$=PO3$(150,1); SHIP_VIA_DESC$=PO3$(210,15); LOC_DESC$=PO3$(225,35); FOB_PT$=PO3$(133,1)
25704 IF NOT(NUL(PO3$(269,10))) THEN STAX_CODE$=PO3$(269,10)
25706 ! 
25715 ORD_FLG=2
25790 RETURN 
25800 ! CHECKING FOR 'D' TYPE RECORD
25810 CHECK_D_REC:
25820 READ (Z[4],KEY=ORDER$+"    ",DOM=*NEXT)
25830 READ (Z[4],END=25850)IOL=48180; IF PO3$(166,8)<>ORDER$ THEN GOTO 25850
25840 IF PO3$(11,1)<>"D" THEN GOTO 25830
25850 IF PO3$(11,1)<>"D" OR PO3$(166,8)<>ORDER$ THEN READ (Z[4],KEY=ORDER$+"    ")IOL=48180 ELSE PO3$(12,4)="M"
25860 RETURN 
26000 ! LIST ORDER LINES
26010 LIST_ORDER_LINE:
26020 LOT_FRT=0
26035 GOSUB CLEAR_ORDER_LINES; SSP_FLG=0
26040 READ (Z[20],KEY=ORDER$,DOM=*NEXT)
26050 KEY_20$=KEY(Z[20],END=26180); READ (Z[20])IOL=48300
26060 IF KEY_20$(1,8)<>ORDER$ THEN GOTO 26180
26063 BL$=""
26065 IF POS("I"=FS2$(156,5))=0 AND FS2[6]=0 THEN BL$='SF'+'_YELLOW' ELSE IF FS2$(155,1)="M" THEN BL$='F4' ELSE BL$=""
26067 UNIT$=FS2$(124,4); GOSUB UM_PARAM
26070 BN$="NO"; DIM FS3$(50),FS3[9]; READ (Z[26],KEY=INV_NUM$+KEY_20$+" ",DOM=*NEXT)IOL=48310; BN$="YES"; LOT_FRT+=FS2[17]
26072 IF FS2$(18,1)="Y" THEN SSP$="YES",SSP_FLG=1 ELSE SSP$="NO"
26073 IF FS2$(155,1)="M" THEN ORD_Q=0; BN$="YES"; GOTO 26080
26075 QTY_AMT=FS2[0] ! IF FS2[7]<>0 THEN QTY_AMT=FS2[7] ELSE QTY_AMT=FS2[0]
26077 ORD_2=FN%QTY_IN_UM(QTY_AMT,FS2$(124,4),FS2[5]) ! IF P0$(20,1)<>"Y" THEN ORD_Q=QTY_AMT/FS2[5] ELSE ORD_Q=QTY_AMT
26078 IF P0$(20,1)<>"Y" THEN ORD_Q=QTY_AMT/FS2[5] ELSE ORD_Q=QTY_AMT
26080 IF FS2$(155,1)="M" THEN LIST_BOX LOAD ORDER_LINE.CTL,0,BL$+BN$+SEP+BL$+FS2$(6,3)+SEP+BL$+FS2$(19,10)+SEP+BL$+FS2$(50,40)+SEP+BL$+""+SEP+BL$+""+SEP+BL$+""+SEP+BL$+""+SEP+BL$+SSP$ ELSE LIST_BOX LOAD ORDER_LINE.CTL,0,BL$+BN$+SEP+BL$+FS2$(6,3)+SEP+BL$+FS2$(19,10)+SEP+BL$+FS2$(50,40)+SEP+BL$+STR(ORD_2:"##,###,###.00-")+SEP+BL$+STR(FS2[4]:"##,###,###.00-")+SEP+BL$+STR(FS2[6]:"###,###,###.00-")+SEP+BL$+STR(FS2[8]:"##,###,###.00")+SEP+BL$+SSP$
26090 GOTO 26050
26180 NEXT_ID=NEXT_1.CTL
26190 RETURN 
26200 ! PROCESS ORDER LINES
26210 SEL_ORD_LINE:
26220 LIST_BOX READ ORDER_LINE.CTL,IDX
26230 LIST_BOX FIND ORDER_LINE.CTL,IDX,ORDER_LINES$
26235 XX=POS($1B53461B4236$=ORD_HEAD$); IF XX<>0 THEN ORD_HEAD$=ORD_HEAD$(1,XX-1)+ORD_HEAD$(XX+6); GOTO 2935
26240 COMP_STAT$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1); ORDER_LINES$=ORDER_LINES$(POS(SEP=ORDER_LINES$)+1)
26250 ORD_LIN_NUM$=ORDER_LINES$(1,POS(SEP=ORDER_LINES$)-1)
26260 PROCESS "ARGEAC.5","../ARG/AR.EN",ORDER$,ORD_LIN_NUM$,STR(Z[20]),CUSTOMER$,INV_DATE$,STR(Z[26]),INV_NUM$,CR_FY$,CR_ACCTPD$,SHIP_DATE$,COMP_STAT$
26290 GOSUB LIST_ORDER_LINE
26295 RETURN 
26300 ! ORDER LINE BILL NOW
26310 UPDATE_ORDER_LINE:
26315 DIM FS2[29]
26320 ORDER_NUM$=ARG_1$; ORDER_LINE$=ARG_2$; Z20=NUM(ARG_3$); COMP_STAT$=ARG_11$; INV_NUMBER$=ARG_7$; Z26=NUM(ARG_6$)
26330 READ (Z20,KEY=ORDER_NUM$+MID(STP(ORDER_LINE$,3),-3),DOM=*RETURN)IOL=48300
26340 CUSTOMER$=ARG_4$; INV_DATE$=ARG_5$; ORDER$=FS2$(147,8)
26350 LINE_NUMBER$=ORDER_LINE$
26355 BILL_NOW$=COMP_STAT$(1,1)
26360 TF_ITEM$=FS2$(19,10); I_DESC$=FS2$(50,40)
26370 PLANT_CODE$=FS2$(90,4)
26380 LEFT_RIGHT$=FS2$(32,8); TOP_BOTTOM$=FS2$(40,8); PLYS$=FS2$(48,2)
26390 QTY_ORD=FS2[10]; QTY_OPEN=FN%QTY_IN_UM(FS2[0],FS2$(124,4),FS2[5])
26400 SELL_PRICE=FS2[4]; PRICE_EXT=FS2[6]; EXT_COST=FS2[3]
26410 U_M$=FS2$(124,4); UM_QTY=FS2[5]
26415 BACK_ORD=FS2[8]
26420 IF FS2[0]<>0 THEN PRINT_ON_INV$="Y" ELSE PRINT_ON_INV$="N"
26450 JOB_NUM$=FS2$(171,12)
26470 IF BILL_NOW$="Y" THEN CALL "*wingrp;Enable",INT_MOD.GRP$ ELSE CALL "*wingrp;Disable",INT_MOD.GRP$
26480 REFRESH_FLG=1
26490 RETURN 
26500 ! SAVE ORDER LINE INFORMATION
26510 SAVE_ORD_LINE_INFO:
26520 IF BILL_NOW$="Y" THEN GOSUB CREATE_INT_REC ELSE GOSUB REMOVE_INT_REC
26590 RETURN 
26600 ! Add an Order Line
26610 ADD_ORD_LINE:
26620 PROCESS "FMGODB","../OPG/OP.EN",(ORDER$)
26680 GOSUB BILL_NOW_INT
26690 GOTO 26000
26700 ! BILL AND INTERFACE RECORD
26710 BILL_NOW_INT:
26725 Q1$="#"+PAD(%FY$+%AP$,6)+PAD(INV_NUM$,8)+PAD(INV_DATE$,6)+PAD(ORDER$,8); CALL "ARGEAU",(X3$),(X4$),"GUI",Q1$,"",""
26730 CALL "ZZGMSG","D","",""
26735 GOSUB LIST_ORDER_LINE
26795 RETURN 
26799 ! *************************************************************
26800 ! CREATE ADD FS3 RECORD
26810 CREATE_INT_REC:
26815 DIM FS3$(50),FS3[8]
26820 Z26=NUM(ARG_6$); INV_NUMBER$=ARG_7$
26830 FS3$(1)=INV_NUMBER$+ORDER_NUM$+MID(STP(ORDER_LINE$,3),-3)+" "+INV_DATE$
26835 FS3$(27,4)="    "
26840 FS3$(31,4)=ARG_7$; FS3$(35,2)=ARG_8$
26845 FS3$(40,6)=ARG_9$
26850 UNIT$=FS2$(124,4)
26855 FS3[0]=FS2[0]; FS3[1]=FS2[4]; FS3[2]=FS2[6]; FS3[3]=FS2[8]; FS3[4]=FS2[3]
26860 KEY_26$=INV_NUMBER$+ORDER_NUM$+MID(STP(ORDER_LINE$,3),-3)+" "
26875 READ (Z26,KEY=KEY_26$,DOM=*NEXT); RETURN 
26880 WRITE (Z26,KEY=KEY_26$)IOL=48310
26890 RETURN 
26900 ! REMOVE FS3 RECORD
26910 REMOVE_INT_REC:
26920 Z26=NUM(ARG_6$); INV_NUMBER$=ARG_7$
26930 KEY_26$=INV_NUMBER$+ORDER_NUM$+MID(STP(ORDER_LINE$,3),-3)+" "
26940 READ (Z26,KEY=KEY_26$,DOM=*RETURN)
26950 REMOVE (Z26,KEY=KEY_26$)
26990 RETURN 
27000 ! CREATE AR INVOICE LINES FROM THE ORDER LINES...
27010 CREATE_INV_LINE:
27030 DIM ART$(290),ART[48] ! WO 249775
27040 IF FS2$(155,1)="C" OR FS2$(14,1)="Y" THEN ART$(1,1)="F" ELSE ART$(1,1)=FS2$(155,1)
27042 ART$(3,3)=FS2$(29,3)
27043 PROD_CODE$=FS2$(29,3); GOSUB PROD_CODE_INFO
27046 ART$(75,9)=MID(FMP2$,24,9)
27050 IF FS3[2]=0 AND POS("I"=FS2$(156,5))=0 OR (FS2$(50,1)="/" AND ART$(1,1)="M") THEN ART$(6,1)="N" ELSE ART$(6,1)="Y"
27060 ART$(7,40)=FS2$(50,40); ART$(47,3)=FS2$(6,3)
27066 Z[2]=Z2_SAVE
27070 ART$(50,4)=FS2$(124,4); ART$(54,1)=FS2$(136,1)
27075 IF FS2$(155,1)="C" THEN ART$(55,20)=FS2$(161,10)+FS2$(19,10) ELSE IF FS2$(14,1)="Y" THEN ART$(55,20)=FS1$(6,10)+FS2$(19,10) ELSE ART$(55,20)=DIM(10)+FS2$(19,10)
27080 ART$(65,10)=FS2$(19,10),ART$(84,5)=FS2$(128,5)
27090 ART$(89,4)=FS2$(90,4); ART$(93,8)=FS2$(32,8)
27100 ART$(101,8)=FS2$(40,8); ART$(109,2)=FS2$(48,2)
27110 ART$(116,9)=FS2$(205,9); ART$(125,10)=STAX_CODE$
27120 ART$(135,1)=FS2$(18,1)
27130 IF FS2[8]<>0 THEN ART[0]=FS2[8] ELSE ART[0]=FS2[0]
27135 IF FS2[8]<>0 THEN ART[1]=FS3[3] ELSE ART[1]=FS3[0]
27140 ART[2]=FS3[1]; ART[3]=FS2[1]
27150 ART[4]=FS3[2]; ART[5]=FS3[4]
27155 ART[6]=FS2[5]
27160 JOB_NUM$=FS2$(171,12)
27165 IF ART[1]<>0 THEN ART$(6,1)="Y" ELSE ART$(6,1)="N"
27190 RETURN 
27200 ! CHECK IF ITEM BECAME LOTTED AFTER O/E
27210 CHECK_LOTTED:
27220 IF I0$(44,1)<>"Y" OR POS(FS2$(155,1)="IC")=0 OR FS2$(2,1)="Y" OR FS2$(9,1)<>" " THEN RETURN 
27230 FIND (Z[27],KEY=FS2$(161,10)+FS2$(19,10),DOM=*RETURN)XX$
27240 IF XX$(112,1)<>"Y" THEN RETURN 
27260 FS2$(2,1)="Y"; WRITE (Z[20],KEY=KEY_20$)IOL=48300
27290 RETURN 
27300 ! CHECK IF ORDER LINE SHOLD BE INVOICED
27310 INV_NOW_CHECK:
27320 BILL_NOW$="Y"
27325 IF FS2$(155,1)="M" THEN RETURN 
27330 IF MID(SH_PARM$,204,1)<>"Y" OR FS2$(9,1)=" " THEN RETURN 
27340 IF FS2[7]=0 AND FS2[19]=0 THEN BILL_NOW$="N"; RETURN 
27390 RETURN 
27400 ! LOAD ORDER INTERFACE FILE
27410 LOAD_INT_REC:
27420 DIM FS3$(50),FS3[9]
27430 FS3$(1)=INV_NUM$+KEY_20$+" "; FS3$(21,6)=INV_DATE$
27440 IF FS2$(155,1)="M" THEN RETURN 
27460 GOSUB SET_UM_DIV
27470 FS3$(27,4)="    "
27480 FS3$(31,4)=CR_FY$; FS3$(35,2)=CR_ACCTPD$
27490 FS3$(40,6)=SHIP_DATE$
27500 QTY_AMT=FS2[0] ! IF FS2[7]<>0 THEN QTY_AMT=FS2[7] ELSE QTY_AMT=FS2[0]
27510 FS3[0]=QTY_AMT; FS3[1]=FS2[4]
27520 UNIT$=FS2$(124,4); GOSUB UM_PARAM
27530 IF P0$(20,1)<>"Y" THEN ORD_Q=QTY_AMT/FS2[5] ELSE ORD_Q=QTY_AMT
27540 FS3[2]=FS2[6]; FS3[3]=FS2[8]; FS3[4]=ORD_Q*FS2[1]
27570 KEY_26$=INV_NUM$+KEY_20$+" "
27580 READ (Z[26],KEY=KEY_26$,DOM=*NEXT); RETURN 
27590 WRITE (Z[26],KEY=KEY_26$)IOL=48310
27595 RETURN 
27599 ! ***********************************************
27600 RETURN 
27800 ! SET UNIT OF MEASURE DIVIDER
27810 SET_UM_DIV:
27820 DIM MM$(21),MM[1]
27830 READ (Z[6],KEY="U/M"+FS2$(124,4),DOM=*NEXT)MM$,MM[0],MM[1]
27840 IF MM$(20,1)="Y" THEN M=MM[1] ELSE M=FS2[5]
27850 IF M=0 THEN M=1
27860 M0=M; IF MM[0]<>0 THEN M0=MM[0]
27870 D9$=FS2$(124,4)+"/"+STR(M0:"##,##0")
27880 DIM N$(21); FIND (Z[6],KEY="U/M"+FS2$(120,4),DOM=*RETURN)N$
27890 RETURN 
27900 ! Load the order info
27910 SAVE_ORDER_INFO:
27915 REM GOSUB SPECIAL_SHIP
27920 OLD_Z1$=PTH(Z[1])
27930 Q1$=PAD(ARB$(1,6),6)+INV_NUM$; CALL "AR2EAT",(X3$),(X4$),"GUI",Q1$,"",""
27932 IF PTH(Z[1])<>OLD_Z1$ THEN CLOSE (Z[1]); OPEN (Z[1],IOL=*)OLD_Z1$; REM 189013
27935 READ (Z[1],KEY=KEY_1$)IOL=48140 ! Reload values here
27945 RETURN 
27949 ! **************************************************
27950 ! Unused for now
27955 IF ORD_LINE THEN RETURN 
27957 READ (Z[20],KEY=ORDER$,DOM=*NEXT)
27959 KEY_20$=KEY(Z[20],END=*RETURN); READ (Z[20])IOL=48300
27961 IF KEY_20$(1,8)<>ORDER$ THEN RETURN 
27963 IF FS2$(155,1)="M" THEN GOTO 27967
27965 READ (Z[26],KEY=INV_NUM$+KEY_20$+" ",DOM=27959)
27967 IF IDX_FLG THEN IDX_FLG=0 ELSE GOSUB GET_NEXT_INDEX
27969 GOSUB CREATE_INV_LINE
27971 GOSUB SAVE_ORD_LINE
27973 GOTO 27959
27990 RETURN 
27999 ! **************************************************
28000 ! Bill Order Complete
28010 BILL_COMPLETE:
28020 Q1$="#"+PAD(CR_FY$+CR_ACCTPD$,6)+PAD(INV_NUM$,8)+PAD(INV_DATE$,6)+PAD(ORD$,8); CALL "ARGEAU",(X3$),(X4$),"",Q1$,"","" ! Add B to say bill complete
28021 REM Q1$="#"+PAD(%FY$+%AP$,6)+PAD(INV_NUM$,8)+PAD(INV_DATE$,6)+PAD(ORD$,8); CALL "ARGEAU",(X3$),(X4$),"GUIB",Q1$,"","" ! Add B to say bill complete
28024 PO3=Z[4],FS3=Z[26],FS2=Z[20],ZZPARM=Z[6],EDV=Z[28]
28025 CALL "UPDFS3;CREATE_SPEC_FROM_PO3",PO3,FS3,FS2,ZZPARM,EDV,X3$,X4$,ORD$,INV_NUM$,INV_DATE$
28027 READ (FS3,KEY=INV_NUM$+ORD$,DOM=*NEXT)
28028 OK_INV=0; KYFS3$=KEY(FS3,END=28045); IF KYFS3$(1,16)=INV_NUM$+ORD$ THEN OK_INV=1 ! If no fs3 records bypass ! SSP192797
28030 IF OK_INV THEN GOSUB SAVE_ORDER_INFO ! Save to ART
28045 RETURN 
28049 ! ***********************************
28055 ! UNUSED TO 28090
28057 READ (Z[20],KEY=ORDER$,DOM=*NEXT)
28059 KEY_20$=KEY(Z[20],END=*RETURN); READ (Z[20])IOL=48300
28061 IF KEY_20$(1,8)<>ORDER$ THEN RETURN 
28063 IF FS2$(3,1)<>"Y" THEN FS2$(3,1)="Y"; WRITE (Z[20],KEY=KEY_20$)IOL=48300
28065 IF IDX_FLG THEN IDX_FLG=0 ELSE GOSUB GET_NEXT_INDEX
28067 GOSUB CREATE_INV_LINE
28069 GOSUB SAVE_ORD_LINE
28071 GOTO 28059
28090 RETURN 
28200 ! Change order amount in Order Interface
28205 ORD_QTY_UPDATE:
28210 QTY=FN%QTY_IN_UM(QTY_OPEN,FS2$(124,4),FS2[5])
28215 IF POS(STP(FS2$(124,4))="MC")<>0 THEN QTY_OP=QTY_OPEN/FS2[5] ELSE QTY_OP=QTY_OPEN
28220 PRICE_EXT=QTY_OP*SELL_PRICE
28225 FS2[10]=QTY_OPEN; FS2[0]=QTY_OPEN; FS2[6]=PRICE_EXT
28230 WRITE (Z20,KEY=ORDER_NUM$+MID(STP(ORDER_LINE$,3),-3))IOL=48300
28235 KEY_26$=INV_NUMBER$+ORDER_NUM$+MID(STP(ORDER_LINE$,3),-3)+" "
28240 DIM FS3[8]; READ (Z26,KEY=KEY_26$,DOM=28285)IOL=48310
28245 FS3[0]=QTY_OPEN; FS3[2]=PRICE_EXT
28250 WRITE (Z26,KEY=KEY_26$)IOL=48310
28285 REFRESH_FLG=1
28290 RETURN 
28300 ! Sell Price Update in the Interface
28305 SELL_PRICE_UPDATE:
28310 FS2[4]=SELL_PRICE
28315 IF POS(STP(FS2$(124,4))="MC")<>0 THEN QTY_OP=QTY_OPEN/FS2[5] ELSE QTY_OP=QTY_OPEN
28320 PRICE_EXT=QTY_OP*SELL_PRICE
28325 FS2[6]=PRICE_EXT
28330 WRITE (Z20,KEY=ORDER_NUM$+MID(STP(ORDER_LINE$,3),-3))IOL=48300
28335 KEY_26$=INV_NUMBER$+ORDER_NUM$+MID(STP(ORDER_LINE$,3),-3)+" "
28340 DIM FS3[8]; READ (Z26,KEY=KEY_26$,DOM=28385)IOL=48310
28345 FS3[1]=SELL_PRICE; FS3[2]=PRICE_EXT
28350 WRITE (Z26,KEY=KEY_26$)IOL=48310
28385 REFRESH_FLG=1
28390 RETURN 
28500 ! CHECK FOR SPECIAL SHIPPING
28510 SPECIAL_SHIP:
28520 KEY_20$=ORDER$
28530 READ (Z[20],KEY=KEY_20$,DOM=*NEXT)
28540 KEY_20$=KEY(Z[20],END=*RETURN); READ (Z[20],KEY=KEY_20$)IOL=48300
28550 IF KEY_20$(1,8)<>ORDER$ THEN RETURN 
28560 IF FS2$(18,1)="Y" THEN PROCESS "FMGODD","../FMG/FM.EN",X3$,X4$,"",INV_NUM$+ORDER$+FS2$(6,3)+" "+INV_DATE$+AP_INV_NUM$
28580 GOTO 28540
28590 RETURN 
29000 ! SAVE NEW LINE
29010 SAVE_ROUTINE:
29015 GOSUB CHECK_PRICE; IF PRICE_FLG THEN RETURN 
29020 GOSUB LOAD_NEW_LINE
29025 IF IDX_FLG THEN IDX_FLG=0 ELSE GOSUB GET_NEXT_INDEX
29030 GOSUB SAVE_INV_LINE
29032 GOSUB SWITCH_LIST_BOX
29035 INV_LINE_NUM=NUM(LINE_NUM$)
29040 GOSUB LOAD_LINE
29050 GOSUB CLEAR_LINE_INFO
29060 LINE_NUM=NUM(LINE_NUM$)+1; LINE_NUM$=STR(LINE_NUM)
29070 NEXT_ID=LINE_TYPE.CTL
29075 CALL "*WINGRP;ENABLE",NEXT_1.GRP$; CALL "*WINGRP;HIDE",SAVE_1.GRP$; CALL "*WINGRP;ENABLE",ADDLINE.GRP$
29080 CALL "*WINGRP;ENABLE",LINE.GRP$; CALL "*WINGRP;DISABLE",FIELDS.GRP$
29085 CALL "*wingrp;enable",ADDLINE.GRP$; CALL "*wingrp;enable",DEL_ORD.GRP$
29090 RETURN 
29500 ! Price Check
29510 CHECK_PRICE:
29515 PRICE_FLG=0
29517 IF LINE_TYPE$="M" OR MID(INV_LOC_CODE$,1,1)="9" THEN RETURN 
29520 IF ABS(SELL_PRICE_EXT)<ABS(COST_EXT) THEN {
29530 MSGBOX MSG("PRICE_LESS")+SEP+MSG("WANT_MOD"),MSG("WARNING"),"!,YesNo",ANS$
29540 IF ANS$="YES" THEN NEXT_ID=UNIT_SELL_PRICE.CTL; PRICE_FLG=1; RETURN 
29550  }
29560 IF ABS(UNIT_SELL_PRICE)<=0 THEN {
29570 MSGBOX MSG("PRICE_ZERO")+SEP+MSG("WANT_MOD"),MSG("WARNING"),"!,YesNo",ANS$
29580 IF ANS$="YES" THEN NEXT_ID=UNIT_SELL_PRICE.CTL; PRICE_FLG=1; RETURN 
29590  }
29690 RETURN 
30000 ! Summary Page....
30005 LOAD_SUMMARY:
30015 REM CALL "ZZGMSG","C",MSG("ARGEAA_04",INV_NUM$),""
30020 CALL "ARGEAL.1",(X3$),(X4$),(KEY_1$),ARB$,ARB{ALL},0,Z{ALL}
30025 REM CALL "ZZGMSG","U",MSG("ARGEAA_05",INV_NUM$),""
30030 DIM T[100]; CALL "ARGEAD",(X3$),(X4$),(KEY_1$),ARB$,ARB{ALL},0,"",T9$,T{ALL} ! 175839 ; CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
30035 GOSUB OPEN_FILES
30040 READ DATA FROM REC(IOL=48140) TO IOL=IOL(Z[1])
30060 GOSUB RECALC_FIELDS
30085 CALL "ZZGMSG","D","",""
30087 GOSUB COMM_FLD
30095 RETURN 
30099 ! *******************************************************
30400 RECALC_FIELDS:REM "Set sales tax values, calc totals, set disc & display
30410 DIM ARB$(415),ARB[30]; READ DATA FROM REC(IOL(Z[1])) TO IOL=48140
30420 CALL "AR2EAR",X3$,X4$,4,ARB$,ARB{ALL},G$,G{ALL},H$,H{ALL},I$,Z1$,S0,Z{ALL},T9{ALL},P2$,M3$,K9; S0=0
30425 IF ARB$(115,1)="Y" THEN ARB[9]=ARB[1]+ARB[2] ELSE ARB[9]=ARB[1]+ARB[2]+ARB[4]+ARB[6]+ARB[8]
30430 GOSUB CALC_DUE_DATE
30435 IF E$(43,1)<>" " THEN ARB[10]=(ARB[1]-ARB[17])*E[0]*.01 ELSE ARB[10]=0
30440 READ DATA FROM REC(IOL=48140) TO IOL=IOL(Z[1])
30442 GOSUB DO_CALC_FIELDS
30443 REFRESH_FLG=1
30445 RETURN 
30449 ! *************************************
30450 CALC_DUE_DATE:
30455 IF MID(E$,1,2)<>ARB$(65,2) THEN DIM E$(54),E[3]; FIND (Z[5],KEY=ARB$(65,2),DOM=30458)IOL=48160; E$=AR2$; E[0]=AR2[0]; E[1]=AR2[1]; E[2]=AR2[2]
30460 CALL "ZZDISC",X3$,E$,0,0,ARB$(86,6),Q0$,Q1$,0,0
30465 ARB$(116,6)=Q0$; IF E$(43,1)<>" " THEN ARB$(122,6)=Q1$ ELSE ARB$(122,6)=""
30470 INV_DUE_DATE$=ARB$(116,6); DISC_DUE_DAY$=ARB$(122,6)
30495 RETURN 
30499 ! ************************************
30500 DO_CALC_FIELDS:! calculate display fields from real fiedls
30520 TOTAL_STAX=ARB[4]+ARB[6]+ARB[8]; IF TAX_EXEMPT$="Y" THEN INV_TOTAL=NET_SALE+FRT_BILLED ELSE INV_TOTAL=NET_SALE+TOTAL_STAX+FRT_BILLED
30530 TOT_GP_ADJ=ARB[19]
30550 GROSS_PROFIT=NET_SALE-COST,ADJUSTED_GP=GROSS_PROFIT+TOT_GO_ADJ; IF NET_SALE=0 THEN GP_PERCENT=0 ELSE GP_PERCENT=GROSS_PROFIT*100/NET_SALE
30560 DISC_AMT=ARB[10]
30590 REFRESH_FLG=1
30595 RETURN 
30599 ! ***************************
30600 CALC_GP_ADJ:! Calculate Total Gross Profit Adjustment
30695 RETURN 
30699 ! ************************************
30700 ! LOAD FREIGHT BILL AMOUNT
30710 SET_FREIGHT:
30730 ARB[2]=FRT_BILLED; FRT_AMT=FRT_BILLED
30775 GOSUB LOAD_SUMMARY
30780 FRT_BILLED=ARB[2],COSTED_FRT=ARB[17]
30785 WRITE (Z[1],KEY=KEY_1$)IOL=48140
30790 REFRESH_FLG=1
30795 RETURN 
30799 ! **********************************
30800 ! Commission Field Access
30810 COMM_FLD:
30820 KEY_8$=COMM_CODE$
30830 READ (Z[8],KEY=KEY_8$,DOM=*RETURN)IOL=48200
30840 IF AR4$(32,1)<>"I" THEN RETURN 
30845 PERFORM "ARGEAA;CHECK_LOAD" ! SSP 307216
30850 CALL "*wingrp;Unlock",COMM_1.GRP$
30890 RETURN 
30895 ! *********************************
30900 ! Replace Total Commission Amount
30910 COMM_TOTAL:
30930 IF TOTAL_COMM<>0 THEN ARB[18]=TOTAL_COMM
30990 RETURN 
31100 ! SHOW REPLACEMENT AFTER THE SUMMARY SCREEN
31110 SUMM_EXIT:
31120 IF AR2[1]>1 THEN {
31130 CALL "ARGEAG",X3$,X4$,"",ARB$(1,14),ARB[9],ARB[10],ARB$(116,6),ARB$(122,6),AR2$,AR2[0],AR2[1],AR2[2]
31140  } ELSE {
31150 REMOVE (Z[11],KEY=ARB$(1,14),DOM=*NEXT)
31155  }
31160 REPLACEMENT_SCRN$="ARGEAC.4"
31180 REFRESH_FLG=1
31190 RETURN 
37000 ! Process General Ledger
37010 PROCESS_GL:
37015 ! GOSUB SETUP_ACCT
37020 L0=1,A5=0
37030 X3$(15,6)=ARB$(86,6),L0=1,F=Z[21],A0=ARB[0],V1=0,V9=-2,V3=Z[22],T[0]=NET_SALE
37035 NO_GL=1; NEG_VAL=1
37040 IF ARB[20]>0 THEN T[0]=NET_SALE
37050 CALL "ZZDISP","AX","000000000000","G/L",X3$,W2$,"",0,0,X4$
37055 M2=0; FOR X=1 TO LEN(W2$); M2=M2+POS("0"=W2$(X,1)); NEXT X
37060 IF LEN(T9$)>=12 THEN CALL "GL2XAB",X3$,T9$,T{ALL},V9$,F,A0; ARB[0]=A0
37065 PERFORM "GLGXAA"
37070 ARB[0]=A0
37090 GOSUB WRITE_REC
37190 RETURN 
37200 ! DIGIT REPLACEMENT
37210 DIGIT_REPL:
37220 G8=NUM(G0$(170,2)); DIM M$(223); M$=FM0$
37230 IF J9=1 THEN J9=0; GOTO 37330
37240 IF G8<=0 THEN GOTO 37280
37250 REM "Division subsitition - OR - Salesperson
37260 IF POS(P0$(121,1)="DN")>0 AND Q$(202,G8)=Q0$(G8,2) THEN Q0$(G8,2)="00"
37270 IF P0$(13,1)="Y" THEN Q0$(G8,2)=ARB$(15,2) ELSE IF P0$(13,1)="S" AND NUM(A$(135,2),ERR=37270)>=0 THEN Q0$(G8,2)=STR(NUM(ARB$(135,2)):"00")
37280 IF P0$(13,1)<>"S" AND P0$(110,2)>"00" AND NUM(ARB$(135,2),ERR=37290)>=0 THEN Q0$(NUM(P0$(110,2),ERR=37270),2)=STR(NUM(ARB$(135,2)):"00")
37290 IF POS(P0$(121,1)="D")>0 AND Q$(202,G8-1)=Q0$(1,G8-1) THEN Q0$(NUM(P0$(110,2),ERR=37320),2)="00"
37300 IF Q$(202,G8-1)=Q0$(1,G8-1) AND P0$(13,1)="Y" AND P0$(121,1)="D" THEN Q0$(G8,2)=ARB$(15,2); REM " SSP#
37310 IF Q$(202,G8-1)=Q0$(1,G8-1) AND P0$(121,1)="Y" THEN Q0$(NUM(P0$(110,2),ERR=*NEXT),2)=STR(NUM(ARB$(135,2)):"00"); REM " SSP#
37320 GOTO 37370
37330 REM "Warehouse substitution
37340 IF M$(1,1)<>"D" OR M$(12,4)<>ART$(89,4) THEN DIM M$(223); READ (Z[4],KEY="D"+M$(1,10)+ART$(89,4),DOM=37345)M$
37350 IF POS(" "<>M$(214,I1))=0 THEN GOTO 37370
37360 Q0$(I0,I1)=M$(214,I1)
37370 RETURN 
37380 RETURN 
37400 ! No G/L Number
37410 NO_NUMBER:
37420 DIM FS3[1]; FIND (Z[24],KEY=ARB$(7,8)+ARB$(92,8)+ART$(47,3)+" ",DOM=*RETURN)*,*,*,*,*,*,FS3[0]
37430 IF ART$(2,2)="N" THEN Q0$=Q$(190,12)
37440 Q0=-FS3[0]
37450 J9=1; GOSUB ACCUM_GL
37460 ! 
37490 RETURN 
37500 ! setup GL Account Numbers
37510 SETUP_ACCT:
37520 GOSUB REMOVE_CURR_LIST
37530 READ (Z[5],KEY=ARB$(65,2),DOM=*NEXT)IOL=48160
37550 IF ARB[20]>0 THEN GOSUB GL_INTERFACE
37560 ! 
37590 RETURN 
37600 ! G/L Interface to Detail
37610 GL_INTERFACE:
37620 IF LEN(I0$)<42 THEN DIM I$(40); FIND (Z[6],KEY=X3$(9,3)+"I/C",DOM=*NEXT)I0$
37630 T9$="",J9=0,I0=NUM(I0$(40,2)),I1=NUM(I0$(42,1)); DIM T[30],ART$(104),ART[5],M$(223)
37635 IF ARB[20]=0 THEN GOTO 37695 ELSE IF ARB[0]>0 THEN GOSUB REMOVE_CURR_LIST
37640 ART9=ARB[20]
37645 IF ART9<=0 THEN GOTO 37695
37650 READ (Z[17],IND=ART9)IOL=48230
37655 IF POS(ART$(1,1)="M")<>0 OR (ART[4]=0 AND ART[5]=0) THEN GOTO 37645
37660 DIM FS2$(228); FIND (Z[20],KEY=ARB$(92,8)+ART$(47,3),DOM=*NEXT)FS2$
37663 DIM Q$(300); FIND (Z[23],KEY=ART$(75,9),DOM=*NEXT)Q$
37665 Q=0; IF ARB$(77,1)="C" THEN Q=1
37670 Q=94+Q*36,Q0$=Q$(Q,12),Q0=-ART[4]; GOSUB ACCUM_GL
37675 IF POS(G0$(40,1)="AC")>0 AND POS(ART$(1,1)="IC")<>0 AND ART$(89,4)<>"DS  " AND ART$(89,4)<>"    " THEN Q=Q+12,Q0$=Q$(Q,12),Q0=ART[5]; GOSUB ACCUM_GL; Q=Q+12,Q0=-Q0,Q0$=Q$(Q,12),J9=1; IF AR2$(43,1)="Y" AND ART$(47,3)<>"   " THEN GOSUB NO_NUMBER ELSE GOSUB ACCUM_GL
37680 IF AR2$(43,1)="Y" AND ART$(47,1)<>" " AND ART$(1,1)="N" THEN Q=Q+12,Q0$=Q$(Q,12),Q0=ART[5]; GOSUB ACCUM_GL; GOSUB NO_NUMBER
37685 IF POS(" "<>Q$(202,12))>0 AND POS(G0$(40,1)="AC")>0 AND POS(ARB$(89,4)="    DS  ",4)>0 AND (FS2$(9,1)<>" " OR P0$(120,1)="Y") THEN Q=Q+12,Q0$=Q$(Q,12),Q0=ART[5]; GOSUB ACCUM_GL; Q0=-Q0,Q0$=Q$(202,12); IF POS(P0$(121,1)="YD")>0 THEN GOSUB ACCUM_GL ELSE GOSUB ACCUM_GL
37690 GOTO 37645
37695 DIM M$(0); RETURN 
37700 ! Accumalate G/L Numbers
37710 ACCUM_GL:
37715 IF G0$(149,1)="Y" OR (J9=1 AND I0$(39,1)="Y") THEN GOSUB DIGIT_REPL
37720 IF Q0=0 THEN RETURN 
37730 P=POS(Q0$=T9$,LEN(Q0$)); IF P=0 THEN T9$=T9$+Q0$; GOTO 37730 ELSE P=INT(P/LEN(Q0$))+1
37740 T[P]=T[P]+Q0
37790 RETURN 
37800 ! Remove the current Gl List
37810 REMOVE_CURR_LIST:
37820 F=Z[21],Z=ARB[0]
37830 IF Z<=0 THEN GOTO 37860 ELSE READ (F,IND=Z)Z9
37840 GOSUB REMOVE_INDEX
37850 Z=Z9; GOTO 37830
37860 ARB[0]=0
37870 RETURN 
37900 ! Remove Current Index
37910 REMOVE_INDEX:
37920 EXTRACT (F,IND=0)IOL=48320
37930 IF ARD[4]=-2 THEN READ (F); WAIT 0; GOTO 37920 ELSE Y[4]=-2
37940 WRITE (F,IND=0)IOL=48320
37950 WRITE (F,IND=Z)ARD[1]
37960 ARD[1]=Z,ARD[4]=-1,ARD[0]=ARD[0]-1
37970 WRITE (F,IND=0)IOL=48320
37990 RETURN 
39500 MULTI_COMM_KEY:! SSP 225300
39510 SC_TYPE$="I",SC_KEY1$=INV_NUM$,SC_KEY2$=CR_FY$+CR_ACCTPD$+DIM(4),SC_LINE$="000"
39512 IF DTC=1 THEN SC_LINE$=STR(NUM(LINE_NUM$):"000")
39515 SC_KEY$=SC_TYPE$+SC_KEY1$+SC_KEY2$+SC_LINE$ ! SSP 225300    
39516 RETURN 
39518 MULTI_COMM_SETUP:! SSP 225300
39520 DIM MCCDE$[5]; DIM MCSPLT[5],MCOMM$[10](5," ") ! SALESMAN CODES  SALESMAN SPLIT
39530 MCCDE$[1]=SPER_CODE$,MCCDE$[2]=SPER_CODE_2$,MCCDE$[3]=SPER_CODE_3$,MCCDE$[4]=SPER_CODE_4$,MCCDE$[5]=SPER_CODE_5$
39540 MCSPLT[1]=COMM_AMT_1,MCSPLT[2]=COMM_AMT_2,MCSPLT[3]=COMM_AMT_3,MCSPLT[4]=COMM_AMT_4,MCSPLT[5]=COMM_AMT_5
39550 FOR SLP=1 TO 5; IF STP(MCCDE$[SLP],2)<>"" AND MCSPLT[SLP]>0 THEN MCOMM$[SLP]=COMM_CODE$; END_IF ; NEXT SLP
39590 RETURN 
40000 LOAD_FY:
40010 ! ONLY_OPEN$="Y" means only load open FY's, TF_MODULE$ can be set to second part of key for that system parameter record, ie A/P, A/R, I/C
40020 ONLY_OPEN$="Y"
40030 CUR_FY$="",CUR_ACCTPD$=""; READ (Z[6],KEY=%C$+"A/R",DOM=*NEXT)SYS_PARMS$; CUR_FY$=SYS_PARMS$(7,4),CUR_ACCTPD$=SYS_PARMS$(11,2)
40033 IF NOT(NUL(CR_FY$)) THEN CUR_FY$=CR_FY$; CR_FY$=""
40035 IF NOT(NUL(CR_ACCTPD$)) THEN CUR_ACCTPD$=CR_ACCTPD$; CR_ACCTPD$=""
40040 DIM GL$(300); READ (Z[6],KEY=%C$+"G/L")GL$(1)
40050 DIM OSEC$(255); READ (Z[6],KEY="osec"+%X3_OP_ID$,DOM=*NEXT)OSEC$
40060 READ (Z[6],KEY=%C$+"G/LYE",DOM=*NEXT)
40070 K$=KEY(Z[6],END=LOAD_FY_DROP_BOX); READ (Z[6],KEY=K$)GLYE$
40080 IF LEN(K$)<8 OR K$(1,8)<>%C$+"G/LYE" THEN GOTO LOAD_FY_DROP_BOX
40090 IF ONLY_OPEN$="Y" AND POS(GLYE$(99,1)="CR")>0 THEN GOTO 40070
40100 IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND K$(9,4)<GL$(34,4) THEN GOTO 40070
40110 CR_FY$=CR_FY$+K$(9,4)+"/"
40120 GOTO 40070
40130 LOAD_FY_DROP_BOX:
40140 DROP_BOX LOAD CR_FY.CTL,CR_FY$
40150 DROP_BOX WRITE CR_FY.CTL,CUR_FY$
40160 IF CUR_FY$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_FY$<GL$(34,4) THEN CUR_FY$=GL$(34,4),CUR_ACCTPD$=GL$(38,2)
40170 IF CUR_ACCTPD$<>"" THEN IF GL$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND CUR_FY$+CUR_ACCTPD$<GL$(34,6) THEN CUR_ACCTPD$=GL$(38,2) ! Fix for 173826
40180 IF CUR_FY$<>"" THEN DROP_BOX WRITE FY.CTL,CUR_FY$
40190 CR_FY$=CUR_FY$; %FY$=CR_FY$
40200 IF CUR_FY$<>"" THEN FROM_FY$="Y",CR_FY$=CUR_FY$; GOSUB LOAD_ACCTPD
40210 LOAD_FY_END:RETURN 
40220 ! 
40230 LOAD_ACCTPD:
40240 ! FY$ should be set to a valid fiscal year
40250 CR_ACCTPD$=""; FROM_FY$="Y"
40260 IF FROM_FY$="Y" THEN GOTO 40270
40270 READ (Z[6],KEY=%C$+"G/LYE"+CR_FY$,DOM=LOAD_ACCTPD_END)GLYE$
40280 PDS=12; PDS=NUM(GLYE$(13,2),ERR=*NEXT) ! Number of periods in this FY
40290 FOR X=1 TO PDS
40300 X$=STR(X:"00"),FLAG$="NO"; CALL "ARGDTE",%X3$,%X4$,CR_FY$+X$,FLAG$; IF FLAG$<>"*" THEN CR_ACCTPD$=CR_ACCTPD$+X$+"/" ! Checks osec, only load valid periods
40310 NEXT X
40320 DROP_BOX LOAD CR_ACCTPD.CTL,CR_ACCTPD$
40330 IF FROM_FY$="Y" AND CUR_ACCTPD$<>"" THEN DROP_BOX WRITE CR_ACCTPD.CTL,CUR_ACCTPD$
40340 CR_ACCTPD$=CUR_ACCTPD$; %AP$=CR_ACCTPD$
40350 GOSUB LOAD_ENDING_DATE
40360 LOAD_ACCTPD_END:RETURN 
40370 ! 
40380 LOAD_ENDING_DATE:
40390 KE$=%C$+"G/LYE"
40400 IF LEN(CR_FY$)>4 THEN VAL$=CR_YEAR$ ELSE VAL$=CR_FY$
40410 FIND (Z[6],KEY=KE$+VAL$)Z9$; CC$=Z9$(21)
40420 IF LEN(CR_ACCTPD$)>2 THEN VAL=NUM(CR_PD$) ELSE VAL=NUM(CR_ACCTPD$)
40430 CC$=CC$(VAL*6-5,6),END_DATE$=CC$,REFRESH_FLG=1
40440 RETURN 
46500 DELETE_INVOICE_STUFF:! Delete the rest of the item for an invoice
46505 GOSUB OPEN_FILES
46510 CALL "AR2FRT",X3$,X4$,P2$,"DELETE",ARB$,ARB{ALL}
46525 IF NOT(NUL(ARB$(92,8))) THEN EXTRACT RECORD (Z[10],KEY=ARB$(92,8))O$; O$(63,1)=""; WRITE RECORD (Z[10])O$; CALL "AR2EAQ",X3$,ARB$
46535 IF P0$(118,1)="Y" THEN REMOVE (Z[24],KEY=A1$,DOM=*NEXT)
46545 IF ARS$(125,1)="Y" THEN IF ARB$(77,1)="C" THEN MSGBOX MSG("ARGEAA_09"),MSG("CONFIRM"),"?,YESNO",ANS$; IF ANS$="YES" THEN CM$=ARB$(15,10)+ARB$(7,8); CALL "AR2CMA",X3$,X4$,"DELETE",CM$ ! WO121235, credit memo information file, also SSP128566
46565 REMOVE (Z[11],KEY=A1$,DOM=*NEXT)
46595 RETURN 
46599 ! ********************************************
46600 ! Open Files
46610 OPEN_FILES:
46620 Z$="01X ARB...  02O AR3...  03O AR1...  04O PO3...  05O AR2...  06O ZZPARM  07O AR5...  08O AR4...  09O AR3...  10O FS1...  11O ARC...  12O FMN... 13O FM0...  14O FMP...  15O ASQ...  16O AS5...  17O ART...  18O FM1...  19O IC0...  20O FS2...  21O ARD...  22O GL1...  23O ARV...  24O ASO...  25O ASN...  26O FS3...  27O ICF...  "
46630 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; IF Z0=1 THEN CMD_STR$="END"; GOTO WRAPUP
46690 RETURN 
48000 ! 100 - Initialization
48010 INIT:
48020 ! 
48030 ! 
48040 GOSUB SETUP_LIBRARY
48050 DIM Z[NUM(X3$(60,3))],ARB[30],AR1[15],AR2[3],AR5[3],AR4[15],ART[10],Y[4],FM1[31],IC0[40],FMP[3],FMP2[0],FS1[13],FS2[29],ARD[4],PO3[3],ARB$(690)
48060 ! Open Files
48070 CALL "ZZ2PRP","EM",RESULT$,TF_DATE$; TP$=""; REM " CHECK TO SEE IF E/M Module is installed SSP 180448
48080 Z$="01X ARB...  02O AR3...  03O AR1...  04O PO3...  05O AR2...  06O ZZPARM  07O AR5...  08O AR4...  09O AR3...  10O FS1...  11O ARC...  12O FMN... 13O FM0...  14O FMP...  15O ASQ...  16O AS5...  17O ART...  18O FM1...  19O IC0...  20O FS2...  21O ARD...  22O GL1...  23O ARV...  24O ASO...  25O ASN...  26O FS3...  27O ICF...  28O EDV...  "
48090 IF RESULT$="Y" THEN Z$=Z$+"30O EM2...  31O EM1...  "; REM SSP 180488
48100 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
48110 ! 
48130 ! IOLIST
48140 IOLIST ARB$,ARB{ALL}
48150 IOLIST AR1$,AR1{ALL}
48160 IOLIST AR2$,AR2{ALL}
48170 IOLIST AR5$,AR5{ALL}
48180 IOLIST PO3$,PO3{ALL}
48190 IOLIST AR3$
48200 IOLIST AR4$,AR4{ALL}
48210 IOLIST AS5$
48220 IOLIST FM0$
48230 IOLIST ART9,ART$,ART{ALL}
48240 IOLIST Y{ALL}
48250 IOLIST IC0$,IC0{ALL}
48260 IOLIST FM1$,FM1{ALL}
48270 IOLIST FMP$,FMP{ALL}
48280 IOLIST FMP2$,FMP{ALL}
48290 IOLIST FS1$,FS1{ALL}
48300 IOLIST FS2$,FS2{ALL}
48310 IOLIST FS3$,FS3{ALL}
48320 IOLIST ARD{ALL}
48330 IOLIST CUR$,CUR{ALL}
48340 IOLIST ASN$,ASN{ALL}
48350 ! 
48360 GOSUB GET_PARAM
48370 RETURN 
48500 WRAPUP:
48530 READ (Z[1],END=*NEXT) ! DO i/o to release lock in ARB
48540 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
48550 RETURN 
49000 SETUP_LIBRARY:
49010 _SV_MSGLIB$=MSG(*)
49020 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
49030 MESSAGE_LIB "*tfmsglib."+_LANG$,ERR=*NEXT; GOTO *RETURN
49040 MESSAGE_LIB "*tfmsglib.en"
49060 RETURN 
49070 ! 
49080 ! 
56000 REM "188703-CIG and release with Special Shipping                       
56001 REM "189013-Multiple problems due to NT                                 
56002 REM "192797-Customer Invoicing Gateway parameter, Don't invoice         
56004 REM "190647-Possible problem with special shipping records              
56005 REM "196002-Issue with invoice that came in through shipping gateway.   
56008 REM "205068-SMGUAA is setting %SHIP_VIA_CODE$ and %SHIP_VIA_DESC$ but in
56010 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56012 ! 233089-FOB point is not coming into ARB from PO3 in CIG
56014 REM "225300-Orders with more than one salesrep, calculate commssions for
56016 REM "240665-Add first and last operator code fields to AR Invoice Header
56017 REM "249775-Changes to sales tax parameters and tax calculations to     
56018 REM "255959-Field in Order Header for Summary Bill Y/N which will carry 
56019 REM "261300-CIG reading Ship Vias with letters as 1                     
56020 REM "297493-FlowPoint; no ship method in ship notice so carrier ID blank
56021 REM "307216-Incorrect Commission Calculation on Invoice Total when House
56022 REM "307450-DBD-270; Repeat Order Check - add back if needed            
