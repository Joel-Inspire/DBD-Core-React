0010 REM "WMS Label Prining <RFGPIS>                 
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 05/04/21 - 12.296906 - jvv - SSP# 307349
0037 REM "307349-Rewrite WMS Label printing process                          
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0045 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to Access this program"; IF TCB(13)=1 THEN BEGIN ; RUN "ZMENU" ELSE EXIT ! SSP#232409
0050 PROCESS "RFGPIS","../RFG/RF.EN"
0060 IF TCB(13)=1 THEN BEGIN ; RUN "ZMENU" ELSE EXIT 
0090 INIT:
0110 X0$="RFGPIS",X1$="WMS Product Label Printing"
0115 NO_LOT$="",NUM_LBL$="1"
0120 DIM Z0$(80,"-")
0125 DIM G[4],D[4],Y[4],P[8],X0[4],X1[4],S$(10)
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 IOL_IC0:IOLIST IC0$,IC0{ALL}
0310 IOL_IC1:IOLIST IC1$,IC1{ALL}
0320 IOL_ICF:IOLIST ICF$,ICF{ALL}
0330 IOL_RFQ:IOLIST RFQ$,RFQ{ALL}
0410 DIM IC0$(188),IC0[40],IC1$(58),IC1[20],ICF$(269),ICF[12],RFQ$(1922),RFQ[5]
0500 REM "FILES
0502 CLOSE (13); OPEN (13)"ZZPARM"
0505 Z=NUM(X3$(60,3)); DIM Z[Z]
0510 Z$="01O IC0...  02O IC1...  03O RFL...  04O ICF...  05O RFQ...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0521,9900
0530 IC0=Z[1],IC1=Z[2],RFL=Z[3],ICF=Z[4],RFQ=Z[5]
0990 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 CALL "ZZINFO",Z[1],T9,X3$,T,T0,K,B,D,S0,S1,F$
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9190,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9190 GOSUB 6600; GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9750 REM 
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
9770 RETURN 
9900 REM "END PROGRAM
9902 WRAPUP:
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 CLOSE (13)
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 SETESC 9350
9950 EXIT 
9999 END 
10000 SELECT_PRINT:
10001 GOSUB VALIDATE_ENTRY; IF CHK_FLG THEN CHK_FLG=0; GOTO *RETURN
10002 GOSUB SAVE_VALUES ! [SSP-211695]-save the user entries
10003 IF ML_LOC_START$="" OR ML_LOC_START$=DIM(4) THEN ML_LOC_START$="0001"
10004 IF LOT_NUMBER$="" THEN DIM LOT_NUMBER$(8)
10005 SEQ_NUM=0
10006 ! IF STP(ML_CUST_END$,2)="" AND NOT(BT_STOCK) THEN DIM ML_CUST_END$(10,"~")
10008 NUM_TO_PRINT=1; NUM_TO_PRINT=NUM(NUM_LBL$,ERR=*NEXT)
10010 IF STP(ML_CUST_START$,2)="" AND STP(ML_CUST_END$,2)="" AND STP(ML_ITEM_START$,2)="" AND STP(ML_ITEM_END$,2)="" THEN DIM ML_CUST_START$(10,"~"),ML_CUST_END$(10,"~"); GOTO READ_IC0 ! dont print lables for all items at once
10015 IF BT_STOCK THEN ML_CUST_START$=DIM(10),ML_CUST_END$=DIM(10); GOTO SET_ITEM
10020 IF STP(ML_CUST_START$)="" THEN ML_CUST_START$=DIM(10) ELSE ML_CUST_START$=PAD(ML_CUST_START$,10)
10025 IF STP(ML_CUST_END$)="" THEN ML_CUST_END$=DIM(10,"~") ELSE ML_CUST_END$=PAD(ML_CUST_END$,10)
10030 SET_ITEM:
10035 IF STP(ML_ITEM_START$)="" THEN ML_ITEM_START$=DIM(10) ELSE ML_ITEM_START$=PAD(ML_ITEM_START$,10)
10040 IF STP(ML_ITEM_END$)="" THEN ML_ITEM_END$=DIM(10,"~") ELSE ML_ITEM_END$=PAD(ML_ITEM_END$,10)
10090 READ_IC0:
10095 K$=ML_CUST_START$+ML_ITEM_START$
10100 READ (Z[1],KEY=K$,DOM=*NEXT)IOL=IOL_IC0; GOTO 10130
10110 READ_NEXT_IC0:
10120 K$=KEY(Z[1],END=END_PRINT); READ (Z[1],KEY=K$)IOL=IOL_IC0
10130 IF K$(1,10)>ML_CUST_END$ THEN GOTO END_PRINT
10140 IF IC0$(11,10)<ML_ITEM_START$ OR IC0$(11,10)>ML_ITEM_END$ THEN GOTO READ_NEXT_IC0
10149 ! 
10200 READ_IC1:
10210 IC1KY$=K$+ML_LOC_START$
10220 READ (Z[2],KEY=IC1KY$,DOM=*NEXT)IOL=IOL_IC1; GOTO 10270
10230 READ_NEXT_IC1:
10240 IC1KY$=KEY(Z[2],END=READ_NEXT_IC0); READ (Z[2],KEY=IC1KY$)IOL=IOL_IC1
10250 IF IC1KY$(1,LEN(K$))<>K$ THEN GOTO READ_NEXT_IC0
10260 LLOC$=IC1KY$(LEN(K$)+1,LEN(ML_LOC_START$)); IF LLOC$>ML_LOC_END$ THEN GOTO READ_NEXT_IC0
10270 DIM RFQ$(1922),RFQ[5]
10280 IF IC0$(112,1)="Y" AND BT_NO_LOT=0 THEN GOSUB CREATE_ICF_RFQ ELSE GOSUB CREATE_RFQ
10290 GOTO READ_NEXT_IC1
10299 ! 
10400 CREATE_ICF_RFQ:
10410 READ (Z[4],KEY=IC1KY$,DOM=*NEXT)
10420 READ_NEXT_ICF:
10430 ICFKY$=KEY(Z[4],END=END_ICF_REQ); READ (Z[4],KEY=ICFKY$)IOL=IOL_ICF
10440 IF ICFKY$(1,LEN(IC1KY$))<>IC1KY$ THEN GOTO END_ICF_REQ
10460 IF LOT_NUMBER$<>DIM(8) AND LOT_NUMBER$<>ICF$(234,8) THEN GOTO READ_NEXT_ICF
10470 DIM RFQ$(1922),RFQ[5]
10480 RFQ$(47,40)=IC0$(21,40)
10490 RFQ$(1,10)=PAD(LBL_PTR$,10),RFQ$(11,2)="PR",RFQ$(19,8)=ICF$(234,8)
10495 RFQ$(27,20)=IC0$(1,20),RFQ$(87,6)=ICF$(25,6),RFQ$(93,4)=IC1$(21,4)
10500 RFQ$(97,9)=ICF$(41,9),RFQ$(112,12)=ICF$(56,12)
10505 IF NUM_TO_PRINT>9999 THEN NUM_TO_PRINT=9999
10510 RFQ$(128,4)=STR(NUM_TO_PRINT:"0000")
10520 RFQ$(124,4)=ICF$(121,4),RFQ$(152,15)=STR(ICF[3])
10530 IF CTN_QTY<>0 THEN RFQ$(167,10)=STR(CTN_QTY:"0000000000")
10545 GOSUB WRITE_RFQ
10550 GOTO READ_NEXT_ICF
10560 ! 
10570 END_ICF_REQ:
10580 RETURN 
10599 ! 
10600 CREATE_RFQ:
10605 DIM RFQ$(1922),RFQ[5]
10610 RFQ$(47,40)=IC0$(21,40)
10620 RFQ$(1,10)=PAD(LBL_PTR$,10),RFQ$(11,2)="PR"
10625 RFQ$(27,20)=IC0$(1,20),RFQ$(93,4)=IC1$(21,4)
10630 IF NUM_TO_PRINT>9999 THEN NUM_TO_PRINT=9999
10635 RFQ$(128,4)=STR(NUM_TO_PRINT:"0000")
10640 RFQ$(124,4)=IC0$(124,4),RFQ$(152,15)=STR(IC0[17])
10645 IF CTN_QTY<>0 THEN RFQ$(167,10)=STR(CTN_QTY:"0000000000")
10650 GOSUB WRITE_RFQ
10660 RETURN 
10799 ! 
10800 WRITE_RFQ:
10810 SEQ_NUM=SEQ_NUM+1
10820 IF SEQ_NUM>999999 THEN ESCAPE ELSE RFQ$(13,6)=STR(SEQ_NUM:"000000")
10830 WRITE (Z[5],KEY=RFQ$(1,18),DOM=WRITE_RFQ)IOL=IOL_RFQ
10835 DD$="Customer: "+RFQ$(27,10)+" Item: "+RFQ$(37,10)
10838 C=C+1 ! GOSUB 8150
10840 MSG_DISP.CTL'VALUE$="Label for "+DD$+" submitted for printing"
10850 RETURN 
10859 ! 
10900 END_PRINT:
10905 NR_PRT=C*NUM_TO_PRINT
10910 XX$="There were "+STR(NR_PRT)+" labels submitted for printing"
10915 MSGBOX (XX$)
10920 C=0
10925 REM *** CMD_STR$="END"       ! [SSP-211695]
10930 GOSUB RESTORE_VALUES ! [SSP-211695]-restore the user entries
10935 NEXT_ID=ML_LOC_START.CTL ! [SSP-211695]
10990 RETURN 
10998 ! 
10999 ! 
11000 SELECT_LBL_PRINT:
11010 LBL_PTR$=PAD(LBL_PTR$,10)
11015 IF LBL_PTR$<>DIM(10) THEN GOTO *NEXT ELSE GOTO INVALID_PTR
11020 FIND (Z[3],KEY=LBL_PTR$,DOM=*NEXT)A$; GOTO *RETURN
11025 INVALID_PTR:
11030 MSGBOX MSG("LBL_NOF"); NEXT_ID=LBL_PTR.CTL
11090 RETURN 
11500 SELECT_LOT_NUMBER:
11510 OK=0; LOT_NUMBER$=STR(NUM(LOT_NUMBER$,ERR=*NEXT)); OK=1
11520 IF NOT(OK) THEN LOT_NUMBER$="",NEXT_ID=LOT_NUMBER.CTL
11525 IF OK THEN IF LOT_NUMBER$="0" THEN LOT_NUMBER$=DIM(8) ELSE LOT_NUMBER$=STR(NUM(LOT_NUMBER$):"00000000")
11530 REFRESH_FLG=1
11590 RETURN 
11600 SELECT_CTN_QTY:
11610 OK=0,CTN_QTY=0; CTN_QTY=NUM(CTN_QTY$,ERR=*NEXT); OK=1
11620 IF NOT(OK) THEN MSGBOX MSG("INV_QTY"); NEXT_ID=CTN_QTY.CTL
11690 RETURN 
11700 SELECT_NONE:
11710 NO_LOT$="Y",LOT_NUMBER$=DIM(8); DISABLE CONTROL LOT_NUMBER.CTL; REFRESH_FLG=1
11790 RETURN 
12000 SAVE_VALUES:! [SSP-211695]-added routine
12001 ! This routine will save all of the values entered
12002 ! by the user.
12010 HLD_ML_LOC_START$=ML_LOC_START$
12015 HLD_ML_CUST_START$=ML_CUST_START$
12020 HLD_ML_CUST_END$=ML_CUST_END$
12025 HLD_ML_ITEM_START$=ML_ITEM_START$
12030 HLD_ML_ITEM_END$=ML_ITEM_END$
12035 HLD_LBL_PTR$=LBL_PTR$
12040 HLD_LOT_NUMBER$=LOT_NUMBER$
12045 HLD_CTN_QTY$=CTN_QTY$
12050 HLD_NUM_LBL$=NUM_LBL$
12195 RETURN 
12200 RESTORE_VALUES:! [SSP-211695]-added routine
12201 ! This routine will restore all of the values entered
12202 ! by the user.
12210 ML_LOC_START$=HLD_ML_LOC_START$
12215 ML_CUST_START$=HLD_ML_CUST_START$
12220 ML_CUST_END$=HLD_ML_CUST_END$
12225 ML_ITEM_START$=HLD_ML_ITEM_START$
12230 ML_ITEM_END$=HLD_ML_ITEM_END$
12235 LBL_PTR$=HLD_LBL_PTR$
12240 LOT_NUMBER$=HLD_LOT_NUMBER$
12245 CTN_QTY$=HLD_CTN_QTY$
12250 MSG_DISP.CTL'VALUE$=""
12395 RETURN 
15000 VALIDATE_ENTRY:
15010 CHK_FLG=0
15020 IF STP(ML_LOC_START$,2)="" OR STP(ML_LOC_END$)="" THEN NEXT_ID=ML_LOC_START.CTL; ERRM=1; GOTO VALIDATION_ERR
15030 IF BT_STOCK THEN GOTO *NEXT ELSE IF (STP(ML_CUST_START$,2)="" OR STP(ML_CUST_END$)="") OR (ML_CUST_START$>ML_CUST_END$) THEN NEXT_ID=ML_CUST_START.CTL; ERRM=2; GOTO VALIDATION_ERR
15040 IF (STP(ML_ITEM_START$,2)="" OR STP(ML_ITEM_END$)="") OR (ML_ITEM_START$>ML_ITEM_END$) THEN NEXT_ID=ML_ITEM_START.CTL; ERRM=3; GOTO VALIDATION_ERR
15050 IF STP(LBL_PTR$,2)="" THEN GOSUB INVALID_PTR; CHK_FLG=1
15100 RETURN 
15500 VALIDATION_ERR:
15510 CHK_FLG=1
15520 ON ERRM GOTO 15590,15525,15530,15540
15525 FLD$="Location"; GOTO ERR_DISP
15530 FLD$="Customer"; GOTO ERR_DISP
15540 FLD$="Item Code"; GOTO ERR_DISP
15570 ERR_DISP:
15580 MSGBOX "Invalid "+FLD$+" or range entered"
15590 RETURN 
56002 REM "204900-for the label reprint for wms, the label printer field will 
56004 REM "207587-Inventory Label Print cannot be used as delivered           
56006 REM "211695-WMS Label printing option - provide new button to allow     
56007 REM "232409-All WMS menu options.  Need to take out TopForm from msg    
56008 REM "307349-Rewrite WMS Label printing process                          
