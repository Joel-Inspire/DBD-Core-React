0010 ! RFGSAA - Warehousing Shipping Confirmation
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Feb. 27, 2005 15:59
0030 ! ************************************************************************
0035 REM "5.5 - 09/10/07 - 9.504444 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0150 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access TopForm to Access this program"; IF TCB(13)=1 THEN BEGIN ; RUN "ZMENU" ELSE EXIT 
0160 CALL "ZZ2PRP","WW",RESULT$,TF_DATE$; IF RESULT$<>"Y" AND POS(%C$="500584",3)=0 THEN CALL "ZZPROM",".4",X3$,Z,"ACCESS DENIED! The Warehousing Module is not installed.","","",0; IF TCB(13)=1 THEN BEGIN ; RUN "ZMENU" ELSE EXIT 
0180 PROCESS "RFGSAA","../RFG/RF.EN"
0190 IF TCB(13)=1 THEN BEGIN ; RUN "ZMENU" ELSE EXIT 
0310 IOLIST RF0$,RF0[0],RF0[1],RF0[2],RF0[3],RF0[4]
0390 IOLIST RFB$,RFB[0],RFB[1],RFB[2],RFB[3],RFB[4],RFB[5]
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="REF_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 300 - Set up the message library
10010 SETUP_LIBRARY:
10020 _SV_MSGLIB$=MSG(*)
10030 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
10040 MESSAGE_LIB "*tfmsglib."+_LANG$,ERR=*NEXT; GOTO 10060
10050 MESSAGE_LIB "*tfmsglib.en"
10060 SET_MSG:GOSUB SETUP_MESSAGES
10070 RETURN 
10500 INIT:
10502 X0$="RFSRAA",X1$="Warehousing Shipping Confirmation"
10503 X0=-1,X2=-1
10505 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
10506 %X3$=X3$
10507 DIM Z[NUM(X3$(60,3))],RF0[4]
10508 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
10510 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
10520 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
10530 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
10540 GOSUB SETUP_KEYS
10560 Z$="01O RF0...  02O RFS...  04O AR1...  10O FS1...  11O FS2...  12O SM0...  13O ZZPARM  14O FMP...  15O PO3...  16O ICF...  17O RFA...  18O SM0...  "
10570 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 10575,OPEN_ERR
10580 RETURN 
10590 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
10600 CMD_STR$="END"
10610 RETURN 
10800 DISPLAY_NOTES:
10890 RETURN 
10898 ! 
10899 ! 
11098 ! 
11099 ! 
11900 SELECT_ADD:
11990 TASK_NUM$="A"
12000 SELECT_TASK_NUM:
12005 SEG2$="",SEG3$="",SEG4$="",SEG5$=""
12020 TASK_NUM$=STP(TASK_NUM$,3," ")
12025 IF TASK_NUM$<>"" THEN {! 12285 }
12030 IF TASK_NUM$="A" THEN {! 12090 }
12040 CALL "UPDRF0;GET_NEXT_SEQ",Z[1],RF0$,RF0{ALL},OK
12045 READ DATA FROM REC(IOL=0310) TO IOL=IOL(Z[1])
12060  } ELSE {
12070 TASK_NUM=NUM(TASK_NUM$,ERR=*NEXT); TASK_NUM$=STR(TASK_NUM:"0000000000")
12080 CALL "UPDRF0;EXTRACTBYKEY",Z[1],0,TASK_NUM$,SEG2$,SEG3$,SEG4$,SEG5$,RF0$,RF0{ALL},FOUNDRF0,BUSYRF0
12085 IF NOT(FOUNDRF0) THEN MSGBOX MSG("NOT_FOUND"); GOTO *RETURN
12087 IF BUSYRF0 THEN MSGBOX TASK_NUM$+MSG("BUSY"); GOTO *RETURN
12088 IF FOUND THEN IF RF0$(11,1)<>"S" THEN MSGBOX MSG("NOT_FOUND"); CALL "UPDRF0;CLEAR_LOCK",Z[1]; GOTO *RETURN
12095  }
12100 TERM_ID$=X3$(1,2),USER_ID$=X3$(40,3),TASK_TYPE$="S"
12110 TASK_DATE$=X3$(21,6)
12150 READ DATA FROM REC(IOL(Z[1])) TO IOL=0310
12160 CALL "UPDRF0;WRITELOCK",Z[1],RF0$,RF0{ALL}
12220 EN_ORDER$="Y",EN_TASK$="N"; GOSUB ENABLE_GROUPS
12280 REFRESH_FLG=1
12282 NEXT_ID=ORDER.CTL
12285  }
12290 RETURN 
12298 ! 
12299 ! 
12500 SELECT_ORDER:
12505 IF ORDER$<>"" THEN {! 12960 }
12507 CALL "ZZWLKU;PARSE_ORD",ORDER$,ORDER_DIV$,ORDER_NUM$
12510 CALL "UPDFS1;EXTRACTBYKEY",Z[10],0,ORDER_DIV$,ORDER_NUM$,SEG3$,SEG4$,SEG5$,FS1$,FS1{ALL},FOUNDFS1,BUSYFS1
12512 IF BUSYFS1 THEN MSGBOX MSG("BUSY"); GOTO *RETURN
12520 IF NOT(FOUNDFS1) THEN MSGBOX MSG("NOT_FOUND"); GOTO *RETURN
12570 IF FS1$(63,1)="Y" THEN MSGBOX MSG("FMGODM_31"); CALL "UPDFS1;CLEAR_LOCK",Z[10]; GOTO *RETURN
12590 IF FS1$(63,1)="S" THEN {! 12620
12595 CALL "UPDRFS;READBYKEY",Z[2],0,ORDER_DIV$,ORDER_NUM$,SEG3$,SEG4$,SEG5$,RFS$,RFS{ALL},FOUNDRFS
12600 CALL "UPDRFS;READNEXT",Z[2],RFS$,RFS{ALL},FOUNDRFS
12610 IF FOUNDRFS THEN IF RFS$(1,11)=ORDER_DIV$+ORDER_NUM$ THEN IF RFS$(32,10)<>TASK_NUM$ THEN MSGBOX MSG("RFS_ORD_T")+" "+RFS$(32,10); CALL "UPDFS1;CLEAR_LOCK",Z[10]; GOTO *RETURN
12620  } ! 12930
12650 CALL "UPDAR1;READBYKEY",Z[4],0,FS1$(6,10),SEG2$,SEG3$,SEG4$,SEG5$,AR1$,AR1{ALL},FOUNDAR1
12660 ORD_DATE$=FND$(FS1$(16,6))
12665 CUSTOMER$=FS1$(6,10),CUST_NAME$=AR1$(11,35)
12670 CUST_PO$=FS1$(28,15)
12690 REFRESH_FLG=1
12700 IF POS(%C$="584500",3)<>0 THEN {
12710 EN_SHIP_ALL$="Y"; GOSUB ENABLE_GROUPS
12720 NEXT_ID=SHIP_COMPL.CTL
12750  } ELSE {
12760 EN_NEXT$="Y"; GOSUB ENABLE_GROUPS
12790  }
12930  } ! 12590
12960  } ! 12505
12990 RETURN 
12998 ! 
12999 ! 
13010 CLEAR_FIELDS:
13020 ORD_DATE$="",CUSTOMER$="",CUST_PO$="",CUST_NAME$=""
13030 ORDER$="",ORDER_DIV$="",ORDER_NUM$=""
13990 REFRESH_FLG=1
13999 RETURN 
14000 SELECT_EXIT:
14010 CALL "UPDRFS;READBYKEY",Z[2],1,TASK_NUM$,SEG2$,SEG3$,SEG4$,SEG5$,RFS$,RFS{ALL},FOUNDRFS
14020 CALL "UPDRFS;READNEXT",Z[2],RFS$,RFS{ALL},FOUND
14025 IF NOT(FOUND) THEN CMD_STR$="END"
14027 IF FOUND THEN {! 14565
14030 IF RFS$(43,10)=TASK_NUM$ THEN {! 14550 }           
14050 MSGBOX MSG("UPDATE_NOW"),MSG("CONFIRM"),"?,YESNO",ANS$
14100 IF ANS$="NO" THEN {! 14500 } 
14110 NEXT_ID=EXIT.CTL
14120  } ELSE {
14150 CALL "UPDRFS;UPDATE_TASK",Z[2],Z[10],Z[12],Z[14],Z[15],Z[16],Z[17],Z[18],X3$,TASK_NUM$,CALL_CIG
14155 IF CALL_CIG THEN {
14160 CALL "RFGSAS",X3$ ! set ZZS parameters, get batch
14230 CALL "SMGUAA",X3$,X4$,"","*",TASK_NUM$
14250  }
14490 CMD_STR$="END"
14500  }
14550  } ELSE {
14555 CMD_STR$="END"
14560  }
14565  } ! 14027
14570 IF RF0$<>"" THEN CALL "UPDRF0;DELETE",Z[1],RF0$,RF0{ALL},FOUNDRF0,BUSYRF0
14590 RETURN 
14598 ! 
14599 ! 
15000 SELECT_CLEAR_SH:
15010 REM MSGBOX MSG("CLEAR_REC"),MSG("CONFIRM"),"?,YESNO",ANS$
15015 ANS$="YES"
15020 IF ANS$="YES" AND ORDER_DIV$<>"" AND ORDER_NUM$<>"" THEN {
15030 CALL "UPDRFS;CLEAR_ORD",Z[2],ORDER_DIV$+ORDER_NUM$
15040 EN_SHIP_ALL$="N"
15050 GOSUB ENABLE_GROUPS
15060 NEXT_ID=ORDER.CTL
15080 ORDER$=""
15085 MSGBOX MSG("SHP_CLR")
15090  } ELSE {
15100 NEXT_ID=CLEAR_SH.CTL
15150  }
15190 RETURN 
15198 ! 
15199 ! 
16000 SELECT_SHIP_COMPL:
16010 REM MSGBOX MSG("SHIP_COMPL"),MSG("CONFIRM"),"?,YESNO",ANS$
16015 ANS$="YES"
16020 IF ANS$="YES" THEN {
16030 CALL "UPDRFS;SHIP_COMPL",Z[2],Z[11],Z[17],X3$,ORDER_DIV$+ORDER_NUM$,TASK_NUM$
16050 MSGBOX MSG("UPD_CPL")
16090 ORDER$=""
16100 EN_SHIP_ALL$="N"
16120 NEXT_ID=ORDER.CTL
16200  } ELSE {
16210 NEXT_ID=CLEAR_SH.CTL
16270  }
16280 GOSUB CLEAR_FIELDS
16290 RETURN 
16298 ! 
16299 ! 
55000 ENABLE_GROUPS:
55005 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
55040 IF EN_TASK$="N" THEN CALL "*wingrp;Disable",TASK.GRP$; EN_TASK$=""
55050 IF EN_TASK$="Y" THEN CALL "*wingrp;Enable",TASK.GRP$; EN_TASK$=""
55060 IF EN_BARCODE$="Y" THEN CALL "*wingrp;enable",BARCODE.GRP$
55065 IF EN_SHIP_ALL$="Y" THEN CALL "*wingrp;enable",SHIP_COMPL.GRP$; EN_SHIP_ALL$=""
55067 IF EN_SHIP_ALL$="N" THEN CALL "*wingrp;disable",SHIP_COMPL.GRP$; EN_SHIP_ALL$=""
55070 IF EN_NEXT$="Y" THEN CALL "*wingrp;enable",NEXT.GRP$; EN_NEXT$=""
55080 IF EN_ORDER$="Y" THEN CALL "*wingrp;enable",ORDER.GRP$; EN_ORDER$=""
55990 RETURN 
56000 REM "190478-Additional Services - Handle shipements delivered via       
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
