0010 REM "WMS Purchase Order Receiving Detail Qty Ent<RFGRD1"
0020 SETESC 9300; SETERR 9000
0035 REM "5.5 - 08/30/07 - 16.066388 - jdf - SSP# 211380
0037 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
0040 REM "Copyright 2007 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="RFGRD1",X1$="WMS Purchase Order Receiving Detail Qty Ent"
0120 EOL$=$0D0A$; REM EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0140 DIM MESS_INFO$[20] ! ,EC_PARM$(1275)(1275)
0230 DIM ESY$(512)
0240 DIM ECC$(1984),ECC[3]
0250 DIM ESZ$(128),ESZ[18]
0260 DIM WMS_LOC_CODE$[999],PO_LINE_QTY$[999],PO3_LINE_SEQ$[999]; SEQ=0
0330 IOLIST ESY$
0340 IOLIST ECC$,ECC[0],ECC[1],ECC[2]
0350 IOLIST ESZ$,ESZ[0],ESZ[1],ESZ[2],ESZ[3],ESZ[4],ESZ[5],ESZ[6],ESZ[7],ESZ[8],ESZ[9],ESZ[10],ESZ[11],ESZ[12],ESZ[13],ESZ[14],ESZ[15],ESZ[16],ESZ[17],ESZ[18]
0370 IOLIST ZW2$,ZW2[0],ZW2[1],ZW2[2]
0380 IOLIST ZW9A$,ZW9B$
0400 IOLIST ZW7A$,ZW7B$
0410 IOLIST ZW8A$
0500 REM "Open files
0502 CLOSE (13); OPEN (13)"ZZPARM"
0505 DIM Z[NUM(X3$(60,3))],BLGRBNKS$(100)
0510 Z$="01O RF1...  02O RFA...  04O AP4...  05O IC0...  06O FM1...  08O RFI...  10O PO1...  12O PO2...  13O ZZPARM  14O FMN...  15O PO3...  16O IC1...  17O RFB...  18O RFK...  19O RFZ...  20O RFQ...  21O FS2...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0550 RF1=Z[1],RFA=Z[2],AP4=Z[4],IC0=Z[5],FM1=Z[6],ICF=Z[7],RFI=Z[8],PO1=Z[10],PO2=Z[12],FMN=Z[14],RFK=Z[18],RFZ=Z[19]
0555 RFQ=Z[20],FS2=Z[21]
0900 PRINT_DOC=0
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],TF_VALUE$=DATA$[I,1]
1020 GOSUB SPLIT_VALUES
1050 SWITCH TAG$ ! 1185 end switch
1055 CASE "print_doc"
1057 PRINT_DOC=1; BREAK
1058 CASE "show_tags"
1059 SHOW_TAGS=1; BREAK
1060 CASE "po_number"
1062 PORDER$=TF_VALUE$; BREAK
1065 CASE "item_number"
1067 TF_ITEM$=TF_VALUE$; BREAK
1080 CASE "template"
1082 TEMPLATE$=TF_VALUE$; BREAK
1085 CASE "item_desc"
1087 ITEM_DESC$=TF_VALUE$; BREAK
1095 CASE "barcode"
1097 BARCODE$=TF_VALUE$; BREAK
1100 CASE "item"
1102 TF_ITEM$=TF_VALUE$; BREAK
1105 CASE "item_cust"
1107 ITEM_CUST$=TF_VALUE$; BREAK
1110 CASE "item_code"
1112 ITEM_CODE$=TF_VALUE$; BREAK
1115 CASE "po_line"
1117 PO_LINE$=TF_VALUE$; BREAK
1130 CASE "rec_bin"
1132 REC_BIN$=PAD(TF_VALUE$,10); BREAK
1135 CASE "print_label"
1137 PRINT_LABEL$=TF_VALUE$; BREAK
1985 END SWITCH ! 1050
1990 NEXT I
2000 ! process data
2020 SESSION_ID$=EC$[1](1,7)
2025 BUYER$=EC$[2](1,15),BASIC$="RFGRD1",DISP_FORM_NUM=0
2027 TEMPLATE$="rfgrd1.htm"
2030 MSG$="",FOUNDITEM=0
2040 CALL "UPDFM1;READBYKEY",FM1,0,TF_ITEM$,SEG2$,SEG3$,SEG4$,SEG5$,FM1$,FM1{ALL},FOUNDFM1; IF FOUNDFM1 THEN IF FM1$(104,1)="Y" THEN DISP_FORM_NUM=1
2050 CALL "UPDRFK;CLEAR_FIELDS",RFK$,RFK{ALL}; CALL "UPDRFK;READBYKEY",RFK,0,BUYER$,SEG2$,SEG3$,SEG4$,SEG5$,RFK$,RFK{ALL},FOUNDRFK; IF FOUNDRFK THEN PO_RECV_DROP$=RFK$(83,1) ELSE PO_RECV_DROP$="N"
2100 CALL "ZZWLKU;PARSE_PORDER",PORDER$,PO_DIV$,PO_NUM$; PORDER$=PO_DIV$+PO_NUM$
2110 CALL "UPDPO1;READBYKEY",Z[10],0,PO_DIV$,PO_NUM$,SEG3$,SEG4$,SEG5$,PO1$,PO1{ALL},FOUNDPO1
2120 IF NOT(FOUNDPO1) THEN MSG$="Purchase Order Number "+PORDER$+" Does Not Exist"
2150 IF FOUNDPO1 THEN {! 3950 }
2160 CALL "UPDAP4;READBYKEY",Z[4],0,PO1$(7,10),SEG2$,SEG3$,SEG4$,SEG5$,AP4$,AP4{ALL},FOUNDAP4; IF FOUNDAP4 THEN VEND_NAME$=AP4$(11,35)
2200 FS3_ORD$=PO1$(297,8)+DIM(1)
3000 ! po line selected
3005 FOUNDITEM=0
3010 IF PO_LINE$<>"" THEN {! 3150 
3020 CALL "UPDPO2;READBYKEY",Z[12],0,PO1$(297,9),PO_LINE$,SEG3$,SEG4$,SEG5$,PO2$,PO2{ALL},FOUNDPO2
3050 IF FOUNDPO2 THEN FOUNDITEM=1 ELSE MSG$="Purchase Order Line "+PO_LINE$+"Is Not on File"
3100 IF FOUNDITEM THEN {! 3940 
3102 CALL "UPDRF1;READBYKEY",Z[1],0,PO1$(297,9),PO2$(7,3),SEG3$,SEG4$,SEG5$,RF1$,RFA{ALL},FOUNDRF1
3104 CALL "UPDRF1;READNEXT",Z[1],RF1$,RF1{ALL},FOUNDRF1; IF FOUNDRF1 THEN IF RF1$(1,12)=PO1$(297,9)+PO2$(7,3) THEN CALL "UPDRF1;DELETE",Z[1],RF1$,RFA{ALL},FOUNDRF1,BUSYRF1; GOTO *SAME
3105 FOR PO3_COUNT=1 TO SEQ ! 3930
3110 PO_LINE_QTY=0; PO_LINE_QTY=NUM(PO_LINE_QTY$[PO3_COUNT],ERR=*NEXT)
3150 IF PO_LINE_QTY THEN {! 3900 
3160 CALL "UPDRF1;CLEAR_FIELDS",RF1$,RF1{ALL}
3170 RF1$(1,9)=PO1$(297,9),RF1$(10,3)=PO2$(7,3),RF1$(13,20)=PO2$(91,20)
3175 RF1$(156,10)=REC_BIN$,RF1$(196,3)="001"
3180 RF1$(196,3)=STR(PO3_COUNT:"000")
3200 DIM WHS$(4); CALL "UPDPO3;READBYKEY",Z[15],0,FS3_ORD$,PO3_LINE_SEQ$[PO3_COUNT],SEG3$,SEG4$,SEG5$,PO3$,PO3{ALL},FOUNDPO3; IF FOUNDPO3 THEN IF PO3$(11,1)="D" THEN WHS$=PO3$(12,4) ELSE IF RF1$(11,1)="C" THEN RF1$(96,1)="Y"
3205 IF FOUNDPO3 THEN RF1$(33,4)=PO3$(7,4) ! ssp206649
3210 IF PO2$(14,1)="Y" THEN CALL "UPDPO3;READBYKEY",Z[15],0,PO2$(82,8),PO2$(11,3),DIM(2),SEG4$,SEG5$,PO3$,PO3{ALL},FOUNDPO3; IF FOUNDPO3 THEN IF PO3$(11,1)="D" THEN WHS$=PO3$(12,4)
3220 DIM DEF_BIN$(10),TF_ZONE$(4); CALL "UPDIC1;READBYKEY",Z[16],0,PO2$(91,20),WHS$,SEG3$,SEG4$,SEG5$,IC1$,IC1{ALL},FOUNDIC1; IF FOUNDIC1 THEN DEF_BIN$=IC1$(35,10)
3222 RF1$(56,4)=PAD(WHS$,4)
3225 CALL "UPDRFB;READBYKEY",Z[17],2,PO2$(91,20),SEG2$,SEG3$,SEG4$,SEG5$,RFB$,RFB{ALL},FOUNDRFB ! search for bin reserved for cust/item
3227 CALL "UPDRFB;READNEXT",Z[17],RFB$,RFB{ALL},FOUNDRFB; IF FOUNDRFB THEN IF RFB$(28,10)=PO2$(91,20) THEN DEF_BIN$=RFB$(1,10)
3230 CALL "UPDRFB;READBYKEY",Z[17],0,DEF_BIN$,WHS$,SEG3$,SEG4$,SEG5$,RFB$,RFB{ALL},FOUNDRFB; IF FOUNDRFB THEN RF1$(191,4)=RFB$(24,4),RF1$(148,4)=RFB$(16,4),TF_ZONE$=RFB$(16,4) ! default bin , reserved for cust/item
3235 RF1$(78,10)=DEF_BIN$,RF1$(88,4)=PO2$(77,4)
3237 GOSUB 6000
3240 RF1[3]=PO_LINE_QTY*Q0
3245 RF1[0]=0 ! no package uom yet
3250 RF1$(100,40)=PO2$(28,40),RF1[2]=PO2[11],RF1[3]=PO2[6]
3255 RF1[5]=PO2[0],RF1[1]=PO2[21]
3257 RF1$(199,3)=PO2$(11,3)
3260 CALL "UPDRFZ;READBYKEY",RFZ,0,TF_ZONE$,SEG2$,SEG3$,SEG4$,SEG5$,RFZ$,RFZ{ALL},FOUNDRFZ; IF FOUNDRFZ THEN RF1$(152,4)=RFZ$(10,4)
3300 ! replace qty option only .  may need to change to increment later
3310 CALL "UPDRF1;INSERT",Z[1],RF1$,RF1{ALL},OK
3320 GOSUB PRINT_LABELS
3350 CALL "UPDRFA;ADD_RC",Z[2],X3$,RF1$,PO_LINE_QTY,0
3400 LAST_ITEM$=PO2$(91,20),LAST_ITEM_DESC$=PO2$(28,40),LAST_ITEM_QTY=PO_LINE_QTY,LAST_ITEM_UOM$=PO2$(77,4)
3900  } ! 3150 po_line_qty
3930 NEXT PO3_COUNT ! 3105
3940  } ! 3100
3945  } ! 3010
3950  } ! 2150 foundpo1
3990 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="180032.20060308",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
3995 IF NOT(FOUNDPO1) THEN BASIC$="RFGRH0",TEMPLATE$="rfgrh0.htm" ELSE IF NOT(FOUNDITEM) THEN BASIC$="RFGRD0",TEMPLATE$="rfgrd0.htm"
3997 IF PO_LINE_QTY THEN BASIC$="RFGRD0",TEMPLATE$="rfgrd0.htm"
4000 SWITCH TEMPLATE$
4010 CASE "rfgrd0.htm"
4020 PERFORM "RFGRDT;PROCESS_TEMPLATE_RFGRD0"
4050 BREAK
4060 CASE "rfgrh0.htm"
4065 PERFORM "RFGRDT;PROCESS_TEMPLATE_RFGRH0"
4067 BREAK
4100 DEFAULT 
4110 PERFORM "RFGRDT;PROCESS_TEMPLATE_RFGRD1"
4200 END SWITCH 
5000 GOTO 9900
5010 LINE$=TAG$+" "+TAGDESC$
5090 RETURN 
5100 ADD_MSG_TO_LOG:! Add message to log file
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+ECD$(1,10)+"|LINE|"+ECE$(25,3)+"|MESSAGE NO|"+STR(MESSAGE_NO:"00000")+"|MESSAGE|"+MESSAGE$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
5490 RETURN ! 5200
5500 REM create description html
5590 RETURN 
6000 ! get conversion
6010 DIM UOM[2]; Q0=PO2[2]
6020 READ (Z[13],KEY="U/M"+PO2$(77,4),ERR=*RETURN)UOM$,UOM[0],UOM[1],UOM[2]
6030 IF MID(UOM$,21,1)="Y" THEN Q0=1; GOTO *RETURN
6035 IF MID(UOM$,20,1)="Y" THEN Q0=UOM[1] ELSE Q0=PO2[2]
6040 IF Q0=0 THEN Q0=1
6090 RETURN 
8150 BYB_PROCESSING:! Send LINE$ to EC3BYB for generic fields processing
8160 CALL "EC3BYB",ERR=8161,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$
8195 RETURN 
8910 DEF FND$(Z9$)=Z9$(3,2)+"/"+Z9$(5,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 CLOSE (100)
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 CLOSE (13)
9950 EXIT 
9999 END 
10000 SPLIT_VALUES:
10010 IF POS("po_line_qty"=TAG$)<>0 THEN {
10020 XP1=POS("<"=TAG$),XP2=POS(">"=TAG$)
10030 TAG$=TAG$(1,XP2-1); VAL=NUM(TAG$(XP1+1))
10040 PO_LINE_QTY$[VAL]=TF_VALUE$
10045 IF VAL>SEQ THEN SEQ=VAL
10050  }
10100 IF POS("wms_loc_code"=TAG$)<>0 THEN {
10110 XP1=POS("<"=TAG$),XP2=POS(">"=TAG$)
10120 TAG$=TAG$(1,XP2-1); VAL=NUM(TAG$(XP1+1))
10130 WMS_LOC_CODE$[VAL]=TF_VALUE$
10150  }
10160 IF POS("po3_seq_num"=TAG$)<>0 THEN {
10170 XP1=POS("<"=TAG$),XP2=POS(">"=TAG$)
10180 TAG$=TAG$(1,XP2-1); VAL=NUM(TAG$(XP1+1))
10190 PO3_LINE_SEQ$[VAL]=TF_VALUE$
10195  }
10490 RETURN 
10498 ! 
10499 ! 
15000 PRINT_LABELS:
15010 PRINT_LABEL=0; PRINT_LABEL=NUM(PRINT_LABEL$,ERR=*NEXT)
15020 IF PRINT_LABEL THEN {! 3985
15030 CALL "UPDRFQ;ADD_FROM_RF1",RFQ,RF1$,RFK$,X3$,PRINT_LABEL
15080  }
15090 RETURN 
15098 ! 
15099 ! 
56000 REM "180032-Wireless Warehousing                                        
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
