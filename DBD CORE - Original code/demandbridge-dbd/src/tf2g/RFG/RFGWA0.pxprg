0010 REM "WMS Put Away <RFGWA0>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 01/14/21 - 11.166388 - jvv - SSP# 307327
0037 REM "307327-WMS Receiving Fiscal Year and Accounting period - DBD-151   
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="RFGWA0",X1$="WMS Put Away"
0120 EOL$=ATH(STP(EC_PARM$(57,8),1))
0130 M1I$="###,###,##0-",M1D$="###,###0.00-"
0140 CART_DISP_KEY=5
0300 REM "IOLISTS
0305 IOL_RF1:IOLIST RF1$,RF1{ALL}
0310 IOL_RFK:IOLIST RFK$
0320 IOL_RF2:IOLIST RF2$
0325 IOL_RFZ:IOLIST RFZ$
0330 IOL_ECB:IOLIST ECB$
0340 IOL_PO1:IOLIST PO1$
0350 IOL_FTO:IOLIST FTO$
0360 IOL_FS2:IOLIST FS2$,FS2{ALL}
0370 IOL_PO2:IOLIST PO2$,PO2{ALL}
0375 IOL_FM1:IOLIST FM1$,FM1{ALL}
0380 IOL_IC0:IOLIST IC0$,IC0{ALL}
0390 IOL_AP4:IOLIST AP4$
0400 IOL_PO3:IOLIST PO3$,PO3{ALL}
0410 IOL_IC1:IOLIST IC1$,IC1{ALL}
0420 IOL_RFB:IOLIST RFB$,RFB{ALL}
0430 IOL_SMR:IOLIST SMR$,SMR{ALL}
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O RFK...  02O RF2...  03O RFI...  04O RFB...  08O SMR...  09O FS2...  10O PO1...  11O FTO...  12O PO2...  13O ZZPARM  15O PO3...  16O IC1...  17O RF1...  18O RFA...  19O RFQ...  20OSRF1...  21O PO6...  22O JT0...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0590 READ (Z[13],KEY=X3$(9,3)+"I/C")ICPARM$
0591 READ (Z[13],KEY=X3$(9,3)+"W/M",DOM=*NEXT)WMPARM$
0599 ! 
0600 REM "Get WMS User
0610 FIND (Z[1],KEY=EC$[2](1,15))IOL=IOL_RFK
0620 GOSUB GET_AVAILABLE_CARTS
0625 REM "Override default key used for cart display
0630 ALT_CART_DISP_KEY=-1; ALT_CART_DISP_KEY=NUM(MID(WMPARM$,9,1),ERR=*NEXT); IF ALT_CART_DISP_KEY>0 THEN CART_DISP_KEY=ALT_CART_DISP_KEY
0900 ! 
0910 DIM RF1_IN$(900),RF1_IN[10],RF1_SET[10],RF1_IN_DATA$[2000],RF1_IN_DATA[2000,10],RF1_SET_DATA[2000,10]
0920 VIEW_MODE$="" ! View mode - Blank (default) - show unprocessed cart entries only, "A" - show all cart entries
0999 ! 
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1020 T_IN=POS("."=TAG$); IF T_IN THEN TAG_PARM$=MID(TAG$,T_IN+1),TAG$=MID(TAG$,1,T_IN-1) ELSE TAG_PARM$=""
1025 SWITCH TAG$ ! 1185 end switch
1026 CASE "new_cart"; IF UCS(VALUE$)="Y" THEN NEW_CART$="Y" END_IF ; BREAK
1028 CASE "cart"; CART$=PAD(VALUE$,10); BREAK
1035 CASE "view_mode"; IF UCS(VALUE$)="A" THEN VIEW_MODE$="A" ELSE IF UCS(VALUE$)="F" THEN VIEW_MODE$="F" END_IF END_IF ; BREAK ! A - Show all entries, F - Filter entries
1038 CASE "complete"; IF UCS(VALUE$)="Y" THEN COMPLETE$="Y" END_IF ; BREAK
1040 CASE "putaway"; IF UCS(VALUE$)="Y" THEN PUTAWAY$="Y" END_IF ; BREAK
1145 CASE "bin_qty"; GOSUB PARSE_DATA_TAG; IF VAL_COUNT=0 THEN GOTO *BREAK ELSE FOR VAL_INDEX=1 TO VAL_COUNT; RF1_IN_DATA[VAL_INDEX,3]=-1; IF NOT(NUL(VAL$[VAL_INDEX])) THEN RF1_IN_DATA[VAL_INDEX,3]=NUM(VAL$[VAL_INDEX],ERR=*PROCEED) END_IF ; NEXT VAL_INDEX; BREAK
1147 CASE "bin_number"; GOSUB PARSE_DATA_TAG; IF VAL_COUNT=0 THEN GOTO *BREAK ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF NOT(NUL(VAL$[VAL_INDEX])) THEN RF1_IN_DATA$[VAL_INDEX](78,10)=UCS(VAL$[VAL_INDEX]) END_IF ; NEXT VAL_INDEX; BREAK
1150 CASE "rf1_key"; GOSUB PARSE_DATA_TAG; IF VAL_COUNT=0 THEN GOTO *BREAK ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF NOT(NUL(VAL$[VAL_INDEX])) THEN RF1_IN_DATA$[VAL_INDEX](1,23)=UCS(VAL$[VAL_INDEX]) END_IF ; NEXT VAL_INDEX; BREAK
1180 DEFAULT ; VIA TAG$=VALUE$; BREAK ! Set to same name variable as TAG$
1185 END SWITCH ! 1050
1190 NEXT I
1195 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="20120707",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1200 REM "Process input
1201 IF POS("A"=RFK$(111,20))=0 THEN ERRCODE$="0"; GOTO 1500
1205 PROCESS_CART:
1210 IF NOT(NUL(CART$)) THEN IF CART$<>EC$[1](1277,10) THEN GOSUB SET_ACTIVE_CART; IF NOT(NUL(ERRCODE$)) THEN GOTO 1500 END_IF ; END_IF ELSE CART$=EC$[1](1277,10)
1220 IF NUL(CART$) THEN IF NEW_CART$<>"Y" THEN ERRCODE$="1"; GOTO 1500 ELSE IF NUL(BINLIST$) THEN ERRCODE$="105"; GOTO 1500
1240 IF COMPLETE$="Y" THEN GOSUB COMPLETE_PUTAWAY; IF NOT(NUL(ERRCODE$)) THEN GOTO 1500
1250 IF PUTAWAY$="Y" THEN GOSUB PUTAWAY_RECEIPT; IF NOT(NUL(ERRCODE$)) THEN GOTO 1500
1270 IF NOT(NUL(CART$)) THEN GOSUB CHECK_PUTAWAY_CART; IF CART_CNT[1]=0 THEN WARNCODE$="2" ELSE IF CART_CNT[2]=0 THEN WARNCODE$="201"
1499 ! 
1500 REM "Fill out the template
1503 GOSUB EVAL_ERR_CODE
1504 IF NOT(NUL(%BASIC2$)) OR %NEW_CALL_PROG THEN GOTO 2990 ! Skip outputting template if additional program to be done
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1510 READ (100,END=2950)LINE$; LINE$=FNBYB$(LINE$)
1515 CHKTAG=1
1520 WHILE CHKTAG ! 2800 wend
1522 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
1530 TAG$=LINE$(P1,MSL); LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
1600 SWITCH TAG$ ! 2790 end switch
1603 CASE "?tf?cart?"
1606 MX=FNN(STP(CART$,2)); BREAK
1621 CASE "?tf?recv_cart_list?"
1624 GOSUB GET_CART_LIST; MX=FNN(CART_LIST$); BREAK
2600 CASE "?tf?error_section_start?"
2603 GOSUB GET_ERROR_SECTION; LINE$=ERROR_SECTION$; BREAK
2618 CASE "?tf?uom_list?"
2621 GOSUB GET_UOM_LIST; MX=FNN(UOMLIST$); BREAK
2640 CASE "?tf?display_recv_cart_start?"
2645 GOSUB DISPLAY_RECV_CART; LINE$=CART_SECTION$; BREAK
2650 CASE "?tf?view_mode?"
2655 MX=FNN(VIEW_MODE$); BREAK
2660 CASE "?tf?view_rf1_key?"
2665 MX=FNN(VIEW_RF1_KEY$); BREAK
2670 CASE "?tf?view_lot_num?"
2675 MX=FNN(VIEW_LOT_NUM$); BREAK
2785 DEFAULT ; LINE$=LINE1$+LINE2$ ! Unknown tag, discard
2790 END SWITCH ! 1600
2800 WEND ! 1520
2810 PRINT (OUTPUT)LINE$,EOL$,
2900 GOTO 1510; REM next read
2990 GOTO 9900
2999 ! 
5000 REM "take Q$, try to figure out date and return in Q$
5001 REM "assume MM?DD?YY(YY) format where we don't care about ?'s. if only YY then pivot on 60
5005 CONVERT_DATE:
5010 IF LEN(Q$)=7 AND Q$(2,1)="/" THEN Q$="0"+Q$
5015 IF LEN(Q$)<6 THEN GOTO ERR_INVALID_DATE ELSE IF LEN(Q$)>=8 THEN Q$=Q$(1,2)+Q$(4,2)+Q$(7); IF LEN(Q$)>8 THEN Q$=Q$(1,8)
5020 REM "NOW in MMDDYY.. format
5025 IF LEN(Q$(5))>2 THEN YY$=Q$(5) ELSE IF Q$(5)<"60" THEN YY$="20"+Q$(5) ELSE YY$="19"+Q$(5)
5030 TMP$=Q$,Q$=DIM(6),Q$=CHR(NUM(YY$(1,3),ERR=ERR_INVALID_DATE)-125,ERR=ERR_INVALID_DATE)+YY$(4,1)+TMP$(1,4)
5045 RETURN 
5046 ERR_INVALID_DATE: ERRCODE$="401"; RETURN 
5049 ! 
5050 REM "Unit of Measure
5055 GET_UOM_FORMATTED:
5060 U=1 ! Given U$ and U_QPM, get components required to calculate display units
5065 DIM UOM[2]; FIND (Z[13],KEY="U/M"+U$,DOM=*RETURN)UOM$,UOM[0],UOM[1]
5070 IF UOM$(20,1)="Y" THEN U=UOM[1] ELSE U=U_QPM
5080 IF U=0 THEN U=1
5095 RETURN 
5099 ! 
5100 LOG_MSG:! Add message to log file
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$+LOG_MESG$)
5145 RETURN 
5149 ! 
6100 REM "Given FIND_BIN$, get bin record and information
6105 GET_BIN_INFO:
6110 DIM RFB$(1000),RFB[4]; FIND (Z[4],KEY=FIND_BIN$+FIND_WHSE$,ERR=ERR_INVALID_BIN)IOL=IOL_RFB
6115 BIN_FMT$=FIND_BIN$; IF NOT(NUL(RFB$(69,15))) THEN BIN_MASK$=PAD(STP(RFB$(69,15),2),15,1,"X"); BIN_FMT$=STR(FIND_BIN$:BIN_MASK$)
6120 RETURN 
6125 ! 
6200 REM "Get Units of measure list in the form of HTML select dropdown
6201 GET_UOM_LIST:
6205 GOSUB SET_XI
6210 UOMLIST$=""
6215 READ (Z[13],KEY="U/M",DOM=*NEXT)
6220 UOMK$=KEY(Z[13],END=6239); READ (Z[13],KEY=UOMK$)UOMREC$; IF MID(UOMREC$,1,3)<>"U/M" THEN GOTO 6239
6225 IF MID(UOMREC$,22,1)<>"Y" THEN UOMLIST$=UOMLIST$+"<option value="+QUO+UOMREC$(4,4)+QUO+">"+UOMREC$(4,4)+"</option>"+EOL$
6230 GOTO 6220
6240 GOSUB CLEAR_XI
6245 RETURN 
6249 ! 
6250 VALIDATE_PUTAWAY_DATA:
6255 IF PU_QTY>RF1[3] THEN GOTO ERR_INVALID_NUM
6265 DIM RFB$(1000),RFB[4]; READ (Z[4],KEY=PU_BIN$+RF1$(56,4),DOM=ERR_INVALID_BIN)IOL=IOL_RFB
6275 IF NOT(NUL(MID(RFB$,27,20))) AND MID(RFB$,27,20)<>RF1$(13,20) THEN GOTO ERR_RESERVED_BIN
6285 RETURN 
6289 ! 
6291 ERR_INVALID_NUM: ERRCODE$="402"; RETURN 
6292 ERR_INVALID_BIN: ERRCODE$="403"; RETURN 
6293 ERR_RESERVED_BIN: ERRCODE$="404"; RETURN 
6299 ! 
6300 REM "Process RF1 entry for submitted putaway - form must have "putaway=Y" to trigger this
6305 PUTAWAY_RECEIPT:
6310 IF PUTAWAY$<>"Y" THEN RETURN 
6320 FOR UPD_INDEX=1 TO HIGHEST_VAL_COUNT
6330 DIM RF1$(900),RF1[10]; READ (Z[17],KEY=MID(RF1_IN_DATA$[UPD_INDEX],1,23))IOL=IOL_RF1; IF RF1$(156,10)<>CART$ OR RF1_IN_DATA[UPD_INDEX,3]<=0 THEN GOTO *CONTINUE
6340 PU_QTY=RF1_IN_DATA[UPD_INDEX,3]
6350 PU_BIN$=MID(RF1_IN_DATA$[UPD_INDEX],78,10)
6360 GOSUB VALIDATE_PUTAWAY_DATA; IF NOT(NUL(ERRCODE$)) THEN GOTO *BREAK
6370 LEFT_OVER_QTY=RF1[3]-PU_QTY
6380 RF1$(78,10)=PU_BIN$,RF1[3]=PU_QTY
6385 RF1$(176,15)=EC$[2](1,15),RF1$(195,1)="Y"
6390 WRITE (Z[17],KEY=RF1$(1,12)+RF1$(140,8)+RF1$(196,3))IOL=IOL_RF1
6400 CALL "UPDRFA;ADD_PU",Z[18],X3$,RF1$,RF1[3],0,RF1[1] ! 268565
6410 IF LEFT_OVER_QTY>0 THEN {
6420 RF1$(78,10)="",RF1$(195,1)="",RF1[3]=LEFT_OVER_QTY
6430 IF RF1$(196,3)<"999" THEN RF1$(196,3)=STR(NUM(RF1$(196,3))+1:"000") ELSE RF1$(196,3)=FN%NEXT_SEQ$(RF1$(196,3),6) ! Increment sequence, using letters if numbers run out
6440 WRITE (Z[17],KEY=RF1$(1,12)+RF1$(140,8)+RF1$(196,3),DOM=6430)IOL=IOL_RF1
6450  }
6460 NEXT UPD_INDEX
6470 IF NUL(ERRCODE$) THEN VIEW_MODE$="",VIEW_RF1_KEY$="",VIEW_LOT_NUM$="" ! If no errors then clear view filter mode
6495 RETURN 
6499 ! 
6500 REM "Check cart whether empty or if all entries have been put away
6505 CHECK_PUTAWAY_CART:
6507 DIM CART_CNT[2] ! [1]=Total entries, [2]=Entries to be put away
6510 READ (Z[20],KEY=CART$,KNO=CART_DISP_KEY,DOM=*NEXT)
6515 RF1K$=KEY(Z[20],END=CPC_CART_CMPL); DIM RF1$(900),RF1[10]; READ (Z[20],KEY=RF1K$)IOL=IOL_RF1; IF RF1$(156,10)<>CART$ THEN GOTO CPC_CART_CMPL
6520 IF MID(RF1$,195,1)<>"Y" AND MID(RF1$,96,1)<>"Y" THEN {
6525 CART_CNT[2]=CART_CNT[2]+1 ! At least one entry yet to be put away and is not a stopover, so cart not complete
6530  }
6532 CART_CNT[1]=CART_CNT[1]+1 ! Keep track of number of entries in cart
6535 GOTO 6515
6540 CPC_CART_CMPL:
6545 RETURN 
6549 ! 
6800 REM "Display cart contents - all RF1 recs that are in currently specified cart
6805 DISPLAY_RECV_CART:
6810 CART_SECTION$="",CT_TAGS$="001<po_number>002<po_line_number>003<whse>004<recv_qty>005<uom_fmt>006<po_number_fmt>007<item_key>008<item_cust_code>009<item_cust_code_fmt>0010<item_code>011<item_desc>012<lot_num>013<rf1_key>014<stopover>015<stopover_asterisk>016<bin>017<putaway>018<putaway_asterisk>019<putaway_completed_start>020<putaway_not_completed_start>021<view_mode>022<view_rf1_key>023<view_lot_num>024<bin_fmt>"
6815 IF POS("?tf?display_recv_cart_end?"=LINE$) THEN GOTO *NEXT ELSE READ (100,END=*NEXT)TMPLINE$; TMPLINE$=FNBYB$(TMPLINE$); LINE$+=TMPLINE$+EOL$; GOTO *SAME
6820 E1=POS("?tf?display_recv_cart_start?"=LINE$); IF E1>0 THEN LINE1$=MID(LINE$,1,E1-1); LINE$=LINE$(E1+28) ELSE RETURN 
6825 E2=POS("?tf?display_recv_cart_end?"=LINE$); IF E2>0 THEN LINE2$=MID(LINE$,E2+26); LINE$=LINE$(1,E2-1) ELSE RETURN 
6830 IF NUL(CART$) THEN GOTO 6891
6835 READ (Z[20],KEY=CART$,KNO=CART_DISP_KEY,DOM=*NEXT)
6840 RF1K$=KEY(Z[20],END=6895); DIM RF1$(900),RF1[10]; READ (Z[20],KEY=RF1K$)IOL=IOL_RF1; IF RF1$(156,10)<>CART$ THEN GOTO 6895
6842 IF (NUL(VIEW_MODE$) OR POS(VIEW_MODE$="AF")=0) THEN IF NOT(NUL(RF1$(195,1))) THEN GOTO 6840 ! Default view mode - Skip cart entries that have been put away already
6843 IF VIEW_MODE$="A" THEN GOTO *NEXT ELSE IF VIEW_MODE$="F" THEN IF (NUL(VIEW_LOT_NUM$) OR VIEW_LOT_NUM$<>RF1$(140,8)) AND (NUL(VIEW_RF1_KEY$) OR VIEW_RF1_KEY$<>(RF1$(1,12)+RF1$(140,8)+RF1$(196,3))) THEN GOTO 6840 ! show all entries (mode = A) or show only matching filtered entries (mode = F)
6845 CT_SECTION$=LINE$
6847 CTINDEX=POS("?tf?"=CT_SECTION$); IF CTINDEX=0 THEN GOTO 6891
6848 CTEND_INDEX=POS("?"=CT_SECTION$(CTINDEX+4)),CTTAG$=CT_SECTION$(CTINDEX+4,CTEND_INDEX-1),CT1$=CT_SECTION$(1,CTINDEX-1),CT2$=CT_SECTION$(CTINDEX+CTEND_INDEX+4),CTPOS=POS("<"+CTTAG$+">"=CT_TAGS$); IF CTPOS=0 THEN CT_SECTION$=CT1$+CT2$,CTINDEX=0 ELSE CTINDEX=NUM(CT_TAGS$(CTPOS-3,3))
6849 ON CTINDEX GOTO 6889,6850,6851,6852,6853,6854,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,6873,6889
6850 CT_SECTION$=CT1$+RF1$(1,9)+CT2$; GOTO 6890; REM " po_number
6851 CT_SECTION$=CT1$+RF1$(10,3)+CT2$; GOTO 6890; REM " po_line_number
6852 CT_SECTION$=CT1$+RF1$(56,4)+CT2$; GOTO 6890; REM " whse
6853 CT_SECTION$=CT1$+STR(RF1[3])+CT2$; GOTO 6890; REM " recv_qty
6854 CT_SECTION$=CT1$+STP(RF1$(88,4),2)+"/"+STR(RF1[1])+CT2$; GOTO 6890; REM " uom_fmt
6855 CT_SECTION$=CT1$+FN%ZZDISP$(RF1$(1,9),"P/O")+CT2$; GOTO 6890; REM " po_number_fmt
6856 CT_SECTION$=CT1$+RF1$(13,20)+CT2$; GOTO 6890; REM " item_key
6857 CT_SECTION$=CT1$+STP(RF1$(13,10),2)+CT2$; GOTO 6890; REM " item_cust_code
6858 CT_SECTION$=CT1$+STP(FN%ZZDISP$(RF1$(13,10),"A/R"),2)+CT2$; GOTO 6890; REM " item_cust_code_fmt
6859 CT_SECTION$=CT1$+STP(RF1$(23,10),2)+CT2$; GOTO 6890; REM " item_code
6860 CT_SECTION$=CT1$+STP(RF1$(100,40),2)+CT2$; GOTO 6890; REM " item_desc
6861 CT_SECTION$=CT1$+RF1$(140,8)+CT2$; GOTO 6890; REM " lot_num
6862 CT_SECTION$=CT1$+RF1$(1,12)+RF1$(140,8)+RF1$(196,3)+CT2$; GOTO 6890; REM " rf1_key
6863 CT_SECTION$=CT1$+RF1$(96,1)+CT2$; GOTO 6890; REM " stopover
6864 CT_SECTION$=CT1$+TBL(RF1$(96,1)="Y","","*")+CT2$; GOTO 6890; REM " stopover "*"
6865 CT_SECTION$=CT1$+STP(RF1$(78,10),2)+CT2$; GOTO 6890; REM " bin
6866 CT_SECTION$=CT1$+RF1$(195,1)+CT2$; GOTO 6890; REM " putaway
6867 CT_SECTION$=CT1$+TBL(RF1$(195,1)="Y","","*")+CT2$; GOTO 6890; REM " putaway "*"
6868 PUTAWAY_CHECK=1; END_TAG$="putaway_completed_end"; GOSUB IS_PUTAWAY_COMPLETED; CT_SECTION$=CT1$+CT2$; GOTO 6890; REM " putaway_completed_start and end control tags
6869 PUTAWAY_CHECK=0; END_TAG$="putaway_not_completed_end"; GOSUB IS_PUTAWAY_COMPLETED; CT_SECTION$=CT1$+CT2$; GOTO 6890; REM " putaway_not_completed_start and end control tags
6870 CT_SECTION$=CT1$+VIEW_MODE$+CT2$; GOTO 6890; REM " view_mode
6871 CT_SECTION$=CT1$+VIEW_RF1_KEY$+CT2$; GOTO 6890; REM " view_rf1_key
6872 CT_SECTION$=CT1$+VIEW_LOT_NUM$+CT2$; GOTO 6890; REM " view_lot_num
6873 FIND_BIN$=RF1$(78,10),FIND_WHSE$=RF1$(56,4); IF NOT(NUL(FIND_BIN$)) THEN GOSUB GET_BIN_INFO ELSE BIN_FMT$="" END_IF ; CT_SECTION$=CT1$+STP(BIN_FMT$,2)+CT2$; GOTO 6890; REM " bin_fmt
6889 CT_SECTION$=CT1$+CT2$; GOTO 6890; REM " Unknown tag, strip off
6890 GOTO 6847
6891 CART_SECTION$+=CT_SECTION$; GOTO 6840
6895 RETURN 
6899 ! 
6900 REM "Control tags section for putaway completed or not
6905 IS_PUTAWAY_COMPLETED:
6910 IF (PUTAWAY_CHECK=1 AND RF1$(195,1)="Y") OR (PUTAWAY_CHECK=0 AND RF1$(195,1)<>"Y") THEN GOTO *RETURN
6920 IF POS("?tf?"=END_TAG$)=0 THEN END_TAG$="?tf?"+END_TAG$+"?" END_IF ; IPC_POS=POS(END_TAG$=CT2$); IF IPC_POS>0 THEN CT2$=MID(CT2$,IPC_POS+LEN(END_TAG$))
6945 RETURN 
6949 ! 
7300 REM "Retrieve 1 or more values in VALUE$ place in VAL$[] and set VAL_COUNT-Values seperated by ', 's (that is comma + blank), current max of 2000 values
7301 REM "We will add all values blank or not
7305 PARSE_DATA_TAG:
7307 DIM VAL$[2000]; VAL_COUNT=0
7310 IF VAL_COUNT=2000 THEN GOTO 7340 ELSE VP=POS(", "=VALUE$); IF VP=0 THEN GOTO 7335
7315 VAL_COUNT=VAL_COUNT+1; IF VP=1 THEN VAL$[VAL_COUNT]="",VALUE$=VALUE$(3); GOTO 7310 ELSE VAL$[VAL_COUNT]=VALUE$(1,VP-1); IF VP=LEN(VALUE$) THEN VALUE$=""; GOTO 7340 ELSE VALUE$=VALUE$(VP+2); GOTO 7310
7335 REM "finish up last one
7337 VAL_COUNT=VAL_COUNT+1; VAL$[VAL_COUNT]=VALUE$
7340 IF VAL_COUNT>HIGHEST_VAL_COUNT THEN FOR TMP_INDEX=HIGHEST_VAL_COUNT+1 TO VAL_COUNT; RF1_IN_DATA$[TMP_INDEX]=DIM(LEN(RF1_IN$)); NEXT TMP_INDEX; HIGHEST_VAL_COUNT=VAL_COUNT; REM "If new higher val count value then initialize data array
7345 RETURN 
7349 ! 
7405 UNLOCK_PO:
7410 IF NUL(FTO_PONUM$) THEN RETURN 
7415 READ (Z[17],KEY=FTO_PONUM$,DOM=*NEXT)
7420 RF1K$=KEY(Z[17],END=*NEXT); IF MID(RF1K$,1,9)=FTO_PONUM$ THEN RETURN ! PO exists in cart, do not remove FTO
7425 REMOVE (Z[11],KEY=FTO_PONUM$,DOM=*NEXT)
7445 RETURN 
7449 ! 
7500 REM "Populate SMR with all processed cart entries (all should have been received and putaway completed at this time)
7505 TRANSFER_CART_TO_SMR:
7510 READ (Z[20],KEY=CART$,KNO=1,DOM=*NEXT)
7515 RF1K$=KEY(Z[20],END=TRANSFER_CART_CMPL); DIM RF1$(900),RF1[10]; READ (Z[20],KEY=RF1K$)IOL=IOL_RF1; IF RF1$(156,10)<>CART$ THEN GOTO TRANSFER_CART_CMPL
7520 IF MID(RF1$,96,1)="Y" THEN {! Stopover line found
7525 WRITE (Z[21],KEY="L"+RF1$(56,4)+RF1$(1,8)+RF1$(199,3)) ! Print packing list for this stopover line
7527 FTO_PONUM$=MID(RF1K$,33,9); GOSUB UNLOCK_PO ! Check if the receiving lock can be cleared on this PO
7528 LOG_MESG$="CART|"+CART$+"|RF1|"+RF1K$(33,23)+"|STOPOVER|PRINT PACKING LIST|"; GOSUB LOG_MSG
7529  } ELSE {! This is a whse receipt, put in SMR
7531 GOSUB WRITE_SMR
7532 LOG_MESG$="CART|"+CART$+"|RF1|"+RF1K$(33,23)+"|PUT AWAY|MOVED TO SMR FILE|"; GOSUB LOG_MSG
7533  }
7535 REMOVE (Z[17],KEY=MID(RF1K$,33,23),ERR=ERR_COMPLETE_PUTAWAY) ! Remove entry from RF1
7536 LOG_MESG$="CART|"+CART$+"|RF1|"+RF1K$(33,23)+"|REMOVED FROM CART|"; GOSUB LOG_MSG
7537 GOTO 7515
7540 TRANSFER_CART_CMPL:
7545 RETURN 
7549 ! 
7550 REM "Create PO Receiving batch for current cart
7555 PERFORM_PO_RECEIVING:
7560 IF X3$(145,1)="1" THEN CALL "ZZBATZ",X3$,X4$,"PO2MAG","WMS PO Receiving "+EC$[2](1,15) ! Setup new PO Receiving batch header and update X3$
7565 CALL "UPDFTO;CHANGE_WMS_BATCH",Z[17],Z[11],X3$,CART$ ! Mark all POs in cart as being received in WMS Receiving batch
7570 CALL "ZZ2RPA;PREP_PRINT_REPORT","SM2RBA","","SMR" ! Prepare for CIG+ call using the batch that was just setup
7575 GOSUB TRANSFER_CART_TO_SMR ! Prepare SMR input file prior to calling CIG+
7580 %WMS_RECV$="Y"
7585 REC_CP$=CART$; CALL "SM2UAA",X3$,X4$,"SMR",REC_CP$ ! Call to CIG+
7586 LOG_MESG$="CART|"+CART$+"|CIG+ GATEWAY|BATCH|"+X3$(174,4)+"|"; GOSUB LOG_MSG
7587 GOSUB EC3SRV_FILES_WORKAROUND
7590 %WMS_RECV$="",X3$(174,4)=DIM(4) ! Clear batch number from X3$ after call to CIG+
7595 RETURN 
7599 ! 
7600 REM "Complete putaway for all POs in cart
7605 COMPLETE_PUTAWAY:
7607 PUTAWAY_CART=0 ! Assume cart does not qualify for completion, adjust as we go
7610 READ (Z[20],KEY=CART$,KNO=CART_DISP_KEY,DOM=*NEXT)
7615 RF1K$=KEY(Z[20],END=UNLOCK_CART_CMPL); DIM RF1$(900),RF1[10]; READ (Z[20],KEY=RF1K$)IOL=IOL_RF1; IF RF1$(156,10)<>CART$ THEN GOTO UNLOCK_CART_CMPL
7620 IF MID(RF1$,195,1)<>"Y" AND MID(RF1$,96,1)<>"Y" THEN {
7625 GOTO ERR_COMPLETE_PUTAWAY ! At least one entry yet to be put away and is not a stopover, so cart not complete
7630  } ELSE {
7632 PUTAWAY_CART++
7634  }
7635 GOTO 7615
7645 UNLOCK_CART_CMPL:
7650 IF PUTAWAY_CART THEN GOSUB PERFORM_PO_RECEIVING ! Create PO receiving batch for all cart entries only if it is not an empty cart and qualifies for putaway completion
7665 EXTRACT (Z[2],KEY=CART$,DOM=ERR_CART_BUSY)IOL=IOL_RF2
7670 RF2$(11,1)="",RF2$(12,15)=""
7680 WRITE (Z[2],KEY=CART$)IOL=IOL_RF2
7685 GOSUB CLEAR_ACTIVE_SESSION_VARS
7690 RETURN 
7691 ! 
7696 ERR_COMPLETE_PUTAWAY: ERRCODE$="601"; RETURN ! Error completing cart, unprocessed entry found
7699 ! 
7700 REM "Convert and write RF1 record into SMR record
7705 WRITE_SMR:
7708 DIM SMR$(700),SMR[15]
7711 SMR$(1,9)=RF1$(1,9),SMR$(10,3)=RF1$(10,3),SMR$(13,1)=RF1$(36,1) ! SSP206649
7714 SMR$(14,1)=DIM(1)
7717 SMR$(15,6)=X3$(21,6),SMR$(282,6)=X3$(21,6)
7720 TM$=STR(TIM:"00.00"); SMR$(21,4)=TM$(1,2)+TM$(4,2)
7723 SMR$(97,3)="NNN" ! same as SM2UDA/1154
7726 SMR$(100,1)="N" ! same as SM2UCA/1177
7729 SMR$(156,10)=RF1$(78,10)
7732 SMR$(319,5)="WMS  "
7733 GOSUB GET_FY_ACCTPD; SMR$(288,6)=FY_AP$ ! 262567
7735 SMR$(328,10)=RF1$(156,10)
7738 QTY_RECV=RF1[3]; IF RF1[1]>0 THEN QTY_RECV=RF1[3]*RF1[1]
7741 SMR[4]=RF1[3]*RF1[5]
7744 UOM$=RF1$(88,4),QTY_PER_UNIT=RF1[1],UNIT_COST=RF1[5]
7747 CALL "FM2EXT",Z[13],0,UOM$,QTY_PER_UNIT,QTY_RECV,UNIT_COST,EXT_COST,14
7750 SMR[4]=EXT_COST
7753 SMR$(240,8)=RF1$(140,8)
7756 SMR[0]=QTY_RECV ! SMR[0]=RF1[3]
7759 SMR[5]=RF1[0],SMR[6]=RF1[1] ! SMR[7]=RF1[6] ! 251435
7762 IF SMR[6]=0 THEN SMR[6]=1
7765 SMR$(166,4)=RF1$(88,4),SMR$(170,4)=RF1$(92,4)
7768 SMR$(112,12)=RF1$(56,4)+X3$(21,6)+RF1$(197,2)
7771 SMR$(138,9)=RF1$(60,9),SMR$(147,9)=RF1$(69,9)
7774 SMR$(130,8)=UCS(RF1$(176,8)),SMR$(234,6)=RF1$(202,6) ! recv rpt, rev date
7777 IF RF1$(9,1)<>" " THEN DIM FS2$(356),FS2[29]; FIND (Z[9],KEY=RF1$(1,8)+RF1$(10,3),DOM=*NEXT)IOL=IOL_FS2; SMR[7]=FS2[4],SMR$(174,4)=FS2$(124,4),SMR[8]=FS2[5] ! 251435
7780 IF RF1$(9,1)=" " THEN DIM PO2$(170),PO2[28]; FIND (Z[12],KEY=RF1$(1,12),DOM=*NEXT)IOL=IOL_PO2; IF PO2[21]<>0 THEN SMR[7]=PO2[21],SMR$(174,4)=PO2$(146,4),SMR[8]=PO2[20] ! 251435
7782 ! BOXNO=0
7784 NEXT_BOX_NUM:
7786 IF SMR$(124,3)>="ZZZ" THEN GOTO ERR_SEQ_COUNTER ! BOX_NUM=BOX_NUM+1; IF BOX_NUM>999 THEN GOTO ERR_SEQ_COUNTER
7788 SMR$(124,3)=FN%INCR$(SMR$(124,3)) ! STR(BOX_NUM:"000")
7790 WRITE (Z[8],KEY=SMR$(1,13)+SMR$(124,3),DOM=NEXT_BOX_NUM)IOL=IOL_SMR
7795 RETURN 
7796 ! 
7797 ERR_SEQ_COUNTER: ERRCODE$="602"; RETURN ! Seq counter limit exceeded, cannot continue
7799 ! 
7800 REM "Clear active vars stored in session after receiving complete or cancelled
7810 CLEAR_ACTIVE_SESSION_VARS:
7815 CART$="" ! Clear cart
7820 EC$[1](1277,10)=""; EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=*RETURN)ECB$ ! Clear active cart and PO number in session
7830 ECB$(1277,10)=""; WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
7845 RETURN 
7849 ! 
7900 REM "Get F/Y and Acct Period - 262567
7905 GET_FY_ACCTPD:
7910 GOSUB SET_XI
7912 FYREC$=""; IF NUL(X3$(15,6)) THEN GOTO DONE_GET_FY
7913 READ (Z[13],KEY=X3$(9,3)+"W/M",DOM=*NEXT)WM_PARM$; FY_AP$=MID(WM_PARM$,10,6); IF STP(FY_AP$,2)="" THEN GOTO *NEXT ELSE RETURN ! SSP 307327
7915 READ (Z[13],KEY=X3$(9,3)+"F/M")FM_PARM$
7917 IF FM_PARM$(221,1)="Y" THEN GOTO GET_FY_FROM_AR ELSE GOTO GET_FY_FROM_GL
7920 ! 
7925 GET_FY_FROM_GL:
7930 FYKEY$=X3$(9,3)+"G/LYE"
7935 READ (Z[13],KEY=FYKEY$,DOM=*NEXT)
7940 READ (Z[13],END=READ_FY_REC)FYREC$; IF FYREC$(1,8)<>FYKEY$(1,8) THEN GOTO READ_FY_REC END_IF ; IF FYREC$(87,6)<X3$(15,6) THEN GOTO *SAME
7945 FOR I=1 TO NUM(FYREC$(13,2))
7950 IF X3$(15,6)<=FYREC$(15+I*6,6) THEN FY_AP$=FYREC$(9,4)+STR(I:"00"); GOTO *BREAK
7955 NEXT I
7957 GOTO READ_FY_REC
7959 ! 
7960 GET_FY_FROM_AR:
7965 READ (Z[13],KEY=X3$(9,3)+"A/R",DOM=DONE_GET_FY)AR_PARM$
7970 FYKEY$=X3$(9,3)+"G/LYE"; FY_AP$=AR_PARM$(7,6)
7975 ! 
7980 READ_FY_REC:
7982 READ (Z[13],KEY=FYKEY$+FY_AP$(1,4),DOM=*NEXT)FYREC$
7985 DONE_GET_FY:
7990 GOSUB CLEAR_XI
7995 RETURN 
7999 ! 
8000 GET_AVAILABLE_CARTS:
8005 WHSLIST$=MID(RFK$,23,40)
8010 GOSUB SET_XI; CALL "UPDRF2;GETBINLIST",Z[2],"R",BINLIST$,EC$[2](1,15),WHSLIST$
8011 GOSUB CLEAR_XI
8015 RETURN 
8019 ! 
8020 GET_CART_LIST: CART_LIST$=""; IF NUL(BINLIST$) THEN RETURN 
8025 FOR K=1 TO LEN(BINLIST$) STEP 10
8027 SELECTED$=""; IF PAD(CART$,10)=MID(BINLIST$,K,10) THEN SELECTED$=" selected"
8030 CART_LIST$+="<option value="+QUO+BINLIST$(K,10)+QUO+SELECTED$+">"+BINLIST$(K,10)+"</option>"+EOL$
8035 NEXT K
8040  }
8045 RETURN 
8049 ! 
8050 SET_ACTIVE_CART:
8052 GOSUB SET_XI; FIND (Z[2],KEY=CART$,DOM=ERR_BAD_CART)IOL=IOL_RF2
8056 GOSUB CLEAR_XI
8060 IF RF2$(11,1)="R" THEN GOTO ERR_RECV_CART
8064 IF POS(RF2$(11,1)=" C")=0 AND NOT(NUL(RF2$(12,15))) AND RF2$(12,15)<>EC$[2](1,15) THEN GOTO ERR_CART_GRAB
8068 EXTRACT (Z[2],KEY=CART$,DOM=ERR_CART_BUSY)IOL=IOL_RF2
8072 RF2$(11,1)="P",RF2$(12,15)=EC$[2](1,15)
8076 WRITE (Z[2],KEY=CART$)IOL=IOL_RF2
8080 EC$[1](1277,10)=CART$; EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=*RETURN)ECB$ ! Update active cart to session
8082 ECB$(1277,10)=CART$; WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
8084 LOG_MESG$="ACTIVE_CART|"+CART$+"|"; GOSUB LOG_MSG
8085 RETURN 
8089 ! 
8090 REM "Cart - Errors
8091 ERR_BAD_CART: ERRCODE$="101"; GOSUB CLEAR_XI; RETURN ! Cart specified is invalid
8092 ERR_CART_BUSY: ERRCODE$="102"; RETURN ! Cart is currently busy and cannot be accessed
8093 ERR_RECV_CART: ERRCODE$="103"; RETURN ! Cart specified is currently in the Receiving process
8094 ERR_CART_GRAB: ERRCODE$="104"; RETURN ! Cart is in use by a different WMS user
8098 RETURN 
8099 ! 
8600 REM "Workaround to close and reopen specified file channels
8605 EC3SRV_FILES_WORKAROUND:
8610 FSLOT=33009; FFILE$="FMP"; GOSUB RESET_FILE_CHANNEL
8645 RETURN 
8649 ! 
8650 RESET_FILE_CHANNEL:
8660 CLOSE (FSLOT,ERR=*PROCEED); OPEN (FSLOT,ERR=*NEXT)FFILE$+X3$(9,3); GOTO 8690
8670 CLOSE (FSLOT,ERR=*PROCEED); OPEN (FSLOT,ERR=*NEXT)FFILE$
8695 RETURN 
8699 ! 
8700 GET_ERROR_SECTION:
8710 IF POS("?tf?error_section_end?"=LINE$) THEN GOTO *NEXT ELSE READ (100,END=*NEXT)ERRSEC_LINE$; ERRSEC_LINE$=FNBYB$(ERRSEC_LINE$); LINE$+=ERRSEC_LINE$+EOL$; GOTO *SAME
8712 ERROR_SECTION$=""; IF NUL(ERRCODE$) AND NUL(WARNCODE$) THEN RETURN 
8715 E1=POS("?tf?error_section_start?"=LINE$); IF E1>0 THEN LINE1$=MID(LINE$,1,E1-1); LINE$=LINE$(E1+24) ELSE RETURN 
8716 E2=POS("?tf?error_section_end?"=LINE$); IF E2>0 THEN LINE2$=MID(LINE$,E2+22); LINE$=LINE$(1,E2-1) ELSE RETURN 
8720 LINE$=SUB(LINE$,"?tf?errmsg?",ERRMSG$)
8725 LINE$=SUB(LINE$,"?tf?errcode?",ERRCODE$)
8740 ERROR_SECTION$=LINE$
8745 RETURN 
8749 ! 
8750 EVAL_ERR_CODE:
8755 IF NUL(ERRCODE$) AND NUL(WARNCODE$) THEN RETURN 
8760 IF NOT(NUL(ERRCODE$)) THEN ERRCODE$=FN%GET_BASENAME$(PGN)+"-"+ERRCODE$ ELSE ERRCODE$=FN%GET_BASENAME$(PGN)+"-"+WARNCODE$
8765 IF NUL(ERRMSG$) THEN ERRMSG$=MSG(ERRCODE$)
8770 IF NUL(WARNCODE$) THEN IF NOT(NUL(ERROR_TEMPLATE$)) THEN TEMPLATE$=ERROR_TEMPLATE$; BYBINFO$[3]=ERROR_TEMPLATE$ ! Switch to error template, but only if it is not warning, and if an error template was specified
8795 RETURN 
8799 ! 
8800 DEF FNBYB$(LOCAL DATA$)
8801 ! Send DATA$ through EC3BYB
8820 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,DATA$,BYBINFO${ALL},BYBOPTIONS$,100
8840 RETURN DATA$
8845 END DEF
8849 ! 
8920 DEF FNN(LOCAL DATA$)
8925 LINE$=LINE1$+DATA$+LINE2$
8930 RETURN 0
8940 END DEF
8949 ! 
8950 SET_XI:
8955 SET_PARAM 'XI'
8960 RETURN 
8970 CLEAR_XI:
8980 SET_PARAM -'XI'
8990 RETURN 
8999 ! 
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 IF NOT(NUL(ERRCODE$)) THEN LOG_MESG$="ERRCODE|"+ERRCODE$+"|"+ERRMSG$+"|"; GOSUB LOG_MSG
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56002 REM "254323-WMS Put Away process
56004 REM "262567-WMS - Set accounting Period and Year in the PO Recv batch
56005 REM "268565-WMS spreadsheet of RFA file - UNITS_PER_UM is all zeros     
56006 REM "273402-WMS: Alternate sort order for Recv and Put Away cart display
56007 REM "291110-Modify SM files three character BOX_NUMBER to alpha sequence
56008 REM "307327-WMS Receiving Fiscal Year and Accounting period - DBD-151   
