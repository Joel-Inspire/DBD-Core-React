0010 ! RFGRAA - Warehousing Purchase order Receiving
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Feb. 27, 2005 15:59
0030 ! ************************************************************************
0035 REM "5.3 - 03/04/05 - 12.510833 - jme - SSP# 181573
0040 REM "Copyright 2005 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0060 PROCESS "RFGRAA","../RFG/RF.EN"
0090 RELEASE 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*tfmsglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*tfmsglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="REF_CODE$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1050 REC_BIN$=PAD(REC_BIN$,10)
1065 NOF=1; READ (Z[9],KEY=REC_BIN$,DOM=*NEXT); NOF=0
1066 IF NOF THEN MSGBOX MSG("NO_REC_BIN"); NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1092 ENABLE_PO$="Y"
1095 _ENABLE_FLG=-1; GOSUB ENABLE_GROUPS; ENABLE_PO$=""
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1810 CLEAR_REC:
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 SELECT_PORDER:
2010 CALL "ZZWLKU;PARSE_PORDER",PORDER$,PO_DIV$,PO_NUM$; PORDER$=PO_DIV$+PO_NUM$
2050 BSY=1; EXTRACT (Z[10],KEY=PORDER$,ERR=*NEXT); BSY=0
2060 IF BSY THEN MSGBOX MSG("PO_BSY"); NEXT_ID=PORDER.CTL; GOTO *RETURN
2200 REM DISPLAY NOTES
2480 ENABLE_NEXT$="Y"; GOSUB ENABLE_GROUPS; ENABLE_NEXT$=""
2490 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
10000 INIT:
10010 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
10020 GOSUB SETUP_LIBRARY
10030 FLMAINT_MSG$=%OOP_SYS'GET_FLMAINT_MSG$(); IF FLMAINT_MSG$<>"" THEN MESSAGE_LIB FLMAINT_MSG$
10040 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
10050 GOSUB SETUP_KEYS
10060 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; DIM Z[NUM(X3$(60,3))]
10070 COMPANY$=OOP_SYS'GET_COMPANY$()
10080 OOP_RF0=NEW("RF0"),OOP_RF1=NEW("RF1"),OOP_AR1=NEW("AR1"),OOP_IC0=NEW("IC0")
10090 OOP_FM1=NEW("FM1"),OOP_ICF=NEW("ICF"),OOP_ICL=NEW("ICL")
10100 OOP_RFB=NEW("RFB"),OOP_PO1=NEW("PO1"),OOP_ZZPARM=NEW("ZZPARM")
10110 ! Z$="01O RF0...  02O RF0...  03O RF1...  04O AR1...  05O IC0...  06O FM1...  07O ICF...  08O ICL...  09O RFB...  10O PO1...  13O ZZPARM  "
10120?OOP_RF0=NEW("RF0); IF OPEN_STATUS=0 THEN MSGBOX MSG("OPEN_ERROR"); CMD+STR$="END";GOTO *RETURN
10125 OOP_RF1=NEW("RF1")
10990 RETURN 
10998 ! 
10999 ! 
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN REC_BIN$=""
13030 PO_NUM$=""
13050 %RFLAST_SCAN$="",%RFLAST_QTY$=""
13990 REFRESH_FLG=1
13999 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN REF_CODE$=_CUR.REF_CODE$
16030 IF _CHG_VAR$(2,1)="Y" THEN DESCRIPTION$=_CUR.DESCRIPTION$
16040 IF _CHG_VAR$(3,1)="Y" THEN NOT_USED$=_CUR.NOT_USED$
16990 RETURN 
18000 SELECT_NEXT:
18010 IF STP(LOC_CODE$,3," ")="" THEN MSGBOX MSG("LOC_RQ"),"","!"; NEXT_ID=LOC_CODE.CTL; GOTO *RETURN
18050 WRITE LOCK (Z[1],KEY=_KEY$)
18055 %RFLOC$=LOC_CODE$,%RFREF$=REF_CODE$
18060 PERFORM "../RFG/RFGRAB"
18065 _ENABLE_FLG=1; GOSUB ENABLE_GROUPS; _ENABLE_FLG=0
18070 NEXT_ID=PO_NUM.CTL
18090 RETURN 
20000 SELECT_LOC_CODE:
20055 NEXT_ID=NEXT.CTL
20090 RETURN 
20500 SELECT_ABORT:
20990 RETURN 
55000 ENABLE_GROUPS:
55005 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
55020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
55030 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
55040 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
55050 IF ENABLE_PO$="Y" THEN CALL "*wingrp;Enable",PO.GRP$
55060 IF ENABLE_NEXT$="Y" THEN CALL "*wingrp;enable",NEXT.GRP$
55990 RETURN 
