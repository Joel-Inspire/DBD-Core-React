0010 REM "Create and write Finance charge/storage charge lines <RFGXAB>
0035 REM "5.7 - 02/26/15 - 16.536111 - tma - SSP# 275776
0037 REM "275776-ERROR 42 in invoice entry                                   
0040 REM "Copyright 2015 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 DIM DET[1],Y[4],J[1]; REM " B[1],A[14],DET_1$(48) SSP 232906
0100 REM SETERR 9000; SETESC 9300;REM DON'T FORGET THIS
0120 ! ENTER X3$,X4$,ICF_CHANNEL,ART_CHANNEL,RFT_CHANNEL,FMP_CHANNEL,RFB_CHANNEL,HEADER$,LINE$,ORDER_HEADER$,AR_PARM$,A,E$,E{ALL},FLAG$,SEQ$,RWD$,FINANCE$,FINANCE{ALL},TF_STORAGE$,STORAGE{ALL} SSP 232906 - This pgm now done as a PERFORM rather than a CALL from AR2EAT
0190 REM " FILE_ID=Indexed file,INV$=Invoice record for read on direct file,IND_USED index for next for indexed file, DETAIL$=return string for transaction, DET(ALL)= numerics for transaction,FLAG$=END is last in chain NONE= no detail found,SEQ$=sequence for direct file,RWD$=R read, W write, D delete
0200 X0$="RFGXAB"
0220 ICF_CHANNEL=Z[28],ART_CHANNEL=Z[5],RFT_CHANNEL=Z[39],FMP_CHANNEL=Z[6],RFB_CHANNEL=Z[40] ! SSP 225300 SSP 232906
0230 HEADER$=A$,LINE$=B$,ORDER_HEADER$=O$,AR_PARM$=P8$ ! SSP 225300 SSP 232906
0290 IOLIST Y[0],Y[1],Y[2],Y[3],Y[4]
0309 REM "iolist for direct file
0310 IOLIST DETAIL$,DET[0],DET[1]
0319 REM "iolist for indexed file
0330 ! OLIST B0,B$,B[0],B[1] SSP 232906
0335 IOLIST B$,B(0),B(1)
0350 IOLIST A9,E$,E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],E[8],E[9],E[10],E[11],E[12],E[13],E[14],E[15],E[16],E[17],E[18],E[19],E[20],E[21],E[22],E[23],E[24],E[25],E[26],E[27],E[28],E[29],E[30],E[31],E[32],E[33],E[34],E[35],E[36],E[37],E[38],E[39],E[40],E[41],E[42],E[43],E[44],E[45],E[46],E[47],E[48] ! SSP#275776
0355 IOLIST TF_STORAGE$,STORAGE[0],STORAGE[1],STORAGE[2],STORAGE[3],STORAGE[4],STORAGE[5],STORAGE[6],STORAGE[7],STORAGE[8],STORAGE[9],STORAGE[10],STORAGE[11],STORAGE[12],STORAGE[13],STORAGE[14],STORAGE[15],STORAGE[16],STORAGE[17],STORAGE[18],STORAGE[19],STORAGE[20]
0360 IOLIST J0,J$,J[0],J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8],J[9],J[10],J[11],J[12],J[13],J[14],J[15],J[16],J[17],J[18],J[19],J[20]
0380 IOLIST ICF$,ICF[0],ICF[1],ICF[2],ICF[3],ICF[4],ICF[5],ICF[6],ICF[7],ICF[8],ICF[9],ICF[10],ICF[11],ICF[12]
0390 IOLIST O$,O0
0400 REM CALL "ZZINFO",FILE_ID,STATUS,X3$,REC_USED,TOT_REC,KEY_SZ,BYTE,DISC,TYPE,TOT_SEC,FILE_NM$
0505 REM Z=NUM(X3$(60,3)); DIM Z[Z]
0600 REM FID$=FID(FILE_ID),FILE_NAME$=FID$(4,3),INV=18,DIM_1=14
0900 REM ON KEY_SZ GOTO 4000,1000
1000 REM "Read through Lot file ICF and find lot record
1005 DIM ICF$(214),ICF[12]
1007 Q=0,ICF_K$=LINE$(161,10)+LINE$(19,10)+LINE$(10,4),Q1=0
1010 READ (ICF_CHANNEL,KEY=ICF_K$,DOM=1011)
1015 READ (ICF_CHANNEL,END=9900)IOL=0380
1020 IF ICF$(1,LEN(ICF_K$))<>ICF_K$ THEN GOTO 9900
1021 REM PRINT ICF$(1,20),"  ",ICF$(110,11),"   ",LINE$(147,8),"  ",LINE$(6,3)
1025 IF ICF$(110,11)<>LINE$(147,8)+LINE$(6,3) THEN GOTO 1015
1030 IF ICF[11]=0 AND ICF[12]=0 THEN GOTO 1015
1040 BIN$=ICF$(100,10),LOC$=ICF$(21,4)
1041 READ (RFB_CHANNEL,KEY=BIN$+DIM(4),DOM=*NEXT)RFB$; GOTO 1050 ! SSP#230865
1042 READ (RFB_CHANNEL,KEY=BIN$+LOC$,DOM=1015)RFB$
1050 READ (RFT_CHANNEL,KEY=RFB$(57,10)+LOC$,DOM=1015)RFT$
1060 IF RFT$(15,10)=DIM(10) AND RFT$(25,10)=DIM(20) THEN GOTO 1015
1070 READ (FMP_CHANNEL,KEY="X"+RFT$(15,10),DOM=2500)FMP_STORAGE$,ST_QTY_UM
2000 REM "Create the Special charge and write it out
2001 IF ICF[11]=0 THEN GOTO 2500
2005 DIM TF_STORAGE$(289),STORAGE[20]
2015 TF_STORAGE$(7,40)=FMP_STORAGE$(12,40),TF_STORAGE$(50,4)=FMP_STORAGE$(55,4),TF_STORAGE$(54,1)="N"
2020 TF_STORAGE$(3,3)=FMP_STORAGE$(52,3),TF_STORAGE$(2,1)=FMP_STORAGE$(60,1)
2021 TF_STORAGE$(84,5)=HEADER$(128,5)
2022 TF_STORAGE$(54,1)=ORDER_HEADER$(86,1); IF TF_STORAGE$(84,5)="     " THEN TF_STORAGE$(84,5)=AR_PARM$(57,5)
2025 TF_STORAGE$(1,1)="S",TF_STORAGE$(65,10)=RFT$(15,10),TF_STORAGE$(6,1)="N"
2030 DIM J9$(50); READ (FMP_CHANNEL,DOM=2931,KEY="T"+TF_STORAGE$(3,3))J9$
2035 TF_STORAGE$(75,9)=J9$(24,9); IF J9$(23,1)="N" THEN TF_STORAGE$(54,1)="N"
2040 IF FMP_STORAGE$(61,1)="Y" THEN STORAGE[0]=0,STORAGE[1]=0,STORAGE[2]=0,STORAGE[3]=0,STORAGE[4]=0,STORAGE[5]=ICF[11] ELSE STORAGE[0]=1,STORAGE[1]=1,STORAGE[2]=0,STORAGE[3]=ICF[11],STORAGE[4]=0,STORAGE[5]=STORAGE[3]
2050 GOSUB 3100; REM CHECK PRODUCT CODE FOR TAX FLAG
2060 IF TF_STORAGE$<>"" THEN GOSUB 5000 ELSE GOTO 2500; REM WRITE THE PREVIOUS RECORD
2070 DIM E[48]; E$=TF_STORAGE$,E[0]=STORAGE[0],E[1]=STORAGE[1],E[2]=STORAGE[2],E[3]=STORAGE[3],E[4]=STORAGE[4],E[5]=STORAGE[5],E[6]=STORAGE[6],E[7]=STORAGE[7],E[8]=STORAGE[8],E[9]=STORAGE[9],E[10]=STORAGE[10],E[11]=STORAGE[11],E[12]=STORAGE[12]
2071 IF NOT(%MSLC) THEN PERFORM "AR2EAT;PROD_OVERRIDE" ! IF ARS$(122,1)="Y" THEN FIND (Z[16],KEY=A$(133,4)+E$(3,3),DOM=2072)ASQ$; E$(84,5)=ASQ$(8,5); REM "WO89451 SSP 232906
2072 IF %MSLC THEN DIM OSLM$[5],OCM$[10](5," "),OSPLT[5]; CDKEY$="I"+A$(7,8)+A$(1,6)+DIM(4)+"000"; CALL "ARGSCM; FIND_ORDER_DETAIL",CDKEY$,OSLM${ALL},OCM${ALL},OSPLT{ALL},""; PERFORM "AR2EAT;PROD_MULTI_COMM"; PERFORM "AR2EAT;CREATE_AXS_DETAIL" ! SSP 225300" 
2073 PERFORM "AR2EAT;CALC_COMMISSION" ! SSP 225300 SSP 232906
2075 REM GOSUB 5000; REM WRITE THE STORAGE RECORD
2500 REM Create the Finance Special Charge 
2501 IF ICF[12]=0 THEN GOTO 1015
2502 READ (FMP_CHANNEL,KEY="X"+RFT$(25,10),DOM=2985)FMP_FINANCE$,ST_QTY_UM
2505 DIM FINANCE$(289),FINANCE[20]
2515 FINANCE$(7,40)=FMP_FINANCE$(12,40),FINANCE$(50,4)=FMP_FINANCE$(55,4),FINANCE$(54,1)="N"
2520 FINANCE$(3,3)=FMP_FINANCE$(52,3),FINANCE$(2,1)=FMP_FINANCE$(60,1)
2521 FINANCE$(84,5)=HEADER$(128,5)
2522 FINANCE$(54,1)=ORDER_HEADER$(86,1); IF FINANCE$(84,5)="     " THEN FINANCE$(84,5)=AR_PARM$(57,5)
2525 FINANCE$(1,1)="S",FINANCE$(65,10)=RFT$(25,10),FINANCE$(6,1)="N"
2530 DIM J9$(50); READ (FMP_CHANNEL,DOM=2531,KEY="T"+FINANCE$(3,3))J9$
2535 FINANCE$(75,9)=J9$(24,9); IF J9$(23,1)="N" THEN FINANCE$(54,1)="N"
2540 IF FMP_FINANCE$(61,1)="Y" THEN FINANCE[0]=0,FINANCE[1]=0,FINANCE[2]=0,FINANCE[3]=ICF[12],FINANCE[4]=0,FINANCE[5]=ICF[12] ELSE FINANCE[0]=1,FINANCE[1]=1,FINANCE[2]=0,FINANCE[3]=ICF[12],FINANCE[4]=0,FINANCE[5]=FINANCE[3]
2550 IF FINANCE$<>"" THEN GOSUB 5000 ELSE GOTO 1015
2570 DIM E[48]; E$=FINANCE$,E[0]=FINANCE[0],E[1]=FINANCE[1],E[2]=FINANCE[2],E[3]=FINANCE[3],E[4]=FINANCE[4],E[5]=FINANCE[5],E[6]=FINANCE[6],E[7]=FINANCE[7],E[8]=FINANCE[8],E[9]=FINANCE[9],E[10]=FINANCE[10],E[11]=FINANCE[11],E[12]=FINANCE[12]
2571 IF NOT(%MSLC) THEN PERFORM "AR2EAT;PROD_OVERRIDE" ! IF ARS$(122,1)="Y" THEN FIND (Z[16],KEY=A$(133,4)+E$(3,3),DOM=2072)ASQ$; E$(84,5)=ASQ$(8,5); REM "WO89451 SSP 232906
2572 IF %MSLC THEN DIM OSLM$[5],OCM$[10](5," "),OSPLT[5]; CDKEY$="I"+A$(7,8)+A$(1,6)+DIM(4)+"000"; CALL "ARGSCM; FIND_ORDER_DETAIL",CDKEY$,OSLM${ALL},OCM${ALL},OSPLT{ALL},""; PERFORM "AR2EAT;PROD_MULTI_COMM"; PERFORM "AR2EAT;CREATE_AXS_DETAIL" ! SSP 225300"
2573 PERFORM "AR2EAT;CALC_COMMISSION" ! SSP 225300 SSP 232906
2982 REM GOSUB 5000
2985 GOTO 1015
3100 REM "Non-Taxable P/C must have final taxability say-so  
3110 FIND (FMP_CHANNEL,KEY="T"+E$(3,3),DOM=3140)X$
3121 REM IF S$(12,4)=DIM(4) AND MID(AR1$,245,1)="Y" THEN GOTO 3140; REM SSP 187704
3131 IF E$(54,1)="Y" AND POS(X$(23,1)="Y ")=0 THEN E$(54,1)=X$(23,1)
3140 RETURN 
4900 REM "END OF LINES                                                          
4910 Y[4]=-1; WRITE (ART_CHANNEL,IND=0)IOL=0290
4920 CALL "ZZEXPF",X3$,X4$,"X"+STR(ART_CHANNEL),"",G9; IF G9>0 THEN GOTO 5230
4925 EXTRACT (ART_CHANNEL,IND=0)IOL=0290
4930 Z=NUM(FIN(F,"MAXREC")); Y[3]=Z-1
4935 Y[4]=-2; WRITE (ART_CHANNEL,IND=0)IOL=0290
4980 GOTO 5230
5000 REM "WRITE THE RECORD
5010 GOSUB 5200
5020 IF A<=0 THEN GOTO 5150
5040 WRITE (ART_CHANNEL,IND=A)IOL=0350
5050 IF %MSLC THEN PERFORM "AR2EAT;WRITE_MCOMM" ! SSP 225300 SSP 232906
5130 A=A9,A9=0
5150 RETURN 
5200 REM "GET NEXT INDEX TO FILE IN A9                                          
5210 EXTRACT (ART_CHANNEL,IND=0,ERR=5295)IOL=0290
5215 IF Y[4]=-2 THEN READ (ART_CHANNEL); WAIT 0; GOTO 5210
5220 Y[4]=-2; WRITE (ART_CHANNEL,IND=0)IOL=0290
5230 IF Y[1]<1 THEN A9=Y[2],Y[2]=Y[2]+1; GOTO 5260
5255 A9=Y[1]; READ (ART_CHANNEL,IND=A9)Y[1]
5260 IF Y[0]<Y[3]-1 THEN Y[0]=Y[0]+1,Y[4]=-1 ELSE Y[4]=-1; GOTO 4900
5280 WRITE (ART_CHANNEL,IND=0)IOL=0290
5285 IF A0=0 THEN A0=A9
5290 RETURN 
5295 IF ERR<>0 THEN GOTO 9000 ELSE RETRY 
5300 REM "Read for existing transactions and add them up,used during auto gen AR2UTD
5310 TOT=0,B0=IND_USED; DIM B[1],A[DIM_1]
5315 IF FILE_NAME$="APJ" THEN FILE_NAME_2$="API" ELSE FILE_NAME_2$="AR6"
5320 Z$="02O "+FILE_NAME_2$+"...  "; GOSUB 9750
5340 IF B0<=0 THEN GOTO 5385
5345 B1=B0
5350 READ (FILE_ID,IND=B1)IOL=0330
5360 IF LEN(B$)<45 THEN B1=0,TOT=0; GOTO 5385
5370 TOT=TOT+B[0]
5380 GOTO 5340
5385 IF FILE_NAME$="AR7" THEN DET[0]=A[3]-A[6]-TOT ELSE IF FILE_NAME$="APJ" THEN DET(0)=A(13)-A(10)-TOT
5390 RETURN 
5910 CALL "ZZEXPF",X3$,X4$,"X"+STR(FILE_ID),"",G9; IF G9>0 THEN GOTO 9800
5920 CALL "ZZINFO",FILE_ID,X0,X3$,0,Z,0,0,0,0,0,""; Y[3]=Z-1
5930 GOTO 5215
6000 REM "Remove lines for indexed files
6010 IF IND_USED=0 THEN GOTO 6090 ELSE Y5$=""
6020 EXTRACT (FILE_ID,IND=0,ERR=6060)IOL=0290
6030 A1=Y[1],Y[1]=IND_USED,Y[0]=Y[0]-1
6035 READ (FILE_ID,IND=IND_USED)A; IF A>0 THEN Y[0]=Y[0]-1,IND_USED=A; IF POS(BIN(A,3)=Y5$,3)=0 THEN Y5$=Y5$+BIN(A,3); GOTO 6035
6040 WRITE (FILE_ID,IND=IND_USED)A1
6050 Y[4]=-1; WRITE (FILE_ID,IND=0)IOL=0290
6055 GOTO 6090
6060 IF ERR=0 THEN RETRY ELSE GOTO 9000
6090 GOTO 9900
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9110 GOTO 7000
9180 GOTO 1000
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9505 GOTO 6500
9510 SETERR 9000; GOSUB 6500
9520 ON C9 GOTO 1140,2040
9750 REM 
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
9770 RETURN 
9900 REM "END PROGRAM
9910 REM IF FLAG$="ADD" AND KEY_SZ=0 THEN CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 9940
9930 EXIT 
9940 BEGIN ; SETESC 9350
9950 RUN "ZMENU"
9999 END 
56001 REM "202394-Invoice storage and finance charges        
56003 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56004 REM "275776-ERROR 42 in invoice entry                                   
