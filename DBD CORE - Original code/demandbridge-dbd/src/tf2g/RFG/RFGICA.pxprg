0010 REM "Finance & Storage charges for Lot records <RFGICA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.6 - 03/17/09 - 9.405833 - tma - SSP# 228231
0037 REM "228231-WMS - Setup for Bin type setup is misnamed                  
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 9000
0100 PRECISION 14; T2=TIM; PRECISION 2
0105 SETERR 9000; SETESC 9300
0110 X0$="RFGICA",X1$="Lot Finance and Storage costs"
0120 DIM A$(292),A[12],B$(45),B[9],C$(214),D$(256),D[19],S$(50),E$(21),E[1],J1$(46)
0140 Z0$="-##,##0",Z1$="-#,###,##0.00",Z2$="-##0.0000"
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0210 T=1,T0=1,T1=2
0220 W3=131
0225 W=999
0230 DIM T1$(W3,"-"),T2$(W3,"="),T3$(W3,"*"),Y5$(W3),Y6$(W3),W[4]
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,"",-1,X1,X2; IF X1>0 THEN GOTO 9920
0252 IF X3$(66,1)>"6" THEN PRECISION NUM(X3$(66,1),ERR=*NEXT) ELSE PRECISION 6 ! Set precision to 6 for this utility
0260 CALL "ZZRPTP",X3$,X0$,X1$,V9$,V0,Q0$,Q1$,Q2$,Q3$,Q4$,Q5$,Q6$
0270 REM "Initialize variables
0280 DAYS_IN_CYCLE=30
0300 REM "I/O lists
0310 IOLIST A$,A[0],A[1],A[2],A[3],A[4],A[5],A[6],A[7],A[8],A[9],A[10],A[11],A[12]
0320 IOLIST B$,B[0],B[1],B[2],B[3],B[4]
0330 IOLIST C$,C[0],C[1],C[2],C[3],C[4]
0340 IOLIST IC0$
0400 IOLIST J1$
0420 IOLIST X3$,X4$,V1$,V3$,V2$,V0$
0500 REM "Files
0505 DIM Z[NUM(X3$(60,3))]; GOSUB 7400
0510 Y$="01OSICF...  02O RFB...  03O RFT...  04O FM0...  05O AR1...  06O IC0...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Z{ALL},Z0,Z1
0700 REM "Open Printer
0720 REM 
0800 REM "Alternate Sort Info & total dim"
0805 DIM U0$(4)
0810 ON V0 GOTO 0820,0820,0830,0840
0820 DIM U[5]; U=32,U0=5,U[0]=0,U[1]=10,U[2]=10,U[3]=4,U[4]=6,U[5]=2,V1=10,T0=1,U0$="Y   ",T5$="                "; GOTO 0850
0850 DIM T[T0,T1]
0860 V5=V1+1,V6=V5+V2,V7=V6+V3
0895 CALL "ZZPRIN",X0$,X3$,Y0$,V3$,Z{ALL},W8$,W9$,W0,W9,W2,W3,W4; ON W4 GOTO 0896,9920
0900 REM " Position read"
0905 REM "set key file to read from"
0910 CALL "ZZFLES",X3$,Y1$,Y0$,"00O "+V1$+"  ",Z{ALL},Z0,0; IF Z0>0 THEN GOTO 9900 ELSE U1=Z[0]
0930 IF LEN(V2$)>=U*2 THEN GOTO 0965
0934 REM "create default 'all' range key
0935 DIM V2$(U*2),V4$(U,"~"); U3=1
0940 FOR U9=1 TO U0; U3=U3+U[U9-1]+U[U9-1]
0950 V2$(U3+U[U9],U[U9])=V4$(1,U[U9])
0955 NEXT U9
0964 REM "Get starting key from range key
0965 DIM V4$(U); U3=1,U4=1
0970 FOR U9=1 TO U0; U3=U3+U[U9-1]+U[U9-1],U4=U4+U[U9-1]
0975 V4$(U4,U[U9])=V2$(U3,U[U9])
0980 NEXT U9
0985 V4$(U,1)=CHR(ASC(V4$(U,1))-1)
0990 READ (U1,KEY=V4$,DOM=0991)
1000 REM "Read next record
1005 U$=KEY(U1,END=5000)
1006 ! GOTO 1100
1008 REM "check key against range info"
1009 U3=1,U2=1
1010 FOR U9=1 TO U0; U2=U2+U[U9-1],U3=U3+U[U9-1]+U[U9-1]
1020 IF U$(U2,U[U9])<V2$(U3,U[U9]) THEN READ (U1,END=5000); EXITTO 1000
1030 IF U$(U2,U[U9])>V2$(U3+U[U9],U[U9]) THEN IF U0=1 THEN EXITTO 5000 ELSE READ (U1,END=5000); EXITTO 1000
1040 NEXT U9
1100 REM "Get record"
1110 U9$=U$
1111 ICF_ERR$=""; ERR_MSG$="**"
1120 DIM A$(270),A[13]; READ (Z[1],KEY=U$,DOM=*NEXT)IOL=0310; GOTO 1131
1130 DOM_ICF:GOTO NEXT_LOT
1131 REM "Skip this lot if: No bin location or On order
1132 IF NUL(A$(100,10)) OR NOT(NUL(A$(110,11))) THEN GOTO NEXT_LOT
1140 REM "Get bin location rec from RFB, required to find Storage type of this lot
1141 DIM B$(1000),B[5]; READ (Z[2],KEY=A$(100,10)+A$(21,4),DOM=*NEXT)IOL=0320; GOTO 1151
1142 READ (Z(2),KEY=A$(100,10)+DIM(4),DOM=*NEXT)IOL=0320; GOTO 1151 ! SSP#228231
1150 DOM_RFB:GOTO NEXT_LOT
1151 IF NUL(B$(57,10)) THEN GOTO NEXT_LOT
1160 REM "Get charges from RFT, given lot's Storage type and whse
1161 DIM C$(135),C[5]; READ (Z[3],KEY=B$(57,10)+A$(21,4),DOM=*NEXT)IOL=0330; GOTO PRORATE
1170 DOM_RFT:GOTO NEXT_LOT
1180 PRORATE: PRORATE=1.0
1190 NUM_DAYS=0; CALL "ZZDATE",ERR=*NEXT,X3$,"",A$(25,6),X3$(21,6),NUM_DAYS,1,0,0,0,0,0,"","",""; REM "Get how many days old this lot is since its receipt
1200 IF NUM_DAYS<0 THEN ERR_MSG$+=" Lot receipt date is later than today's date."; GOTO ICF_ERR ELSE IF NUM_DAYS=0 THEN GOTO NEXT_LOT
1210 IF NUM_DAYS<DAYS_IN_CYCLE THEN PRORATE=NUM_DAYS/DAYS_IN_CYCLE; REM "Calculate prorating function
1220 A11_PRE=A[11]; A12_PRE=A[12]; REM "Cache original charges for report display
1230 GOSUB FINANCE_CHARGES
1240 GOSUB STORAGE_CHARGES
1250 EXTRACT (Z[1],KEY=U$,ERR=*NEXT); WRITE (Z[1],KEY=U$,ERR=*NEXT)IOL=0310; GOTO 1270
1260 ERR_MSG$+=" Could not update charges for this lot. Write error."
1261 ICF_ERR: ICF_ERR$="**"
1270 READ (Z[6],KEY=A$(1,20),DOM=*NEXT)IOL=0340
1280 READ (Z[5],KEY=A$(1,10),DOM=*NEXT)IOL=0400
1290 GOSUB 1500
1300 REM "Get next lot
1310 NEXT_LOT:GOTO 1000
1330 REM "Done with all lots
1340 LOTS_DONE:GOTO 5000
1360 ! 
1500 REM "Print Data
1510 IF W+2>W0 THEN GOSUB 6000
1520 CALL "ZZDISP","AX",A$(1,10),"A/R",X3$,X$,"",0,0,X4$; Y5$(1)=X$,Y5$(13)=MID(J1$,11,35); Y5$(52,4)=A$(21,4)
1523 IF NOT(NUL(A$(25,6))) THEN CALL "ZZDISP","DX",A$(25,6),"   ",X3$,X$,"",0,0,X4$; Y5$(58)=X$
1526 Y5$(69,2)=A$(31,2)
1527 FIN_CHG_TYPE$=C$(75,1); IF NUL(FIN_CHG_TYPE$) THEN FIN_CHG_TYPE$="C"
1530 Y5$(73)=FNQ$(PRORATE*100.0,Z2$),Y5$(85)=STR(NUM_DAYS),Y5$(92)=FNQ$(C[1],Z2$)+"("+FIN_CHG_TYPE$+")",Y5$(104)=FNQ$(A12_PRE,Z1$),Y5$(117)=FNQ$(A[12],Z1$)
1550 GOSUB 7300
1560 CALL "ZZDISP","AX",A$(1,20),"I/C",X3$,X$,"",0,0,X4$
1570 Y5$(1)=X$,Y5$(11)=ICF_ERR$,Y5$(13)=MID(IC0$,21,40),Y5$(55)=A$(100,10),Y5$(67)=B$(57,10)
1590 GOSUB 4500
1600 Y5$(90-LEN(X$))=X$
1601 Y5$(91)=FNQ$(C[0],Z1$),Y5$(104)=FNQ$(A11_PRE,Z1$),Y5$(117)=FNQ$(A[11],Z1$)
1602 IF NOT(NUL(ICF_ERR$)) THEN GOSUB 7300; Y5$(1)=ERR_MSG$
1610 GOSUB 7300; GOSUB 7300
1700 K$=U$(1,LEN(U$)-2)
1900 REM "Accumulate Totals"
1990 T[0,0]=T[0,0]+1
1991 IF NOT(NUL(ICF_ERR$)) THEN T[1,0]=T[1,0]+1
1995 RETURN 
2000 ! 
3000 REM "Subtotaling Routines"
3050 REM "Add to T$ for total title, T & T5 should be set
3055 T7$=T5$(T*4-3,4)
3060 IF T7$(1,1)=" " THEN RETURN 
3070 IF T7$(1,1)<>"S" THEN CALL "ZZDISP",T7$(1,1)+"X",T6$,T7$(2,3),X3$,T6$,"",0,0,X4$
3080 IF T$="" THEN T$=T6$ ELSE T$=T$+" "+T6$
3090 RETURN 
3100 REM "High order break"
3110 IF V1=0 THEN RETURN ELSE IF U1$=U9$(1,V1) THEN GOSUB 3200; RETURN 
3120 GOSUB 3220
3130 IF U1$="" THEN GOTO 3160
3150 T=1,T$=U5$,T6$=U1$; GOSUB 3050; GOSUB 7000
3152 U1$=U9$(1,V1); GOSUB 6300
3155 IF U0$(1,1)="Y" AND T0$<>"END" THEN GOSUB 6000
3160 U1$=U9$(1,V1); GOSUB 6300
3180 RETURN 
4500 REM "Load X$ with desc of units
4505 X$=""
4510 IF A[4]<>0 THEN X$=X$+FNR$(STR(A[4]:Z0$))+" "
4515 IF POS(" "<>A$(121,4))=0 THEN GOTO 4525
4520 IF A[4]>1 THEN X$=X$+FNS$(A$(121,4))+"s of " ELSE X$=X$+FNS$(A$(121,4))+" of "
4525 IF A[2]=0 OR POS(" "<>A$(125,4))=0 THEN GOTO 4540
4530 X$=X$+FNR$(STR(A[2]:Z0$))+" "
4535 IF A[2]>1 THEN X$=X$+FNS$(A$(125,4))+"s of " ELSE X$=X$+FNS$(A$(125,4))+" of "
4540 X$=X$+FNR$(STR(A[3]:Z0$))
4545 RETURN 
4550 REM "Unit of measure for non lot item
4555 IF A[2]=0 THEN A[2]=1
4560 IF FPT(A[4]/A[2])>0 THEN X$=FNR$(STR(A[4]/A[2]:Z1$))+" " ELSE X$=FNR$(STR(A[4]/A[2]:Z0$))+" "
4565 IF A[4]/A[2]>1 THEN X$=X$+FNS$(A$(121,4))+"s of " ELSE X$=X$+FNS$(A$(121,4))+" of "
4570 X$=X$+FNR$(STR(A[2]:Z0$))
4595 RETURN 
5000 REM "End of Print
5020 ! IF W8=0 THEN GOTO 5290
5030 T0$="END"
5040 ! IF V1>0 THEN GOSUB 3120
5050 GOSUB 7200
5200 REM "
5290 GOTO 9900
5300 REM "Lot finance charge calculations
5305 FINANCE_CHARGES:
5310 IF C[1]=0 THEN GOTO *RETURN
5315 ON POS(C$(75,1)="CS") GOTO 5320,5320,5325; REM "Charges based on Cost or Sell? Defaults to Cost is none specified
5320 A[12]=A[12]+(PRORATE*(A[0]*(C[1]/100.00))); GOTO 5330; REM "Finance cost += (Prorate)*(Lot total cost * Storage type Finance %)
5325 IF A[6]<=0 THEN GOTO 5330
5326 TOT_QTY=A[4]*A[3]; IF NOT(NUL(A$(125,4))) THEN TOT_QTY=TOT_QTY*A[2]; REM "Convert lot qty to eaches, to calculate number of sell units below 
5327 A[12]=A[12]+(PRORATE*(A[5]*(TOT_QTY/A[6])*(C[1]/100.00))); REM "Finance cost += (Prorate)*(Lot total sell * Storage type Finance %)
5330 RETURN 
5335 ! 
5360 REM "Lot storage charge calculations
5370 STORAGE_CHARGES:
5380 IF C[0]=0 THEN GOTO *RETURN
5390 A[11]=A[11]+(PRORATE*C[0]) REM "Storage cost += (Prorate)*(Storage type storage cost)
5400 RETURN 
5410 ! 
6000 REM "Page header
6035 IF T0$="END" THEN W0$=""
6040 CALL "ZZHEAD",X0$,X1$,X2$,X3$,W0$,W1$,W2$,W3$,W3,W,W9,W8,W0,W5,W2,W8$,W5$; IF T0$="END" THEN GOTO 6060 ELSE ON W5 GOTO 6041,9910 ! %GUI
6045 ON W5 GOTO 6046,9900
6050 GOSUB 6200
6055 GOSUB 6100
6070 J$=A$(21,4)
6090 RETURN 
6100 REM "
6105 GOSUB 7300
6199 RETURN 
6200 REM "Column titles"
6210 Y5$(1)="Customer",Y5$(13)="Name",Y5$(52)="Whse",Y5$(58)="Rec. Date",Y5$(68)="Seq#",Y5$(74)="Prorate(%)",Y5$(85)="Days",Y5$(94)="Finance(%)",Y5$(111)="Before",Y5$(125)="After"
6220 GOSUB 7300
6230 Y5$(1)="Item code",Y5$(13)="Description",Y5$(55)="Bin Loc.",Y5$(65)="Storage Type",Y5$(82)="Pack U/M",Y5$(94)="Storage($)",Y5$(111)="Before",Y5$(125)="After"
6231 GOSUB 7300
6240 Y5$(1)=T1$(1,W3)
6241 GOSUB 7300
6249 RETURN 
6300 REM "Location header
6310 FIND (Z[4],KEY="D"+DIM(10)+A$(21,4),DOM=6311)FM0$
6320 W0$=A$(21,4)+" - "+FNS$(FM0$(16,35)); IF NOT(NUL(FM0$(111,16))) THEN W0$=W0$+" - "+FNS$(FM0$(111,16))+", "+FM0$(127,2)
6390 RETURN 
6900 REM "SORT
6905 IF S9$="X" THEN GOTO 6990 ELSE S0=Z[1],S1=Z[2]
6940 CALL "ZZSORT",X3$,"",V1$,S9$,"","",0,0,0,S0,S1,X9
6990 RETURN 
7000 REM "Totals logic
7100 REM "Accumulate sub totals
7110 IF T=0 THEN GOTO 7190
7120 FOR X=0 TO T1
7130 T[T-1,X]=T[T-1,X]+T[T,X],T[T,X]=0
7140 NEXT X
7190 RETURN 
7200 REM "Elapsed time routine"
7205 GOSUB 7300; Y5$(1)=Q1$+": "+STR(T[0,0]); GOSUB 7300
7206 Y5$(1)="Number of errors (**): "+STR(T[1,0]); GOSUB 7300
7210 PRECISION 14; T2=TIM-T2
7220 T4$=STR(INT(T2):"##0")
7230 T3=INT(FPT(T2)*60)
7240 T3=T3/60
7250 T4$=T4$+":"+STR(T3:"00")
7260 Y5$(1)=Q3$+": "+T4$; GOSUB 7300
7280 PRECISION 2
7290 RETURN 
7300 REM "Output line Y5$ to output device
7310 IF POS("V"=W8$)>0 THEN CALL "ZZVIEW",X3$,0,0,W3,W9,W,W9$,Y5$; GOTO 7390
7320 W=W+1; IF POS(" "<>Y5$)=0 THEN PRINT (W9)"" ELSE PRINT (W9)Y5$; Y5$(1)=""
7330 REM 
7390 IF W>=W0 THEN GOSUB 6000
7395 RETURN 
7400 REM "Read report selection parameters"
7410 Z$="12O ZZP     "
7420 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 7421,9900
7430 Y3$=X3$(1,6),Y4$=X3$(178,7)
7450 READ (Z[12],KEY=X3$(1,8),DOM=7451)IOL=0420
7480 X3$(178,7)=Y4$,V0=NUM(V0$(71,1)),W3$=STP(MID(V0$,19,40)) ! %GUI
7485 FOR U1=1 TO LEN(V1$); IF V1$(U1,1)=" " THEN V1$(U1,1)="."; NEXT U1 ELSE NEXT U1
7490 RETURN 
7500 REM "CUSTOM PROGRAMMING ROUTINES
7525 REM "Modified stmts:
7550 REM "Added stmts:
7575 REM "Deleted stmts:
8000 REM "Build desc from Y8$
8005 H9$=FNS$(H8$(21,40))
8006 IF D$(108,1)="I" THEN H9$=H9$+" *INACTIVE*"
8008 RETURN 
8010 H9$=FNS$(H8$(64,8)); IF H9$<>"" THEN H9$=H9$+QUO; IF POS(" "<>H8$(72,8))<>0 THEN H9$=H9$+"x"
8020 H9$=H9$+FNS$(H8$(72,8)); IF H9$<>"" THEN IF POS(" "<>H8$(72,8))<>0 THEN H9$=H9$+QUO+" " ELSE H9$=H9$+" "
8030 IF NUM(H8$(80,2))<>0 THEN H9$=H9$+H8$(80,2)+" Ply "
8040 H9$=H9$+FNS$(H8$(21,40)); H8$=""
8050 RETURN 
8900 REM "Functions
8910 DEF FNS$(Z9$)=Z9$(1,POS(S$=Z9$+S$)-1)
8920 DEF FNR$(Z9$)=Z9$(POS(" "<>Z9$))
8940 DEF FNQ$(Z9,Z9$)=STR(Z9:Z9$)
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 1000
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9900 REM "End program
9905 IF POS("V"=W8$)>0 THEN GOSUB 6000
9910 CALL "ZZERPT",X3$,X4$,X0$,Y3$,Y4$,W9,W2,W5,W,W0,W8,T3,V3$
9920 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9925 IF %GUI THEN EXIT 
9930 IF Y4$<>"" THEN RUN Y4$,ERR=9931
9940 RUN "ZMENU"
9999 END 
56002 REM "200525-Ability to have storage cost and finance costs for inventory
56004 REM "228231-WMS - Setup for Bin type setup is misnamed                  
