0010 ! RFGBAR - Warehousing Barcode Entry
0020 ! Generated by ProvideX® NOMADS II File Maintenance on Feb. 27, 2005 15:59
0030 ! ************************************************************************
0035 REM "5.4 - 01/22/06 - 12.986666 - jme - SSP# 180032
0037 REM "180032-Wireless Warehousing                                        
0040 REM "Copyright 2006 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0100 ENTER X3$,X4$,ICF,FM1,ITEM$,MSG_TAG$,MSG1$,MSG2$,EX,IC0
0110 ICF$=STR(ICF),FM1$=STR(FM1)
0200 PROCESS "RFGBAR","../RFG/RF.EN",X3$,X4$,ICF$,FM1$,MSG_TAG$,MSG1$,MSG2$,IC0$
0220 ITEM$=%RFITEM$,EX=%RFEXIT
0230 %RFITEM$="",%RFEXIT=0
0290 EXIT 
0310 IOLIST RF0$
0390 IOLIST RFB$,RFB[0],RFB[1],RFB[2],RFB[3],RFB[4],RFB[5]
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0570 RETURN 
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 300 - Set up the message library
10010 SETUP_LIBRARY:
10020 _SV_MSGLIB$=MSG(*)
10030 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
10040 MESSAGE_LIB "*tfmsglib."+_LANG$,ERR=*NEXT; GOTO 10060
10050 MESSAGE_LIB "*tfmsglib.en"
10060 SET_MSG:GOSUB SETUP_MESSAGES
10070 RETURN 
10500 INIT:
10502 X0$="RFGBAR",X1$="Warehousing BarCode Scan"
10503 X0=-1,X2=-1
10520 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
10530 X3$=ARG_1$,X4$=ARG_2$,ICF=NUM(ARG_3$),FM1=NUM(ARG_4$),MSG_TAG$=ARG_5$,MSG1$=ARG_6$,MSG2$=ARG_7$,IC0=NUM(ARG_8$)
10540 %RFEXIT=0
10550 NEXT_ID=BARCODE.CTL
10580 RETURN 
10600 SELECT_EXIT:
10610 %RFEXIT=1,CMD_STR$="END"
10690 RETURN 
19000 SELECT_RFCUST:
19010 IF STP(RFCUST$,3)<>"" THEN CALL "ZZWLKU;PARSE_CUST",RFCUST$,CUST_DIV$,CUST_CODE$; RFCUST$=CUST_DIV$+CUST_CODE$; REFRESH_FLG=1
19490 RETURN 
20000 SELECT_RFITEM:
20002 RFCUST$=PAD(RFCUST$,10),RFITEM$=PAD(RFITEM$,10)
20005 REFRESH_FLG=1
20050 IF STP(RFITEM$,3," ")<>"" THEN {! 20190}
20060 NOF=1; XP=PRM('XI'); SET_PARAM 'XI'; READ (%RFIC0,KEY=RFCUST$+RFITEM$,DOM=*NEXT); NOF=0
20065 SET_PARAM 'XI'=XP
20100 IF NOF THEN {
20110 MSGBOX MSG("Inval_Item"),"","",X$; REFRESH_FLG=1; NEXT_ID=RFITEM.CTL; GOTO *RETURN
20120  } ELSE {
20150  } ! 20100
20190  } ! 20050
20290 RETURN 
20300 SELECT_RFLOT:
20305 RFLOT$=PAD(RFLOT$,8); RFLOT$=STR(NUM(RFLOT$,ERR=*NEXT):"00000000")
20350 IF STP(RFLOT$,3," ")<>"" THEN {! 20450 }
20355 NOF=1
20360 READ (%RFICF,KNO=1,KEY=RFCUST$+RFITEM$+%RFLOC$+RFLOT$,DOM=*NEXT)
20365 DIM RFGBAR_KYICF$(28); RFGBAR_KYICF$=KEY(%RFICF,END=*NEXT)
20370 IF RFGBAR_KYICF$(1,32)=RFCUST$+RFITEM$+%RFLOC$+RFLOT$ THEN NOF=0
20380 IF NOF THEN {
20390 MSGBOX MSG("INV_LOT"),"","",X$; REFRESH_FLG=1; NEXT_ID=RFLOT.CTL; GOTO *RETURN
20400  } ELSE {
20405 READ (%RFICF,KEY=RFGBAR_KYICF$)
20415 NEXT_ID=RFQTY.CTL; REFRESH_FLG=1
20420 RFUOM$=PRIMARY_UM$,RFUNIT=UNITS_PER_UNIT
20440  } ! 20380
20450  } ! 20350
20490 RETURN 
25000 SELECT_BARCODE:
25010 ENTER ICF,PO1,BARCODE$,PONUM$,POLINE$,FOUNDBAR,RFSEQLIST${ALL},SEQLIST,ITEM_CUST$,ITEM_CODE$
25012 BARCODE$=STP(BARCODE$,3," ")
25015 IF BARCODE$="" THEN GOTO *RETURN
25050 IF LEN(BARCODE$)=11 THEN {! po#+line#
25060 CALL "UPDPO1;READBYKEY",PO1,0,BARCODE$(1,9),BARCODE$(10,3)
25070 NOF=1; KY$=KEY(%RFICF,END=*NEXT); IF KY$(1,KEYLEN)=BARCODE$ THEN NOF=0; XP=PRM('XI'); SET_PARAM 'XI'; READ (%RFICF,KEY=KY$); SET_PARAM 'XI'=XP
25080 IF NOF THEN {
25085 MSGBOX MSG("RFItm_Nof"),"","",X$; NEXT_ID=BARCODE.CTL,REFRESH_FLG=1; GOTO *RETURN
25110  }
25120 KYN$=KEY(%RFICF,END=*NEXT); IF KYN$(1,KEYLEN)=BARCODE$ THEN GOSUB BUILD_DROPDOWN; GOTO *RETURN
25199  }
25500 READ (%RFFM1,KEY=PAD(BARCODE$,20),DOM=*NEXT); RFCUST$=CUST_DIV$+CUST_CODE$,RFITEM$=ITEM_CODE$; GOTO SELECT_RFITEM
29999 RETURN ! 25000-29999
30000 BUILD_DROPDOWN:
30010 DIM SEQLIST$[999]; SEQLIST=49
30020 RFSEQLIST$=PO_DIV$+PO_NUM$+"-"+FACTORY_JOB_NUM$+"-"+VEND_DIV$+VEND_CODE$+"|",SEQLIST$[1]=KY$,RFSEQVAL$="1|"
30050 NOT_END=1
30100 WHILE NOT_END
30110 NOT_END=0; KYN$=KEY(%RFICF,END=NOMORE); IF KYN$(1,KEYLEN)=BARCODE$ THEN NOT_END=1
30120 IF NOT_END THEN {
30130 SET_PARAM 'XI'; READ (%RFICF,KEY=KYN$); SET_PARAM 'XI'=XP
30140 RFSEQLIST$=RFSEQLIST$+PO_DIV$+PO_NUM$+"-"+FACTORY_JOB_NUM$+"-"+VEND_DIV$+VEND_CODE$+"|",SEQLIST$[SEQLIST-47]=KY$,RFSEQVAL$=RFSEQVAL$+CHR(SEQLIST)+"|"
30145 SEQLIST=SEQLIST+1
30180  }
30190 NOMORE:
30195 WEND 
30230 REFRESH_FLG=1
30240 NEXT_ID=RFSEQUENCE.CTL
30499 RETURN 
31300 SELECT_RFUNIT:
31310 RFUNIT$=STR(RFUNIT)
31320 IF RFUNIT$="" OR RFUNIT$="0" THEN RFUNIT$="1"
31490 RETURN 
55000 ENABLE_GROUPS:
55005 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
55040 IF EN_RBIN$="N" THEN CALL "*wingrp;Disable",RBIN.GRP$; EN_RBIN$=""
55045 IF EN_RBIN$="Y" THEN CALL "*wingrp;Enable",RBIN.GRP$; EN_RBIN$=""
55050 IF EN_PO$="Y" THEN CALL "*wingrp;Enable",PO.GRP$; EN_PO$=""
55055 IF EN_PO$="N" THEN CALL "*wingrp;Disable",PO.GRP$; EN_PO$=""
55060 IF EN_BARCODE$="Y" THEN CALL "*wingrp;enable",BARCODE.GRP$
55065 IF EN_RBIN$="Y" THEN CALL "*wingrp;enable",RBIN.GRP$; EN_RBIN$=""
55070 IF EN_TASK$="N" THEN CALL "*wingrp;disable",TASK.GRP$; EN_TASK$=""
55990 RETURN 
56000 REM "180032-Wireless Warehousing                                        
