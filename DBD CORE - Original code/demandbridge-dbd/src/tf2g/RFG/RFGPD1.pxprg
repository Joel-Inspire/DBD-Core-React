0010 REM "WMS Order Picking Detail Qty Ent<RFGPD1"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 02/19/14 - 11.940277 - jvv - SSP# 265285
0037 REM "265285-WMS:  Carts don't clear with picking complete - previous    
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="RFGPD1",X1$="WMS Order Picking Detail Qty Ent"
0120 EOL$=$0D0A$; REM EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0140 DIM MESS_INFO$[20] ! ,EC_PARM$(1275)(1275)
0230 DIM ESY$(512)
0240 DIM ECC$(1984),ECC[3]
0250 DIM ESZ$(128),ESZ[18]
0330 IOLIST ESY$
0340 IOLIST ECC$,ECC[0],ECC[1],ECC[2]
0350 IOLIST ESZ$,ESZ[0],ESZ[1],ESZ[2],ESZ[3],ESZ[4],ESZ[5],ESZ[6],ESZ[7],ESZ[8],ESZ[9],ESZ[10],ESZ[11],ESZ[12],ESZ[13],ESZ[14],ESZ[15],ESZ[16],ESZ[17],ESZ[18]
0370 IOLIST ZW2$,ZW2[0],ZW2[1],ZW2[2]
0380 IOLIST ZW9A$,ZW9B$
0400 IOLIST ZW7A$,ZW7B$
0410 IOLIST ZW8A$
0500 REM "Open files
0502 CLOSE (13); OPEN (13)"ZZPARM"
0505 DIM Z[NUM(X3$(60,3))],BLGRBNKS$(100)
0510 Z$="01O RF2...  02O RF0...  03O RFS...  04O AR1...  05O PO6...  09O RFB...  10O FS1...  11O FS2...  12O IC1...  13O ZZPARM  14O IC0...  15O RFK...  16O RFZ...  17O PO3...  18O FMP...  19O ICF...  20O RFS...  21O RFA...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0550 RF2=Z[1],RF0=Z[2],RFS=Z[3],PO6=Z[5],FS1=Z[10],FS2=Z[11],AR1=Z[4],IC1=Z[12],IC0=Z[14],RFS_2=Z[20]
0555 RFK=Z[15]
0560 RFB=Z[9],RFZ=Z[16],PO3=Z[17],FMP=Z[18],ICF=Z[19],RFA=Z[21]
0900 PRINT_DOC=0
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],TF_VALUE$=DATA$[I,1] ! SSP 265285
1050 SWITCH TAG$ ! 1185 end switch
1055 CASE "print_doc"
1057 PRINT_DOC=1; BREAK
1058 CASE "show_tags"
1059 SHOW_TAGS=1; BREAK
1060 CASE "task_num"
1062 TASK_NUM$=TF_VALUE$; BREAK
1065 CASE "last_item"
1067 LAST_ITEM$=TF_VALUE$; BREAK
1080 CASE "template"
1082 TEMPLATE$=TF_VALUE$; BREAK
1110 CASE "task_num"
1112 TASK_NUM$=TF_VALUE$; BREAK
1120 CASE "pick_cart"
1122 PICK_CART$=TF_VALUE$; BREAK
1125 CASE "rfs_key"
1127 RFS_KEY$=TF_VALUE$; BREAK
1130 CASE "pick_qty"
1132 PICK_QTY$=TF_VALUE$; BREAK
1135 CASE "zero_pick_key"
1137 RFS_KEY$=TF_VALUE$,PICK_QTY$="0"; BREAK
1985 END SWITCH ! 1050
1990 NEXT I
2000 ! process data
2020 SESSION_ID$=EC$[1](1,7)
2025 BUYER$=EC$[2](1,15),BASIC$="RFGPD0"
2027 TEMPLATE$="rfgpd0.htm",BASIC$="RFGPD0"
2030 MSG$="",FOUNDITEM=0
2045 CALL "UPDRFK;READBYKEY",RFK,0,BUYER$,SEG2$,SEG3$,SEG4$,SEG5$,RFK$,RFK{ALL},FOUNDRFK
2050 PICK_QTY=0; PICK_QTY=NUM(PICK_QTY$,ERR=*NEXT)
2052 IF PICK_QTY=0 THEN HOLD_TYPE$=RFK$(106,1) ELSE HOLD_TYPE$=RFK$(105,1)
2055 HOLD_FLAG$=""; IF HOLD_TYPE$="A" THEN HOLD_FLAG$="A" ELSE IF HOLD_TYPE$="H" AND RFK$(107,1)<>"Y" THEN HOLD_FLAG$="H" ! determines how to process when pick<ordered
2060 CALL "UPDRFS;READBYKEY",RFS,0,RFS_KEY$,SEG2$,SEG3$,SEG4$,SEG5$,RFS$,RFS{ALL},FOUNDRFS_KEY
2065 CVT_QTY=1; IF FOUNDRFS_KEY THEN IF RFS$(105,12)=DIM(12) THEN CVT_QTY=RFS[2]; IF CVT_QTY=0 THEN CVT_QTY=1
2100 IF PICK_QTY>RFS[0]/CVT_QTY AND FOUNDRFS_KEY THEN {
2102 CALL "UPDRFA;ADD_SH",RFA,X3$,RFS$,PICK_QTY,0
2105 MSG$="Quantity cannot be greater than Order Qty"
2110 BASIC$="RFGPD1",TEMPLATE$="rfgpd1.htm"
2112 ORDER$=RFS$(1,8),TF_ITEM$=RFS$(23,20),ITEM_DESC$=RFS$(149,40)
2117 ORDER_QTY$=STR(RFS[0]/CVT_QTY),ORDER_UOM$=RFS$(85,4)+"/"+STR(RFS[2])
2120  }
2150 IF FOUNDRFS_KEY AND RFS$(147,1)<>"Y" AND PICK_QTY<=RFS[0]/CVT_QTY THEN {! 3950 
2160 IF RFS$(105,12)=DIM(12) AND HOLD_FLAG$="A" THEN HOLD_FLAG$="" ! must be lotted to auto select lot
2700 CVT_QTY=1; IF RFS$(105,12)=DIM(12) THEN CVT_QTY=RFS[2]; IF CVT_QTY=0 THEN CVT_QTY=1
2710 IF PICK_QTY=RFS[0]/CVT_QTY THEN {! 2790
2720 RFS[1]=PICK_QTY*CVT_QTY,RFS$(147,1)="Y"
2730 CALL "UPDRFS;UPDATE",RFS,RFS$,RFS{ALL},BUSY
2740 CALL "UPDRFA;ADD_SH",RFA,X3$,RFS$,PICK_QTY,0
2790  } ! 2710
2800 IF PICK_QTY<>RFS[0]/CVT_QTY AND PICK_QTY<RFS[0]/CVT_QTY THEN {! 3790
2810 QTY_REMAIN=RFS[0]-CVT_QTY*PICK_QTY
2820 ICF_PICK_QTY=PICK_QTY ! *CVT_QTY
2850 SWITCH HOLD_FLAG$ ! 3750
2900 CASE "H" ! hold order
2905 RFS[1]=PICK_QTY*CVT_QTY,RFS$(147,1)="Y"
2910 CALL "UPDRFS;UPDATE",RFS,RFS$,RFS{ALL},BUSY
2985 CALL "UPDFS1;READBYKEY",FS1,0,RFS$(1,8),SEG2$,SEG3$,SEG4$,SEG5$,FS1$,FS1{ALL},FOUNDFS1; IF FOUNDFS1 THEN FS1$(63,1)="P"; CALL "UPDFS1;UPDATE",FS1,FS1$,FS1{ALL},BUSYFS1
2987 CALL "UPDRFA;ADD_SH",RFA,X3$,RFS$,PICK_QTY,0
2990 BREAK
3000 CASE "A" ! auto lot selection
3010 IF PICK_QTY>0 THEN ICF_KEY$=RFS$(23,20)+RFS$(105,12); CALL "UPDICF;SPLIT_PICK",ICF,ICF_KEY$,RFS[0],ICF_PICK_QTY,NEW_LOT$
3020 IF PICK_QTY>0 THEN CALL "UPDICF;READBYKEY",ICF,0,NEW_LOT$,SEG2$,SEG3$,SEG4$,SEG5$,ICF_SPLIT$,ICF_SPLIT{ALL},FOUNDICF_SPLIT; IF FOUNDICF_SPLIT THEN ICF_SPLIT$(110,11)=PAD("NOPICK",11); CALL "UPDICF;UPDATE",ICF,ICF_SPLIT$,ICF_SPLIT{ALL},BUSY_ICF_SPLIT
3030 IF PICK_QTY=0 THEN OLD_LOT$=RFS$(23,20)+RFS$(105,12); CALL "UPDICF;READBYKEY",ICF,0,OLD_LOT$,SEG2$,SEG3$,SEG4$,SEG5$,ICF_LOT$,ICF_LOT{ALL},FOUNDICF_LOT; IF FOUNDICF_LOT THEN ICF_LOT$(110,11)=PAD("NOPICK",11); CALL "UPDICF;UPDATE",ICF,ICF_LOT$,ICF_LOT{ALL},BUSY_ICF_LOT
3050 CALL "UPDICF;GET_ORD_LOT_LIST",ICF,RFS$(1,8),RFS$(9,3),ORIG_LOT_LIST$ ! get original lots committed
3100 CALL "UPDICF;READBYKEY",ICF,0,SEG1$,SEG2$,SEG3$,SEG4$,SEG5$,TMP_ICF$,TMP_ICF{ALL},FOUNDTMPICF ! set file pointer, kno=0
3105 ICF_QTY=RFS[2]; IF ICF_QTY=0 THEN ICF_QTY=1
3110 I$=RFS$(23,20)+RFS$(81,4)+RFS$(1,11),C=QTY_REMAIN*ICF_QTY,S1$=RFS$(85,4),S1=RFS[2],%WMS_PICK=1; CALL "IC2LCA",X3$,X4$,"A",0,I$,C,F,S1,S1$,S2,S3$,S3,S4; %WMS_PICK=0 ! auto commit lot to order (o$)
3120 CALL "UPDICF;GET_ORD_LOT_LIST",ICF,RFS$(1,8),RFS$(9,3),NEW_LOT_LIST$
3140 IF NEW_LOT_LIST$>"" THEN {! 3175
3150 FOR XCF=1 TO LEN(NEW_LOT_LIST$) STEP 32
3160 IF POS(NEW_LOT_LIST$(XCF,32)=ORIG_LOT_LIST$,32)<>0 THEN NEW_LOT_LIST$(XCF,32)=DIM(32)
3170 NEXT XCF
3175  }
3190 IF LEN(NEW_LOT_LIST$)<32 THEN NEW_LOT_LIST$=""
3200 IF NEW_LOT_LIST$>"" THEN {! 3290
3210 RFS[1]=PICK_QTY*CVT_QTY,RFS$(147,1)="Y",RFS[0]=PICK_QTY*CVT_QTY
3220 CALL "UPDRFS;UPDATE",RFS,RFS$,RFS{ALL},BUSY
3222 LOT_CNT=NUM(RFS$(20,3))
3225 CALL "UPDRFA;ADD_SH",RFA,X3$,RFS$,PICK_QTY,0
3230 FOR LOT_CNT=1 TO LEN(NEW_LOT_LIST$)-31 STEP 32
3235 IF NEW_LOT_LIST$(LOT_CNT,32)<>DIM(32) THEN {! 3277
3240 CALL "UPDICF;READBYKEY",ICF,0,NEW_LOT_LIST$(LOT_CNT,32),SEG2$,SEG3$,SEG4$,SEG5$,NEW_LOT$,NEW_LOT{ALL},FOUNDNEWICF
3250 IF FOUNDNEWICF THEN {
3252 LOT_CNT=LOT_CNT+1; IF LOT_CNT>999 THEN LOT_CNT=999
3253 RFS$(20,3)=STR(LOT_CNT:"000")
3255 RFS$(12,8)=NEW_LOT$(234,8),RFS$(71,10)=NEW_LOT$(100,10),RFS$(85,4)=NEW_LOT$(121,4),RFS$(105,12)=NEW_LOT$(21,12),RFS$(147,1)=" "
3260 RFS[0]=NEW_LOT[4],RFS[1]=0,RFS[2]=NEW_LOT[3]
3270 CALL "UPDRFS;UPDATE",RFS,RFS$,RFS{ALL},BUSYRFS
3275  } ! 3250
3277  } ! 3235
3280 NEXT LOT_CNT
3290  }
3300 IF NEW_LOT_LIST$="" THEN {! 3350 
3310 RFS[1]=PICK_QTY*CVT_QTY,RFS$(147,1)="Y"
3320 CALL "UPDRFS;UPDATE",RFS,RFS$,RFS{ALL},BUSY
3340 CALL "UPDRFA;ADD_SH",RFA,X3$,RFS$,PICK_QTY,0
3350  } ! 3300
3390 BREAK ! case "A"
3600 DEFAULT 
3610 RFS[1]=PICK_QTY*CVT_QTY,RFS$(147,1)="Y"
3620 CALL "UPDRFS;UPDATE",RFS,RFS$,RFS{ALL},BUSY
3680 CALL "UPDRFA;ADD_SH",RFA,X3$,RFS$,PICK_QTY,0
3750 END SWITCH ! 2850
3790  } ! 2800
3950  } ! 2150 found rfs_key
3990 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="180032.20060308",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
4000 SWITCH TEMPLATE$
4010 CASE "rfgpd1.htm"
4020 PERFORM "RFGPDT;PROCESS_TEMPLATE_RFGPD1"
4050 BREAK
4100 DEFAULT 
4110 PERFORM "RFGPDT;PROCESS_TEMPLATE_RFGPD0"
4200 END SWITCH 
4900 GOTO 9900
5000 GOTO 9900
5010 LINE$=TAG$+" "+TAGDESC$
5090 RETURN 
5100 ADD_MSG_TO_LOG:! Add message to log file
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+ECD$(1,10)+"|LINE|"+ECE$(25,3)+"|MESSAGE NO|"+STR(MESSAGE_NO:"00000")+"|MESSAGE|"+MESSAGE$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
5490 RETURN ! 5200
6000 ! get conversion
6010 DIM UOM[2]; Q0=PO2[2]
6020 READ (Z[13],KEY="U/M"+PO2$(77,4),ERR=*RETURN)UOM$,UOM[0],UOM[1],UOM[2]
6030 IF MID(UOM$,21,1)="Y" THEN Q0=1; GOTO *RETURN
6035 IF MID(UOM$,20,1)="Y" THEN Q0=UOM[1] ELSE Q0=PO2[2]
6040 IF Q0=0 THEN Q0=1
6090 RETURN 
8150 BYB_PROCESSING:! Send LINE$ to EC3BYB for generic fields processing
8160 CALL "EC3BYB",ERR=8161,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$
8195 RETURN 
8910 DEF FND$(Z9$)=Z9$(3,2)+"/"+Z9$(5,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 CLOSE (100)
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9915 CLOSE (13,ERR=*NEXT)
9950 EXIT 
9999 END 
56000 REM "180032-Wireless Warehousing                                        
56002 REM "197452-Modify WMS to display available lots if lot item is         
56004 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56005 REM "265285-WMS:  Carts don't clear with picking complete - previous    
