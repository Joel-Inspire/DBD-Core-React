0010 ! FEGMBA - File Maintenance Program for FE1_QuoteFormFeature (="FE1"+%C$)
0020 ! ************************************************************************
0030 REM "5.7 - 05/09/12 - 9.088611 - sns - SSP# 252715"
0035 REM "5.7 - 03/11/16 - 16.449722 - tma - SSP# 283128
0037 REM "283128-Having Trouble adding the EQ Item Features to existing      
0040 REM "Copyright 2016 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia"
0060 REM "        Licensed Software - All Rights Reserved."
0070 CLEAR ; SETESC ERROR_PROCESSING; SETERR ERROR_PROCESSING
0080 IF TCB(88)=0 THEN MSGBOX "You must be using Windx to access this program" ELSE PROCESS "FEGMBA","../FEG/FE.EN"
0090 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0095 EXIT 
0100 ! 100 - Initialization
0110 INIT:
0120 GOSUB INSERT_VERSION
0130 GOSUB CLEAR_FIELDS
0135 CALL "*wingrp;Disable",UOM.GRP$; CALL "*wingrp;Disable",GP_FIELDS.GRP$; REFRESH_FLG=1
0140 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0150 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0160 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0170 GOSUB SETUP_KEYS
0180 _FILE_NAME$="FE1"+%C$
0190 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0200 _CUR_FN=HFN; OPEN (_CUR_FN,IOL=*,REC=_CUR$)_FILE_NAME$
0210 _FE0_NO=HFN; _FILE_NAME$="FE0"+%C$; OPEN (_FE0_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0220 _AP4_NO=HFN; _FILE_NAME$="AP4"+%C$; OPEN (_AP4_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0230 OPEN (HFN)"ZZPARM"; ZZPARM=LFO
0240 RETURN 
0250 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0260 CMD_STR$="END"
0270 RETURN 
0280 ! 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO SET_MSG
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=3,_CUR_KEY$=""
0430 DIM _KEYS$[1:4]; _KEYS$[1]="VENDOR$"; _KEYS$[2]="ITEM_CODE$"; _KEYS$[3]="FEATURE$"
0440 _KEY1=1
0450 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=NEXT_REC)
0560 _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0570 RETURN 
0590 ERROR_PROCESSING:
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 IF AP4_FIL_NO<>0 THEN CLOSE (AP4_FIL_NO); AP4_FIL_NO=0
0960 IF FE0_FIL_NO<>0 THEN CLOSE (FE0_FIL_NO); FE0_FIL_NO=0
0970 CLOSE (ZZPARM)
0980 MESSAGE_LIB _SV_MSGLIB$
0990 SET_PARAM 'KR'=_SV_KR
0995 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 IF ID$="VENDOR" THEN CALL "ZZWLKU;PARSE_VEND",VENDOR$,%VEND_DIV$,%VEND_CODE$,VEND_NAME$=MID(VENDOR$,3,35)
1030 CALL "*wingrp;Enable",BUTTONS.GRP$; REFRESH_FLG=1
1040 IF NOT(NUL(VENDOR$)) AND NOT(NUL(ITEM_CODE$)) THEN GOSUB LOAD_QUANTITY_BREAKS
1045 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1050 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1055 IF ID$="VENDOR" AND NUL(VENDOR$) THEN NEXT_ID=VENDOR.CTL,REFRESH_FLAG=1; CALL "*wingrp;Disable",BUTTONS.GRP$; EXIT 
1060 IF ID$="ITEM_CODE" AND NOT(NUL(ITEM_CODE$)) THEN GOSUB FIND_ITEM_GROUP
1065 IF ID$="ITEM_CODE" AND (NUL(ITEM_CODE$)) THEN NEXT_ID=ITEM_CODE.CTL,REFRESH_FLAG=1; EXIT 
1070 IF ID$="FEATURE" AND (NUL(FEATURE$)) THEN NEXT_ID=FEATURE.CTL,REFRESH_FLG=1; EXIT 
1075 IF ID$="FEATURE" AND NOT(NUL(FEATURE$)) THEN CHANGE_FLG=1; NEXT_ID=FEATURE.CTL,REFRESH_FLG=1; GOTO CALL_ZZWLKU
1080 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN 
1090 CALL_ZZWLKU:CALL "ZZWLKU;PARSE_VEND",VENDOR$,VEND_DIV$,VEND_CODE$; VENDOR$=VEND_DIV$+VEND_CODE$
1100 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1110 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1120 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1130 GOSUB PROCESS_READ
1140 GOSUB NUM_TO_STR
1150 GOSUB LOAD_QUANTITY_BREAKS
1160 CALL "*wingrp;Enable",FEATURE_DESC.GRP$
1170 CHANGE_FLG=0,NEXT_ID=FEATURE_DESC.CTL,REFRESH_FLG=1
1180 GOTO DISP_REC
1190 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1250 _CLR_FLG$="F"; GOSUB CLEAR_FIELDS
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=FEATURE_DESC.CTL
1275 GOSUB LOAD_QUANTITY_BREAKS ! SSP#283128
1278 FEATURE_GROUP_POS$="1" ! SSP#283128
1280 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE; IF _ABORT_WRITE THEN _ABORT_WRITE=0; RETURN 
1450 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=4; GOSUB ENABLE_GROUPS
1460 _CLR_FLG$="G"; GOSUB CLEAR_FIELDS
1470 CHANGE_FLG=0,NEXT_ID=FEATURE.CTL,REFRESH_FLG=1
1480 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 READ DATA FROM REC(IOL(_FIL_NO:KEY,ERR=*NEXT)) TO _KEY$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0; _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 VENDOR$=""; %VENDOR$=""; %VEND_NAME$=""; VEND_NAME$=""; %VEND_CODE$=""
1830 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1840 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1850 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1860 CHANGE_FLG=0
1870 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2050 IF _KEY$=_CUR_KEY$ THEN _KEY$=KEN(_FIL_NO,END=END_OF_FILE) ! Get past extracted record
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3030 READ DATA FROM _KEY$ TO IOL=IOL(_FIL_NO:KEY,ERR=*NEXT) ! load fields from external key
3040 VENDOR$=VEND_DIV$+VEND_CODE$; %VENDOR$=VENDOR$; REFRESH_FLG=1
3050 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3060 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT,ERR=*RETURN)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=WRITE_ERROR)
3330 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3340 GOSUB NUM_TO_STR
3350 REFRESH_FLG=1
3360 RETURN 
3370 WRITE_ERROR:
3380 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3390 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 CALL "*wingrp;Disable",KEY1.GRP$; CALL "*wingrp;Disable",GP_FIELDS.GRP$
3540 GOSUB LOAD_QUANTITY_BREAKS
3550 CHANGE_FLG=0,NEXT_ID=FEATURE_DESC.CTL,REFRESH_FLG=1
3560 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=VENDOR.CTL,_FIRST_FIELD=ITEM_CODE.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
3840 IF _YESNO$="YES" THEN GOTO WRITE_REC
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
3880 ! 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF UCS(_KEYS$[_CURKEY])=UCS(ID$)+"$" OR UCS(_KEYS$[_CURKEY])=UCS(ID$) THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9360 END 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 UNIT_COST_1$=""; UNIT_COST_2$=""; UNIT_COST_3$=""; UNIT_COST_4$=""; UNIT_COST_5$=""; UNIT_COST_6$=""; UNIT_COST_7$=""; UNIT_COST_8$=""; UNIT_COST_9$=""; UNIT_COST_10$=""; UNIT_COST_11$=""; UNIT_COST_12$=""
10030 SELL_PRICE_1$=""; SELL_PRICE_2$=""; SELL_PRICE_3$=""; SELL_PRICE_4$=""; SELL_PRICE_5$=""; SELL_PRICE_6$=""; SELL_PRICE_7$=""; SELL_PRICE_8$=""; SELL_PRICE_9$=""; SELL_PRICE_10$=""; SELL_PRICE_11$=""; SELL_PRICE_12$=""
10040 GP_1$=""; GP_2$=""; GP_3$=""; GP_4$=""; GP_5$=""; GP_6$=""; GP_7$=""; GP_8$=""; GP_9$=""; GP_10$=""; GP_11$=""; GP_12$=""
10050 IF UNIT_COST_1>0 THEN UNIT_COST_1$=STR(UNIT_COST_1)
10060 IF UNIT_COST_2>0 THEN UNIT_COST_2$=STR(UNIT_COST_2)
10070 IF UNIT_COST_3>0 THEN UNIT_COST_3$=STR(UNIT_COST_3)
10080 IF UNIT_COST_4>0 THEN UNIT_COST_4$=STR(UNIT_COST_4)
10090 IF UNIT_COST_5>0 THEN UNIT_COST_5$=STR(UNIT_COST_5)
10100 IF UNIT_COST_6>0 THEN UNIT_COST_6$=STR(UNIT_COST_6)
10110 IF UNIT_COST_7>0 THEN UNIT_COST_7$=STR(UNIT_COST_7)
10120 IF UNIT_COST_8>0 THEN UNIT_COST_8$=STR(UNIT_COST_8)
10130 IF UNIT_COST_9>0 THEN UNIT_COST_9$=STR(UNIT_COST_9)
10140 IF UNIT_COST_10>0 THEN UNIT_COST_10$=STR(UNIT_COST_10)
10150 IF UNIT_COST_11>0 THEN UNIT_COST_11$=STR(UNIT_COST_11)
10160 IF UNIT_COST_12>0 THEN UNIT_COST_12$=STR(UNIT_COST_12)
10170 IF SELL_PRICE_1>0 THEN SELL_PRICE_1$=STR(SELL_PRICE_1)
10180 IF SELL_PRICE_2>0 THEN SELL_PRICE_2$=STR(SELL_PRICE_2)
10190 IF SELL_PRICE_3>0 THEN SELL_PRICE_3$=STR(SELL_PRICE_3)
10200 IF SELL_PRICE_4>0 THEN SELL_PRICE_4$=STR(SELL_PRICE_4)
10210 IF SELL_PRICE_5>0 THEN SELL_PRICE_5$=STR(SELL_PRICE_5)
10220 IF SELL_PRICE_6>0 THEN SELL_PRICE_6$=STR(SELL_PRICE_6)
10230 IF SELL_PRICE_7>0 THEN SELL_PRICE_7$=STR(SELL_PRICE_7)
10240 IF SELL_PRICE_8>0 THEN SELL_PRICE_8$=STR(SELL_PRICE_8)
10250 IF SELL_PRICE_9>0 THEN SELL_PRICE_9$=STR(SELL_PRICE_9)
10260 IF SELL_PRICE_10>0 THEN SELL_PRICE_10$=STR(SELL_PRICE_10)
10270 IF SELL_PRICE_11>0 THEN SELL_PRICE_11$=STR(SELL_PRICE_11)
10280 IF SELL_PRICE_12>0 THEN SELL_PRICE_12$=STR(SELL_PRICE_12)
10290 IF SELL_PRICE_1>0 THEN GP_1$=STR(((SELL_PRICE_1-UNIT_COST_1)*100)/SELL_PRICE_1)
10300 IF SELL_PRICE_2>0 THEN GP_2$=STR(((SELL_PRICE_2-UNIT_COST_2)*100)/SELL_PRICE_2)
10310 IF SELL_PRICE_3>0 THEN GP_3$=STR(((SELL_PRICE_3-UNIT_COST_3)*100)/SELL_PRICE_3)
10320 IF SELL_PRICE_4>0 THEN GP_4$=STR(((SELL_PRICE_4-UNIT_COST_4)*100)/SELL_PRICE_4)
10330 IF SELL_PRICE_5>0 THEN GP_5$=STR(((SELL_PRICE_5-UNIT_COST_5)*100)/SELL_PRICE_5)
10340 IF SELL_PRICE_6>0 THEN GP_6$=STR(((SELL_PRICE_6-UNIT_COST_6)*100)/SELL_PRICE_6)
10350 IF SELL_PRICE_7>0 THEN GP_7$=STR(((SELL_PRICE_7-UNIT_COST_7)*100)/SELL_PRICE_7)
10360 IF SELL_PRICE_8>0 THEN GP_8$=STR(((SELL_PRICE_8-UNIT_COST_8)*100)/SELL_PRICE_8)
10370 IF SELL_PRICE_9>0 THEN GP_9$=STR(((SELL_PRICE_9-UNIT_COST_9)*100)/SELL_PRICE_9)
10380 IF SELL_PRICE_10>0 THEN GP_10$=STR(((SELL_PRICE_10-UNIT_COST_10)*100)/SELL_PRICE_10)
10390 IF SELL_PRICE_11>0 THEN GP_11$=STR(((SELL_PRICE_11-UNIT_COST_11)*100)/SELL_PRICE_11)
10400 IF SELL_PRICE_12>0 THEN GP_12$=STR(((SELL_PRICE_12-UNIT_COST_12)*100)/SELL_PRICE_12)
10410 IF SELL_PRICE_ONE_TIME>0 THEN GP_ONE_TIME$=STR(((SELL_PRICE_ONE_TIME-UNIT_CST_1_TIME_CHRG)*100)/SELL_PRICE_ONE_TIME)
10420 UNIT_CST_1_TIME_CHRG$=""; IF UNIT_CST_1_TIME_CHRG>0 THEN UNIT_CST_1_TIME_CHRG$=STR(UNIT_CST_1_TIME_CHRG) ELSE UNIT_CST_1_TIME_CHRG$="0"
10430 SELL_PRICE_ONE_TIME$=""; IF SELL_PRICE_ONE_TIME>0 THEN SELL_PRICE_ONE_TIME$=STR(SELL_PRICE_ONE_TIME)
10440 IF SELL_PRICE_ONE_TIME=0 THEN GP_ONE_TIME$=""
10450 RETURN 
10460 ! 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="UNIT_COST_1",_X=UNIT_COST_1.CTL,UNIT_COST_1=NUM(UNIT_COST_1$,ERR=NON_NUMERIC)
11030 _X$="UNIT_COST_2",_X=UNIT_COST_2.CTL,UNIT_COST_2=NUM(UNIT_COST_2$,ERR=NON_NUMERIC)
11040 _X$="UNIT_COST_3",_X=UNIT_COST_3.CTL,UNIT_COST_3=NUM(UNIT_COST_3$,ERR=NON_NUMERIC)
11050 _X$="UNIT_COST_4",_X=UNIT_COST_4.CTL,UNIT_COST_4=NUM(UNIT_COST_4$,ERR=NON_NUMERIC)
11060 _X$="UNIT_COST_5",_X=UNIT_COST_5.CTL,UNIT_COST_5=NUM(UNIT_COST_5$,ERR=NON_NUMERIC)
11070 _X$="UNIT_COST_6",_X=UNIT_COST_6.CTL,UNIT_COST_6=NUM(UNIT_COST_6$,ERR=NON_NUMERIC)
11080 _X$="UNIT_COST_7",_X=UNIT_COST_7.CTL,UNIT_COST_7=NUM(UNIT_COST_7$,ERR=NON_NUMERIC)
11090 _X$="UNIT_COST_8",_X=UNIT_COST_8.CTL,UNIT_COST_8=NUM(UNIT_COST_8$,ERR=NON_NUMERIC)
11100 _X$="UNIT_COST_9",_X=UNIT_COST_9.CTL,UNIT_COST_9=NUM(UNIT_COST_9$,ERR=NON_NUMERIC)
11110 _X$="UNIT_COST_10",_X=UNIT_COST_10.CTL,UNIT_COST_10=NUM(UNIT_COST_10$,ERR=NON_NUMERIC)
11120 _X$="UNIT_COST_11",_X=UNIT_COST_11.CTL,UNIT_COST_11=NUM(UNIT_COST_11$,ERR=NON_NUMERIC)
11130 _X$="UNIT_COST_12",_X=UNIT_COST_12.CTL,UNIT_COST_12=NUM(UNIT_COST_12$,ERR=NON_NUMERIC)
11140 _X$="SELL_PRICE_1",_X=SELL_PRICE_1.CTL,SELL_PRICE_1=NUM(SELL_PRICE_1$,ERR=NON_NUMERIC)
11150 _X$="SELL_PRICE_2",_X=SELL_PRICE_2.CTL,SELL_PRICE_2=NUM(SELL_PRICE_2$,ERR=NON_NUMERIC)
11160 _X$="SELL_PRICE_3",_X=SELL_PRICE_3.CTL,SELL_PRICE_3=NUM(SELL_PRICE_3$,ERR=NON_NUMERIC)
11170 _X$="SELL_PRICE_4",_X=SELL_PRICE_4.CTL,SELL_PRICE_4=NUM(SELL_PRICE_4$,ERR=NON_NUMERIC)
11180 _X$="SELL_PRICE_5",_X=SELL_PRICE_5.CTL,SELL_PRICE_5=NUM(SELL_PRICE_5$,ERR=NON_NUMERIC)
11190 _X$="SELL_PRICE_6",_X=SELL_PRICE_6.CTL,SELL_PRICE_6=NUM(SELL_PRICE_6$,ERR=NON_NUMERIC)
11200 _X$="SELL_PRICE_7",_X=SELL_PRICE_7.CTL,SELL_PRICE_7=NUM(SELL_PRICE_7$,ERR=NON_NUMERIC)
11210 _X$="SELL_PRICE_8",_X=SELL_PRICE_8.CTL,SELL_PRICE_8=NUM(SELL_PRICE_8$,ERR=NON_NUMERIC)
11220 _X$="SELL_PRICE_9",_X=SELL_PRICE_9.CTL,SELL_PRICE_9=NUM(SELL_PRICE_9$,ERR=NON_NUMERIC)
11230 _X$="SELL_PRICE_10",_X=SELL_PRICE_10.CTL,SELL_PRICE_10=NUM(SELL_PRICE_10$,ERR=NON_NUMERIC)
11240 _X$="SELL_PRICE_11",_X=SELL_PRICE_11.CTL,SELL_PRICE_11=NUM(SELL_PRICE_11$,ERR=NON_NUMERIC)
11250 _X$="SELL_PRICE_12",_X=SELL_PRICE_12.CTL,SELL_PRICE_12=NUM(SELL_PRICE_12$,ERR=NON_NUMERIC)
11260 _X$="UNIT_CST_1_TIME_CHRG",_X=UNIT_CST_1_TIME_CHRG.CTL,UNIT_CST_1_TIME_CHRG=NUM(UNIT_CST_1_TIME_CHRG$,ERR=NON_NUMERIC)
11270 _X$="SELL_PRICE_ONE_TIME",_X=SELL_PRICE_ONE_TIME.CTL,SELL_PRICE_ONE_TIME=NUM(SELL_PRICE_ONE_TIME$,ERR=NON_NUMERIC)
11280 RETURN 
11290 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11300 NEXT_ID=_X
11310 EXIT 
11320 ! 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 IF ITEM_CODE$="" THEN {
12030 CALL "*wingrp;Enable",KEY2.GRP$
12040 CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",GP_FIELDS.GRP$
12050 _W_FLG=1
12060 RETURN 
12070  }
12080 IF FEATURE$="" THEN MSGBOX "Missing value for Feature"; _W_FLG=0; NEXT_ID=FEATURE.CTL; CALL "*wingrp;Enable",KEY3.GRP$; REFRESH_FLG=1; RETURN 
12090 IF FEATURE_GROUP_POS$="" THEN MSGBOX "Missing value for Feature Group Position"; _W_FLG=0; NEXT_ID=FEATURE_GROUP_POS.CTL; REFRESH_FLG=1; RETURN 
12100 _W_FLG=1
12110 RETURN 
12120 ! 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN {
13030 VENDOR$=""; %VENDOR$=""; %VEND_NAME$=""; VEND_NAME$=""; %VEND_CODE$=""
13040 ITEM_CODE$=""; ITEM_DESC$=""
13050 FEATURE$=""; FEATURE_DESC$=""; FEATURE_GROUP_POS$=""
13060 QTY_BREAK_1$="",QTY_BREAK_2$="",QTY_BREAK_3$="",QTY_BREAK_4$="",QTY_BREAK_5$="",QTY_BREAK_6$="",QTY_BREAK_7$="",QTY_BREAK_8$="",QTY_BREAK_9$="",QTY_BREAK_10$="",QTY_BREAK_11$="",QTY_BREAK_12$=""
13070  }
13080 IF _CLR_FLG$="F" THEN {
13090 FEATURE_DESC$=""; FEATURE_GROUP_POS$=""
13100  }
13110 IF _CLR_FLG$="G" THEN {
13120 FEATURE$=""; FEATURE_DESC$=""; FEATURE_GROUP_POS$=""
13130 QTY_BREAK_1$="",QTY_BREAK_2$="",QTY_BREAK_3$="",QTY_BREAK_4$="",QTY_BREAK_5$="",QTY_BREAK_6$="",QTY_BREAK_7$="",QTY_BREAK_8$="",QTY_BREAK_9$="",QTY_BREAK_10$="",QTY_BREAK_11$="",QTY_BREAK_12$=""
13140 CALL "*wingrp;Enable",BUTTONS.GRP$
13150  }
13160 PRICE_CODE$="R" ! SSP#283128
13170 UNIT_COST_1$="",UNIT_COST_2$="",UNIT_COST_3$="",UNIT_COST_4$="",UNIT_COST_5$="",UNIT_COST_6$="",UNIT_COST_7$="",UNIT_COST_8$="",UNIT_COST_9$="",UNIT_COST_10$="",UNIT_COST_11$="",UNIT_COST_12$=""
13180 SELL_PRICE_1$="",SELL_PRICE_2$="",SELL_PRICE_3$="",SELL_PRICE_4$="",SELL_PRICE_5$="",SELL_PRICE_6$="",SELL_PRICE_7$="",SELL_PRICE_8$="",SELL_PRICE_9$="",SELL_PRICE_10$="",SELL_PRICE_11$="",SELL_PRICE_12$=""
13190 GP_1$="",GP_2$="",GP_3$="",GP_4$="",GP_5$="",GP_6$="",GP_7$="",GP_8$="",GP_9$="",GP_10$="",GP_11$="",GP_12$=""
13200 UNIT_CST_1_TIME_CHRG$=""
13210 SELL_PRICE_ONE_TIME$=""
13220 GP_ONE_TIME$=""
13230 CHANGE_FLG=0,NEXT_ID=VENDOR.CTL,REFRESH_FLG=1
13240 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=1 THEN CALL "*wingrp;Enable",KEY1.GRP$; NEXT_ID=VENDOR.CTL ELSE CALL "*wingrp;Disable",KEY1.GRP$
14030 IF _ENABLE_FLG=2 THEN CALL "*wingrp;Enable",KEY2.GRP$; NEXT_ID=VENDOR.CTL ELSE CALL "*wingrp;Disable",KEY2.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14040 IF _ENABLE_FLG=3 THEN CALL "*wingrp;Enable",KEY3.GRP$; NEXT_ID=FEATURE.CTL ELSE CALL "*wingrp;Disable",KEY3.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$ ! SSP#283128
14050 IF _ENABLE_FLG=4 THEN CALL "*wingrp;Enable",KEY3.GRP$; CALL "*wingrp;Enable",FIELDS.GRP$; NEXT_ID=FEATURE_DESC.CTL
14060 IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$; CALL "*wingrp;Disable",QTY_BREAK.GRP$
14070 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14080 RETURN 
14090 ! 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(32,"N")
15030 IF _ORIG.VENDOR$=_CUR.VENDOR$ OR VENDOR$=_CUR.VENDOR$ THEN GOTO *NEXT ELSE IF _ORIG.VENDOR$=VENDOR$ THEN _CHG2$=_CHG2$+SEP+MSG("VENDOR")+" = "+_CUR.VENDOR$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VENDOR")+" = "+_CUR.VENDOR$
15040 IF _ORIG.ITEM_CODE$=_CUR.ITEM_CODE$ OR ITEM_CODE$=_CUR.ITEM_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.ITEM_CODE$=ITEM_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ITEM_CODE")+" = "+_CUR.ITEM_CODE$
15050 IF _ORIG.FEATURE$=_CUR.FEATURE$ OR FEATURE$=_CUR.FEATURE$ THEN GOTO *NEXT ELSE IF _ORIG.FEATURE$=FEATURE$ THEN _CHG2$=_CHG2$+SEP+MSG("FEATURE")+" = "+_CUR.FEATURE$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FEATURE")+" = "+_CUR.FEATURE$
15060 IF _ORIG.FEATURE_DESC$=_CUR.FEATURE_DESC$ OR FEATURE_DESC$=_CUR.FEATURE_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.FEATURE_DESC$=FEATURE_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("FEAT_D")+" = "+_CUR.FEATURE_DESC$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FEAT_D")+" = "+_CUR.FEATURE_DESC$
15070 IF _ORIG.PRICE_CODE$=_CUR.PRICE_CODE$ OR PRICE_CODE$=_CUR.PRICE_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.PRICE_CODE$=PRICE_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PRICE_CODE")+" = "+_CUR.PRICE_CODE$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRICE_CODE")+" = "+_CUR.PRICE_CODE$
15080 IF _ORIG.FEATURE_GROUP_POS$=_CUR.FEATURE_GROUP_POS$ OR FEATURE_GROUP_POS$=_CUR.FEATURE_GROUP_POS$ THEN GOTO *NEXT ELSE IF _ORIG.FEATURE_GROUP_POS$=FEATURE_GROUP_POS$ THEN _CHG2$=_CHG2$+SEP+MSG("FEAT_G_P")+" = "+_CUR.FEATURE_GROUP_POS$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FEAT_G_P")+" = "+_CUR.FEATURE_GROUP_POS$
15090 IF _ORIG.UNIT_COST_1=_CUR.UNIT_COST_1 OR UNIT_COST_1=_CUR.UNIT_COST_1 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_1=UNIT_COST_1 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_1")+" = "+STR(_CUR.UNIT_COST_1),_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_1")+" = "+STR(_CUR.UNIT_COST_1)
15100 IF _ORIG.UNIT_COST_2=_CUR.UNIT_COST_2 OR UNIT_COST_2=_CUR.UNIT_COST_2 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_2=UNIT_COST_2 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_2")+" = "+STR(_CUR.UNIT_COST_2),_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_2")+" = "+STR(_CUR.UNIT_COST_2)
15110 IF _ORIG.UNIT_COST_3=_CUR.UNIT_COST_3 OR UNIT_COST_3=_CUR.UNIT_COST_3 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_3=UNIT_COST_3 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_3")+" = "+STR(_CUR.UNIT_COST_3),_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_3")+" = "+STR(_CUR.UNIT_COST_3)
15120 IF _ORIG.UNIT_COST_4=_CUR.UNIT_COST_4 OR UNIT_COST_4=_CUR.UNIT_COST_4 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_4=UNIT_COST_4 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_4")+" = "+STR(_CUR.UNIT_COST_4),_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_4")+" = "+STR(_CUR.UNIT_COST_4)
15130 IF _ORIG.UNIT_COST_5=_CUR.UNIT_COST_5 OR UNIT_COST_5=_CUR.UNIT_COST_5 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_5=UNIT_COST_5 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_5")+" = "+STR(_CUR.UNIT_COST_5),_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_5")+" = "+STR(_CUR.UNIT_COST_5)
15140 IF _ORIG.UNIT_COST_6=_CUR.UNIT_COST_6 OR UNIT_COST_6=_CUR.UNIT_COST_6 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_6=UNIT_COST_6 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_6")+" = "+STR(_CUR.UNIT_COST_6),_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_6")+" = "+STR(_CUR.UNIT_COST_6)
15150 IF _ORIG.UNIT_COST_7=_CUR.UNIT_COST_7 OR UNIT_COST_7=_CUR.UNIT_COST_7 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_7=UNIT_COST_7 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_7")+" = "+STR(_CUR.UNIT_COST_7),_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_7")+" = "+STR(_CUR.UNIT_COST_7)
15160 IF _ORIG.UNIT_COST_8=_CUR.UNIT_COST_8 OR UNIT_COST_8=_CUR.UNIT_COST_8 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_8=UNIT_COST_8 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_8")+" = "+STR(_CUR.UNIT_COST_8),_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_8")+" = "+STR(_CUR.UNIT_COST_8)
15170 IF _ORIG.UNIT_COST_9=_CUR.UNIT_COST_9 OR UNIT_COST_9=_CUR.UNIT_COST_9 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_9=UNIT_COST_9 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_9")+" = "+STR(_CUR.UNIT_COST_9),_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_9")+" = "+STR(_CUR.UNIT_COST_9)
15180 IF _ORIG.UNIT_COST_10=_CUR.UNIT_COST_10 OR UNIT_COST_10=_CUR.UNIT_COST_10 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_10=UNIT_COST_10 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_10")+" = "+STR(_CUR.UNIT_COST_10),_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_10")+" = "+STR(_CUR.UNIT_COST_10)
15190 IF _ORIG.UNIT_COST_11=_CUR.UNIT_COST_11 OR UNIT_COST_11=_CUR.UNIT_COST_11 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_11=UNIT_COST_11 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_11")+" = "+STR(_CUR.UNIT_COST_11),_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_11")+" = "+STR(_CUR.UNIT_COST_11)
15200 IF _ORIG.UNIT_COST_12=_CUR.UNIT_COST_12 OR UNIT_COST_12=_CUR.UNIT_COST_12 THEN GOTO *NEXT ELSE IF _ORIG.UNIT_COST_12=UNIT_COST_12 THEN _CHG2$=_CHG2$+SEP+MSG("UNIT_C_12")+" = "+STR(_CUR.UNIT_COST_12),_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNIT_C_12")+" = "+STR(_CUR.UNIT_COST_12)
15210 IF _ORIG.SELL_PRICE_1=_CUR.SELL_PRICE_1 OR SELL_PRICE_1=_CUR.SELL_PRICE_1 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_1=SELL_PRICE_1 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_1")+" = "+STR(_CUR.SELL_PRICE_1),_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_1")+" = "+STR(_CUR.SELL_PRICE_1)
15220 IF _ORIG.SELL_PRICE_2=_CUR.SELL_PRICE_2 OR SELL_PRICE_2=_CUR.SELL_PRICE_2 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_2=SELL_PRICE_2 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_2")+" = "+STR(_CUR.SELL_PRICE_2),_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_2")+" = "+STR(_CUR.SELL_PRICE_2)
15230 IF _ORIG.SELL_PRICE_3=_CUR.SELL_PRICE_3 OR SELL_PRICE_3=_CUR.SELL_PRICE_3 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_3=SELL_PRICE_3 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_3")+" = "+STR(_CUR.SELL_PRICE_3),_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_3")+" = "+STR(_CUR.SELL_PRICE_3)
15240 IF _ORIG.SELL_PRICE_4=_CUR.SELL_PRICE_4 OR SELL_PRICE_4=_CUR.SELL_PRICE_4 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_4=SELL_PRICE_4 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_4")+" = "+STR(_CUR.SELL_PRICE_4),_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_4")+" = "+STR(_CUR.SELL_PRICE_4)
15250 IF _ORIG.SELL_PRICE_5=_CUR.SELL_PRICE_5 OR SELL_PRICE_5=_CUR.SELL_PRICE_5 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_5=SELL_PRICE_5 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_5")+" = "+STR(_CUR.SELL_PRICE_5),_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_5")+" = "+STR(_CUR.SELL_PRICE_5)
15260 IF _ORIG.SELL_PRICE_6=_CUR.SELL_PRICE_6 OR SELL_PRICE_6=_CUR.SELL_PRICE_6 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_6=SELL_PRICE_6 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_6")+" = "+STR(_CUR.SELL_PRICE_6),_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_6")+" = "+STR(_CUR.SELL_PRICE_6)
15270 IF _ORIG.SELL_PRICE_7=_CUR.SELL_PRICE_7 OR SELL_PRICE_7=_CUR.SELL_PRICE_7 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_7=SELL_PRICE_7 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_7")+" = "+STR(_CUR.SELL_PRICE_7),_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_7")+" = "+STR(_CUR.SELL_PRICE_7)
15280 IF _ORIG.SELL_PRICE_8=_CUR.SELL_PRICE_8 OR SELL_PRICE_8=_CUR.SELL_PRICE_8 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_8=SELL_PRICE_8 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_8")+" = "+STR(_CUR.SELL_PRICE_8),_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_8")+" = "+STR(_CUR.SELL_PRICE_8)
15290 IF _ORIG.SELL_PRICE_9=_CUR.SELL_PRICE_9 OR SELL_PRICE_9=_CUR.SELL_PRICE_9 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_9=SELL_PRICE_9 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_9")+" = "+STR(_CUR.SELL_PRICE_9),_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_9")+" = "+STR(_CUR.SELL_PRICE_9)
15300 IF _ORIG.SELL_PRICE_10=_CUR.SELL_PRICE_10 OR SELL_PRICE_10=_CUR.SELL_PRICE_10 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_10=SELL_PRICE_10 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_10")+" = "+STR(_CUR.SELL_PRICE_10),_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_10")+" = "+STR(_CUR.SELL_PRICE_10)
15310 IF _ORIG.SELL_PRICE_11=_CUR.SELL_PRICE_11 OR SELL_PRICE_11=_CUR.SELL_PRICE_11 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_11=SELL_PRICE_11 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_11")+" = "+STR(_CUR.SELL_PRICE_11),_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_11")+" = "+STR(_CUR.SELL_PRICE_11)
15320 IF _ORIG.SELL_PRICE_12=_CUR.SELL_PRICE_12 OR SELL_PRICE_12=_CUR.SELL_PRICE_12 THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_12=SELL_PRICE_12 THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_12")+" = "+STR(_CUR.SELL_PRICE_12),_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_12")+" = "+STR(_CUR.SELL_PRICE_12)
15330 IF _ORIG.UNIT_CST_1_TIME_CHRG=_CUR.UNIT_CST_1_TIME_CHRG OR UNIT_CST_1_TIME_CHRG=_CUR.UNIT_CST_1_TIME_CHRG THEN GOTO *NEXT ELSE IF _ORIG.UNIT_CST_1_TIME_CHRG=UNIT_CST_1_TIME_CHRG THEN _CHG2$=_CHG2$+SEP+MSG("U_C_1_T_C")+" = "+STR(_CUR.UNIT_CST_1_TIME_CHRG),_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("U_C_1_T_C")+" = "+STR(_CUR.UNIT_CST_1_TIME_CHRG)
15340 IF _ORIG.SELL_PRICE_ONE_TIME=_CUR.SELL_PRICE_ONE_TIME OR SELL_PRICE_ONE_TIME=_CUR.SELL_PRICE_ONE_TIME THEN GOTO *NEXT ELSE IF _ORIG.SELL_PRICE_ONE_TIME=SELL_PRICE_ONE_TIME THEN _CHG2$=_CHG2$+SEP+MSG("SELL_P_O_T")+" = "+STR(_CUR.SELL_PRICE_ONE_TIME),_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELL_P_O_T")+" = "+STR(_CUR.SELL_PRICE_ONE_TIME)
15350 RETURN 
15360 ! 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN VENDOR$=_CUR.VENDOR$
16030 IF _CHG_VAR$(2,1)="Y" THEN ITEM_CODE$=_CUR.ITEM_CODE$
16040 IF _CHG_VAR$(3,1)="Y" THEN FEATURE$=_CUR.FEATURE$
16050 IF _CHG_VAR$(4,1)="Y" THEN FEATURE_DESC$=_CUR.FEATURE_DESC$
16060 IF _CHG_VAR$(5,1)="Y" THEN PRICE_CODE$=_CUR.PRICE_CODE$
16070 IF _CHG_VAR$(6,1)="Y" THEN FEATURE_GROUP_POS$=_CUR.FEATURE_GROUP_POS$
16080 IF _CHG_VAR$(7,1)="Y" THEN UNIT_COST_1=_CUR.UNIT_COST_1
16090 IF _CHG_VAR$(8,1)="Y" THEN UNIT_COST_2=_CUR.UNIT_COST_2
16100 IF _CHG_VAR$(9,1)="Y" THEN UNIT_COST_3=_CUR.UNIT_COST_3
16110 IF _CHG_VAR$(10,1)="Y" THEN UNIT_COST_4=_CUR.UNIT_COST_4
16120 IF _CHG_VAR$(11,1)="Y" THEN UNIT_COST_5=_CUR.UNIT_COST_5
16130 IF _CHG_VAR$(12,1)="Y" THEN UNIT_COST_6=_CUR.UNIT_COST_6
16140 IF _CHG_VAR$(13,1)="Y" THEN UNIT_COST_7=_CUR.UNIT_COST_7
16150 IF _CHG_VAR$(14,1)="Y" THEN UNIT_COST_8=_CUR.UNIT_COST_8
16160 IF _CHG_VAR$(15,1)="Y" THEN UNIT_COST_9=_CUR.UNIT_COST_9
16170 IF _CHG_VAR$(16,1)="Y" THEN UNIT_COST_10=_CUR.UNIT_COST_10
16180 IF _CHG_VAR$(17,1)="Y" THEN UNIT_COST_11=_CUR.UNIT_COST_11
16190 IF _CHG_VAR$(18,1)="Y" THEN UNIT_COST_12=_CUR.UNIT_COST_12
16200 IF _CHG_VAR$(19,1)="Y" THEN SELL_PRICE_1=_CUR.SELL_PRICE_1
16210 IF _CHG_VAR$(20,1)="Y" THEN SELL_PRICE_2=_CUR.SELL_PRICE_2
16220 IF _CHG_VAR$(21,1)="Y" THEN SELL_PRICE_3=_CUR.SELL_PRICE_3
16230 IF _CHG_VAR$(22,1)="Y" THEN SELL_PRICE_4=_CUR.SELL_PRICE_4
16240 IF _CHG_VAR$(23,1)="Y" THEN SELL_PRICE_5=_CUR.SELL_PRICE_5
16250 IF _CHG_VAR$(24,1)="Y" THEN SELL_PRICE_6=_CUR.SELL_PRICE_6
16260 IF _CHG_VAR$(25,1)="Y" THEN SELL_PRICE_7=_CUR.SELL_PRICE_7
16270 IF _CHG_VAR$(26,1)="Y" THEN SELL_PRICE_8=_CUR.SELL_PRICE_8
16280 IF _CHG_VAR$(27,1)="Y" THEN SELL_PRICE_9=_CUR.SELL_PRICE_9
16290 IF _CHG_VAR$(28,1)="Y" THEN SELL_PRICE_10=_CUR.SELL_PRICE_10
16300 IF _CHG_VAR$(29,1)="Y" THEN SELL_PRICE_11=_CUR.SELL_PRICE_11
16310 IF _CHG_VAR$(30,1)="Y" THEN SELL_PRICE_12=_CUR.SELL_PRICE_12
16320 IF _CHG_VAR$(31,1)="Y" THEN UNIT_CST_1_TIME_CHRG=_CUR.UNIT_CST_1_TIME_CHRG
16330 IF _CHG_VAR$(32,1)="Y" THEN SELL_PRICE_ONE_TIME=_CUR.SELL_PRICE_ONE_TIME
16340 RETURN 
17000 ! 
17010 VENDOR_RIGHT_QUERY:
17020 VAL$=""
17025 %VENDOR$=""
17030 PROCESS "QRY_FE1.1","../FEG/FE.EN",VAL$
17040 IF STP(VAL$)="" THEN NEXT_ID=VENDOR.CTL; EXIT 
17050 VEND_DIV$=MID(VAL$,1,2)
17060 VEND_CODE$=MID(VAL$,3,8)
17070 VENDOR$=VEND_DIV$+VEND_CODE$
17080 %VEND_NAME$=MID(VENDOR$,11,35)
17090 ITEM_CODE$=MID(VAL$,11,10)
17100 FEATURE$=MID(VAL$,21,3)
17110 GOSUB CALL_ZZWLKU
17120 CALL "*wingrp;Enable",KEY2.GRP$
17130 CALL "*wingrp;Enable",KEY3.GRP$
17140 NEXT_ID=FEATURE_DESC.CTL; REFRESH_FLG=1
17150 RETURN 
17160 ! 
17170 ! validate the incoming ITEM_GROUP_CODE
17180 FIND_ITEM_GROUP:
17190 DIM FE0$(484),FE0[12]
17200 FIND (_FE0_NO,KEY=VENDOR$+PAD(ITEM_CODE$,10),ERR=NOREC,END=NOREC)FE0$,FE0{ALL}
17210 NEXT_ID=FEATURE.CTL; REFRESH_FLG=1
17220 RETURN 
17230 NOREC:
17240 MSGBOX ("No record found for "+CHR(34)+VENDOR$+PAD(ITEM_CODE$,10)+CHR(34))
17250 CALL "*wingrp;Disable",BUTTONS.GRP$
17260 ITEM_CODE$=""; ITEM_DESC$=""
17270 NEXT_ID=ITEM_CODE.CTL; REFRESH_FLG=1
17280 RETURN 
17300 ! 
17310 ! handle updates to SELL PRICE ONE TIME field
17320 HANDLE_SELL_PRICE:
17330 IF NUM(SELL_PRICE_1$)>0 THEN GP_1$=STR(((NUM(SELL_PRICE_1$)-NUM(UNIT_COST_1$))*100)/NUM(SELL_PRICE_1$))
17340 IF NUM(SELL_PRICE_2$)>0 THEN GP_2$=STR(((NUM(SELL_PRICE_2$)-NUM(UNIT_COST_2$))*100)/NUM(SELL_PRICE_2$))
17350 IF NUM(SELL_PRICE_3$)>0 THEN GP_3$=STR(((NUM(SELL_PRICE_3$)-NUM(UNIT_COST_3$))*100)/NUM(SELL_PRICE_3$))
17360 IF NUM(SELL_PRICE_4$)>0 THEN GP_4$=STR(((NUM(SELL_PRICE_4$)-NUM(UNIT_COST_4$))*100)/NUM(SELL_PRICE_4$))
17370 IF NUM(SELL_PRICE_5$)>0 THEN GP_5$=STR(((NUM(SELL_PRICE_5$)-NUM(UNIT_COST_5$))*100)/NUM(SELL_PRICE_5$))
17380 IF NUM(SELL_PRICE_6$)>0 THEN GP_6$=STR(((NUM(SELL_PRICE_6$)-NUM(UNIT_COST_6$))*100)/NUM(SELL_PRICE_6$))
17390 IF NUM(SELL_PRICE_7$)>0 THEN GP_7$=STR(((NUM(SELL_PRICE_7$)-NUM(UNIT_COST_7$))*100)/NUM(SELL_PRICE_7$))
17400 IF NUM(SELL_PRICE_8$)>0 THEN GP_8$=STR(((NUM(SELL_PRICE_8$)-NUM(UNIT_COST_8$))*100)/NUM(SELL_PRICE_8$))
17410 IF NUM(SELL_PRICE_9$)>0 THEN GP_9$=STR(((NUM(SELL_PRICE_9$)-NUM(UNIT_COST_9$))*100)/NUM(SELL_PRICE_9$))
17420 IF NUM(SELL_PRICE_10$)>0 THEN GP_10$=STR(((NUM(SELL_PRICE_10$)-NUM(UNIT_COST_10$))*100)/NUM(SELL_PRICE_10$))
17430 IF NUM(SELL_PRICE_11$)>0 THEN GP_11$=STR(((NUM(SELL_PRICE_11$)-NUM(UNIT_COST_11$))*100)/NUM(SELL_PRICE_11$))
17440 IF NUM(SELL_PRICE_12$)>0 THEN GP_12$=STR(((NUM(SELL_PRICE_12$)-NUM(UNIT_COST_12$))*100)/NUM(SELL_PRICE_12$))
17450 IF NUM(SELL_PRICE_ONE_TIME$)>0 THEN GP_ONE_TIME$=STR(((NUM(SELL_PRICE_ONE_TIME$)-NUM(UNIT_CST_1_TIME_CHRG$))*100)/NUM(SELL_PRICE_ONE_TIME$))
17460 NEXT_ID=BUTTON_SAVE.CTL; CHANGE_FLG=1; REFRESH_FLG=1
17470 RETURN 
17480 ! 
17490 ! handle updates to SELL_PRICE_FIELD_12
17500 HANDLE_SELL_PRICE_12:
17510 IF (PRICE_CODE$="R") THEN NEXT_ID=UNIT_CST_1_TIME_CHRG.CTL; REFRESH_FLG=1
17515 IF (PRICE_CODE$="F") THEN NEXT_ID=UNIT_CST_1_TIME_CHRG.CTL; REFRESH_FLG=1
17520 RETURN 
17530 ! 
17540 ! handle updates to FEATURE GROUP POSITION field
17550 FIND_FG_POSITION:
17560 CALL "*wingrp;Enable",FIELDS.GRP$
17570 CALL "*wingrp;Enable",UNIT_COST.GRP$
17580 CALL "*wingrp;Enable",SELL_PRICE.GRP$
17590 ! different next field for ONE TIME CHARGEs
17600 IF (PRICE_CODE$="O") THEN NEXT_ID=UNIT_CST_1_TIME_CHRG.CTL; REFRESH_FLG=1
17610 IF (PRICE_CODE$="F") THEN NEXT_ID=UNIT_COST_1.CTL; REFRESH_FLG=1
17620 IF (PRICE_CODE$="R") THEN NEXT_ID=UNIT_COST_1.CTL; REFRESH_FLG=1
17630 REFRESH_FLG=1
17640 RETURN 
18000 ! 
18010 ! calculate and fill QUANTITY BREAK fields using data from FE0 record
18020 LOAD_QUANTITY_BREAKS:
18030 QTY_BREAK_1$=""; QTY_BREAK_2$=""; QTY_BREAK_3$=""; QTY_BREAK_4$=""; QTY_BREAK_5$=""; QTY_BREAK_6$=""; QTY_BREAK_7$=""; QTY_BREAK_8$=""; QTY_BREAK_9$=""; QTY_BREAK_10$=""; QTY_BREAK_11$=""; QTY_BREAK_12$=""
18040 DIM FE0$(484),FE0[12]
18050 FIND (_FE0_NO,KEY=VEND_DIV$+VEND_CODE$+PAD(ITEM_CODE$,10),ERR=LASTQTYBRK,END=LASTQTYBRK)FE0$,FE0{ALL}
18060 UOM_FMT$=STP(FE0$(59,4))+"/"+STP(STR(FE0[0]:"##,###"),2)
18070 ITEM_DESC$=FE0$(21,35)
18080 MODE=2 ! 1=display data;   2=get data for field COST_QTY_PER
18090 U$=FE0$(59,4)
18100 U_QPM=FE0[0]
18110 IF FE0[1]<>0 THEN QTY_IN_EACHES=FE0[1]; GOSUB CALC_QTY_BREAK; QTY_BREAK_1$=STR(DISPLAY_QTY)
18120 IF FE0[2]<>0 THEN QTY_IN_EACHES=FE0[2]; GOSUB CALC_QTY_BREAK; QTY_BREAK_2$=STR(DISPLAY_QTY)
18130 IF FE0[3]<>0 THEN QTY_IN_EACHES=FE0[3]; GOSUB CALC_QTY_BREAK; QTY_BREAK_3$=STR(DISPLAY_QTY)
18140 IF FE0[4]<>0 THEN QTY_IN_EACHES=FE0[4]; GOSUB CALC_QTY_BREAK; QTY_BREAK_4$=STR(DISPLAY_QTY)
18150 IF FE0[5]<>0 THEN QTY_IN_EACHES=FE0[5]; GOSUB CALC_QTY_BREAK; QTY_BREAK_5$=STR(DISPLAY_QTY)
18160 IF FE0[6]<>0 THEN QTY_IN_EACHES=FE0[6]; GOSUB CALC_QTY_BREAK; QTY_BREAK_6$=STR(DISPLAY_QTY)
18170 IF FE0[7]<>0 THEN QTY_IN_EACHES=FE0[7]; GOSUB CALC_QTY_BREAK; QTY_BREAK_7$=STR(DISPLAY_QTY)
18180 IF FE0[8]<>0 THEN QTY_IN_EACHES=FE0[8]; GOSUB CALC_QTY_BREAK; QTY_BREAK_8$=STR(DISPLAY_QTY)
18190 IF FE0[9]<>0 THEN QTY_IN_EACHES=FE0[9]; GOSUB CALC_QTY_BREAK; QTY_BREAK_9$=STR(DISPLAY_QTY)
18200 IF FE0[10]<>0 THEN QTY_IN_EACHES=FE0[10]; GOSUB CALC_QTY_BREAK; QTY_BREAK_10$=STR(DISPLAY_QTY)
18210 IF FE0[11]<>0 THEN QTY_IN_EACHES=FE0[11]; GOSUB CALC_QTY_BREAK; QTY_BREAK_11$=STR(DISPLAY_QTY)
18220 IF FE0[12]<>0 THEN QTY_IN_EACHES=FE0[12]; GOSUB CALC_QTY_BREAK; QTY_BREAK_12$=STR(DISPLAY_QTY)
18230 LASTQTYBRK:
18240 REFRESH_FLG=1
18250 RETURN 
18260 ! 
18270 CALC_QTY_BREAK:
18280 ! 
18290 ! MODE		! 1=display data;   2=get data
18300 ! U$		! Unit of measure "BOX ", "M   ", etc
18310 ! U_QPM		! Qty per unit; 1 or 250 (if it is an EACH/1 or Box/250 respectively) etc
18320 ! QTY_IN_EACHES	! Raw qty to be stored in DB/d files in extended form (also called eaches interchangeably)
18330 ! DISPLAY_QTY	! Qty displayed on screen in terms of UOM, ex: "10" BOX/250
18340 ! 
18350 ON MODE GOSUB *RETURN,GET_EACHES_QTY,GET_DISPLAY_QTY,*RETURN
18360 RETURN 
18370 ! 
18380 ! Given U$ and U_QPM, get components required to calculate display units
18390 GET_UOM_FORMATTED:
18400 U=1 ! minimum allowed unit of measure
18410 DIM UOM[2]
18420 FIND (ZZPARM,KEY="U/M"+PAD(U$,4),DOM=*RETURN)UOM$,UOM[0],UOM[1]
18430 IF UOM$(20,1)="Y" THEN {
18440 U=UOM[1]
18450 CALL "*wingrp;Disable",COST_QTY_PER.GRP$
18460  } ELSE {
18470 U=U_QPM
18480 CALL "*wingrp;Enable",COST_QTY_PER.GRP$
18490  }
18500 IF U=0 THEN U=1
18510 RETURN 
18520 ! 
18530 GET_EACHES_QTY:
18540 GOSUB GET_UOM_FORMATTED
18550 QTY_IN_EACHES=DISPLAY_QTY*U
18560 RETURN 
18570 ! 
18580 GET_DISPLAY_QTY:
18590 GOSUB GET_UOM_FORMATTED
18600 DISPLAY_QTY=QTY_IN_EACHES/U
18610 RETURN 
30000 ! 
30010 INSERT_VERSION:
30020 VERS$="$Revision: 6.15 $"
30030 VERSION$=MID(VERS$,2,LEN(VERS$)-2)
30040 REFRESH_FLG=1
30050 RETURN 
56001 REM "283128-Having Trouble adding the EQ Item Features to existing      
