0010 REM "General Ledger Journal Entry <GLGJAA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 03/17/16 - 15.797222 - tma - SSP# 283547
0037 REM "283547-Program: GLGJAA General Ledger Journal Entry. Issue with the
0040 REM "Copyright 2016 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "GLGJAA","../GLG/GL.EN"
0060 EXIT 
0090 ON L0 GOTO 0100,6700,6500,7100
0100 CLEAR ; SETERR 9000
0105 INIT:
0110 X0$="GL2JAA",X1$="General Ledger Journal Entry",K9$="",K9=0
0120 DIM Z0$(80,"-")
0126 F1$="*"
0130 K0=14,K1=4
0135 C9=-1,V9=-2
0140 PERFORM "GLGMAA;SETUP_LIBRARY"; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$ ! ssp 180454
0160 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0200 _ZZPARM=HFN; OPEN (_ZZPARM)"ZZPARM"; READ (_ZZPARM,KEY=FID(0)+"      ")X3$,*,X4$
0220 CALL "ZGBATC",X3$,X4$,X0$,X9; IF X9=1 THEN CMD_STR$="END"; RETURN 
0240 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0290 IOLIST Y[0],Y[1],Y[2],Y[3],Y[4]
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 IOLIST A$(1,LEN(A$)),A[0]
0310 IOLIST A$(1,LEN(A$)),A[0]
0320 IOLIST B$,B[0],B[1],B[2],B[3]
0330 IOLIST C$
0340 IOLIST D$
0350 IOLIST E$
0380 IOLIST H$,H[0],H[1]
0500 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X GL7...  02O GL8...  03O GL1...  07O ZZPARM  08O GL5...  06O ZZPARM  "
0515 IF POS("J/C"=X4$(7))>0 THEN Z$=Z$+"04O JC0...  05O JC1...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 0521,9900
0530 F=Z[2]; DIM Y[4]
0540 Z(13)=_ZZPARM,%GL7$=FIN(Z(1),"FILENAME")
0550 IF X3$(174,4)<>"    " THEN ML_BATCH$=MSG("BATCH_NO")+": "+X3$(174,4) ELSE ML_BATCH$=""
0560 %GLGJAA$=MSG("GLGJAA"); IF ML_BATCH$<>"" THEN %GLGJAA$=%GLGJAA$+" - "+ML_BATCH$
0600 REM "
0605 GOSUB 7400
0640 GOSUB 7600
0650 GOSUB 7800
1000 V0=0
1010 GOSUB 6000
1030 DIM B$(37),B[4],E$(34),D[1]
1035 DIM A$(170+K9),A[4]; A0=0
1045 A$(1,8+K9)=K9$+A1$
1050 A$(166+K9,1)="N"
1051 IF POS(X3$(9,3)="465",3)<>0 THEN A$(166+K9,1)="Y"
1090 GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0; IF A$(7+K9,2)="  " THEN X0=1
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1250,1300,1350,1500
1200 REM "Fiscal Year Ending
1205 IF LEN(A1$)>0 THEN A$(1,4)=A1$(1,4); GOTO 1212
1209 J$=X3$(9,3)+"G/LYE",CHANGE_FLG=0; RETURN 
1210 SEL_FISCAL_YEAR:; IF A$="" THEN DIM A$(170)
1211 ! 
1212 A$(1+K9,4)=FY$
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1216,6800,9800,6970
1220 P1$=""; FIND (Z[13],KEY=X3$(9,3)+"G/LYE"+A$(1,4),DOM=*NEXT)P1$; GOTO 1225
1221 MSGBOX MSG("INVALID")+" "+MSG("FISC_Y"),MSG("ATTN"),"!"; FY$="",NEXT_ID=FY.CTL,REFRESH_FLG=1; RETURN 
1225 A$(160+K9,6)=""; GOSUB 7700
1230 REFRESH_FLG=1,MODULO$="G/L"
1235 PERFORM "ZZWLDB;LOAD_ACCTPD"
1237 ML_ENDING_PERIOD$=CUR_DATE$[NUM(ACCTPD$(1,2))],REFRESH_FLG=1,ACCTPD$=ACCTPD$(1,2),ML_TRANS_DATE$=P1$(NUM(ACCTPD$(1,2))*6+15,6)
1240 RETURN 
1250 REM "Accounting Period
1254 IF ABS(C0)=2 THEN A1$=""; GOTO 1120
1255 IF LEN(A1$)>4 THEN A$(5,2)=A1$(5,2); GOTO 1262
1258 SEL_START_ACCTPD:
1259 ! 
1260 A$(5+K9,2)=ACCTPD$
1262 IF ABS(C0)=2 AND LEN(A1$)>0 THEN A1$=A1$(1,0)
1264 IF A$(5+K9,2)<"01" OR A$(5+K9,2)>P1$(13,2) THEN GOTO 1260
1265 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1266,6800,9800,6970
1270 A$(160+K9,6)=""; GOSUB 7700
1280 REFRESH_FLG=1
1290 RETURN 
1300 SEL_SOURCE_JOUR:
1301 ! 
1304 IF F1$="*" THEN F1$="",A1$="",X0=0; GOTO 1140
1305 IF LEN(A1$)>6 AND A1$(7,2)<>DIM(2) THEN A$(7,2)=A1$(7,2); GOTO 1312 ! SSP#275633
1310 A$(7+K9,2)=ML_SOURCE_JOUR$,REFRESH_FLG=1
1312 IF ABS(C0)=2 AND LEN(A1$)>4 THEN A1$=A1$(1,4)
1315 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1316,6800,9800,6970
1320 FIND (Z[8],KEY=A$(7,2),DOM=*NEXT)IOL=0350; GOTO 1325
1321 MSGBOX MSG("INVALID")+" "+MSG("SRC_JRNL"),MSG("INVALID"),"!"; ML_SOURCE_JOUR$="",ML_SRC_JRNL_DESC$="",NEXT_ID=ML_SOURCE_JOUR.CTL; RETURN 
1325 ML_SRC_JRNL_DESC$=E$(3,30)
1340 RETURN 
1350 SEL_JOURNAL_REF_CODE:
1351 IF STP(ML_JOUR_CODE$)="A" THEN GOTO SEL_NXT_ASS
1352 IF LEN(ML_JOUR_CODE$)>6 THEN ML_JOUR_CODE$=PAD(ML_JOUR_CODE$,14),A$(1,14)=ML_JOUR_CODE$,A1$=A$(1,14); READ (Z(1),KEY=A1$)IOL=0310; GOSUB ASSIGN_LIB; GOTO 1512 ! ssp 217406!SSP#232716
1355 X9$=A$(1,8),X$="Enter A then Return to automatically assign"
1360 REFRESH_FLG=1,A$(7+K9,2)=ML_SOURCE_JOUR$,ML_JOUR_CODE$=STR(NUM(ML_JOUR_CODE$):"000000",ERR=*NEXT),A$(9+K9,6)=ML_JOUR_CODE$ ! CALL "ZZENTR","SZUX",A{ALL},A$,X4$,X3$,31,7+V0,9+K9,6,C0,"","{2"+X$,X9$,"GL2JAA06","GL7","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1360,1361
1361 ML_JOUR_CODE$=PAD(ML_JOUR_CODE$,6),A$(9+K9,6)=ML_JOUR_CODE$ ! SSP#232716
1362 IF ABS(C0)=2 AND LEN(A1$)>6 THEN A1$=A1$(1,6)
1365 IF C0=-1 THEN GOTO 1360 ELSE IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1366,6800,9800,6970
1366 BUTTON HIDE BT_NXT.CTL; GOTO SEL_REC
1370 IF A$(9+K9,6)<>"A     " THEN GOTO 1390
1372 SEL_NXT_ASS:
1375 EXTRACT (Z[6],KEY=X3$(9,3)+"G/L")P0$
1380 A$(9,6)=P0$(244,6); IF P0$(244,6)="999999" THEN P0$(244,6)="000000"
1385 P0$(244,6)=STR(NUM(P0$(244,6))+1:"000000"); WRITE (Z[6],KEY=P0$(1,6))P0$; ML_JOUR_CODE$=A$(9,6),NEXT_ID=ML_REV_YEAR.CTL,REFRESH_FLG=1
1386 ML_JOUR_CODE.CTL'VALUE$=A$(9,6)
1390 BUTTON HIDE BT_NXT.CTL
1500 REM "
1501 SEL_REC:
1505 Z9=-1,A0=0
1510 A1$=K9$+A$(LEN(K9$)+1,14),A$(1,LEN(K9$))=K9$ ! SSP 217406
1512 D9$="",Y$="" ! SSP 217406
1520 READ (Z[1],KEY=A1$,DOM=NEW_RECORD)IOL=0310
1525 Z9=0,A0=A[0],_ORIG_A$=A$
1527 CALL "*WINGRP;ENABLE",BUTTONS.GRP$
1530 FIND (Z[3],KEY=A$(15+K9,4),DOM=1531)IOL=0330
1540 IF A$(15+K9,4)<>"    " THEN FIND (Z[13],KEY=X3$(9,3)+"G/LYE"+A$(15+K9,4),DOM=1541)P9$
1550 GOSUB SEL_SOURCE_JOUR
1590 GOTO 1700
1600 NEW_RECORD:
1610 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
1615 IF _YESNO$="YES" THEN CALL "*WINGRP;ENABLE",BUTTONS.GRP$; GOTO 1650
1620 ! CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1625,6975
1625 NEXT_ID=ML_JOUR_CODE.CTL,ML_JOUR_CODE$="",REFRESH_FLG=1
1650 A$(156,2)=P0$(40,1); IF P0$(40,1)+P0$(180,1)="CY" THEN A$(156,2)="A"
1655 CB_MEMO$=A$(166+K9,1),A0=0,A(0)=0
1660 IF V9>=0 THEN GOSUB 6200
1690 RETURN 
1700 REM "
1790 GOSUB 6200
1792 GOSUB RES_BT
1800 REM "
1801 REFRESH_FLG=1,NEXT_ID=ML_TRANS_DATE.CTL; RETURN 
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z+1 GOTO 2040,1830,6500,7000,7000
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 EXTRACT (Z[1],KEY=A1$,DOM=1870)IOL=0310
1865 C9=1
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2040 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=1,X1=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2022 GOSUB 7750
2025 IF INT(C0)=3 THEN GOSUB 7300 ELSE IF C0>3 OR X0<0 THEN GOTO 1800
2035 IF X0*6+11<LEN(V9$) THEN IF V9$(X0*6+11,1)="2" THEN GOTO 2020
2040 ON X0 GOTO 2100,2150,2400,2450,2200,2250,2300,2350,1800
2100 REM "Reverse in Fiscal Year Ending
2105 SEL_ML_REV_YEAR:
2110 A$(15+K9,4)=ML_REV_YEAR$
2120 IF POS(A$(15+K9,4)="0000    ",4)<>0 THEN A$(15+K9,6)="",ML_REV_YEAR$="",ML_REV_PER$="",ML_DESC5$="",REV_ACCTPD$=DIM(2)+"/",REFRESH_FLG=1; DROP_BOX LOAD ML_REV_PER.CTL,REV_ACCTPD$; X0=X0+1; RETURN ELSE FIND (Z[13],KEY=X3$(9,3)+"G/LYE"+A$(15+K9,4),DOM=*NEXT)P9$; PERFORM "ZZWLDB;REV_LOAD_ACCTPD"; IF ACCTPD.CTL'VALUE$<>ACCTPD$ THEN ACCTPD.CTL'VALUE$=ACCTPD$; END_IF ; NEXT_ID=ML_REV_PER.CTL; GOTO *RETURN ! SSP250918 jdf
2130 ML_REV_YEAR$="",A$(15+K9,6)="",NEXT_ID=ML_REV_YEAR.CTL
2140 RETURN 
2145 SEL_REV_PER:
2150 IF STP(A$(15+K9,4),3)="" THEN ML_REV_YEAR$="",ML_REV_PER$="",ML_DESC5$="",A$(15+K9,6)="",REFRESH_FLG=1; RETURN 
2160 NEXT_ID=ML_REV_PER.CTL,REFRESH_FLG=1,ML_REV_PER$=STR(NUM(ML_REV_PER$):"00",ERR=*NEXT),A$(19+K9,2)=ML_REV_PER$; GOTO 2165
2162 ML_REV_PER$=""; RETURN 
2165 IF NUM(A$(19+K9,2))=0 THEN A$(15+K9,4)="",ML_REV_YEAR$="",ML_REV_PER$="",REFRESH_FLG=1,C0=-2; GOTO *RETURN
2170 IF A$(19+K9,2)<"01" OR A$(19+K9,2)>P9$(13,2) THEN ML_REV_PER$=""; GOTO *RETURN
2172 IF ABS(C0)=2 THEN X0=X0-2; GOTO 2020
2188 GOSUB 7750
2190 REFRESH_FLG=1,NEXT_ID=ML_TRANS_DATE.CTL; RETURN 
2200 REM "Description - Line 1
2205 SEL_LINE1:
2210 A$(21+K9,45)=ML_DESC_LINE1$
2240 RETURN 
2250 REM "Description - Line 2
2255 SEL_LINE2:
2260 A$(66+K9,45)=ML_DESC_LINE2$
2290 RETURN 
2300 REM "Description - Line 3
2302 SEL_LINE3:
2310 A$(111+K9,45)=ML_DESC_LINE3$
2315 IF P0$(40,1)+P0$(180,1)="CY" THEN NEXT_ID=METHODS_TO_UPDATE.CTL,REFRESH_FLG=1; GOTO *RETURN
2318 GOSUB CHECK_FIELDS; IF NO_NEXT THEN GOTO *RETURN
2320 NEXT_FOLDER=FLDR.GLGJAA.2.CTL,REFRESH_FLG=1
2340 RETURN 
2350 REM "If Cash basis w/ Accrual Option
2352 IF P0$(40,1)+P0$(180,1)<>"CY" THEN GOTO 2020
2355 X$="To update both methods, enter 'CA'"
2356 SEL_MTD:
2357 IF METHODS_TO_DATE$="B" THEN A$(156,2)="CA" ELSE A$(156,2)=METHODS_TO_UPDATE$
2365 GOSUB CHECK_FIELDS; IF NO_NEXT THEN GOTO *RETURN
2370 NEXT_FOLDER=FLDR.GLGJAA.2.CTL,REFRESH_FLG=1
2375 BT_C=EVN("BT_"+METHODS_TO_UPDATE$+".CTL"),BT_C'TEXTCOLOR$="Light Blue"
2390 RETURN 
2400 REM "Trans date
2405 IF C0<>2 THEN GOTO 2020
2408 SEL_TRANS_DATE:
2410 A$(160+K9,6)=ML_TRANS_DATE$
2440 RETURN 
2450 V8=POS("Y"=A$(166+K9,1))
2455 IF C0<>2 THEN GOTO 2020
2456 SEL_MEMO: A$(166,1)=CB_MEMO$,REFRESH_FLG=1
2490 RETURN 
5900 REM "REMOVE LINES
5910 IF A0=0 THEN A0=DEC(MID(Y$,1,2))
5911 IF A0=0 THEN GOTO 5990
5920 EXTRACT (F,IND=0,ERR=5960)IOL=0290
5922 IF Y(4)=-1 THEN Y(4)=0
5925 IF Y[4]=-1 THEN READ (F,IND=0); WAIT 0; GOTO 5920 ELSE Y[4]=-2; WRITE (F,IND=0)IOL=0290
5930 A1=Y[1],Y[1]=A0,Y[0]=Y[0]-1
5935 READ (F,IND=A0)A; IF A>0 THEN Y[0]=Y[0]-1,A0=A; GOTO 5935
5940 WRITE (F,IND=A0)A1
5950 Y[4]=-1; WRITE (F,IND=0)IOL=0290
5955 GOTO 5990
5960 IF ERR=0 THEN RETRY ELSE GOTO 9000
5990 RETURN 
6000 IF P0$(40,1)="C" THEN IF P0$(180,1)="Y" THEN CALL "*WINGRP;SHOW",MTD.GRP$
6190 RETURN 
6215 GOSUB 6450
6220 ML_REV_YEAR$=A$(15+K9,4),ML_REV_PER$=A$(19+K9,2)
6225 ML_TRANS_DATE$=A$(160+K9,6),CB_MEMO$=A$(166+K9,1),REFRESH_FLG=1
6230 ML_DESC_LINE1$=A$(21+K9,45),ML_DESC_LINE2$=A$(66+K9,45),ML_DESC_LINE3$=A$(111+K9,45)
6240 IF A$(15+K9,4)<>"    " THEN GOSUB 7750 ELSE CALL "*WINGRP;DISABLE",FLDS5.GRP$; ML_DESC5$=""
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6410 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6460 GOSUB ASSIGN_LIB
6470 GOSUB 7700
6490 RETURN 
6500 REM "DELETE
6502 DEL_REC:
6505 GOSUB 5900
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 RETURN 
6600 REM "ALT KEY DATA READS
6605 FIND (Z[3],KEY=A$(1+K9,4),DOM=6606)IOL=0330
6610 FIND (Z[8],KEY=A$(7+K9,2),DOM=6611)IOL=0340
6690 RETURN 
6700 REM "ADD ENTRY
6702 WRT_REC:
6705 A[0]=A0; IF A0=0 THEN GOTO 6500
6710 WRITE (Z[1],KEY=A$(1,14))IOL=0310
6712 CHANGE_FLG=0
6715 RETURN 
6780 ON Z9 GOTO 7000,1630
6790 GOTO 1630
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 IF A1$="" THEN GOTO 6800 ELSE IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM "PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6870 GOTO 6895
6890 GOTO 1515
6895 PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=1140); GOTO 1140
7000 REM "RUN OVERLAY
7001 SEL_LINES:
7005 L0=1,F=Z[2],A0=A[0],V9=-4,V8=POS("Y"=A$(166+K9,1)),V7=1; DIM T[9]; V3=Z[3],V4=Z[4],V5=Z[5],V9$=A$(160+K9,6),ML_DESC2$=ML_SOURCE_JOUR$,ML_DESC3$=ML_JOUR_CODE$,REFRESH_FLG=1
7011 ! 
7020 PERFORM "GLGXAA"
7021 ! 
7025 CALL "*WINGRP;SHOW",FLDS1.GRP$
7028 IF V8<>0 THEN CALL "*WINGRP;SHOW",MEMO.GRP$
7029 GOSUB CHECK_MEMO
7030 NEXT_ID=GL_ACCT.CTL
7035 IF NUM(ML_LINE$)>1 AND STARTT=1 THEN STARTT=0,ML_LINE=NUM(ML_LINE$),NEXT_ID=LB_LINE.CTL; PERFORM "GLGXAA;CHECK_BALANCE"; ML_DESC1$=B_DESC$,GL_ACCT$=STP(B_GL$,3,"-"); LIST_BOX WRITE LB_LINE.CTL,NUM(ML_LINE$); IF STP(B_DEB$)="" THEN ML_AMOUNT=NUM(B_CRE$) ELSE ML_AMOUNT=NUM(B_DEB$)
7040 IF V8 THEN NEXT_ID=ML_MEMO1.CTL
7050 RETURN 
7100 REM "RE-DO SCREEN AND RUN 2ND OVERLAY
7104 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
7105 V0=0
7125 GOSUB 7700
7190 GOTO 7010
7300 REM 
7310 ON FPT(C0)*10 GOTO 7390,7325,7330,7390
7325 IF V8$="" THEN X0=X0+4; GOTO 7390 ELSE X0=NUM(V8$(POS(STR(X0:"00")<=V8$,2),2)); GOTO 7390
7330 IF V8$="" THEN X0=X0-6; GOTO 7335 ELSE X0=POS(STR(X0-1:"00")<=V8$,2)-2; IF X0<0 THEN X0=0; GOTO 7390 ELSE X0=NUM(V8$(X0,2)); GOTO 7390
7335 IF X0<0 THEN X0=0; GOTO 7390
7390 C0=3; RETURN 
7400 REM "Audit already run
7410 FIND (Z[1],KEY="",DOM=7490)V0$,K0$
7420 IF K0$>"" THEN MSGBOX MSG("GLGJAA_M1"),MSG("!WARNING"),"!",OPT$; CMD_STR$="E"; GOTO 9900
7430 EXTRACT (Z[1],KEY="",ERR=9800)
7440 Q$="Audit report "+V0$(22,4)+"."+V0$(26,2)+" has already been printed for this data entry."
7442 PRINT 'DIALOGUE'(5,5,80,27,MSG("GLGJAA")),'CS',
7445 CALL "ZZPROM","1",X3$,S2,Q$,"","",0; PRINT 'POP',
7450 REMOVE (Z[1],KEY="")
7490 RETURN 
7500 REM "CUSTOM PROGRAMMING ROUTINES
7610 FIND (Z[6],DOM=8010,KEY=X3$(9,3)+"G/L")P0$
7620 FIND (Z[6],DOM=8020,KEY=P0$(1,6)+"YE"+P0$(34,4))P1$
7640 A1$=P0$(34,6)
7699 RETURN 
7700 REM "PRINT P/E DATE"
7710 IF A$(5+K9,2)="  " THEN A$(5+K9,2)=CR_PD$
7720 ML_ENDING_DATE$=FND$(P1$(NUM(A$(5+K9,2))*6+15,6)),REFRESH_FLG=1,ML_ENDING_PERIOD$=ML_ENDING_DATE$
7725 IF A$(160+K9,1)=" " THEN A$(160+K9,6)=P1$(NUM(A$(5+K9,2))*6+15,6),ML_TRANS_DATE$=A$(160+K9,6),STDATE$=ML_TRANS_DATE$
7749 RETURN 
7750 ML_DESC5$=MSG("ENDING")+": "+FND$(P9$(NUM(A$(19+K9,2))*6+15,6))
7760 CALL "*WINGRP;ENABLE",FLDS5.GRP$
7799 RETURN 
7800 REM "GET G/L Z MASK
7810 CALL "ZZDISP","AX","000000000000","G/L",X3$,W2$,"",0,0,X4$
7815 M2=0; FOR X=1 TO LEN(W2$); M2=M2+POS("0"=W2$(X,1)); NEXT X
7820 CALL "ZZDISP","AX","000000000000","J/C",X3$,W3$,"",0,0,X4$
7825 M3=0; FOR X=1 TO LEN(W3$); M3=M3+POS("0"=W3$(X,1)); NEXT X
7830 CALL "ZZDISP","AX","000000000000","JCC",X3$,W4$,"",0,0,X4$
7835 M4=0; FOR X=1 TO LEN(W4$); M4=M4+POS("0"=W4$(X,1)); NEXT X
7840 RETURN 
8000 REM "FISCAL Y/E DATES
8010 CALL "GL2MPA",ERR=8070; GOTO 8040
8020 CALL "GL2MQA",ERR=8080
8040 RETRY 
8080 GOTO 9900
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9905 END_PROC:
9907 IF FOLDER_ID$="GLGJAA.2" THEN PERFORM "GLGXAA;CHECK_BALANCE"; IF ML_DEBIT<>ML_CREDIT AND FLAG_NO_MORE=0 THEN PROCESS "GLGJAA.3","../GLG/GL.EN",OPT$,ML_BAL$; IF OPT$="YES" THEN MSGBOX MSG("GLGJAA_02"),MSG("WARNING"),"YESNO",OPT$; END_IF ; IF OPT$<>"YES" THEN IGNORE_EXIT=1,REFRESH_FLG=1,CMD_STR$="",NEXT_ID=GL_ACCT.CTL; EXIT ! 240231
9908 IF CHANGE_FLG<>0 THEN GOSUB WRT_REC; CHANGE_FLG=0 ! SSP#267696
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 BEGIN ; SETESC 9350
9950 RUN "ZMENU"
9999 END 
12000 ! 12000 - Browsing mode
12010 ! - Next
12020 NEXT_REC:
12030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12040 _KEY$=KEY(Z(1),END=END_OF_FILE)
12045 IF A1$=_KEY$ THEN READ (Z(1)); GOTO 12040
12050 READ (Z(1),KEY=_KEY$,ERR=*NEXT); A$(1,6)=_KEY$(1,6),A1$=A$(1,6),ML_JOURNAL_CODE$=A1$; GOSUB PROCESS_REC; GOTO 1520
12060 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
12070 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
12080 _KEY$=KEN(Z(1),KEY=_KEY$,END=END_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); A$(1,6)=_KEY$(1,6),A1$=A$(1,6),ML_JOURNAL_CODE$=A1$; GOSUB PROCESS_REC; GOTO 1520
12090 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
12200 ! 12200 - Prior record
12210 PRIOR_REC:
12220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12230 _KEY$=KEP(Z(1),END=START_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=*NEXT); A$(1,6)=_KEY$(1,6),A1$=A$(1,6),ML_JOURNAL_CODE$=A1$; GOSUB PROCESS_REC; GOTO 1520
12240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
12250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
12260 _KEY$=KEP(Z(1),KEY=_KEY$,END=START_OF_FILE); READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); A$(1,6)=_KEY$(1,6),A1$=A$(1,6),ML_JOURNAL_CODE$=A1$; GOSUB PROCESS_REC; GOTO 1520
12270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
12400 ! 12400 - First record
12410 FIRST_REC:
12420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12430 _KEY$=KEF(Z(1),ERR=NO_FIRST); READ (Z(1),KEY=_KEY$)
12440 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_NXT); A$(1,6)=_KEY$(1,6),A1$=A$(1,6),ML_JOURNAL_CODE$=A1$; GOSUB PROCESS_REC; GOTO 1520
12450 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
12600 ! 12600 - Last record
12610 LAST_REC:
12620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12630 _KEY$=KEL(Z(1),ERR=NO_LAST)
12640 READ (Z(1),KEY=_KEY$,ERR=CHK_ERR_PRE); A$(1,6)=_KEY$(1,6),A1$=A$(1,6),ML_JOURNAL_CODE$=A1$; GOSUB PROCESS_REC; GOTO 1520
12650 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
12700 ! 12700,10
12710 BUSY_CHK:
12720 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
12730 IF _D$="NO" THEN EXIT 
12740 RETURN 
12800 CHECK_CHANGES:
12805 IF FOLDER_ID$="GLGJAA.2" AND FLAG_NO_MORE=0 THEN PERFORM "GLGXAA;CHECK_BALANCE"; IF ML_DEBIT<>ML_CREDIT AND FLAG_NO_MORE=0 THEN REFRESH_FLG=1,CMD_STR$="",NEXT_ID=GL_ACCT.CTL; EXIT ELSE PERFORM "GLGXAA;CHECK_RECORD" ! SSP 195548 ! SSP237719 jdf
12806 FLAG_NO_MORE=0
12810 IF LEN(STP(A$(1,14)))<>14 THEN GOTO *RETURN; REM IF CHANGE_FLG=0 THEN GOTO *RETURN ! SSP237638 jdf
12812 IF CHANGE_FLG<=2 AND _ORIG_A$=A$ THEN GOTO *RETURN ! SSP237638 jdf
12815 REM IF _ORIG_A$=A$ THEN GOTO *RETURN  ! SSP237638 jdf
12816 IF ID$="BT_DELETE" THEN CHANGE_FLG=0; RETURN ! SSP#283547
12820 IF ID$="BT_WRT" THEN GOSUB WRITE_REC; CHANGE_FLG=0; GOTO 12840 ELSE MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$ ! SSP237638 jdf
12830 IF _YESNO$="YES" THEN GOSUB WRITE_REC; CHANGE_FLG=0
12840 RETURN 
12900 ASSIGN_PRG:
12905 IF LEN(ACCTPD$)>2 THEN ACCTPD$=CUR_ACCTPD$
12910 A$(1+K9,4)=FY$,A$(5+K9,2)=ACCTPD$,A$(7+K9,2)=ML_SOURCE_JOUR$,A$(9+K9,6)=ML_JOUR_CODE$,A$(15+K9,4)=ML_REV_YEAR$,A$(19+K9,2)=ML_REV_PER$,A$(160+K9,6)=ML_TRANS_DATE$,A$(166+K9,1)=CB_MEMO$,A$(21+K9,45)=ML_DESC_LINE1$,A$(66+K9,45)=ML_DESC_LINE2$,A$(111+K9,45)=ML_DESC_LINE3$,A$(166+K9,1)=CB_MEMO$
12915 IF METHODS_TO_UPDATE$="B" THEN A$(156,2)="CA" ELSE A$(156,1)=METHODS_TO_UPDATE$
12920 RETURN 
13000 CLEAR_REC:
13005 IF ID$<>"BT_WRT" AND ID$<>"BT_EXIT" THEN GOSUB CHECK_CHANGES ! SSP237638 jdf
13010 ML_JOUR_CODE$="",ML_REV_YEAR$="",ML_REV_PER$="",ML_DESC5$="",ML_TRANS_DATE$=STDATE$,CB_MEMO$="N",ML_DESC_LINE1$="",ML_DESC_LINE2$="",ML_DESC_LINE3$="",NEXT_ID=START_FISCAL.CTL
13020 DIM A$(170+K9),A[4]; A0=0,A$(1,6)=FY$+ACCTPD$
13025 P1$=""; FIND (Z[13],KEY=X3$(9,3)+"G/LYE"+A$(1,4),DOM=*NEXT)P1$
13030 ML_TRANS_DATE$=P1$(NUM(A$(5+K9,2))*6+15,6)
13100 RETURN 
13110 DISABLE_FIELDS1:
13120 GOSUB CLEAR_REC; CALL "*WINGRP;DISABLE",BUTTONS.GRP$; CALL "*WINGRP;DISABLE",FIELDS.GRP$; CHANGE_FLG=0
13130 CALL "*WINGRP;HIDE",FLDS1.GRP$; CALL "*WINGRP;DISABLE",FLDS5.GRP$,ML_DESC5$=""
13132 DISABLE_FIELDS:
13135 CHANGES_FLG=0,NEXT_FOLDER=FLDR.GLGJAA.1.CTL,NEXT_ID=START_FISCAL.CTL,CHANGE_FLG=0,REFRESH_FLG=1
13138 CALL "*WINGRP;ENABLE",BT_YEAR.GRP$
13140 RETURN 
13448 GOSUB RES_BT
13449 BT_C'TEXTCOLOR$="Light Blue"
13500 PROCESS_REC:
13520 A$(1+K9,14)=_KEY$,A1$=_KEY$,D9$="",Y$="",CHANGE_FLG=0
13600 RETURN 
13700 ASSIGN_LIB:
13710 FY$=A$(1+K9,4),ACCTPD$=A$(5+K9,2),ML_SOURCE_JOUR$=A$(7+K9,2),ML_JOUR_CODE$=A$(9+K9,6)
13720 ML_REV_YEAR$=A$(15+K9,4),ML_REV_PER$=A$(19+K9,2),ML_TRANS_DATE$=A$(160+K9,6),CB_MEMO$=A$(166+K9,1)
13730 ML_DESC_LINE1$=A$(21+K9,45),ML_DESC_LINE2$=A$(66+K9,45),ML_DESC_LINE3$=A$(111+K9,45),CHANGE_FLG=0,REFRESH_FLG=1
13735 CALL "*WINGRP;ENABLE",FIELDS.GRP$
13738 IF A$(156,2)="CA" THEN METHODS_TO_UPDATE$="B" ELSE METHODS_TO_UPDATE$=A$(156,1)
13740 IF STP(METHODS_TO_UPDATE$)="" THEN METHODS_TO_UPDATE$="A"
13745 CHANGE_FLG=0
13746 GOSUB RES_BT; IF BT_C THEN BT_C'TEXTCOLOR$="Light BLue"
13747 BT_C=EVN("BT_"+METHODS_TO_UPDATE$+".CTL")
13750 RETURN 
14000 QRY_GL7:
14010 RESULT$=FY$
14020 PROCESS "QRY_GL7","../GLG/GL.EN",RESULT$
14030 IF RESULT$="" OR LEN(RESULT$)<>14 THEN NEXT_ID=START_FISCAL.CTL; RETURN 
14040 FY$=RESULT$(1,4),ACCTPD$=RESULT$(5,2),ML_SOURCE_JOUR$=RESULT$(7,2),ML_JOUR_CODE$=RESULT$(9,6),A1$=RESULT$
14050 REFRESH_FLG=1
14060 GOTO 1512 ! ssp 217406
14100 DELETE_REC:
14110 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
14120 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
14130 IF _X$<>"YES" THEN GOTO *RETURN
14140 GOSUB DEL_REC
14150 CHANGES_FLG=0,CHANGE_FLG=0,FLAG_NO_MORE=1 ! SSP 199639
14155 IF FOLDER_ID$="GLGJAA.1" THEN ML_JOUR_CODE$="",REFRESH_FLG=1,NEXT_ID=ML_JOUR_CODE.CTL; CALL "*WINGRP;DISABLE",BUTTONS.GRP$; EXIT ! SSP 199639
14160 GOSUB DISABLE_FIELDS1 ! SSP 199639
14190 RETURN ! SSP 199639
14200 WRITE_REC:
14201 IF BT_WRT.CTL'TEXT$="&Next" THEN NEXT_FOLDER=FLDR.GLGJAA.2.CTL,NEXT_ID=START_FISCAL.CTL,REFRESH_FLG=1; EXIT 
14203 IF FOLDER_ID$="GLGJAA.2" THEN PERFORM "GLGXAA;CHECK_BALANCE"; IF ML_DEBIT<>ML_CREDIT THEN PROCESS "GLGJAA.3","../GLG/GL.EN",OPT$,ML_BAL$ END_IF ; IF OPT$="YES" THEN MSGBOX MSG("GLGJAA_02"),MSG("WARNING"),"YESNO",OPT$; END_IF ; IF OPT$="NO" THEN REFRESH_FLG=1,CMD_STR$="",OPT$="",NEXT_ID=GL_ACCT.CTL; RETURN ELSE FLAG_NO_MORE=1,%FLAG_NO_MORE=1 ! 240231
14205 IF A0=0 AND Y$<>"" THEN A0=DEC(Y$(1,2))
14206 IF A0=0 THEN GOSUB 6500; GOTO 14240
14207 IF FOLDER_ID$="GLGJAA.2" AND OPT$="NO" THEN PERFORM "GLGXAA;CHECK_BAL_OUT"; IF ML_DEBIT<>ML_CREDIT AND OPT$="NO" THEN EXIT 
14210 GOSUB ASSIGN_PRG
14220 GOSUB WRT_REC; CHANGE_FLG=0
14230 GOSUB CLEAR_REC; GOSUB DISABLE_FIELDS
14235 NEXT_ID=ML_JOUR_CODE.CTL,REFRESH_FLG=1
14240 RETURN 
15000 CHECK_FIELDS: NO_NEXT=0,REFRESH_FLG=1
15010 IF STP(ML_SOURCE_JOUR$)="" THEN NO_NEXT=1,NEXT_ID=ML_SOURCE_JOUR.CTL; GOTO *RETURN
15020 IF STP(ML_JOUR_CODE$)="" THEN NO_NEXT=1,NEXT_ID=ML_JOUR_CODE.CTL; GOTO *RETURN
15030 IF STP(ML_TRANS_DATE$)="" THEN NO_NEXT=1,NEXT_ID=ML_TRANS_DATE.CTL; GOTO *RETURN
15040 IF STP(METHODS_TO_UPDATE$)="" THEN NO_EXIT=1,NEXT_ID=METHODS_TO_UPDATE.CTL,METHODS_TO_DATE$="A"; GOTO *RETURN
15999 RETURN 
21000 CHECK_MEMO: X=LB_LINE.CTL
21010 IF ORIG_FMT$="" THEN ORIG_FMT$=X'FMT$
21020 IF CB_MEMO$="Y" THEN X'FMT$=ORIG_FMT$ ELSE X'FMT$=ORIG_FMT$(1,POS("["=ORIG_FMT$,-1)-1)
21030 RETURN 
28000 HARD_COPY:
28010 PRINT 'DIALOGUE'(20,15,60,8,"Enter Comment"),'CS'
28020 ! 
28022 BUTTON 101,@(42,5,10,1.75)="&Next"
28025 PRINT 'TEXT'(55,60,1000,100,"Comment/Title:"); MULTI_LINE 100,@(15,1,40,1); SET_FOCUS 100; OBTAIN *; MULTI_LINE READ 100,TF_COMMENT$
28030 PRINT 'POP',
28034 IF CTL=4 THEN GOTO *RETURN
28035 CH_PR=HFN; OPEN (CH_PR,ERR=*RETURN)"*windev*" ! CH_PR=0; CALL "*pr.opn",CH_PR,0
28040 IF CH_PR=0 THEN GOTO *RETURN
28045 IF LEN(ACCTPD$)>2 THEN ACCTPD$=CUR_ACCTPD$
28050 TF_NAME$=STP(X3$(86,40)),TIL$=%GLGJAA$; DIM BAL_T$[3]; BAL_T$[1]="ACCRUAL",BAL_T$[2]="CASH_BASIS",BAL_T$[3]="BOTH",OP=POS(METHODS_TO_UPDATE$="ACB"),BAL_T$=BAL_T$[OP],BAL_T$=MSG(BAL_T$)
28055 PRINT (CH_PR)@(0),"Date/Time:",DTE(0:"%Mz/%Dz/%Yl %hz:%mz %p")
28057 PRINT (CH_PR)@(0)," Terminal:",FID(0)
28058 PRINT (CH_PR)@(0),"  User ID:",WHO,'LF','LF'
28059 IF TF_COMMENT$<>"" THEN PRINT (CH_PR)@(INT((80-LEN(TF_COMMENT$))/2)),TF_COMMENT$,'LF','LF'
28060 PRINT (CH_PR)"  Program: GLGJAA",@(INT((80-LEN(TF_NAME$))/2)),TF_NAME$
28070 PRINT (CH_PR)@(INT((80-LEN(TIL$))/2)),TIL$
28080 PRINT (CH_PR)PAD(RAY$,80,"-")
28090 FY_MSG$=MSG("FY_ENDING")+":"; PRINT (CH_PR)@(23-LEN(FY_MSG$)),FY_MSG$," ",FY$,@(30),MSG("ACCT_PERS")+":",ACCTPD$," - ",MSG("ENDING")+":",ML_ENDING_PERIOD$
28100 SO_J$=MSG("SRC_JRNL")+":"; PRINT (CH_PR)@(23-LEN(SO_J$)),SO_J$," ",ML_SOURCE_JOUR$," ",STP(ML_SRC_JRNL_DESC$),@(51),MSG("REF")+":",ML_JOUR_CODE$
28110 SO_J$=MSG("REVE_I_F")+":"; PRINT (CH_PR)@(0),SO_J$," ",ML_REV_YEAR$,@(54),MSG("PERIOD")+":",ML_REV_PER$," ",ML_DESC5$
28130 SO_J$=MSG("MEMO_F_B_L")+":"; PRINT (CH_PR)@(23-LEN(SO_J$)),SO_J$," ",; IF CB_MEMO$="Y" THEN PRINT (CH_PR)"Yes" ELSE PRINT (CH_PR)"No"
28135 SO_J$=MSG("DESC")+":"; PRINT (CH_PR)@(23-LEN(SO_J$)),SO_J$,
28142 FOR FF=1 TO 3; IF STP(EVS("ML_DESC_LINE"+STR(FF)+"$"))<>"" THEN PRINT (CH_PR)@(23),EVS("ML_DESC_LINE"+STR(FF)+"$") END_IF ; NEXT FF
28145 IF P0$(40,1)+P0$(180,1)="CY" THEN PRINT (CH_PR)@(0),MSG("MTD_U")+"?"," ",BAL_T$
28150 PRINT (CH_PR)PAD("",80,"-")
28155 PRINT (CH_PR)MSG("LINE"),@(5),MSG("ACCT"),@(15),MSG("DESC"),"/",MSG("MEMO"),@(59),MSG("DEBIT"),@(74),MSG("CREDIT")
28158 PRINT (CH_PR)PAD("",80,"-")
30000 READ_LINES:
30005 ML_DEBIT=0,ML_CREDIT=0
30010 FOR COUNT=1 TO 9999
30020 LIST_BOX FIND LB_LINE.CTL,COUNT,LN$,ERR=LBL_1
30030 LN$=LN$+SEP+" "
30040 B_LINE=NUM(LN$(1,POS(SEP=LN$)-1)),LN$=LN$(POS(SEP=LN$)+1)
30050 B_GL$=LN$(1,POS(SEP=LN$)-1),LN$=LN$(POS(SEP=LN$)+1)
30060 B_DESC$=LN$(1,POS(SEP=LN$)-1),LN$=LN$(POS(SEP=LN$)+1)
30070 B_DEB$=LN$(1,POS(SEP=LN$)-1),LN$=LN$(POS(SEP=LN$)+1)
30080 B_CRE$=LN$(1,POS(SEP=LN$)-1),LN$=LN$(POS(SEP=LN$)+1)
30090 B_MEMO$=LN$(1,POS(SEP=LN$)-1),LN$=LN$(POS(SEP=LN$)+1)
30100 ML_DEBIT=ML_DEBIT+NUM(B_DEB$),ML_CREDIT=ML_CREDIT+NUM(B_CRE$)
30105 PRINT (CH_PR)@(1),B_LINE:"##0",@(5),B_GL$," ",B_DESC$,
30106 IF NUM(B_DEB$) THEN PRINT (CH_PR)@(50),NUM(B_DEB$):"###,###,###.00" ELSE PRINT (CH_PR)@(66),NUM(B_CRE$):"###,###,###.00"
30108 IF STP(B_MEMO$)<>"" THEN PRINT (CH_PR)@(6+LEN(B_GL$)),B_MEMO$
30110 NEXT COUNT
30130 LBL_1:
30135 PRINT (CH_PR)@(50),PAD("",14,"-"),@(66),PAD("",14,"-")
30138 PRINT (CH_PR)@(50),ML_DEBIT:"###,###,###.00",@(66),ML_CREDIT:"###,###,###.00"
30139 PRINT (CH_PR)@(50),PAD("",14,"="),@(66),PAD("",14,"=")
30140 PRINT (CH_PR)'FF'
30150 CLOSE (CH_PR)
30160 SETERR 30161; RETURN 
30161 EXIT 
31000 ABORT:
31010 IF FOLDER_ID$="GLGJAA.2" THEN PERFORM "GLGXAA;CHECK_BALANCE"; IF ML_DEBIT<>ML_CREDIT THEN PROCESS "GLGJAA.3","../GLG/GL.EN",OPT$,ML_BAL$; IF OPT$="YES" THEN MSGBOX MSG("GLGJAA_02"),MSG("WARNING"),"YESNO",OPT$; END_IF ; IF OPT$<>"YES" THEN IGNORE_EXIT=1,REFRESH_FLG=1,CMD_STR$="",NEXT_ID=GL_ACCT.CTL; RETURN ! 240231
31030 RETURN 
56000 ! "199639-Program GLGRDS, when you delete a general ledger journal    
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56004 REM "195548-GL-Journal Entries.  It is possible to create Out of Balance
56006 REM "217406-Need to test G/L  journal entries.  When have out of balance
56007 REM "232716-Issue calling back up a GL entry.                           
56008 REM "237719-AP invoices showing out of balance when you get to the GL   
56009 REM "240231-Allow update out of balance GL entries in GLGJAA
56010 REM "267696-Program: GLGJAA Journal Entry disappears when making a      
56011 REM "275633-Get Invalid Source Journal when you change the period, then 
56012 REM "283547-Program: GLGJAA General Ledger Journal Entry. Issue with the
60000 IF FOLDER_ID$="GLGJAA.2" THEN PERFORM "GLGXAA;CHECK_BALANCE"; IF ML_DEBIT<>ML_CREDIT THEN MSGBOX ML_BAL$,MSG("WARNING"),"?,YESNO",OPT$ END_IF ; IF OPT$="NO" THEN REFRESH_FLG=1,CMD_STR$="",NEXT_ID=GL_ACCT.CTL; RETURN ELSE FLAG_NO_MORE=1
60100 RES_BT:
60110 FOR DD=65 TO 67
60120 BTC=EVN("BT_"+CHR(DD)+".CTL")
60125 IF BTC=0 THEN CONTINUE
60130 BTC'TEXTCOLOR$="DEFAULT",BTC'HEIGHT=22,TXT$=BTC'TEXT$,XX=POS("}"=TXT$); IF XX<>0 THEN BTC'TEXT$=TXT$(XX+1)
60140 NEXT DD
60150 BTC=EVN("BT_"+METHODS_TO_UPDATE$+".CTL")
60160 IF BTC THEN BTC'TEXTCOLOR$="Light Blue",BTC'HEIGHT=40,TXT$=BTC'TEXT$,BTC'TEXT$="{!Arrow_Right}"+TXT$
60170 RETURN 
