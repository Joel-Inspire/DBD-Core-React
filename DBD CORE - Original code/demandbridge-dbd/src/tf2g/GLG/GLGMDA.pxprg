0010 ! GLGMDA - G/L Statistical Data Inquiry
0035 REM "5.7 - 02/06/14 - 9.041388 - tma - SSP# 268342
0037 REM "268342-Inventory Transaction entry - selection of fiscal year      
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 ! 
0093 PNL_INVOKE:
0095 PROCESS "GLGMDA","../GLG/GL.EN"
0097 EXIT 
0100 ! 100 - Initialization
0110 INIT:
0115 ADDR "BORDERLESS"
0120 PERFORM "GLGMAA;SETUP_LIBRARY"; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$ ! SSP 197404
0150 _FILE_NAME$="GL3"+%C$
0165 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0170 _FIL_NO=HFN; OPEN (_FIL_NO,IOL=*,ERR=OPEN_ERR)_FILE_NAME$
0172 _GL3=HFN; OPEN (_GL3,IOL=*,REC=GL3$,ERR=OPEN_ERR)_FILE_NAME$
0185 _FILE_NAME$="ZZPARM",_ZZPARM=HFN; OPEN (_ZZPARM,ERR=OPEN_ERR)"ZZPARM"; GOSUB CHECK_SECURITY; FIND (_ZZPARM,KEY=%C$+"G/L",DOM=*NEXT)%GL_ACCT$; %GL_ACCT$=%GL_ACCT$(41,108),VV$=%GL_ACCT$(1,12),%GL_ACCT$=%GL_ACCT$(13),%GL_ACCT$=%GL_ACCT$(1,36)+VV$+%GL_ACCT$(37)
0187 _FILE_NAME$="GL1"+%C$,_GL1=HFN; OPEN (_GL1,ERR=OPEN_ERR)"GL1"+%C$
0190 _FILE_NAME$="GL6"+%C$,_GL6=HFN; OPEN (_GL6,ERR=OPEN_ERR)"GL6"+%C$; GOSUB CHECK_GL6
0198 CHANGE_FLG=0
0199 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0535 GOSUB PROCESS_OPTION ! GET DETAILS AND LOAD LIST BOX
0540 ! IF POS("Cash Basis"=F9$)<>0 THEN RADIO_BUTTON SHOW OPTION.CTL:3
0550 ! IF POS("Cash Budget"=F9$)<>0 THEN RADIO_BUTTON SHOW OPTION.CTL:4
0560 IF FF0$(40,1)="C" THEN CALL "*WINGRP;SHOW",NOCASH.GRP$
0600 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0945 IF _GL1 THEN CLOSE (_GL1); _GL1=0
0946 IF _GL6 THEN CLOSE (_GL6); _GL6=0
0947 IF _ZZPARM<>0 THEN CLOSE (_ZZPARM); _ZZPARM=0
0948 DROP "BORDERLESS"
0970 RETURN 
1000 WRITE_REC:
1010 GOSUB ASSIGN_PRG
1020 WRITE (_FIL_NO,KEY=AMT_TBL$[1])AMT_TBL${ALL}
1040 NEXT_ID=GL_ACCT.CTL
1099 RETURN 
6500 DELETE_REC:
6501 ! IF SEC$(63,1)="N" THEN MSGBOX MSG("NO_DEL"),MSG("WARNING"),"!"; GOTO *RETURN
6502 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
6505 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",_X$
6508 IF _X$<>"YES" THEN RETURN 
6510 REMOVE (_FIL_NO,KEY=GL_ACCT$+FY$+OPTION$,DOM=*NEXT)
6567 CHANGE_FLG=0
6590 NEXT_ID=GL_ACCT.CTL
6595 RETURN 
9999 END 
10000 ! 10000 - Select Account
10005 SEL_ACCT:
10008 IF _EOM$=$00$ AND QRY_VAL$="" THEN RETURN ! SSP 200714 SSP 202640
10009 ! IF QRY_VAL$<>"" THEN GL_ACCT$=QRY_VAL$ ! SSP 202640 217528
10010 GL_ACCT$=STP(GL_ACCT$,3,"-"); FIND (_GL1,KEY=GL_ACCT$,DOM=NO_FOUNDED)_GL1$ ! SSP#216712
10020 GL_DESC$=_GL1$(13,35)
10030 REFRESH_FLG=1,CHANGE_FLG=0,NEXT_ID=BT_OPTION_A.CTL
10040 RETURN 
10050 NO_FOUNDED: CHANGE_FLG=0; RETURN 
10100 ! Check for Security
10110 CHECK_SECURITY:
10115 FIND (_ZZPARM,KEY=FID(0)+"      ")X3$,*,X4$
10120 DIM SEC$(256); FIND (_ZZPARM,KEY="osec"+X3$(40,3),DOM=*NEXT)SEC$
10130 FIND (_ZZPARM,KEY=X3$(9,3)+"G/L",DOM=NO_REC)FF0$
10140 Q$=FF0$(1,3); IF FF0$(10,1)="N" THEN Q$=FF0$(7,3)
10150 READ (_ZZPARM,KEY="STATG/L")F9$,F0
10152 FOR XX=0 TO 9; F1$=F1$+F9$(49+XX*17,5),F2$=F2$+F9$(54+XX*17,12); NEXT XX
10155 FIND (_ZZPARM,KEY="PATH"+%X3_OP_ID$,ERR=NO_PATH)EXCEL$,WORDPAD$ ! SSP 200827
10160 FOR XX=0 TO 9
10165 IF F9$(XX*5+2,1)="Y" THEN F3$=F3$+F9$(X*5+1,1)
10170 NEXT XX
10190 RETURN 
10199 NO_REC: CMD_STR$="END"; RETURN 
12000 ! 12000 - Browsing mode
12010 ! - Next
12020 NEXT_REC:
12030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12035 IF STP(_KEY$)="" THEN _KEY$=PAD(GL_ACCT$,12)+CR_YEAR$; READ (_FIL_NO,KEY=_KEY$,DOM=*NEXT)
12040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE); IF MID(_KEY$,13,4)<>CR_YEAR$ THEN READ (_FIL_NO,ERR=CHK_ERR_NXT); GOTO 12040 ELSE GOTO 12050
12050 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOTO PROCESS_REC
12060 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
12070 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
12080 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); IF _KEY$(13,4)<>CR_YEAR$ THEN READ (_FIL_NO,ERR=CHK_ERR_NXT); GOTO 12080 ELSE READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOTO PROCESS_REC
12090 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
12200 ! 12200 - Prior record
12210 PRIOR_REC:
12220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); IF MID(_KEY$,13,4)<>CR_YEAR$ THEN READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOTO 12230 ELSE READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOTO PROCESS_REC
12240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
12250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
12260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOTO PROCESS_REC
12270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
12400 ! 12400 - First record
12410 FIRST_REC:
12420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST); READ (_FIL_NO,KEY=_KEY$)
12432 IF MID(_KEY$,13,4)<>CR_YEAR$ THEN _KEY$=KEY(_FIL_NO,ERR=NO_FIRST); READ (_FIL_NO,ERR=CHK_ERR_NXT); GOTO 12432
12440 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOTO PROCESS_REC
12450 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
12600 ! 12600 - Last record
12610 LAST_REC:
12620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
12630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
12636 IF _KEY$(13,4)=CR_YEAR$ THEN GOTO 12640
12638 _KEY$=KEP(_FIL_NO,ERR=NO_LAST); IF _KEY$(13,4)<>CR_YEAR$ THEN READ (_FIL_NO,ERR=NO_LAST); GOTO 12637
12640 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOTO PROCESS_REC
12650 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
12700 ! 12700,10
12710 BUSY_CHK:
12720 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
12730 IF _D$="NO" THEN EXIT 
12740 RETURN 
12800 PROCESS_REC:
12810 GL_ACCT$=_KEY$(1,12),START_FISCAL$=_KEY$(13,4),OPTION$=_KEY$(17,1)
12820 GOTO PROCESS_OPTION
13000 SELECT_GRAF:
13010 DIM GRA$[8]; GRA$[1]="AREA",GRA$[2]="BAR",GRA$[3]="COLUMN",GRA$[4]="LINE",GRA$[5]="PIE",GRA$[6]="RIBBON",GRA$[7]="SCATTER",GRA$[8]="STACK"
13030 GRAF$=GRA$[NUM(LB_GRAP$)]
13034 IF GRAF$="PIE" THEN BB$=VAL1$ ELSE BB$=VAR$
13040 IF CB_3D$="0" THEN EFECT$="2D" ELSE EFECT$="3D"
13045 IF CB_3D$="0" THEN CHART_1.CTL'TITLE2$=ARG_2$,CHART_1.CTL'TITLE1$="" ELSE CHART_1.CTL'TITLE1$=ARG_2$,CHART_1.CTL'TITLE2$=""
13050 AA=EVN("CHART_1.CTL"),FOREGROUND.CTL'TEXTCOLOR$=COLORS$,BACKGROUND.CTL'TEXTCOLOR$=BACKCOLOR$; IF FONT$<>"" THEN REFRESH_FLG=1,AA'FONT$=FONT$,FONTD$="Font:",FONTD.CTL'FONT$=FONT$ ! ,COLORS.CTL'TEXTCOLOR$=COLORS$,COLORS.CTL'BACKCOLOR$=BACKCOLOR$,BACKCOLOR.CTL'TEXTCOLOR$=COLORS$,BACKCOLOR.CTL'BACKCOLOR$=BACKCOLOR$
13051 CHART HIDE AA
13052 IF B_GRAF$="PIE" THEN CHART DELETE AA
13055 ! AA'FMT$=EFECT$+GRAF$,AA'TEXTCOLOR$=COLORS$,AA'BACKCOLOR$=BACKCOLOR$
13060 CHART LOAD CHART_1.CTL,BB$
13065 AA'FMT$=EFECT$+GRAF$,AA'TEXTCOLOR$=COLORS$,AA'BACKCOLOR$=BACKCOLOR$,REFRESH_FLG=1,AA'POINTTEXT$=VAR2$,AA'LEGENDLOCATION$="TOPRIGHT"
13066 IF CB_3D$="0" THEN CHART_1.CTL'TITLE2$=ARG_2$,CHART_1.CTL'TITLE1$="" ELSE CHART_1.CTL'TITLE1$=ARG_2$,CHART_1.CTL'TITLE2$=""
13067 IF FOOTER$<>"" THEN AA'FOOTER$=FOOTER$
13070 ! IF GRAF$="PIE" THEN AA'FONT$="Arial Narrow,-10"
13074 IF %COMPARE THEN CHART_1.CTL'LEGENDLOCATION$="Right"
13075 CHART SHOW AA
13076 IF CB_3D$="0" AND ARG_5$<>"" THEN AA'TITLE2$=ARG_2$+"      "+ARG_5$,AA'XAXISTITLE$="",XAXISTITLE$="" ELSE AA'XAXISTITLE$=ARG_5$,XAXISTITLE$=ARG_5$
13078 IF XAXISLOCATION$<>"" THEN AA'XAXISLOCATION$=XAXISLOCATION$
13079 IF XAXISTITLE$<>"" THEN AA'XAXISTITLE$=XAXISTITLE$
13080 B_GRAF$=GRAF$
13095 RETURN 
13100 ! Check for records on GL6
13105 CHECK_GL6:
13110 NUM_REC$=FN%FIN$(_GL6,"NUMREC"); IF NUM(NUM_REC$)=0 THEN RETURN 
13120 MSGBOX MSG("GL6_MSG"),"!Warning","!,OK,CANCEL",OP$
13125 IF OP$="CANCEL" THEN CMD_STR$="END",REFRSH_FLG=1
13130 RETURN 
13500 ASSIGN_PRG:
13505 DIM AMT_TBL$[1:15] ! SSP227439 jdf
13510 FOR I=1 TO 13
13520 EXECUTE "AMT_TBL$[I+2]=STR(ML_CURR_PER"+STR(I)+")"
13530 NEXT I
13540 AMT_TBL$[1]=GL_ACCT$+FY$+OPTION$,AMT_TBL$[2]=STR(ML_BAL_FORW)
13550 RETURN 
13600 CHECK_CHANGES:
13605 IF CHANGE_FLG=0 THEN GOTO *RETURN
13607 GOSUB VALID_KEY ! SSP227439 jdf
13608 IF INVALID_KEY THEN GOTO 13640 ! SSP227439 jdf
13610 MSGBOX _MSG_REC_ALTERD$,_MSG_UPDATE$,"?,Yesno",_YESNO$
13620 IF _YESNO$="YES" THEN GOSUB ASSIGN_PRG; CHANGE_FLG=0; GOSUB WRITE_REC
13630 CHANGE_FLG=0,NEXT_ID=BUTTON_3.CTL
13640 RETURN 
14000 BUDGET:
14010 MSGBOX MSG("BUDGET_AMT"),"","?,YesNo",OP$
14020 IF OP$="NO" THEN GOTO *RETURN
14030 FOR I=2 TO %PER_LEN; EXECUTE "ML_CURR_PER"+STR(I)+"=ML_CURR_PER1"; NEXT I ! SSP#254108
14040 GOSUB GEN_YTD
14050 REFRESH_FLG=1
14060 RETURN 
14100 PRT_SCR:
14110 IF TCB(88) THEN CALL "*conv.tbd/tf_control" ELSE CALL "ZZGSCR",X3$,X4$ ! <plh>
15118 SYSTEM_HELP "excel.exe"; GOTO 34140
21000 ! 21000 - Read and load line details
21010 PROCESS_OPTION:GOSUB CHECK_OPTION
21013 LIST_BOX LOAD DETAILS.CTL,"",ERR=*NEXT
21014 FY$=START_FISCAL$; IF LEN(FY$)>4 THEN FY$=CR_YEAR$,START_FISCAL$=CR_YEAR$ END_IF ; REFRESH_FLG=1; GOSUB CLEAR_REC_AMT
21015 GL_ACCT$=STP(GL_ACCT$,3,"-"); READ (_FIL_NO,KEY=GL_ACCT$+FY$+OPTION$,DOM=NEW_RECORD) ! SSP#216712
21020 READ (_ZZPARM,KEY=%C$+"G/LYE"+FY$,DOM=*NEXT)GL_DATES$; %PER_LEN=NUM(GL_DATES$(13,2))
21030 DIM AMT_TBL$[1:15]; YEAR_TO_DATE=0
21031 READ DATA FROM REC(IOL(_FIL_NO)) TO AMT_TBL${ALL}
21050 GOSUB LOAD_LINE_DETAILS
21055 IF GL_DATES$(13,2)<>"13" THEN CALL "*WINGRP;HIDE",FLD13.GRP$
21057 NEXT_ID=BUTTON_9.CTL
21060 RETURN 
21070 NEW_RECORD:
21072 IF NUM(GL_ACCT$,ERR=*RETURN)=0 AND GL_DESC$="" THEN RETURN 
21075 IF F1$(POS(OPTION$=F1$)+1,1)="N" THEN CALL "*WINGRP;HIDE",FLDS.GRP$; CALL "*WINGRP;HIDE",FLDS2.GRP$; CALL "*WINGRP;DISABLE",BUTT2.GRP$; OPTIONS$="R",REST=0,NEXT_ID=EVN(ID$+".CTL"); MSGBOX MSG("NODATA_AVA"),MSG("WARNING"),"!,OK,TIM=5",OPT$; RETURN 
21080 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
21085 _R_KEY$=GL_ACCT$+FY$+OPTION$
21087 GOSUB VALID_KEY ! SSP227439 jdf
21088 IF INVALID_KEY THEN EXIT ! SSP227439 jdf
21090 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",_YESNO$
21100 IF _YESNO$="NO" THEN NEXT_ID=GL_ACCT.CTL; EXIT 
21105 IF STP(GL_DATES$)="" THEN READ (_ZZPARM,KEY=%C$+"G/LYE"+FY$,DOM=*NEXT)GL_DATES$; %PER_LEN=NUM(GL_DATES$(13,2))
21110 FOR XX=1 TO NUM(GL_DATES$(13,2)); EXECUTE "ML_CUR_PER"+STR(XX)+"=0,YTD_BAL"+STR(XX)+"=0,ML_DATE"+STR(XX)+"$=CUR_DATE$[XX]"; NEXT XX
21120 ML_BAL_FORW=0,NEXT_ID=ML_BAL_FORW.CTL
21130 CALL "*WINGRP;SHOW",FLDS.GRP$; CALL "*WINGRP;SHOW",FLDS2.GRP$; CALL "*WINGRP;UNLOCK",FLDS.GRP$; CALL "*WINGRP;ENABLE",BUTT2.GRP$
21140 OPTIONS$="R",REST=1; GOSUB BORDERLESS
21150 IF GL_DATES$(13,2)<>"13" THEN CALL "*WINGRP;HIDE",FLD13.GRP$
21160 CALL "*WINGRP;UNLOCK",FLDS.GRP$; CALL "*WINGRP;ENABLE",BUTT2.GRP$; CALL "*WINGRP;ENABLE",BUTTON.GRP$; CALL "*WINGRP;ENABLE",FLDS.GRP$
21170 DIM AMT_TBL$[1:15]; YEAR_TO_DATE=0
21480 RETURN 
21499 ! 
21500 GL_ACCT_FOCUS:
21505 IF CHANGE_FLG THEN GOSUB CHECK_CHANGES
21510 CALL "*WINGRP;HIDE",FLDS.GRP$; CALL "*WINGRP;HIDE",FLDS2.GRP$; CALL "*WINGRP;DISABLE",BUTTON.GRP$; CALL "*WINGRP;DISABLE",BUTT2.GRP$
21520 GOSUB CLEAR_REC
21525 CHANGE_FLG=0,NEXT_ID=GL_ACCT.CTL,CHANGE_FLG=0,REFRESH_FLG=1
21530 RETURN 
21830 GOTO PROCESS_OPTION
22000 ! 22000 - Clear Record
22010 CLEAR_REC:
22020 GL_ACCT$="",GL_DESC$="",REFRESH_FLG=1
22025 CLEAR_REC_AMT:
22030 FOR COUNT=1 TO 13
22040 EXECUTE "ML_CURR_PER"+STR(COUNT)+"=0,ML_DATE"+STR(COUNT)+"$=BB$,YTD_BAL"+STR(COUNT)+"=0"
22050 NEXT COUNT
22055 ML_BAL_FORW=0,CHANGE_FLG=0
22060 RETURN 
23000 ! 23000 - Load Fiscal year
23010 LOAD_FISCAL_YEAR:
23020 ZZPARM=HFN
23030 OPEN (ZZPARM)"ZZPARM"; IF X3$="" THEN READ (ZZPARM,KEY=FID(0)+"      ")X3$,*,X4$
23032 DIM OSEC$(255); READ (ZZPARM,KEY="osec"+X3$(40,3),DOM=*NEXT)OSEC$ ! SSP#268342        
23035 READ (ZZPARM,KEY=%C$+"G/L",DOM=*NEXT)GL_REC$; CR_YEAR$=GL_REC$(34,4),CR_PD$=GL_REC$(38,2),GL_PARM$=GL_REC$ ! ssp#268342
23037 READ (ZZPARM,KEY=%C$+"G/LYE"+CR_YEAR$,ERR=*NEXT)RR$; PER_LEN=NUM(RR$(13,2)),RR$=""
23040 KE$=%C$+"G/LYE",START_FISCAL$="",START_ACCTPD$=""
23050 READ (ZZPARM,KEY=KE$,DOM=*NEXT)
23060 K$=KEY(ZZPARM,END=23100); READ (ZZPARM)GL_REC$
23070 IF LEN(K$)<8 OR KE$<>K$(1,8) THEN GOTO END_LOAD_FISCAL_YEAR
23072 IF GL_PARM$(256,1)="Y" AND OSEC$(58,1)<>"Y" AND K$(9,4)<GL_PARM$(34,4) THEN GOTO 23060 ! SSP#268342
23075 IF ONLY_OPEN$<>"" AND POS(GL_REC$(99,1)="CR")<>0 THEN GOTO 23060
23080 START_FISCAL$=START_FISCAL$+K$(9)+"/"
23090 GOTO 23060
23100 END_LOAD_FISCAL_YEAR:
23101 IF GLGJRA THEN START_FISCAL$="    /"+START_FISCAL$,START_ACCTPD$="  /"+START_ACCTPD$
23105 DROP_BOX LOAD START_FISCAL.CTL,START_FISCAL$
23110 REM DROP_BOX WRITE START_FISCAL.CTL,CR_YEAR$ ! SSP236972 jdf
23112 FOR ACCT=1 TO PER_LEN; START_ACCTPD$=START_ACCTPD$+STR(ACCT:"00")+"/"; NEXT ACCT
23115 DROP_BOX LOAD START_ACCTPD.CTL,START_ACCTPD$,ERR=*NEXT
23116 REM DROP_BOX WRITE START_ACCTPD.CTL,CR_PD$,ERR=*NEXT ! SSP236972 jdf
23120 FIND (ZZPARM,KEY=%C$+"G/LYE"+CR_YEAR$)REC_DAT$; PER_LEN=NUM(REC_DAT$(13,2)),REC_DAT$=REC_DAT$(21)
23122 DIM CUR_DATE$[PER_LEN]
23130 FOR XX=1 TO PER_LEN; CUR_DATE$[XX]=FND$(REC_DAT$(XX*6-5,6)); NEXT XX
23200 CLOSE (ZZPARM)
23205 %CR_YEAR$=CR_YEAR$
23210 RETURN 
24000 SEL_FISCAL_YEAR:
24005 CHANGE_FLG=0
24006 KKK$=KEC(_FIL_NO)
24010 READ (_FIL_NO,KEY=GL_ACCT$+START_FISCAL$,DOM=*NEXT)
24015 KKKK$=KEY(_FIL_NO,END=*NEXT); IF KKKK$(1,16)<>GL_ACCT$+START_FISCAL$ THEN MSGBOX MSG("NODATA_AVA"),MSG("WARNING"),"!,OK,TIM=5",OPT$; NEXT_ID=EVN(ID$+".CTL"); GOTO *RETURN
24020 GOSUB NEXT_REC
24030 RETURN 
24500 CHECK_OPTION:
24510 FOR AA=65 TO 68
24515 AAA=EVN("BT_OPTION_"+CHR(AA)+".CTL")
24520 AAA'TEXTCOLOR$="DEFAULT",BBB$=AAA'TEXT$,XXX=POS("}"=BBB$); IF XXX<>0 THEN BBB$=BBB$(XXX+1),AAA'TEXT$=BBB$,AAA'HEIGHT=25
24530 NEXT AA
24535 AAA=EVN("BT_OPTION_"+OPTION$+".CTL")
24540 AAA'TEXTCOLOR$="Light Blue",BBB$=AAA'TEXT$,AAA'TEXT$="{!Arrow_Down}"+BBB$,AAA'HEIGHT=40
24541 ! DD=BT_OP.CTL,DD'LOCK=0,DD'HEIGHT=42,DD'TEXT$="{!Arrow_Left}"+BBB$,DD'TEXTCOLOR$="Light BLue"
24550 IF POS(OPTION$=F3$)=0 THEN CALL "*WINGRP;DISABLE",BUTT2.GRP$ ELSE CALL "*WINGRP;ENABLE",BUTT2.GRP$
24570 RETURN 
25000 ! 25000 - Load items into listbox
25010 LOAD_LINE_DETAILS:! COLUMN SEPARATOR IS SEP
25015 ML_BAL_FORW=NUM(AMT_TBL$[2]),CR_YEAR=ML_BAL_FORW
25020 FOR I=1 TO NUM(GL_DATES$(13,2))
25025 YEAR_TO_DATE=YEAR_TO_DATE+NUM(AMT_TBL$[I+2]),GL_DATE$=GL_DATES$(15+I*6,6)
25026 CALL "ZZWDTE;DISPLAY",GL_DATE$
25030 COLUMNS$=GL_DATE$+SEP+STR(NUM(AMT_TBL$[I+2]):"#,###,###.00-")+SEP+STR(YEAR_TO_DATE:"#,###,###.00-"),M0$="#,###,###.00-"
25035 EXECUTE "ML_DATE"+STR(I)+"$=GL_DATE$,ML_CURR_PER"+STR(I)+"=NUM(AMT_TBL$[I+2]),CR_YEAR=CR_YEAR+ML_CURR_PER"+STR(I)+",YTD_BAL"+STR(I)+"=CR_YEAR"
25040 ! LIST_BOX LOAD DETAILS.CTL,0,COLUMNS$
25042 EXECUTE "SHOW ML_CURR_PER"+STR(I)+".CTL;SHOW YTD_BAL"+STR(I)+".CTL"
25045 REFRESH_FLG=1
25050 NEXT I
25051 CALL "*wingrp;enable",FLDS.GRP$; CALL "*wingrp;lock",FLDS.GRP$; CALL "*wingrp;enable",FLDS2.GRP$; CALL "*wingrp;lock",FLDS2.GRP$
25052 IF F1$(POS(OPTION$=F1$)+1,1)="N" THEN CALL "*WINGRP;LOCK",FLDS.GRP$; CALL "*WINGRP;DISABLE",BUTT2.GRP$; OPTIONS$="R",REST=0; GOSUB BORDERLESS; GOTO 25060
25053 OPTIONS$="R",REST=1; GOSUB BORDERLESS
25054 MULTI_LINE SHOW ML_BAL_FORW.CTL ! SSP 218127
25055 CALL "*WINGRP;UNLOCK",FLDS.GRP$; CALL "*WINGRP;ENABLE",BUTT2.GRP$
25060 MULTI_LINE SHOW ML_BAL_FORW.CTL ! SSP 218127
25062 CALL "*WINGRP;ENABLE",BUTTON.GRP$
25065 GOSUB SEL_ACCT
25070 RETURN 
25500 ! 25500 - Load Graphic
25510 LOAD_GRAP:
25515 GOSUB CHECK_ACCT_SIGN
25520 VAR$=MSG("CURR_PER")+"=",MTHS$=MSG("MTHS"),VAL1$="",VAR$="",TOTAL_PIE=0
25525 FOR XX=1 TO %PER_LEN; TOTAL_PIE=TOTAL_PIE+ABS(EVN("ML_CURR_PER"+STR(XX))); NEXT XX
25530 FOR XX=1 TO %PER_LEN; DTE$=EVS("ML_DATE"+STR(XX)+"$"),MM=NUM(DTE$(1,2)); IF %X3$(48,1)="2" THEN MM=NUM(DTE$(4,2))
25535 DTE$=MTHS$(MM*3-2,1),VAR2$=VAR2$+DTE$+"/",VAR$=VAR$+STR((EVN("ML_CURR_PER"+STR(XX))*ACT))+","; VAL_1=ABS(EVN("ML_CURR_PER"+STR(XX))); IF VAL_1<>0 THEN PRECISION 3; VAL1$=VAL1$+MTHS$(MM*3-2,3)+" "+STR((VAL_1/TOTAL_PIE)*100:"###.0-%")+"="+STR(EVN("ML_CURR_PER"+STR(XX)))+"/"; PRECISION 2 END_IF ; NEXT XX
25540 VAR$=VAR$(1,LEN(VAR$)-1)+"/"; DIM OPT$[4]; OPT$[1]=MSG("ACCRUAL"),OPT$[2]=MSG("BUDGET"),OPT$[3]=MSG("CASH_BASIS"),OPT$[4]=MSG("CASH_BUDG")+MSG("CASH_BUDT"),OP$=OPT$[POS(OPTION$="ABCD")]
25545 IF ID$="BT_COMPARE" THEN GOSUB COMPARE
25550 PROCESS "GLGMDA.1","../GLG/GL.EN",VAR$,GL_DESC$,VAL1$,VAR2$,OP$
25555 %COMPARE=0
25560 RETURN 
25600 LOAD_GRAPHIC:
25610 VAR$=ARG_1$,CHART_1.CTL'TITLE1$=ARG_2$,VAL1$=ARG_3$,VAR2$=ARG_4$,XAXISTITLE$=ARG_5$
25612 GOSUB DEFAULTS
25613 FOR XX=1 TO %PER_LEN; VAL3$=VAL3$+" =0/"; NEXT XX
25615 IF CB_3D$="0" THEN CHART_1.CTL'TITLE2$=ARG_2$,CHART_1.CTL'TITLE1$="" ELSE CHART_1.CTL'TITLE1$=ARG_2$,CHART_1.CTL'TITLE2$=""
25618 MTHS$=MSG("MTHS")
25619 FOR XX=1 TO LEN(MTHS$) STEP 3; MONTHS$=MONTHS$+MTHS$(XX,1)+"="+MTHS$(XX,3)+" "; NEXT XX
25620 GOSUB SELECT_GRAF ! CHART LOAD CHART_1.CTL,VAR$
25700 REFRESH_FLG=1,B_GRAF$=""
25705 CHART ENABLE AA
25710 RETURN 
26000 ! Generate YTD
26010 GEN_YTD:
26020 CR_YEAR=ML_BAL_FORW
26030 FOR I=1 TO 13
26040 EXECUTE "cr_year=cr_year+ml_curr_per"+STR(I)+",ytd_bal"+STR(I)+"=cr_year"
26050 NEXT I
26060 REFRESH_FLG=1
26070 RETURN 
28000 HARD_COPY:
28010 PRINT 'DIALOGUE'(20,15,60,8,"Enter Comment"),'CS'
28020 ! CH_PR=0; CALL "*pr.opn",CH_PR,0
28022 BUTTON 101,@(42,5,10,1.75)="&Next"
28025 PRINT 'TEXT'(55,60,1000,100,"Comment/Title:"); MULTI_LINE 100,@(15,1,40,1); SET_FOCUS 100; OBTAIN *; MULTI_LINE READ 100,TF_COMMENT$
28030 PRINT 'POP',
28034 IF CTL=4 THEN GOTO *RETURN
28035 PRINT 'CURSOR'(6); CH_PR=HFN; OPEN (CH_PR,ERR=END_HARD)"*windev*" ! CH_PR=0; CALL "*pr.opn",CH_PR,0
28040 IF CH_PR=0 THEN GOTO *RETURN
28050 TF_NAME$=STP(X3$(86,40)),TIL$=MSG("GLGMDA"); DIM BAL_T$[4]; BAL_T$[1]="ACCRUAL",BAL_T$[2]="BUDGET",BAL_T$[3]="CASH_BASIS",BAL_T$[4]="CASH_BUD",OP=POS(BAL_TYPE$="ABCD"),BAL_T$=BAL_T$[OP],BAL_T$=MSG(BAL_T$)
28055 PRINT (CH_PR)@(0),"Date/Time:",DTE(0:"%Mz/%Dz/%Yl %hz:%mz %p")
28057 PRINT (CH_PR)@(0)," Terminal:",FID(0)
28058 PRINT (CH_PR)@(0),"  User ID:",%X3_OP_ID$,'LF','LF','LF','LF' ! SSP 200827
28059 IF TF_COMMENT$<>"" THEN PRINT (CH_PR)@(INT((80-LEN(TF_COMMENT$))/2)),TF_COMMENT$,'LF','LF'
28060 PRINT (CH_PR)"  Program: GLGMDA",@(INT((80-LEN(TF_NAME$))/2)),TF_NAME$
28070 PRINT (CH_PR)"     Date: ",DTE(0:"%Mz/%Dz/%Yl"),@(INT((80-LEN(TIL$))/2)),TIL$,@(66),"Time: ",DTE(0:"%hz:%mz %p")
28080 PRINT (CH_PR)PAD(RAY$,80,"_")
28090 IT$=MSG("ACCT_N")+":"; PRINT (CH_PR)@(22-LEN(IT$)),IT$," ",FN%ZZDISP$(GL_ACCT$,"G/L"),@(40),GL_DESC$
28100 CU$=MSG("FY")+":"; PRINT (CH_PR)@(22-LEN(CU$)),CU$," ",START_FISCAL$,
28120 PRINT (CH_PR)@(40),MSG("BAL_TYPE")+": ",BAL_T$
28140 PRINT (CH_PR)PAD("",80,"_")
28145 BAL_F$=MSG("BAL_FORW")+":"; PRINT (CH_PR)@(55-LEN(BAL_F$)),BAL_F$," ",ML_BAL_FORW:"#,###,###,###.00CR"
28150 PRINT (CH_PR)@(3),MSG("PERIOD_E"),@(30),MSG("CURR_PER"),@(60),MSG("YTD")
28155 PRINT (CH_PR)PAD("",80,"_")
28160 FOR A=1 TO %PER_LEN
28170 EXECUTE "PRINT (CH_PR)@(5),ML_DATE"+STR(A)+"$,@(28),ML_CURR_PER"+STR(A)+":"+QUO+"#,###,###,###.00CR"+QUO+",@(56),YTD_BAL"+STR(A)+":"+QUO+"#,###,###,###.00CR"+QUO
28180 NEXT A
28190 PRINT (CH_PR)'FF'
28200 CLOSE (CH_PR)
28205 END_HARD:
28206 PRINT 'CURSOR'(0)
28210 RETURN 
30000 QUERY_PROCESS:
30001 FY$=START_FISCAL$; IF LEN(FY$)>4 THEN FY$=%CR_YEAR$
30005 PRIME_KEY$=GL_ACCT$+FY$+OPTION$
30010 PROCESS "QRY_GL3","../GLG/GL.EN",PRIME_KEY$
30020 IF PRIME_KEY$="" OR LEN(PRIME_KEY$)<17 THEN RETURN 
30030 GL_ACCT$=PRIME_KEY$(1,12),OPTION$=PRIME_KEY$(17,1),REFRESH_FLG=1,FY$=PRIME_KEY$(13,4)
30040 GOSUB PROCESS_OPTION
30050 RETURN 
30100 QUERY:ENTER CODE$
30110 IF MID(CODE$,13,4)<>%CR_YEAR$ THEN EXIT 123
30120 EXIT 
32000 SET_DEFAULTS:
32010 WRITE (_ZZPARM,KEY="*glgmda*"+%X3_OP_ID$)CB_3D$,BACKCOLOR$,COLORS$,GRAF$,LB_GRAP$,FONT$ ! SSP# 187014
32011 DEFAULTS: _ZZPARM=FFN("ZZPARM"); IF _ZZPARM<0 THEN _ZZPARM=HFN; OPEN (_ZZPARM)"ZZPARM" ! SSP# 187014
32012 READ (_ZZPARM,KEY="*glgmda*"+%X3_OP_ID$,DOM=*NEXT)CB_3D$,BACKCOLOR$,COLORS$,GRAF$,LB_GRAP$,FONT$; GOTO *RETURN ! SSP# 187014
32015 CB_3D$="1",BACKCOLOR$="Light White",COLORS$="Light Yellow",GRAF$="AREA",LB_GRAP$="1",FONT$="Georgia" ! SSP# 187014
32017 GOTO SET_DEFAULTS ! SSP# 187014
32020 RETURN 
33000 BORDERLESS:
33010 IF REST1=1 AND REST2=REST THEN GOTO *RETURN
33050 ! CALL "BORDERLESS",0,OPTIONS$,REST,FLDS.GRP$
33060 REST1=1,REST2=REST
33070 RETURN 
34000 EXPORT:
34005 IF DEC(MID(MSE,22,1))>3 THEN WINDX=1,WDX$="[wdx]" ELSE WINDX=0,WDX$=""
34010 ON NUM(EXPORT$) GOSUB *NEXT,EXCEL,WORD
34020 CALL "*wingrp;hide",EXPORT.GRP$
34030 NEXT_ID=BT_EXPORT.CTL
34040 CLOSE (EXCEL,ERR=*NEXT)
34045 CALL "[WDX]*CMDWORD;CLOSE",ERR=*NEXT,OB_EXCEL
34050 RETURN 
34100 EXCEL:
34110 R=0
34115 CALL "[WDX]*CMDWORD;GET_EXCEL",ERR=*NEXT,OB_EXCEL,TF_NAME$; IF TF_NAME$<>"" THEN GOTO 34140
34130 ! IF WINDX THEN EXECUTE "[wdx]invoke "+QUO+EXCEL$+QUO ELSE INVOKE EXCEL$
34140 WAIT 2
34150 DATES$=""; FOR AA=1 TO %PER_LEN; TMP$=EVS("ml_date"+STR(AA)+"$"); IF %X3$(48,1)="1" THEN YY=NUM(TMP$(7)),MM=NUM(TMP$(1,2)),DD=NUM(TMP$(4,2)) ELSE IF %X3$(48,1)="2" THEN YY=NUM(TMP$(7)),MM=NUM(TMP$(4,2)),DD=NUM(TMP$(1,2)) ELSE YY=NUM(TMP$(1,4)),MM=NUM(TMP$(6,2)),DD=NUM(TMP$(9))
34152 TMP=JUL(YY,MM,DD),DATES$=DATES$+DTE(TMP:"%Ms-%Yl")+$09$; NEXT AA
34155 TF_VALUE$=""; FOR AA=1 TO 12; TF_VALUE$=TF_VALUE$+STR(EVN("ML_CURR_PER"+STR(AA)))+$09$; NEXT AA
34160 EXCEL=HFN; IF TF_NAME$="" THEN OPEN (EXCEL)"[wdx][dde]excel;" ELSE OPEN (EXCEL)"[wdx][DDE]Excel;"+TF_NAME$ ! ssp 201081
34170 R=R+1; IF R>2 THEN GOTO 34220
34180 K$="R"+STR(R)+"C1:R"+STR(R)+"C13"
34200 IF R=2 THEN WRITE RECORD (EXCEL,KEY=K$)TF_VALUE$ ELSE WRITE RECORD (EXCEL,KEY=K$)DATES$
34210 GOTO 34170
34220 X$="R"+STR(R-1)
34225 DIM GRA$[8],VA[8]; GRA$[1]="area",GRA$[2]="bar",GRA$[3]="column",GRA$[4]="line",GRA$[5]="pie",GRA$[6]="line",GRA$[7]="scatter",GRA$[8]="stack"
34230 WRITE RECORD (EXCEL)"[SELECT(""R2C1:"+X$+"C12"","""+X$+"C12"")]"
34235 WRITE RECORD (EXCEL,ERR=*NEXT)"[Zoom(95)]"
34240 WRITE RECORD (EXCEL)"[NEW(2,1)]"
34245 WRITE RECORD (EXCEL,ERR=*NEXT)"[Zoom(50)]"; GOSUB DEFAULTS
34247 IF CB_3D$="1" THEN D3$="3d." ELSE D3$=""
34248 GR$=GRA$[NUM(LB_GRAP$)]; IF GR$="pie" THEN VA$="6" ELSE VA$="5"
34250 WRITE RECORD (EXCEL,ERR=*NEXT)"[gallery."+D3$+GR$+"("+VA$+")]"
34260 WRITE RECORD (EXCEL,ERR=*NEXT)"[Zoom(75)]"
34270 DIM OPT$[4]; OPT$[1]=MSG("ACCRUAL"),OPT$[2]=MSG("BUDGET"),OPT$[3]=MSG("CASH_BASIS"),OPT$[4]=MSG("CASH_BUDG")+MSG("CASH_BUDT"),OP$=OPT$[POS(OPTION$="ABCD")]
34280 BB$=STR(GL_ACCT$(1,%GL_ACCT_LEN+%GL_SUBACCT_LEN+%GL_DEPT_LEN):%GLACCT_MASK$)
34290 WRITE RECORD (EXCEL)OP$+" - "+BB$+" "+GL_DESC$
34300 RETURN 
35000 WORD:
36000 START_FISCAL_FOCUS:
36010 CALL "*WINGRP;HIDE",FLDS.GRP$; CALL "*WINGRP;HIDE",FLDS2.GRP$; CALL "*WINGRP;DISABLE",BUTTON.GRP$; CALL "*WINGRP;DISABLE",BUTT2.GRP$
36020 FOR AA=1 TO 13; EXECUTE "ML_DATE"+STR(AA)+"$="+QUO+QUO; NEXT AA
36030 REFRESH_FLG=1
36040 RETURN 
37000 NO_PATH:
37080 PROCESS "ZWGPAT","../ZZG/ZZ.EN"
37090 FIND (_ZZPARM,KEY="PATH"+%X3_OP_ID$,ERR=NO_PATH)EXCEL$,WORDPAD$ ! SSP 200827
37100 RETURN 
38000 SELECT_GP:! the clicked on the chart
38095 RETURN 
38099 ! 
39000 COMPARE:
39010 IF POS(BAL_TYPE$="AB")=0 THEN RETURN ELSE GL3_KEY$=KEC(_FIL_NO)
39020 IF BAL_TYPE$="B" THEN VAR$="Budget="+VAR$+"Accrual=",OP$=OP$+" - Accrual",GL3_KEY$(17,1)="A" ELSE VAR$="Accrual="+VAR$+"Budget=",GL3_KEY$(17,1)="B",OP$=OP$+" - Budget"
39030 READ (_GL3,KEY=GL3_KEY$,DOM=*NEXT)
39040 FOR AA=1 TO PER_LEN
39050 EXECUTE "VAR$=VAR$+STR(GL3.PERIOD_AMT_"+STR(AA)+")"+"+"+QUO+","+QUO
39060 NEXT AA
39070 VAR$=VAR$(1,LEN(VAR$)-1)+"/",OP$="",%COMPARE=1
39080 RETURN 
40000 CHECK_ACCT_SIGN:
40001 ACT=1; RETURN 
40010 DIM SIG(9); SIG(1)=1,SIG(2)=-1,SIG(3)=-1,SIG(4)=-1,SIG(5)=-1,SIG(6)=1,SIG(7)=1,SIG(8)=-1,SIG(9)=1
40020 ACT=SIG(INT(POS(GL_ACCT$<=%GL_ACCT$,12)/12+1)-1),B_VAR$=VAR$
40070 RETURN 
40100 SEL_INVERT:
40110 IF CB_INV$="2" THEN SIG=-1,CB_INV$="1" ELSE SIG=1,CB_INV$="2"
40120 VAL$=BB$,VAL$=SUB(VAL$,"/",","),NEW$=""
40130 XX=POS(","=VAL$); IF XX=0 THEN GOTO END_INVERT
40150 VAL=NUM(VAL$(1,XX),ERR=NO_NUM),VAL$=VAL$(XX+1)
40160 VAL=VAL*SIG
40170 NEW$=NEW$+STR(VAL)+","; GOTO 40130
40180 END_INVERT:
40185 NEW$=SUB(NEW$,",B","/B"),NEW$=SUB(NEW$,",A","/A")
40190 NEW$(LEN(NEW$),1)="/"
40200 BB$=NEW$,NEW$="",NXT=1
40210 CHART LOAD CHART_1.CTL,BB$
40220 PERFORM "EIGBAA;SELECT_COLOR"
40230 RETURN 
40235 NO_NUM:
40240 XX=POS("="=VAL$); IF XX=0 THEN ESCAPE 
40250 NEW$=NEW$+VAL$(1,XX),VAL$=VAL$(XX+1)
40260 GOTO 40130
40300 VALID_KEY:! SSP227439 jdf
40305 INVALID_KEY=0 ! SSP227439 jdf
40310 BAD_KEY$="GL_ACCT" ! SSP227439 jdf
40320 GL_ACCT=NUM(GL_ACCT$,ERR=INVALID_KEY) ! SSP227439 jdf
40330 IF LEN(GL_ACCT$)<>12 THEN GOTO INVALID_KEY ! SSP227439 jdf
40340 BAD_KEY$="START_FISCAL" ! SSP227439 jdf
40350 IF LEN(FY$)<>4 THEN GOTO INVALID_KEY ! SSP227439 jdf
40360 BAD_KEY$="BT_OPTION_A" ! SSP227439 jdf
40370 IF POS(OPTION$="ABCD")=0 THEN GOTO INVALID_KEY ! SSP227439 jdf
40380 RETURN ! SSP227439 jdf
40400 INVALID_KEY:! SSP227439 jdf
40405 INVALID_KEY=1 ! SSP227439 jdf
40410 IF ID$<>"BUTTON_3" THEN MSGBOX "Invalid "+BAD_KEY$,"Warning","!" ! SSP227439 jdf
40420 EXECUTE "NEXT_ID="+BAD_KEY$+".CTL" ! SSP227439 jdf
40430 RETURN ! SSP227439 jdf
56000 ! "187014-This problem was in release also.  When clicking on the     
56001 ! "       Exit button
56002 ! "197404-Getting GUI error looking at G/L Balances.                  
56005 ! "200827-Error in GL Account Balances                                
56008 ! "200714-Testing NT Windows.                                         
56009 ! "202640-General Ledger Display                                      
56010 REM "205460-Oracle - FIN(CHANNEL,"NUMREC") changed to use FN%FIN$()     
56012 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56015 ! "217528-PE in Statical Data - sometimes                             
56018 ! "218127-GLGMDA - GL Acct Balance panel, you can't access the Balance
56020 REM "227439-GL Record Error                                             
56022 REM "236972-Valued Inventory report - do not have ability to print      
56023 REM "268342-Inventory Transaction entry - selection of fiscal year      
