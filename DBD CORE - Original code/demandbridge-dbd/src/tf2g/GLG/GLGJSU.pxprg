0010 ! GLGJSU - Recurring G/L Journals Listing and Update
0035 REM "5.6 - 02/27/08 - 15.760833 - jir - SSP# 215277
0037 REM "215277-GL Recurring Journal Posting-Entry List Locks Up TF         
0040 REM "Copyright 2008 DemandBridge, Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "GLGJSU","../GLG/GL.EN"
0060 EXIT 
0090 ! 
0100 ! 100 - Initialization
0110 INIT:
0120 _SV_KR=PRM('KR'); SET_PARAM 'KR'=0 ! Ensure native handling of KEP()
0130 GOSUB SETUP_LIBRARY; IF %FLMAINT_MSG$<>"" THEN MESSAGE_LIB %FLMAINT_MSG$
0140 CHANGE_FLG=0,_ENABLE_FLG=0,_KCNT=1,_FIRST_KEY=0,_FIRST_FIELD=0
0150 GOSUB SETUP_KEYS
0160 _FILE_NAME$="ZZS"+%C$
0170 _FIL_NO=HFN; OPEN (_FIL_NO,ERR=OPEN_ERR)_FILE_NAME$
0180 _CUR_FN=HFN; OPEN (_CUR_FN)_FILE_NAME$
0185 GOSUB 22000
0188 B_A$=A$
0190 RETURN 
0200 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0210 CMD_STR$="END"
0220 RETURN 
0300 ! 300 - Set up the message library
0310 SETUP_LIBRARY:
0320 _SV_MSGLIB$=MSG(*)
0330 _LANG$=LCS(%NOMAD_DEF_SFX$); IF _LANG$="" THEN _LANG$=LCS(ENV("PVXLANG")); IF _LANG$="" THEN _LANG$=LCS(ENV("LANG")); IF _LANG$="" THEN _LANG$="en"
0340 MESSAGE_LIB "*msglib."+_LANG$,ERR=*NEXT; GOTO 0360
0350 MESSAGE_LIB "*msglib.en"
0360 SET_MSG:GOSUB SETUP_MESSAGES
0370 RETURN 
0400 ! 400 - Set up key information
0410 SETUP_KEYS:
0420 _NUMKEYS=1
0430 DIM _KEYS$[1:1]; _KEYS$[1]="PRG_NAME$"
0440 _KEY1=1
0490 RETURN 
0500 ! 500 - Main panel post_display logic
0510 MAIN_POST_DISPLAY:
0520 MESSAGE_LIB _SV_MSGLIB$
0530 GOSUB CLEAR_REC
0535 ARG_1$="GL2JSA            ",_KEY1$=ARG_1$
0537 DIM RNG(4)
0540 IF ARG_1$="" THEN _ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS; GOTO *RETURN
0550 _KEY$=ARG_1$; READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT)A$,R0$,W$,RNG{ALL}; A$=B_A$; GOTO 0560
0551 DIM A$(126),R0$(128),W$(25),RNG(4)
0560 ! _ENABLE_FLG=-1; GOSUB PROCESS_READ; GOSUB DISP_REC
0563 ONLY_OPEN$=""; PERFORM "GLGMDA;LOAD_FISCAL_YEAR" ! LIST_BOX LOAD END_ACCTPD.CTL,START_ACCTPD$; IF B_START_FISCAL$<>"" THEN START_FISCAL$=B_START_FISCAL$,START_ACCTPD$=B_START_ACCTPD$,END_ACCTPD$=B_END_ACCTPD$
0565 GOSUB ASSIGN_LIB
0566 PERFORM "GLGRRS;GET_FY_DATES"; ML_ENDING_PER$=ML_DTE_1$
0570 RETURN 
0900 ! 900 - Wrapup
0910 WRAPUP:
0920 ARG_1$=KEC(_FIL_NO,ERR=*NEXT)
0930 IF _FIL_NO<>0 THEN CLOSE (_FIL_NO); _FIL_NO=0
0940 IF _CUR_FN<>0 THEN CLOSE (_CUR_FN); _CUR_FN=0
0950 MESSAGE_LIB _SV_MSGLIB$
0960 SET_PARAM 'KR'=_SV_KR
0970 RETURN 
1000 ! 1000 - Start of maintenance only code - Find/Add/Delete/Clear record
1010 FIND_REC:
1020 CHANGE_FLG=0; IF POS(_EOM$=$000102090D$)=0 THEN RETURN ELSE GOSUB GET_CURKEY; IF _EOM$=$00$ THEN IF QRY_VAL$<>"" AND QRY_VAL$=EVS(_KEYS$[_CURKEY]) THEN QRY_VAL$="" ELSE RETURN 
1030 IF _ENABLE_FLG<0 THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1
1040 IF _ENABLE_FLG THEN IF _KCNT<_NUMKEYS THEN _KCNT=_CURKEY+1,_ENABLE_FLG=_KCNT; GOSUB ENABLE_GROUPS; RETURN ! If multiple key segments, enable the _KCNT segment
1050 _KEY$=PRG_NAME$
1060 IF NUL(STP(_KEY$,1,$00$)) THEN NEXT_ID=_FIRST_KEY; RETURN 
1070 READ (_FIL_NO,KEY=_KEY$,DOM=NEW_RECORD,ERR=CHK_ERR_NXT)
1080 GOSUB PROCESS_READ
1090 GOSUB NUM_TO_STR
1100 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1110 EXIT 
1200 ! 1200 - New RECORD check
1210 NEW_RECORD:
1220 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1230 MSGBOX _MSG_REC_MISS1$+_R_KEY$+_MSG_REC_MISS2$+SEP+_MSG_REC_CR_NEW$,_MSG_NOT_FOUND$,"?,YESNO",_YESNO$
1240 IF _YESNO$="NO" THEN NEXT_ID=_FIRST_KEY,CHANGE_FLG=0; EXIT 
1260 IF _ENABLE_FLG THEN _KCNT=0,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
1270 CHANGE_FLG=0,REFRESH_FLG=1,NEXT_ID=_FIRST_FIELD
1290 RETURN 
1400 ! 1400 - Add RECORD
1410 WRITE_REC:
1415 GOSUB ASSIGN_PRG; GOTO WRT
1420 GOSUB STR_TO_NUM
1430 GOSUB CHECK_REQD_FLDS; IF _W_FLG=0 THEN IGNORE_EXIT=1; EXIT 
1440 GOSUB REVIEW_WRITE
1460 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1470 CHANGE_FLG=0
1480 NEXT_ID=_FIRST_KEY
1490 EXIT 
1600 ! 1600 - Delete
1610 DELETE_REC:
1620 _KEY$=PRG_NAME$
1630 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$
1640 MSGBOX _MSG_REC_VFYDEL1$+_R_KEY$+_MSG_REC_VFYDEL2$,_MSG_JUST_CHECK$,"?,YESNO",_X$
1650 IF _X$<>"YES" THEN RETURN 
1660 REMOVE (_FIL_NO,KEY=_KEY$,ERR=NO_SUCH)
1670 _R_KEY$=_KEY$; TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_REMOVE$+_R_KEY$,_FYI$,"INFO"
1680 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1690 CHANGE_FLG=0
1700 NEXT_ID=_FIRST_KEY
1710 EXIT 
1720 NO_SUCH: MSGBOX _MSG_REC_NOTFND$,_FYI$,"!"; EXIT 
1800 ! 1800 - Clear record
1810 CLEAR_REC:
1820 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
1830 _CLR_FLG$="R"; GOSUB CLEAR_FIELDS
1840 IF _ENABLE_FLG THEN _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
1850 CHANGE_FLG=0
1860 RETURN 
2000 ! 2000 - Browsing mode
2010 ! - Next
2020 NEXT_REC:
2030 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2040 _KEY$=KEY(_FIL_NO,END=END_OF_FILE)
2060 READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2070 CHK_ERR_NXT:IF ERR<>0 THEN EXIT ERR
2080 _D$=_MSG_NEXT$; GOSUB BUSY_CHK
2090 _KEY$=KEN(_FIL_NO,KEY=_KEY$,END=END_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2100 END_OF_FILE: MSGBOX _MSG_END_OF_FIL$,_FYI$,"!"; EXIT 
2200 ! 2200 - Prior record
2210 PRIOR_REC:
2220 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2230 _KEY$=KEP(_FIL_NO,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=*NEXT); GOSUB PROCESS_READ; GOTO DISP_REC
2240 CHK_ERR_PRE:IF ERR<>0 THEN EXIT ERR
2250 _D$=_MSG_PRECEDING$; GOSUB BUSY_CHK
2260 _KEY$=KEP(_FIL_NO,KEY=_KEY$,END=START_OF_FILE); READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2270 START_OF_FILE: MSGBOX _MSG_START_FILE$,_FYI$,"!"; EXIT 
2400 ! 2400 - First record
2410 FIRST_REC:
2420 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2430 _KEY$=KEF(_FIL_NO,ERR=NO_FIRST)
2450 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_NXT); GOSUB PROCESS_READ; GOTO DISP_REC
2460 NO_FIRST: MSGBOX _MSG_REC_NO_1ST$,_FYI$,"!"; EXIT 
2600 ! 2600 - Last record
2610 LAST_REC:
2620 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
2630 _KEY$=KEL(_FIL_NO,ERR=NO_LAST)
2650 READ (_FIL_NO,KEY=_KEY$,ERR=CHK_ERR_PRE); GOSUB PROCESS_READ; GOTO DISP_REC
2660 NO_LAST: MSGBOX _MSG_REC_NO_LST$,_FYI$,"!"; EXIT 
3000 ! 3000 - Subroutines
3010 ! Processing required by READ
3020 PROCESS_READ:
3040 IF _ENABLE_FLG THEN _KCNT=_KEY1-1,_ENABLE_FLG=-1; GOSUB ENABLE_GROUPS
3050 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3060 CHANGE_FLG=0
3070 RETURN 
3200 ! 3200 - Review record for changes before WRITE 
3210 REVIEW_WRITE:
3220 _CHG1$="",_CHG2$=""
3230 READ (_CUR_FN,KEY=KEC(_FIL_NO),DOM=WRT)
3240 GOSUB DETERMINE_CHGS
3250 IF _CHG1$="" AND _CHG2$="" THEN GOTO WRT
3260 IF _CHG1$="" THEN GOTO CHK2
3270 MSGBOX _MSG_UPD_SAME$+SEP+_CHG1$+SEP+SEP+_MSG_OVRWRT_CHG$,_MSG_WARNING$,"Yesno,1,!",_YESNO$
3280 IF _YESNO$="NO" THEN GOTO *RETURN
3290 IF _CHG2$="" THEN GOTO WRT
3300 CHK2:IF _CHG2$<>"" THEN MSGBOX _MSG_UPD_OTHER1$+SEP+_CHG2$+SEP+SEP+_MSG_UPD_OTHER2$,_FYI$,"!"
3310 GOSUB INCORPORATE_CHGS
3320 WRT:WRITE (_FIL_NO,KEY=_KEY$,ERR=*RETURN)A$,R0$,W$,RNG{ALL}; GOTO 3360
3330 _R_KEY$=KEC(_FIL_NO); TRANSLATE _R_KEY$," ",$00$; MSGBOX _MSG_REC_UPDADD$+_R_KEY$,_FYI$,"INFO"
3340 READ DATA FROM REC(IOL(_FIL_NO,ERR=*NEXT)),REC=_ORIG$ TO IOL=IOL(_FIL_NO) ! Save record for review
3350 GOSUB NUM_TO_STR
3360 REFRESH_FLG=1
3370 RETURN 
3380 WRITE_ERROR:
3390 IF ERR=11 THEN MSGBOX _MSG_DUP_UNIQUE$,_MSG_CANNOT_WRITE$ ELSE MSGBOX MSG(ERR),_MSG_CANNOT_WRITE$
3400 RETURN 
3500 ! 3500 - Display a record
3510 DISP_REC:
3520 GOSUB NUM_TO_STR
3530 REFRESH_FLG=1
3540 RETURN 
3600 ! 3600 - Busy Record display
3610 BUSY_CHK:
3620 MSGBOX _MSG_REC_LOCKED$+SEP+SEP+_MSG_REC_VIEW1$+_D$+_MSG_REC_VIEW2$,_MSG_REC_ACCESS$,"YESNO,!",_D$
3630 IF _D$="NO" THEN EXIT 
3640 RETURN 
3790 ! 3790 - See if changes are to be written
3800 CHECK_CHANGES:
3810 IF _FIRST_KEY=0 THEN _FIRST_KEY=PRG_NAME.CTL,_FIRST_FIELD=RPT_SELEC.CTL
3820 IF CHANGE_FLG=0 THEN IF _ENABLE_FLG THEN GOTO CC ELSE GOTO *RETURN
3830 MSGBOX MSG("UPD_RPT_1")+SEP+MSG("UPD_RPT_2"),MSG("CONFIRM"),"?,YESNO",_YESNO$
3840 IF _YESNO$="YES" THEN GOSUB ASSIGN_PRG; GOTO WRT
3850 CHANGE_FLG=0
3860 CC: _KCNT=_KEY1,_ENABLE_FLG=_KEY1; GOSUB ENABLE_GROUPS
3870 RETURN 
4000 ! 4000 - Get the current key segment number
4010 GET_CURKEY:
4020 FOR _CURKEY=1 TO _NUMKEYS
4030 IF _KEYS$[_CURKEY]=ID$+"$" OR _KEYS$[_CURKEY]=ID$ THEN EXITTO *RETURN
4040 NEXT _CURKEY
4050 RETURN 
9000 ! 9000 - Retrieve messages from the *msglib.xxx library
9010 SETUP_MESSAGES:
9020 _FYI$=MSG("FYI"),_ERROR$=MSG("ERROR")
9030 _MSG_DIRECTORY$=MSG("DIRECTORY")
9040 _MSG_END_OF_FIL$=MSG("END_OF_FIL")
9050 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9060 _MSG_JUST_CHECK$=MSG("JUST_CHECK")
9070 _MSG_MANDATORY$=MSG("MANDATORY")
9080 _MSG_NEXT$=MSG("NEXT")
9090 _MSG_NON_NUMER$=MSG("NON_NUMER")
9100 _MSG_NOT_FOUND$=MSG("NOT_FOUND")
9110 _MSG_OVRWRT_CHG$=MSG("OVRWRT_CHG")
9120 _MSG_PRECEDING$=MSG("PRECEDING")
9130 _MSG_PREFIX$=MSG("PREFIX")
9140 _MSG_REC_ACCESS$=MSG("REC_ACCESS")
9150 _MSG_REC_ALTERD$=MSG("REC_ALTERD")
9160 _MSG_REC_CR_NEW$=MSG("REC_CR_NEW")
9170 _MSG_REC_LOCKED$=MSG("REC_LOCKED")
9180 _MSG_X$=MSG("REC_MISS","^"),P=POS("^"=_MSG_X$),_MSG_REC_MISS1$=_MSG_X$(1,P-1),_MSG_REC_MISS2$=_MSG_X$(P+1)
9190 _MSG_REC_NOTFND$=MSG("REC_NOTFND")
9200 _MSG_REC_NO_1ST$=MSG("REC_NO_1ST")
9210 _MSG_REC_NO_LST$=MSG("REC_NO_LST")
9220 _MSG_REC_REMOVE$=MSG("REC_REMOVE")
9230 _MSG_REC_UPDADD$=MSG("REC_UPDADD")
9240 _MSG_X$=MSG("REC_VFYDEL","^"),P=POS("^"=_MSG_X$),_MSG_REC_VFYDEL1$=_MSG_X$(1,P-1),_MSG_REC_VFYDEL2$=_MSG_X$(P+1)
9250 _MSG_X$=MSG("REC_VIEW","^"),P=POS("^"=_MSG_X$),_MSG_REC_VIEW1$=_MSG_X$(1,P-1),_MSG_REC_VIEW2$=_MSG_X$(P+1)
9260 _MSG_REQ_FIELDS$=MSG("REQ_FIELDS")
9270 _MSG_START_FILE$=MSG("START_FILE")
9280 _MSG_UPDATE$=MSG("UPDATE")
9290 _MSG_UPD_OTHER1$=MSG("UPD_OTHER1")
9300 _MSG_UPD_OTHER2$=MSG("UPD_OTHER2")
9310 _MSG_UPD_SAME$=MSG("UPD_SAME")
9320 _MSG_WARNING$=MSG("WARNING")
9330 _MSG_CANNOT_WRITE$=MSG("CANT_WRITE")
9340 _MSG_DUP_UNIQUE$=MSG("DUP_UNIQUE")
9350 RETURN 
9999 END 
10000 ! 10000 - Convert numeric values to string
10010 NUM_TO_STR:
10020 RPT_NUM1$=STR(RPT_NUM1)
10030 RPT_NUM2$=STR(RPT_NUM2)
10999 RETURN 
11000 ! 11000 - Convert numeric strings to number
11010 STR_TO_NUM:
11020 _X$="RPT_NUM1",_X=RPT_NUM1.CTL,RPT_NUM1=NUM(RPT_NUM1$,ERR=NON_NUMERIC)
11030 _X$="RPT_NUM2",_X=RPT_NUM2.CTL,RPT_NUM2=NUM(RPT_NUM2$,ERR=NON_NUMERIC)
11970 RETURN 
11980 NON_NUMERIC: MSGBOX _MSG_NON_NUMER$+_X$,_ERROR$,"!"
11990 NEXT_ID=_X
11999 EXIT 
12000 ! 12000 - Check if the required fields have data
12010 CHECK_REQD_FLDS:
12020 _W_FLG=1
12999 RETURN 
13000 ! 13000 - Clear the record fields
13010 CLEAR_FIELDS:
13020 IF _CLR_FLG$="R" THEN PRG_NAME$=""
13030 RPT_SELEC$=""
13040 RPT_DESC$=""
13050 RPT_OPT$=""
13060 RPT_SEQ$=""
13070 RPT_SHIPTO$=" "
13080 RPT_AGEINV$=""
13090 RPT_REPTYPE$=""
13100 RPT_ZEROBAL$=""
13110 RPT_POSTAGE$=""
13120 RPT_NAMEADD$=""
13130 RPT_INVRPT$=""
13140 RPT_FISYR$=""
13150 RPT_PER$=""
13160 RPT_CCINV$=""
13170 RPT_AGEDATE$=""
13180 RPT_PTD$=""
13190 RPT_RECAP$=""
13200 DATE_FLD1$=""
13210 DATE_FLD2$=""
13220 DATE_FLD3$=""
13230 DATE_FLD4$=""
13240 RPT_CMT1$=""
13250 RPT_CMT2$=""
13260 PRT_MODE$=""
13270 RPT_OUTDEV$=""
13280 RPT_VERT$=""
13290 RPT_HORIZ$=""
13300 RPT_AUX1$=""
13310 RPT_AUX2$=""
13320 RPT_AUX3$=""
13330 RPT_AUX4$=""
13340 RPT_LINES$=""
13350 RPT_FORMCODE$=""
13360 NOT_USED$=""
13370 UNUSED_1$=""
13380 UNUSED_2$=""
13390 UNUSED_3$=""
13400 UNUSED_4$=""
13410 UNUSED_5$=""
13420 UNUSED_6$=""
13430 RPT_JOBCARD$=""
13440 RPT_JOBCARD_FLG$=""
13450 RPT_NUM1=0
13460 RPT_NUM2=0
13470 BANK_CODE$=""
13480 PRT_DE_ITEM$=""
13980 GOSUB NUM_TO_STR
13990 REFRESH_FLG=1
13999 RETURN 
14000 ! 14000 - Enable/Disable groups - _ENABLE_FLG: 0=don't!, >1=corresponding key segment on, others off, -1=buttons and non-key fields on
14010 ENABLE_GROUPS:
14020 IF _ENABLE_FLG=0 THEN GOTO *RETURN
14970 ! IF _ENABLE_FLG>0 THEN CALL "*wingrp;Disable",FIELDS.GRP$; CALL "*wingrp;Disable",BUTTONS.GRP$
14980 IF _ENABLE_FLG<0 THEN CALL "*wingrp;Enable",FIELDS.GRP$; CALL "*wingrp;Enable",BUTTONS.GRP$
14990 RETURN 
15000 ! 15000 - Determine the changes that have been made before writing
15010 DETERMINE_CHGS:
15020 DIM _CHG_VAR$(47,"N")
15030 IF _ORIG.PRG_NAME$=_CUR.PRG_NAME$ OR PRG_NAME$=_CUR.PRG_NAME$ THEN GOTO *NEXT ELSE IF _ORIG.PRG_NAME$=PRG_NAME$ THEN _CHG2$=_CHG2$+SEP+MSG("PROG_N")+" = "+_CUR.PRG_NAME$,_CHG_VAR$(1,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PROG_N")+" = "+_CUR.PRG_NAME$
15040 IF _ORIG.RPT_SELEC$=_CUR.RPT_SELEC$ OR RPT_SELEC$=_CUR.RPT_SELEC$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_SELEC$=RPT_SELEC$ THEN _CHG2$=_CHG2$+SEP+MSG("SELECTION")+" = "+_CUR.RPT_SELEC$,_CHG_VAR$(2,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SELECTION")+" = "+_CUR.RPT_SELEC$
15050 IF _ORIG.RPT_DESC$=_CUR.RPT_DESC$ OR RPT_DESC$=_CUR.RPT_DESC$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_DESC$=RPT_DESC$ THEN _CHG2$=_CHG2$+SEP+MSG("DESC")+" = "+_CUR.RPT_DESC$,_CHG_VAR$(3,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("DESC")+" = "+_CUR.RPT_DESC$
15060 IF _ORIG.RPT_OPT$=_CUR.RPT_OPT$ OR RPT_OPT$=_CUR.RPT_OPT$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_OPT$=RPT_OPT$ THEN _CHG2$=_CHG2$+SEP+MSG("OPTIONS")+" = "+_CUR.RPT_OPT$,_CHG_VAR$(4,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OPTIONS")+" = "+_CUR.RPT_OPT$
15070 IF _ORIG.RPT_SEQ$=_CUR.RPT_SEQ$ OR RPT_SEQ$=_CUR.RPT_SEQ$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_SEQ$=RPT_SEQ$ THEN _CHG2$=_CHG2$+SEP+MSG("SEQ")+" = "+_CUR.RPT_SEQ$,_CHG_VAR$(5,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SEQ")+" = "+_CUR.RPT_SEQ$
15080 IF _ORIG.RPT_SHIPTO$=_CUR.RPT_SHIPTO$ OR RPT_SHIPTO$=_CUR.RPT_SHIPTO$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_SHIPTO$=RPT_SHIPTO$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_ST_A")+" = "+_CUR.RPT_SHIPTO$,_CHG_VAR$(6,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_ST_A")+" = "+_CUR.RPT_SHIPTO$
15090 IF _ORIG.RPT_AGEINV$=_CUR.RPT_AGEINV$ OR RPT_AGEINV$=_CUR.RPT_AGEINV$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AGEINV$=RPT_AGEINV$ THEN _CHG2$=_CHG2$+SEP+"Age Invoice on Inv or Due Date = "+_CUR.RPT_AGEINV$,_CHG_VAR$(7,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Age Invoice on Inv or Due Date = "+_CUR.RPT_AGEINV$
15100 IF _ORIG.RPT_REPTYPE$=_CUR.RPT_REPTYPE$ OR RPT_REPTYPE$=_CUR.RPT_REPTYPE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_REPTYPE$=RPT_REPTYPE$ THEN _CHG2$=_CHG2$+SEP+MSG("REPO_T")+" = "+_CUR.RPT_REPTYPE$,_CHG_VAR$(8,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("REPO_T")+" = "+_CUR.RPT_REPTYPE$
15110 IF _ORIG.RPT_ZEROBAL$=_CUR.RPT_ZEROBAL$ OR RPT_ZEROBAL$=_CUR.RPT_ZEROBAL$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_ZEROBAL$=RPT_ZEROBAL$ THEN _CHG2$=_CHG2$+SEP+"Print Zero Bal Inv = "+_CUR.RPT_ZEROBAL$,_CHG_VAR$(9,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Zero Bal Inv = "+_CUR.RPT_ZEROBAL$
15120 IF _ORIG.RPT_POSTAGE$=_CUR.RPT_POSTAGE$ OR RPT_POSTAGE$=_CUR.RPT_POSTAGE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_POSTAGE$=RPT_POSTAGE$ THEN _CHG2$=_CHG2$+SEP+"Post Aged Inv to Mater File = "+_CUR.RPT_POSTAGE$,_CHG_VAR$(10,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Post Aged Inv to Mater File = "+_CUR.RPT_POSTAGE$
15130 IF _ORIG.RPT_NAMEADD$=_CUR.RPT_NAMEADD$ OR RPT_NAMEADD$=_CUR.RPT_NAMEADD$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_NAMEADD$=RPT_NAMEADD$ THEN _CHG2$=_CHG2$+SEP+"Print Name and Address = "+_CUR.RPT_NAMEADD$,_CHG_VAR$(11,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Name and Address = "+_CUR.RPT_NAMEADD$
15140 IF _ORIG.RPT_INVRPT$=_CUR.RPT_INVRPT$ OR RPT_INVRPT$=_CUR.RPT_INVRPT$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_INVRPT$=RPT_INVRPT$ THEN _CHG2$=_CHG2$+SEP+"Invoice to Report = "+_CUR.RPT_INVRPT$,_CHG_VAR$(12,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Invoice to Report = "+_CUR.RPT_INVRPT$
15150 IF _ORIG.RPT_FISYR$=_CUR.RPT_FISYR$ OR RPT_FISYR$=_CUR.RPT_FISYR$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_FISYR$=RPT_FISYR$ THEN _CHG2$=_CHG2$+SEP+MSG("FY")+" = "+_CUR.RPT_FISYR$,_CHG_VAR$(13,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("FY")+" = "+_CUR.RPT_FISYR$
15160 IF _ORIG.RPT_PER$=_CUR.RPT_PER$ OR RPT_PER$=_CUR.RPT_PER$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_PER$=RPT_PER$ THEN _CHG2$=_CHG2$+SEP+MSG("CUST_P")+" = "+_CUR.RPT_PER$,_CHG_VAR$(14,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("CUST_P")+" = "+_CUR.RPT_PER$
15170 IF _ORIG.RPT_CCINV$=_CUR.RPT_CCINV$ OR RPT_CCINV$=_CUR.RPT_CCINV$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_CCINV$=RPT_CCINV$ THEN _CHG2$=_CHG2$+SEP+"Print Credit Card Invoices. = "+_CUR.RPT_CCINV$,_CHG_VAR$(15,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Credit Card Invoices. = "+_CUR.RPT_CCINV$
15180 IF _ORIG.RPT_AGEDATE$=_CUR.RPT_AGEDATE$ OR RPT_AGEDATE$=_CUR.RPT_AGEDATE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AGEDATE$=RPT_AGEDATE$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.RPT_AGEDATE$,_CHG_VAR$(16,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.RPT_AGEDATE$
15190 IF _ORIG.RPT_PTD$=_CUR.RPT_PTD$ OR RPT_PTD$=_CUR.RPT_PTD$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_PTD$=RPT_PTD$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_T_D")+" = "+_CUR.RPT_PTD$,_CHG_VAR$(17,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_T_D")+" = "+_CUR.RPT_PTD$
15200 IF _ORIG.RPT_RECAP$=_CUR.RPT_RECAP$ OR RPT_RECAP$=_CUR.RPT_RECAP$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_RECAP$=RPT_RECAP$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_R")+" = "+_CUR.RPT_RECAP$,_CHG_VAR$(18,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_R")+" = "+_CUR.RPT_RECAP$
15210 IF _ORIG.DATE_FLD1$=_CUR.DATE_FLD1$ OR DATE_FLD1$=_CUR.DATE_FLD1$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_FLD1$=DATE_FLD1$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD1$,_CHG_VAR$(19,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD1$
15220 IF _ORIG.DATE_FLD2$=_CUR.DATE_FLD2$ OR DATE_FLD2$=_CUR.DATE_FLD2$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_FLD2$=DATE_FLD2$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD2$,_CHG_VAR$(20,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD2$
15230 IF _ORIG.DATE_FLD3$=_CUR.DATE_FLD3$ OR DATE_FLD3$=_CUR.DATE_FLD3$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_FLD3$=DATE_FLD3$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD3$,_CHG_VAR$(21,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD3$
15240 IF _ORIG.DATE_FLD4$=_CUR.DATE_FLD4$ OR DATE_FLD4$=_CUR.DATE_FLD4$ THEN GOTO *NEXT ELSE IF _ORIG.DATE_FLD4$=DATE_FLD4$ THEN _CHG2$=_CHG2$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD4$,_CHG_VAR$(22,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"TopForm Date Format = "+_CUR.DATE_FLD4$
15250 IF _ORIG.RPT_CMT1$=_CUR.RPT_CMT1$ OR RPT_CMT1$=_CUR.RPT_CMT1$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_CMT1$=RPT_CMT1$ THEN _CHG2$=_CHG2$+SEP+MSG("COMMENTS_1")+" = "+_CUR.RPT_CMT1$,_CHG_VAR$(23,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMMENTS_1")+" = "+_CUR.RPT_CMT1$
15260 IF _ORIG.RPT_CMT2$=_CUR.RPT_CMT2$ OR RPT_CMT2$=_CUR.RPT_CMT2$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_CMT2$=RPT_CMT2$ THEN _CHG2$=_CHG2$+SEP+MSG("COMMENTS_2")+" = "+_CUR.RPT_CMT2$,_CHG_VAR$(24,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("COMMENTS_2")+" = "+_CUR.RPT_CMT2$
15270 IF _ORIG.PRT_MODE$=_CUR.PRT_MODE$ OR PRT_MODE$=_CUR.PRT_MODE$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_MODE$=PRT_MODE$ THEN _CHG2$=_CHG2$+SEP+MSG("PRIN_MODE")+" = "+_CUR.PRT_MODE$,_CHG_VAR$(25,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("PRIN_MODE")+" = "+_CUR.PRT_MODE$
15280 IF _ORIG.RPT_OUTDEV$=_CUR.RPT_OUTDEV$ OR RPT_OUTDEV$=_CUR.RPT_OUTDEV$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_OUTDEV$=RPT_OUTDEV$ THEN _CHG2$=_CHG2$+SEP+MSG("OUTPUT_DEV")+" = "+_CUR.RPT_OUTDEV$,_CHG_VAR$(26,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("OUTPUT_DEV")+" = "+_CUR.RPT_OUTDEV$
15290 IF _ORIG.RPT_VERT$=_CUR.RPT_VERT$ OR RPT_VERT$=_CUR.RPT_VERT$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_VERT$=RPT_VERT$ THEN _CHG2$=_CHG2$+SEP+MSG("VERT_P_M")+" = "+_CUR.RPT_VERT$,_CHG_VAR$(27,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("VERT_P_M")+" = "+_CUR.RPT_VERT$
15300 IF _ORIG.RPT_HORIZ$=_CUR.RPT_HORIZ$ OR RPT_HORIZ$=_CUR.RPT_HORIZ$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_HORIZ$=RPT_HORIZ$ THEN _CHG2$=_CHG2$+SEP+MSG("HORI_P_M")+" = "+_CUR.RPT_HORIZ$,_CHG_VAR$(28,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("HORI_P_M")+" = "+_CUR.RPT_HORIZ$
15310 IF _ORIG.RPT_AUX1$=_CUR.RPT_AUX1$ OR RPT_AUX1$=_CUR.RPT_AUX1$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AUX1$=RPT_AUX1$ THEN _CHG2$=_CHG2$+SEP+MSG("AUX_PC_1")+" = "+_CUR.RPT_AUX1$,_CHG_VAR$(29,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUX_PC_1")+" = "+_CUR.RPT_AUX1$
15320 IF _ORIG.RPT_AUX2$=_CUR.RPT_AUX2$ OR RPT_AUX2$=_CUR.RPT_AUX2$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AUX2$=RPT_AUX2$ THEN _CHG2$=_CHG2$+SEP+MSG("AUX_PC_2")+" = "+_CUR.RPT_AUX2$,_CHG_VAR$(30,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUX_PC_2")+" = "+_CUR.RPT_AUX2$
15330 IF _ORIG.RPT_AUX3$=_CUR.RPT_AUX3$ OR RPT_AUX3$=_CUR.RPT_AUX3$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AUX3$=RPT_AUX3$ THEN _CHG2$=_CHG2$+SEP+MSG("AUX_PC_3")+" = "+_CUR.RPT_AUX3$,_CHG_VAR$(31,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUX_PC_3")+" = "+_CUR.RPT_AUX3$
15340 IF _ORIG.RPT_AUX4$=_CUR.RPT_AUX4$ OR RPT_AUX4$=_CUR.RPT_AUX4$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_AUX4$=RPT_AUX4$ THEN _CHG2$=_CHG2$+SEP+MSG("AUX_PC_4")+" = "+_CUR.RPT_AUX4$,_CHG_VAR$(32,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("AUX_PC_4")+" = "+_CUR.RPT_AUX4$
15350 IF _ORIG.RPT_LINES$=_CUR.RPT_LINES$ OR RPT_LINES$=_CUR.RPT_LINES$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_LINES$=RPT_LINES$ THEN _CHG2$=_CHG2$+SEP+MSG("LINE_P_P")+" = "+_CUR.RPT_LINES$,_CHG_VAR$(33,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("LINE_P_P")+" = "+_CUR.RPT_LINES$
15360 IF _ORIG.RPT_FORMCODE$=_CUR.RPT_FORMCODE$ OR RPT_FORMCODE$=_CUR.RPT_FORMCODE$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_FORMCODE$=RPT_FORMCODE$ THEN _CHG2$=_CHG2$+SEP+MSG("SPEC_F_C")+" = "+_CUR.RPT_FORMCODE$,_CHG_VAR$(34,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("SPEC_F_C")+" = "+_CUR.RPT_FORMCODE$
15370 IF _ORIG.NOT_USED$=_CUR.NOT_USED$ OR NOT_USED$=_CUR.NOT_USED$ THEN GOTO *NEXT ELSE IF _ORIG.NOT_USED$=NOT_USED$ THEN _CHG2$=_CHG2$+SEP+MSG("NOT_IN_USE")+" = "+_CUR.NOT_USED$,_CHG_VAR$(35,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("NOT_IN_USE")+" = "+_CUR.NOT_USED$
15380 IF _ORIG.UNUSED_1$=_CUR.UNUSED_1$ OR UNUSED_1$=_CUR.UNUSED_1$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_1$=UNUSED_1$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_1$,_CHG_VAR$(36,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_1$
15390 IF _ORIG.UNUSED_2$=_CUR.UNUSED_2$ OR UNUSED_2$=_CUR.UNUSED_2$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_2$=UNUSED_2$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_2$,_CHG_VAR$(37,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_2$
15400 IF _ORIG.UNUSED_3$=_CUR.UNUSED_3$ OR UNUSED_3$=_CUR.UNUSED_3$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_3$=UNUSED_3$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_3$,_CHG_VAR$(38,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_3$
15410 IF _ORIG.UNUSED_4$=_CUR.UNUSED_4$ OR UNUSED_4$=_CUR.UNUSED_4$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_4$=UNUSED_4$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_4$,_CHG_VAR$(39,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_4$
15420 IF _ORIG.UNUSED_5$=_CUR.UNUSED_5$ OR UNUSED_5$=_CUR.UNUSED_5$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_5$=UNUSED_5$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_5$,_CHG_VAR$(40,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_5$
15430 IF _ORIG.UNUSED_6$=_CUR.UNUSED_6$ OR UNUSED_6$=_CUR.UNUSED_6$ THEN GOTO *NEXT ELSE IF _ORIG.UNUSED_6$=UNUSED_6$ THEN _CHG2$=_CHG2$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_6$,_CHG_VAR$(41,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("UNUSED")+" = "+_CUR.UNUSED_6$
15440 IF _ORIG.RPT_JOBCARD$=_CUR.RPT_JOBCARD$ OR RPT_JOBCARD$=_CUR.RPT_JOBCARD$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_JOBCARD$=RPT_JOBCARD$ THEN _CHG2$=_CHG2$+SEP+MSG("JOB_C_D")+" = "+_CUR.RPT_JOBCARD$,_CHG_VAR$(42,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("JOB_C_D")+" = "+_CUR.RPT_JOBCARD$
15450 IF _ORIG.RPT_JOBCARD_FLG$=_CUR.RPT_JOBCARD_FLG$ OR RPT_JOBCARD_FLG$=_CUR.RPT_JOBCARD_FLG$ THEN GOTO *NEXT ELSE IF _ORIG.RPT_JOBCARD_FLG$=RPT_JOBCARD_FLG$ THEN _CHG2$=_CHG2$+SEP+MSG("ALLO_C_M")+" = "+_CUR.RPT_JOBCARD_FLG$,_CHG_VAR$(43,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ALLO_C_M")+" = "+_CUR.RPT_JOBCARD_FLG$
15460 IF _ORIG.RPT_NUM1=_CUR.RPT_NUM1 OR RPT_NUM1=_CUR.RPT_NUM1 THEN GOTO *NEXT ELSE IF _ORIG.RPT_NUM1=RPT_NUM1 THEN _CHG2$=_CHG2$+SEP+MSG("ZZS_N_1")+" = "+STR(_CUR.RPT_NUM1),_CHG_VAR$(44,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ZZS_N_1")+" = "+STR(_CUR.RPT_NUM1)
15470 IF _ORIG.RPT_NUM2=_CUR.RPT_NUM2 OR RPT_NUM2=_CUR.RPT_NUM2 THEN GOTO *NEXT ELSE IF _ORIG.RPT_NUM2=RPT_NUM2 THEN _CHG2$=_CHG2$+SEP+MSG("ZZS_N_2")+" = "+STR(_CUR.RPT_NUM2),_CHG_VAR$(45,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("ZZS_N_2")+" = "+STR(_CUR.RPT_NUM2)
15480 IF _ORIG.BANK_CODE$=_CUR.BANK_CODE$ OR BANK_CODE$=_CUR.BANK_CODE$ THEN GOTO *NEXT ELSE IF _ORIG.BANK_CODE$=BANK_CODE$ THEN _CHG2$=_CHG2$+SEP+MSG("BANK_CODE")+" = "+_CUR.BANK_CODE$,_CHG_VAR$(46,1)="Y" ELSE _CHG1$=_CHG1$+SEP+MSG("BANK_CODE")+" = "+_CUR.BANK_CODE$
15490 IF _ORIG.PRT_DE_ITEM$=_CUR.PRT_DE_ITEM$ OR PRT_DE_ITEM$=_CUR.PRT_DE_ITEM$ THEN GOTO *NEXT ELSE IF _ORIG.PRT_DE_ITEM$=PRT_DE_ITEM$ THEN _CHG2$=_CHG2$+SEP+"Print Datailing of Paid Item = "+_CUR.PRT_DE_ITEM$,_CHG_VAR$(47,1)="Y" ELSE _CHG1$=_CHG1$+SEP+"Print Datailing of Paid Item = "+_CUR.PRT_DE_ITEM$
15990 RETURN 
16000 ! 16000 - Incorporate changes made by another user into the record
16010 INCORPORATE_CHGS:
16020 IF _CHG_VAR$(1,1)="Y" THEN PRG_NAME$=_CUR.PRG_NAME$
16030 IF _CHG_VAR$(2,1)="Y" THEN RPT_SELEC$=_CUR.RPT_SELEC$
16040 IF _CHG_VAR$(3,1)="Y" THEN RPT_DESC$=_CUR.RPT_DESC$
16050 IF _CHG_VAR$(4,1)="Y" THEN RPT_OPT$=_CUR.RPT_OPT$
16060 IF _CHG_VAR$(5,1)="Y" THEN RPT_SEQ$=_CUR.RPT_SEQ$
16070 IF _CHG_VAR$(6,1)="Y" THEN RPT_SHIPTO$=_CUR.RPT_SHIPTO$
16080 IF _CHG_VAR$(7,1)="Y" THEN RPT_AGEINV$=_CUR.RPT_AGEINV$
16090 IF _CHG_VAR$(8,1)="Y" THEN RPT_REPTYPE$=_CUR.RPT_REPTYPE$
16100 IF _CHG_VAR$(9,1)="Y" THEN RPT_ZEROBAL$=_CUR.RPT_ZEROBAL$
16110 IF _CHG_VAR$(10,1)="Y" THEN RPT_POSTAGE$=_CUR.RPT_POSTAGE$
16120 IF _CHG_VAR$(11,1)="Y" THEN RPT_NAMEADD$=_CUR.RPT_NAMEADD$
16130 IF _CHG_VAR$(12,1)="Y" THEN RPT_INVRPT$=_CUR.RPT_INVRPT$
16140 IF _CHG_VAR$(13,1)="Y" THEN RPT_FISYR$=_CUR.RPT_FISYR$
16150 IF _CHG_VAR$(14,1)="Y" THEN RPT_PER$=_CUR.RPT_PER$
16160 IF _CHG_VAR$(15,1)="Y" THEN RPT_CCINV$=_CUR.RPT_CCINV$
16170 IF _CHG_VAR$(16,1)="Y" THEN RPT_AGEDATE$=_CUR.RPT_AGEDATE$
16180 IF _CHG_VAR$(17,1)="Y" THEN RPT_PTD$=_CUR.RPT_PTD$
16190 IF _CHG_VAR$(18,1)="Y" THEN RPT_RECAP$=_CUR.RPT_RECAP$
16200 IF _CHG_VAR$(19,1)="Y" THEN DATE_FLD1$=_CUR.DATE_FLD1$
16210 IF _CHG_VAR$(20,1)="Y" THEN DATE_FLD2$=_CUR.DATE_FLD2$
16220 IF _CHG_VAR$(21,1)="Y" THEN DATE_FLD3$=_CUR.DATE_FLD3$
16230 IF _CHG_VAR$(22,1)="Y" THEN DATE_FLD4$=_CUR.DATE_FLD4$
16240 IF _CHG_VAR$(23,1)="Y" THEN RPT_CMT1$=_CUR.RPT_CMT1$
16250 IF _CHG_VAR$(24,1)="Y" THEN RPT_CMT2$=_CUR.RPT_CMT2$
16260 IF _CHG_VAR$(25,1)="Y" THEN PRT_MODE$=_CUR.PRT_MODE$
16270 IF _CHG_VAR$(26,1)="Y" THEN RPT_OUTDEV$=_CUR.RPT_OUTDEV$
16280 IF _CHG_VAR$(27,1)="Y" THEN RPT_VERT$=_CUR.RPT_VERT$
16290 IF _CHG_VAR$(28,1)="Y" THEN RPT_HORIZ$=_CUR.RPT_HORIZ$
16300 IF _CHG_VAR$(29,1)="Y" THEN RPT_AUX1$=_CUR.RPT_AUX1$
16310 IF _CHG_VAR$(30,1)="Y" THEN RPT_AUX2$=_CUR.RPT_AUX2$
16320 IF _CHG_VAR$(31,1)="Y" THEN RPT_AUX3$=_CUR.RPT_AUX3$
16330 IF _CHG_VAR$(32,1)="Y" THEN RPT_AUX4$=_CUR.RPT_AUX4$
16340 IF _CHG_VAR$(33,1)="Y" THEN RPT_LINES$=_CUR.RPT_LINES$
16350 IF _CHG_VAR$(34,1)="Y" THEN RPT_FORMCODE$=_CUR.RPT_FORMCODE$
16360 IF _CHG_VAR$(35,1)="Y" THEN NOT_USED$=_CUR.NOT_USED$
16370 IF _CHG_VAR$(36,1)="Y" THEN UNUSED_1$=_CUR.UNUSED_1$
16380 IF _CHG_VAR$(37,1)="Y" THEN UNUSED_2$=_CUR.UNUSED_2$
16390 IF _CHG_VAR$(38,1)="Y" THEN UNUSED_3$=_CUR.UNUSED_3$
16400 IF _CHG_VAR$(39,1)="Y" THEN UNUSED_4$=_CUR.UNUSED_4$
16410 IF _CHG_VAR$(40,1)="Y" THEN UNUSED_5$=_CUR.UNUSED_5$
16420 IF _CHG_VAR$(41,1)="Y" THEN UNUSED_6$=_CUR.UNUSED_6$
16430 IF _CHG_VAR$(42,1)="Y" THEN RPT_JOBCARD$=_CUR.RPT_JOBCARD$
16440 IF _CHG_VAR$(43,1)="Y" THEN RPT_JOBCARD_FLG$=_CUR.RPT_JOBCARD_FLG$
16450 IF _CHG_VAR$(44,1)="Y" THEN RPT_NUM1=_CUR.RPT_NUM1
16460 IF _CHG_VAR$(45,1)="Y" THEN RPT_NUM2=_CUR.RPT_NUM2
16470 IF _CHG_VAR$(46,1)="Y" THEN BANK_CODE$=_CUR.BANK_CODE$
16480 IF _CHG_VAR$(47,1)="Y" THEN PRT_DE_ITEM$=_CUR.PRT_DE_ITEM$
16990 RETURN 
20000 VIEW_REPORT:
20010 ! View Report Routine.
20020 IOLIST A$
20030 IOLIST R0$,W$
20040 ZZP=HFN
20050 OPEN (ZZP)"ZZP"
20060 ! 
20062 IOLIST X3$,MM1$,X4$,DD0$,XX$,AA9$
20080 IF CHANGE_FLG THEN GOSUB CHECK_CHANGES ELSE GOSUB ASSIGN_PRG
20085 IF ID$="RPT_VEIW" THEN R0$(2,2)="PV"
20260 K$=X3$(1,8),T1$="GLR...",%GUI=1; DIM P0$(128)
20265 %B_WINDATE_FMT$=%WINDATE_FMT$,%WINDATE_FMT$="YYYYMMDD",JJ$=DTE(0:"%Yl%Mz%Dz"); CALL "ZZWDTE;VALIDATE",JJ$,JJJ$,JJJJ$; X3$(21,6)=JJ$,X3$(15,6)=JJ$
20268 Q$="GL2JSS",X3$(174,4)="    ",X3$(178,6)="      ",X3$(146,8)=Q$; CALL "ZZAUDT",X3$,Q$+P0$(78),_ZZPARM,X9; X3$(185,1)="A",X3$(188,9)=P0$(23,9); WRITE (_ZZPARM,KEY=X3$(1,8))IOL=20062
20270 WRITE (ZZP,KEY=K$)X3$,X4$,T1$,R0$,W$,A$
20275 CLOSE (ZZP)
20280 ! PRINT 'DIALOGUE'(5,5,82,27,MSG("GLGJSU")),'CS',; CALL "GL2JSA"; PRINT 'POP'
20282 CALL "GL2JSA"
20285 CMD_STR$="END"
20290 RETURN 
21000 PRINT_REPORT:
21005 GOTO 20000
21010 ! Print Report Routine.
21020 DIM A$(71),R0$(125),W$(100),K$(8)
21030 IOLIST A$
21040 IOLIST R0$,W$
21050 ZZP=HFN
21060 OPEN (ZZP)"ZZP"
21070 ! 
21080 A$(1,6)=PRG_NAME$
21090 A$(7,12)=RPT_SELEC$; A$(19,40)=RPT_DESC$
21100 A$(59,12)=RPT_OPT$; A$(71,1)=RPT_SEQ$,A$(72,1)=RPT_SHIPTO$
21110 ! 
21120 R0$(1,1)=PRT_MODE$; R0$(2,6)=RPT_OUTDEV$(1,2)+"    "
21130 R0$(9,1)=RPT_VERT$; R0$(10,1)=RPT_HORIZ$
21140 R0$(11,1)=RPT_AUX1$; R0$(12,1)=RPT_AUX2$
21150 R0$(13,1)=RPT_AUX3$; R0$(14,1)=RPT_AUX4$
21160 R0$(15,2)=RPT_LINES$; R0$(17,1)=RPT_FORMCODE$
21170 R0$(65,60)=RPT_JOBCARD$; R0$(125,1)=RPT_JOBCARD_FLG$
21180 ! 
21190 IF RPT_SEQ$="1" THEN {
21200 IF CUST_START$="" OR CUST_START$="          " THEN W$(1,10)="          " ELSE W$(1,10)=CUST_START$
21210 IF CUST_END$="" OR CUST_END$="          " THEN W$(11,10)="~~~~~~~~~~" ELSE W$(11,10)=CUST_END$ }
21220 IF RPT_SEQ$="2" THEN {
21230 IF SLS_START$="" OR SLS_START$="    " THEN W$(1,4)="    " ELSE W$(1,4)=SLS_START$
21240 IF SLS_END$="" OR SLS_END$="    " THEN W$(5,4)="~~~~" ELSE W$(5,4)=SLS_END$
21250 IF CUST_START$="" OR CUST_START$="          " THEN W$(9,10)="          " ELSE W$(9,10)=CUST_START$
21260 IF CUST_END$="" OR CUST_END$="          " THEN W$(19,10)="~~~~~~~~~~" ELSE W$(19,10)=CUST_END$ }
21270 K$=X3$(1,8)
21280 T1$="GLR..."
21290 WRITE (ZZP,KEY=K$)X3$,X4$,T1$,R0$,W$,A$
21295 CLOSE (ZZP)
21300 RUN "AR2RQA"
21310 RETURN 
22000 ! 22000,10 REM "G/L Recurring Journal Entries <GL2JSS>
22010 X0$="GL2JSS",X1$="Recurring G/L Journals"
22020 DIM S$(20)
22030 K0=12,K1=1
22040 C9=-1
22050 REM "
22060 _ZZPARM=HFN; OPEN (_ZZPARM)"ZZPARM"; FIND (_ZZPARM,KEY=FID(0)+"      ")X3$,*,X4$
22070 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 24270
22080 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=22085)
22090 X2=2
22100 L0$="GLR   "
22110 K9$="GL2JSA",K9=LEN(K9$)
22120 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
22130 REM "IOLISTS
22140 IOLIST A$(1)
22150 IOLIST R0$,W$,W[0],W[1],W[2],W[3],W[4]
22160 REM "FILES
22170 DIM Z[NUM(X3$(60,3))]
22180 Z$="01X ZZS...  02O GLR...  06O ZZPARM  07O ZZP...  "
22190 Z$=Z$+"07O ZZP...  "
22200 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 22205,24270
22210 CALL "ZZINFO",Z[2],X0,X3$,R0,R1,0,0,0,0,0,""; IF R0=0 THEN GOTO 24000
22220 READ (Z[6],KEY=X3$(9,3)+"G/L",DOM=24270)F9$
22240 REM "
22250 DIM A$(78+K9)
22260 A$(1,LEN(K9$))=K9$
22270 A$(65+K9,1)="1",C9=0
22280 READ (Z[1],KEY=A$(1,12+K9),DOM=22285)A$(1)
22290 T9$="123456789",T0=NUM(A$(65+K9,1)),T9$=T9$(1,LEN(L0$)/6)
22300 T0$=L0$((T0-1)*6+1,6),T0$="ZZX"+T0$(1,3)
22310 GOSUB 23930
22320 ADDR T0$,ERR=22325
22330 GOSUB 23190
22340 REM "
22350 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
22360 DIM W[4]
22370 DIM A$(78+K9)
22380 A$(1,0+K9)=K9$+A1$
22390 ! PRINT 'CF',
22400 GOSUB 23450
22410 REM "KEY SEQ
22420 IF X2=3 THEN GOTO 22500
22430 X0=-1,C0=0,X1=0,C9=0,Z9=0
22440 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 24250
22450 ON X0 GOTO 22460,22500
22460 REM "Selection Code
22470 ! CALL "ZZENTR","SXUX",A{ALL},A$,X4$,X3$,11,3+V0,1+K9,12,C0,"","{1"+X$,K9$,"GL2JBS00","ZZS","",""; IF ABS(C0)>4 THEN GOSUB 23350; ON C0 GOTO 22450,22455
22480 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 22470,23600,24250,23755
22490 GOTO 22440
22500 REM "
22510 Z9=-1
22520 A1$=K9$+A$(LEN(K9$)+1,12),A$(1,LEN(K9$))=K9$
22530 READ (Z[1],KEY=A1$,DOM=22590)IOL=22140,IOL=22150
22540 IF A$(66+K9,6)=S$(1,6) THEN A$(66+K9,6)=D0$
22550 A$(72+K9,6)=F9$(250,4)+STR(P0:"00")
22560 Z9=0
22570 IF A$(65+K9,1)<>STR(T0) THEN GOSUB 23670
22580 GOTO 22650
22590 REM "
22600 A$(65+K9,1)=STR(T0)
22610 IF POS(" "<>A1$(7))=0 THEN GOSUB 23450; GOTO 22635
22620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 22635,22630
22630 GOTO 22340
22640 GOTO 22830
22650 REM "
22660 GOSUB 23300
22670 REM "
22675 REFRESH_FLG=1
22680 RETURN 
22690 CALL "ZZPROM","3",X3$,Z,"","","V",X0
22700 ON Z+1 GOTO 22770,22710,22770,22710,22710,22710,23820,23500,22340,23075
22710 IF Z=2 THEN GOSUB 23560; GOTO 22670
22720 GOSUB 23760
22730 FLAG$=""
22740 IF C0<>0 THEN CALL "AR2DTE",X3$,X4$,A$(72+K9,6),FLAG$
22750 IF FLAG$="*" THEN GOTO 24270
22760 ON Z GOTO 23090,22770,22340,24250,22340,23500
22770 REM "MODIFY
22780 X0=X0-1; IF Z9=1 THEN GOTO 22815 ELSE IF Z9=0 THEN Z9=1
22790 EXTRACT (Z[1],KEY=A1$,DOM=22810)IOL=22140,IOL=22150
22800 C9=1
22810 GOSUB 23300
22820 IF Z<0 THEN GOTO 22870 ELSE GOTO 22830
22830 REM "DATA SEQ
22840 C0=0,X0=-1,X1=1
22850 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
22860 IF C0>3 OR X0<0 THEN GOTO 22670
22870 ON X0 GOTO 22880,22910,22950,22995,23040,22670
22880 REM "Report Sub-Title
22885 RETURN 
22890 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,38,3+V0,13+K9,40,C0,"","{3"+X$,"","GL2JBS02","","",""
22900 GOTO 22850
22910 REM "Options
22920 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,11,4+V0,53+K9,12,C0,"","{3"+X$,"","GL2JBS04","","",""
22930 IF POS(" "<>A$(59,12))=0 THEN PRINT @(11,4),"( Normal )",
22940 GOTO 22850
22950 REM "Report Sequence
22960 T$=A$(65+K9,1); IF LEN(L0$)=6 THEN GOTO 22990
22970 CALL "ZZENTR","ZRU",A{ALL},A$,X4$,X3$,38,4+V0,65+K9,1,C0,"","{3"+X$,T9$,"GL2JBS06","","",""
22980 IF T$<>A$(65+K9,1) THEN GOSUB 23670
22990 GOTO 22850
23000 IF C0<>2 THEN L9=0
23010 CALL T0$,ERR=23015,X3$,X4$,Y0$,W$,W{ALL},0,C0,L9
23020 IF ABS(C0)>4 THEN GOSUB 23380; GOTO 23010
23030 GOTO 22850
23040 REM "Transaction date
23050 GOTO 22850
23060 CALL "ZZENTR","D",A{ALL},A$,X4$,X3$,38,14+V0,66+K9,6,C0,"","{3"+X$,T9$,"GL2JBS06","","",""
23070 GOTO 22850
23080 IF R0$>"" THEN R0$(1,7)="IT",R0$(8,1)="N" ELSE DIM R0$(30); R0$(1,7)="IT",R0$(8,1)="N",R0$(8,9)="NNN    66"; GOSUB 23560
23090 REM "Write Print Data
23100 IF R0$="" THEN CALL "ZZRPTO",X3$,X4$,Y0$,R0$,R{ALL},4,C0,X0
23110 T1$=L0$((T0-1)*6+1,6),K$=X3$(1,8)
23120 IF R0$(1,1)<>"Q" THEN GOTO 23150 ELSE Z$="07C         07O ZZQ     ",K9$="",K$=DAY,K$=K$(7,2)+K$(1,2)+K$(4,2),K$=R0$(2,6)+X3$(162,1)+R0$(17,1)+K$+STR(TIM*100:"0000")+" "+A$(1,6)+X3$(9,3)+X3$(40,3)
23130 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0; ON Z0 GOTO 23135,24270
23140 ON POS(R0$(1,1)="IQS") GOTO 23180,23150,23160,23175
23150 WRITE (Z[7],KEY=K$)X3$,X4$,T1$,R0$,W$,IOL=22140; GOTO 23180
23160 WRITE (Z[7],KEY=K$(1,19),DOM=23170)K$,X3$,X4$,T1$,R0$,W$,IOL=22140; GOTO 23180
23170 K$(19,1)=CHR(ASC(K$(19,1))+1); GOTO 23160
23180 GOTO 24270
23190 REM "BACKGROUND
23200 ! PRINT (0,ERR=23185)'SB',
23210 GOSUB 23530
23220 CALL T0$,ERR=23225,X3$,X4$,Y0$,W$,W{ALL},2,0,L0
23230 IF X3$(185,1)<>"A" THEN GOTO 23290
23240 ! PRINT @(8,8+L0),"To be updated in fiscal year:"
23250 ! PRINT @(19,10+L0),"Accounting period:"
23260 ! PRINT @(18,12+L0),"Period ending date:",
23270 REM PRINT @(20,14+L0),"Transaction date: "
23280 ! PRINT (0,ERR=23275)'SF',
23290 RETURN 
23300 REM "DISPLAY DATA
23310 GOSUB 23450
23320 ! PRINT @(38,3+V0),A$(13+K9,40),@(11,4+V0),A$(53+K9,12),@(38,4+V0),A$(65+K9,1),
23330 IF X3$(185,1)="A" THEN START_FISCAL$=F0$(9,4),START_ACCTPD$=STR(P0:"00"),ML_ENDING_PER$=FND$(D0$) ! THEN PRINT @(38,8+L0),F0$(9,4),@(38,10+L0),P0:"00",@(38,12+L0),FND$(D0$),
23340 REM PRINT @(38,14+L0),FND$(A$(66+K9,6))
23350 IF POS(" "<>A$(59,12))=0 THEN ! PRINT @(11,4),"( Normal )",
23360 CALL T0$,ERR=23365,X3$,X4$,Y0$,W$,W{ALL},1,0,L0
23370 RETURN 
23380 REM "WHOLE SCREEN
23390 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
23400 GOSUB 23190
23410 GOSUB 23190
23420 IF C9>=0 THEN GOSUB 23300 ELSE GOSUB 23450
23430 IF ABS(C0)>4 THEN C0=ABS(C0)-5
23440 RETURN 
23450 REM "DISPLAY KEYS
23460 IF C9<0 THEN GOTO 23440
23470 ! PRINT @(11,3+V0),A$(1+K9,12),
23480 ! IF POS(" "<>A$(7,12))=0 THEN PRINT @(11,3),"(Standard)" ELSE PRINT @(11,3),A$(7,12),
23490 RETURN 
23500 REM "DELETE
23510 REMOVE (Z[1],KEY=A1$,DOM=23515)
23520 GOTO 22630
23530 REM "ALT KEY DATA READS
23540 ! PRINT @(0,3),"Selection:",@(25,3),"Description:",@(2,4),"Options:",@(28,4),"Sequence:",@(0,5),Z0$,
23550 RETURN 
23560 REM "ADD ENTRY
23570 IF Z9=0 THEN GOTO 23590
23580 WRITE (Z[1],KEY=A1$)IOL=22140,IOL=22150
23590 Z9=2; RETURN 
23600 REM "NEXT ENTRY IN FILE
23610 ON 10*FPT(C0)+2 GOTO 23655,23615
23620 A1$=KEY(Z[1],END=22450)
23630 IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 22450
23640 A$(1,LEN(A1$))=A1$
23650 GOSUB 23450
23660 GOTO 22525
23670 REM "
23680 V9$="1103  3803  1104  3804  "
23690 IF T0$<>"" THEN DROP T0$,ERR=23695; GOTO 23690
23700 T0=NUM(A$(65+K9,1))
23710 T0$=L0$((T0-1)*6+1,6),T0$="ZZX"+T0$(1,3)
23720 IF Z9<>0 THEN W$=""
23730 ADDR T0$,ERR=23735
23740 GOSUB 23380
23750 RETURN 
23760 REM "UPDATE
23770 S3=0
23780 IF Z9=1 THEN CALL "ZZPROM","Y",X3$,S3,"Do you wish to update the changes? (Yes, No):","","",0
23790 IF Z9<0 THEN CALL "ZZPROM","Y",X3$,S3,"Do you wish to update this New selection? (Yes, No):","","",0
23800 IF S3=0 THEN GOSUB 23560
23810 RETURN 
23820 REM "OPTIONS
23830 PRINT @(0,3),'CE',
23840 CALL "ZZRPTO",X3$,X4$,Y0$,R0$,R{ALL},4,C0,X0
23850 PRINT @(0,3),'CE',
23860 GOSUB 23380
23870 Z9=1
23880 GOTO 22670
23890 REM "CUSTOM PROGRAMMING ROUTINES
23900 REM "Modified stmts: 
23910 REM "Added stmts: 
23920 REM "Deleted stmts: 
23930 REM 
23940 P0=NUM(F9$(254,2))+1
23950 FIND (Z[6],KEY=X3$(9,3)+"G/LYE"+F9$(250,4),DOM=23990)F0$
23960 IF STR(P0:"00")>F0$(13,2) THEN F9$(250,4)=STR(NUM(F9$(250,4))+1:"0000"),P0=P0-NUM(F0$(13,2)); GOTO 23950
23970 D0$=F0$(21+(P0-1)*6,6)
23980 RETURN 
23990 MSGBOX "The period ending dates or parameters have not been set",MSG("WARNING"),"STOP,TIM=8"; K9$="",CMD_STR$="E"; EXIT 
24000 REM "
24010 CALL "ZZPROM",".4",X3$,S3,"There are no Journal Entries to print.","","",0; GOTO 24250
24020 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
24030 REM "ERROR PROCESSING
24040 IF ERR=69 THEN GOTO 24220
24050 Y5=ERR,Y6=TCB(5)
24060 SETERR 24070; Y8$=LST(PGM(Y6))
24070 SETERR 24030
24080 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
24090 ON Y7 GOTO 24100,24150,24270,24110,24140
24100 RETRY 
24110 SETERR 24130
24120 EXECUTE Y7$
24130 SETERR 24030; RETRY 
24140 SETERR 0000; RETRY 
24150 REM " TRANSFER CONTROL
24160 GOTO 22335
24170 GOTO 24270
24180 SETESC 24210
24190 SETERR 24210
24200 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
24210 SETERR 24030; RETURN 
24220 REM "CTRL LOGIC
24230 SETERR 24030; GOSUB 23380
24240 ON C9 GOTO 22450,22870
24250 REM "
24260 K9$="ZMENU"
24270 REM "END PROGRAM
24280 IF T0$<>"" THEN DROP T0$,ERR=24285; GOTO 24280
24290 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
24300 IF K9$>"" THEN RUN K9$
24310 SETERR 24330
24320 Q1$=A1$; EXIT 
24330 BEGIN ; SETESC 24210
24340 RUN "ZMENU"
24350 END 
45000 ! 45000,10
45010 ASSIGN_LIB:
45020 ! Output Option
45025 R0$=PAD(R0$,128," ")
45027 IF LEN(A$)=0 THEN DIM A$(71),R0$(125),W$(100),K$(8)
45030 IF NUM(A$(71,1))=0 THEN A$(71,1)="1"
45040 PRT_MODE$=R0$(1,1),RPT_OUTDEV$=R0$(2,2)
45050 RPT_VERT$=R0$(9,1),RPT_HORIZ$=R0$(10,1)
45060 RPT_AUX1$=R0$(11,1),RPT_AUX2$=R0$(12,1)
45070 RPT_LINES$=R0$(15,2),RPT_FORMCODE$=R0$(17,1)
45080 RPT_JOBCARD$=R0$(65,60),RPT_JOBCARD_FLG$=R0$(125,1)
45090 RPT_AUX3$=R0$(13,1),RPT_AUX4$=R0$(14,1)
45100 ! Selection Options
45110 RPT_SELEC$=A$(7,12),RPT_DESC$=A$(19,40),RPT_OPT$=A$(59,12),RPT_SEQ$=A$(71,1)
45120 IF STP(RPT_OPT$)="" THEN RPT_OPT$=""
45150 IF STP(RPT_SELEC$)="" THEN RPT_SELEC$=""
45160 START_FISCAL$=A$(78,4),START_ACCTPD$=A$(82,2)
45170 REFRESH_FLG=1
45180 RETURN 
45190 ASSIGN_PRG:
45200 A$(1,6)=ARG_1$,A$(7,12)=RPT_SELEC$,A$(19,40)=RPT_DESC$,A$(59,12)=RPT_OPT$,A$(71,1)=RPT_SEQ$
45210 A$(59,12)=RPT_OPT$; A$(71,1)=RPT_SEQ$
45220 ! 
45230 R0$(1,1)=PRT_MODE$; R0$(2,6)=RPT_OUTDEV$(1,2)+"    "
45240 R0$(9,1)=RPT_VERT$; R0$(10,1)=RPT_HORIZ$
45250 R0$(11,1)=RPT_AUX1$; R0$(12,1)=RPT_AUX2$
45260 R0$(13,1)=RPT_AUX3$,R0$(14,1)=RPT_AUX4$
45270 R0$(15,2)=RPT_LINES$; R0$(17,1)=RPT_FORMCODE$
45280 R0$(65,60)=RPT_JOBCARD$; R0$(125,1)=RPT_JOBCARD_FLG$
45310 A$(78,6)=START_FISCAL$+START_ACCTPD$,A$(72,6)=MID(REC_DAT$,NUM(START_ACCTPD$)*6-5,6)
45320 RETURN 
45340 IF LEN(START_FISCAL$)>4 THEN TF_YEAR$=%CR_YEAR$ ELSE TF_YEAR$=START_FISCAL$
45350 IF LEN(START_ACCTPD$)>2 THEN PER$=%CR_PD$ ELSE PER$=START_ACCTPD$
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56001 ! "215277-GL Recurring Journal Posting-Entry List Locks Up TF         
