0010 ! ZPGMEA - Maintain/Init Contact Record
0035 REM "5.7 - 02/22/16 - 12.801944 - tma - SSP# 282870
0037 REM "282870-She is trying to access the C/M List type ALL and getting   
0040 REM "Copyright 2016 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! 15,5
0055 IF TCB(13)=1 THEN BEGIN 
0060 _CUSTOMER$=%CUSTOMER$
0065 PROCESS "ZPGMEA","../ZPG/ZP.EN"
0070 %CUSTOMER$=_CUSTOMER$
0075 EXIT 
0100 INIT:! 100,5 - Initialization Routine
0300 ! 300,5 - Iolists & Templates
0305 GLOBAL_IOL:IOLIST %CUST_NAME$,%TM_SALES_NAME$,%SOURCE_OF_LEAD$,%CONT_CAT_DESC$,%SIC_DESC$,%ACTION_CODE$,%ACTION_CODE1$,%ACTION_CODE2$,%CUSTOMER$
0310 LIST_BOX_IOL:IOLIST ZP6.SELECTION_CODES$,ZP6.SELECTION_CODE_DESC$
0315 ZP0_HEADER_IOL:IOLIST C$,C[0],C[1]
0320 TRANSFER_IOL:IOLIST CUSTOMER$,CUST_DIV$,CUST_CODE$,CUSTOMER$,BAROMETER$,FOLLOW_UP_DESC$,_ZP4,_AR1,P6$,CONT_NAME$,CONT_ADDR_1$,CONT_ADDR_2$,CONT_LONG_CITY$,CONT_ST$,CONT_ZIP_CODE$,CONT_FAX$,CONT_LONG_LOOKUP_SEQ$,CONT_GREETING$,CONT_PHONE$,SPER_CODE$,NEXT_ID,NEXT_FOLDER
0325 ZP4_IOL:IOLIST A$,A{ALL}
0330 ZP5_IOL:IOLIST DATE_OF_NOTE$,TIME_OF_NOTE$,SEQ_NUM$,ACTION_CODE$,ACTION_COMMENT$,NOTES_LINE_2$,NOTES_LINE_3$,NOTEPAD_LINE_4$,NEW_BAROMETER$,NOTES$
0335 SORT_IOL:IOLIST OLD_ZPA_KEY$,OLD_ZPD_KEY$,OLD_ZPE_KEY$
0402 ! ^100,5 - Constants & Functions
0405 DIM C[1],A[1]
0410 MAX_ALLOW=11
0415 ! DEF FND$(LOCAL X$)=MID(X$,3,2)+"/"+MID(X$,5,2)+"/"+STR(DEC(MID(X$,1,1))+125)+MID(X$,2,1)
0416 DEF FND$(Z9$)=Z9$(NUM(%X3_DATE_FMT$)*2+1,2)+%X3_DATE_DLM$+Z9$(7-NUM(%X3_DATE_FMT$)*2,2)+%X3_DATE_DLM$+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
0420 ISWINDX_FLG=TCB(88)
0430 IF ISWINDX_FLG>0 AND %WDX$<>"[WDX]" THEN %WDX$="[WDX]"
0431 CALL "ZZ2FNC;GETUSERNAME",USERNAME$
0440 CALL "ZZWDTE;TF_TODAY",%TODAY$
0500 ! 500,5 - Open files
0503 GOSUB SETUP_MESSAGES
0505 _FILE_NAME$="AR1"+%C$; _AR1=HFN; OPEN (_AR1,ERR=OPEN_ERR,IOL=*)_FILE_NAME$
0510 _FILE_NAME$="ZP0"+%C$; _ZP0=HFN; OPEN (_ZP0,ERR=OPEN_ERR,IOL=*)_FILE_NAME$
0515 _FILE_NAME$="ZP4"+%C$; _ZP4=HFN; OPEN (_ZP4,ERR=OPEN_ERR,IOL=*)_FILE_NAME$
0520 _FILE_NAME$="ZP5"+%C$; _ZP5=HFN; OPEN (_ZP5,ERR=OPEN_ERR,IOL=*)_FILE_NAME$
0525 _FILE_NAME$="ZP6"+%C$; _ZP6=HFN; OPEN (_ZP6,ERR=OPEN_ERR,IOL=*)_FILE_NAME$
0526 _FILE_NAME$="ZP7"+%C$; _ZP7=HFN; OPEN (_ZP7,ERR=OPEN_ERR,IOL=*)_FILE_NAME$
0530 _FILE_NAME$="ZP8"+%C$; _ZP8=HFN; OPEN (_ZP8,ERR=OPEN_ERR,IOL=*)_FILE_NAME$
0535 _FILE_NAME$="ZZPARM"; ZZPARM=HFN; OPEN (ZZPARM,ERR=OPEN_ERR)_FILE_NAME$
0540 GOSUB OPEN_PROFILE_FILE
0545 _FILE_NAME$="ZPA"+%C$; _ZPA=HFN; OPEN (_ZPA,ERR=OPEN_ERR)_FILE_NAME$
0550 _FILE_NAME$="ZPD"+%C$; _ZPD=HFN; OPEN (_ZPD,ERR=OPEN_ERR)_FILE_NAME$
0555 _FILE_NAME$="ZPE"+%C$; _ZPE=HFN; OPEN (_ZPE,ERR=OPEN_ERR)_FILE_NAME$
0560 _FILE_NAME$="ZPB"+%C$; _ZPB=HFN; OPEN (_ZPB,ERR=OPEN_ERR)_FILE_NAME$
0565 _FILE_NAME$="ZP3"+%C$; _ZP3=HFN; OPEN (_ZP3,ERR=OPEN_ERR)_FILE_NAME$
0600 ! ^100,5 - Get parameters
0605 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0610 IF X1>0 THEN CMD_STR$="E"; EXIT 
0615 DIM P8$(32); READ (ZZPARM,KEY=%C$+"T/M",DOM=*NEXT)P8$
0620 W9$=""; CALL "RTGPRM",ERR=0650,W9$
0625 IF W9$<>"" THEN {
0630 OPEN (HFN,ERR=*NEXT)"RT6"+%C$; _RT6=LFO
0635 OPEN (HFN,ERR=*NEXT)"RT7"+%C$; _RT7=LFO
0640 IF NOT(_RT6) OR NOT(_RT7) THEN W9$=""
0645  }
0650 DIM S9$(255); FIND (ZZPARM,KEY="osec"+%X3_OP_ID$,DOM=*NEXT)S9$
0652 ! FIND (ZZPARM,KEY="PATH"+%X3$(40,3),DOM=NO_PATH)EXCEL$,WORDPAD$,WORDLINK$
0655 EXIT 
0660 ! 
0670 OPEN_ERR: MSGBOX _MSG_FILOPNERR1$+QUO+_FILE_NAME$+QUO+SEP+_MSG_DIRECTORY$+LWD+SEP+_MSG_PREFIX$+PFX,MSG(ERR),"!"
0675 CMD_STR$="END"
0680 RETURN 
0685 ! 
0700 POST_DISPLAY:! ^100,5 - Disable buttons and fields
0705 PRINT 'MESSAGE'(DEF 60)
0710 CALL "*wingrp;disable",FIELDS.GRP$
0715 CALL "*wingrp;disable",BUTTONS.GRP$
0720 NEXT_ID=LIST_TYPE_CODE.CTL,REFRESH_FLG=1
0721 IF STP(%LIST$,3)<>"" AND STP(%CONTACT$,3)<>"" THEN LIST_TYPE_CODE$=%LIST$,CONT_CODE$=%CONTACT$,CALLED$="Y"; GOSUB FIND_REC
0725 EXIT 
0730 ! 
0800 CHECK_CHANGES:! ^100,5
0803 IF %TM_CONTACT$="Y" THEN CHANGE_FLG=1 ! SSP238505 jdf
0805 IF CHANGE_FLG THEN {
0810 MSGBOX MSG("REC_ALTERD"),MSG("UPDATE"),"?,YESNO",ANSWER$
0815 IF ANSWER$="YES" THEN GOTO WRITE_REC
0820 CHANGE_FLG=0,CHANGE_T_CODE=0
0825  }
0830 REFRESH_FLG=1,CHANGE_FLG=0,CHANGE_T_CODE=0
0835 RETURN 
0840 ! 
1000 FIND_REC:! ^1000,5 - Lookup record
1005 IF STP(LIST_TYPE_CODE$,1)="" THEN {
1010 MSGBOX MSG("LIST_T_C")+" "+MSG("IS_MISSING"),MSG("ATTENTION"),"!"
1015 NEXT_ID=LIST_TYPE_CODE.CTL,REFRESH_FLG=1,CHANGE_FLG=0
1020 EXIT 
1025  }
1030 READ (_ZP0,KEY=LIST_TYPE_CODE$)IOL=ZP0_HEADER_IOL
1035 IF C[0]<>0 THEN {
1040 CONT_CODE$=PAD(CONT_CODE$,6,0,"0")
1045  } ELSE {
1050 CONT_CODE$=PAD(CONT_CODE$,6)
1055  }
1060 GOSUB CHECK_CONTACT_RANGE
1065 IF RANGE_OK$<>"Y" THEN {
1070 CONT_CODE$="",REFRESH_FLG=1,NEXT_ID=CONT_CODE.CTL
1075 EXIT 
1080  }
1085 READ (_ZP4,KEY=LIST_TYPE_CODE$+CONT_CODE$,DOM=NEW_CONTACT); GOSUB SET_OLD_SORT_KEY_VALUES
1089 NEW_OR_EXISTING:
1090 IF STP(DATE_ENTERED$,3)="" THEN CALL "ZZWDTE;TF_TODAY",DATE_ENTERED$
1091 IF BAROMETER$=" " THEN BAROMETER$="0"
1093 CALL "*wingrp;enable",FIELDS.GRP$
1095 CALL "*wingrp;enable",BUTTONS.GRP$
1100 CALL "*wingrp;disable",KEY.GRP$
1105 CALL "*wingrp;disable",AUTO.GRP$
1110 REFRESH_FLG=1,NEXT_ID=CONT_NAME.CTL,CHANGE_FLG=0,_ENABLE_FLG=1
1111 OLD_BAROMETER$=BAROMETER$,CUSTOMER$=CUST_DIV$+CUST_CODE$ ! SSP#249673
1113 IF NEW_CONT THEN GOSUB GET_CUST_INFO ! SSP238505 jdf
1115 EXIT 
1120 ! 
1150 SET_OLD_SORT_KEY_VALUES:
1160 OLD_ZPA_KEY$=LIST_TYPE_CODE$+CONT_LONG_LOOKUP_SEQ$+CONT_CODE$
1170 OLD_ZPD_KEY$=CONT_PHONE$(1,10)+LIST_TYPE_CODE$+CONT_CODE$; IF POS(X3$(9,3)="060",3)<>0 THEN OLD_ZPD_KEY$=CONT_PHONE$(1,12)+LIST_TYPE_CODE$+CONT_CODE$
1175 SELECTION_CODES$=SEL_CODE_01$+SEL_CODE_02$+SEL_CODE_03$+SEL_CODE_04$+SEL_CODE_05$+SEL_CODE_06$+SEL_CODE_07$+SEL_CODE_08$+SEL_CODE_09$+SEL_CODE_10$+SEL_CODE_11$
1180 OLD_ZPE_KEY$=CONT_PHONE$(4,7)+CONT_PHONE$(1,3)+LIST_TYPE_CODE$+CONT_CODE$
1190 SET_OLD_SORT_KEY_VALUES_END:RETURN 
1195 ! 
1200 CLEAR_REC:! ^100,5 - Initialize fields and clear globals
1202 SAVE_LIST$=""; IF STP(LIST_TYPE_CODE$,3)<>"" THEN SAVE_LIST$=LIST_TYPE_CODE$
1205 IF ID$<>"BUTTON_1" THEN GOSUB CHECK_CHANGES ! SSP238505 jdf
1210 READ DATA FROM "" TO IOL=IOL(_ZP4)
1211 CUSTOMER$=""
1215 READ DATA FROM "" TO IOL=GLOBAL_IOL
1220 READ DATA FROM "",REC=CST$ TO IOL=IOL(_AR1)
1221 READ DATA FROM "" TO IOL=SORT_IOL
1225 CALL "*wingrp;disable",BUTTONS.GRP$
1230 CALL "*wingrp;disable",FIELDS.GRP$
1235 CALL "*wingrp;enable",KEY.GRP$
1240 NEXT_ID=LIST_TYPE_CODE.CTL,NEXT_FOLDER=FLDR.ZPGMEA.1.CTL
1242 IF STP(SAVE_LIST$,3)<>"" THEN LIST_TYPE_CODE$=SAVE_LIST$,NEXT_ID=CONT_CODE.CTL; CALL "*wingrp;enable",AUTO.GRP$
1245 REFRESH_FLG=1,CHANGE_FLG=0,CHANGE_T_CODE=0
1247 IF ID$="BUTTON_1" AND %ARGMAA_FLG=1 THEN CMD_STR$="E" ! SSP238505 jdf
1250 EXIT 
1255 ! 
1300 WRITE_REC: CHANGE_FLG=0 ! ^100,5 - Write the record
1302 IF NOT(%ARGMAA_FLG) THEN %CUST_DIV$="",%CUST_CODE$="" ! SSP238505 jdf
1305 IF STP(SPER_CODE$,3)="" THEN MSGBOX MSG("MUST_CNT_S"),MSG("ATTN"),"!"; NEXT_FOLDER=FLDR.ZPGMEA.2.CTL,NEXT_ID=SPER_CODE.CTL,REFRESH_FLG=1; RETURN 
1310 ! 
1315 IF STP(SRC_OF_LEAD$,3)="" THEN MSGBOX MSG("MUST_CNT_R"),MSG("ATTN"),"!"; NEXT_FOLDER=FLDR.ZPGMEA.2.CTL,NEXT_ID=SRC_OF_LEAD.CTL,REFRESH_FLG=1; RETURN 
1320 ! 
1325 IF STP(CONT_CATEGORY$,3)="" THEN MSGBOX MSG("MUST_CNT_C"),MSG("ATTN"),"!"; NEXT_FOLDER=FLDR.ZPGMEA.2.CTL,NEXT_ID=CONT_CATEGORY.CTL,REFRESH_FLG=1; RETURN 
1330 ! 
1345 IF FOLDER_ID$="ZPGMEA.3" OR CHANGE_T_CODE=1 THEN GOSUB UPDATE_SELECT_CODES
1350 CALL "ZZWDTE;TF_TODAY",DATE_LAST_MODIFIED$
1355 TIME_LAST_MODIFIED$=DTE(0:"%Hz%mz"),CHANGE_T_CODE=0
1360 OPER_CODE_LAST_MOD$=PAD(%X3_OP_ID$,3)
1362 IF STP(CUSTOMER$)="" THEN CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$ ! SSP240031 jdf
1365 WRITE (_ZP4,KEY=LIST_TYPE_CODE$+CONT_CODE$)
1370 REMOVE (_ZPA,KEY=OLD_ZPA_KEY$,DOM=*NEXT)
1375 WRITE (_ZPA,KEY=LIST_TYPE_CODE$+PAD(CONT_LONG_LOOKUP_SEQ$,20)+CONT_CODE$)
1380 REMOVE (_ZPD,KEY=OLD_ZPD_KEY$,DOM=*NEXT)
1385 CONT_PHONE$=PAD(CONT_PHONE$,14); IF POS(X3$(9,3)="060",3)<>0 THEN WRITE (_ZPD,KEY=PAD(CONT_PHONE$,12)+LIST_TYPE_CODE$+CONT_CODE$) ELSE WRITE (_ZPD,KEY=PAD(CONT_PHONE$,10)+LIST_TYPE_CODE$+CONT_CODE$)
1390 REMOVE (_ZPE,KEY=OLD_ZPE_KEY$,DOM=*NEXT)
1395 WRITE (_ZPE,KEY=CONT_PHONE$(4,7)+CONT_PHONE$(1,3)+LIST_TYPE_CODE$+CONT_CODE$)
1400 ! ^100,5 - Check if customer update is required
1403 IF NOT(NOTE_ONLY) THEN CUST_DIV$=%CUST_DIV$,CUST_CODE$=%CUST_CODE$ ! SSP238505 jdf!SSP#270809
1405 IF STP(CUST_DIV$+CUST_CODE$,2)="" OR P6$="N" THEN GOTO 1600
1407 IF NOTE_ONLY THEN GOTO 1600 ! Coming from writing note, don't ask and/or change customer record
1410 IF P6$="" THEN READ (_AR1,KEY=CUST_DIV$+CUST_CODE$,REC=CST$); GOSUB 9100
1415 IF P6$<>"N" THEN {
1420 EXTRACT (_AR1,KEY=CUST_DIV$+CUST_CODE$,REC=CST$)
1425 CST.CONT_LIST_CODE$=LIST_TYPE_CODE$
1430 CST.CONT_CONT_CODE$=CONT_CODE$
1435 WRITE (_AR1,REC=CST$)
1440  }
1445 ! 
1500 ! ^100,5 - Check for Remote Telemarketing
1505 IF W9$>"" THEN {
1510 RT_COMM$="U",RT_FILE$="ZP4...",RT_KEY$=A1$
1515 GOSUB REMOTE_TM
1520  }
1600 ! ^100,5 - Get ready for more
1605 CHANGE_FLG=0,P6$="",CHANGE_T_CODE=0
1610 IF DEC(MID(MSE,20,2))=BUTTON_1.CTL THEN GOTO CLEAR_REC ! Clear screen if write button was pressed
1615 RETURN 
1620 ! 
1700 DELETE_REC:! ^100,5 - Delete the record and associated notes/letters
1705 IF POS(" "<>S9$(48,6))>0 THEN {
1710 X$="  "
1715 PRINT 'WINDOW'(50,12,25,7,"Password Entry",OPT="c"),'CS',
1720 CALL "ZZPASW",X3$,"",S9$(48,6),X$,3,4,PWD
1725 PRINT 'POP',
1730 IF PWD<0 THEN RETURN 
1735  } ELSE {
1740 MSGBOX MSG("DELETE_REC"),MSG("CONFIRM"),"?,YESNO",ANSWER$
1745 IF ANSWER$<>"YES" THEN RETURN 
1750  }
1755 REMOVE (_ZP4,KEY=LIST_TYPE_CODE$+CONT_CODE$,DOM=*NEXT)
1756 REMOVE (_ZPA,KEY=OLD_ZPA_KEY$,DOM=*NEXT)
1757 REMOVE (_ZPD,KEY=OLD_ZPD_KEY$,DOM=*NEXT)
1758 REMOVE (_ZPE,KEY=OLD_ZPE_KEY$,DOM=*NEXT)
1760 SELECT * FROM _ZP5 BEGIN LIST_TYPE_CODE$+CONT_CODE$ END LIST_TYPE_CODE$+CONT_CODE$+$FF$
1765 REMOVE (_ZP5,KEY=KEC(_ZP5))
1770 NEXT RECORD 
1775 READ (_ZPB,KEY=LIST_TYPE_CODE$+CONT_CODE$,DOM=*NEXT)
1776 ZPB_KEY$=KEY(_ZPB,END=*NEXT); IF ZPB_KEY$(1,10)=LIST_TYPE_CODE$+CONT_CODE$ THEN REMOVE (_ZPB,KEY=ZPB_KEY$); GOTO *SAME ELSE GOTO *NEXT
1783 ! Delete letters may be modified as alt keys are defined, currently
1784 ! reads thru all letters looking for matches based on type and contact
1785 SELECT *,REC=LETTER$ FROM _ZP8 BEGIN "" END $FF$ WHERE LETTER.LIST_TYPE_CODE$+LETTER.CONT_CODE$=LIST_TYPE_CODE$+CONT_CODE$
1790 REMOVE (_ZP8,KEY=KEC(_ZP8))
1795 NEXT RECORD 
1800 ! 
1900 ! ^100,5 - Delete Remote Telemarketing stuff
1905 IF W9$>"" THEN {
1910 RT_COMM$="D",RT_FILE$="ZP4...",RT_KEY$=LIST_TYPE_CODE$+CONT_CODE$
1915 GOSUB REMOTE_TM
1920  }
1950 ! ^50,5 - Check customer record
1955 IF STP(CUST_DIV$+CUST_CODE$,2)<>"" THEN {
1960 EXTRACT (_AR1,KEY=CUST_DIV$+CUST_CODE$,DOM=1985,REC=CST$)
1965 IF CST.CONT_LIST_CODE$+CST.CONT_CONT_CODE$=LIST_TYPE_CODE$+CONT_CODE$ THEN {
1970 CST.CONT_LIST_CODE$="",CST.CONT_CONT_CODE$=""
1975 WRITE (_AR1,REC=CST$)
1980  } }
1985 GOTO CLEAR_REC
1990 ! 
2000 PROFILE:! ^100,5 - Set profile on or off
2005 IF PROFILE_ON THEN {
2010 PROFILE_ON=0
2011 DISABLE CONTROL OFF.CTL
2012 ENABLE CONTROL ON.CTL
2015 PRINT 'MESSAGE'("",1)
2020  } ELSE {
2025 PROFILE_ON=1
2026 ENABLE CONTROL OFF.CTL
2027 DISABLE CONTROL ON.CTL
2030 PRINT 'MESSAGE'("Profile on",1)
2035  }
2040 REFRESH_FLG=1
2045 RETURN 
2050 ! 
2060 JUMP_TO_PROFILE:
2062 IF _ZPC THEN NR$=FN%FIN$(_ZPC,"NUMREC"),NR=NUM(NR$); IF NR=0 THEN MSGBOX MSG("CREATE_PRO"),MSG("CONFIRM"),"?,YESNO",ANSWER$; IF ANSWER$="YES" THEN CLOSE (_ZPC); _ZPC=0; CALL "ZPGZAA" ELSE GOTO *RETURN
2065 IF _ZPC THEN CLOSE (_ZPC); _ZPC=0
2070 REPLACEMENT_SCRN$="ZPGMEA.P"
2075 PERFORM "*winproc;overlay_screen"
2080 IF PROFILE_ON THEN PRINT 'MESSAGE'("Profile on",1) ELSE PRINT 'MESSAGE'("",1)
2085 IF PROFILE_ON THEN GOSUB OPEN_PROFILE_FILE
2090 GOSUB LETTER_CONTROLS
2095 RETURN 
2099 ! 
2100 GET_SELECT_CODES:! ^100,5 - Get records from ZP6
2105 LIST_BOX LOAD F_CODE.CTL,""
2110 LIST_BOX LOAD T_CODE.CTL,""
2115 SELECT *,REC=ZP6$ FROM "ZP6"+%C$
2120 IF STP(ZP6.RESTRICT_TO_LIST_TYP$,1)="" OR POS(LIST_TYPE_CODE$=ZP6.RESTRICT_TO_LIST_TYP$,4) THEN {
2125 IF NOT(POS(ZP6.SELECTION_CODES$=SELECTION_CODES$,3)) THEN {
2130 LIST_BOX LOAD F_CODE.CTL,0,REC(IOL=LIST_BOX_IOL)
2135  } ELSE {
2140 LIST_BOX LOAD T_CODE.CTL,0,REC(IOL=LIST_BOX_IOL)
2145  } }
2150 NEXT RECORD 
2155 REFRESH_FLG=1
2160 RETURN 
2165 ! 
2200 UPDATE_SELECT_CODES:! ^100,5 - Update selection_codes$
2201 IF FOLDER_ID$<>"ZPGMEA.3" THEN RETURN ! SSP 220625
2205 _SELECTION_CODES$=SELECTION_CODES$,SELECTION_CODES$=""
2210 NUM_REC=T_CODE.CTL'ITEMCOUNT
2215 IF NUM_REC THEN {
2220 FOR X=1 TO NUM_REC
2225 LIST_BOX FIND T_CODE.CTL,X,LINE$
2230 SELECTION_CODES$+=LINE$(1,POS(SEP=LINE$)-1)
2235 NEXT X
2240  }
2245 IF _SELECTION_CODES$<>SELECTION_CODES$ THEN CHANGE_FLG=1
2247 SELECTION_CODES$=PAD(SELECTION_CODES$,33)
2248 SEL_CODE_01$=SELECTION_CODES$(1,3),SEL_CODE_02$=SELECTION_CODES$(4,3),SEL_CODE_03$=SELECTION_CODES$(7,3),SEL_CODE_04$=SELECTION_CODES$(10,3),SEL_CODE_05$=SELECTION_CODES$(13,3),SEL_CODE_06$=SELECTION_CODES$(16,3),SEL_CODE_07$=SELECTION_CODES$(19,3),SEL_CODE_08$=SELECTION_CODES$(22,3),SEL_CODE_09$=SELECTION_CODES$(25,3),SEL_CODE_10$=SELECTION_CODES$(28,3),SEL_CODE_11$=SELECTION_CODES$(31,3)
2250 RETURN 
2255 ! 
3000 SET_BAROMETER:! ^1000,5
3005 GOSUB INIT_BAROMETER
3010 IF NUM(BAROMETER$,ERR=BAD_BAROMETER) THEN {
3015 VAR$="BM"+BAROMETER$+".GRP$"
3020 CALL "*wingrp;show",VIS(VAR$)
3021 OLD_BAROMETER$=BAROMETER$
3025  }
3030 RETURN 
3035 ! 
3040 INIT_BAROMETER:
3045 CALL "*wingrp;hide",BM_ALL.GRP$
3050 RETURN 
3055 ! 
3060 BAD_BAROMETER:
3065 MSGBOX MSG("ERROR"),"","!"
3070 BAROMETER$="",NEXT_ID=BAROMETER.CTL,REFRESH_FLG=1
3075 RETURN 
3080 ! 
4000 INIT_FOLDER:! ^1000,5 - Determine folder ID and adjust display
4005 CUSTOMER$=STP(CUST_DIV$+CUST_CODE$,1)
4006 CALL "*wingrp;Show",ALL_BUTTONS.GRP$
4010 ! setup buttons and fields
4011 IF STP(LIST_TYPE_CODE$,1)<>"" AND STP(CONT_CODE$,1)<>"" THEN {
4015 CALL "*wingrp;enable",FIELDS.GRP$
4020 CALL "*wingrp;enable",BUTTONS.GRP$
4025 CALL "*wingrp;disable",KEY.GRP$
4030  } ELSE {
4035 CALL "*wingrp;disable",FIELDS.GRP$
4040 CALL "*wingrp;disable",BUTTONS.GRP$
4045 CALL "*wingrp;enable",KEY.GRP$
4046  }
4047 ! Setup Individual folders
4050 SWITCH FOLDER_ID$
4055 ! Status Folder
4056 CASE "ZPGMEA.3"
4060 GOSUB GET_SELECT_CODES
4065 GOSUB SET_BAROMETER
4070 BREAK
4072 ! Notes Folder
4075 CASE "ZPGMEA.5"
4076 READ DATA FROM "" TO IOL=ZP5_IOL
4080 CALL "*wingrp;disable",NOTE.GRP$
4081 CALL "*wingrp;Hide",ALL_BUTTONS.GRP$
4085 BREAK
4086 ! Sales codes
4090 CASE "ZPGMEA.2"
4095 CUSTOMER$=STP(CUST_DIV$+CUST_CODE$,1),REFRESH_FLG=1
4100 %CUST_NAME$=""
4105 IF CUSTOMER$="" THEN CUSTOMER.CTL'VALUE$=""
4110 BREAK
4111 ! Mail folder
4120 CASE "ZPGMEA.6"
4153 GOSUB NEW_LETTER
4154 ! when profile on, disable edit fields as cust master record is used.
4156 IF PROFILE_ON THEN GOSUB LETTER_CONTROLS
4217 END SWITCH 
4221 ! set default focus and reset panel control flags
4222 ! tab_flg and next_folder logic set on 1st folder in folder_tab_2, and last tab in folder_tab_1
4226 IF STP(LIST_TYPE_CODE$,1)<>"" AND STP(CONT_CODE$,1)<>"" AND NEXT_ID=-1 THEN {
4230 IF TAB_FLG$=">" OR STP(TAB_FLG$,3)="" THEN NEXT_ID=_FIRST_TAB ELSE NEXT_ID=_LAST_TAB
4235  }
4240 IF STP(LIST_TYPE_CODE$,2)="" AND STP(CONT_CODE$,2)="" THEN CHANGE_FLG=0,CHANGE_T_CODE=0
4241 REFRESH_FLG=1
4243 IF CALLED$="Y" THEN CALLED$="N",NEXT_ID=CONT_NAME.CTL
4246 EXIT 
4250 ! 
4300 ! ^ 50
4305 GET_STORED_LETTER:! No longer used
4310 IF LETTER_CODE$="A" THEN GOSUB NEW_LETTER; EXIT 
4315 IF NUM(LETTER_CODE$)>NUM(LAST_KEY$) THEN GOSUB NEW_LETTER; EXIT 
4320 IF NUM(LETTER_CODE$)<=NUM(LAST_KEY$)-1 THEN {
4325 ! READ ZP8 FOR LETTER_CODE
4330 READ (_ZP8,DOM=*NEXT,KEY=LETTER_CODE$,ERR=*NEXT); GOTO 4350
4335 MSGBOX "Letter not found! Displaying previous letter"
4340 LETTER_CODE$=LAST_KEY$
4345 READ (_ZP8,KEY=LETTER_CODE$,ERR=*NEXT)
4350 REFRESH_FLG=1
4360  }
4365 EXIT 
4370 ! 
5000 NEW_NOTE:! ^1000,5 - New Note
5005 CALL "*wingrp;enable",NOTE.GRP$
5010 CALL "ZZWDTE;TF_TODAY",DATE_OF_NOTE$
5011 TIME_OF_NOTE$=DTE(0:"%Hz%mz")
5020 C.SEQ_NUM$="0",KEY_ZP5$=LIST_TYPE_CODE$+CONT_CODE$+DATE_OF_NOTE$
5025 SELECT *,REC=C$ FROM _ZP5 BEGIN KEY_ZP5$ END KEY_ZP5$+$FF$
5030 NEXT RECORD 
5035 SEQ_NUM$=STR(NUM(C.SEQ_NUM$)+1),REFRESH_FLG=1
5037 NEW_BAROMETER$=BAROMETER$; GOSUB SET_BAROMETER
5040 NEXT_ID=ACTION_CODE.CTL
5045 FOLLOW_UP_DATE$="",FOLLOW_UP_ACTION_CDE$="",FOLLOW_UP_DESC$=""
5050 EXIT 
5055 ! 
5100 BUILD_NOTES:! ^100,5 - Take notes fields and make into one string
5105 NOTES$=STP(NOTES_LINE_2$,1)+" "+STP(NOTES_LINE_3$,1)+" "+STP(NOTEPAD_LINE_4$,1)
5110 TRANSLATE NOTES$," ","|"
5115 RETURN 
5120 ! 
5200 WRITE_NOTE:! ^100,5 - Write note to ZP5
5202 IF POS(":"=TIME_OF_NOTE$)>0 AND STP(TIME_OF_NOTE_BK$)<>"" THEN TIME_OF_NOTE$=TIME_OF_NOTE_BK$ ! SSP226211 jdf
5204 IF LEN(DB_TIME$)=8 THEN IF DB_TIME$(7,2)="AM" AND DB_TIME$(1,2)="12" THEN DB_TIME$(1,2)="00"; END_IF ; IF DB_TIME$(7,2)="PM" THEN GOSUB MIL_TIME; END_IF ; DB_TIME$=DB_TIME$(1,2)+DB_TIME$(4,2); TIME_OF_NOTE$=DB_TIME$ ! SSP226211 jdf
5205 GOSUB PARSE_NOTES
5210 WRITE (_ZP5,KEY=LIST_TYPE_CODE$+CONT_CODE$+DATE_OF_NOTE$+SEQ_NUM$)
5212 CALL "ZZDATE",X3$,"","G10101",DATE_OF_NOTE$,D0,1,0,0,0,0,0,"","",""; WRITE (_ZPB,KEY=LIST_TYPE_CODE$+CONT_CODE$+STR(100000-D0:"00000")+DATE_OF_NOTE$+SEQ_NUM$)
5215 NEXT_ID=NEW_NOTE.CTL,REFRESH_FLG=1
5220 ! Update ZP4 fields
5230 IF DATE_OF_NOTE$>LAST_CONT_DATE$ THEN LAST_CONT_DATE$=DATE_OF_NOTE$,LAST_CONT_ACTION$=ACTION_CODE$,LAST_CONT_DESC$=ACTION_COMMENT$
5245 IF STP(_FUD$,3)>"" AND STP(FOLLOW_UP_DATE$,3)="" THEN FOLLOW_UP_DATE$=_FUD$,FOLLOW_UP_ACTION_CDE$=_FUAC$,FOLLOW_UP_DESC$=_FUDSC$ ! If editing note and no followup date this time then set fields back to what they were originally
5250 BAROMETER$=NEW_BAROMETER$
5255 READ DATA FROM "" TO IOL=ZP5_IOL
5260 CALL "*wingrp;disable",NOTE.GRP$
5265 CALL "*wingrp;hide",BM_ALL.GRP$
5266 ENABLE CONTROL NEW_NOTE.CTL
5270 NOTE_ONLY=1; GOSUB WRITE_REC; NOTE_ONLY=0
5275 EDIT_NOTE=0,_FUD$="",_FUAC$="",_FUDSC$=""
5280 EXIT 
5285 ! 
5300 PARSE_NOTES:! ^50,5 - Break notes into separate fields
5305 NOTES$=PAD(NOTES$,180),_NOTES$=NOTES$
5310 TRANSLATE NOTES$," ",SEP
5315 NOTE_LINE$=NOTES$(1,60),NOTES$=NOTES$(61)
5320 GOSUB CHECK_SPACE; NOTES_LINE_2$=STP(NOTE_LINE$,2)
5325 NOTE_LINE$=NOTES$(1,60),NOTES$=NOTES$(61)
5330 GOSUB CHECK_SPACE; NOTES_LINE_3$=STP(NOTE_LINE$,2)
5335 NOTEPAD_LINE_4$=STP(NOTES$,2)
5340 RETURN 
5345 ! 
5400 CHECK_SPACE:! ^100,5 - Don't split up a word
5405 IF NOTE_LINE$(LEN(NOTE_LINE$))<>" " THEN {
5410 IF NOTES$(1,1)<>" " THEN {
5415 POS_SPACE=POS(" "=NOTE_LINE$,-1)
5420 NOTES$=NOTE_LINE$(POS_SPACE+1)+NOTES$,NOTE_LINE$=NOTE_LINE$(1,POS_SPACE)
5425  } }
5430 RETURN 
5435 ! 
5500 GET_NOTE_HISTORY:! ^100,5
5505 EDIT_NOTE=0
5510 PROCESS "ZPGMEA.5.1","../ZPG/ZP.EN",STR(_ZP5),LIST_TYPE_CODE$,CONT_CODE$,DATE_OF_NOTE$,SEQ_NUM$,STR(_ZPB),S9$ ! ssp 196420
5515 IF DATE_OF_NOTE$<>"" AND SEQ_NUM$<>"" THEN {
5520 EDIT_NOTE=1,_FUD$=FOLLOW_UP_DATE$,_FUAC$=FOLLOW_UP_ACTION_CDE$,_FUDSC$=FOLLOW_UP_DESC$,_BOM$=BAROMETER$,CHANGE_FLG=0,CHANGE_T_CODE=0
5525 READ (_ZP5,KEY=LIST_TYPE_CODE$+CONT_CODE$+DATE_OF_NOTE$+SEQ_NUM$,DOM=5565)
5530 GOSUB BUILD_NOTES
5535 CALL "*wingrp;enable",NOTE.GRP$
5536 DISABLE CONTROL NEW_NOTE.CTL
5540 BAROMETER$=NEW_BAROMETER$
5545 GOSUB SET_BAROMETER
5550 NEXT_ID=ACTION_CODE.CTL,REFRESH_FLG=1
5555  }
5556 IF STP(DATE_OF_NOTE$)<>"" THEN {! SSP226211 jdf
5557 TIME_OF_NOTE_BK$=TIME_OF_NOTE$; CALL "ZZDISP","TX",TIME_OF_NOTE$,XXX$,%X3$,RESULT$,"",0,0,%X4$; RESULT$(4,2)=TIME_OF_NOTE$(3,2) ! SSP226211 jdf
5558 TIME_OF_NOTE$=RESULT$; REFRESH_FLG=1 ! SSP226211 jdf
5559  } ! SSP226211 jdf
5560 EXIT 
5565 DATE_OF_NOTE$="",SEQ_NUM$="",TIME_OF_NOTE$="",REFRESH_FLG=1
5570 CALL "*wingrp;disable",NOTE.GRP$
5575 EXIT 
5580 ! 
5600 HISTORY_INIT:! ^100,5
5605 _ZP5=NUM(ARG_1$),LIST_TYPE_CODE$=ARG_2$,CONT_CODE$=ARG_3$,DATE_OF_NOTE$="",SEQ_NUM$="",_ZPB=NUM(ARG_6$),S9$=ARG_7$
5610 NOTE=HFN; OPEN (NOTE)"*memory*"
5615 EXIT 
5620 ! 
5700 HISTORY_DISPLAY:! ^100,5
5705 PRINT 'CAPTION'("Notes for "+LIST_TYPE_CODE$+" "+CONT_CODE$)
5710 MEM_CNTR=0; READ (_ZPB,KEY=ARG_2$+ARG_3$,DOM=*NEXT)
5711 ZPB_KEY$=KEY(_ZPB,END=5800); IF MID(ZPB_KEY$,1,10)<>ARG_2$+ARG_3$ THEN GOTO 5800 ELSE READ (_ZPB); READ (_ZP5,KEY=MID(ZPB_KEY$,1,10)+MID(ZPB_KEY$,16,7),DOM=5711)
5715 ! SELECT * FROM _ZP5 BEGIN ARG_2$+ARG_3$ END ARG_2$+ARG_3$+$FF$
5720 REC$=MSG("ACTI_C")+": "+ACTION_CODE$+"|"
5725 REC$+=MSG("ACTI_COMM")+": "+ACTION_COMMENT$+"||"
5730 NOTES$=STP(NOTES_LINE_2$,1)+" "+STP(NOTES_LINE_3$,1)+" "+STP(NOTEPAD_LINE_4$,1)
5735 REC$+="Notes: "+STP(NOTES$,2)+"||"
5740 REC$+=MSG("FOLL_U_D")+": "+FND$(FOLLOW_UP_DATE$)+"|"
5745 REC$+=MSG("FOLL_U_A_C")+": "+FOLLOW_UP_ACTION_CDE$+"|"
5750 REC$+=MSG("FOLL_U_DES")+": "+FOLLOW_UP_DESC$+"||"
5755 REC$+=MSG("NEW_B")+": "+NEW_BAROMETER$+"||"
5760 WRITE (NOTE,IND=MEM_CNTR)DATE_OF_NOTE$,SEQ_NUM$,REC$,TIME_OF_NOTE$ ! SSP 196420
5765 MEM_CNTR++
5770 GOTO 5711 ! NEXT RECORD
5775 ! 
5800 ! ^100,5 - Set grid
5805 NUM_ROWS=NUM(FN%FIN$(NOTE,"NUMREC"))
5810 IF NUM_ROWS=0 THEN MSGBOX "No notes to display","Attention","!,Beep"; CMD_STR$="E"; EXIT 
5815 GRID CLEAR HISTORY.CTL,0,0
5820 ! GRID SHOW HISTORY.CTL
5825 ROW=1
5830 HISTORY.CTL'COLUMNSWIDE=3
5835 HISTORY.CTL'ROWSHIGH=NUM_ROWS
5840 HISTORY.CTL'ROW=1
5845 HISTORY.CTL'COLUMN=-1,HISTORY.CTL'COLUMNWIDTH=0
5850 HISTORY.CTL'ROW=-1,HISTORY.CTL'ROWHEIGHT=1
5855 FOR COL=1 TO 3
5860 HISTORY.CTL'COLUMN=COL
5865 IF COL=1 THEN HISTORY.CTL'VALUE$="Date/Time",HISTORY.CTL'COLUMNWIDTH=10,HISTORY.CTL'ALIGN$="TC" ! ssp 196420
5870 IF COL=2 THEN HISTORY.CTL'VALUE$="Sequence",HISTORY.CTL'COLUMNWIDTH=8,HISTORY.CTL'ALIGN$="TC"
5875 IF COL=3 THEN HISTORY.CTL'VALUE$="Notes",HISTORY.CTL'COLUMNWIDTH=45
5880 NEXT COL
5900 ! ^100,5 - Add data to grid
5905 MEM_CNTR=0
5910 READ (NOTE,IND=MEM_CNTR,END=5995)DATE_OF_NOTE$,SEQ_NUM$,REC$,TIME_OF_NOTE$ ! ssp 196420
5915 HISTORY.CTL'ROW=ROW,HISTORY.CTL'COLUMN=1
5920 HISTORY.CTL'CELLTYPE$="multi_line"
5925 NUM_LINES=POS("|"=REC$,1,0)
5930 HISTORY.CTL'ROW=ROW
5935 HISTORY.CTL'ROWHEIGHT=NUM_LINES
5940 TRANSLATE REC$,$0D$,"|"
5945 FOR COL=1 TO 3
5950 HISTORY.CTL'COLUMN=COL
5955 IF COL=1 THEN CALL "ZZDISP","TX",TIME_OF_NOTE$,XXX$,%X3$,RESULT$,"",0,0,%X4$; RESULT$(4,2)=TIME_OF_NOTE$(3,2); HISTORY.CTL'VALUE$=FND$(DATE_OF_NOTE$)+" "+RESULT$,HISTORY.CTL'ALIGN$="TC" ! SSP 196420  ! SSP226211 jdf
5960 IF COL=2 THEN HISTORY.CTL'VALUE$=SEQ_NUM$,HISTORY.CTL'ALIGN$="TC"
5965 IF COL=3 THEN HISTORY.CTL'VALUE$=REC$,HISTORY.CTL'CELLTYPE$="multi_line"
5970 HISTORY.CTL'LOCK=1,HISTORY.CTL'BACKCOLOR$="white"
5975 NEXT COL
5980 ROW++
5985 MEM_CNTR++
5990 GOTO 5910
5995 REFRESH_FLG=1
5997 IF S9$(55,1)="Y" THEN HIDE CONTROL EDIT_NOTE.CTL; HIDE CONTROL DELETE_NOTE.CTL
6000 EXIT 
6010 ! 
6100 EDIT_NOTE:! ^100,5 - Edit Note
6105 CUR_ROW=HISTORY.CTL'CURRENTROW-1
6110 READ (NOTE,IND=CUR_ROW)ARG_4$,ARG_5$
6115 CMD_STR$="E"; EXIT 
6120 ! 
6200 DELETE_NOTE:! ^100,5 - Delete Note
6205 CUR_ROW=HISTORY.CTL'CURRENTROW-1
6210 READ (NOTE,IND=CUR_ROW)ARG_4$,ARG_5$
6215 MSGBOX "Are you sure that note dated "+FND$(ARG_4$)+" Sequence "+ARG_5$+" is to be deleted?","Confirm","?,YESNO",ANSWER$
6220 IF ANSWER$="YES" THEN {
6225 REMOVE (_ZP5,KEY=LIST_TYPE_CODE$+CONT_CODE$+ARG_4$+ARG_5$)
6227 CALL "ZZDATE",X3$,"","G10101",ARG_4$,D0,1,0,0,0,0,0,"","",""; REMOVE (_ZPB,KEY=LIST_TYPE_CODE$+CONT_CODE$+STR(100000-D0:"00000")+ARG_4$+ARG_5$,DOM=*NEXT)
6230 CLOSE (NOTE); OPEN (NOTE)"*memory*"
6235 ARG_4$="",ARG_5$=""
6240 ! GRID HIDE HISTORY.CTL
6245 ! GRID CLEAR HISTORY.CTL,0,0
6250 ! GRID SHOW HISTORY.CTL
6255 GOTO 5710
6260  }
6265 EXIT 
6270 ! 
6300 HISTORY_WRAPUP:! ^100,5 - Close history memory file
6305 CLOSE (NOTE)
6310 EXIT 
6350 ! ^ 50
6360 LOAD_SALES_LIST:
6370 IF _ZP7=0 THEN EXIT 
6380 SELECT SP$ FROM _ZP7
6390 LIST_BOX LOAD DB_CONT_FROM.CTL,SP$
6400 NEXT RECORD 
6410 EXIT 
6420 ! 
6430 LOAD_TEMPLATES:
6435 READ (ZZPARM,KEY="PATH"+%X3$(40,3),ERR=NO_PATH)EXCEL$,WORDPAD$,TPATH$
6436 IF NUL(TPATH$) THEN GOSUB NO_PATH
6439 IF STP(TPATH$,3)>"" THEN TPATH$=%WDX$+TPATH$; GOTO 6448
6440 IF TCB(82)=2 THEN {
6441 ! TPATH$=%WDX$+"C:\Documents and Settings\"+USERNAME$+"\APPLICATION DATA\MICROSOFT\Templates\TopForm\"
6445  } ELSE {
6446 ! TPATH$=%WDX$+"C:\Program Files\Microsoft Office\Templates\TopForm\"
6447  } ! ENDIF NT AND ERROR
6448 ! 
6450 _MSDIR=HFN
6455 OPEN (_MSDIR,ERR=6490)TPATH$
6460 ! 
6461 SELECT TEMPLATE$ FROM _MSDIR WHERE TEMPLATE$ LIKE "*.[Dd][Oo][Tt]*",ERR=*NEXT; GOTO 6470 ! ssp#253951
6465 EXITTO 6490
6470 DROP_BOX LOAD LETTER_TEMPLATE.CTL,0,TEMPLATE$
6475 NEXT RECORD 
6476 ! 
6480 DROP_BOX ENABLE LETTER_TEMPLATE.CTL
6485 REFRESH_FLG=1
6490 CLOSE (_MSDIR,ERR=*NEXT)
6495 EXIT 
6500 ! ^ 50,5
6505 ! 
6510 PROCESS_LETTER:IF ID$="BT_EMAIL" THEN OPT_MNU$="[Email with &Attachments,,&Yes=1,&No=2]"; POPUP_MENU OPT_MNU$,OPT
6511 SAVED_PROF=PROFILE_ON,SAVED$=LIST_TYPE_CODE$+CONT_CODE$,SAVED_ZPC$=KEY_ZPC$ ! SSP#228974
6512 IF ID$="BT_EXCEL" AND PROFILE_ON<>0 THEN GOTO 6514
6513 IF NUL(CONT_CODE$) THEN PROFILE_ON=1 ELSE PROFILE_ON=0
6515 REM IF ISWINDX_FLG THEN GOSUB CHECK_PRGS
6516 DROP_BOX READ LETTER_TEMPLATE.CTL,TEMPLATE$,ERR=*NEXT
6517 IF ID$="BT_EMAIL" AND OPT=2 THEN GOTO 6520 ELSE IF ID$="BT_EXCEL" THEN GOTO 6520
6518 IF STP(TEMPLATE$,3)="" THEN MSGBOX MSG("VALID_TEMP"),MSG("ATTN"),"!"; EXIT 
6520 IF PROFILE_ON THEN {
6522 SAVED$=LIST_TYPE_CODE$+CONT_CODE$,SAVED_ZPC$=KEY_ZPC$ ! SSP#228974
6525 _PRFKEY$=%C$+HSH(USERNAME$)+"PROFILE"
6530 READ (ZZPARM,DOM=*NEXT,KEY=_PRFKEY$)PRF_NAME$; PRF_NAME$=STP(MID(PR_NAME$,1,40),2,ERR=*NEXT); GOTO 6540
6535 PRF_NAME$="???"
6540 LETTER_FILE$="wl"+PRF_NAME$+TF_FROM$+".txt" ! 
6545  } ELSE {
6550 LETTER_FILE$="wl"+STR(STP(CONT_CODE$))+TF_FROM$+".txt" ! SSP209333
6555  }
6560 LETTER_FILE$=STP(LETTER_FILE$,3)
6565 MACHINE$=X3$(77,1)
6570 WINVER=TCB(82)
6575 ! WRITE TO ZP8 FILE
6580 WRITE (_ZP8,KEY=LAST_KEY$)
6585 RADIO_BUTTON READ RB_EDIT.CTL,SELECTED,ERR=*NEXT
6590 ! GET SERVER UNC NAME
6595 CALL "ZZ2FNC;GETSERVERNETBIOSNAME",SERVER$
6600 IF STP(SERVER$,2)<>"" THEN SERVER$="\\"+SERVER$+"\"
6605 ! CREATE DATA RECORDS
6610 ERASE LETTER_FILE$,ERR=*NEXT; GOTO *SAME
6615 SERIAL LETTER_FILE$
6616 IF ID$="BT_EXCEL" THEN TA$=$09$,BB$="" ELSE TA$=$0D$,BB$=$0D$
6620 IF ID$="BT_EXCEL" OR ID$="GO_BUTTON" THEN HDR_REC$="Letter Code"+$09$+"List Type Code"+$09$+"Contact Code"+$09$+"Company Name"+$09$+"City"+$09$+"Greeting"+$09$+"Address 1"+$09$+"Address 2"+$09$+"State"+$09$+"Zip Code"+$09$+"Date"+$09$+"Literature Codes"+$09$+"Template"+$09$+"From"+$09$+"Subject"+$09$+"Phone Number"+$09$+"Fax Number"+$09$+"Recipient"+$09$+"Title"+$09$+"Email Address"+$09$+"From Name"+$09$+"From Title"+$09$+"From Closing"+TA$ ELSE HDR_REC$="Letter Code"+$09$+"List Type Code"+$09$+"Contact Code"+$09$+"Company Name"+$09$+"City"+$09$+"Greeting"+$09$+"Address 1"+$09$+"Address 2"+$09$+"State"+$09$+"Zip Code"+$09$+"Date"+$09$+"Literature Codes"+$09$+"Template"+$09$+"From"+$09$+"Subject"+$09$+"Fax Number"+$09$+"Recipient"+$09$+"Title"+$09$+"Email Address"+$09$+"From Name"+$09$+"From Title"+$09$+"From Closing"+TA$ ! SSP#231719
6625 H_LET=UNT; IF ID$="BT_EXCEL" THEN OPEN LOCK (H_LET,ERR=PROCESS_LETTER_END)LETTER_FILE$; GOTO 6635
6630 OPEN (H_LET,ISZ=1,ERR=PROCESS_LETTER_END)LETTER_FILE$
6635 PRINT (H_LET,ERR=*NEXT)HDR_REC$+BB$
6640 ! 
6645 IF PROFILE_ON THEN {
6646 READ (_ZPC,KEY="",DOM=*NEXT)
6650 REPEAT 
6655 _KEY$=KEY(_ZPC,END=6690)
6660 KEY_ZPC$=_KEY$,_KEY$=_KEY$(1,4)+_KEY$(30)
6665 READ (_ZPC,KEY=KEY_ZPC$)
6670 READ (_ZP4,KEY=_KEY$,DOM=6690,ERR=6690)
6672 GOSUB GET_FROM_FIELDS
6673 D1$=LETTER_DATE$; CALL "ZZWDTE;DISPLAY",D1$,A1$,A2$
6674 CONT_ZIP_CODE$=FN%ZZDISP$(CONT_ZIP_CODE$,"ZIP") ! SSP 214362 - IF ID$="BT_EXCEL" AND LEN(STP(CONT_ZIP_CODE$))>7 THEN CONT_ZIP_CODE$=CONT_ZIP_CODE$(1,5)+"-"+CONT_ZIP_CODE$(6,4)
6675 IF ID$="BT_EXCEL" OR ID$="GO_BUTTON" THEN DATA$=STP(LETTER_CODE$,2)+$09$+STP(LIST_TYPE_CODE$,2)+$09$+STP(CONT_CODE$,2)+$09$+STP(CONT_NAME$,2)+$09$+STP(CONT_LONG_CITY$,2)+$09$+STP(CONT_GREETING$,2)+$09$+STP(CONT_ADDR_1$,2)+$09$+STP(CONT_ADDR_2$,2)+$09$+STP(CONT_ST$,2)+$09$+STP(CONT_ZIP_CODE$,2)+$09$+STP(D1$,2)+$09$+STP(LITERATURE_CODES$,2)+$09$+STP(TEMPLATE$,2)+$09$+STP(TF_FROM$,2)+$09$+STP(SUBJECT_LETTER$,2)+$09$+STP(CONT_PHONE$,2)+$09$+STP(FAX_NUM$,2)+$09$+STP(CONT_PERSON$,2)+$09$+STP(CONT_TITLE$,2)+$09$+STP(EMAIL_ADDRESS$,2)+$09$+STP(FROM_NAME$,2)+$09$+STP(FROM_TITLE$,2)+$09$+STP(FROM_CLOSING$,2)+TA$ ELSE DATA$=STP(LETTER_CODE$,2)+$09$+STP(LIST_TYPE_CODE$,2)+$09$+STP(CONT_CODE$,2)+$09$+STP(CONT_NAME$,2)+$09$+STP(CONT_LONG_CITY$,2)+$09$+STP(CONT_GREETING$,2)+$09$+STP(CONT_ADDR_1$,2)+$09$+STP(CONT_ADDR_2$,2)+$09$+STP(CONT_ST$,2)+$09$+STP(CONT_ZIP_CODE$,2)+$09$+STP(D1$,2)+$09$+STP(LITERATURE_CODES$,2)+$09$+STP(TEMPLATE$,2)+$09$+STP(TF_FROM$,2)+$09$+STP(SUBJECT_LETTER$,2)+$09$+STP(FAX_NUM$,2)+$09$+STP(CONT_PERSON$,2)+$09$+STP(CONT_TITLE$,2)+$09$+STP(EMAIL_ADDRESS$,2)+$09$+STP(FROM_NAME$,2)+$09$+STP(FROM_TITLE$,2)+$09$+STP(FROM_CLOSING$,2)+TA$ ! SSP#231719!SSP#231924
6680 PRINT (H_LET,ERR=*NEXT)DATA$+BB$
6681 IF ID$="BT_EMAIL" THEN GOSUB EMAIL_OPTION
6685 UNTIL DATA$=""
6690 EXITTO 6720
6695  } ELSE {
6697 D1$=LETTER_DATE$; CALL "ZZWDTE;DISPLAY",D1$,A1$,A2$
6698 GOSUB GET_FROM_FIELDS
6699 IF LEN(STP(LETTER_ZIP$))>7 THEN LETTER_ZIP$=LETTER_ZIP$(1,5)+"-"+LETTER_ZIP$(6,4)
6700 IF ID$="BT_EXCEL" OR ID$="GO_BUTTON" THEN DATA$=STP(LETTER_CODE$,2)+$09$+STP(LIST_TYPE_CODE$,2)+$09$+STP(CONT_CODE$,2)+$09$+STP(CONT_NAME$,2)+$09$+STP(CONT_LONG_CITY$,2)+$09$+STP(CONT_GREETING$,2)+$09$+STP(CONT_ADDR_1$,2)+$09$+STP(CONT_ADDR_2$,2)+$09$+STP(CONT_ST$,2)+$09$+STP(CONT_ZIP_CODE$,2)+$09$+STP(D1$,2)+$09$+STP(LITERATURE_CODES$,2)+$09$+STP(TEMPLATE$,2)+$09$+STP(TF_FROM$,2)+$09$+STP(SUBJECT_LETTER$,2)+$09$+STP(CONT_PHONE$,2)+$09$+STP(FAX_NUM$,2)+$09$+STP(CONT_PERSON$,2)+$09$+STP(CONT_TITLE$,2)+$09$+STP(EMAIL_ADDRESS$,2)+$09$+STP(FROM_NAME$,2)+$09$+STP(FROM_TITLE$,2)+$09$+STP(FROM_CLOSING$,2)+TA$ ELSE DATA$=STP(LETTER_CODE$,2)+$09$+STP(LIST_TYPE_CODE$,2)+$09$+STP(CONT_CODE$,2)+$09$+STP(CONT_NAME$,2)+$09$+STP(LETTER_LONG_CITY$,2)+$09$+STP(LETTER_GREETING$,2)+$09$+STP(LETTER_ADDR_1$,2)+$09$+STP(LETTER_ADDR_2$,2)+$09$+STP(LETTER_ST$,2)+$09$+STP(LETTER_ZIP$,2)+$09$+STP(D1$,2)+$09$+STP(LITERATURE_CODES$,2)+$09$+STP(TEMPLATE$,2)+$09$+STP(TF_FROM$,2)+$09$+STP(SUBJECT_LETTER$,2)+$09$+STP(FAX_NUM$,2)+$09$+STP(RECIPIENT$,2)+$09$+STP(CONT_TITLE$,2)+$09$+STP(EMAIL_ADDRESS$,2)+$09$+STP(FROM_NAME$,2)+$09$+STP(FROM_TITLE$,2)+$09$+STP(FROM_CLOSING$,2)+TA$ ! SSP#231719!SSP#231924
6705 PRINT (H_LET,ERR=*NEXT)DATA$+BB$
6708 IF ID$="BT_EMAIL" THEN GOSUB EMAIL_OPTION
6710  }
6715 ! 
6720 CLOSE (H_LET)
6721 IF ID$="BT_EXCEL" THEN GOSUB EXCEL; EXIT 
6725 IF SELECTED=2 THEN GOSUB NEW_LETTER; EXIT 
6730 ! IF WINDX THEN change path to Universal Naming Convention (UNC) names WHICH look like this:
6735 ! \\servername\sharename\path\file
6740 WL_EXE$="C:\Program Files\TopForm\WordLink\Wordlink.exe "
6745 TFILE$=%DATAPATH$+DLM+LETTER_FILE$
6750 ! 
6755 SWITCH MACHINE$
6760 CASE "D"
6765 IF WINVER=0 THEN MSGBOX "Correct version of Windows not detected","Word Transfer","!"; GOTO PROCESS_LETTER_END
6770 ! IF REMOTE CM THEN SERVER$ MUST BE NULL
6771 IF W9$<>"" THEN SERVER$=""
6772 IF SERVER$<>"" THEN BDPOS=POS(HWD=TFILE$); IF BDPOS>0 THEN TFILE$="PVX"+MID(TFILE$,BDPOS+LEN(HWD))
6775 CMDLINE$=SERVER$+TFILE$
6780 IF STP(TEMPLATE$,2)<>"" THEN CMDLINE$+=","+TEMPLATE$
6785 BREAK
6790 CASE "U"
6791 IF SERVER$<>"" THEN BDPOS=POS(HWD=TFILE$); REM IF BDPOS>0 THEN TFILE$="pvx"+MID(TFILE$,BDPOS+LEN(HWD))
6795 CMDLINE$=SERVER$+SUB(TFILE$,DLM,"\")
6800 REM IF STP(TEMPLATE$,2)<>"" THEN CMDLINE$+=","+TEMPLATE$
6810 BREAK
6820 END SWITCH 
6830 ! 
6840 SETERR 6892
6850 SERVER$=SUB(SERVER$,"\",DLM)
6855 GOSUB COPY_TXT_FILE
6860 DATFILE$=DATA_TEMP$
6870 DOCFILE$=TPATH$(6)+TEMPLATE$ ! ,DOCFILE$=SUB(DOCFILE$,"\","\tmp\") ! ssp 225645 228670
6875 IF DEC(MID(MSE,22,1))>3 THEN WINDX=1,WDX$="[wdx]" ELSE WINDX=0,WDX$=""
6878 CALL WDX$+"*windx.utl;get_lwd",LOCATION$; XX=POS("\"=LOCATION$,-1),LOCATION$=LOCATION$(1,XX)
6880 IF ID$<>"BT_EMAIL" THEN CALL "[wdx]"+LOCATION$+"TFWORDLINK",DATFILE$,DOCFILE$
6881 ! CALL "[wdx]C:\Program Files\Best Software Canada Ltd\WindX Plug-in\TFWORDLINK",DATFILE$,DOCFILE$
6890 GOTO PROCESS_LETTER_END
6892 IF NUL(DATFILE$) THEN MSG_1$="Text Data is not Available."+SEP+"Call Demandbridge Support for Assistance" ! SSP#229586  
6894 IF NUL(DOCFILE$) THEN MSG_1$="No Template has been found."+SEP+"If this problem persist..."+SEP+"Call Demandbridge Support for Assistance" ! ssp#229586
6896 IF NUL(MSG_1$) THEN MSG_1$=MSG(ERR)
6900 MSGBOX MSG_1$
6910 SETERR 0000
6920 PROCESS_LETTER_END:
6930 REMOVE (_ZP8,KEY=LAST_KEY$,DOM=*NEXT)
6940 ERASE LETTER_FILE$,ERR=*NEXT
6945 ERASE "[wdx]"+DATA_TEMP$,ERR=*NEXT
6950 MSGBOX MSG("UPDATE_TM"),MSG("UPDATE"),"?,YESNO",ANSWER$
6960 IF ANSWER$="YES" THEN GOSUB UPDATE_NOTE_AFTER_LETTER
6965 PROFILE_ON=SAVED_PROF,SAVED_PROF=0 ! SSP#228974
6970 IF PROFILE_ON THEN READ (_ZP4,KEY=SAVED$,DOM=*NEXT)
6975 IF PROFILE_ON THEN READ (_ZPC,KEY=SAVED_ZPC$,DOM=*NEXT) ! SSP#228974
6980 EXIT 
6990 ! 
7000 AUTO_ASSIGN:! 7000,5 - Auto Assign code - Yanked straight from ZP2MEA
7005 EXTRACT (_ZP0,KEY=LIST_TYPE_CODE$)IOL=0315
7010 IF C[0]=0 THEN GOTO 7030
7015 C[0]=C[0]+1; IF C[0]>999999 THEN C[0]=1
7020 CONT_CODE$=STR(C[0]:"000000")
7025 GOTO 7105
7030 ! alpha add, work from right to left, at each step N5 is the number"+" to add to that column, if N5 is zero (no carry), then we are done
7035 N5=1,N5$=C$(45,6)
7040 ! if all Z's, then roll over to next set of numbers.
7045 IF POS("Z"<>N5$)=0 THEN DIM N5$(LEN(N5$)); N5$(LEN(N5$),1)="0"; GOTO 7080
7050 FOR I=LEN(N5$) TO 1 STEP -1
7055 IF N5$(I,1)=" " THEN GOTO 7075
7060 N5$(I,1)=CHR(ASC(N5$(I,1))+N5)
7065 ! now check to see if overflow occured,( out of ranges 0-9, or A-Z)"+". If yes then set N5 to carry and adjust to proper value, else ex"+"it, we're done
7070 IF N5$(I,1)>"Z" AND (N5$(I,1)<"0" OR N5$(I,1)>"9") THEN N5$(I,1)="0",N5=1 ELSE IF N5$(I,1)>"9" AND (N5$(I,1)<"A" OR N5$(I,1)>"Z") THEN N5$(I,1)="A",N5=0; EXITTO 7080 ELSE N5=0; EXITTO 7080
7075 NEXT I
7080 C$(45,6)=N5$,CONT_CODE$=N5$
7085 ! 
7100 ! ^100,5 - Update List Type Code Header
7105 WRITE (_ZP0)IOL=0315
7110 ! 
7115 NEW_CONTACT:
7120 REFRESH_FLG=1,CONT_CODE.CTL'VALUE$=CONT_CODE$
7125 MSGBOX MSG("ADD_RECORD"),MSG("CONFIRM"),"?,YESNO",ANSWER$
7130 IF ANSWER$="NO" THEN CONT_CODE$="",REFRESH_FLG=1,NEXT_ID=CONT_CODE.CTL,CHANGE_FLG=0,CHANGE_T_CODE=0; EXIT 
7135 SELECTION_CODES$=""
7200 ! ^100,5 - Jump to new item panel
7205 CALL "ZZWDTE;TF_TODAY",DATE_ENTERED$
7215 TRANSFER$=REC(IOL=TRANSFER_IOL)
7217 NEW_CONT=1 ! SSP238505 jdf 
7220 PROCESS "ZPGMEA.4","../ZPG/ZP.EN",TRANSFER$ ! ssp 196420
7225 READ DATA FROM TRANSFER$ TO IOL=TRANSFER_IOL
7226 GOTO NEW_OR_EXISTING
7230 REFRESH_FLG=1,_ENABLE=1,CHANGE_FLG=1
7235 CALL "*wingrp;enable",FIELDS.GRP$
7240 CALL "*wingrp;enable",BUTTONS.GRP$
7245 CALL "*wingrp;disable",KEY.GRP$
7250 CALL "*wingrp;disable",AUTO.GRP$
7255 EXIT 
7260 ! 
7300 CHECK_CUSTOMER:! ^100,5 - Check to see if customer exists
7305 RP6$="N"
7310 IF STP(CUSTOMER$,2)="" THEN GOTO NO_CUSTOMER
7315 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$
7320 READ (_AR1,KEY=CUST_DIV$+CUST_CODE$,DOM=NO_CUSTOMER,REC=CST$)
7322 GOSUB VALIDATE_REP; IF NOT(VAL_REP) THEN CUSTOMER$="",CUST_DIV$="",CUST_CODE$=""; MSGBOX MSG("SEC_CUST"); GOTO NO_CUSTOMER ! SSP#219720
7325 GOSUB 9100
7330 CONT_NAME$=CST.CUST_NAME$,CONT_ADDR_1$=CST.CUST_ADDR_1$,CONT_ADDR_2$=CST.CUST_ADDR_2$
7335 CONT_LONG_CITY$=CST.CUST_CITY$,CONT_ST$=CST.CUST_ST$,CONT_ZIP_CODE$=CST.CUST_ZIP_CODE$
7340 CONT_FAX$=CST.CUST_FAX$,CONT_LONG_LOOKUP_SEQ$=CST.CUST_LOOKUP$,CONT_GREETING$=CST.CUST_GREETING$
7345 CONT_PHONE$=CST.CUST_PHONE$,SPER_CODE$=CST.SPER_CODE$
7350 NEXT_FOLDER=FLDR.ZPGMEA.2.CTL,NEXT_ID=SPER_CODE.CTL
7355 GOTO 7415
7360 ! 
7400 NO_CUSTOMER:! ^100,5 - Allow Manual Entry of name etc
7405 IF SCRN_ID$<>"ZPGMEA.4" THEN GOTO 7415 ! There are two customer fields, one on the ZPGMEA.4 - New Entry panel, this is for new contacts, and one on the ZPGMEA.2 - codes panel.  If coming from new entry and they don't enter a customer code we want to follow this logic, if blanking out a customer on the codes panel, we don't want to jump to the contact name field.
7406 NEXT_ID=CONT_NAME.CTL
7410 NEXT_FOLDER=FLDR.ZPGMEA.1.CTL
7415 REFRESH_FLG=1
7420 RETURN 
7450 ZPGMEA_4_INIT:! ^50,5 - Transfer variables
7455 READ DATA FROM ARG_1$ TO IOL=TRANSFER_IOL
7460 REFRESH_FLG=1
7465 EXIT 
7470 ! 
7500 ZPGMEA_4_WRAPUP:! ^50,5 - Put variables into arg_1$
7505 ARG_1$=REC(IOL=TRANSFER_IOL)
7510 EXIT 
7515 ! 
7600 CLIPBOARD:! ^100,5 - Write name and address information to clipboard
7605 CLIP_BOARD WRITE ""
7610 REC$=CONT_NAME$+$0A$
7615 IF STP(CONT_ADDR_1$,2)<>"" THEN REC$+=CONT_ADDR_1$+$0A$
7620 IF STP(CONT_ADDR_2$,2)<>"" THEN REC$+=CONT_ADDR_2$+$0A$
7625 REC$+=CONT_CITY$+CONT_ST$+" "+CONT_ZIP_CODE$+$0A$
7630 REC$+=$0A$
7635 IF STP(CONT_PERSON$,2)<>"" THEN REC$+="Attention: "+CONT_PERSON$+$0A$
7640 REC$+=$0A$
7645 IF STP(CONT_GREETING$,2)<>"" THEN REC$+="Dear "+CONT_GREETING$+$0A$
7650 CLIP_BOARD WRITE REC$
7655 RETURN 
7660 ! 
7700 UPDATE_NOTE_AFTER_LETTER:
7705 FOLLOWUP$="N"
7710 DIM AC$(45); READ (_ZP3,KEY="L",DOM=7725)AC$
7715 IF AC$(42,1)<>" " THEN DIM FUAC$(45); READ (_ZP3,KEY=AC$(42,1),DOM=7725)FUAC$ ELSE GOTO 7725
7720 IF NUM(AC$(43,3),ERR=*NEXT)<>0 THEN CALL "ZZDATE",X3$,"",LETTER_DATE$,Q$,NUM(AC$(43,3)),0,0,0,0,0,0,"","",""; FU_DATE$=Q$,FU_AC$=AC$(42,1),FU_DESC$=FUAC$(2,40),FOLLOWUP$="Y"
7725 IF PROFILE_ON THEN {
7730 GOSUB INIT_PROG_BAR
7735 READ (_ZPC,KEY="",DOM=*NEXT)
7740 NEXT_ZPC_KEY: ZPC_KEY$=KEY(_ZPC,END=UPDATE_NOTE_AFTER_LETTER_END); READ (_ZPC)
7745 ZP4_KEY$=ZPC_KEY$(1,4)+ZPC_KEY$(30)
7750 READ (_ZP4,KEY=ZP4_KEY$,DOM=NEXT_ZPC_KEY)
7755 C+=1; IF MOD(C,T0)=1 THEN GOSUB UPDATE_PROG_BAR
7760 RECIPIENT$=CONT_PERSON$
7765 GOSUB FILL_OUT_NOTE
7770 GOTO NEXT_ZPC_KEY
7775  } ELSE {
7780 GOSUB FILL_OUT_NOTE
7785  }
7790 UPDATE_NOTE_AFTER_LETTER_END:IF PROFILE_ON THEN GOSUB WRAPUP_PROG_BAR END_IF ; RETURN 
7795 ! 
7800 FILL_OUT_NOTE:
7810 READ DATA FROM "" TO IOL=ZP5_IOL
7815 DATE_OF_NOTE$=LETTER_DATE$,SEQ_NUM$="0"
7820 ACTION_CODE$="L",TIME_OF_NOTE$=DTE(0:"%Hz%mz")
7825 ACTION_COMMENT$="Wordlink Letter to: "+RECIPIENT$
7830 NOTES_LINE_2$="From: "+TF_FROM$+" Template: "+PAD(TEMPLATE$,35)
7835 NOTES_LINE_3$=SUBJECT_LETTER$
7840 IF FOLLOWUP$="Y" THEN FOLLOW_UP_DATE$=FU_DATE$,FOLLOW_UP_ACTION_CDE$=FU_AC$,FOLLOW_UP_DESC$=FU_DESC$ ELSE FOLLOW_UP_DATE$="",FOLLOW_UP_ACTION_CDE$="",FOLLOW_UP_DESC$=""
7850 SEQ_NUM$=CHR(ASC(SEQ_NUM$)+1)
7855 WRITE (_ZP5,KEY=LIST_TYPE_CODE$+CONT_CODE$+DATE_OF_NOTE$+SEQ_NUM$,DOM=7850)
7860 CALL "ZZDATE",X3$,"","G10101",DATE_OF_NOTE$,D0,1,0,0,0,0,0,"","",""; A2$=LIST_TYPE_CODE$+CONT_CODE$+STR(100000-D0:"00000")+DATE_OF_NOTE$+SEQ_NUM$
7865 WRITE (_ZPB,KEY=A2$)
7870 EXTRACT (_ZP4,KEY=LIST_TYPE_CODE$+CONT_CODE$,DOM=FILL_OUT_NOTE_END)
7875 IF DATE_OF_NOTE$>LAST_CONT_DATE$ THEN LAST_CONT_DATE$=DATE_OF_NOTE$,LAST_CONT_ACTION$=ACTION_CODE$,LAST_CONT_DESC$=ACTION_COMMENT$
7880 IF FOLLOWUP$="Y" THEN FOLLOW_UP_DATE$=FU_DATE$,FOLLOW_UP_ACTION_CDE$=FU_AC$,FOLLOW_UP_DESC$=FU_DESC$
7885 WRITE (_ZP4,KEY=LIST_TYPE_CODE$+CONT_CODE$)
7890 FILL_OUT_NOTE_END:RETURN 
7895 ! 
7900 REM "Position Profile to selected record SSP#214934
7950 POSITION_PROFILE:
7960 IF NOT(PROFILE_ON) THEN CALL "ZZPROM",".4",X3$,0,"Sorry, profile not on!","","",0; EXIT 
7970 READ (_ZPC,KEY="",DOM=7971)
7980 _KEY$=KEY(_ZPC,END=7995); READ (_ZPC)
7985 IF _KEY$(1,4)+_KEY$(30,6)<>LIST_TYPE_CODE$+CONT_CODE$ THEN GOTO 7980 ELSE KEY_ZPC$=_KEY$,_KEY$=_KEY$(1,4)+_KEY$(30)
7990 CALL "ZZPROM",".4",X3$,0,"Profile now positioned to this record","","",0; EXIT 
8000 NEXT_REC:! ^1000,5 - Find next record
8005 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
8010 IF PROFILE_ON THEN CHAN=_ZPC ELSE CHAN=_ZP4
8011 TAB_FLG$=">"; NEXT_ID=-1
8015 _KEY$=KEY(CHAN,END=8055)
8016 IF POS(" "<>S9$(8,24))>0 AND POS(_KEY$(1,4)=S9$(8,24),4)=0 THEN READ (CHAN,KEY=_KEY$(1,4)+$FF$,DOM=8015,END=8055); GOTO 8015 ! Check operator security for restricted to list
8020 IF PROFILE_ON THEN {
8025 KEY_ZPC$=_KEY$,_KEY$=_KEY$(1,4)+_KEY$(30)
8030 READ (_ZPC,KEY=KEY_ZPC$)
8035 READ (_ZP4,KEY=_KEY$,DOM=8015,ERR=CHECK_ERR); GOSUB SET_OLD_SORT_KEY_VALUES; GOTO INIT_FOLDER
8040  } ELSE {
8045 READ (_ZP4,KEY=_KEY$,ERR=CHECK_ERR); GOSUB SET_OLD_SORT_KEY_VALUES; GOTO INIT_FOLDER
8050  }
8055 MSGBOX MSG("END_OF_FIL"),MSG("FYI"),"!"; EXIT 
8060 ! 
8100 PRIOR_REC:! ^100,5 - Get prior record
8105 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
8106 TAB_FLG$=">"; NEXT_ID=-1
8110 IF PROFILE_ON THEN CHAN=_ZPC ELSE CHAN=_ZP4
8115 _KEY$=KEP(CHAN,END=8155)
8116 IF POS(" "<>S9$(8,24))>0 AND POS(_KEY$(1,4)=S9$(8,24),4)=0 THEN READ (CHAN,KEY=_KEY$(1,4)+$00$,DOM=8115,END=8155); GOTO 8115 ! Check operator security for restricted to list
8120 IF PROFILE_ON THEN {
8125 KEY_ZPC$=_KEY$,_KEY$=_KEY$(1,4)+_KEY$(30)
8130 READ (_ZPC,KEY=KEY_ZPC$)
8135 READ (_ZP4,KEY=_KEY$,ERR=CHECK_ERR); GOSUB SET_OLD_SORT_KEY_VALUES; GOTO INIT_FOLDER
8140  } ELSE {
8145 READ (_ZP4,KEY=_KEY$,ERR=CHECK_ERR); GOSUB SET_OLD_SORT_KEY_VALUES; GOTO INIT_FOLDER
8150  }
8155 MSGBOX MSG("START_FILE"),MSG("FYI"),"!"; EXIT 
8160 ! 
8200 FIRST_REC:! ^100,5 - Get first record
8205 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
8206 TAB_FLG$=">"; NEXT_ID=-1
8210 IF PROFILE_ON THEN CHAN=_ZPC ELSE CHAN=_ZP4
8215 _KEY$=KEF(CHAN,ERR=8255)
8216 IF POS(" "<>S9$(8,24))>0 AND POS(_KEY$(1,4)=S9$(8,24),4)=0 THEN READ (CHAN,KEY=_KEY$(1,4)+$FF$,DOM=*NEXT,ERR=8255) ELSE GOTO 8220
8217 _KEY$=KEY(CHAN,ERR=8255); GOTO 8216
8220 IF PROFILE_ON THEN {
8225 KEY_ZPC$=_KEY$,_KEY$=_KEY$(1,4)+_KEY$(30)
8230 READ (_ZPC,KEY=KEY_ZPC$)
8235 READ (_ZP4,KEY=_KEY$,ERR=CHECK_ERR); GOSUB SET_OLD_SORT_KEY_VALUES; GOTO INIT_FOLDER
8240  } ELSE {
8245 READ (_ZP4,KEY=_KEY$,ERR=CHECK_ERR); GOSUB SET_OLD_SORT_KEY_VALUES; GOTO INIT_FOLDER
8250  }
8255 MSGBOX MSG("REC_NO_1ST"),MSG("FYI"),"!"; EXIT 
8260 ! 
8300 LAST_REC:! ^100,5 - Last record
8305 IF CHANGE_FLG<>0 THEN GOSUB CHECK_CHANGES
8306 TAB_FLG$=">"; NEXT_ID=-1
8310 IF PROFILE_ON THEN CHAN=_ZPC ELSE CHAN=_ZP4
8315 _KEY$=KEL(CHAN,ERR=8355)
8316 IF POS(" "<>S9$(8,24))>0 AND POS(_KEY$(1,4)=S9$(8,24),4)=0 THEN READ (CHAN,KEY=_KEY$(1,4)+$00$,DOM=*NEXT,ERR=8355) ELSE GOTO 8320
8317 _KEY$=KEP(CHAN,ERR=8355); GOTO 8316
8320 IF PROFILE_ON THEN {
8325 KEY_ZPC$=_KEY$,_KEY$=_KEY$(1,4)+_KEY$(30)
8330 READ (_ZPC,KEY=KEY_ZPC$)
8335 READ (_ZP4,KEY=_KEY$,DOM=8315,ERR=CHECK_ERR); GOTO INIT_FOLDER
8340  } ELSE {
8345 READ (_ZP4,KEY=_KEY$,ERR=CHECK_ERR); GOTO INIT_FOLDER
8350  }
8355 MSGBOX MSG("REC_NO_LST"),MSG("FYI"),"!"; EXIT 
8360 ! 
8400 CHECK_ERR:! ^100,5 - Error on file read
8405 IF ERR<>0 THEN EXIT ERR
8410 MSGBOX "Record is busy.  Do you wish to Retry?",MSG("CONFIRM"),"?,YESNO",ANSWER$
8415 IF ANSWER$="NO" THEN EXIT ELSE RETRY 
8420 ! 
8500 ! ^100,5 - Call RTGWOR to post to remote T/M based on paramters RT_FILE$
8505 ! is file name, RT_COMM$ is command (Update or Delete) and RT_KEY$ is
8510 ! key value
8515 REMOTE_TM:
8520 GOSUB 9000
8525 IF SP_CODE$="" THEN SP_CODE$=A$(359,4)
8530 IF SP_CODE$=A$(359,4) THEN {
8535 CALL "RTGLST",W9$,A$(1,4),SP_CODE$,SEND_TO$
8540  } ELSE {
8545 CALL "RTGLST",W9$,A$(1,4),SP_CODE$,SEND_TO$
8550 TEMP$=SEND_TO$,SP_CODE$=A$(359,4)
8555 CALL "RTGLST",W9$,A$(1,4),SP_CODE$,SEND_TO$
8560 SEND_TO$=TEMP$+SEND_TO$
8565  }
8570 ! If salesperson or customer changed then resend all of the data for
8575 ! this contact and customer
8580 IF PREV_SP_CODE$<>A$(359,4) OR PREV_CUST_CODE$<>A$(363,10) THEN {
8585 RESEND=1
8590  } ELSE {
8595 RESEND=0
8600  }
8605 IF STP(SEND_TO$,2)="" THEN GOTO 8650
8610 FOR INDEX=1 TO LEN(SEND_TO$)-3 STEP 4
8615 CALL "RTGWOR",ERR=*NEXT,SEND_TO$(INDEX,4),RT_FILE$,RT_COMM$,RT_KEY$,A$,1,A{ALL}
8620 IF RESEND THEN {
8625 ! To resend write to RT7 with filename of ZP4 + 3 tildes
8630 WRITE (_RT7,KEY=SEND_TO$(INDEX,4)+A$(1,4)+"ZP4~~~"+A$(1,10))
8635  }
8640 NEXT INDEX
8645 SEND_TO$="",SP_CODE$=""
8650 RETURN 
8655 ! 
8700 ! ^100,5 - If Remote T/M then if this is the remote then check the RT6
8705 ! record to see if the contact #'s have a range, and if the contact is
8710 ! out of range, then prompt and disallow
8715 CHECK_CONTACT_RANGE:
8720 GOSUB 9000
8725 IF W9$="" THEN RANGE_OK$="Y"; GOTO 8770
8730 IF W9$(7,1)="H" THEN RANGE_OK$="Y"; GOTO 8770
8735 RANGE_OK$="N"
8740 READ (_RT6,KEY=A$(1,4)+W9$(8,4),DOM=8750)RT6$
8745 IF STP(RT6$(11,12),3," ")="" OR (A$(5,6)>=RT6$(11,6) AND A$(5,6)<=RT6$(17,6)) THEN RANGE_OK$="Y"
8750 IF RANGE_OK$<>"Y" THEN {
8755 MESSAGE$="The contact number is restricted to "+STP(MID(RT6$,11,6),2)+"-"+STP(MID(RT6$,17,6),2)+" for this list"
8760 MSGBOX MESSAGE$,"Attention","info"
8765  }
8770 RETURN 
8775 ! 
8800 INIT_PROG_BAR:
8805 T=NUM(FN%FIN$(_ZPC,"NUMREC")) ! CALL "ZZINFO",_ZPC,T9,X3$,T,T0,K,B,D,S0,S1,F$
8810 ! PRINT @(0,12),"There are "+STR(T)+" records to process in Phase "+PHASE$,
8815 ! Set T0, minimum of 2
8820 T0=INT(T*.02); IF T0<=1 THEN T0=2
8825 C=0
8830 CALL "*progbar;init",MSG("UPDATE_TM1"),50
8835 RETURN 
8840 ! 
8845 UPDATE_PROG_BAR:! T=Total records, T0=Interval, C=Current number
8850 ! CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8855 CALL "*progbar;update",ERR=UPDATE_NOTE_AFTER_LETTER_END,LIST_TYPE_CODE$+"-"+CONT_CODE$
8860 RETURN 
8865 ! 
8870 WRAPUP_PROG_BAR:
8875 CALL "*progbar;wrap_up"
8880 RETURN 
8885 ! 
9000 ! ^1000,5 - Read data from ZP4 internal iol to old style iol
9005 ZP4_REC$=REC(IOL(_ZP4))
9010 READ DATA FROM ZP4_REC$ TO IOL=ZP4_IOL
9015 RETURN 
9020 ! 
9100 ! ^100,5 - Check telemarketing status
9105 S3=1,P6$=""
9110 IF STP(CST.CONT_LIST_CODE$+CST.CONT_CONT_CODE$,2)<>"" AND CST.CONT_LIST_CODE$+CST.CONT_CONT_CODE$<>LIST_TYPE_CODE$+CONT_CODE$ THEN {
9115 MSGBOX "NOTE: Customer record already has a T/M Code.  Replace with this code?","Confirm","?,YESNO,2",ANSWER$
9120 IF ANSWER$="NO" THEN P6$="N" ELSE P6$="Y"
9125  }
9130 RETURN 
9135 ! 
9200 SETUP_MESSAGES:
9210 _MSG_FILOPNERR1$=MSG("FILOPNERR1")
9220 _MSG_DIRECTORY$=MSG("DIRECTORY")
9230 _MSG_PREFIX$=MSG("PREFIX")
9290 SETUP_MESSAGES_END:RETURN 
9295 ! 
9700 WRAPUP:! 9700,5 - Clean up variables and close files if required
9705 READ DATA FROM "" TO IOL=GLOBAL_IOL
9710 IF _AR1 THEN CLOSE (_AR1)
9715 IF _ZP0 THEN CLOSE (_ZP0)
9720 IF _ZP4 THEN CLOSE (_ZP4)
9725 IF _ZP5 THEN CLOSE (_ZP5)
9730 IF _ZP6 THEN CLOSE (_ZP6)
9731 IF _ZP7 THEN CLOSE (_ZP7)
9735 IF _ZP8 THEN CLOSE (_ZP8)
9740 IF ZZPARM THEN CLOSE (ZZPARM)
9745 IF _ZPC THEN CLOSE (_ZPC)
9750 IF _RT6 THEN CLOSE (_RT6)
9755 IF _RT7 THEN CLOSE (_RT7)
9760 IF _ZPA THEN CLOSE (_ZPA)
9765 IF _ZPD THEN CLOSE (_ZPD)
9770 IF _ZPE THEN CLOSE (_ZPE)
9775 IF _ZPB THEN CLOSE (_ZPB)
9777 IF _ZP3 THEN CLOSE (_ZP3)
9779 IF NOT(%ARGMAA_FLG) THEN %CUST_DIV$="",%CUST_CODE$="" ! SSP238505 jdf
9780 EXIT 
9785 ! 
9790 RETURN 
9800 ! 
9820 RETURN 
9821 ! ^ 10000
9910 SETUP_MAIL:
9920 _FIRST_TAB=CONT_ADDR_1.CTL
9930 _LAST_TAB=BUTTON_1.CTL
9940 NEXT_ID=FROM.CTL
9950 REFRESH_FLG=1
9960 EXIT 
9970 LETTER_CONTROLS:
9980 IF PROFILE_ON THEN {
9990 DISABLE CONTROL PERSON_REC_LETTER.CTL
9999 END 
10000 DISABLE CONTROL CONT_TITLE.CTL
10010 DISABLE CONTROL LETTER_GREETING.CTL
10020 DISABLE CONTROL LETTER_ADDR_1.CTL
10030 DISABLE CONTROL LETTER_ADDR_2.CTL
10040 DISABLE CONTROL LETTER_LONG_CITY.CTL
10050 DISABLE CONTROL LETTER_ST.CTL
10060 DISABLE CONTROL LETTER_ZIP.CTL
10070 DISABLE CONTROL LETTER_PHONE.CTL
10080 DISABLE CONTROL FAX_NUM.CTL
10090 DISABLE CONTROL EMAIL_ADDRESS.CTL
10100  } ELSE {
10110 ENABLE CONTROL PERSON_REC_LETTER.CTL
10120 ENABLE CONTROL CONT_TITLE.CTL
10130 ENABLE CONTROL LETTER_GREETING.CTL
10140 ENABLE CONTROL LETTER_ADDR_1.CTL
10150 ENABLE CONTROL LETTER_ADDR_2.CTL
10160 ENABLE CONTROL LETTER_LONG_CITY.CTL
10170 ENABLE CONTROL LETTER_ST.CTL
10180 ENABLE CONTROL LETTER_ZIP.CTL
10190 ENABLE CONTROL LETTER_PHONE.CTL
10200 ENABLE CONTROL FAX_NUM.CTL
10210 ENABLE CONTROL EMAIL_ADDRESS.CTL
10220  }
10230 RETURN 
10240 LETTER_QRY_SELECT:
10250 ENTER FROM_QRY$
10260 IF %SALES_PERSON$=FROM_QRY$ THEN EXIT 
10270 EXIT 123
10280 LETTER_SP_CHG:
10290 %SALES_PERSON$=TF_FROM$
10300 REFRESH_FLG=1
10310 EXIT 
10320 NEW_LETTER:
10330 LAST_KEY$=STR(NUM(KEL(_ZP8))+1:"0000",ERR=*NEXT)
10340 IF LAST_KEY$="" THEN LAST_KEY$=STR(1:"0000")
10350 LETTER_CODE$=LAST_KEY$
10360 READ (_ZP8,KEY=LAST_KEY$,ERR=*NEXT,REC=LKEY$); LAST_KEY$=STR(NUM(LAST_KEY$)+1:"0000"); GOTO *SAME
10370 LKEY$=""
10380 NEXT_ID=FROM.CTL
10390 %SALES_PERSON$=TF_FROM$
10400 LETTER_CODE$=LAST_KEY$
10410 GOSUB RESET_LETTER
10420 REFRESH_FLG=1
10430 RETURN 
10440 ! 
10450 GOBUTTON_NEW_TEXT:
10460 RADIO_BUTTON READ RB_EDIT.CTL,SELECTED,ERR=*NEXT
10470 GB=GO_BUTTON.CTL
10480 IF SELECTED=1 THEN GB'TEXT$="{!Word}&Word" ELSE GB'TEXT$="{!FileCabinet}&Send to File"
10490 REFRESH_FLG=1
10500 RETURN 
10510 RESET_LETTER:
10520 SUBJECT_LETTER$=""
10530 DROP_BOX WRITE LETTER_TEMPLATE.CTL,0
10540 LETTER_GREETING$=CONT_GREETING$
10550 LETTER_ADDR_1$=CONT_ADDR_1$
10560 LETTER_ADDR_2$=CONT_ADDR_2$
10570 LETTER_LONG_CITY$=CONT_LONG_CITY$
10580 LETTER_ST$=CONT_ST$
10590 LETTER_ZIP$=CONT_ZIP_CODE$
10600 LETTER_PHONE$=CONT_PHONE$
10610 FAX_NUM$=CONT_FAX$
10620 LETTER_TITLE$=CONT_TITLE$
10630 RECIPIENT$=CONT_PERSON$
10640 RETURN 
10650 ! 
11000 MIL_TIME:! SSP226211 jdf
11005 SWITCH DB_TIME$(1,2) ! SSP226211 jdf
11010 CASE "01" ! SSP226211 jdf
11015 DB_TIME$(1,2)="13" ! SSP226211 jdf
11020 BREAK ! SSP226211 jdf
11025 CASE "02" ! SSP226211 jdf
11030 DB_TIME$(1,2)="14" ! SSP226211 jdf
11035 BREAK ! SSP226211 jdf
11040 CASE "03" ! SSP226211 jdf
11045 DB_TIME$(1,2)="15" ! SSP226211 jdf
11050 BREAK ! SSP226211 jdf
11055 CASE "04" ! SSP226211 jdf
11060 DB_TIME$(1,2)="16" ! SSP226211 jdf
11065 BREAK ! SSP226211 jdf
11070 CASE "05" ! SSP226211 jdf
11075 DB_TIME$(1,2)="17" ! SSP226211 jdf
11080 BREAK ! SSP226211 jdf
11085 CASE "06" ! SSP226211 jdf
11090 DB_TIME$(1,2)="18" ! SSP226211 jdf
11095 BREAK ! SSP226211 jdf
11100 CASE "07" ! SSO226211 jdf
11105 DB_TIME$(1,2)="19" ! SSP226211 jdf
11110 BREAK ! SSP226211 jdf
11115 CASE "08" ! SSP226211 jdf
11120 DB_TIME$(1,2)="20" ! SSP226211 jdf
11125 BREAK ! SSP226211 jdf
11130 CASE "09" ! SSP226211 jdf
11135 DB_TIME$(1,2)="21" ! SSP226211 jdf
11140 BREAK ! SSP226211 jdf
11145 CASE "10" ! SSP226211 jdf
11150 DB_TIME$(1,2)="22" ! SSP226211 jdf
11155 BREAK ! SSP226211 jdf
11160 CASE "11" ! SSP226211 jdf
11165 DB_TIME$(1,2)="23" ! SSP226211 jdf
11170 BREAK ! SSP226211 jdf
11175 END SWITCH ! SSP226211 jdf
11180 RETURN ! SSP226211 jdf
11370 ! 
11380 MOVE_FILES:
11390 ENTER SRCHPATH$,PRGFLE$,RESULT
11400 RESULT=0
11410 FULLFILENAME$=SRCHPATH$+"\"+PRGFLE$
11420 CALL "ZZ2TRN",PRGFLE$,FULLFILENAME$,RESULT
11430 EXIT 
11440 ! 
11450 OPEN_PROFILE_FILE:
11451 IF USERNAME$="" THEN CALL "ZZ2FNC;GETUSERNAME",USERNAME$
11460 OPEN (HFN,ERR=*NEXT)"ZPC"+%C$+USERNAME$; _ZPC=LFO; GOTO *RETURN ! TM Profile Sort
11470 IF ERR=12 THEN {
11480 SORT "ZPC"+%C$+USERNAME$,35,0
11490 RETRY 
11500  } ELSE {
11510 MSGBOX "Unable to open or create sort file ZPC"+%C$+" due to an error "+STR(ERR)+". Cannot process this routine.","Attention","info"
11520 CMD_STR$="E"; EXIT 
11530  }
11540 RETURN 
11600 LIST_TYPE_ENTRY:
11610 IF POS(" "<>S9$(8,24))>0 AND POS(LIST_TYPE_CODE$=S9$(8,24),4)=0 THEN {
11615 MSGBOX MSG("ACCESS_DEN")+" "+MSG("NOT_AUTH")+" "+MSG("LIST_T_C")+" "+LIST_TYPE_CODE$,MSG("ATTN"),"!"
11620 LIST_TYPE_CODE$="",NEXT_ID=LIST_TYPE_CODE.CTL,REFRESH_FLG=1,CHANGE_FLG=0,CHANGE_T_CODE=0
11625 CALL "*wingrp;disable",AUTO.GRP$
11630  }
11640 LIST_TYPE_ENTRY_END:RETURN 
11645 ! 
11700 NOTES_ACTION_CODE_ENTRY:
11710 DIM AC$(46); FIND (_ZP3,KEY=ACTION_CODE$,DOM=NOTES_ACTION_CODE_ENTRY_END)AC$
11713 ACTION_COMMENT$=AC$(2,40)
11715 DIM X$(46); IF AC$(42,1)<>" " THEN FIND (_ZP3,KEY=AC$(42,1),DOM=NOTES_ACTION_CODE_ENTRY_END)X$ ! SSP#230347
11720 IF NUM(AC$(43,3),ERR=NOTES_ACTION_CODE_ENTRY_END)<>0 THEN CALL "ZZDATE",X3$,"",DATE_OF_NOTE$,Q$,NUM(AC$(43,3)),0,0,0,0,0,0,"","",""; FOLLOW_UP_DATE$=Q$,FOLLOW_UP_ACTION_CDE$=AC$(42,1),FOLLOW_UP_DESC$=X$(2,40)
11740 NOTES_ACTION_CODE_ENTRY_END:RETURN 
11745 ! 
11750 LAST_CONT_ACTION_ENTRY:
11760 DIM AC$(46); FIND (_ZP3,KEY=LAST_CONT_ACTION$,DOM=LAST_CONT_ACTION_ENTRY_END)AC$
11763 LAST_CONT_DESC$=AC$(2,40)
11765 IF AC$(42,1)<>" " THEN DIM X$(46); FIND (_ZP3,KEY=AC$(42,1),DOM=LAST_CONT_ACTION_ENTRY_END)X$
11770 IF NUM(AC$(43,3),ERR=LAST_CONT_ACTION_ENTRY_END)<>0 THEN CALL "ZZDATE",X3$,"",LAST_CONT_DATE$,Q$,NUM(AC$(43,3)),0,0,0,0,0,0,"","",""; IF STP(FOLLOW_UP_DATE$,3)="" THEN FOLLOW_UP_DATE$=Q$,FOLLOW_UP_ACTION_CDE$=AC$(42,1),FOLLOW_UP_DESC$=X$(2,40)
11790 LAST_CONT_ACTION_ENTRY_END:RETURN 
11795 ! 
11800 FOLLOW_UP_ACTION_CDE_ENTRY:
11810 DIM FAC$(46); FIND (_ZP3,KEY=FOLLOW_UP_ACTION_CDE$,DOM=*NEXT)FAC$
11815 FOLLOW_UP_DESC$=FAC$(2,40)
11840 FOLLOW_UP_ACTION_CDE_ENTRY_END:RETURN 
11845 ! 
12000 ! Copy Text File to Local PC.
12010 COPY_TXT_FILE:
12020 IF DEC(MID(MSE,22,1))>3 THEN WINDX=1,WDX$="[wdx]" ELSE WINDX=0,WDX$=""
12030 CALL WDX$+"*WINDX.UTL;GET_LWD",LOCATION$
12040 DATA_TEMP$=LOCATION$(1,POS("\"=LOCATION$))+LETTER_FILE$; DATA_TEMP$=SUB(DATA_TEMP$,"\","\tmp\") ! SSP#264573
12045 ERASE "[WDX]"+DATA_TEMP$,ERR=*NEXT
12050 SERIAL "[WDX]"+DATA_TEMP$ ! ssp 228670 !SSP#264573
12060 FILE_1=HFN; OPEN (FILE_1,ISZ=1)"[WDX]"+DATA_TEMP$
12070 FILE_2=HFN; OPEN (FILE_2,ISZ=1)LETTER_FILE$
12080 READ RECORD (FILE_2,SIZ=1024,END=END_COPY)ZZZ$
12090 WRITE RECORD (FILE_1,SIZ=1024)ZZZ$
12100 GOTO 12080
12110 END_COPY:
12120 CLOSE (FILE_1,ERR=*NEXT)
12130 CLOSE (FILE_2,ERR=*NEXT)
12190 RETURN 
13000 SEL_QUERY: VAL$=""
13010 PROCESS "QRY_ZP4C","../ZPG/ZP.EN",VAL$
13020 IF STP(VAL$)="" THEN RETURN 
13022 IF POS(" "<>S9$(8,24))>0 AND POS(VAL$(1,4)=S9$(8,24),4)=0 THEN {! SSP#282870
13024 MSGBOX MSG("ACCESS_DEN")+" "+MSG("NOT_AUTH")+" "+MSG("LIST_T_C")+" "+VAL$(1,4),MSG("ATTN"),"!" ! SSP#282870
13026 NEXT_ID=LIST_TYPE_CODE.CTL,REFRESH_FLG=1,CHANGE_FLG=0,CHANGE_T_CODE=0,VAL$="" ! SSP#282870
13027  } ! SSP#282870
13028 IF STP(VAL$)="" THEN RETURN ! SSP#282870
13030 LIST_TYPE_CODE$=MID(VAL$,1,4),CONT_CODE$=MID(VAL$,5)
13040 GOTO FIND_REC
14000 VALIDATE_REP:! SSP#219720
14010 VAL_REP=0
14020 IF CST.SPER_CODE$<>DIM(4) THEN CALL "UPDSYO;VAL_REP",ERR=*NEXT,%X3$,CST.SPER_CODE$,OK; IF OK THEN VAL_REP=1; GOTO *RETURN
14030 IF CST.SPER_CODE_2$<>DIM(4) THEN CALL "UPDSYO;VAL_REP",ERR=*NEXT,%X3$,CST.SPER_CODE_2$,OK; IF OK THEN VAL_REP=1; GOTO *RETURN
14040 IF CST.SPER_CODE_3$<>DIM(4) THEN CALL "UPDSYO;VAL_REP",ERR=*NEXT,%X3$,CST.SPER_CODE_3$,OK; IF OK THEN VAL_REP=1; GOTO *RETURN
14050 IF CST.SPER_CODE_4$<>DIM(4) THEN CALL "UPDSYO;VAL_REP",ERR=*NEXT,%X3$,CST.SPER_CODE_4$,OK; IF OK THEN VAL_REP=1; GOTO *RETURN
14060 IF CST.SPER_CODE_5$<>DIM(4) THEN CALL "UPDSYO;VAL_REP",ERR=*NEXT,%X3$,CST.SPER_CODE_5$,OK; IF OK THEN VAL_REP=1; GOTO *RETURN
14080 IF CST.SPER_CODE$=DIM(4) AND CST.SPER_CODE_2$=DIM(4) AND CST.SPER_CODE_3$=DIM(4) AND CST.SPER_CODE_4$=DIM(4) AND CST.SPER_CODE_5$=DIM(4) THEN VAL_REP=1
14090 RETURN 
15000 SET_REMINDER_TIME:
15010 IF LEN(DB_TIME$)>4 THEN GOTO *RETURN
15020 DB_TIME1$=DB_TIME$,T01=NUM(DB_TIME$(1,2)); IF T01>=12 THEN AMPM$=" "+%X3$(205,3) ELSE AMPM$=" "+%X3$(202,3)
15030 IF T01>=13 THEN T01=T01-12
15040 DB_TIME$=STR(INT(T01):"00")+%X3$(68,1)+STR(NUM(DB_TIME1$(3,2)):"00")+AMPM$
15090 RETURN 
20000 SPER_ENTRY:
20010 IF STP(SPER_CODE$,3)="" THEN MSGBOX MSG("MUST_CNT_S"),MSG("INVALID"),"!"; NEXT_ID=SPER_CODE.CTL
20040 SPER_ENTRY_END:RETURN 
20045 ! 
20050 SOURCE_ENTRY:
20060 IF STP(SRC_OF_LEAD$,3)="" THEN MSGBOX MSG("MUST_CNT_R"),MSG("INVALID"),"!"; NEXT_ID=SRC_OF_LEAD.CTL
20090 SOURCE_ENTRY_END:RETURN 
20095 ! 
20100 CATEGORY_ENTRY:
20110 IF STP(CONT_CATEGORY$,3)="" THEN MSGBOX MSG("MUST_CNT_C"),MSG("INVALID"),"!"; NEXT_ID=CONT_CATEGORY.CTL
20140 CATEGORY_ENTRY_END:RETURN 
20145 ! 
21000 LOOKUP_ZIP:! Lookup zipcode, set city & state if found, set NEW_ZIP for later use
21005 NEW_ZIP=0
21010 CALL "ZYGMBA;CHECK_ZIP",CONT_ZIP_CODE$,ZIP_FOUND,ZIP_CITY$,ZIP_ST$,"",ZIP_AREA_CODE$,""
21015 IF CONT_PHONE$="" THEN CONT_PHONE$=DIM(14)
21020 IF ZIP_FOUND THEN CONT_LONG_CITY$=ZIP_CITY$,CONT_ST$=ZIP_ST$; IF STP(MID(CONT_PHONE$,1,3))="" THEN CONT_PHONE$(1,3)=ZIP_AREA_CODE$; END_IF ; IF LEN(CONT_FAX$)=0 THEN CONT_FAX$=DIM(3); END_IF ; IF STP(MID(CONT_FAX$,1,3))="" THEN CONT_FAX$(1,3)=ZIP_AREA_CODE$; END_IF ; REFRESH_FLG=1,NEXT_ID=CONT_PERSON.CTL ELSE NEW_ZIP=1 ! SSP247904 jdf
21095 RETURN 
21099 ! 
21100 UPDATE_ZIP:! If new_zip then update the zip code table
21110 IF NEW_ZIP THEN CALL "ZYGMBA;UPDATE_ZIP",CONT_ZIP_CODE$,CONT_LONG_CITY$,CONT_ST$,"",CONT_PHONE$(1,3),CONT_LONG_CITY$ ! get area code from phone,long city from regular city
21180 NEW_ZIP=0
21195 RETURN 
21199 ! 
21200 GET_FROM_FIELDS:
21205 FROM_NAME$="",FROM_TITLE$="",FROM_CLOSING$=""
21210 READ (_ZP7,KEY=TF_FROM$,REC=ZP7$,DOM=GET_FROM_FIELDS_END)
21215 FROM_NAME$=ZP7.SPER_NAME$
21220 FROM_TITLE$=ZP7.TITLE$
21225 FROM_CLOSING$=ZP7.LETTER_CLOSING$
21240 GET_FROM_FIELDS_END:RETURN 
21245 ! 
22000 ! 
22010 EXCEL:
22015 R=1,COL=22
22020 CALL "[wdx]*CMDWORD;GET_EXCEL",ERR=*NEXT,OB_EXCEL,TF_NAME$
22030 EXCEL=HFN; OPEN (EXCEL)"[WDX][DDE]Excel;"+TF_NAME$
22040 F_LT=HFN; OPEN (F_LT)LETTER_FILE$
22045 MAIN_READS:
22050 READ (F_LT,END=END_EXCEL)REC$
22060 K$="R"+STR(R)+"C1:R"+STR(R)+"C"+STR(COL)
22070 WRITE RECORD (EXCEL,KEY=K$)REC$
22080 R+=1; GOTO MAIN_READS
22090 END_EXCEL:
22095 WRITE RECORD (EXCEL)"[Select("+QUO+"r1c1:r1c1"+QUO+")]"; WRITE RECORD (EXCEL,ERR=*NEXT)"[Format.Auto]"
22100 CLOSE (EXCEL,ERR=*NEXT)
22105 CLOSE (F_LT)
22110 CALL "[WDX]*CMDWORD;CLOSE",OB_EXCEL
22120 RETURN 
25000 GET_CUST_INFO:! SSP238505 jdf
25010 IF STP(CUSTOMER$,2)="" THEN GOTO NO_CUSTOMER ! SSP238505 jdf
25020 CALL "ZZWLKU;PARSE_CUST",CUSTOMER$,CUST_DIV$,CUST_CODE$; CUSTOMER$=CUST_DIV$+CUST_CODE$ ! SSP238505 jdf
25030 READ (_AR1,KEY=CUST_DIV$+CUST_CODE$,DOM=NO_CUSTOMER,REC=CST$) ! SSP238505 jdf
25040 GOSUB VALIDATE_REP; IF NOT(VAL_REP) THEN CUSTOMER$="",CUST_DIV$="",CUST_CODE$=""; MSGBOX MSG("SEC_CUST"); GOTO NO_CUSTOMER ! SSP#219720
25050 GOSUB 9100 ! SSP238505 jdf
25070 CONT_NAME$=CST.CUST_NAME$,CONT_ADDR_1$=CST.CUST_ADDR_1$,CONT_ADDR_2$=CST.CUST_ADDR_2$ ! SSP238505 jdf
25080 CONT_LONG_CITY$=CST.CUST_CITY$,CONT_ST$=CST.CUST_ST$,CONT_ZIP_CODE$=CST.CUST_ZIP_CODE$ ! SSP238505 jdf
25090 CONT_FAX$=CST.CUST_FAX$,CONT_LONG_LOOKUP_SEQ$=CST.CUST_LOOKUP$,CONT_GREETING$=CST.CUST_GREETING$ ! SSP238505 jdf
25100 CONT_PHONE$=CST.CUST_PHONE$,SPER_CODE$=CST.SPER_CODE$ ! SSP238505 jdf
25105 CHANGE_FLG=1,REFRESH_FLG=1 ! SSP238505 jdf
25110 RETURN ! SSP238505 jdf
37000 NO_PATH:
37010 PROCESS "ZWGPAT","../ZZG/ZZ.EN"
37020 FIND (ZZPARM,KEY="PATH"+%X3$(40,3),ERR=NO_PATH)EXCEL$,WORDPAD$,TPATH$
37030 GOTO LOAD_TEMPLATES
37040 ! 
38000 EMAIL_OPTION:
38005 PRINT 'CURSOR'(6),
38010 CLOSE (H_LET)
38020 ! EMAIL_ADDRESS$="jose.rodriguez@topform.com"
38025 IF STP(EMAIL_ADDRESS$)="" THEN MSGBOX "Please, enter Email Address",MSG("WARNING"),"!,TIM=5"; PRINT 'CURSOR'(0),'MESSAGE'('B?'+'BLACK'+"",0),; EXIT 
38028 PRINT 'MESSAGE'('_RED'+'WHITE'+"Now Working : "+EMAIL_ADDRESS$,0),
38030 IF OPT=1 THEN GOSUB COPY_TXT_FILE; CALL WDX$+"*windx.utl;get_lwd",LOCATION$; XX=POS("\"=LOCATION$,-1),LOCATION$=LOCATION$(1,XX),DATFILE$=DATA_TEMP$,DOCFILE$=TPATH$(6)+TEMPLATE$; CALL "[wdx]"+LOCATION$+"TFWORDLINK;EMAIL_OPTION",ERR=*NEXT,DATFILE$,DOCFILE$,EMAIL_ADDRESS$,SUBJECT_LETTER$,MESSAGE_EMAIL$
38035 IF OPT=2 THEN GOSUB COPY_TXT_FILE; CALL WDX$+"*windx.utl;get_lwd",LOCATION$; XX=POS("\"=LOCATION$,-1),LOCATION$=LOCATION$(1,XX),DATFILE$=DATA_TEMP$,DOCFILE$=TPATH$(6)+TEMPLATE$; CALL "[wdx]"+LOCATION$+"TFWORDLINK;EMAIL_OPTION_2",ERR=*NEXT,DATFILE$,DOCFILE$,EMAIL_ADDRESS$,SUBJECT_LETTER$,MESSAGE_EMAIL$
38040 ERASE LETTER_FILE$,ERR=*NEXT
38050 SERIAL LETTER_FILE$,ERR=*NEXT
38060 OPEN (H_LET,ISZ=1,ERR=PROCESS_LETTER_END)LETTER_FILE$
38070 PRINT (H_LET,ERR=*NEXT)HDR_REC$+BB$ ! 269459
38075 PRINT 'CURSOR'(0),'MESSAGE'('B?'+'BLACK'+"",0),
38080 RETURN 
56000 ! "196420-In Contact Management, it does not show the "time" stamped  
56002 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56004 ! "214362-Problem with contact management Label printing through      
56005 ! "220625-I keep getting this error message while entering in new     
56008 ! "225645-Correct Wordlink for Vista in CRM                           
56010 REM "226211-Can you tell me why when we put the time we called on the   
56011 ! "228670-After release getting error message trying to use           
56012 ! "       word link button
56014 REM "228974-When using Word link for individual letters to various      
56016 REM "238505-GUI: set up a new customer we would get a message asking if 
56018 REM "240031-GUI:  In Contact Management Set Up Contacts the customer    
56019 REM "247904-Area code disappears when zip code/tax code is updated...?? 
56020 REM "253951-Contact Management Word link not recognizing templates saved
56021 REM "264573-problem using wordlink to email using a profile with a      
56022 REM "269459-Contact Management Wordlink emailing of attachments is not  
56023 REM "214934-In the CHUI version there was a function key to position the
56024 REM "270809-If you add a note in contact management it blanks out the   
56025 REM "282870-She is trying to access the C/M List type ALL and getting   
64000 ! ^ 64000
64010 DEF FNIS_VALID(DPATH$)
64020 LOCAL _DIR
64030 _DIR=UNT
64040 OPEN (_DIR,ERR=*NEXT,ISZ=1)DPATH$; CLOSE (_DIR); RETURN 1
64050 RETURN 0
64060 END DEF
64070 ! 
64080 DEF FNGETCREATEDATE$(AFULLNAME$)
64090 LOCAL _DIR,FCDT$
64100 _DIR=UNT
64110 OPEN (_DIR,ERR=64150,ISZ=1)AFULLNAME$
64120 FCDT$=FIN(_DIR,ERR=*NEXT)
64130 FCDT$=MID(FCDT$,13,4,ERR=*NEXT)
64140 CLOSE (_DIR)
64150 FCDT$=DTE(JUL(1970,1,1)+DEC($00$+FCDT$)/86400)
64160 RETURN FCDT$
64170 END DEF
64180 ! 
64190 DEF FNIS_1STDATE_LE(DT1$,DT2$)
64200 LOCAL _DT1,_DT2
64210 _DT1=JUL(DT1$,ERR=64240)
64220 _DT2=JUL(DT2$,ERR=64240)
64230 IF _DT1<=_DT2 THEN RETURN 1
64240 RETURN 0
64250 END DEF
64260 ! 
64270 VALIDATE_BAROMETER:
64271 ENTER FIELD$,ERR_MSG$,VAR_TAG$,ERR=*NEXT
64280 IF MSK(FIELD$,"[0-9]")=0 THEN ERR_MSG$="Barometer must be numeric between 0 and 9"
64290 EXIT 
