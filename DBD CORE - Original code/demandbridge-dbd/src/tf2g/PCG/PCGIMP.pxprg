0010 REM "<PCGIMP> Import .csv file into PC1 file for Superior - GUI
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 04/04/12 - 8.685555 - tma - SSP# 253912
0037 REM "253912-Panel Changes for Product Catalog Gateway CSV File Import   
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0049 REM "IF NUL(%WDX$) THEN MSGBOX "You must be using Windx to access this program"; GOTO 0075
0050 PROCESS "PCGIMP","../PCG/PC.EN"
0051 EXIT 
0075 IF %GUI=0 THEN RUN "ZMENU" ELSE EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0105 INIT:
0110 X0$="PCGIMP",X1$="Import file into GPC Format"
0115 DIM COMMA$(100,",")
0120 DIM Z0$(80,"-"),FILE$[150]
0121 M2$="#####0"
0125 DIM BLANK$(200," ")
0126 DIM QUOTE$(2,QUO+QUO+QUO)
0130 K0=20,K1=1
0135 C9=-1
0200 REM "
0240 IF %GUI=0 THEN CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF %GUI<>0 THEN CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; IF X1>0 THEN GOTO 9920
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$; REM "EM1
0320 IOLIST B$
0330 IOLIST C$
0340 IOLIST FS1$,FS1[0],FS1[1],FS1[2],FS1[3],FS1[4],FS1[5],FS1[6],FS1[7],FS1[8],FS1[9],FS1[10],FS1[11],FS1[12],FS1[13]
0350 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24],FS2[25],FS2[26],FS2[27],FS2[28],FS2[29]
0420 IOLIST I$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0509 REM "Slot 1 used for ED0 file opened in 1000's, slot 2 used for text file created in 700's to write to
0510 Z$="13O ZZPARM  20O AR1...  12O FM0...  22O FMP...  25O AP4...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "
0601 RETURN 
0612 GOSUB GET_CUST
0614 GOSUB GET_VEND
0616 GOSUB GET_UOM
0618 GOSUB GET_PROD_CODE
0620 GOSUB GET_QTY_PER_UNIT
0640 REM "IF Q1$="" AND %GUI=0 THEN CALL "ZZPROM",".Y",X3$,Z,"PROCEED?","","",0; ON Z GOTO 0641,9900
0650 PROCEED:
0700 NAME_1$="PC1.",EXT_1=1
0705 TEXT$=%DATAPATH$+DLM+NAME_1$+STR(EXT_1:"000")
0710 SERIAL TEXT$,0,0,ERR=0711; GOTO 0712; REM "Create text file to write to
0711 EXT_1=EXT_1+1; GOTO 0705
0720 Z$="02CU 02O "+TEXT$+" "
0730 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0731,9900
0740 CLOSE (Z[2]); OPEN LOCK (Z[2],OPT="TEXT")TEXT$; REM "Re-open as a text file
0800 REM "Set Prefix
0900 REM "Read ZZPARM file for DIRectory and hex codes
0910 DIM I$(512); READ (Z[13],KEY=PARM$,DOM=0911)IOL=0420
0915 ELEMENT_SEPARATOR$=ATH("2A"),SEGMENT_TERMINATOR$=ATH("5E"); REM "Setup for original values:  * and ^ respectively
0920 REM "IF I$(309,2)<>"  " THEN ELEMENT_SEPARATOR$=ATH(I$(309,2))
0925 REM "IF I$(311,2)<>"  " THEN SEGMENT_TERMINATOR$=ATH(I$(311,2))
1000 REM "Get list of .exp files to process
1005 I=-1,J=0
1010 IMPORT_PATH$=%DATAPATH$+DLM
1011 TF_NAME$="PC7"
1015 SELECT AT$ FROM IMPORT_PATH$
1030 IF AT$<>"." AND AT$<>".." AND POS(TF_NAME$=AT$)>0 OR POS(NAME1$=AT$)>0 THEN FILE$[I+1]=AT$; I=I+1
1035 NEXT RECORD 
1036 SLOT=UNT
1060 CLOSE (SLOT); OPEN LOCK (SLOT,OPT="TEXT",ERR=5000)IMPORT_PATH$+FILE$[J]; REM "Open for reading raw file
1065 CLOSE (13); OPEN (13)"ZZPARM"; REM "Re-open ZZPARM closed in ZZ2BLS
1075 IF %GUI=0 THEN PRINT @(15,15),'CE',"Processing: "+FILE$[J]
1080 GOSUB 8100; GOSUB 8150
1100 REM "Process the file
1109 C=0,I$="",TF_ITEM$=""
1110 READ (SLOT,END=1900)I$
1111 IF I$(1,4)="ITEM" THEN GOTO 1110
1112 I$=STP(I$,3,$0D$)
1114 I$=SUB(I$,QUOTE$,"  ",0),DELIM$=","
1118 GOSUB 7700
1120 C=C+1; IF MOD(C,T0)=1 THEN GOSUB 8150
1130 REM "PC RECORD
1131 SOURCE$="IMP"
1132 VERSION$="100"
1134 CUST$=CUST_DIV$+CUST_CODE$; REM " CUSTOMER NUMBER - ENTERED
1135 REM "UOM$=STP(A$(21,4),3); REM "UNIT OF MEASURE - ENTERED
1136 REM "PROD_CODE$=STP(A$(25,3),1); REM "PRODUCT CODE - ENTERED
1137 QTY_UNIT$=STP(STR(NUM(QTY_UNIT$):M2$),1); REM QUANTITY PER UNIT - ENTERED
1138 TF_ITEM$=STP(I$(1,10),1); REM " ITEM CODE
1141 SUPPLIER_ITEM$=STP(I$(1,20),1); REM "SUPPLIER ITEM CODE
1145 TF_DESC$=STP(I$(21,40),1); REM " DESCRIPTION
1151 VENDOR$=VEND_DIV$+VEND_CODE$; REM VENDOR NUMBER - ENTERED
1152 PLANT$=""; REM NEED PLANT FOR SUPPLIER ID
1153 TF_COST$=I$(60,10)
1845 RECORD$=SOURCE$+COMMA$(1,1)+VERSION$+COMMA$(1,1)+CUST$+COMMA$(1,1)+TF_ITEM$+COMMA$(1,1)+TF_DESC$+COMMA$(1,1)+PROD_CODE$+COMMA$(1,4)+VENDOR$+COMMA$(1,1)+PLANT$+COMMA$(1,10)+UOM$+COMMA$(1,19)+QTY_UNIT$+COMMA$(1,18)+VENDOR$+COMMA$(1,1)+PLANT$+COMMA$(1,1)+SUPPLIER_ITEM$+COMMA$(1,1)+UOM$+COMMA$(1,2)+TF_COST$+COMMA$(1,14)+QTY_UNIT$+COMMA$(1,2)
1850 PRINT (Z[2])RECORD$
1899 GOTO 1100
1900 REM "End of file
1910 F2$=FILE$[J]; IF F2$ LIKE "[Pp][Cc]7*" THEN F2$(1,3)="PC8" ELSE GOTO 1995
1930 REM "Remove the file
1931 CLOSE (SLOT,ERR=1932)
1935 REM "IF ISWIN THEN S2$="copy "+FILE$[J]+" "+HWD+DLM+"editmp"+DLM; CALL "ZZ2CMD",X3$,X4$,S2$,"","IN",COMM_CODE,COMM_CODE$; GOTO 1950; REM "SSP146619, If NT call command processor so command will happen on server 
1939 REM "OUT$="."+DTE(0:"%Y-%Mz-%Dz|%Hz:%mz:%sz"); PRECISION 2
1940 DATAPATH$=%DATAPATH$
1941 ERASE DATAPATH$+DLM+F2$,ERR=*PROCEED
1942 RENAME DATAPATH$+DLM+FILE$[J] TO DATAPATH$+DLM+F2$,ERR=*NEXT
1943 ERASE DATAPATH$+DLM+FILE$[J],ERR=*PROCEED
1985 J=J+1
1995 GOTO 1060
5000 REM "EOJ
5001 XFD$=FN%XFD$(Z[2],0),TOT_REC=DEC(XFD$(38,4))
5003 CLOSE (Z[2],ERR=5004)
5004 REM IF TOT_REC=0 THEN ERASE TEXT$; GOTO 5012
5005 NAME_2$="FO1.",EXT_2=1
5007 REM "GOR$=NAME_2$+STR(EXT_2:"000")
5010 REM RENAME TEXT$,GOR$,ERR=5011; GOTO 5012; REM "Rename the ED1 file we wrote to, to an FO1 file to be used in the Order Requisition Gateway
5011 REM EXT_2=EXT_2+1; GOTO 5007
5015 C=T; GOSUB 8150
5020 REM "IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"PROCESS COMPLETE!!","","",0
5030 IF TOT_REC<>0 THEN MSGBOX "Process complete!!",MSG("CONFIRMING"),"INFO,TIM=3"
5031 IF TOT_REC=0 THEN MSGBOX "File Not Processed...Check Your File!!",MSG("CONFIRMING"),"INFO,TIM=3"
5040 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(10,4),"Translating Incoming Text File into Order Entry Gateway"
6040 PRINT @(5,10),"Enter Customer Number:",
6042 PRINT @(7,12),"Enter Vendor Number:",
6044 PRINT @(17,14),"Enter UOM:",
6046 PRINT @(8,16),"Enter Product Code:",
6048 PRINT @(9,18),"Quantity per Unit:",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6390 PARM$=X3$(9,3)+"O/F"
6400 REM "WHOLE SCREEN                                                       
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS                                     
6451 CALL "ZZDISP","A",A$(1,10),"A/R",X3$,"","",28,10,X4$
6490 RETURN 
7499 GOTO 1100
7500 REM "Convert date q$ into q0$
7501 REM "Q$ in YYYYMMDD format or YYMMDD
7505 Q0$=""
7506 IF STP(Q$,3," ")="" THEN GOTO 7545
7510 IF LEN(Q$)=8 THEN GOTO 7520 ELSE IF LEN(Q$)=6 THEN D1$=STR(NUM(Q$(1,2)):"00") ELSE GOTO 7545
7515 IF D1$<"50" THEN Q$="20"+Q$ ELSE Q$="19"+Q$
7520 Q0$=CHR(NUM(Q$(1,3),ERR=7521)-125)+Q$(4,1)+Q$(5,2)+Q$(7,2)
7545 RETURN 
7600 REM ITEM CODE CROSS REFERENCE LOOK-UP
7610 REM =================================
7615 DIM C$(168)
7620 K$=KEY(Z[5],END=7700)
7630 READ (Z[5],KEY=K$,DOM=7700)
7640 IF K$(1,10)<>VEND$ THEN GOTO 7620
7645 IF K$(15,20)<>ITEM_CODE$ THEN GOTO 7620
7660 READ (Z[20],KEY=PO_NUM$+"   ",DOM=7620)IOL=0330
7670 IF C$(101,10)<>K$(45,10) THEN GOTO 7660
7680 PO_LINE$=PAD(C$(7,3),3,0,"0")
7690 IF PO_LINE$="   " THEN PO_LINE$=PAD(ELEMENT$[2],3,0,"0")
7699 RETURN 
7700 REM "Parse delimeted strings
7705 F_NUM=3,F_LEN$="204010"
7720 DIM FIELDS[F_NUM]
7730 FOR F_LOOP=1 TO F_NUM
7740 FIELDS[F_LOOP]=NUM(F_LEN$(2*F_LOOP-1,2))
7750 NEXT F_LOOP
7760 CALL "ZZ2DLM","","",I$,DELIM$,FIELDS{ALL},"",RETURN$,FIELDS_FOUND
7770 I$=RETURN$
7790 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 T=0; CALL "ZZ2FNC;SERIALRECCNT",SLOT,T
8115 IF %GUI=0 THEN PRINT @(0,7),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 REM "CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 0615,2040; REM : SSP 187006
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$
9940 SETESC 9350
9945 REM "END_PROCEED:
9950 IF TCB(13)=1 THEN BEGIN ; RUN "ZMENU" ELSE EXIT 
9951 EXIT 
9999 END 
30000 GET_CUST:
30050 CALL "ZZWLKU;PARSE_CUST",CUST$,CUST_DIV$,CUST_CODE$
30100 READ (Z[20],KEY=CUST_DIV$+CUST_CODE$,DOM=30999)AR1$
30125 CUST_NAME$=AR1$(11,35)
30130 NEXT_ID=VENDOR.CTL,REFRESH_FLG=1 ! SSP#253912
30999 RETURN 
31000 GET_VEND:
31050 CALL "ZZWLKU;PARSE_VEND",VENDOR$,VEND_DIV$,VEND_CODE$
31100 READ (Z[25],KEY=VEND_DIV$+VEND_CODE$,DOM=31999)AP4$
31125 VEND_NAME$=AP4$(11,35)
31999 RETURN 
32000 GET_UOM:
32010 UOM$=PAD(UOM$,4,1," ")
32100 READ (Z[13],KEY="U/M"+UOM$,DOM=32999)UOM_REC$
32102 UOM_DESC$=UOM_REC$(8,12)
32999 RETURN 
33000 GET_PROD_CODE:
33100 READ (Z[22],KEY="T"+PROD_CODE$,DOM=33999)PROD_REC$
33125 PROD_CODE_DESC$=PROD_REC$(5,15)
33999 RETURN 
34000 GET_QTY_PER_UNIT:
34999 RETURN 
56000 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
