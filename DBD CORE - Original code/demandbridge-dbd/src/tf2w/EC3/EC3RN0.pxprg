0010 REM "Reorder notices Setup & display <EC3RN0>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 02/10/17 - 16.980833 - tma - SSP# 279814
0037 REM "279814-Re-order notices are not being sent out for Ecommerce items.
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3RN0",X1$="Reorder Notices Setup & Display"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0121 DIM P1$(161)
0175 DEF FNS$(Z9$)=Z9$(1,POS(S$=Z9$+S$)-1)
0215 T9=3,T9$="JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
0310 IOLIST FMI$,FMI[0],FMI[1],FMI[2],FMI[3],FMI[4]
0315 IOLIST AR3$
0320 IOLIST AR1$
0330 IOLIST AR5$
0335 IOLIST FMPA$
0340 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0345 IOLIST FMPR$
0350 IOLIST FM5$,FM5[0],FM5[1],FM5[2],FM5[3],FM5[4],FM5[5],FM5[6],FM5[7],FM5[8],FM5[9],FM5[10],FM5[11],FM5[12],FM5[13],FM5[14],FM5[15],FM5[16],FM5[17],FM5[18],FM5[19],FM5[20]
0355 IOLIST IC1$,IC1[0],IC1[1],IC1[2],IC1[3],IC1[4],IC1[5],IC1[6],IC1[7],IC1[8],IC1[9],IC1[10],IC1[11],IC1[12],IC1[13],IC1[14],IC1[15],IC1[16],IC1[17],IC1[18],IC1[19],IC1[20]
0400 DIM BLANK$(100," "),LOCATION$(4),CUSTOMER$(10),ITEM$(10),FROM_CUST$(10),S$(30)
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O FM5... 02O AR1... 03O AR5... 04O FMP... 08O FM1... 09O FMI... 10O AR3... 11O FM3...  20O IC1...  21O IC0...  12O ZY2  13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0560 READ (Z[13],KEY=X3$(9,3)+"FMS")F8$
0600 REM "Build search strings
0700 REM "Masks
0710 M1$="###,###,##0-",M2$="###,##0"
1000 REM "Process DATA array
1001 DOC=1
1005 DATA_TAGS$="001<customer>002<item_code>003<location_code>004<template>005<from_customer>006<buyer>007<create_email>008<remove_file>009<session_id>010<worksheet>"
1007 REM "DIM FM5$(81),FMI$(250) REMOVED THE READS TO FM5
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1090
1021 CUSTOMER$=VALUE$; GOTO 1090; REM "Customer Code
1022 ITEM_CODE$=VALUE$; GOSUB 6000; GOTO 1090; REM "Item Code
1023 IF VALUE$="" OR STP(VALUE$,3," ")=" " THEN GOTO 1090 ELSE LOCATION$=VALUE$; IF LEN(LOCATION$)=0 THEN LOCATION$="    "; GOTO 1090; REM "Location code
1024 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1025 IF VALUE$="" OR STP(VALUE$,3," ")=" " THEN GOTO 1090 ELSE FROM_CUST$=VALUE$; GOTO 1090; REM "FROM CUSTOMER
1026 IF VALUE$="" OR STP(VALUE$,3," ")=" " THEN GOTO 1090 ELSE BUYER$=VALUE$; GOTO 1090; REM "BUYER
1027 IF VALUE$="" OR STP(VALUE$,3," ")=" " THEN GOTO 1090 ELSE CREATE_EMAIL$=VALUE$; GOTO 1090; REM "CREATE EMAIL?
1028 IF VALUE$="" OR STP(VALUE$,3," ")=" " THEN GOTO 1090 ELSE REMOVE_FILE$=VALUE$; GOTO 1090; REM "remove vile
1029 IF VALUE$="" OR STP(VALUE$,3," ")=" " THEN GOTO 1090 ELSE SESSION_ID$=VALUE$; GOTO 1090; REM "session_id
1030 IF VALUE$="" OR STP(VALUE$,3," ")=" " THEN GOTO 1090 ELSE WORKSHEET$=VALUE$; GOTO 1090; REM "worksheet
1090 NEXT I
1100 REM "Now that FMI$ is loaded, perform checks and defaulting
1101 VERSION$="EV",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1200 GOSUB 3000
1210 REM "DIM FMI[5]; READ (Z[9],KEY=CUSTOMER$+ITEM_CODE$+LOCATION$)IOL=0310
1220 DIM FM5[21]; READ (Z[1],KEY="R"+FMPR$(108,1)+CUST_KEY$+LOCATION$+ITEM_CODE$,ERR=9999)IOL=0350
1500 REM "Use template$ to open file, read line by line and insert
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<cust_code_out>002<item_code>003<location_code>004<sug_reorder>005<suggested_month_supply>006<rev_date>007<item_desc>008<on_hand>009<avg_usage>010<min_days>011<min_qty>012<supply_good_for>013<expected_out_dt>014<lst_ord_qty>015<last_ord_date>016<per_1>017<per_2>018<per_3>019<per_4>020<per_5>021<per_6>022<per_7>023<per_8>024<per_9>025<per_10>026<per_11>027<per_12>028<customer_name>029<cust_addr1>030<cust_addr2>031<city>032<state>033<zip>034<slsp>035<item_contact>036<num_plys>037<prod_cd>038<left_right>039<bottom_top>040<sell_uom>041<ron_dt>042<desc_1>043<desc_2>044<desc_3>045<desc_4>046<desc_5>047<desc_6>048<desc_7>049<desc_8>050<desc_9>051<desc_10>052<desc_11>053<desc_12>054<alt_uom>055<ic1_onpo>056<item_code_stripped>"
1510 READ (100,END=1595)LINE$; GOSUB 7550
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4) ! 261304
1523 T_IN=POS("."=TAG$); IF T_IN THEN TAG_PARM$=MID(TAG$,T_IN+1),TAG$=MID(TAG$,1,T_IN-1) ELSE TAG_PARM$="" ! 261304
1526 LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3)) ! 261304
1530 GOSUB 2000; GOTO 1515
1600 REM " SEND THE EMAIL??
1605 IF CREATE_EMAIL$<>"Y" THEN GOTO 1615
1610 GOSUB 8550
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2090
2001 GOSUB 3000; LINE$=LINE1$+CUST_CODE_OUT$+LINE2$; GOTO 2095; REM "customer code
2002 LINE$=LINE1$+ITEM_CODE$+LINE2$; GOTO 2095; REM "item code
2003 LINE$=LINE1$+FM5$(13,4); GOTO 2095; REM "location
2004 IF NUM(FM1$(196,2))<>0 THEN MULTIPLIER=NUM(FM1$(196,2)),AMU=FM1[24]*MULTIPLIER ELSE AMU=FM1[21] END_IF ; LINE$=LINE1$+STP(STR(FNUOM(AMU):M1$),2); GOTO 2095; REM "suggested reorder qty , 261304!SSP#279814
2005 LINE$=LINE1$+STP(STR(FNUOM(FM5[6]):M1$),2) ! was fmi really not used LINE$=LINE1$+STP(STR(FNUOM(FMI[4]):M1$),2); GOTO 2095; REM "suggested monthly reorder qty , 261304!SSP#279814
2006 LINE$=LINE1$+FM1$(167,6)+LINE2$; GOTO 2095; REM "last revised date                                                                 
2007 LINE$=LINE1$+STP(FM1$(42,40),1)+LINE2$; GOTO 2095; REM "item description
2008 LINE$=LINE1$+STP(STR(FNUOM(FM5[2]):M1$),2)+LINE2$; GOTO 2095; REM "on hand , 261304
2009 LINE$=LINE1$+STP(STR(FNUOM(FM5[1]):M1$),2)+LINE2$; GOTO 2095; REM "average monthly usage , 261304
2010 LINE$=LINE1$+STP(STR(FM5[4]:M1$),2)+LINE2$; GOTO 2095; REM "Reorder Point in days
2011 LINE$=LINE1$+STP(STR(FNUOM(FM5[5]):M1$),2)+LINE2$; GOTO 2095; REM "reorder point by quantity , 261304
2012 LINE$=LINE1$+STP(STR(FM5[3]:M2$),2)+LINE2$; GOTO 2095; REM "SUPPLY GOOD FOR ???
2013 IF STP(FM1$(109,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",FM1$(109,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "expected out date
2014 LINE$=LINE1$+STP(STR(FNUOM(FM1[16]):M1$),2); GOTO 2095; REM "last order qty , 261304
2015 IF STP(FM1$(126,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",FM1$(126,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "date last ordered
2016 LINE$=LINE1$+STP(STR(FNUOM(FM5[7]):M1$),2); GOTO 2095; REM "usage period 1 , 261304
2017 LINE$=LINE1$+STP(STR(FNUOM(FM5[8]):M1$),2); GOTO 2095; REM "usage period 2 , 261304
2018 LINE$=LINE1$+STP(STR(FNUOM(FM5[9]):M1$),2); GOTO 2095; REM "usage period 3 , 261304
2019 LINE$=LINE1$+STP(STR(FNUOM(FM5[10]):M1$),2); GOTO 2095; REM "usage period 4 , 261304
2020 LINE$=LINE1$+STP(STR(FNUOM(FM5[11]):M1$),2); GOTO 2095; REM "usage period 5 , 261304
2021 LINE$=LINE1$+STP(STR(FNUOM(FM5[12]):M1$),2); GOTO 2095; REM "usage period 6 , 261304
2022 LINE$=LINE1$+STP(STR(FNUOM(FM5[13]):M1$),2); GOTO 2095; REM "usage period 7 , 261304
2023 LINE$=LINE1$+STP(STR(FNUOM(FM5[14]):M1$),2); GOTO 2095; REM "usage period 8 , 261304
2024 LINE$=LINE1$+STP(STR(FNUOM(FM5[15]):M1$),2); GOTO 2095; REM "usage period 9 , 261304
2025 LINE$=LINE1$+STP(STR(FNUOM(FM5[16]):M1$),2); GOTO 2095; REM "usage period 10 , 261304
2026 LINE$=LINE1$+STP(STR(FNUOM(FM5[17]):M1$),2); GOTO 2095; REM "usage period 11 , 261304
2027 LINE$=LINE1$+STP(STR(FNUOM(FM5[18]):M1$),2); GOTO 2095; REM "usage period 12 , 261304
2028 LINE$=LINE1$+STP(AR1$(11,35),1)+LINE2$; GOTO 2095; REM "customer name
2029 LINE$=LINE1$+STP(AR1$(56,30),1)+LINE2$; GOTO 2095; REM "customer address line 1
2030 LINE$=LINE1$+STP(AR1$(86,30),1)+LINE2$; GOTO 2095; REM "customer address line 2
2031 LINE$=LINE1$+STP(AR1$(116,16),1)+LINE2$; GOTO 2095; REM "customer city
2032 LINE$=LINE1$+STP(AR1$(132,2),1)+LINE2$; GOTO 2095; REM "customer state
2033 LINE$=LINE1$+STP(AR1$(134,9),1)+LINE2$; GOTO 2095; REM "customer zip
2034 GOSUB 3050; LINE$=LINE1$+STP(SLSP_NAME$,1)+LINE2$; GOTO 2095; REM "salesperson name
2035 GOSUB 3050; LINE$=LINE1$+STP(CONTACT$,1)+LINE2$; GOTO 2095; REM "item contact
2036 LINE$=LINE1$+STP(FM1$(40,2),1)+LINE2$; GOTO 2095; REM "plys
2037 GOSUB 4000; LINE$=LINE1$+STP(FM1$(21,3),1)+LINE2$; GOTO 2095; REM "prod code
2038 LINE$=LINE1$+STP(FM1$(24,8),1)+LINE2$; GOTO 2095; REM "left right
2039 LINE$=LINE1$+STP(FM1$(32,8),1)+LINE2$; GOTO 2095; REM "top bottom
2040 GOSUB GET_SELL_UOM; LINE$=LINE1$+STP(Q$,1)+LINE2$; GOTO 2095; REM "packaging, 261304
2041 IF STP(FM5$(27,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",FM5$(27,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "date reorder notice printed
2042 GOSUB 3000; LINE$=LINE1$+T9$(1,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 1
2043 GOSUB 3000; LINE$=LINE1$+T9$(4,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 2
2044 LINE$=LINE1$+T9$(7,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 3
2045 LINE$=LINE1$+T9$(10,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 4
2046 LINE$=LINE1$+T9$(13,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 5
2047 LINE$=LINE1$+T9$(16,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 6
2048 LINE$=LINE1$+T9$(19,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 7
2049 LINE$=LINE1$+T9$(22,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 8
2050 LINE$=LINE1$+T9$(25,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 09
2051 LINE$=LINE1$+T9$(28,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 10
2052 LINE$=LINE1$+T9$(31,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 11
2053 LINE$=LINE1$+T9$(34,3)+LINE2$; GOTO 2095; REM "DESC PERIOD 12
2054 GOSUB GET_ALT_UOM; LINE$=LINE1$+STP(Q$,1)+LINE2$; GOTO 2095; REM "ALT PACKAGING, 261304
2055 GOSUB 8600; LINE$=LINE1$+STP(Q$,1)+LINE2$; GOTO 2095; REM "IC1 ON PO
2056 LINE$=LINE1$+STP(ITEM_CODE$,3)+LINE2$; GOTO 2095; REM "item code stripped SSP 246275
2090 LINE$=LINE1$+"?"+LINE2$; GOTO 2095; REM "tag not found, replace with '?'
2095 RETURN 
3000 REM "Read customer data into AR1$
3010 IF FROM_CUST$<>DIM(10) THEN CUST_KEY$=FROM_CUST$ ELSE CUST_KEY$=CUSTOMER$
3030 DIM AR1$(600); FIND (Z[2],KEY=CUST_KEY$,DOM=3031)IOL=0320; GOTO 3035
3031 ERR_FOUND=1,MESSAGE$="ERROR [  1] - Invalid cust code ["+CUST_CODE$+"]."; GOTO 4095
3035 CALL "ZZDISP","AX",CUSTOMER$,"A/R",X3$,CUST_CODE_OUT$,"",0,0,X4$
3037 READ (Z[4],KEY="D"+AR1$(1,10),DOM=3050)FMP$; IF FMP$(24,1)<>"Y" THEN GOTO 3050
3038 P0=12; READ (Z[4],KEY="E"+CUST_KEY$+FMP$(52,4),DOM=3050)P1$(1); P0=NUM(P1$(16,2))
3039 D0$=FMP$(52,4),D0=1; IF F8$(13,1)="P" THEN D0=NUM(FMP$(56,2))-P0; IF D0<0 THEN D0$=STR(NUM(D0$)-1:"0000"),D0=D0+P0; READ (Z[4],KEY="E"+AR1$(1,10)+D0$)P1$(1)
3042 GOSUB 6450
3050 REM " READ SALESPERSON FILE AND GET NAME
3052 DIM AR3$(320); FIND (Z[10],KEY=AR1$(278,4),DOM=*NEXT)IOL=0315
3055 SLSP_NAME$=AR3$(5,35)
4000 REM "Check and/or default fields in FMI$, we will leave if we find any errors
4010 IF FROM_CUST$<>DIM(10) THEN CUST_KEY$=FROM_CUST$ ELSE CUST_KEY$=CUSTOMER$
4021 DIM FM1[31],FM1$(449); FIND (Z[8],KEY=CUST_KEY$+ITEM_CODE$,DOM=*NEXT)IOL=0340; IF FM1[0]=0 THEN FM1[0]=1 END_IF ; GOTO 4025
4023 ERR_FOUND=3,MESSAGE$="ERROR [  3] - Invalid form code ["+ITEM_CODE$+"]."; GOTO 4095
4050 DIM FMPR$(256); READ (Z[4],KEY="D"+CUST_KEY$,DOM=4051)IOL=0345; GOTO 4052
4051 FMPR$(108,1)="1"
4060 REM " FIND ITEM CONTACT
4061 DIM CONTACT$(20)
4062 DIM FMPA$(208); READ (Z[4],KEY="a"+CUST_KEY$+FM1$(209,3),DOM=4095)IOL=0335
4065 CONTACT$=FMPA$(154,20)
4095 RETURN 
4200 REM "READ STUFF"
4210 REM "DIM FMI[5]; READ (Z[9],KEY=CUSTOMER$+ITEM_CODE$+LOCATION$)IOL=0310
4220 DIM FM5[21]; READ (Z[1],KEY="R"+FMPR$(108,1)+CUST_KEY$+LOCATION$+ITEM_CODE$)IOL=0350
4299 RETURN 
6000 REM " FORMAT ITEM CODE
6010 IF LEN(ITEM_CODE$)<10 THEN ITEM_CODE$=ITEM_CODE$+BLANK$(1,10-LEN(ITEM_CODE$))
6099 RETURN 
6450 REM "GET PERIOD ENDING DATES                                               
6451 IF FMP$(61,1)<>"C" THEN D0=D0+1
6452 IF POS(X3$(9,3)="128")=0 THEN D0=D0-1; REM "WAS IF POS(X3$(9,3)="019055")= 0 THEN LET D0=D0-1
6455 T9$="",T9=3; FOR X=0 TO P0-1
6460 READ (Z[12],KEY=" "+P1$(24+D0*6+2,2))X9$
6465 X$=P1$(106+D0*3,3); IF X$<>"   " THEN T9$=T9$+X$ ELSE T9$=T9$+X9$(72,3)
6468 D0=D0+1; IF D0=P0 THEN D0$=STR(NUM(D0$)+1:"0000"); READ (Z[4],KEY="E"+AR1$(1,10)+D0$)P1$(1); D0=D0-P0
6470 NEXT X
6475 RETURN 
7550 REM "Send LINE$ to EC3BYB for generic fields processing
7560 CALL "EC3BYB",ERR=7561,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$
7595 RETURN 
7600 REM "SET POSITIONS WITH Q$
7610 FOR X=1 TO Q
7615 S0=FNP(P[X-1,0],P[X-1,1]),S1=LEN(Q$)
7620 F0$(S0,S1)=Q$
7625 NEXT X
7690 RETURN 
7700 REM "Given PTMP$, remove all but numbers
7705 PTMP$=STP(PTMP$,2); IF PTMP$="" THEN GOTO 7745 ELSE MY_TMP$=PTMP$,LEN_MY_TMP=LEN(MY_TMP$),PTMP$=""
7710 FOR MY_INDEX=1 TO LEN_MY_TMP; IF POS(MY_TMP$(MY_INDEX,1)="0123456789")<>0 THEN PTMP$=PTMP$+MY_TMP$(MY_INDEX,1) END_IF ; NEXT MY_INDEX
7745 RETURN 
7750 REM "UNIT OF MEASURE
8000 REM "Build desc from H8$                                                   
8010 H9$=FNS$(H8$(24,8)); IF H9$<>"" THEN H9$=H9$+QUO; IF POS(" "<>H8$(32,8))<>0 THEN H9$=H9$+" x "
8020 H9$=H9$+FNS$(H8$(32,8)); IF H9$<>"" THEN IF POS(" "<>H8$(32,8))<>0 THEN H9$=H9$+QUO+" " ELSE H9$=H9$+" "
8045 H8$=""
8050 RETURN 
8400 REM "GET PKG                                                               
8405 GET_SELL_UOM: Q$="" ! 261304 - cleaned up code, used to be hardcoded to "CASE/nnn"
8410 IF FM1[4]<>0 THEN Q$=STP(FM1$(100,4),2)+"/"+STP(STR(FM1[4]:M2$),2)
8415 RETURN 
8419 ! 
8420 GET_ALT_UOM: Q$="" ! 261304 - corrected the fallback logic to use sell um if no alt um
8425 IF NOT(NUL(FM1$(238,4))) AND FM1[25]<>0 THEN Q$=STP(FM1$(238,4),2)+"/"+STP(STR(FM1[25]:M2$),2)
8430 IF NUL(Q$) THEN GOTO GET_SELL_UOM
8445 RETURN 
8449 ! 
8550 ! NOT TRUE, THIS IS REALLY USED, FOUND OUT WORKING ON SSP 166022 REM "** C URRENTLY NOT USED - PROCESSED IN EC3OE0 - Add email addresses, if any, to  EC$[12]                                                                    
8551 REQUESTED_EMAIL_ACTION$="R"; SUBJECT$="Reorder Notice"; REM this is the action to process               
8552 REM "EC$[12]=""; REM "to prevent duplicate emails OLD 3194/SSP 144537           
8557 B_EMAIL$=STP(EC$[2](109,60),2),B_ACTIONS$=STP(EC$[2](256,10),2),P_EMAIL$=STP(EC$[2](169,60),2),P_ACTIONS$=STP(EC$[2](266,10),2),S_EMAIL$=STP(EC$[2](340,60),2),S_ACTIONS$=STP(EC$[2](460,10),2),C_EMAIL$=STP(EC$[2](400,60),2),C_ACTIONS$=STP(EC$[2](470,10),2)
8558 IF BUYER$<>EC$[2](1,15) THEN GOSUB 8760 ! SSP247956, if approved order the session has the approver as the buyer but we need the ordering buyer's info
8560 FOR EI=0 TO 3; ON EI GOTO 8561,8562,8563,8564
8561 EMAIL_ADDR$=B_EMAIL$,EMAIL_ACTIONS$=B_ACTIONS$; GOTO 8565
8562 EMAIL_ADDR$=P_EMAIL$,EMAIL_ACTIONS$=P_ACTIONS$; GOTO 8565
8563 EMAIL_ADDR$=S_EMAIL$,EMAIL_ACTIONS$=S_ACTIONS$; GOTO 8565
8564 EMAIL_ADDR$=C_EMAIL$,EMAIL_ACTIONS$=C_ACTIONS$; GOTO 8565
8565 IF POS(REQUESTED_EMAIL_ACTION$=EMAIL_ACTIONS$)=0 THEN GOTO 8580; REM "If t he action being requested is not in current email then skip                
8567 IF EMAIL_ADDR$="" THEN GOTO 8580; REM "Skip if address blank               
8570 ETMP$="{[email]"+EMAIL_ADDR$; REM "Email address                           
8572 CALL "EC3SEM",X3$,X4$,EC_PARM$,EC${ALL},"EMAILSUB_"+REQUESTED_EMAIL_ACTION$,WORKSHEET$,SUBJECT$; ETMP$=ETMP$+"[subject]"+SUBJECT$
8579 ETMP$=ETMP$+"}",EC$[12]=EC$[12]+ETMP$
8580 NEXT EI
8595 RETURN 
8600 REM " READ IC1 FOR ON PO
8605 ON_PO=0
8610 READ (Z[20],KEY=CUSTOMER$+ITEM_CODE$+LOCATION$,DOM=*NEXT)
8612 I1_KEY$=KEY(Z[20],END=8625)
8618 IF I1_KEY$(1,20)<>CUSTOMER$+ITEM_CODE$ THEN GOTO 8625
8619 DIM IC1[20]; READ (Z[20],KEY=I1_KEY$)IOL=0355
8620 ON_PO=ON_PO+IC1[8]
8621 GOTO 8612
8625 Q$=STP(STR(FNUOM(ON_PO):M1$),2) ! 261304
8649 RETURN 
8760 ! SSP247956, need to get email addresses/actions for ordering buyer
8765 ECAFSLOT=FN%FFN("ECA"+X3$(9,3)); IF ECAFSLOT<0 THEN GOTO 8790
8770 DIM ECA$(1540); READ (ECAFSLOT,KEY=BUYER$,DOM=8790)ECA$
8775 B_EMAIL$=STP(ECA$(109,60),2),B_ACTIONS$=STP(ECA$(256,10),2)
8780 P_EMAIL$=STP(ECA$(169,60),2),P_ACTIONS$=STP(ECA$(266,10),2)
8782 S_EMAIL$=STP(ECA$(340,60),2),S_ACTIONS$=STP(ECA$(460,10),2)
8785 C_EMAIL$=STP(ECA$(400,60),2),C_ACTIONS$=STP(ECA$(470,10),2)
8790 RETURN 
8795 ! 
8910 DEF FNT$(Z9$)=Z9$(POS(" "<>Z9$))
8915 REM "DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNUOM(LOCAL NUM_IN) ! 261304
8921 ! Return NUM_IN which is assumed to be in eaches converted to altum or sellum based on TAG_PARM$
8922 LOCAL UOM$,UOM_QTY
8923 IF NUL(TAG_PARM$) THEN RETURN NUM_IN
8925 SWITCH TAG_PARM$
8927 CASE "altum"; IF NOT(NUL(FM1$(238,4))) AND FM1[25]<>0 THEN UOM$=FM1$(238,4),UOM_QTY=FM1[25]; BREAK ELSE GOTO *NEXT ! use alt um 1 if available, else fall back to sell um
8928 CASE "sellum"; IF NOT(NUL(FM1$(100,4))) AND FM1[4]<>0 THEN UOM$=FM1$(100,4),UOM_QTY=FM1[4]; BREAK ELSE GOTO *NEXT ! use sell um if available else big problem (should never happen)
8934 DEFAULT ; BREAK
8935 END SWITCH 
8940 IF NOT(NUL(UOM$)) AND UOM_QTY<>0 THEN CALL "FM2EXT",Z[13],2,UOM$,UOM_QTY,NUM_IN,0,0,14
8945 RETURN NUM_IN
8948 END DEF
8949 ! 
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 REM FOR I=1 TO 20; IF Z[I]<>0 THEN CLOSE (Z[I]) FI; NEXT I
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56001 REM "227003-Incorrect formatting of numbers on reorder notice  
56002 REM "246275-Reorder Notice via email (html) different for E/C Promo     
56004 REM "247956-If order required Purchase approval not sending Reorder     
56005 REM "261304-EC Reorder Notice; Option to output numeric data in Alt U/M 
56006 REM "279814-Re-order notices are not being sent out for Ecommerce items.
56007 REM "279814-Re-order notices are not being sent out for Ecommerce items.
