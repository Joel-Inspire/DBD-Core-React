0010 REM "EC Product Catalog - Item Info <EC3PC1>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 09/26/19 - 12.783055 - crg - SSP# 307217
0037 REM "307217-Product Catalog Detail - Long Description is now displaying 
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3PC1",X1$="E/C Product Catalog-Item Info"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0130 REM 'STD MASKS
0132 UMASK$="#,###,##0-"
0320 IOLIST FM1$(1),FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31] ! 155196
0330 IOLIST FM3$,FM3[0],FM3[1],FM3[2],FM3[3],FM3[4],FM3[5],FM3[6],FM3[7],FM3[8],FM3[9],FM3[10],FM3[11],FM3[12],FM3[13]
0332 IOLIST FM3ALL$,FM3ALL[0],FM3ALL[1],FM3ALL[2],FM3ALL[3],FM3ALL[4],FM3ALL[5],FM3ALL[6],FM3ALL[7],FM3ALL[8],FM3ALL[9],FM3ALL[10],FM3ALL[11],FM3ALL[12],FM3ALL[13]
0340 IOLIST FM4$,FM42$,FM4[0],FM4[1],FM4[2],FM4[3],FM4[4],FM4[5],FM4[6],FM4[7],FM4[8],FM4[9],FM4[10],FM4[11],FM4[12],FM4[13],FM4[14],FM4[15]
0342 IOLIST FM4ALL$,FM42$,FM4ALL[0],FM4ALL[1],FM4ALL[2],FM4ALL[3],FM4ALL[4],FM4ALL[5],FM4ALL[6],FM4ALL[7],FM4ALL[8],FM4ALL[9],FM4ALL[10],FM4ALL[11],FM4ALL[12],FM4ALL[13],FM4ALL[14],FM4ALL[15]
0350 IOLIST IC1$,IC1[0],IC1[1],IC1[2],IC1[3],IC1[4],IC1[5],IC1[6],IC1[7],IC1[8],IC1[9],IC1[10],IC1[11],IC1[12],IC1[13],IC1[14],IC1[15],IC1[16],IC1[17],IC1[18],IC1[19],IC1[20],IC1[21],IC1[22],IC1[23],IC1[24],IC1[25],IC1[26],IC1[27],IC1[28],IC1[29],IC1[30],IC1[31],IC1[32],IC1[33],IC1[34],IC1[35],IC1[36],IC1[37],IC1[38],IC1[39],IC1[40]
0370 IOLIST ECR$
0390 IOLIST P$(1),P[0],P[1]
0420 IOLIST EE4$,EE4[0],EE4[1],EE4[2],EE4[3],EE4[4],EE4[5],EE4[6],EE4[7],EE4[8],EE4[9],EE4[10],EE4[11],EE4[12],EE4[13],EE4[14],EE4[15]
0440 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0450 IOLIST FMZ$,FMZ[0],FMZ[1],FMZ[2],FMZ[3],FMZ[4],FMZ[5],FMZ[6],FMZ[7],FMZ[8],FMZ[9],FMZ[10],FMZ[11],FMZ[12],FMZ[13],FMZ[14]; REM " SSP# 154318
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1... 02O FM1... 03O FM3... 04O FM4... 05O IC1... 06O FMP... 07O ECR... 12O FM0... 13O ZZPARM 14O IC0... 15O OS2...  20O FMZ...  21O ED9...  22O EE4...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 DIM OSP_PARM$(1024); READ (Z[13],KEY=X3$(9,3)+"OSP",DOM=*NEXT)OSP_PARM$(1)
0600 REM 'SET IMG SRC PREFIX/SUFFIX
0610 IMGSRC_PREFIX$=STP(EC_PARM$(311,20),2),IMGSRC_ATTRIB$=" "+STP(EC_PARM$(331,60),2)+">",IMGSRC_SUFFIX$=STP(EC_PARM$(391,20),2)
0620 GOSUB 3000; REM "Set USER$ and customer information
1000 REM "Process DATA array
1005 DATA_TAGS$="001<template>002<session_id>003<item_key>004<cust_location>005<usage_year>006<usage_period>007<no_invusage>008<use_alt_um_qb>"
1006 MAX_ROWS=25,POSITION_ITEM$="",DIRECTION$="F",CUST_LOCATION$=""
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 SESSION_ID$=VALUE$; GOTO 1090; REM "Get session id
1023 ITEM_KEY$=PAD(VALUE$,20); GOTO 1090; REM "Get item key
1024 CUST_LOCATION$=PAD(VALUE$,4); IF EC_PARM$(558,1)="Y" THEN CUST_LOCATION$=EC$[1](1167,4),RD$=CUST_LOCATION$ END_IF ; GOTO 1090; REM "customer location code (if blank will use buyer parameters - otherwise assumed valide ship-to or ALL / 154600
1025 USAGE_YEAR$=VALUE$; GOTO 1090; REM "year to drive usage (overrides screen 10 FMS parameters)
1026 USAGE_PERIOD$=VALUE$; GOTO 1090; REM 'USAGE PERIOD (OVERRIDES SCREEN 10 FMS PARAMETERS)
1027 IF POS("Y"=VALUE$)<>0 THEN NO_INVUSAGE$="Y" END_IF ; GOTO 1090; REM "no_invusage (controls whether any inventory or usage figures are needed on the page - if not eliminates call to EC3IC0)
1028 IF POS("Y"=VALUE$)<>0 THEN USE_ALT_UM_QB$="Y" END_IF ; GOTO 1090 ! WO175232, use_alt_um_qb, will use the alternate unit when doing quantity breaks
1090 NEXT I
1092 IF STP(USAGE_YEAR$,2)="" THEN USAGE_YEAR$=EC$[1](171,4); REM "if not passed in then set usage year from ECB session record
1093 IF STP(USAGE_PERIOD$,2)="" THEN USAGE_PERIOD$=EC$[1](175,2); REM "if not passed in then set usage period from ECB session record
1100 REM "Get item based on item key
1101 VERSION$="51.3242.153083.154728.156580.154318.159016.161385.165240.169314.169326.174539.175232.177202.186727.20050912",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1102 MAX_HIST=10; REM " SSP# 154318
1105 DIM ED9$(2030); FIND (Z[21],KEY=ITEM_KEY$,DOM=1110)ED9$; REM ED9 item information  ssp 209898
1110 GOSUB 7100; REM "get FM1/IC0/FMR records  ; REM "ssp 157200
1111 IF BADITEM$="Y" THEN GOTO 1112 ELSE GOTO 1115; REM "ssp 157200
1113 REM " form missing
1114 IF STOCK$<>"Y" THEN FM1$(1,20)=ITEM_KEY$,FM1$(42,40)="Item requested not found" ELSE IC0$(1,20)=ITEM_KEY$,IC0$(21,40)="Item requested not found"
1115 GOSUB SET_READONLY; DIM ECR$(1000); FIND (Z[7],KEY=ITEM_KEY$,DOM=*NEXT)ECR$ ! SSP227617, add READONLY
1116 GOSUB CLEAR_READONLY ! SSP227617
1119 GOSUB 3700; REM "set form image file names
1190 GOSUB 7700; REM "get list of warhouse locations (7600) and retrieve figures (7700)
1191 UM$=""
1200 REM "form usage information
1205 GOSUB 7900
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<user>002<cust_code>003<password>004<cust_name>005<ec_company>006<session_id>007<cic_code>008<desc>009<left_right>010<top_bottom>011<plies>012<rev_date>013<function_code>014<spec_code>015<carton_pack>016<carton_weight>017<fms_price>018<sell_unit>019<numbered>020<last_ord_date>021<ending_number>022<previous_form_code>023<alt_unit_of_issue>024<form_memo>025<sell_price>026<sell_qty_unit>027<last_ord_qty>028<desired_stocking_level>029<rop_days>030<rop_qty>031<alt_qty_unit>032<form_mos_avg_usage>033<mosusage_all_p1>034<mosusage_all_p2>035<mosusage_all_p3>036<mosusage_all_p4>037<mosusage_all_p5>038<mosusage_all_p6>039<mosusage_all_p7>040<mosusage_all_p8>041<mosusage_all_p9>042<mosusage_all_p10>043<mosusage_all_p11>044<mosusage_all_p12>045<mosusage_p1>046<mosusage_p2>047<mosusage_p3>048<mosusage_p4>049<mosusage_p5>050<mosusage_p6>051<mosusage_p7>052<mosusage_p8>053<mosusage_p9>054<mosusage_p10>055<mosusage_p11>056<mosusage_p12>057<cust_location>058<fm4_is_item_counted>059<fm4_autorestock_method>060<fm4_last_count_date>061<fm4_usage_start_date>062<fm4_last_ship_date>063<fm4_billing_dept>064<fm4_avg_mos_usage>065<fm4_resupply_min_days>066<fm4_resupply_min_qty>067<fm4_last_count_qty>068<fm4_direct_shipments>069<fm4_whse_shipments>070<fm4_req_max>071<fm4_restock_days>072<fm4_restock_qty>073<usage_year>074<usage_bal_type>075<fm4_total_ship>076<ic1_reorder_pt>077<ic1_last_cost>078<ic1_avg_cost>079<ic1_beg_balance>"
1508 LINE_TAGS$=LINE_TAGS$+"080<ic1_receipts>081<ic1_sales>082<ic1_adj>083<ic1_committed>084<ic1_onpo>085<ic1_last_count>086<ic1_reorder_qty>087<ic1_bo_qty>088<fm3_ytd_usage>089<fm3_ytdall_usage>090<ic1_on_hand>091<ic1_avail_in_stock>092<ic1_avail_for_sale>093<fm3_current_per_usage>094<fm3_current_per_usageall>095<pcd_st_recvg_dept>096<fm4_mos_avg_usageall>097<stripped_item_code>098<image_form1>099<image_form2>100<image_form3>101<image_form4>102<image_form5>103<image_form1_link>104<image_form2_link>105<image_form3_link>106<image_form4_link>107<image_form5_link>108<form_code>109<image_item_key>110<lotlinestart>111<qtybreakstart>112<form_mos_avg_usage_smart>113<carton_weight>114<ic1_avail_in_stock_sell>115<ic1_committed_sell>116<ic1_onpo_sell>117<fm3_current_per_usage_sell>118<fm3_ytd_usage_sell>119<fm4_avg_mos_usage_sell>120<sell_unit_ext>121<fmz_order_number>122<fmz_activity_dt>123<fmz_cust_po>124<fmz_order_qty>125<reported_usage_location>126<image_item_key_ue>127<fs6_ordhist_start>128<ic9_invstat_start>129<long_desc>130<qty_breaks_ddl>131<form_mos_avg_usage_smart_sell>109<item_key>126<item_key_ue>"
1510 READ (100,END=1595)LINE$; GOSUB 7550; ENTRY$=LINE$; GOSUB CHECK_FOR_INCLUDE; LINE$=ENTRY$
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,4500,4501,4502,4503,4504,4505,4506,4507,4508,4509,4510,4511,4512,4513,4514,4515,4516,4517,4518,4519,4520,4521,4522,4523,4524,4525,4526,4527,4528,4529,4530,4531,4532,4533,4534,4535,4536,4537,4538,4539,4540,4541,2090
2001 LINE$=LINE1$+FN%HTML_ESC$(USER$)+LINE2$; GOTO 2095; REM "user SSP303115
2002 LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE$)+LINE2$; GOTO 2095; REM "cust_code SSP303115
2003 LINE$=LINE1$+FN%HTML_ESC$(PASSWORD$)+LINE2$; GOTO 2095; REM "password SSP303115
2004 LINE$=LINE1$+FN%HTML_ESC$(STP(AR1$(11,35),1))+LINE2$; GOTO 2095; REM "cust_name SSP303115
2005 LINE$=LINE1$+FN%HTML_ESC$(STP(EC_PARM$(7,50),1))+LINE2$; GOTO 2095; REM "ec_company SSP303115
2006 LINE$=LINE1$+FN%HTML_ESC$(STP(SESSION_ID$,1))+LINE2$; GOTO 2095; REM "session_id SSP303115
2007 LINE$=LINE1$+FN%HTML_ESC$(STP(FM1$(350,20),1))+LINE2$; GOTO 2095; REM "cic_code SSP303115
2008 IF STOCK$<>"Y" THEN DESC$=FM1$(42,40) ELSE DESC$=IC0$(21,40) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(DESC$,1))+LINE2$; GOTO 2095; REM "desc = description SSP303115
2009 IF STOCK$<>"Y" THEN LR$=FM1$(24,8) ELSE LR$=IC0$(64,8) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(LR$,1))+LINE2$; GOTO 2095; REM "left_right SSP303115
2010 IF STOCK$<>"Y" THEN TB$=FM1$(32,8) ELSE TB$=IC0$(72,8) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(TB$,1))+LINE2$; GOTO 2095; REM "top_bottom SSP303115
2011 IF STOCK$<>"Y" THEN PLY$=FM1$(40,2) ELSE PLY$=IC0$(80,2) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(PLY$,1))+LINE2$; GOTO 2095; REM "Number of plies SSP303115
2012 LINE$=LINE1$+FN%HTML_ESC$(STP(FM1$(167,6),1))+LINE2$; GOTO 2095; REM "rev_date SSP303115
2013 LINE$=LINE1$+FN%HTML_ESC$(STP(FM1$(173,12),1))+LINE2$; GOTO 2095; REM "function_code SSP303115
2014 LINE$=LINE1$+FN%HTML_ESC$(STP(FM1$(370,10),1))+LINE2$; GOTO 2095; REM "spec_code SSP303115
2015 IF STOCK$<>"Y" THEN CP=FM1[0] ELSE CP=IC0[19] END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STR(CP:"###,###"))+LINE2$; GOTO 2095; REM "carton_pack SSP303115
2016 IF STOCK$="Y" THEN CW=IC0[16] ELSE CW=FM1[18] END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STR(CW:"###.00"))+LINE2$; GOTO 2095; REM "carton_weight SSP303115
2017 LINE$=LINE1$+FN%HTML_ESC$(STR(FM1[29]:X3$(69,1)+"###,###.00"))+LINE2$; GOTO 2095; REM "fms_price SSP303115
2018 GOSUB 7800; LINE$=LINE1$+FN%HTML_ESC$(UM$)+LINE2$; GOTO 2095; REM 'SELL_UNIT SSP303115
2019 LINE$=LINE1$+FN%HTML_ESC$(STP(FM1$(104,1),1))+LINE2$; GOTO 2095; REM 'NUMBERED SSP303115
2020 IF STOCK$="Y" THEN DATEIN$=IC0$(102,6) ELSE DATEIN$=FM1$(126,6) END_IF ; GOSUB 7500; LINE$=LINE1$+FN%HTML_ESC$(DATEOUT$)+LINE2$; GOTO 2095; REM 'LAST_ORD_DATE SSP303115
2021 LINE$=LINE1$+FN%HTML_ESC$(STP(FM1$(140,9),1))+LINE2$; GOTO 2095; REM 'ENDING_NUMBER SSP303115
2022 LINE$=LINE1$+FN%HTML_ESC$(STP(FM1$(199,10),1))+LINE2$; GOTO 2095; REM 'PREVIOUS_FORM_CODE SSP303115
2023 IF STOCK$<>"Y" THEN IF FM1$(238,4)=DIM(4) THEN ALTUM$=FM1$(100,4) ELSE ALTUM$=FM1$(238,4) END_IF ELSE ALTUM$=IC0$(120,4) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(ALTUM$,1))+LINE2$; GOTO 2095; REM "alt_unit_of_issue 161385 SSP303115
2024 LINE$=LINE1$+FN%HTML_ESC$(STP(FM1$(389,60),1))+LINE2$; GOTO 2095; REM 'FORM_MEMO SSP303115
2025 IF STOCK$<>"Y" THEN SELLP=FM1[3] ELSE SELLP=IC0[0] END_IF ; LINE$=LINE1$+FN%HTML_ESC$(X3$(69,1)+STP(STR(SELLP:"#,##0.00-"),1))+LINE2$; GOTO 2095; REM 'SELL_PRICE SSP303115
2026 IF STOCK$="Y" THEN ITEM_TYPE$="I" ELSE ITEM_TYPE$="C" END_IF ; GOSUB 7900; IF STOCK$<>"Y" THEN SQU=FM1[4] ELSE SQU=IC0[14] END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(SQU:"#,##0"),1))+LINE2$; GOTO 2095; REM 'SELL_QTY_UNIT SSP303115
2027 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM1[16]:"##,###,##0"),1))+LINE2$; GOTO 2095; REM 'LAST_ORD_QTY SSP303115
2028 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM1[21]:"###,##0"),1))+LINE2$; GOTO 2095; REM 'DESIRED_STOCKING_LEVEL SSP303115
2029 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM1[22]:"##0"),1))+LINE2$; GOTO 2095; REM 'ROP_DAYS SSP303115
2030 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM1[23]:"###,##0"),1))+LINE2$; GOTO 2095; REM 'ROP_QTY SSP303115
2031 IF STOCK$<>"Y" THEN IF FM1(25)=0 THEN QTYPER=FM1(4) ELSE QTYPER=FM1(25) END_IF ELSE QTYPER=IC0(14) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(QTYPER:"#,##0"),1))+LINE2$; GOTO 2095; REM 'ALT_QTY_UNIT 161385 SSP303115
2032 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM1[24]:"###,##0-"),1))+LINE2$; GOTO 2095; REM 'FORM_MOS_AVG_USAGE SSP303115
2033 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[1]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 1 SSP303115
2034 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[2]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 2 SSP303115
2035 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[3]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 3 SSP303115
2036 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[4]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 4 SSP303115
2037 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[5]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 5 SSP303115
2038 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[6]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 6 SSP303115
2039 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[7]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 7 SSP303115
2040 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[8]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 8 SSP303115
2041 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[9]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 9 SSP303115
2042 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[10]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 10 SSP303115
2043 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[11]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 11 SSP303115
2044 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3ALL[12]:UMASK$),1))+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 12 SSP303115
2045 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[1]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 1 SSP303115
2046 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[2]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 2 SSP303115
2047 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[3]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 3 SSP303115
2048 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[4]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 4 SSP303115
2049 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[5]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 5 SSP303115
2050 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[6]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 6 SSP303115
2051 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[7]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 7 SSP303115
2052 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[8]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 8 SSP303115
2053 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[9]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 9 SSP303115
2054 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[10]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 10 SSP303115
2055 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[11]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 11 SSP303115
2056 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM3[12]:UMASK$),1))+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 12 SSP303115
2057 LINE$=LINE1$+FN%HTML_ESC$(STP(FM4$(21,4),1))+LINE2$; GOTO 2095; REM 'FM4 CUST_LOCATINO SSP303115
2058 LINE$=LINE1$+FN%HTML_ESC$(STP(FM4$(26,1),1))+LINE2$; GOTO 2095; REM 'FM4_IS_ITEM_COUNTED SSP303115
2059 LINE$=LINE1$+FN%HTML_ESC$(STP(FM4$(27,1),1))+LINE2$; GOTO 2095; REM 'FM4_AUTRESTOCK_METHOD SSP303115
2060 DATEIN$=FM4$(75,6); GOSUB 7500; LINE$=LINE1$+FN%HTML_ESC$(STP(DATEOUT$,1))+LINE2$; GOTO 2095; REM 'FM4_LAST_COUNT_DATE SSP303115
2061 DATEIN$=FM4$(83,6); GOSUB 7500; LINE$=LINE1$+FN%HTML_ESC$(STP(DATEOUT$,1))+LINE2$; GOTO 2095; REM 'FM4_USAGE_START_DATE SSP303115
2062 DATEIN$=FM4$(89,6); GOSUB 7500; LINE$=LINE1$+FN%HTML_ESC$(STP(DATEOUT$,1))+LINE2$; GOTO 2095; REM 'FM4_LAST_SHIP_DATE SSP303115
2063 LINE$=LINE1$+FN%HTML_ESC$(STP(FM4$(180,20),1))+LINE2$; GOTO 2095; REM 'FM4_BILLING_DEPT SSP303115
2064 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4_AVG_MOS_USAGE:UMASK$),1))+LINE2$; GOTO 2095; REM 'FM4_AVG_MONTHLY_USAGE SSP303115
2065 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4[1]:"##0"),1))+LINE2$; GOTO 2095; REM 'FM4_RESUPLY_MIN_DAYS SSP303115
2066 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4[2]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM 'FM4_RESUPPLY_MIN_QTY SSP303115
2067 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4[3]:"#,###,##0-"),1))+LINE2$; GOTO 2095; REM 'FM4_LAST_COUNT_QTY SSP303115
2068 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4[4]:"#,###,##0-"),1))+LINE2$; GOTO 2095; REM 'FM4_DIRECT_SHIPMENTS SSP303115
2069 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4[5]:"#,###,##0-"),1))+LINE2$; GOTO 2095; REM 'FM4_WHSE_SHIPMENTS SSP303115
2070 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4[10]:"#,###,##0-"),1))+LINE2$; GOTO 2095; REM 'FM4_REQ_MAX SSP303115
2071 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4[12]:"##0-"),1))+LINE2$; GOTO 2095; REM 'FM4_RESTOCK_DAYS SSP303115
2072 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4[13]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM 'FM4_RESTOCK_QTY SSP303115
2073 LINE$=LINE1$+FN%HTML_ESC$(STP(FM3$(25,4),1))+LINE2$; GOTO 2095; REM 'USAGE_YEAR FROM FM3 SSP303115
2074 LINE$=LINE1$+FN%HTML_ESC$(STP(FM3$(29,1),1))+LINE2$; GOTO 2095; REM 'USAGE_BAL_TYPE FROM FM3 SSP303115
2075 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4[4]+FM4[5]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM 'DIRECT + WHSE SHIPMENTS SSP303115
2076 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[0]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_reorder_pt SSP303115
2077 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[1]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_last_cost SSP303115
2078 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[2]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_avg_cost SSP303115
2079 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[3]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_beg_balance SSP303115
2080 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[4]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_receipts SSP303115
2081 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[5]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_sales SSP303115
2082 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[6]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_adj SSP303115
2083 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[7]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_committed SSP303115
2084 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[8]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_onpo SSP303115
2085 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[9]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_last_count SSP303115
2086 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[10]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_reorder_qty SSP303115
2087 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[11]:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "ic1_bo_qty SSP303115
2088 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(YTD_USAGE:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "fm3_ytd_usage SSP303115
2089 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(YTD_USAGE_ALL:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "fm3_ytdall_usage SSP303115
2090 LINE$=LINE1$+"?"+LINE2$; GOTO 2095; REM "tag not found, replace with '?'
2095 RETURN 
3000 REM "Read customer data into AR1$
3005 USER$=EC$[2](51,10)
3009 GOSUB SET_READONLY ! SSP249924
3010 DIM AR1$(600); READ (Z[1],KEY=USER$,DOM=3011)AR1$
3012 CALL "ZZDISP","AX",AR1$(1,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$
3015 DIM FMP1$(500); READ (Z[6],KEY="D"+USER$,DOM=3016)FMP1$
3016 USAGE_YEAR$=FMP1$(52,4),USAGE_PERIOD$=FMP1$(56,2)
3044 GOSUB CLEAR_READONLY ! SSP249924
3045 RETURN 
3200 REM "Output entries, using ENTRY_TEMPLATE$ to pass information, create TABLE$ to output
3202 ENTRY_TAGS$="001<item_code>002<cic_code>003<desc>004<um_ext>005<price>006<long_desc>"
3203 REM "Setup ENTRY_TEMPLATE$
3204 ENTRY_TEMPLATE$=LINE$,TABLE$=""
3205 READ (100,END=3206)LINE$; GOSUB 7550; ENTRY_TEMPLATE$=ENTRY_TEMPLATE$+LINE$+EOL$; IF POS("?tf?entryend?"=LINE$)=0 THEN GOTO 3205
3209 REM "Now read order$, if B direction do it backwards
3210 IF DIRECTION$="B" THEN START_PT=TOTAL_RECORDS,END_PT=1,STEP_SIZE=-1 ELSE START_PT=1,END_PT=TOTAL_RECORDS,STEP_SIZE=1
3215 FOR ENTRY_INDEX=START_PT TO END_PT STEP STEP_SIZE
3220 DIM FM1$(550),FM1[31]; FIND (Z[2],KEY=AR1$(1,10)+ITEM$[ENTRY_INDEX],DOM=3245)IOL=0320
3225 ENTRY$=ENTRY_TEMPLATE$
3230 GOSUB 3300
3235 TABLE$=TABLE$+ENTRY$
3245 NEXT ENTRY_INDEX
3295 RETURN 
3300 REM "Given FM1$, create row in table
3305 EINDEX=POS("?tf?"=ENTRY$); IF EINDEX=0 THEN GOTO 3395
3306 EEND_INDEX=POS("?"=ENTRY$(EINDEX+4)),ETAG$=ENTRY$(EINDEX+4,EEND_INDEX-1),ENTRY1$=ENTRY$(1,EINDEX-1),ENTRY2$=ENTRY$(EINDEX+EEND_INDEX+4),EPOS=POS("<"+ETAG$+">"=ENTRY_TAGS$); IF EPOS=0 THEN EINDEX=0 ELSE EINDEX=NUM(ENTRY_TAGS$(EPOS-3,3))
3310 ON EINDEX GOTO 3389,3311,3312,3313,3314,3315,3316,3389
3311 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(FM1$(11,10),1))+ENTRY2$; GOTO 3390; REM "item_code SSP303115
3312 ENTRY$=ENTRY1$+FN%HTML_ESC$(TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1)))+ENTRY2$; GOTO 3390; REM "cic_code SSP303115
3313 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(FM1$(42,40),1))+ENTRY2$; GOTO 3390; REM "item description SSP303115
3314 UM_EXT$=STP(FM1$(100,4),2)+"/"+STP(STR(FM1[4]:"#####"),2); ENTRY$=ENTRY1$+FN%HTML_ESC$(UM_EXT$)+ENTRY2$; GOTO 3390; REM "um_ext, selling u/m & u/per extended SSP303115
3315 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(FM1[3]:X3$(69,1)+"###,###.00"))+ENTRY2$; GOTO 3390; REM "sell price SSP303115
3316 ENTRY$=ENTRY1$+STP(MID(ED9$,21,2000),1)+ENTRY2$; GOTO 3390; REM "long_desc SSP303115, 307217
3389 ENTRY$=ENTRY1$+""+ENTRY2$; GOTO 3390; REM "tag not found, replace with '?'
3390 GOTO 3305
3395 RETURN 
3400 REM "fill order$[] with orders, using position_item$ and direction$, if direction$='B'(ackwards) then 1->total_records is in reverse order, so read it later as total_records-> 1
3404 GOSUB 3450
3405 IF POSITION_ITEM$="" AND DIRECTION$="B" THEN POSITION_ITEM$=$FFFFFFFFFFFF$; REM "if in backwards order, start at end of file
3410 FIRST_ITEM$="",LAST_ITEM$="",TOTAL_RECORDS=0,INDEX=1; DIM ITEM$[100]
3415 READ (Z[3],KEY=AR1$(1,10)+POSITION_ITEM$,DOM=3416)
3420 IF DIRECTION$="B" THEN KEY_3$=KEP(Z[3],END=3435) ELSE KEY_3$=KEY(Z[3],END=3435)
3425 IF KEY_3$(1,10)<>AR1$(1,10) THEN GOTO 3435 ELSE READ (Z[3],KEY=KEY_3$,DOM=3420); ITEM$[INDEX]=KEY_3$(31,10),TOTAL_RECORDS=TOTAL_RECORDS+1,INDEX=INDEX+1; IF MAX_ROWS<>0 AND TOTAL_RECORDS>=MAX_ROWS THEN GOTO 3435; REM "skip to correct place to exit
3430 GOTO 3420
3440 IF DIRECTION$="B" THEN FIRST_ITEM$=ITEM$[TOTAL_RECORDS],LAST_ITEM$=ITEM$[1] ELSE FIRST_ITEM$=ITEM$[1],LAST_ITEM$=ITEM$[TOTAL_RECORDS]
3445 RETURN 
3450 REM "Set VERY_FIRST_ITEM$ and VERY_LAST_ITEM$. These will be used to determine when to NOT show prev and next buttons
3455 VERY_FIRST_ITEM$="",VERY_LAST_ITEM$=""
3460 READ (Z[3],KEY=AR1$(1,10),DOM=3461)
3465 VK$=KEY(Z[3],END=3466); IF VK$(1,10)=AR1$(1,10) THEN VERY_FIRST_ITEM$=VK$(31)
3470 READ (Z[3],KEY=AR1$(1,10)+$FF$,DOM=3471)
3471 VK$=KEP(Z[3],END=3472); IF VK$(1,10)=AR1$(1,10) THEN VERY_LAST_ITEM$=VK$(31)
3495 RETURN 
3500 REM "Output next button, using BUTTON_NEXT_TEMPLATE$ to pass information, creating BUTTON$, if needed
3502 BUTTON$="",BUTTON_NEXT_TAGS$="001<position_item>002<user>003<password>004<session_id>"
3503 REM "Setup BUTTON_NEXT_TEMPLATE$
3505 READ (100,END=3506)LINE$; GOSUB 7550; BUTTON_NEXT_TEMPLATE$=BUTTON_NEXT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonnextend?"=LINE$)=0 THEN GOTO 3505
3510 IF LAST_ITEM$=VERY_LAST_ITEM$ THEN BUTTON$=""; GOTO 3595 ELSE BUTTON$=BUTTON_NEXT_TEMPLATE$
3515 BNINDEX=POS("?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3591
3516 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_NEXT_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_NEXT_TAGS$(BNPOS-3,3))
3520 ON BNINDEX GOTO 3590,3521,3522,3523,3524,3590
3521 BUTTON$=BUTTON1$+LAST_ITEM$+BUTTON2$; GOTO 3590; REM "position_item
3522 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3590; REM "User
3523 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3590; REM "password
3524 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3590; REM "session_id
3590 GOTO 3515
3595 RETURN 
3600 REM "Output previous button, using BUTTON_PREV_TEMPLATE$ to pass information, creating BUTTON$, if needed
3602 BUTTON$="",BUTTON_PREV_TAGS$="001<position_item>002<user>003<password>004<session_id>"
3605 READ (100,END=3606)LINE$; GOSUB 7550; BUTTON_PREV_TEMPLATE$=BUTTON_PREV_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonprevend?"=LINE$)=0 THEN GOTO 3605
3610 IF FIRST_ITEM$=VERY_FIRST_ITEM$ THEN BUTTON$=""; GOTO 3695 ELSE BUTTON$=BUTTON_PREV_TEMPLATE$
3615 BNINDEX=POS("?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3691
3616 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_PREV_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_PREV_TAGS$(BNPOS-3,3))
3620 ON BNINDEX GOTO 3690,3621,3622,3623,3624,3690
3621 BUTTON$=BUTTON1$+FIRST_ITEM$+BUTTON2$; GOTO 3690; REM "position_item
3622 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3690; REM "User
3623 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3690; REM "password
3624 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3690; REM "session_id
3690 GOTO 3615
3695 RETURN 
3700 REM "ck for valid form image (blank)
3710 IF IC0$(118,1)="U" THEN GOSUB 8250; GOTO *NEXT ELSE IF STP(ECR$(31,30),3," ")="" THEN IMAGE_FORM1$=STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2) ELSE IMAGE_FORM1$=EC$[8]+STP(ECR$(31,30),2) ! SSP177202, if TOPS item, check for United Thumbnail image
3711 IF IC0$(118,1)="U" THEN GOSUB 8300; GOTO *NEXT ELSE IF STP(ECR$(61,30),3," ")="" THEN IMAGE_FORM2$=STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2) ELSE IMAGE_FORM2$=EC$[8]+STP(ECR$(61,30),2) ! SSP177202, if TOPS item, check for United Standard image
3712 IF STP(ECR$(91,30),3," ")="" THEN IMAGE_FORM3$=STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2) ELSE IMAGE_FORM3$=EC$[8]+STP(ECR$(91,30),2)
3713 IF STP(ECR$(121,30),3," ")="" THEN IMAGE_FORM4$=STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2) ELSE IMAGE_FORM4$=EC$[8]+STP(ECR$(121,30),2)
3714 IF STP(ECR$(151,30),3," ")="" THEN IMAGE_FORM5$=STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2) ELSE IMAGE_FORM5$=EC$[8]+STP(ECR$(151,30),2)
3719 RETURN 
4100 REM "quantity break pricing section (qtybreakstart)
4101 REM "Output entries, using QTYBREAK_TEMPLATE$ to pass information, create QTABLE$ to output
4102 REM "entry tags moved to line 1110
4103 REM "Setup QTYBREAK_TEMPLATE$
4104 QTYBREAK_TEMPLATE$=LINE$,QTABLE$=""
4105 READ (100,END=4106)LINE$; GOSUB 7550; QTYBREAK_TEMPLATE$=QTYBREAK_TEMPLATE$+LINE$+EOL$; IF POS("?tf?qtybreakend?"=LINE$)=0 THEN GOTO 4105
4110 STARTQP=POS("<!?tf?qtybreakstart?>"=QTYBREAK_TEMPLATE$); IF STARTQP<>0 AND LEN(QTYBREAK_TEMPLATE$)<>STARTQP+21 THEN QTYBREAK_TEMPLATE$=QTYBREAK_TEMPLATE$(STARTQP+21)
4111 ENDQP=POS("<!?tf?qtybreakend?>"=QTYBREAK_TEMPLATE$); IF ENDQP<>0 THEN QTYBREAK_TEMPLATE$=QTYBREAK_TEMPLATE$(1,ENDQP-1)
4112 REM "strip out the qtybreakstart/end section from LINE2$ that is currently being processed
4114 ENDQP=POS(">"=LINE2$); IF ENDQP=0 THEN GOTO 4115 ELSE IF ENDQP=1 AND LEN(LINE2$)=1 THEN LINE2$="" ELSE LINE2$=LINE2$(2)
4115 ENDQP=POS("<!?tf?qtybreakend?>"=LINE2$); IF ENDQP=0 THEN GOTO 4116 ELSE LINE2$=LINE2$(ENDQP+21)
4116 IF LEN(LINE1$)<2 THEN GOTO 4117 END_IF ; IF LINE1$(LEN(LINE1$)-1,2)="<!" THEN LINE1$=LINE1$(1,LEN(LINE1$)-2); REM "strip out page control tag <! that is left over with the processing of it as a simple data tag
4117 REM "PRINT 'CS',"ENTRY1: ",'LF',@(0),LINE1$,; INPUT *
4120 QBENTRY$=QTYBREAK_TEMPLATE$
4122 IF QTYBREAKS_INEFFECT$="Y" THEN GOSUB 4200; QTYBREAK$=QBENTRY$ ELSE QTYBREAK$=""
4149 RETURN 
4200 REM "Given item, create row in table
4210 CALL "EC3QB2",X3$,X4$,EC_PARM$,EC${ALL},STOCK$,FLAGGED_STOCK$,ECR$,BREAKQTY${ALL},BREAKPRICE${ALL},BREAKALL${ALL},BREAKRANGE${ALL},BREAKRANGEALL${ALL},QBENTRY$,OPTIONS$,FM1$,IC0$
4240 RETURN 
4499 REM 'CONTINUATION OF DATA TAGS
4500 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[30]:"#,###,##0-"),1))+LINE2$; GOTO 4690; REM "ic1_on_hand SSP303115
4501 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[31]:"#,###,##0-"),1))+LINE2$; GOTO 4690; REM "ic1_avail_in_stock SSP303115
4502 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[32]:"#,###,##0-"),1))+LINE2$; GOTO 4690; REM "ic1_avail_for_sale SSP303115
4503 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(LAST_COMPLETED_PER_USAGE:"#,###,##0"),1))+LINE2$; GOTO 4690; REM "fm3_current_per_usage SSP303115
4504 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(LAST_COMPLETED_PER_USAGEALL:"#,###,##0"),1))+LINE2$; GOTO 4690; REM "fm3_current_per_usageall SSP303115
4505 IF STP(RD$,3," ")="" THEN IF STP(CUST_LOCATION$,3," ")="" THEN RD$="ALL" ELSE RD$=EC$[1](191,20) END_IF END_IF ; LINE$=LINE1$+FN%HTML_ESC$(RD$)+LINE2$; GOTO 4690; REM "pcd_st_recvg_dept SSP303115
4506 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4_AVG_MOS_USAGEALL:UMASK$),1))+LINE2$; GOTO 2095; REM "fm4_avg_mos_usageall SSP303115
4507 IF STOCK$="Y" THEN SIC$=IC0$(11,10) ELSE SIC$=FM1$(11,10) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(SIC$,1))+LINE2$; GOTO 4690; REM "stripped_item_code SSP303115
4508 LINE$=LINE1$+IMGSRC_PREFIX$+FN%HTML_ESC$(IMAGE_FORM1$)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+LINE2$; GOTO 4690; REM "image_form1 SSP303115 SSP307179
4509 LINE$=LINE1$+IMGSRC_PREFIX$+FN%HTML_ESC$(IMAGE_FORM2$)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+LINE2$; GOTO 4690; REM "image_form2 SSP303115 SSP307179
4510 LINE$=LINE1$+IMGSRC_PREFIX$+FN%HTML_ESC$(IMAGE_FORM3$)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+LINE2$; GOTO 4390; REM "image_form3 SSP303115 SSP307179
4511 LINE$=LINE1$+IMGSRC_PREFIX$+FN%HTML_ESC$(IMAGE_FORM4$)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+LINE2$; GOTO 4690; REM "image_form4 SSP303115 SSP307179
4512 LINE$=LINE1$+IMGSRC_PREFIX$+FN%HTML_ESC$(IMAGE_FORM5$)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+LINE2$; GOTO 4690; REM "image_form5 SSP303115 SSP307179
4513 LINE$=LINE1$+FN%HTML_ESC$(IMAGE_FORM1$)+LINE2$; GOTO 4690; REM "image_form1_link SSP303115
4514 LINE$=LINE1$+FN%HTML_ESC$(IMAGE_FORM2$)+LINE2$; GOTO 4690; REM "image_form2_link SSP303115
4515 LINE$=LINE1$+FN%HTML_ESC$(IMAGE_FORM3$)+LINE2$; GOTO 4690; REM "image_form3_link SSP303115
4516 LINE$=LINE1$+FN%HTML_ESC$(IMAGE_FORM4$)+LINE2$; GOTO 4690; REM "image_form4_link SSP303115
4517 LINE$=LINE1$+FN%HTML_ESC$(IMAGE_FORM5$)+LINE2$; GOTO 4690; REM "image_form5_link SSP303115
4518 IF STOCK$="Y" THEN FC$=IC0$(11,10) ELSE FC$=FM1$(11,10) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(FC$)+LINE2$; GOTO 4690; REM "form_code SSP303115
4519 LINE$=LINE1$+FN%HTML_ESC$(ITEM_KEY$)+LINE2$; GOTO 4690; REM "image_item_key (used for relinking back to EC3PC1 for display of other form images SSP303115
4520 GOSUB 4900; LINE$=LINE1$+LOT_SECTION$+LINE2$; GOTO 4690; REM "lotlinestart - reporting of lotted inventory section
4521 GOSUB 7950; GOSUB 4100; LINE$=LINE1$+QTYBREAK$+LINE2$; GOTO 4690; REM "qtybreakstart
4522 IF EC$[2](61,4)=DIM(4) THEN SMARTU=FM1[24] ELSE SMARTU=FM4_AVG_MOS_USAGE END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STR(SMARTU:"##,###,##0-"))+LINE2$; GOTO 4690; REM "form_mos_avg_usage_smart - if location based buyer returns usage for single location - if not location based returns screen 2 usage SSP303115
4523 LINE$=LINE1$+FN%HTML_ESC$(STR(FM1(18):"##,###.00"))+LINE2$; GOTO 4690; REM "carton_weight SSP303115
4524 GOSUB 7800; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[31]/PACKDIV:"#,###,##0-"),1))+LINE2$; GOTO 4690; REM "ic1_avail_in_stock_sell SSP303115
4525 GOSUB 7800; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[7]/PACKDIV:"#,###,##0-"),1))+LINE2$; GOTO 4690; REM "ic1_committed_sell SSP303115
4526 GOSUB 7800; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(IC1INFO[8]/PACKDIV:"#,###,##0-"),1))+LINE2$; GOTO 4690; REM "ic1_onpo_sell SSP303115
4527 GOSUB 7800; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(LAST_COMPLETED_PER_USAGE/PACKDIV:"#,###,##0-"),1))+LINE2$; GOTO 4690; REM "fm3_current_per_usage_sell SSP303115
4528 GOSUB 7800; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(YTD_USAGE/PACKDIV:"#,###,##0-"),1))+LINE2$; GOTO 4690; REM "fm3_ytd_usage_sell SSP303115
4529 GOSUB 7800; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FM4_AVG_MOS_USAGE/PACKDIV:UMASK$),1))+LINE2$; GOTO 4690; REM "fm4_avg_mos_usage_sell SSP303115
4530 GOSUB 7800; LINE$=LINE1$+FN%HTML_ESC$(EXT_UM$)+LINE2$; GOTO 4690; REM "sell_unit_ext SSP303115
4531 GOSUB 8000; LINE$=LINE1$+FN%HTML_ESC$(FMZ_ORDER_NUMBER$)+LINE2$; GOTO 4690; REM " FMZ order number SSP303115
4532 GOSUB 8000; LINE$=LINE1$+FN%HTML_ESC$(FMZ_ACTIVITY_DT$)+LINE2$; GOTO 4690; REM " FMZ activity date SSP303115
4533 GOSUB 8000; LINE$=LINE1$+FN%HTML_ESC$(FMZ_CUST_PO$)+LINE2$; GOTO 4690; REM " FMZ customer po SSP303115
4534 GOSUB 8000; IF FMZ_ORDER_QTY=0 THEN LINE$=LINE1$+LINE2$; GOTO 4690 ELSE LINE$=LINE1$+FN%HTML_ESC$(STP(STR(FMZ_ORDER_QTY/PACKDIV:M0$),1)+" "+EXT_UM$)+LINE2$; GOTO 4690; REM " FMZ order quantity SSP303115
4535 IF STP(CUST_LOCATION$,3," ")="" THEN TEMPLOC$="All locations" ELSE TEMPLOC$=CUST_LOCATION$ END_IF ; LINE$=LINE1$+FN%HTML_ESC$(TEMPLOC$)+LINE2$; GOTO 4690; REM "reported_usage_location 159047.  SSP169326, code was not added to TF program SSP303115
4536 GOSUB 7700; LINE$=LINE1$+FN%HTML_ESC$(ITEM_KEY_UE$)+LINE2$; GOTO 4690 ! image_item_key_ue, SSP186727 SSP303115
4537 GOSUB 4800; LINE$=FS6_ORDHIST$; GOTO 4690; REM "fs6_ordhist_start - 196113
4538 GOSUB 4850; LINE$=IC9_INVSTAT$; GOTO 4690; REM "ic9_invstat_start - 196113
4539 LINE$=LINE1$+STP(MID(ED9$,21,2000),1)+LINE2$; GOTO 4690; REM "long_desc SSP303115, 307217
4540 ENTRY1$=LINE1$,ENTRY2$=LINE2$; GOSUB 8400; LINE1$=ENTRY1$,LINE2$=ENTRY2$; LINE$=LINE1$+QB_LIST$+LINE2$; GOTO 4690 ! WO175854, qty_breaks_ddl
4541 GOSUB 7800; IF EC$[2](61,4)=DIM(4) THEN SMARTU=FM1[24]/PACKDIV ELSE SMARTU=FM4_AVG_MOS_USAGE/PACKDIV END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STR(SMARTU:"##,###,##0-"))+LINE2$; GOTO 4690 ! SSP219131, form_mos_avg_usage_smart_sell SSP303115
4690 RETURN 
4800 REM "FS6 order history section (fs6_ordhist_start)
4801 ORDHIST_TEMPLATE$=LINE$
4802 DIM FS6_OPTIONS$(20)
4803 MAX_HIST_LINES$=MID(LINE$,MSK(LINE$,"\[[^\]]*\]",ERR=*NEXT),MSL,ERR=*NEXT)
4805 IF MAX_HIST_LINES$<>"" THEN FS6_OPTIONS$(1,3)=MID(MAX_HIST_LINES$,MSK(MAX_HIST_LINES$,"[0-9]+"),MSL); ORDHIST_TEMPLATE$=SUB(ORDHIST_TEMPLATE$,MAX_HIST_LINES$,"")
4807 FS6_OPTIONS$(4,3)="BBB"
4810 READ (100,END=4811)LINE$; ORDHIST_TEMPLATE$=ORDHIST_TEMPLATE$+LINE$+EOL$; IF POS("?tf?fs6_ordhist_end?"=LINE$)=0 THEN GOTO 4810
4820 STARTQP=POS("?tf?fs6_ordhist_start?"=ORDHIST_TEMPLATE$); IF STARTQP<>0 AND LEN(ORDHIST_TEMPLATE$)<>STARTQP+22 THEN ORDHIST_TEMPLATE$=ORDHIST_TEMPLATE$(STARTQP+22)
4830 ENDQP=POS("?tf?fs6_ordhist_end?"=ORDHIST_TEMPLATE$); IF ENDQP<>0 THEN ORDHIST_TEMPLATE$=ORDHIST_TEMPLATE$(1,ENDQP-1)
4840 CALL "EC3MAK",X3$,X4$,EC_PARM$,EC${ALL},ORDHIST_TEMPLATE$,ITEM_KEY$,PACKDIV,FS6_OPTIONS$,FS6_ORDHIST$
4845 RETURN 
4850 REM "IC9 inventory statistics section (ic9_invstat_start)
4851 INVSTAT_TEMPLATE$=LINE$
4852 DIM IC9_OPTIONS$(20)
4855 IC9_OPTIONS$(1,1)="U"
4860 READ (100,END=4861)LINE$; INVSTAT_TEMPLATE$=INVSTAT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?ic9_invstat_end?"=LINE$)=0 THEN GOTO 4860
4870 STARTQP=POS("?tf?ic9_invstat_start?"=INVSTAT_TEMPLATE$); IF STARTQP<>0 AND LEN(INVSTAT_TEMPLATE$)<>STARTQP+22 THEN INVSTAT_TEMPLATE$=INVSTAT_TEMPLATE$(STARTQP+22)
4880 ENDQP=POS("?tf?ic9_invstat_end?"=INVSTAT_TEMPLATE$); IF ENDQP<>0 THEN INVSTAT_TEMPLATE$=INVSTAT_TEMPLATE$(1,ENDQP-1)
4890 CALL "EC3MDA",X3$,X4$,EC_PARM$,EC${ALL},INVSTAT_TEMPLATE$,ITEM_KEY$,PACKDIV,IC9_OPTIONS$,IC9_INVSTAT$
4895 RETURN 
4900 REM "Get lotted lines section in LOT_TEMPLATE$ and generate LOT_SECTION$ containing an entry for each order line from ICF for the corresponding line section item
4903 REM "Setup LOT_TEMPLATE$
4904 LOT_TEMPLATE$=""
4905 READ (100,END=4906)LINE$; GOSUB 7550; LOT_TEMPLATE$=LOT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?lotlineend?"=LINE$)=0 THEN GOTO 4905
4910 GOSUB SET_READONLY; DIM ECR$(1000); FIND (Z[7],KEY=ITEM_KEY$,DOM=4911)ECR$ ! SSP227617, add READONLY 
4911 GOSUB CLEAR_READONLY; IF ECR$(256,48)=DIM(48) THEN WHSE_LIST$=EC$[11] ELSE WHSE_LIST$=STP(ECR$(256,48),1) ! SSP227617
4920 REM "get lot records
4922 CALL "EC3IC1",X3$,X4$,EC_PARM$,EC${ALL},ITEM_KEY$,WHSE_LIST$,-1,0,ICF_INFO${ALL},NEXT_ICF_INDEX,""
4924 IF NEXT_ICF_INDEX=1 THEN LOT_TEMPLATE$=""; GOTO 4933; REM "NO LOT RECORDS
4930 REM "output lot section
4932 CALL "EC3IC2",X3$,X4$,EC_PARM$,EC${ALL},LOT_TEMPLATE$,ICF_INFO${ALL},NEXT_ICF_INDEX-1,""
4933 LOT_SECTION$=LOT_TEMPLATE$
4943 XX=POS(">"=LINE2$); IF XX=0 THEN GOTO 4944 ELSE IF LEN(LINE2$)=1 THEN LINE2$="" ELSE LINE2$=LINE2$(2)
4995 RETURN 
7100 REM "get FM1/IC0/ECR item information ssp 157200
7101 BADITEM$="N",IC0FOUND$="N"; GOSUB SET_READONLY ! SSP174539, set READONLY
7105 FINDITEMKEY$=ITEM_KEY$; IF ITEM_KEY$(1,10)=DIM(10) THEN STOCK$="Y" ELSE STOCK$="N"; REM "157200
7108 DIM FM1$(550),FM1[31],IC0$(200),IC0[40]; IF STOCK$="N" THEN FIND (Z[2],KEY=FINDITEMKEY$,DOM=7109)IOL=0320; GOTO 7110 ELSE GOTO 7112; REM "160965
7109 FM1$(1,20)=EC$[2](51,10)+ITEM_KEY$,FINDITEMKEY$=FM1$(1,20); FIND (Z(2),KEY=FM1$(1,20),DOM=7111)IOL=0320; ITEM_KEY$=FM1$(1,20); GOTO 7110; REM "if can't find item initially then add the customer (assuming they only sent over the item code and not the associated customer) ssp 135581
7110 IF FM1$(105,1)="Y" AND EC_PARM$(556,1)="Y" THEN FLAGGED_STOCK$="Y"; GOTO 7112 ELSE GOTO 7112
7111 BADITEM$="Y"; GOTO 7140
7112 FIND (Z(14),KEY=ITEM_KEY$,DOM=7113)IOL=0440; IC0FOUND$="Y"; GOTO 7115; REM "get IC0 record using custom item master key
7113 FIND (Z(14),KEY=DIM(10)+ITEM_KEY$(11,10),DOM=7115)IOL=0440; IC0FOUND$="Y"; REM "get IC0 record using stock setting
7115 IF STOCK$="Y" AND IC0FOUND$<>"Y" THEN GOTO 7111; REM "bad record since stock item but no IC0 record found
7130 DIM ECR$(1024); FIND (Z[6],KEY=ITEM_KEY$,DOM=7131)IOL=0360; REM "get form webec parms
7131 IF IC0FOUND$="N" AND ECR$(253,1)="I" THEN ECR$(253,1)="C"; REM "if pricing source set to inventory but no inventory record found then reset to custom item master
7140 GOSUB CLEAR_READONLY; RETURN ! SSP174539, clear READONLY 
7145 ! 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7500 REM 'SUBS
7510 REM 'RETURN FORMATTED DATE
7520 CALL "ZZDISP","DX",DATEIN$,"",X3$,DATEOUT$,"",0,0,X4$
7521 DATEOUT$=STP(DATEOUT$,1)
7522 RETURN 
7550 REM "Send LINE$ to EC3BYB for generic fields processing
7560 CALL "EC3BYB",ERR=7561,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100 ! 227154
7595 RETURN 
7700 REM "Netscape and other may require URL encoded item code to hide spaces, slashes, etc. we will encode the whole string rather than just the special chars, because its easier.  SSP186727, copied from EC3PC0
7705 ITEM_KEY_UE$=""
7710 FOR JJ=1 TO 20; ITEM_KEY_UE$=ITEM_KEY_UE$+"%"+HTA(ITEM_KEY$(JJ,1)); NEXT JJ
7745 RETURN 
7749 ! 
7800 REM "get active uom
7801 IF UM$<>"" THEN GOTO 7891
7810 ON POS(STOCK$="NY")-1 GOTO 7820,7840
7820 REM "not stock sot it's custom - items FM1
7830 IF STP(FM1$(238,4),3," ")="" OR FM1[25]=0 THEN UM$=STP(FM1$(100,4),1),PACK=FM1[4]; GOTO 7860 ELSE UM$=STP(FM1$(238,4),1),PACK=FM1[25]; GOTO 7860
7840 REM "stock item - items IC0
7850 UM$=IC0$(120,4),PACK=IC0[14]
7860 UM$=STP(UM$,1),EXT_UM$=STP(UM$,1)+"/"+STR(PACK:"##,##0")
7890 IF PACK=0 THEN PACKDIV=1 ELSE PACKDIV=PACK
7891 RETURN 
7900 REM "get inventory / usage figures
7909 DIM FM3$(100)
7910 DIM CHANNELS[4]; CHANNELS[1]=Z[5],CHANNELS[2]=Z[3],CHANNELS[3]=Z[4],CHANNELS[4]=Z[7]
7911 DIM OPTIONS$(20); OPTIONS$(1,2)="RB"; REM "R-reported warehouses   B-both usage/inventory figs also ssp#153083, SSP165240, OPTIONS$ now 20 long
7912 OPTIONS$(3,1)=NO_INVUSAGE$; REM "controls wether inventory /usage figures are needed - if not Y will return dimensioned variables only
7913 OPTIONS$(6,10)=FM1$(185,10) ! ssp#153083 - add from customer
7930 CALL "EC3IC0",X3$,X4$,EC_PARM$,EC${ALL},ITEM_KEY$,USAGE_KEYS$,CHANNELS{ALL},IC1INFO{ALL},FM3{ALL},FM3ALL{ALL},FM4$,FM4{ALL},FM4ALL{ALL},FORM_OTHER{ALL},FORM_OTHERALL{ALL},OPTIONS$
7940 REM "set other vars to local variables
7941 FM4_AVG_MOS_USAGE=FORM_OTHER[0],FM4_AVG_MOS_USAGEALL=FORM_OTHERALL[0]
7942 LAST_COMPLETED_PER_USAGE=FORM_OTHER[1],LAST_COMPLETED_PER_USAGEALL=FORM_OTHERALL[1]
7943 YTD_USAGE=FORM_OTHER[2],YTD_USAGE_ALL=FORM_OTHERALL[2]
7945 RETURN 
7950 REM "break variables
7955 DIM OPTIONS$(20); IF USE_ALT_UM_QB$="Y" THEN OPTIONS$(1,1)="Y"
7960 CALL "EC3QB1",X3$,X4$,EC_PARM$,EC${ALL},STOCK$,FLAGGED_STOCK$,Z(6),ECR$,IC0$,IC0{ALL},AR1$,Q{ALL},P{ALL},BREAKQTY${ALL},BREAKPRICE${ALL},BREAKALL${ALL},BREAKRANGE${ALL},BREAKRANGEALL${ALL},QTYBREAKS_INEFFECT$,OPTIONS$
7995 RETURN 
8000 REM " GET INFORMATION FROM FMZ HISTORY FILE
8001 FMZ_COUNT=0,FMZ_CUST_PO$="",FMZ_ACTIVITY_DT$="",FMZ_ORDER_NUMBER$="",FMZ_ORDER_QTY=0
8004 IF LEN(LINE2$)<3 THEN GOTO 8010 ELSE LEFT_BRACKET_POS=POS("["=LINE2$); IF LEFT_BRACKET_POS=0 THEN GOTO 8010
8005 RIGHT_BRACKET_POS=POS("]"=LINE2$); IF RIGHT_BRACKET_POS=0 THEN GOTO 8010
8006 FIELD_LEN=(RIGHT_BRACKET_POS-LEFT_BRACKET_POS-1); IF FIELD_LEN=0 THEN GOTO 8010
8008 FMZ_INDEX$=LINE2$(LEFT_BRACKET_POS+1,FIELD_LEN); FMZ_INDEX=NUM(FMZ_INDEX$)
8009 LINE2$=LINE2$(RIGHT_BRACKET_POS+1)
8010 IF FMZ_INDEX>MAX_HIST THEN GOTO 8060
8011 IF FMZ_INDEX<1 THEN GOTO 8060
8012 IF CUST_LOCATION$<>DIM(4) THEN START_KEY$=EC$[2](51,10)+"C"+CUST_LOCATION$+ITEM_KEY$(11,10)+$FF$ ELSE START_KEY$=EC$[2](51,10)+"C"+EC$[1](1167,4)+ITEM_KEY$(11,10)+$FF$
8014 READ (Z[20],KEY=START_KEY$,DOM=8015)
8015 FMZ_KEY$=KEP(Z[20],END=8060); DIM FMZ$(428),FMZ[14]; READ (Z[20],KEY=FMZ_KEY$)IOL=0450
8016 IF FMZ$(1,25)<>START_KEY$(1,25) THEN GOTO 8060
8017 IF POS(FMZ$(35,1)="DI",1)=0 THEN GOTO 8015
8018 IF FMZ$(12,4)<>START_KEY$(12,4) THEN GOTO 8015
8019 FMZ_COUNT=FMZ_COUNT+1
8020 IF FMZ_COUNT<>FMZ_INDEX THEN GOTO 8015
8025 FMZ_ORDER_QTY=FMZ[1]; REM " QUANTITY SHIPPED IN EACHES
8029 DATEIN$=DIM(6); DATEOUT$=DIM(6) ! SSP 215357
8030 IF FMZ$(26,6)<>DIM(6) THEN DATEIN$=FMZ$(26,6)
8031 IF DATEIN$=DIM(6) AND FMZ$(145,6)<>DIM(6) THEN DATEIN$=FMZ$(145,6)
8032 IF DATEIN$=DIM(6) AND FMZ$(192,6)<>DIM(6) THEN DATEIN$=FMZ$(192,6)
8035 IF STP(DATEIN$,3)<>"" THEN GOSUB 7510; REM ssp 195081
8040 FMZ_ORDER_NUMBER_IN$=FMZ$(113,8)
8045 CALL "ZZDISP","AX",FMZ_ORDER_NUMBER_IN$,"O/P",X3$,FMZ_ORDER_NUMBER$,"",0,0,X4$
8050 FMZ_ACTIVITY_DT$=DATEOUT$
8055 FMZ_CUST_PO$=FMZ$(122,15)
8056 GOSUB 7800
8058 IF PACKDIV>ABS(FMZ_ORDER_QTY) THEN M0$="##,###,##0.#-" ELSE M0$="##,###,###-"
8060 RETURN 
8240 Q=LEN(O$)-37; IF Q>0 THEN D0$=O$(Q+8,6)
8250 ! SSP177202, TOPS item, see if we have an image from United to use - thumbnail
8260 IF STP(OSP_PARM$(461,60),2)="" THEN GOTO *RETURN
8265 READ (Z[15],KEY=IC0$(11,10),DOM=*RETURN)OS5$
8270 IF STP(OS5$(61,15),2)="" THEN GOTO *RETURN
8275 IMAGE_FORM1$=STP(OSP_PARM$(461,60),2)+STP(OS5$(61,15),2)
8295 RETURN 
8299 ! 
8300 ! SSP177202, TOPS item, see if we have an image from United to use - standard
8310 IF STP(OSP_PARM$(521,60),2)="" THEN GOTO *RETURN
8315 READ (Z[15],KEY=IC0$(11,10),DOM=*RETURN)OS5$
8320 IF STP(OS5$(61,15),2)="" THEN GOTO *RETURN
8325 IMAGE_FORM2$=STP(OSP_PARM$(521,60),2)+STP(OS5$(61,15),2)
8345 RETURN 
8349 ! 
8400 ! Return QB_LIST$ as HTML for drop down list, for qty_breaks_ddl tag
8405 QB_LIST$=""
8410 IF POS("<!"=ENTRY1$,-1)>1 THEN ENTRY1$=ENTRY1$(1,POS("<!"=ENTRY1$)-1); REM "Remove start of comment if there
8412 DIM EE4$(400),EE4[15]; FIND (Z[22],KEY=IC0$(1,20),DOM=*NEXT)IOL=0420; GOSUB 8500; GOTO 8470 ! WO192242, use EE4 data for ddl
8415 QB_UM$=IC0$(120,4),QB_PACK=IC0[14]; IF STP(FM1$(238,4),1)>"" AND FM1[25]<>0 THEN QB_UM$=FM1$(238,4),QB_PACK=FM1[25]
8420 DIM P$(21),P[1]; READ (Z[13],KEY="U/M"+QB_UM$,DOM=*NEXT)IOL=0390
8425 IF P$(20,1)="Y" THEN QB_PACK=P[1]
8426 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4)
8427 IF QB_UM$=THOUSANDS$ AND EC_PARM$(948,1)<>"Y" THEN QB_PACK=1000
8430 IF QB_PACK=0 THEN QB_PACK=1
8435 QB_LIST$="<option selected value="+QUO+DIM(20)+QUO+">          </option>"
8440 FOR X=1 TO 11 STEP 2
8445 IF IC0[X]=0 THEN EXITTO 8470 ELSE QB_LIST$+="<option value="+QUO+STR(INT(IC0[X]/QB_PACK+.99))+QUO+">"+STR(INT(IC0[X]/QB_PACK+.99))+"</option>"
8450 NEXT X
8455 FOR X=21 TO 31 STEP 2
8460 IF IC0[X]=0 THEN EXITTO 8470 ELSE QB_LIST$+="<option value="+QUO+STR(INT(IC0[X]/QB_PACK+.99))+QUO+">"+STR(INT(IC0[X]/QB_PACK+.99))+"</option>"
8465 NEXT X
8470 STMP=POS("</select>"=ENTRY1$,-1); IF STMP<>0 THEN QB_LIST$=QB_LIST$+"</select>"; IF STMP=1 THEN ENTRY1$="" ELSE ENTRY1$=ENTRY1$(1,STMP-1)
8475 IF ENTRY2$>"" THEN IF ENTRY2$(1,1)=">" THEN ENTRY2$=ENTRY2$(2); REM "if token was part of a comment, then remove the end of the comment.
8490 RETURN 
8495 ! 
8500 ! Use EE4 file data for qty_breaks_ddl, WO192242
8510 QB_LIST$="<option selected value="+QUO+DIM(20)+QUO+">          </option>"
8520 FOR X=1 TO 12
8525 IF EE4[X]=0 THEN EXITTO EE4_DONE ELSE START_POS=(X-1)*25+21
8530 QB_LIST$+="<option value="+QUO+STR(EE4[X])+QUO+">"+STP(EE4$(START_POS,25),1)+"</option>"
8535 NEXT X
8540 EE4_DONE:
8545 RETURN 
8549 ! 
8700 GET_INCLUDE_FILE:! found include tag now get name from brackets, find file, and set INCLUDE_DATA$ to it's contents
8705 INCLUDE_DATA$=""
8710 IF MSK(INCENTRY2$,"\[[^\]]*\]")=1 THEN {
8715 INCLUDE_FILE$=INCENTRY2$(2,MSL-2),INCENTRY2$=MID(INCENTRY2$,MSL+1)
8720 ! If we see a tag in the include file name, then call EC3BYB to add info
8725 P=POS("?tf?qty_breaks_only?"=INCLUDE_FILE$); IF P>0 THEN GOSUB SET_QTY_BREAKS_ONLY; IF P=1 THEN INCLUDE_FILE$=QTY_BREAKS_ONLY$+INCLUDE_FILE$(P+20) ELSE INCLUDE_FILE$=INCLUDE_FILE$(1,P-1)+QTY_BREAKS_ONLY$+INCLUDE_FILE$(P+20)
8726 P=POS("?tf?item_key?"=INCLUDE_FILE$); IF P>0 THEN GOSUB SET_ITEM_KEY; IF P=1 THEN INCLUDE_FILE$=ITEM_KEY_INCL$+INCLUDE_FILE$(P+13) ELSE INCLUDE_FILE$=INCLUDE_FILE$(1,P-1)+ITEM_KEY_INCL$+INCLUDE_FILE$(P+13) ! WO 240669
8727 P=POS("?tf?show_pdf_link?"=INCLUDE_FILE$); IF P>0 THEN GOSUB SET_SHOW_PDF_LINK; IF P=1 THEN INCLUDE_FILE$=SHOW_PDF_LINK$+INCLUDE_FILE$(P+18) ELSE INCLUDE_FILE$=INCLUDE_FILE$(1,P-1)+SHOW_PDF_LINK$+INCLUDE_FILE$(P+18)
8730 ! If webcode then try with webcode first
8735 IF NOT(NUL(EC$[2](276,15))) THEN IF_CHAN=HFN; OPEN (IF_CHAN,ERR=*NEXT)STP(EC$[14](56,60),1)+DLM+STP(EC$[2](276,15),1)+INCLUDE_FILE$; GOTO GET_INCLUDE_DATA
8740 IF_CHAN=HFN; OPEN (IF_CHAN,ERR=*RETURN)STP(EC$[14](56,60),1)+DLM+INCLUDE_FILE$
8745 GET_INCLUDE_DATA:READ (IF_CHAN,ERR=*NEXT,END=*NEXT)IF_IN$; INCLUDE_DATA$+=IF_IN$+EOL$; GOTO *SAME
8750 ! Remove the last EOL$ so we don't introduce an extra line feed
8754 CLOSE (IF_CHAN,ERR=*NEXT) ! SSP186570
8755 INCLUDE_DATA$=MID(INCLUDE_DATA$,1,LEN(INCLUDE_DATA$)-(LEN(EOL$)))
8759 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,INCLUDE_DATA$,BYBINFO${ALL},BYBOPTIONS$,IF_CHAN ! 227154
8760  }
8765 RETURN 
8770 ! 
8775 SET_QTY_BREAKS_ONLY:
8780 QTY_BREAKS_ONLY$="N"
8785 IF ECR$(572,1)="Y" AND IC0[1]>0 THEN QTY_BREAKS_ONLY$="Y"
8795 RETURN 
8799 ! 
8800 CHECK_FOR_INCLUDE:
8810 TXTINDEX=POS("?tf?3p_text?"=ENTRY$); IF TXTINDEX=0 THEN GOTO 8830
8815 TXTENDINDEX=POS("?"=ENTRY$(TXTINDEX+4)),TXTTAG$=ENTRY$(TXTINDEX+4,TXTENDINDEX-1),TXTENTRY1$=ENTRY$(1,TXTINDEX-1),TXTENTRY2$=ENTRY$(TXTINDEX+TXTENDINDEX+4)
8820 GOSUB GET_3PTEXT_FILE
8825 ENTRY$=TXTENTRY1$+TXT_VAR_TEXT$+TXTENTRY2$
8830 INCINDEX=POS("?tf?EC3PC0_include?"=ENTRY$); IF INCINDEX=0 THEN GOTO *RETURN
8835 INCENDINDEX=POS("?"=ENTRY$(INCINDEX+4)),INCTAG$=ENTRY$(INCINDEX+4,INCENDINDEX-1),INCENTRY1$=ENTRY$(1,INCINDEX-1),INCENTRY2$=ENTRY$(INCINDEX+INCENDINDEX+4)
8840 GOSUB GET_INCLUDE_FILE
8845 ENTRY$=INCENTRY1$+INCLUDE_DATA$+INCENTRY2$; GOTO 8830 ! ssp 195434 - check for more than one include file
8848 RETURN 
8849 ! 
8850 GET_3PTEXT_FILE:! special one for use with new EC3PC0_include, copied from 7600's
8855 ! Extract [x] part from txtentry2, if not found then ignore
8860 TXT_VAR_TEXT$=""
8865 IF LEN(TXTENTRY2$)<3 THEN GOTO 8870 ELSE BRACKET_POS=POS("]"=TXTENTRY2$); IF TXTENTRY2$(1,1)<>"[" OR BRACKET_POS=0 THEN GOTO 8870 ELSE TXT_VAR_CODE$=TXTENTRY2$(1,BRACKET_POS),TXTENTRY2$=TXTENTRY2$(BRACKET_POS+1); GOTO 8875
8870 TXT_VAR_TEXT$=""; GOTO *RETURN; REM "did not find var code part, so leave
8875 TXT_VAR_CODE$=TXT_VAR_CODE$(2,LEN(TXT_VAR_CODE$)-2); TXT_VAR_CODE$=STR(NUM(TXT_VAR_CODE$,ERR=8870):"00000")
8885 TXT_VAR_CODE_KEY$=ECR$(243,10)+TXT_VAR_CODE$; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,TXT_VAR_CODE_KEY$,TXT_VAR_TEXT${ALL}
8890 TXT_VAR_TEXT$=TXT_VAR_TEXT$[1]
8895 RETURN 
8899 ! 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8950 SET_ITEM_KEY:! WO 240669
8955 IF STOCK$="Y" OR FLAGGED_STOCK$="Y" THEN ITEM_KEY_INCL$=IC0$(1,20) ELSE ITEM_KEY_INCL$=FM1$(1,20) END_IF ; ITEM_KEY_INCL$=STP(ITEM_KEY_INCL$,3,*EC_PARM$(687,19)+" ",ERR=*PROCEED) ! Strip invalid chars from Item key
8970 RETURN 
8974 ! 
8975 SET_SHOW_PDF_LINK:
8980 SHOW_PDF_LINK$="N"
8985 IF ECR$(576,1)="Y" THEN SHOW_PDF_LINK$="Y"
8990 RETURN 
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 REM "FOR I=1 TO 20; IF Z[I]<>0 THEN CLOSE (Z[I]) FI; NEXT I
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56000 REM "195081-Webec is hanging in program EC3PC1. Seems to always be on   
56002 REM "196113-Has a WebEC buyer that wants to see reports only.           
56004 REM "209898-Custom Programming - Add a new file to store expanded produc
56005 REM "215357-Urgent item codes isn't showing the correct last three      
56008 REM "219131-Web EC - Product Avg Monthly Usage
56009 REM "227154-Modify EC3BYB to support a condition tag : ?tf?if?[expr]    
56012 ! 227617-ERR 0 AT 8120 in EC3PC0, AT 1115 AND 4910 IN EC3PC1
56013 REM "240669-EC tag item_key support for ec3pc0_include tag
56014 REM "249924-DBE: RT 15622 Error 0, EC3PC1, 3015.    
56015 REM "282266-Issue with webec tag ?tf?Item_Key? not transferring to the  
56016 REM "303115-FN%HTML_ESC$ additions in EC programs                       
56018 REM "307179-DBSPT-66337; Product Catalog Images not displaying correctly
56019 REM "307217-Product Catalog Detail - Long Description is now displaying 
