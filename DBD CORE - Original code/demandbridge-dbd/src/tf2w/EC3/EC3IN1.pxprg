0010 REM "EC Invoice Status <EC3IN1>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 04/24/24 - 6.848005 - crg - SSP# 307482
0037 REM "307482-DBD-449: Add misc fields for customer,sperson, email        
0040 REM "Copyright 2024 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3IN1",X1$="E/C Invoice Detail"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1)) ! WO263088 
0130 NY$="NY"
0310 IOLIST AR6$,AR6[0],AR6[1],AR6[2],AR6[3],AR6[4],AR6[5],AR6[6],AR6[7],AR6[8],AR6[9],AR6[10],AR6[11],AR6[12],AR6[13],AR6[14]
0320 IOLIST AZB$,AZB[0],AZB[1],AZB[2],AZB[3],AZB[4],AZB[5],AZB[6],AZB[7],AZB[8],AZB[9],AZB[10],AZB[11],AZB[12],AZB[13]
0350 IOLIST AZT$,AZT[0],AZT[1],AZT[2],AZT[3],AZT[4],AZT[5],AZT[6],AZT[7],AZT[8],AZT[9],AZT[10],AZT[11],AZT[12],AZT[13],AZT[14],AZT[15],AZT[16],AZT[17],AZT[18],AZT[19],AZT[20],AZT[21],AZT[22],AZT[23],AZT[24],AZT[25],AZT[26],AZT[27],AZT[28],AZT[29],AZT[30],AZT[31],AZT[32],AZT[33],AZT[34],AZT[35],AZT[36],AZT[37],AZT[38],AZT[39],AZT[40],AZT[41],AZT[42],AZT[43],AZT[44],AZT[45],AZT[46],AZT[47],AZT[48] ! SSP291079, fix IOLIST
0360 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0392 IOLIST FMPX$,FMPX(0),FMPX(1),FMPX(2)
0470 IOLIST AZB_2$,AZB_2[0],AZB_2[1],AZB_2[2],AZB_2[3],AZB_2[4],AZB_2[5],AZB_2[6],AZB_2[7],AZB_2[8],AZB_2[9],AZB_2[10],AZB_2[11],AZB_2[12],AZB_2[13],AZB_2[14],AZB_2[15],AZB_2[16],AZB_2[17],AZB_2[18],AZB_2[19],AZB_2[20],AZB_2[21],AZB_2[22],AZB_2[23],AZB_2[24],AZB_2[25],AZB_2[26],AZB_2[27],AZB_2[28],AZB_2[29],AZB_2[30]
0490 IOLIST AZT_2$,AZT_2[0],AZT_2[1],AZT_2[2],AZT_2[3],AZT_2[4],AZT_2[5],AZT_2[6],AZT_2[7],AZT_2[8],AZT_2[9],AZT_2[10],AZT_2[11],AZT_2[12],AZT_2[13],AZT_2[14],AZT_2[15],AZT_2[16],AZT_2[17],AZT_2[18],AZT_2[19],AZT_2[20]
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR6...  020 AZB...  05O AZT...  07O AR2...  08O EDW...  09O FMP...  10O PO3...  11O FT5...  12O FM0...  13O ZZPARM 14O AR5...  15O FM1...  16O FT3...  17O EEE...  18OSAR1...  19O AR3...  20O SM4...  21O ASW...  22O EF3...  23O EF4...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0524 IF EC$[2](1066,1)<>"Y" THEN GOTO 9900
0525 GOSUB SET_READONLY
0550 FIND (Z[13],KEY=X3$(9,3)+"XMLOUT",DOM=*NEXT)XMLOUT$; IF EC$[2](1,15)=XMLOUT$(10,15) THEN AUTH_BUYER=1 ! SSP282448, if in XMLOUT mode then buyer authorized to read other data as needed
0560 NMASK$="-#####0.00" ! 282961 - Change format mask for "numeric" total tags to exclude commas
0600 REM "Build search strings
0910 CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$
1000 REM "Process DATA array
1005 DATA_TAGS$="001<template>002<display_invoice>003<session_id>004<send_data>005<url>006<3p_order_id>007<3p_sender_id>008<ext_lines_only>009<azb_key>"
1006 DISPLAY_INVOICE$=""
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 DISPLAY_INVOICE$=PAD(VALUE$,8); GOTO 1090; REM "display_invoice
1023 SESSION_ID$=VALUE$; GOTO 1090; REM "Get session id
1024 SEND_DATA=0; IF STP(VALUE$,2)="Y" THEN SEND_DATA=1 END_IF ; GOTO 1090 ! WO233141, send_data
1025 URL$=STP(VALUE$); GOTO 1090 ! WO233141, url
1026 ORDER_ID_3P$=VALUE$; GOTO 1090 ! WO233141, 3p_order_id
1027 SENDER_ID_3P$=VALUE$; GOTO 1090 ! WO233141, 3p_sender_id
1028 EXT_LINES_ONLY=0; IF STP(VALUE$,2)="Y" THEN EXT_LINES_ONLY=1 END_IF ; GOTO 1090 ! WO233141, ext_lines_only
1029 AZB_KEY$=VALUE$; GOTO 1090 ! WO233141, azb_key, will be used to lookup AZB record
1090 NEXT I
1100 REM "Read in the invoice in DISPLAY_INVOICE$
1101 VERSION$="282961.20160303",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1105 GOSUB 3200
1110 IF STP(AR6$,3)="" AND STP(AZB$,3)>"" THEN IF (EC$[2](51,10)=AZB$(18,10)) OR AUTH_BUYER THEN DIM AR6$(181),AR6[14]; FIND (Z[1],KEY=AZB$(18,10)+DISPLAY_INVOICE$,DOM=1120)IOL=0310 ! SSP282448, if AR6 not found earlier, and either buyer's customer matches AZB customer or this is an authorized buyer, try with AZB customer code this time
1115 GOTO 1150
1120 TMPJ=ERR,TMPK=TCB(5); AR6ERR$="ERR: "+STR(TMPJ)+" AT: "+STR(TMPK); MX=FN%_LOG_MESSAGE("WARN","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|"+PGN+"|SEND_XML_FILE|"+FILE_TO_SEND$+"|INVOICE|"+MID(AZB$,18,10)+DISPLAY_INVOICE$+"|FILE|"+PTH(Z[1],ERR=*PROCEED)+"|"+AR6ERR$)
1150 ! 
1151 DIM AR1$(600); FIND (Z[18],KEY=AZB$(18,10),DOM=*NEXT)AR1$(1); READ (Z[18],KEY=AZB$(18,10),REC=AR1$) ! WO307482 get AR1 data using AZB cust code
1152 IF NOT(NUL(MID(AR1$,46,10))) THEN DIM AR1$(600); FIND (Z[18],KEY=AR1$(46,10),DOM=*NEXT)AR1$(1); READ (Z[18],KEY=AR1$(46,10),REC=AR1$) ! WO307482 get AR1 data using the Bill-to cust code if it is set
1199 ! 
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup invoice header tags
1507 LINE_TAGS$="001<ar6_cust_code>002<inv_num>003<inv_type>004<inv_date>005<billed_from_cust_code>006<cust_po>007<terms_code>008<split_terms>009<inv_due_date>010<disc_due_day>011<order_no>012<sper_code>013<sper_code_2>014<sper_code_3>015<sper_code_4>016<sper_code_5>017<apply_to_inv_num>018<audit_num>019<cust_category>020<stax_code>021<fy>022<acctpd>023<greatest_fy>024<greatest_acctpd>025<ship_date>026<shipped_via>027<summary_bill_ref>028<multi_stax>029<factory_job_num>030<inv_amt>031<inv_bal>032<disc_amt>033<cash_in_progress>034<orig_inv_amt>035<stax_billed>036<frt_billed>037<net_sale>038<linesstart>039<ordered_by>040<ship_to_name>041<loc_code>042<loc_addr_1>043<loc_addr_2>044<loc_city>045<loc_st>046<loc_zip_code>047<county>048<3p_order_id>049<timestamp_inv_date>050<display_invoice>051<azb_cust_code>052<azb_days_until_due>053<total_extended_amount_num>054<azb_state_taxable_amt_num>055<azb_stax_amt_num>056<total_special_lines_num>057<total_non_frt_special_lines_num>058<total_frt_special_lines_num>059<azb_freight_num>060<total_freight_num>061<azb_invoice_total_num>062<azb_county_taxable_amt_num>063<azb_local_taxable_amt_num>064<gen_ship_attn>065<3p_sender_id>066<order_no_azb>067<ship_date_azb>068<cust_po_azb>069<summary_bill_azb>070<recv_dept>071<order_date_azb>072<loc_desc>073<azb_stax_code>074<ec_source>075<3p_order_id_2>076<3p_other_1>077<3p_other_2>078<sper_name>079<tracking_num>080<cust_udf>081<inv_email_address>082<inv_delivery_option>"
1510 READ (100,END=1595)LINE$; GOSUB 7650
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4)
1525 T_IN=POS("."=TAG$); IF T_IN THEN TAG_PARM$=MID(TAG$,T_IN+1),TAG$=MID(TAG$,1,T_IN-1) ELSE TAG_PARM$=""
1527 LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 3300; GOTO 1515
1595 IF SEND_DATA THEN GOSUB SEND_XML_FILE ! WO233141
1995 GOTO 9900
3200 REM "Read in invoice header information
3205 INVOICELINES$=""
3208 DIM AR6$(181),AR6[14]; FIND (Z[1],KEY=EC$[2](51,10)+DISPLAY_INVOICE$,DOM=*NEXT)IOL=0310; INVOICE_KEY$=MID(AR6$,127,6)+DISPLAY_INVOICE$; GOTO 3210 ! WO233141, if AR6 is found, set INVOICE_KEY$ and go on to read AZB 
3209 IF AZB_KEY$<>"" THEN INVOICE_KEY$=AZB_KEY$; DIM AZB$(703),AZB[30]; GOTO 3211 ELSE GOTO 3240 ! WO233141, if we have AZB_KEY$ then set INVOICE_KEY$ and go on to read that particular record else leave because we can't read AZB/AZT. SSP251499, was GOTO 3214 changed to GOTO 3211
3210 DIM AZB$(703),AZB[30]; READ (Z[2],KEY=INVOICE_KEY$,DOM=*PROCEED)IOL=0320; INVOICE_KEY$=KEY(Z[2],END=3240); IF MID(AR6$,127,6)+DISPLAY_INVOICE$<>MID(INVOICE_KEY$,1,14) THEN GOTO 3240
3211 GOSUB BUILD_INVOICE_ARRAY ! SSP237103, need FRT_INSALE amount, and invoice lines array, some S types that are costed freight won't be displayed
3214 READ (Z[2],KEY=INVOICE_KEY$,ERR=3240)IOL=0320
3215 READ (Z[5],KEY=INVOICE_KEY$,DOM=*NEXT)
3220 TEMPKEY$=KEY(Z[5],END=3240); IF TEMPKEY$(1,LEN(INVOICE_KEY$))<>INVOICE_KEY$ THEN GOTO 3240 ELSE INVOICELINES$=INVOICELINES$+TEMPKEY$(18,3); READ (Z[5]); GOTO *SAME; REM "build list of total lines in invoice
3242 DIM AZB_AR5$(400); FIND (Z[14],KEY=AZB$(70,10),DOM=*NEXT)AZB_AR5$(1); READ (Z[14],KEY=AZB$(70,10),REC=AZB_AR5$) ! WO304078 get AR5 data for header stax code
3243 DIM FT3$(606); FIND (Z[16],KEY=AZB$(95,8),DOM=*NEXT)FT3$(1) ! WO307157, DBD-57, DBSPT-66930 Repeat Order Header
3244 DIM EEE$(572); FIND (Z[17],KEY=AZB$(95,8),DOM=*NEXT)EEE$(1) ! DBD-185-DBSPT-115417-SSP307358
3245 RETURN 
3300 REM "Display Invoice Header
3310 ON LINDEX GOTO 3388,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,3401,3402,3403,3404,3405,3388
3311 CALL "ZZDISP","AX",AR6$(1,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE$)+LINE2$; GOTO 3390; REM "cust_code SSP282448, change tag name to ar6_cust_code since cust_code is global tag
3312 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(11,8),1))+LINE2$; GOTO 3390; REM "inv_num
3313 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(19,1),1))+LINE2$; GOTO 3390; REM "inv_type
3314 CALL "ZZDISP","DX",AR6$(20,6),"",X3$,DATE1$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(DATE1$)+LINE2$; GOTO 3390; REM "inv_date
3315 CALL "ZZDISP","AX",AR6$(26,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE$)+LINE2$; GOTO 3390; REM "billed_from_cust_code ! SSP293521, was 27,10 but s/b 26,10
3316 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(36,15),1))+LINE2$; GOTO 3390; REM "cust_po
3317 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(51,2),1))+LINE2$; GOTO 3390; REM "terms_code
3318 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(53,1),1))+LINE2$; GOTO 3390; REM "split_terms
3319 CALL "ZZDISP","DX",AR6$(54,6),"",X3$,DATE1$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(DATE1$)+LINE2$; GOTO 3390; REM "inv_due_date
3320 CALL "ZZDISP","DX",AR6$(60,6),"",X3$,DATE1$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(DATE1$)+LINE2$; GOTO 3390; REM "disc_due_day
3321 CALL "ZZDISP","AX",AR6$(66,8),"O/P",X3$,ORDER_NO$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(ORDER_NO$)+LINE2$; GOTO 3390; REM "order_no
3322 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(74,4),1))+LINE2$; GOTO 3390; REM "sper_code
3323 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(78,4),1))+LINE2$; GOTO 3390; REM "sper_code_2
3324 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(82,4),1))+LINE2$; GOTO 3390; REM "sper_code_3
3325 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(86,4),1))+LINE2$; GOTO 3390; REM "sper_code_4
3326 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(90,4),1))+LINE2$; GOTO 3390; REM "sper_code_5
3327 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(94,8),1))+LINE2$; GOTO 3390; REM "apply_to_inv_num
3328 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(102,6),1))+LINE2$; GOTO 3390; REM "audit_num
3329 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(108,9),1))+LINE2$; GOTO 3390; REM "cust_category
3330 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(117,10),1))+LINE2$; GOTO 3390; REM "stax_code
3331 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(127,4),1))+LINE2$; GOTO 3390; REM "fy
3332 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(131,2),1))+LINE2$; GOTO 3390; REM "acctpd
3333 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(133,4),1))+LINE2$; GOTO 3390; REM "greatest_fy
3334 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(137,2),1))+LINE2$; GOTO 3390; REM "greatest_acctpd
3335 CALL "ZZDISP","DX",AR6$(139,6),"",X3$,DATE1$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(DATE1$)+LINE2$; GOTO 3390; REM "ship_date
3336 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(145,15),1))+LINE2$; GOTO 3390; REM "shipped_via
3337 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(160,8),1))+LINE2$; GOTO 3390; REM "summary_bill_ref
3338 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(168,1),1))+LINE2$; GOTO 3390; REM "multi_stax
3339 LINE$=LINE1$+FN%HTML_ESC$(STP(AR6$(169,12),1))+LINE2$; GOTO 3390; REM "factory_job_num
3340 LINE$=LINE1$+FN%HTML_ESC$(STR(AR6[2]:"-$###,###.00"))+LINE2$; GOTO 3390; REM "inv_amt
3341 LINE$=LINE1$+FN%HTML_ESC$(STR(AR6[3]:"-$###,###.00"))+LINE2$; GOTO 3390; REM "inv_bal
3342 LINE$=LINE1$+FN%HTML_ESC$(STR(AR6[4]:"-$###,###.00"))+LINE2$; GOTO 3390; REM "disc_amt
3343 LINE$=LINE1$+FN%HTML_ESC$(STR(AR6[5]:"-$###,###.00"))+LINE2$; GOTO 3390; REM "cash_in_progress
3344 LINE$=LINE1$+FN%HTML_ESC$(STR(AR6[6]:"-$###,###.00"))+LINE2$; GOTO 3390; REM "orig_inv_amt
3345 LINE$=LINE1$+FN%HTML_ESC$(STR(AR6[7]:"-$###,###.00"))+LINE2$; GOTO 3390; REM "stax_billed
3346 LINE$=LINE1$+FN%HTML_ESC$(STR(AR6[8]+FRT_INSALE:"-$###,###.00"))+LINE2$; GOTO 3390; REM "frt_billed. SSP237103, added FRT_INSALE
3347 LINE$=LINE1$+FN%HTML_ESC$(STR(AR6[9]:"-$###,###.00"))+LINE2$; GOTO 3390; REM "net_sale
3348 GOSUB 3500; LINE$=LINES_SECTION$; GOTO 3390; REM "linesstart
3349 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AZB$,439,20),1))+LINE2$; GOTO 3390; REM "ordered_by
3350 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AZB$,293,35),1))+LINE2$; GOTO 3390; REM "ship_to_name
3351 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AZB$,190,4),1))+LINE2$; GOTO 3390; REM "loc_code
3352 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AZB$,194,30),1))+LINE2$; GOTO 3390; REM "loc_addr_1
3353 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AZB$,224,30),1))+LINE2$; GOTO 3390; REM "loc_addr_2
3354 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AZB$,254,16),1))+LINE2$; GOTO 3390; REM "loc_city
3355 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AZB$,270,2),1))+LINE2$; GOTO 3390; REM "loc_st
3356 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AZB$,272,9),1))+LINE2$; GOTO 3390; REM "loc_zip_code
3357 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AZB$,281,12),1))+LINE2$; GOTO 3390; REM "county
3358 LINE$=LINE1$+FN%HTML_ESC$(ORDER_ID_3P$)+LINE2$; GOTO 3390 ! WO233141, 3p_order_id 
3359 TS_ID$="null"; TS_ID$=DTE(FN%GET_DATETIME(AZB$(89,6),.0001),*:"%Y-%Mz-%DzT%Hz:%mz:%sz")+STR((TCB(44)/3600+TCB(45))*-100:"+00:00"); LINE$=LINE1$+FN%HTML_ESC$(TS_ID$)+LINE2$; GOTO 3390 ! WO233141, timestamp_inv_date
3360 LINE$=LINE1$+FN%HTML_ESC$(STP(DISPLAY_INVOICE$,1))+LINE2$; GOTO 3390 ! WO233141, display_invoice
3361 CALL "ZZDISP","AX",AZB$(18,10),"A/R",X3$,AZB_CUST_CODE$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(AZB_CUST_CODE$)+LINE2$; GOTO 3390 ! WO233141, azb_cust_code
3362 GOSUB TERMS_CODE; LINE$=LINE1$+FN%HTML_ESC$(DAYS_UNTIL_DUE$)+LINE2$; GOTO 3390 ! WO233141, azb_days_until_due
3363 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(TOTAL_EXTENDED_AMOUNT:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, total_extended_amount_num, SSP234782, fix STP
3364 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(AZB[3]:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, azb_state_taxable_amt_num, SSP234782, fix STP
3365 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(AZB[4]+AZB[6]+AZB[8]:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, azb_stax_amt_num, SSP234782 fix STP
3366 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(TOTAL_SPECIAL_LINES:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, total_special_lines_num, SSP234782, fix STP
3367 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(TOTAL_NON_FRT_SPECIAL_LINES:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, total_non_frt_special_lines_num, SSP234782, fix STP
3368 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(TOTAL_FRT_SPECIAL_LINES:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, total_frt_special_lines_num, SSP234782, fix STP
3369 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(AZB[2]:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, azb_freight_num, fix STP
3370 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(AZB[2]+TOTAL_FRT_SPECIAL_LINES:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, total_freight_num, SSP234782, fix STP
3371 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(AZB[9]:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, azb_invoice_total_num, SSP234782, fix STP
3372 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(AZB[5]:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, azb_county_taxable_amt_num, SSP234782, fix STP
3373 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(AZB[7]:NMASK$),2))+LINE2$; GOTO 3390 ! WO233141, azb_local_taxable_amt_num, SSP234782, fix STP
3374 GOSUB GEN_SHIPPING; LINE$=LINE1$+FN%HTML_ESC$(STP(PO3$(16,30),2))+LINE2$; GOTO 3390 ! WO233141, gen_ship_attn
3375 LINE$=LINE1$+FN%HTML_ESC$(SENDER_ID_3P$)+LINE2$; GOTO 3390 ! 3p_sender_id SSP234945
3376 CALL "ZZDISP","AX",AZB$(95,8),"O/P",X3$,ORDER_NO_AZB$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(ORDER_NO_AZB$)+LINE2$; GOTO 3390 ! WO264379, order_no_azb
3377 CALL "ZZDISP","DX",AZB$(183,6),"",X3$,DATE1_AZB$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(DATE1_AZB$)+LINE2$; GOTO 3390 ! WO264379, ship_date_azb
3378 LINE$=LINE1$+FN%HTML_ESC$(STP(AZB$(103,15),1))+LINE2$; GOTO 3390 ! WO264379, cust_po_azb
3379 SB_AZB$=AZB$(347,1); IF SB_AZB$=DIM(1) THEN SB_AZB$="N" END_IF ; LINE$=LINE1$+FN%HTML_ESC$(SB_AZB$)+LINE2$; GOTO 3390 ! SSP282448, summary_bill_azb
3380 GOSUB READ_FM0C; LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(382,20),2))+LINE2$; GOTO 3390 ! SSP282961, recv_dept
3381 CALL "ZZDISP","DX",AZB$(433,6),"",X3$,DATE2_AZB$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(DATE2_AZB$)+LINE2$; GOTO 3390 ! SSP291079, order_date_azb
3382 GOSUB READ_FM0C; LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(16,35),2))+LINE2$; GOTO 3390 ! SSP291079, loc_desc
3383 LINE$=LINE1$+FN%HTML_ESC$(STP(FN%ZZDISP$(AZB$(70,10),"AR5"),1))+LINE2$; GOTO 3390 ! WO304078, azb_stax_code
3384 LINE$=LINE1$+FN%HTML_ESC$(STP(FT3$(387,10),1))+LINE2$; GOTO 3390 ! WO307157, ec_source
3385 LINE$=LINE1$+FN%HTML_ESC$(STP(EEE$(269,150),1))+LINE2$; GOTO 3390 ! DBD-185-DBSPT-115417-SSP307358, 3p_order_id_2
3386 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(EEE$,209,20),1))+LINE2$; GOTO 3390 ! 307479-IMPL-735, 3p_other_1
3387 LINE$=LINE1$+FN%HTML_ESC$(STP(MID(EEE$,229,20),1))+LINE2$; GOTO 3390 ! 307479-IMPL-735, 3p_other_2
3388 IF POS("azb_ar5_"=TAG$)=1 THEN IF STP(AZB_AR5$,3)="" THEN LINE$=LINE1$+LINE2$; GOTO 3390 ELSE GOSUB PROCESS_AZB_AR5_TAG; LINE$=LINE1$+FN%HTML_ESC$(STP(AZB_AR5_TAG_VAL$,2))+LINE2$; GOTO 3390 END_IF ELSE IF POS("ar1_"=TAG$)=1 THEN IF STP(AR1$,3)="" THEN LINE$=LINE1$+LINE2$; GOTO 3390 ELSE GOSUB PROCESS_AR1_TAG; LINE$=LINE1$+FN%HTML_ESC$(STP(AR1_TAG_VAL$,2))+LINE2$; GOTO 3390 ! WO304078, WO307482
3389 LINE$=LINE1$+LINE2$; GOTO 3390; REM "tag not found, replace with '?' WO304078 remove "?"
3395 RETURN 
3400 ! Continue header tags here
3401 LOOKUP_SPERCODE$=MID(AR6$,74,4); GOSUB PROCESS_AR3; LINE$=LINE1$+FN%HTML_ESC$(STP(MID(AR3$,5,35),1))+LINE2$; GOTO 3390 ! WO307482, sper_name
3402 TRACK_ORD$=PAD(AZB$(95,8),9),TRACK_LINE$=""; GOSUB GET_TRACKING_NUM; LINE$=LINE1$+FN%HTML_ESC$(STP(TRACK_NUM$,1))+LINE2$; GOTO 3390 ! WO307482, tracking_num
3403 UDF_CUST$=AR6$(1,10); GOSUB GET_CUST_UDF; LINE$=LINE1$+FN%HTML_ESC$(STP(MID(UDF$,15,75),1))+LINE2$; GOTO 3390 ! WO307482, cust_udf
3404 GOSUB GET_EMAILADDR; LINE$=LINE1$+FN%HTML_ESC$(INV_EMAILADDR$)+LINE2$; GOTO 3390 ! WO307482, inv_email_address
3405 GOSUB GET_JOBCARD; LINE$=LINE1$+FN%HTML_ESC$(INV_JOBCARD$)+LINE2$; GOTO 3390 ! WO307482, inv_delivery_option
3445 GOTO 3390
3449 ! 
3500 REM "Display Invoice Lines, uses AZT
3502 LINES_SECTION$="",LS_TAGS$="001<line_num>002<line_type>003<costed_freight>004<product_code>005<print_on_invoice>006<description>007<order_line_num>008<unit_of_measure>009<taxable>010<item_cust_code>011<item_cust_code_formatted>012<item_code>013<sales_distrb_code>014<commission_code>015<invt_loc_code>016<left_right>017<top_bottom>018<num_of_plys>019<order_type>020<num_ctns_or_lines>021<cost_code>022<sales_tax_code>023<special_ship_point>024<line_created>025<last_comm_brack>026<comm_brack>027<qty_ordered>028<qty_shipped>029<unit_price>030<unit_cost>031<extended_amount>032<total_cost>033<qty_per_unit>034<um_formatted>035<qty_shipped_units>036<unit_of_measure_two>037<unit_price_num>038<ext_line_number>039<extended_amount_num>040<loc_code>041<cust_po>042<cust_po_azb>043<infoshippedstart>044<infobostart>045<azt_stax_amt_num>046<azt_stax_code>047<cic_code>048<rc_number>049<ext_field_1>050<ext_field_2>051<tracking_num>"
3503 REM "Setup LS_TEMPLATE$
3504 LS_TEMPLATE$=LINE$; IF POS("?tf?linesend?"=LINE$)>0 THEN GOTO 3506 ! SSP190505, if we already have linesend in LINE$, don't read from the template, we already have this whole section (include file).
3505 READ (100,END=3506)LINE$; GOSUB 7650; LS_TEMPLATE$=LS_TEMPLATE$+LINE$+EOL$; IF POS("?tf?linesend?"=LINE$)=0 THEN GOTO 3505
3508 IF INVOICELINES$="" THEN GOTO 3595
3509 FOR GETNEXTLINE=0 TO LEN(INVOICELINES$)/3-1; CURRLINE$=INVOICELINES$(GETNEXTLINE*3+1,3)
3510 DIM AZT$(290),AZT[48]; READ (Z[5],KEY=INVOICE_KEY$+CURRLINE$,DOM=3511)IOL=0350; IF MID(AZT$,26,1)<>"Y" THEN GOTO NEXT_AZT ! SSP291079, fix numeric dim
3511 DIM AZT_AR5$(400); FIND (Z[14],KEY=AZT$(145,10),DOM=*NEXT)AZT_AR5$(1); READ (Z[14],KEY=AZT$(145,10),REC=AZT_AR5$) ! WO304078 get AR5 data for line stax code
3512 IF AZT[1]>0 THEN SHIPPED_QTY_STATUS$="Shipped" ELSE IF AZT[1]=0 THEN SHIPPED_QTY_STATUS$="Backordered" ! WO264379, determine shipped quantity status
3513 IF AZT$(21,1)="S" THEN GOSUB SPECIAL_CHARGES ! WO233141
3514 IF EXT_LINES_ONLY THEN GOSUB EXT_LINE_NUMBER; IF EXT_LINE_NUMBER$="" THEN GOTO NEXT_AZT END_IF ELSE GOSUB EXT_LINE_NUMBER ! WO233141, only want lines that have external line number in EDW. WO307157 always get EDW data for output of other fields for this line
3515 DIM FM1$(449),FM1[31]; IF POS(AZT$(21,1)="MS")=0 THEN TOTAL_EXTENDED_AMOUNT+=AZT[4]; FIND (Z[15],KEY=AZT$(75,20),DOM=*NEXT)IOL=0360 ! WO233141, calculate total extended amount of lines if not M or S types WO304078 add find of FM1 record first use for cic_code
3516 INVOICE_LINE_NUM=NUM(AZT$(18,3),ERR=*NEXT); IF INVOICE$[INVOICE_LINE_NUM,4]<>"Y" THEN GOTO NEXT_AZT ! SSP237103, this may be a costed freight line that shouldn't display
3517 LS$=LS_TEMPLATE$,ACTIVETEMPLATE$=LS_TEMPLATE$; REM "159109 WO264379
3518 LS_INDEX=POS("?tf?"=LS$); IF LS_INDEX=0 THEN GOTO 3591
3519 LSEND_INDEX=POS("?"=LS$(LS_INDEX+4)),LS_TAG$=LS$(LS_INDEX+4,LSEND_INDEX-1),LS1$=LS$(1,LS_INDEX-1),LS2$=LS$(LS_INDEX+LSEND_INDEX+4),LS_POS=POS("<"+LS_TAG$+">"=LS_TAGS$); IF LS_POS=0 THEN LS$=LS1$+LS2$,LS_INDEX=0 ELSE LS_INDEX=NUM(LS_TAGS$(LS_POS-3,3))
3520 ON LS_INDEX GOTO 3588,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3588
3521 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(18,3),2))+LS2$; GOTO 3590; REM "line_num
3522 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(21,1),2))+LS2$; GOTO 3590; REM "line_type
3523 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(22,1),2))+LS2$; GOTO 3590; REM "costed_freight
3524 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(23,3),2))+LS2$; GOTO 3590; REM "product_code
3525 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(26,1),2))+LS2$; GOTO 3590; REM "print_on_invoice
3526 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(27,40),2))+LS2$; GOTO 3590; REM "description
3527 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(67,3),2))+LS2$; GOTO 3590; REM "order_line_num
3528 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STP(AZT$(70,4),2))+LS2$; END_IF ; GOTO 3590; REM "unit_of_measure
3529 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(74,1),2))+LS2$; GOTO 3590; REM "taxable
3530 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(75,10),2))+LS2$; GOTO 3590; REM "item_cust_code 
3531 CALL "ZZDISP","AX",AZT$(75,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$; LS$=LS1$+FN%HTML_ESC$(CUST_CODE$)+LS2$; GOTO 3590; REM "item_cust_code_formatted SSP282448
3532 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(85,10),2))+LS2$; GOTO 3590; REM "item_code
3533 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(95,9),2))+LS2$; GOTO 3590; REM "sales_distrb_code
3534 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(104,5),2))+LS2$; GOTO 3590; REM "commission_code
3535 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(109,4),2))+LS2$; GOTO 3590; REM "invt_loc_code
3536 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(113,8),2))+LS2$; GOTO 3590; REM "left_right
3537 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(121,8),2))+LS2$; GOTO 3590; REM "top_bottom
3538 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(129,2),2))+LS2$; GOTO 3590; REM "num_of_plys
3539 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(131,1),2))+LS2$; GOTO 3590; REM "order_type
3540 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(132,4),2))+LS2$; GOTO 3590; REM "num_ctns_or_lines
3541 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(136,9),2))+LS2$; GOTO 3590; REM "cost_code
3542 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(145,10),2))+LS2$; GOTO 3590; REM "sales_tax_code
3543 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(155,1),2))+LS2$; GOTO 3590; REM "special_ship_point
3544 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(156,1),2))+LS2$; GOTO 3590; REM "line_created
3545 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(157,1),2))+LS2$; GOTO 3590; REM "last_comm_brack
3546 LS$=LS1$+FN%HTML_ESC$(STP(AZT$(161,5),2))+LS2$; GOTO 3590; REM "comm_brack
3547 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STR(AZT[0]:"-###,##0"))+LS2$; END_IF ; GOTO 3590; REM "qty_ordered
3548 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STR(AZT[1]:"-###,##0"))+LS2$; END_IF ; GOTO 3590; REM "qty_shipped
3549 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STR(AZT[2]:"-$###,###.00"))+LS2$; END_IF ; GOTO 3590; REM "unit_price
3550 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STR(AZT[3]:"-$###,###.00"))+LS2$; END_IF ; GOTO 3590; REM "unit_cost
3551 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STR(AZT[4]:"-$###,###.00"))+LS2$; END_IF ; GOTO 3590; REM "extended_amount
3552 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STR(AZT[5]:"-$###,###.00"))+LS2$; END_IF ; GOTO 3590; REM "total_cost
3553 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STR(AZT[6]))+LS2$; END_IF ; GOTO 3590; REM "qty_per_unit
3554 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STP(AZT$(70,4),2)+"/"+STR(AZT[6]))+LS2$; END_IF ; GOTO 3590; REM "um_formatted
3555 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE GOSUB SELL_DIVISOR; LS$=LS1$+FN%HTML_ESC$(STP(STR(AZT[1]/SELL_DIVISOR:"-###,##0"),2))+LS2$; END_IF ; GOTO 3590 ! WO233141, qty_shipped_units, SSP234782, add STP
3556 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STP(AZT$(70,2),2))+LS2$; END_IF ; GOTO 3590 ! WO233141, unit_of_measure_two
3557 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STP(STR(AZT[2]:NMASK$),2))+LS2$; END_IF ; GOTO 3590 ! WO233141, unit_price_num, no $, SSP234782, add STP
3558 GOSUB EXT_LINE_NUMBER; LS$=LS1$+FN%HTML_ESC$(EXT_LINE_NUMBER$)+LS2$; GOTO 3590 ! 233141, ext_line_number
3559 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STP(STR(AZT[4]:NMASK$),2))+LS2$; END_IF ; GOTO 3590 ! WO233141, extended_amount_num, no $, SSP234782, add STP
3560 LS$=LS1$+FN%HTML_ESC$(STP(MID(AZB$,190,4),1))+LS2$; GOTO 3590 ! WO263088, loc_code
3561 LS$=LS1$+FN%HTML_ESC$(STP(AR6$(36,15),1))+LS2$; GOTO 3590 ! WO263088, cust_po
3562 LS$=LS1$+FN%HTML_ESC$(STP(AZB$(103,15),1))+LS2$; GOTO 3590 ! WO264379, cust_po_azb
3563 GOSUB 4300; LS$=LS1$+INFOSHIPPED$+LS2$; GOTO 3590 ! WO264379, infoshippedstart
3564 GOSUB 4400; LS$=LS1$+INFOBO$+LS2$; GOTO 3590 ! WO264379, infobostart
3565 IF AZT$(21,1)="M" THEN LS$=LS1$+LS2$; ELSE LS$=LS1$+FN%HTML_ESC$(STP(STR(AZT[30]:NMASK$),2))+LS2$; END_IF ; GOTO 3590 ! SSP291079, azt_stax_amt_num
3566 LS$=LS1$+FN%HTML_ESC$(STP(FN%ZZDISP$(AZT$(145,10),"AR5"),1))+LS2$; GOTO 3590 ! WO304078, azt_stax_code
3567 LS$=LS1$+FN%HTML_ESC$(STP(FM1$(350,20),1))+LS2$; GOTO 3590 ! WO304078, cic_code
3568 LS$=LS1$+FN%HTML_ESC$(STP(EDW$(12,20),1))+LS2$; GOTO 3590 ! WO307157 rc_number
3569 LS$=LS1$+FN%HTML_ESC$(STP(EDW$(38,20),1))+LS2$; GOTO 3590 ! WO307157 ext_field_1
3570 LS$=LS1$+FN%HTML_ESC$(STP(EDW$(58,20),1))+LS2$; GOTO 3590 ! WO307157 ext_field_2
3571 TRACK_ORD$=PAD(AZB$(95,8),9),TRACK_LINE$=MID(AZT$,67,3); GOSUB GET_TRACKING_NUM; LS$=LS1$+FN%HTML_ESC$(STP(TRACK_NUM$,1))+LS2$; GOTO 3590 ! WO307482, tracking_num
3588 IF POS("azt_ar5_"=LS_TAG$)=1 THEN IF STP(AZT_AR5$,3)="" THEN LS$=LS1$+LS2$; GOTO 3590 ELSE GOSUB PROCESS_AZT_AR5_TAG; LS$=LS1$+FN%HTML_ESC$(STP(AZT_AR5_TAG_VAL$,2))+LS2$; GOTO 3590 ! WO304078
3589 LS$=LS1$+LS2$; GOTO 3590; REM "not found replace with a '?'. WO233141, remove "?", problem with XML output when ? is included.
3590 GOTO 3518
3591 LINES_SECTION$=LINES_SECTION$+LS$; REM "add to lines section, then get next line if any
3592 NEXT_AZT:
3593 NEXT GETNEXTLINE
3595 RETURN 
4300 ! WO264379, infoshippedstart - strip section into INFOSHIPPED_TEMPLATE$
4301 ! Copied from EC3PC0 Output entries, using INFOSHIPPED_TEMPLATE$ to pass information
4304 INFOSHIPPED_TEMPLATE$=ACTIVETEMPLATE$,TMPENTRY$=ACTIVETEMPLATE$
4310 STARTXX=POS("?tf?infoshippedstart?"=INFOSHIPPED_TEMPLATE$); IF STARTXX<>0 AND LEN(INFOSHIPPED_TEMPLATE$)<>STARTXX+21 THEN INFOSHIPPED_TEMPLATE$=INFOSHIPPED_TEMPLATE$(STARTXX+21)
4311 ENDXX=POS("?tf?infoshippedend?"=INFOSHIPPED_TEMPLATE$); IF ENDXX<>0 THEN INFOSHIPPED_TEMPLATE$=INFOSHIPPED_TEMPLATE$(1,ENDXX-1)
4312 REM "strip out the infoshippedstart/end section from LS2$ that is currently being processed
4315 ENDXX=POS("?tf?infoshippedend?"=LS2$); IF ENDXX=0 THEN GOTO 4316 ELSE LS2$=LS2$(ENDXX+19)
4316 IF LEN(LS1$)<=2 THEN GOTO 4317 END_IF ; IF LS1$(LEN(LS1$)-1,2)="<!" THEN LS1$=LS1$(1,LEN(LS1$)-2); REM "strip out page control tag <! that is left over with the processing of it as a simple data tag
4317 REM "PRINT 'CS',"LS1: ",'LF',@(0),LS1$,; INPUT *
4319 IF SHIPPED_QTY_STATUS$<>"Shipped" THEN INFOSHIPPED_TEMPLATE$=""; REM "if not Shipped then return nothing
4320 INFOSHIPPEDENTRY$=INFOSHIPPED_TEMPLATE$
4322 REM "GOSUB 4200
4332 INFOSHIPPED$=INFOSHIPPEDENTRY$
4349 RETURN 
4400 ! WO264379 infobostart - strip section into INFOBO_TEMPLATE$
4401 ! Copied from EC3PC0 Output entries, using INFOBO_TEMPLATE$ to pass information
4404 INFOBO_TEMPLATE$=ACTIVETEMPLATE$,TMPENTRY$=ACTIVETEMPLATE$
4410 STARTXX=POS("?tf?infobostart?"=INFOBO_TEMPLATE$); IF STARTXX<>0 AND LEN(INFOBO_TEMPLATE$)<>STARTXX+16 THEN INFOBO_TEMPLATE$=INFOBO_TEMPLATE$(STARTXX+16)
4411 ENDXX=POS("?tf?infoboend?"=INFOBO_TEMPLATE$); IF ENDXX<>0 THEN INFOBO_TEMPLATE$=INFOBO_TEMPLATE$(1,ENDXX-1)
4412 REM "strip out the infobostart/end section from LS2$ that is currently being processed
4415 ENDXX=POS("?tf?infoboend?"=LS2$); IF ENDXX=0 THEN GOTO 4416 ELSE LS2$=LS2$(ENDXX+14)
4416 IF LEN(LS1$)<=2 THEN GOTO 4417 END_IF ; IF LS1$(LEN(LS1$)-1,2)="<!" THEN LS1$=LS1$(1,LEN(LS1$)-2); REM "strip out page control tag <! that is left over with the processing of it as a simple data tag
4417 REM "PRINT 'CS',"LS1: ",'LF',@(0),LS1$,; INPUT *
4419 IF SHIPPED_QTY_STATUS$<>"Backordered" THEN INFOBO_TEMPLATE$=""; REM "if not Backordered then return nothing
4420 INFOBOENTRY$=INFOBO_TEMPLATE$
4422 REM "GOSUB 4200
4432 INFOBO$=INFOBOENTRY$
4449 RETURN 
4499 ! 
4500 PROCESS_AR3:! WO307482
4510 DIM AR3$(320); FIND (Z[19],KEY=LOOKUP_SPERCODE$,DOM=*NEXT)AR3$
4545 RETURN 
4549 ! 
4550 GET_TRACKING_NUM:
4560 FOUND_TRACK=0,TRACK_NUM$=""; CALL "UPDSM4;GET_TRACKING_NUM",SM4,TRACK_ORD$,TRACK_LINE$,FOUND_TRACK,TRACK_NUM$
4595 RETURN 
4599 ! 
4600 GET_CUST_UDF:! WO307482
4610 DIM UDF$(130); FIND (Z[21],KEY=PAD(UDF_CUST$,10)+PAD(TAG_PARM$,4),DOM=*NEXT)UDF$
4645 RETURN 
4649 ! 
4650 GET_EMAILADDR:
4655 INV_EMAILADDR$=""
4660 GOSUB GET_JOBCARD
4665 DIM EF4$(500); FIND (Z[23],KEY=PAD("810",10)+INV_JOBCARD$+"01",DOM=*NEXT)EF4$
4670 IF MID(EF4$,21,1)="Y" AND NOT(NUL(MID(EF4$,42,10))) THEN {! Emailing enabled and at least one destination email type selected
4672 EF3_KEY$=""; DIM EF3$(422)
4675 IF POS("C"=MID(EF4$,42,10))>0 THEN EF3_KEY$="C"+PAD(MID(AR6$,1,10),20)
4680 IF POS("T"=MID(EF4$,42,10))>0 THEN EF3_KEY$="T"+PAD(PAD(MID(AR6$,1,10),10)+PAD(MID(AZB$,190,4),4),20)
4685 FIND (Z[22],KEY=EF3_KEY$,DOM=*NEXT)EF3$
4690  }
4693 INV_EMAILADDR$=STP(MID(EF3$,22,200),2)
4695 RETURN 
4699 ! 
4700 GET_JOBCARD:
4705 INV_JOBCARD$="001"
4710 JOB_CARD$=PAD(AR1$(456,15),3),JOB_CARD_SB_NP$=PAD(AR1$(506,15),3)
4715 IF NOT(NUL(JOB_CARD$)) AND JOB_CARD$<>"001" THEN INV_JOBCARD$=JOB_CARD$ ! Does customer have an Invoice delivery options override?
4720 IF MID(AZB$,347,1)="Y" AND MID(AZB$,346,1)<>"R" THEN IF NOT(NUL(JOB_CARD_SB_NP$)) THEN INV_JOBCARD$=JOB_CARD_SB_NP$ ! If summary bill inv and not an "R" type, and Summary Bill No-Print override is defined, use that instead
4745 RETURN 
4749 ! 
6700 PROCESS_AZB_AR5_TAG:! WO304078
6705 TAG$=MID(TAG$,1); TAG$=STP(TAG$,1,"?")
6706 AZB_AR5_TAG_VAL$="",AZB_AR5_TAG_VAL_SET=0
6710 AZB_AR5_TAG_VAL$=EVS(SUB(UCS(TAG$),"AZB_AR5_","AZB_AR5.")+"$"); IF LEN(AZB_AR5_TAG_VAL$)=0 THEN AZB_AR5_TAG_VAL$=STR(EVN(SUB(UCS(TAG$),"AZB_AR5_","AZB_AR5.")))
6745 RETURN 
6749 ! 
6750 PROCESS_AZT_AR5_TAG:! WO304078
6755 LS_TAG$=MID(LS_TAG$,1); LS_TAG$=STP(LS_TAG$,1,"?")
6756 AZT_AR5_TAG_VAL$="",AZT_AR5_TAG_VAL_SET=0
6760 AZT_AR5_TAG_VAL$=EVS(SUB(UCS(LS_TAG$),"AZT_AR5_","AZT_AR5.")+"$"); IF LEN(AZT_AR5_TAG_VAL$)=0 THEN AZT_AR5_TAG_VAL$=STR(EVN(SUB(UCS(LS_TAG$),"AZT_AR5_","AZT_AR5.")))
6795 RETURN 
6799 ! 
6800 PROCESS_AR1_TAG:! WO307482
6805 TAG$=MID(TAG$,1); TAG$=STP(TAG$,1,"?")
6806 AR1_TAG_VAL$="",AR1_TAG_VAL_SET=0
6810 AR1_TAG_VAL$=EVS(SUB(UCS(TAG$),"AR1_","AR1.")+"$"); IF LEN(AR1_TAG_VAL$)=0 THEN AR1_TAG_VAL$=STR(EVN(SUB(UCS(TAG$),"AR1_","AR1.")))
6845 RETURN 
6849 ! 
7000 TERMS_CODE:! WO233141
7005 DAYS_UNTIL_DUE$=""
7010 DIM AR2$(100); READ (Z[7],KEY=AZB$(68,2),DOM=*RETURN)AR2$(1)
7015 DAYS_UNTIL_DUE$=STP(STR(NUM(AR2$(34,3),ERR=*RETURN):"###"),2)
7045 RETURN 
7049 ! 
7050 SELL_DIVISOR:! WO233141
7055 SELL_DIVISOR=1
7060 UOM$=AZT$(70,4); DIM UM$(28),UM[1]; READ (Z[13],KEY="U/M"+UOM$,DOM=*NEXT)UM$(1),UM[0],UM[1]
7065 QTY_PER_UM=AZT[6]
7070 IF UM$(20,1)<>"Y" THEN SELL_DIVISOR=QTY_PER_UM ELSE SELL_DIVISOR=UM[1]
7075 IF SELL_DIVISOR=0 THEN SELL_DIVISOR=1
7095 RETURN 
7099 ! 
7100 EXT_LINE_NUMBER:! WO233141
7105 EXT_LINE_NUMBER$=""
7110 DIM EDW$(200); READ (Z[8],KEY=AZB$(95,8)+AZT$(67,3),DOM=*NEXT)EDW$(1)
7115 EXT_LINE_NUMBER$=STP(EDW$(35,3),2)
7145 RETURN 
7149 ! 
7150 SPECIAL_CHARGES:! WO233141
7153 IF AZT$(85,10)=DIM(10) AND AZT$(67,3)="FRT" THEN TOTAL_FRT_SPECIAL_LINES+=AZT[4],TOTAL_SPECIAL_LINES+=AZT[4]; RETURN ! SSP295559 special case
7155 DIM SPECIAL$(72); READ (Z[9],KEY="X"+AZT$(85,10),DOM=*RETURN)SPECIAL$(1)
7160 TOTAL_SPECIAL_LINES+=AZT[4]
7165 IF SPECIAL$(60,1)<>"Y" THEN TOTAL_NON_FRT_SPECIAL_LINES+=AZT[4]
7170 IF SPECIAL$(60,1)="Y" THEN TOTAL_FRT_SPECIAL_LINES+=AZT[4]
7195 RETURN 
7199 ! 
7200 GEN_SHIPPING:! WO233141
7205 DIM PO3$(428)
7210 READ (Z[10],KEY=AZB$(95,8)+DIM(5),DOM=*NEXT)PO3$(1); GOTO *RETURN
7215 READ (Z[11],KEY=AZB$(95,8)+DIM(5),DOM=*RETURN)PO3$(1) ! try repeat order shipping file if not found in PO3
7245 RETURN 
7249 ! 
7250 READ_FM0C:! SSP282961
7255 DIM FM0$(618)
7260 READ (Z[12],KEY="C"+AZB$(18,10)+AZB$(190,4),DOM=*NEXT)FM0$(1)
7295 RETURN 
7299 ! 
7300 SEND_XML_FILE:! WO233141
7310 FILE_TO_SEND$=PTH(OUTPUT); CLOSE (OUTPUT)
7315 COMMAND_CODE$=PAD("INVOICE_"+SENDER_ID_3P$,20)
7320 CALL "ZZ2CMD",ERR=*NEXT,X3$,X4$,"{"+COMMAND_CODE$+"}",URL$+SEP+FILE_TO_SEND$+SEP+"Content-type=text/xml","NR",RET_CODE,RESP$
7330 MX=FN%_LOG_MESSAGE("MESG","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|"+PGN+"|SEND_XML_FILE|"+FILE_TO_SEND$+"|RESPCODE|"+STR(RET_CODE)+"|RESPONSE|"+RESP$)
7340 RETURN 
7349 ! 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7650 REM "Send LINE$ to EC3BYB for generic fields processing
7660 CALL "EC3BYB",ERR=7661,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100
7695 RETURN 
7700 BUILD_INVOICE_ARRAY:! SSP237103, need to know which lines are classified as freight and shouldn't be displayed, amounts to be added to freight bucket
7705 ! logic is very similar to 7000's of EC3WS1 which displays invoice info from GRB/GRT files for credit card invoices
7710 INVHDR=Z(2),INVLINE=Z(5); REM "set invoice header and line channels
7715 INVOICE_LINE_COUNT=0,FRT_INSALE=0; DIM INVOICE$[200,10]; REM "200 lines  (index 4) 1=order line #  2=ART string var$  3=extended sell amt  4=display/print line 5=qty per um 6=order qty  7=shipped qty   8=unit price  9=qty ordered eaches  10=qty shipped eaches
7720 DIM AZB_2(30),AZB_2$(703),AZT_2$(290),AZT_2(20); FIND (INVHDR,KEY=INVOICE_KEY$,DOM=*RETURN)IOL=0470
7725 READ (INVLINE,KEY=INVOICE_KEY$,DOM=*NEXT)
7730 AZT_2_KEY$=KEY(INVLINE,END=*RETURN); READ (INVLINE,KEY=AZT_2_KEY$)IOL=0490; IF AZT_2_KEY$(1,LEN(INVOICE_KEY$))<>INVOICE_KEY$ THEN GOTO *RETURN
7735 INVOICE_LINE_COUNT=INVOICE_LINE_COUNT+1,INVOICE_LINE_NUM=NUM(AZT_2_KEY$(18,3),ERR=7730)
7740 INVOICE$[INVOICE_LINE_NUM,1]=AZT_2$(18,3),INVOICE$[INVOICE_LINE_NUM,2]=AZT_2$,INVOICE$[INVOICE_LINE_NUM,3]=STR(AZT_2(4)),INVOICE$[INVOICE_LINE_NUM,4]=AZT_2$(26,1),INVOICE$[INVOICE_LINE_NUM,5]=STR(AZT_2(6)),INVOICE$[INVOICE_LINE_NUM,8]=STR(AZT_2(2)),INVOICE$[INVOICE_LINE_NUM,9]=STR(AZT_2(0)),INVOICE$[INVOICE_LINE_NUM,10]=STR(AZT_2(1)); REM "assign invoice line values
7745 QTY_PER=AZT_2(6); IF QTY_PER=0 OR AZT_2$(70,4)="M   " THEN QTY_PER=1
7750 INVOICE$[INVOICE_LINE_NUM,6]=STR(AZT_2(0)/QTY_PER),INVOICE$[INVOICE_LINE_NUM,7]=STR(AZT_2(1)/QTY_PER)
7755 IF AZT_2$(21,1)<>"S" THEN GOTO 7730; REM "if not special charge then get next line
7760 REM "special charge line 
7762 IF AZT_2$(67,3)="FRT" THEN INVOICE$[INVOICE_LINE_NUM,4]="N",FRT_INSALE=FRT_INSALE+AZT_2(4); GOTO 7730 ! 262522 - Add freight markup to FRT_INSALE amount and set line to not display
7765 DIM FMPX$(100),FMPX(2); FIND (Z(9),KEY="X"+AZT_2$(85,10),DOM=7775)IOL=0392
7770 IF FMPX$(60,1)="Y" AND MID(FMPX$,73,1)<>"Y" THEN INVOICE$[INVOICE_LINE_NUM,4]="N",FRT_INSALE=FRT_INSALE+AZT_2(4); REM "if special charge is freight type then turn off display and add to frt in net sale. WO229728, if Print as line on invoice is set to Y, then we DO want to display the line and we DON'T want to add to the freight in sale amount
7775 GOTO 7730
7780 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9005 GOSUB CLEAR_READONLY
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 GOSUB CLEAR_READONLY
9906 %LOT_SELL_PRICE_TOTAL=0,%CUST_OWNED_LOT_SELL_PRICE_TOTAL=0 ! WO173708/WO175385
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56001 REM "220527-Create new programs/pages to display cust info, open invoices
56002 REM "233141-Ability to output an XML AR Invoice for H&R Block 
56004 ! 233141-Add FN%HTML_ESC$ to all output tags
56006 REM "234782-HRBlock invoice xml messgaes failed to route from Ariba to
56008 REM "229728-Parameter for special charge codes classified as freight to
56010 ! 237103-Standard display/freight bucket logic wasn't present
56012 REM "251499-HRB ARIBA XML invoices getting an error.                    
56014 REM "234945-DB XML exchange hub - Flowpoint                             
56015 REM "262522-Credit card page error - FRT freight markup GRT rec
56016 REM "263088-Pier1; Modify EC Invoice/ShipNotice programs used in SJ     
56018 REM "264379-Addt'l to WO263088; EC Cust Parm-Allow 0 qty shipped inv lns
56020 REM "282448-Flowpoint; outgoing customer invoice                        
56022 REM "282961-need receiving department for BELKEDI     
56023 REM "282961-Timing issue in AR2DUM during SJ update; strip commas in tags
56024 REM "291079-FlowPoint; First Watch Invoices to CSV, filter out X orders 
56026 REM "293521-FlowPoint; found that billed_from_cust not correct
56028 REM "295559-FlowPoint; Asurion Invoices failed, problem with freight amt
56030 REM "304078-Add logic to EC Invoice program, additional sales tax info. 
56032 REM "307157-DBD-57; Output tags to EC3IN1, FlowPoint/Kaiser DBSPT-66930 
56034 REM "307358-DBSPT-115417-DBD-185; Expand EEE/EEP for ORDER_ID_3P_2, add 
56035 REM "307479-IMPL-735:Additional EEE tags for Invoice XML                
56036 REM "307482-DBD-449: Add misc fields for customer,sperson, email        
