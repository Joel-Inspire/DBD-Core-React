0010 REM "Worksheet Email Processing <EC3EM1>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 05/26/21 - 11.780648 - dmm - SSP# 307354
0037 REM "307354-DBD-178 DBSPT-117394 (041-EC3EM1-66225) Approval Email      
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3EM1",X1$="EC Worksheet Email Processing"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0130 NY$="NY"
0140 DIM MESS_INFO$[20]
0310 IOLIST ECD$,ECD2$
0320 IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
0330 IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
0360 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0370 IOLIST FM1$(1),FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0380 IOLIST FM0$
0390 IOLIST FMPS$
0391 IOLIST FMPH$
0392 IOLIST FMPX$,FMPX(0),FMPX(1),FMPX(2)
0420 IOLIST EC7$,EC7[0],EC7[1]
0430 IOLIST UM$,UM[0],UM[1],UM[2],UM[3],UM[4],UM[5]
0450 IOLIST ECR$
0460 IOLIST EDD$,EDD[0]
0470 IOLIST GRB$,GRB(0),GRB(1),GRB(2),GRB(3),GRB(4),GRB(5),GRB(6),GRB(7),GRB(8),GRB(9),GRB(10),GRB(11),GRB(12),GRB(13),GRB(14),GRB(15),GRB(16),GRB(17),GRB(18),GRB(19),GRB(20)
0490 IOLIST INVOICE_LINE_INDEX,GRT$,GRT(0),GRT(1),GRT(2),GRT(3),GRT(4),GRT(5),GRT(6),GRT(7),GRT(8),GRT(9),GRT(10)
0491 IOLIST EDS1$,EDS2$
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))],FS6[7],BLGRBNKS$(100)
0510 Z$="020 ECD... 03O ECE... 04O EDN... 05O EDO... 06O IC0... 07O FM1... 08O FM0... 09O FMP... 13O ZZPARM 17O ECO... 22O EC7... 25O ECR... 27O EC6... 28O EC9... 29O EDU... "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0535 READ (Z[13],KEY=X3$(9,3)+"I/C")ICPARM$
0540 DIM M6[1]; M6$="###,###.00-",M6[0]=621,M6[1]=2; IF ICPARM$(45,1)>"2" THEN DIM M6$(11,"0"); M6[1]=NUM(ICPARM$(45,1)),M6$(1,10-M6[1])="##########",M6$(POS("0"=M6$),1)=".",M6[0]=(10-M6[1])*100+M6[1]*10
1000 REM "Process DATA array
1001 REM "Set ECD_IN$ and ECE_IN$ and any other variables
1005 DATA_TAGS$="001<worksheet>002<approval_worksheet>003<template>004<email_buyer>005<email_address>006<ordering_buyer>007<ordering_buyer_name>008<ordering_buyer_email>009<approval_type>"; REM "new variables must be written by EC3EM2
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1090
1021 WORKSHEET$=VALUE$; GOTO 1090; REM "worksheet
1022 APPROVAL_WORKSHEET$=UCS(VALUE$); GOSUB 7000; GOTO 1090; REM "email_action
1023 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1024 EMAIL_BUYER$=VALUE$; GOTO 1090; REM "email_buyer
1025 EMAIL_ADDRESS$=VALUE$; GOTO 1090; REM "email_address (to send email to)
1026 ORDERING_BUYER$=VALUE$; GOTO 1090; REM "ordering_buyer
1027 ORDERING_BUYER_NAME$=VALUE$; GOTO 1090; REM "ordering_buyer_name"
1028 ORDERING_BUYER_EMAIL$=VALUE$; GOTO 1090; REM "ordering_buyer_email
1029 APPROVAL_TYPE$=VALUE$; GOTO 1090 ! SSP166022, approval_type (AN,AR,AA)           
1090 NEXT I
1100 REM "Process order
1101 VERSION$="307354.20210526",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1102 DIM ECD$(1580),ECD[1],ECE$(499),ECE[8]; USE_EXIST=0 ! 155076
1105 HDRCHAN=Z(2),LINECHAN=Z(3); IF APPROVAL_TYPE$(1,2)="AR" THEN HDRCHAN=Z(4),LINECHAN=Z(5) ! SSP166022
1195 GOTO 1500; REM "Process output file
1200 REM "pre-processing section
1490 RETURN 
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1503 IF TEMPLATE$="" THEN GOTO 1995 ELSE CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$; GOSUB 2100
1504 GOSUB SET_READONLY; FIND (HDRCHAN,KEY=WORKSHEET$,DOM=1505)IOL=0310; REM "If no template, ok then we may be starting order, so display location info etc
1505 GOSUB CLEAR_READONLY; CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$; GOSUB 2100 ! SSP166022, get shipping info after reading worksheet
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<cust_code>002<cust_name>003<ec_company>004<session_id>005<buyer_id>006<buyer_name>007<worksheet>008<customer>009<location>010<cust_req>011<req_date>012<attention>013<ship_via>014<needed_by>015<wslinestart>016<cust_loc_code>017<address_1>018<address_2>019<city>020<state>021<zip>022<addr_1>023<addr_2>024<addr_3>025<cost_center>026<location_name>027<recv_dept>028<ship_via_list>029<date>030<time>031<tf_order_no>032<mark_for>033<location_list>034<locchangestart>035<man_name>036<man_addr_1>037<man_addr_2>038<man_city>039<man_state>040<man_zip>041<category_entry_start>042<message>043<message_start>044<ship_via_code>045<location_desc>046<addr_city>047<addr_state>048<addr_zip>049<addr_unformatted_1>050<addr_unformatted_2>051<addr_name>052<ship_via_text>053<location_text>054<cc_type>055<cc_number>056<cc_expire>057<cc_name>058<cc_type_list>059<ordered_by>060<item_price_total>061<weight_total_order>062<invoice_total_net>063<invoice_sales_tax>064<invoice_freight>065<invoice_total>066<invoicelinestart>067<cc_number_last4>068<qty_total_order>069<item_count>070<invoice_number>071<perm_addr_change_shipto_done>072<perm_attn_change_shipto_done>073<approval_comments>074<calc_item_price_total>075<order_email_addr>"
1510 READ (100,END=1595)LINE$; GOSUB 8150
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1517 REM "LET PGINDEX=POS("<!?TF?MESSAGE"=LINE$); IF PGINDEX=0 THEN GOTO 01518 ELSE ESCAPE ; IF PGINDEX=1 THEN LET LINE$=LINE$(3) ELSE LET LINE$=LINE$(1,PGINDEX-1)+LINE$(PGINDEX+2); REM "GET RID OF THE DARNED <! ON PAGE CONTROL TAGS - OTHERWISE THE WHOLE LINE GETS COMMENTED OUT IN THE HTML
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1600 REM "move output over to email format
1610 GOSUB 6600
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2090
2001 LINE$=LINE1$+CUST_CODE$+LINE2$; GOTO 2095; REM "cust_code
2002 LINE$=LINE1$+STP(EC$[1](23,35),1)+LINE2$; GOTO 2095; REM "cust_name
2003 LINE$=LINE1$+STP(EC_PARM$(7,50),1)+LINE2$; GOTO 2095; REM "ec_company
2004 LINE$=LINE1$+STP(EC$[1](1,7),1)+LINE2$; GOTO 2095; REM "session_id from EC$
2005 LINE$=LINE1$+STP(EC$[1](8,15),1)+LINE2$; GOTO 2095; REM "Buyer id
2006 LINE$=LINE1$+STP(EC$[2](16,35),1)+LINE2$; GOTO 2095; REM "Buyer name
2007 LINE$=LINE1$+STP(ECD$(1,10),1)+LINE2$; GOTO 2095; REM "worksheet
2008 CALL "ZZDISP","AX",ECD$(26,10),"A/R",X3$,TMP$,"",0,0,X4$; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "Customer code
2009 LINE$=LINE1$+ECD$(23,6)+LINE2$; GOTO 2095; REM "location code
2010 LINE$=LINE1$+STP(ECD$(40,10)+ECD$(163,5),1)+LINE2$; GOTO 2095; REM "cust_req
2011 IF STP(ECD$(58,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",ECD$(58,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "req_date
2012 LINE$=LINE1$+STP(ECD$(64,30),1)+LINE2$; GOTO 2095; REM "attention "
2013 LINE$=LINE1$+STP(ECD$(94,15),1)+LINE2$; GOTO 2095; REM "ship_via
2014 IF STP(ECD$(109,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",ECD$(109,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "needed by
2015 GOSUB 3500; LINE$=LINES_SECTION$; GOTO 2095; REM "wslinestart
2016 LINE$=LINE1$+STP(FM0$(214,9),1)+LINE2$; GOTO 2095; REM "cust_loc_code
2017 LINE$=LINE1$+STP(FM0$(51,30),1)+LINE2$; GOTO 2095; REM "address_1
2018 LINE$=LINE1$+STP(FM0$(81,30),1)+LINE2$; GOTO 2095; REM "address_2
2019 LINE$=LINE1$+STP(FM0$(111,16),1)+LINE2$; GOTO 2095; REM "city
2020 LINE$=LINE1$+STP(FM0$(127,2),1)+LINE2$; GOTO 2095; REM "state
2021 LINE$=LINE1$+STP(LOC_ZIP$,1)+LINE2$; GOTO 2095; REM "zip
2022 LINE$=LINE1$+ADDR$[1]+LINE2$; GOTO 2095; REM "addr_1
2023 LINE$=LINE1$+ADDR$[2]+LINE2$; GOTO 2095; REM "addr_2
2024 LINE$=LINE1$+ADDR$[3]+LINE2$; GOTO 2095; REM "addr_3
2025 LINE$=LINE1$+STP(FM0$(236,9),1)+LINE2$; GOTO 2095; REM "cost_center
2026 IF STP(FM0$(248,35),3," ")="" THEN LINE$=LINE1$+STP(FM0$(16,35),1)+LINE2$ ELSE LINE$=LINE1$+STP(FM0$(248,35),1)+LINE2$ END_IF ; GOTO 2095; REM "location_name
2027 LINE$=LINE1$+STP(FM0$(382,20),1)+LINE2$; GOTO 2095; REM "recv_dept
2028 LINE$=LINE1$+LINE2$; GOTO 2095; REM "ship_via_list-NOT SUPPORTED
2029 LINE$=LINE1$+EC$[4]+LINE2$; GOTO 2095; REM "date
2030 LINE$=LINE1$+EC$[5]+LINE2$; GOTO 2095; REM "time
2031 CALL "ZZDISP","AX",ECD$(235,8),"O/P",X3$,TMP$,"",0,0,X4$; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "tf_order_no
2032 LINE$=LINE1$+STP(ECD$(330,35),1)+LINE2$; GOTO 2095; REM "mark_for
2033 LINE$=LINE1$+LINE2$; GOTO 2095; REM "location_list-NOTSUPPORTED
2034 GOTO 2095; REM "locchangestart-not supported
2035 LINE$=LINE1$+ECD$(376,35)+LINE2$; GOTO 2095; REM "man_name
2036 LINE$=LINE1$+ECD$(243,30)+LINE2$; GOTO 2095; REM "man_addr_1
2037 LINE$=LINE1$+ECD$(273,30)+LINE2$; GOTO 2095; REM "man_addr_2
2038 LINE$=LINE1$+ECD$(303,16)+LINE2$; GOTO 2095; REM "man_city
2039 LINE$=LINE1$+ECD$(319,2)+LINE2$; GOTO 2095; REM "man_state
2040 CALL "ZZDISP","AX",ECD$(321,9),"ZIP",X3$,TMP_ZIP$,"",0,0,X4$; LINE$=LINE1$+TMP_ZIP$+LINE2$; GOTO 2095; REM "man_zip
2041 GOTO 2095; REM "category_entry_start-not supported
2042 LINE$=LINE1$+MESSAGE$+LINE2$; GOTO 2095; REM "message
2043 MESSAGE_SECTION$=""; LINE$=LINE1$+MESSAGE_SECTION$+LINE2$; GOTO 2095; REM "message_start-order message not currently suppported
2044 LINE$=LINE1$+ECD$(188,1)+LINE2$; GOTO 2095; REM "SHIP_VIA_CODE
2045 IF STP(FM0$(16,35),3," ")="" THEN LD$=FM0$(248,35) ELSE LD$=FM0$(16,35) END_IF ; LINE$=LINE1$+STP(LD$,2)+LINE2$; GOTO 2095; REM "location_desc
2046 LINE$=LINE1$+STP(ECD$(303,16),1)+LINE2$; GOTO 2095; REM "addr_city
2047 LINE$=LINE1$+STP(ECD$(319,2),1)+LINE2$; GOTO 2095; REM "addr_state
2048 LINE$=LINE1$+STP(LOC_ZIP$,1)+LINE2$; GOTO 2095; REM "addr_zip
2049 LINE$=LINE1$+STP(ECD$(243,30),1)+LINE2$; GOTO 2095; REM "addr_unformatted_1"
2050 LINE$=LINE1$+STP(ECD$(273,30),1)+LINE2$; GOTO 2095; REM "addr_unformatted_2
2051 LINE$=LINE1$+STP(ECD$(376,35),2)+LINE2$; GOTO 2095; REM "addr_name
2052 TEXT_OPT=1; TEXT_OPT=0; LINE$=LINE1$+LINE2$; GOTO 2095; REM "ship_via_text - 137648-NOT SUPPORTED
2053 TEXT_OPT=1; TEXT_OPT=0; LINE$=LINE1$+LINE2$; GOTO 2095; REM "location_text  -137648-NOT SUPPORTED
2054 LINE$=LINE1$+ECD$(411,4)+LINE2$; GOTO 2095; REM "cc_type
2055 LINE$=LINE1$+STP(ECD$(415,20),2)+LINE2$; GOTO 2095; REM "cc_number
2056 LINE$=LINE1$+STP(ECD$(435,4),2)+LINE2$; GOTO 2095; REM "cc_expire
2057 LINE$=LINE1$+STP(ECD$(439,40),2)+LINE2$; GOTO 2095; REM "cc_name
2058 GOSUB 2300; LINE$=LINE1$+CCLIST$+LINE2$; GOTO 2095; REM "cc_type_list
2059 LINE$=LINE1$+STP(ECD$(168,20),1)+LINE2$; GOTO 2095; REM "ordered_by
2060 IF EC$[2](322,1)="Y" THEN LINE$=LINE1$+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+STP(STR(ITEM_PRICE_TOTAL:"###,###.00-"),1)+LINE2$; GOTO 2095; REM "item_price_total  ssp 146577, 154989
2061 LINE$=LINE1$+STP(STR(ITEM_WGT_TOTAL:"###,###.00-"),1)+LINE2$; GOTO 2095; REM "weight_total_order  ssp 146577
2062 LINE$=LINE1$+X3$(69,1)+STP(STR(GRB(1)-FRT_INSALE:"###,###.00-"),1)+LINE2$; GOTO 2095; REM "invoice_total_net
2063 LINE$=LINE1$+X3$(69,1)+STP(STR(GRB(4)+GRB(6)+GRB(8):"###,###.00-"),1)+LINE2$; GOTO 2095; REM "invoice_sales_tax
2064 LINE$=LINE1$+X3$(69,1)+STP(STR(GRB(2)+FRT_INSALE:"###,###.00-"),1)+LINE2$; GOTO 2095; REM "invoice_freight
2065 LINE$=LINE1$+X3$(69,1)+STP(STR(GRB(9):"###,###.00-"),1)+LINE2$; GOTO 2095; REM "invoice_total
2066 GOSUB 3200; LINE$=INVOICE_SECTION$; GOTO 2095; REM "invoicelinestart
2067 CCNUMB$=STP(ECD$(415,20),3," "),CCNUMB$=STP(CCNUMB$,3,"-"),CCLEN=LEN(CCNUMB$); IF CCLEN>=4 THEN CCNUMB$="*********"+CCNUMB$(CCLEN-4,4) ELSE CCNUMB$="*********"+CCNUMB$ END_IF ; LINE$=LINE1$+CCNUMB$+LINE2$; GOTO 2095; REM "cc_number_last4
2068 LINE$=LINE1$+STP(STR(QTY_TOTAL_ORDER:"#,###,##0"),1)+LINE2$; GOTO 2095; REM "qty_total_order
2069 LINE$=LINE1$+STP(STR(ITEM_COUNT:"##0"),1)+LINE2$; GOTO 2095; REM "item_count
2070 CALL "ZZDISP","A",INVOICE_HDR_KEY$(7,8),"AR6",X3$,INVOICE_NUMBER$,"",0,0,X4$; LINE$=LINE1$+INVOICE_NUMBER$+LINE2$; GOTO 2095; REM "invoice_number
2071 IF ECD$(56,1)="Y" THEN TEMP$="Yes" ELSE TEMP$="No" END_IF ; LINE$=LINE1$+TEMP$+LINE2$; GOTO 2095; REM "perm_addr_change_shipto_done 154323
2072 IF ECD$(57,1)="Y" THEN TEMP$="Yes" ELSE TEMP$="No" END_IF ; LINE$=LIEN1$+TEMP$+LINE2$; GOTO 2095; REM "perm_attn_change_shipto_done 154323
2073 GOSUB 4300; LINE$=LINE1$+STP(EDU$(82,240),1)+LINE2$; GOTO 2095 ! approval_comments, SSP182804
2074 IF EC$[2](322,1)="Y" THEN LINE$=LINE1$+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+FN%HTML_ESC$(STP(STR(CALC_ITEM_PRICE_TOTAL:"###,###.00-"),1))+LINE2$; GOTO 2095 ! WO177343, calc_item_price_total
2075 LINE$=LINE1$+FN%HTML_ESC$(ECD$(677,40))+LINE2$; GOTO 2095 ! SSP254444, order_email_addr
2090 LINE$=LINE1$+LINE2$; GOTO 2095; REM "tag not found, replace with nothingg
2095 RETURN 
2100 REM "Get Location information & format addr$[] array with address
2104 REM "OLD WAY ->DIM ADDR$[3],FM0$(521); READ (Z[8],KEY="C"+EC$[2](51,14),DOM=02106) IOL=00380
2106 GOSUB SET_READONLY; DIM ADDR$[3],FM0$(618); READ (Z[8],KEY="C"+ECD$(26,14),DOM=2107)IOL=0380
2107 GOSUB CLEAR_READONLY
2119 LOC_ZIP$=""; CALL "ZZDISP","AX",ECD$(321,9),"ZIP",X3$,LOC_ZIP$,"",0,0,X4$; REM "153619
2120 ADDRI=1; REM "153618
2121 IF STP(ECD$(243,30),3," ")="" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=STP(ECD$(243,30),1),ADDRI=ADDRI+1; REM "153618
2122 IF STP(ECD$(273,30),3," ")="" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=STP(ECD$(273,30),1),ADDRI=ADDRI+1; REM "153618
2123 IF STP(ECD$(303,16),3," ")="" THEN CSZ$=STP(ECD$(319,2),1)+" "+STP(LOC_ZIP$,1) ELSE CSZ$=STP(ECD$(303,16),1)+", "+STP(ECD$(319,2),1)+" "+STP(LOC_ZIP$,1); REM "153618
2124 IF STP(CSZ$,3," ")="" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=CSZ$,ADDRI=ADDRI+1; REM "153618
2145 RETURN 
3000 REM "message processing, lookup up message in ECO, return in MESSAGE_SECTION
3005 IF ORDER_MESSAGE_NO=0 THEN MESSAGE_SECTION$=""; DIM ECO$(300); GOTO 3045; REM "discard message section HTML
3010 DIM ECO$(300); ECO$(1,10)=ECD$(26,10),ECO$(11,10)=X0$,ECO$(21,5)=STR(ORDER_MESSAGE_NO:"00000")
3011 FIND (Z[17],KEY=ECO$(1,25),DOM=3012)ECO$; GOTO 3013
3012 ECO$(1,10)=DIM(10); FIND (Z[17],KEY=ECO$(1,25),DOM=3016)ECO$
3016 REM "PRINT ECO$; ESCAPE
3017 IF ECO$(26,1)="Y" THEN GOTO 3045; REM "If don't display, then skip this section
3020 MTMP$=STP(ECO$(30,240),1)
3025 MS2_INDEX=POS("?tf?"=MTMP$); IF MS2_INDEX=0 THEN GOTO 3040
3026 MSEND2_INDEX=POS("?"=MTMP$(MS2_INDEX+4)),MTMP_TAG$=MTMP$(MS2_INDEX+4,MSEND2_INDEX-1),MTMP1$=MTMP$(1,MS2_INDEX-1),MTMP2$=MTMP$(MS2_INDEX+MSEND2_INDEX+4)
3030 MINFO$=""; IF NUM(MTMP_TAG$,ERR=3031)<=15 THEN MINFO$=MESS_INFO$[NUM(MTMP_TAG$,ERR=3031)]
3032 MTMP$=MTMP1$+MINFO$+MTMP2$
3035 GOTO 3025
3041 MLINE$=""
3042 IF MTMP$="" THEN GOTO 3043 ELSE MPOS=POS(" "=MTMP$); IF MPOS=0 OR MPOS=LEN(MTMP$) THEN INLINE$=MTMP$,MTMP$="" ELSE INLINE$=MTMP$(1,MPOS),MTMP$=MTMP$(MPOS+1) END_IF ; IF LEN(MLINE$)+LEN(INLINE$)>60 THEN MESSAGE$=MESSAGE$+MLINE$+EOL$,MLINE$=INLINE$ ELSE MLINE$=MLINE$+INLINE$ END_IF ; GOTO 3042
3043 MESSAGE$=MESSAGE$+MLINE$
3044 REM "DIM MESS_INFO$[FN%NEA("MESS_INFO$",1)]
3045 RETURN 
3200 REM "Get lines section in LI_TEMPLATE$ and generate INVOICE_SECTION$ containing an entry for each order line from ESE
3202 INVOICE_SECTION$="",LI_TAGS$="001<order_line_number>002<line_type>003<item_code>004<item_desc>005<um>006<quantity_ordered>007<qty_per_um>008<session_id>009<worksheet>010<qty_in_eaches_ordered>011<cic_code>012<invoice_unit_price>013<invoice_unit_price_ext>014<qty_in_eaches_shipped>015<quantity_shipped>016<line_class>"
3203 REM "Setup LI_TEMPLATE$
3204 LI_TEMPLATE$=LINE$,INVOICE_LINE_READ=0
3205 READ (100,END=3206)LINE$; GOSUB 8150; LI_TEMPLATE$=LI_TEMPLATE$+LINE$+EOL$; IF POS("?tf?invoicelineend?"=LINE$)=0 THEN GOTO 3205
3208 IF DISPLAY_LINE_NUMBER$<>"" THEN DIM ECE$(499),ECE[8]; READ (LINECHAN,KEY=WORKSHEET$+DISPLAY_LINE_NUMBER$,DOM=3295)IOL=0330; GOSUB 7600; GOSUB 8250; GOTO 3214 ! ssp #146692 #155076
3210 INVOICE_LINE_READ=INVOICE_LINE_READ+1; IF INVOICE_LINE_READ>INVOICE_LINE_COUNT THEN GOTO 3295 ELSE IF INVOICE$[INVOICE_LINE_READ,4]<>"Y" THEN GOTO 3210; REM "get next line and check print/display status
3211 GRT$=INVOICE$[INVOICE_LINE_READ,2],INVOICE_LINE_EXT=NUM(INVOICE$[INVOICE_LINE_READ,3]),PRINT_INVOICE_LINE$=INVOICE$[INVOICE_LINE_READ,4],QTY_PER=NUM(INVOICE$[INVOICE_LINE_READ,5]),INV_QTY_ORDERED=NUM(INVOICE$[INVOICE_LINE_READ,6]),INV_QTY_SHIPPED=NUM(INVOICE$[INVOICE_LINE_READ,7]),INV_UNIT_PRICE=NUM(INVOICE$[INVOICE_LINE_READ,8]),OE=NUM(INVOICE$[INVOICE_LINE_READ,9]),SE=NUM(INVOICE$[INVOICE_LINE_READ,10]); REM "set variables for invoice line being processed  "
3214 LS$=LI_TEMPLATE$
3215 LI_INDEX=POS("?tf?"=LS$); IF LI_INDEX=0 THEN GOTO 3291
3216 LSEND_INDEX=POS("?"=LS$(LI_INDEX+4)),LI_TAG$=LS$(LI_INDEX+4,LSEND_INDEX-1),LS1$=LS$(1,LI_INDEX-1),LS2$=LS$(LI_INDEX+LSEND_INDEX+4),LI_POS=POS("<"+LI_TAG$+">"=LI_TAGS$); IF LI_POS=0 THEN LS$=LS1$+LS2$,LI_INDEX=0 ELSE LI_INDEX=NUM(LI_TAGS$(LI_POS-3,3))
3220 ON LI_INDEX GOTO 3289,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,3235,3326,3289
3221 LS$=LS1$+STR(NUM(GRT$(47,3)):"###")+LS2$; GOTO 3290; REM "order_line_number
3222 LS$=LS1$+GRT$(1,1)+LS2$; GOTO 3290; REM "line_type
3223 GOSUB 4250; IF STP(IC2$(35,20),3," ")="" THEN IIC$=STP(GRT$(65,10),1) ELSE IIC$=STP(IC2$(35,20),1) END_IF ; LS$=LS1$+IIC$+LS2$; GOTO 3290; REM "item_code - will use united stationers code if existing
3224 LS$=LS1$+STP(GRT$(7,40),1)+LS2$; GOTO 3290; REM "item_desc
3225 TMP$=STP(GRT$(50,4),1)+"/"+STP(STR(QTY_PER:"##,###"),2); IF TMP$="/" THEN LS$=LS1$+LS2$; GOTO 3290 ELSE LS$=LS1$+TMP$+LS2$; GOTO 3290; REM "um
3226 LS$=LS1$+STR(INV_QTY_ORDERED:"#,###,##0.00")+LS2$; GOTO 3290; REM "quantity_ordered
3227 LS$=LS1$+STR(QTY_PER:"##,###")+LS2$; GOTO 3290; REM "qty_per_um
3228 LS$=LS1$+EC$[1](1,7)+LS2$; GOTO 3290; REM "session_id
3229 LS$=LS1$+WORKSHEET$+LS2$; GOTO 3290; REM "worksheet
3230 LS$=LS1$+STR(OE:"#,###,###")+LS2$; GOTO 3290; REM "qty_in_eaches_ordered
3231 LS$=LS1$+TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1))+LS2$; GOTO 3290; REM "cic_code, form code if cic_code is blank
3232 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3290 ELSE LS$=LS1$+STR(INV_UNIT_PRICE:X3$(69,1)+"###,##0.00")+LS2$; GOTO 3290; REM "invoice_unit_price  154989
3233 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3290 ELSE LS$=LS1$+STR(INVOICE_LINE_EXT:X3$(69,1)+"###,##0.00-")+LS2$; GOTO 3290; REM "invoice_unit_price_ext 154989
3234 LS$=LS1$+STR(SE:"#,###,##0")+LS2$; GOTO 3290; REM "qty_in_eaches_shipped  "
3235 LS$=LS1$+STR(INV_QTY_SHIPPED:"#,###,##0.00")+LS2$; GOTO 3290; REM "quantity_shipped
3236 LC=NUM(GRT$(47,3)),LC$=STR(MOD(LC,2)+1); LS$=LS1$+LC$+LS2$; GOTO 3290; REM "line_class
3289 LS$=LS1$+LS2$; GOTO 3290; REM "not found replace with a '?'
3290 GOTO 3215
3291 IF LEN(INVOICE_SECTION$)+LEN(LS$)>64000 THEN PRINT (OUTPUT)INVOICE_SECTION$,EOL$; INVOICE_SECTION$=""; REM "ssp#134905
3292 INVOICE_SECTION$=INVOICE_SECTION$+LS$; IF DISPLAY_LINE_NUMBER$<>"" THEN GOTO 3295 ELSE GOTO 3210; REM "add to lines section, then get next line if any ssp#146692
3295 RETURN 
3500 REM "Get lines section in LS_TEMPLATE$ and generate LINES_SECTION$ containing an entry for each order line from ESE
3502 LINES_SECTION$="",LS_TAGS$="001<line_number>002<line_type>003<from_customer>004<item_code>005<cost_center>006<cost_code>007<item_desc>008<um>009<ship_from>010<quantity>011<qty_per_um>012<session_id>013<worksheet>014<3pinfostart>015<>016<3p_id>017<lotlinestart>018<qty_in_eaches>019<linemessage_start>020<cic_code>021<item_price>022<item_price_ext>023<vp_info_1>024<vp_info_2>025<vp_id>026<proof_url>027<po_code>028<vendor_code>029<vendor_plant>030<weight_total>031<form_memo>032<line_class>033<item_key>034<calc_item_price>035<calc_item_price_ext>"
3503 REM "Setup LS_TEMPLATE$
3504 LS_TEMPLATE$=LINE$
3505 READ (100,END=3506)LINE$; GOSUB 8150; LS_TEMPLATE$=LS_TEMPLATE$+LINE$+EOL$; IF POS("?tf?wslineend?"=LINE$)=0 THEN GOTO 3505
3508 IF DISPLAY_LINE_NUMBER$<>"" THEN DIM ECE$(499),ECE[8]; READ (LINECHAN,KEY=WORKSHEET$+DISPLAY_LINE_NUMBER$,DOM=3595)IOL=0330; GOSUB 7600; GOSUB 8250; GOTO 3514 ! ssp #146692 155076
3509 READ (LINECHAN,KEY=WORKSHEET$,DOM=3510)
3510 DIM ECE$(499),ECE[8]; READ (LINECHAN,END=3595)IOL=0330; IF ECE$(1,10)<>WORKSHEET$ THEN GOTO 3595 ELSE GOSUB 7600; GOSUB 8250 ! 155076
3512 IF POS(APPROVAL_TYPE$(1,2)="ARAA",2)>0 AND ECE$(258,1)="N" THEN GOTO 3510 ! SSP186151, if worksheet line set to not print, and this is the approval or rejection email going to the buyer, then don't print this worksheet line
3514 LS$=LS_TEMPLATE$
3515 LS_INDEX=POS("?tf?"=LS$); IF LS_INDEX=0 THEN GOTO 3591
3516 LSEND_INDEX=POS("?"=LS$(LS_INDEX+4)),LS_TAG$=LS$(LS_INDEX+4,LSEND_INDEX-1),LS1$=LS$(1,LS_INDEX-1),LS2$=LS$(LS_INDEX+LSEND_INDEX+4),LS_POS=POS("<"+LS_TAG$+">"=LS_TAGS$); IF LS_POS=0 THEN LS$=LS1$+LS2$,LS_INDEX=0 ELSE LS_INDEX=NUM(LS_TAGS$(LS_POS-3,3))
3520 ON LS_INDEX GOTO 3589,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3589
3521 LS$=LS1$+ECE$(25,3)+LS2$; GOTO 3590; REM "line_number
3522 LS$=LS1$+ECE$(28,1)+LS2$; GOTO 3590; REM "line_type
3523 CALL "ZZDISP","AX",ECE$(29,10),"A/R",X3$,TMP$,"",0,0,X4$; LS$=LS1$+TMP$+LS2$; GOTO 3590; REM "from_customer
3524 IF ECE$(18,1)="O" THEN IC$=ECE$(228,20) ELSE IC$=ECE$(39,10) END_IF ; LS$=LS1$+STP(IC$,1)+LS2$; GOTO 3590; REM "item_code
3525 LS$=LS1$+STP(ECE$(49,9),1)+LS2$; GOTO 3590; REM "cost_center
3526 LS$=LS1$+STP(ECE$(58,9),1)+LS2$; GOTO 3590; REM "cost_code
3527 ITEM_COUNT=ITEM_COUNT+1; LS$=LS1$+STP(ECE$(67,40),1)+LS2$; GOTO 3590; REM "item_desc
3528 TMP$=STP(ECE$(107,4),1)+"/"+STP(STR(ECE[1]:"##,###"),2); IF TMP$="/" THEN LS$=LS1$+LS2$; GOTO 3590 ELSE LS$=LS1$+TMP$+LS2$; GOTO 3590; REM "um
3529 LS$=LS1$+STP(ECE$(111,4),1)+LS2$; GOTO 3590; REM "ship_from
3530 QTY_TOTAL_ORDER=QTY_TOTAL_ORDER+(ECE(0)/QTY_DIVISOR); LS$=LS1$+STR(ECE[0]/QTY_DIVISOR:"#,###,##0")+LS2$; GOTO 3590; REM "quantity
3531 LS$=LS1$+STR(ECE[1]:"##,###")+LS2$; GOTO 3590; REM "qty_per_um
3532 LS$=LS1$+STP(EC$[1](1,7),1)+LS2$; GOTO 3590; REM "session_id
3533 LS$=LS1$+WORKSHEET$+LS2$; GOTO 3590; REM "worksheet
3534 GOSUB 3950; LS$=LS1$+TPINFO_TEMPLATE$+LS2$; GOTO 3590; REM "3pinfostart
3535 LS$=LS1$+STP(EC7$(44,20),1)+LS2$; GOTO 3590; REM "** not used **
3536 LS$=LS1$+STP(EC7$(14,10),1)+LS2$; GOTO 3590; REM "3p_id
3537 GOSUB 3900; LS$=LS1$+LOT_SECTION$+LS2$; GOTO 3590; REM "lotlinestart - output of lotted information
3538 GOSUB 7300; IF ECE$(28,1)="M" THEN QTY$="" ELSE QTY$=STR(QTY_IN_EACHES:"#,###,###") END_IF ; LS$=LS1$+FN%HTML_ESC$(QTY$)+LS2$; GOTO 3590; REM "qty_in_eaches.  SSP253673, make like EC3WS1 line
3539 GOSUB 3850; LS$=LS1$+LINEMSG_SECTION$+LS2$; GOTO 3590; REM "linemessage_start
3540 LS$=LS1$+TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1))+LS2$; GOTO 3590; REM "cic_code, form code if cic_code is blank
3541 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3590 ELSE GOSUB 8246; IF FM1(29)=0 THEN ITEMPRICE=FM1(3) ELSE ITEMPRICE=FM1(29) END_IF ; LS$=LS1$+STP(STR(ITEMPRICE:"###,###.00-"),2)+LS2$; GOTO 3590; REM "item_price 154989
3542 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3590 ELSE GOSUB 8246; IF FM1(29)=0 THEN ITEMPRICE=FM1(3) ELSE ITEMPRICE=FM1(29) END_IF ; ITEMPRICEEXT=ITEMPRICE*ECE(0); ITEM_PRICE_TOTAL+=ITEMPRICEEXT; LS$=LS1$+STP(STR(ITEMPRICEEXT:"###,###.00-"),2)+LS2$; GOTO 3590; REM "item_price_ext 154989
3543 LS$=LS1$+STP(EC7$(24,20),1)+LS2$; GOTO 3590; REM "vp_info_1 ssp#148607
3544 LS$=LS1$+STP(EC7$(44,20),1)+LS2$; GOTO 3590; REM "vp_info_2 ssp#148607
3545 LS$=LS1$+STP(EC7$(14,10),1)+LS2$; GOTO 3590; REM "vp_id ssp#148607
3546 GOSUB 4100; LS$=LS1$+PROOF_URL$+LS2$; GOTO 3590; REM "proof_url ssp#148607
3547 LS$=LS1$+ECE$(129,1)+LS2$; GOTO 3590; REM "po_code
3548 CALL "ZZDISP","AX",ECE$(115,10),"A/P",X3$,TMP$,"",0,0,X4$; LS$=LS1$+TMP$+LS2$; GOTO 3590; REM "vendor_code
3549 LS$=LS1$+ECE$(125,4)+LS2$; GOTO 3590; REM "vendor_plant
3550 GOSUB 8246; IF FM1(18)=0 THEN ITEMWGT=0 ELSE ITEMWGT=FM1(18) END_IF ; ITEMWGTEXT=ITEMWGT*ECE(0); ITEM_WGT_TOTAL+=ITEMWGTEXT; IF ITEMWGTEXT=0 THEN WGT$="n/a" ELSE WGT$=STP(STR(ITEMWGTEXT:"###,###.00-"),2) END_IF ; LS$=LS1$+WGT$+LS2$; GOTO 3590; REM "weight_total "
3551 GOSUB 8246; LS$=LS1$+STP(FM1$(389,60),2)+LS2$; GOTO 3590; REM "form_memo
3552 LC=NUM(ECE$(25,3)),LC$=STR(MOD(LC,2)+1); LS$=LS1$+LC$+LS2$; GOTO 3590; REM "line_class"
3553 LS$=LS1$+ECE$(29,20)+LS2$; GOTO 3590; REM "item_key
3554 GOSUB 8246; GOSUB 7880; IF ECE$(18,1)<>"O" AND POS(ECE$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; LS$=LS1$+FN%HTML_ESC$(RETURNED_PRICE$)+LS2$; GOTO 3590 ! WO177343, calc_item_price. SSP182135, added check to use FMS price if not 0, also SSP182425.  WO215367, update display price to ECE, WO 227556; SSP 282335
3555 GOSUB 8246; GOSUB 7880; IF ECE$(18,1)<>"O" AND POS(ECE$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; GOSUB 7350; CALC_ITEM_PRICE_TOTAL+=ITEMPRICEEXT; LS$=LS1$+FN%HTML_ESC$(STP(STR(ITEMPRICEEXT:"###,###.00-"),2))+LS2$; GOTO 3590 ! WO177343, calc_item_price_ext. SSP182135, added check to use FMS price if not 0, also SSP182425.  WO215367, update display price extension to ECE, WO 227556; SSP 282335
3589 LS$=LS1$+LS2$; GOTO 3590; REM "not found replace with a '?'
3590 GOTO 3515
3591 IF LEN(LINES_SECTION$)+LEN(LS$)>64000 THEN PRINT (OUTPUT)LINES_SECTION$,EOL$; LINES_SECTION$=""; REM "ssp#134905
3592 LINES_SECTION$=LINES_SECTION$+LS$; IF DISPLAY_LINE_NUMBER$<>"" THEN GOTO 3595 ELSE GOTO 3510; REM "add to lines section, then get next line if any ssp#146692
3595 RETURN 
3850 REM "get line message section (linemessage_start)
3852 LINEMSG_SECTION$="",LM_TEMPLATE$=LS2$(2); IF LS1$(LEN(LS1$)-1,2)="<!" THEN LS1$=LS1$(1,LEN(LS1$)-2)
3853 LINEMSG_END=POS("<!?tf?linemessage_end"=LM_TEMPLATE$),LM_TEMPLATE$=LM_TEMPLATE$(1,LINEMSG_END-1)
3854 LINEMSG_END=POS("<!?tf?linemessage_end"=LS2$); IF LEN(LS2$)=LINEMSG_END+23 THEN LS2$="" ELSE LS2$=LS2$(LINEMSG_END+23); REM "strip out the line message section from LS2$
3858 DIM OPTIONS$(20); OPTIONS$(2,1)="Y"; REM "OPTIONS$(2,1)=approval order, copied from EC3AP1, SSP182932
3860 CALL "EC3MG0",X3$,X4$,EC_PARM$,EC${ALL},LM_TEMPLATE$,ECE$,MESS_INFO${ALL},OPTIONS$; REM "process messages for line
3891 LINEMSG_SECTION$=LM_TEMPLATE$
3895 RETURN 
3900 REM "Get lotted lines section in LOT_TEMPLATE$ and generate LOT_SECTION$ containing an entry for each order line from ICF for the corresponding line section item
3903 REM "Setup LOT_TEMPLATE$
3904 LOT_TEMPLATE$=LS2$(2)
3905 LOT_END=POS("<!?tf?lotlineend"=LOT_TEMPLATE$),LOT_TEMPLATE$=LOT_TEMPLATE$(1,LOT_END-1)
3906 LS2$=LS2$(2); REM "get rid of trailing > from opening <!?tf?lotlinstart>
3907 LOT_END=POS("<!?tf?lotlineend"=LS2$); IF LEN(LS2$)=LOT_END+18 THEN LS2$="" ELSE LS2$=LS2$(LOT_END+18); REM "strip out the lot section from LS2$
3910 DIM ECR$(1000); FIND (Z[25],KEY=ECE$(29,20),DOM=3911)ECR$
3912 IF STP(ECR$(256,48),1)="" THEN WHSE_LIST$=EC$[11] ELSE WHSE_LIST$=STP(ECR$(256,48),1)
3920 REM "get lot records
3922 CALL "EC3IC1",X3$,X4$,EC_PARM$,EC${ALL},ECE$(29,20),WHSE_LIST$,ECE[0]*ECE[1],ECE[1],ICF_INFO${ALL},NEXT_ICF_INDEX,ECD$(235,8)
3925 REM "IF NEXT_ICF_INDEX=1 THEN LET LOT_TEMPLATE$=""; GOTO 03933; REM "NO LOT RECORDS
3930 REM "output lot section
3932 CALL "EC3IC2",X3$,X4$,EC_PARM$,EC${ALL},LOT_TEMPLATE$,ICF_INFO${ALL},NEXT_ICF_INDEX-1,""
3933 IF ECE$(129,1)=" " THEN LOT_SECTION$=LOT_TEMPLATE$ ELSE LOT_SECTION$=""; REM "if po being issued then eliminate lot section completely
3940 RETURN 
3950 REM "Get lines section in TPINFO_TEMPLATE$ and generate TPINFO_SECTION$ containing an entry for each order line from ESE
3951 IF LEN(LS1$)<=2 THEN LS1$="" ELSE LS1$=LS1$(1,LEN(LS1$)-2); REM "get rid of <!
3952 TPINFO_SECTION$="",TPINFO_TAGS$="001<3p_info_1>002<3p_info_2>003<3p_text>004<3p_info_3>005<3p_proof_url>" ! SSP244850
3953 REM "Setup TPINFO_TEMPLATE$
3954 TPINFO_TEMPLATE$=LS2$(2)
3955 TPINFO_END=POS("<!?tf?3pinfoend"=TPINFO_TEMPLATE$),TPINFO_TEMPLATE$=TPINFO_TEMPLATE$(1,TPINFO_END-1)
3956 LS2$=LS2$(2); REM "get rid of trailing > from opening <!?tf?3pinfostart>
3957 TPINFO_END=POS("<!?tf?3pinfoend"=LS2$); IF LEN(LS2$)=TPINFO_END+17 THEN LS2$="" ELSE LS2$=LS2$(TPINFO_END+17); REM "strip out the lot section from LS2$
3959 IF NUL(MID(ECR$,243,10)) AND NUL(MID(EC7$,14,10)) THEN TPINFO_TEMPLATE$=""; GOTO 3995; REM "if no 3pinfo in both ECR AND EC7 record, eliminate section; used to be, check only ECR and eliminate section
3965 TPINFO_INDEX=POS("?tf?"=TPINFO_TEMPLATE$); IF TPINFO_INDEX=0 THEN GOTO 3991
3966 TPINFOEND_INDEX=POS("?"=TPINFO_TEMPLATE$(TPINFO_INDEX+4)),TPINFO_TAG$=TPINFO_TEMPLATE$(TPINFO_INDEX+4,TPINFOEND_INDEX-1),TP1$=TPINFO_TEMPLATE$(1,TPINFO_INDEX-1),TP2$=TPINFO_TEMPLATE$(TPINFO_INDEX+TPINFOEND_INDEX+4),TPINFO_POS=POS("<"+TPINFO_TAG$+">"=TPINFO_TAGS$); IF TPINFO_POS=0 THEN TPINFO_TEMPLATE$=TP1$+TP2$,TPINFO_INDEX=0 ELSE TPINFO_INDEX=NUM(TPINFO_TAGS$(TPINFO_POS-3,3))
3970 ON TPINFO_INDEX GOTO 3989,3971,3972,3973,3974,3975,3989 ! SSP244850
3971 TPINFO_TEMPLATE$=TP1$+STP(EC7$(24,20),1)+TP2$; GOTO 3990; REM "3p_info_1
3972 TPINFO_TEMPLATE$=TP1$+STP(EC7$(44,20),2)+TP2$; GOTO 3990; REM "3p_info_2. SSP176753, was previously setting to EC7$(24,20)
3973 GOSUB 4350; TPINFO_TEMPLATE$=TP1$+VAR_TEXT$+TP2$; GOTO 3990; REM "3p_text 166342
3974 TPINFO_TEMPLATE$=TP1$+STP(EC7$(64,50),2)+TP2$; GOTO 3990 ! WO178946, 3p_info_3
3975 THREEPTEMP$=THREEPKEY$,THREEPKEY$=TBL(NUL(MID(ECR$,243,10)),ECR$(243,10),EC7$(14,10)); GOSUB 4130; THREEPKEY$=THREEPTEMP$; TPINFO_TEMPLATE$=TP1$+STP(EC6$(141,60),2)+TP2$; GOTO 3990 ! SSP215913, 3p_proof_url
3989 TPINFO_TEMPLATE$=TP1$+"?"+TP2$; GOTO 3990; REM "not found replace with a '?'
3990 GOTO 3965
3995 RETURN 
4100 ! get PROOF_URL$ - this is only the url to directory you must tack on the actual proof file name ssp#148607
4105 PROOF_URL$=""
4110 DIM EC6$(900); FIND (Z[27],KEY=MID(EC7$,14,10),DOM=*NEXT)EC6$
4120 PROOF_URL$=STP(EC6$(141,60))
4125 RETURN 
4130 REM "get 3p id master record 148750
4140 IF THREEPKEY$=DIM(10) THEN THREEPKEY$=MID(ECR$,243,10) END_IF ; IF THREEPKEY$=DIM(10) THEN DIM EC6$(900); GOTO 4149 ! SSP166300, was getting error 47 at 8447, added DIM for EC6$, 289039
4141 DIM EC6$(900); FIND (Z(27),KEY=THREEPKEY$,DOM=*NEXT)EC6$
4149 RETURN 
4250 REM "get TOPS united stationers item code
4252 DIM IC2$(100); FIND (Z(31),KEY=GRT$(55,20)+EC_PARM$(936,10)+DIM(4),DOM=4253)IC2$
4254 RETURN 
4300 ! SSP182804, get approval comments from EDU file for this worksheet
4310 DIM EDU$(511); FIND (Z[29],KEY=WORKSHEET$,DOM=*RETURN)EDU$
4345 RETURN 
4349 ! 
4350 REM "3p_text handling, TP2$ should have [x] in it
4355 REM "Extract [x] part from TP2, if not found then ignore
4360 VAR_TEXT$=""
4365 BRACKET_POS=POS("]"=TP2$); IF MID(TP2$,1,1)<>"[" OR BRACKET_POS=0 THEN RETURN ELSE VAR_CODE$=TP2$(1,BRACKET_POS),TP2$=TP2$(BRACKET_POS+1)
4370 VAR_CODE$=VAR_CODE$(2,LEN(VAR_CODE$)-2); VAR_CODE$=STR(NUM(VAR_CODE$,ERR=4368):"00000")
4375 VAR_CODE_KEY$=TBL(NUL(MID(ECR$,243,10)),ECR$(243,10),EC7$(14,10))+VAR_CODE$; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,VAR_CODE_KEY$,VAR_TEXT${ALL}
4380 VAR_TEXT$=VAR_TEXT$[1]
4385 RETURN 
4390 ! 
4900 ! WO177343, calc_item_price, get sell price by checking for quantity breaks and pricing tables, similar to OF2UAA logic, load pricing array (7600), then pick a price (8000)
4905 GOSUB SET_READONLY; DIM AR1$(599),FMPD$(243); READ (33007,KEY=EC$[2](51,10),DOM=*NEXT)AR1$; FIND (Z[9],KEY="D"+EC$[2](51,10),DOM=*NEXT)FMPD$ ! WO226583, need customer default parms
4910 DIM IC0$(187),IC0[40]; FIND (Z[6],KEY=ECE$(29,20),DOM=*NEXT)IOL=0360; GOSUB CLEAR_READONLY; GOTO 4915
4911 GOSUB CLEAR_READONLY; GOTO *RETURN ! No IC0 record for this item
4915 PRECISION M6[1]
4920 DIM P[12,1]; P[0,1]=IC0[0]
4925 FOR I=1 TO 6; P[I,0]=IC0[1+(I-1)*2],P[I,1]=IC0[2+(I-1)*2],P[I+6,0]=IC0[21+(I-1)*2],P[I+6,1]=IC0[22+(I-1)*2]; NEXT I
4930 IF POS(" "<>IC0$(109,3)+AR1$(398,3))>0 THEN X$=$7E$+IC0$(109,3)+AR1$(398,3)+IC0$(1,20); DIM Q[35]; CALL "IC2ICF",X3$,Z[9],X$,ECE[1],IC0[15],IC0[14],IC0[0],IC0[18],IC0[17],IC0[20],Q{ALL} ! Pricing table calculation
4935 PRECISION 2
4940 IF X$="" THEN GOTO 4950
4942 DIM P[12,1]; P[0,1]=Q[0]
4945 FOR I=0 TO 11; P[I+1,0]=Q[I*2+1],P[I+1,1]=Q[I*2+2]; NEXT I
4950 ! Calculate price
4952 LOWEST_QBG=0; IF MID(FMPD$,107,1)="Y" AND MID(IC0$,113,3)<>DIM(3) THEN LOWEST_QBG=1 ! WO226583, if parm Customer always gets lowest QBG price? set to Y and item has QBG set then see line 4970 for logic to always use lowest non-zero break
4955 PRECISION M6[1]
4960 CALC_ITEM_PRICE=P[0,1]*ECE[1]/IC0[14]; IF P[1,0]=0 THEN GOTO 4985
4963 GOSUB 7300 ! Calculate QTY_IN_EACHES
4965 FOR I=1 TO 12
4970 IF ABS(QTY_IN_EACHES)<P[I,0] AND LOWEST_QBG=0 THEN I=99; GOTO 4980 ! WO226583, if always give lowest then don't exit if qty is lower than break
4975 IF P[I,0]<>0 THEN CALC_ITEM_PRICE=P[I,1]*ECE[1]/IC0[14]
4980 NEXT I
4985 PRECISION 2
4988 IF ECE[2]=-999999999 THEN RETURNED_PRICE$=STR(0:X3$(69,1)+"###,###.00"),ITEM_PRICE=0; GOTO 4990 ! SSP 232412
4989 RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
4990 RETURN 
4995 ! 
6600 REM "Create email request file 148750, Use port 1001 and 1002
6601 VP_KEY$=EC_PARM$(1021,10); IF APPROVAL_TYPE$(1,2)="AR" THEN VP_KEY$=EC_PARM$(1041,10) ELSE IF APPROVAL_TYPE$(1,2)="AA" THEN VP_KEY$=EC_PARM$(1031,10) ! SSP166022
6602 DIM ETEXT_NEEDED$(30),BYFOPTIONS$(50); BYFOPTIONS$(1,1)="Y",ETEXT_NEEDED$(1,10)=VP_KEY$,ETEXT_NEEDED$(16,10)=VP_KEY$,ETEXT_NEEDED$(11,5)="00001",ETEXT_NEEDED$(26,5)="00002"; CALL "EC3BYF",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,ETEXT_NEEDED$,APPROVALTEXT${ALL},BYFOPTIONS$; REM "get information on purchase approval notification
6603 DIM ETEXT_NEEDED$(30); ETEXT_NEEDED$(1,10)="email",ETEXT_NEEDED$(16,10)="email",ETEXT_NEEDED$(11,5)="00001",ETEXT_NEEDED$(26,5)="00002"; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,ETEXT_NEEDED$,ETEXT${ALL}; REM "get email header and footer
6605 INLINE$=APPROVALTEXT$[1]; GOSUB 6700; APPROVALTEXT$[1]=INLINE$,SUBJECT$=APPROVALTEXT$[1]; REM "parse email subject line
6606 INLINE$=ETEXT$[1]; GOSUB 6700; ETEXT$[1]=INLINE$; REM "parse email_start for subject line/email address
6608 CLOSE (1001); CLOSE (1002)
6610 PRECISION 5; EMAIL_FILE$=%SERVER_DIR$+"TMPAN"+EMAIL_ACTION$+STR(INT(RND*100000)); PRECISION 2
6611 OPEN (1002,ERR=6615)EMAIL_FILE$; CLOSE (1002); GOTO 6610; REM "if we can open the file then it is in use, try again
6615 REM "Create file, then open files and copy
6616 SET_PARAM 'FF'=3; VVV$=FID(33002); SET_PARAM 'FF'=1; TMP_FILE$=VVV$(9); CLOSE (33002); REM "get processed template file
6620 SERIAL EMAIL_FILE$,DISK_NO,0,ERR=6610
6621 CLOSE (1001); CLOSE (1002); OPEN (1001,ERR=6645)TMP_FILE$; OPEN (1002)EMAIL_FILE$; MESS$="Creating temp HTML e-mail file "+EMAIL_FILE$,MTYPE$="EMAIL"; GOSUB 7500
6622 TEXT_IN$=ETEXT$[1]; GOSUB 6650
6623 WRITE RECORD (1002)TEXT_IN$; REM "write out email header
6625 READ RECORD (1001,SIZ=6692,END=6629)COPY$; COPY$=COPY$(1,POS(DIM(512,$00$)=COPY$+DIM(512,$00$))-1); IF MID(COPY$,1,LEN(HTML_TEXT$))=HTML_TEXT$ THEN COPY$=MID(COPY$,LEN(HTML_TEXT$)+1) END_IF ; IF LEN(COPY$)<>0 THEN WRITE RECORD (1002,SIZ=LEN(COPY$))COPY$ END_IF ; GOTO 6625 ! strip off html_header if here, it is covered in email open DBD-178-DBSPT-117394-SSP307354 only write if not 0 bytes
6628 IF EC_PARM$(1177,1)="Y" THEN SID$=EC$[1](1,7) ELSE SID$=EC$[1](1213,64) ! SSP212160 jdf
6629 WRITE RECORD (1002)ETEXT$[2]; REM "write out email closing
6630 PRECISION 5; EMAIL_ACTION_FILE$=%SERVER_DIR$+STR(INT(RND*100000))+".em"; PRECISION 2; CLOSE (1003); OPEN (1003,ERR=6631)EMAIL_ACTION_FILE$; GOTO 6630; REM "find unused tmp file name for email control file
6631 SERIAL EMAIL_ACTION_FILE$,DISK_NO,0,ERR=6640; OPEN (1003)EMAIL_ACTION_FILE$
6632 WRITE RECORD (1003)"basic=EC3EM0"; WRITE RECORD (1003)"template="+EMAIL_FILE$; WRITE RECORD (1003)"session_id="+SID$; WRITE RECORD (1003)"remove_file=Y" ! SSP212160 jdf
6633 MESS$="Posting e-mail to send : "+EMAIL_ACTION_FILE$,MTYPE$="EMAIL"; GOSUB 7500
6640 CLOSE (1001); CLOSE (1002); CLOSE (1003)
6645 RETURN 
6700 REM "parse INLINE for tags listed
6701 LINE$=INLINE$
6710 REM "Setup line_tags$
6712 LINE_TAGS$="001<subject>002<email>003<worksheet>004<ordering_buyer>005<ordering_buyer_name>006<ordering_buyer_email>"
6720 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN GOTO 6795
6722 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
6728 ON LINDEX GOTO 6789,6731,6732,6733,6734,6735,6736,6789
6731 LINE$=LINE1$+SUBJECT$+LINE2$; GOTO 6790; REM "subject
6732 LINE$=LINE1$+EMAIL_ADDRESS$+LINE2$; GOTO 6790; REM "email_address
6733 LINE$=LINE1$+WORKSHEET$+LINE2$; GOTO 6790; REM "worksheet
6734 LINE$=LINE1$+ORDERING_BUYER$+LINE2$; GOTO 6790; REM "ordering_buyer
6735 LINE$=LINE1$+ORDERING_BUYER_NAME$+LINE2$; GOTO 6790; REM "ordering_buyer_name
6736 LINE$=LINE1$+ORDERING_BUYER_EMAIL$+LINE2$; GOTO 6790; REM "ordering_buyer_email
6789 LINE$=LINE1$+LINE2$; GOTO 6790; REM "tag not found
6790 GOTO 6720
6795 INLINE$=LINE$; RETURN 
7000 REM "convert email action to 3p id master
7003 DIM TP_ACTIONCD$(10),TP_ACTIONCD1$(200),TP_ACTIONCD2$(200)
7005 XX=INT(POS(EMAIL_ACTION$="AN",2)/2); ON XX GOTO 7045,7010,7045
7010 TP_ACTIONCD$=EC_PARM$(1021,10); GOTO 7030; REM "email notification of required approval "
7030 FIND (Z(28),KEY=TP_ACTIONCD$+"00001",DOM=*NEXT)TP_ACTIONCD_1$
7031 FIND (Z(28),KEY=TP_ACTIONCD$+"00002",DOM=*NEXT)TP_ACTIONCD_2$
7045 RETURN 
7050 REM "get ccinformation
7055 DIM GRB(500),GRB(20)
7060 IF POS(CCACTION$="CI")=0 THEN GOTO 7090 ELSE INVCHAN=Z(28)
7070 FIND (INVCHAN,KEY=ECD$(509,14),DOM=7071)IOL=0470
7098 RETURN 
7100 REM "build invoice display array
7101 IF ECD$(509,14)=DIM(14) THEN GOTO 7145
7102 INVHDR=Z(28),INVLINE=Z(29); REM "set invoice header and lin channels
7103 INVOICE_LINE_COUNT=0,FRT_INSALE=0; DIM INVOICE$[200,10]; REM "200 lines  (index 4) 1=order line #  2=ART string var$  3=extended sell amt  4=display/print line 5=qty per um 6=order qty  7=shipped qty   8=unit price  9=qty ordered eaches  10=qty shipped eaches
7105 DIM GRB(20),GRB$(500),GRT$(500),GRT(10); FIND (INVHDR,KEY=ECD$(509,14),DOM=7145)IOL=0470
7108 INVOICE_LINE_INDEX=GRB(20)
7110 IF INVOICE_LINE_INDEX=0 THEN GOTO 7145 ELSE READ (INVLINE,IND=INVOICE_LINE_INDEX)IOL=0490
7112 INVOICE_LINE_COUNT=INVOICE_LINE_COUNT+1
7115 INVOICE$[INVOICE_LINE_COUNT,1]=GRT$(47,3),INVOICE$[INVOICE_LINE_COUNT,2]=GRT$,INVOICE$[INVOICE_LINE_COUNT,3]=STR(GRT(4)),INVOICE$[INVOICE_LINE_COUNT,4]=GRT$(6,1),INVOICE$[INVOICE_LINE_COUNT,5]=STR(GRT(6)),INVOICE$[INVOICE_LINE_COUNT,8]=STR(GRT(2)),INVOICE$[INVOICE_LINE_COUNT,9]=STR(GRT(0)),INVOICE$[INVOICE_LINE_COUNT,10]=STR(GRT(1)); REM "assign invoice line values
7116 QTY_PER=GRT(6); IF QTY_PER=0 OR GRT$(50,4)="M   " THEN QTY_PER=1
7117 INVOICE$[INVOICE_LINE_COUNT,6]=STR(GRT(0)/QTY_PER),INVOICE$[INVOICE_LINE_COUNT,7]=STR(GRT(1)/QTY_PER)
7119 IF GRT$(1,1)<>"S" THEN GOTO 7110; REM "if not special charge then get next line
7120 REM "special charge line 
7122 DIM FMPX$(100),FMPX(2); FIND (Z(9),KEY="X"+GRT$(65,10),DOM=7125)IOL=0392
7123 IF FMPX$(60,1)="Y" THEN INVOICE$[INVOICE_LINE_COUNT,4]="N",FRT_INSALE=FRT_INSALE+GRT(4); REM "if special charge is freight type then turn off display and add to frt in net sale
7129 GOTO 7110
7145 RETURN 
7300 ! If parm says so then don't extend quantity in eaches for M/1000, SSP166123                                                                        
7305 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4) ! SSP167126
7310 QTY_IN_EACHES=ECE[0]*ECE[1]
7315 IF ECE$(107,4)<>THOUSANDS$ THEN GOTO *RETURN
7320 IF (EC_PARM$(948,1)<>"Y" AND ECE$(299,1)=" ") OR ECE$(299,1)="Y" THEN GOTO *RETURN
7325 QTY_IN_EACHES=ECE[0]
7340 RETURN 
7345 ! 
7350 ! If parm says so then don't extend item_price_ext for M/1000, SSP166123
7354 IF ITEM_PRICE=-999999999 THEN ITEM_PRICE=0 ! SSP 232412
7355 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4) ! SSP167126
7360 ITEMPRICEEXT=ITEM_PRICE*ECE[0]
7365 IF ECE$(107,4)<>THOUSANDS$ THEN GOTO *RETURN
7370 IF (EC_PARM$(948,1)<>"Y" AND ECE$(299,1)=" ") OR ECE$(299,1)="Y" THEN GOTO *RETURN
7375 ITEMPRICEEXT=ITEM_PRICE*ECE[0]/1000
7390 RETURN 
7395 ! 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7600 REM "Do calculations for worksheet line
7603 QTY_DIVISOR=1; GOTO 7645; REM "ECE[0] should be in the correct units already so we will just set QTY_DIVISOR to one
7604 REM "Set qty_divisor
7605 DIM UM$(22),UM[5]; FIND (Z[13],KEY="U/M"+ECE$(107,4),DOM=7606)IOL=0430
7607 IF UM$(20,1)="Y" OR UM$(21,1)="Y" OR ECE[1]=0 THEN QTY_DIVISOR=1 ELSE QTY_DIVISOR=ECE[1]
7645 RETURN 
7880 REM "item_price 162539
7881 RETURNED_PRICE$=""; IF EC$[2](322,1)="Y" AND ORD_TOT_OVERRIDE$<>"Y" THEN GOTO 7895 ELSE ORD_TOT_OVERRIDE$=""; REM "153032; 192510 - Force calculation using overide flag from 8600s
7882 IF ECE$(18,1)="O" THEN DIM I[30]; REQ_DATE$=ECD$(58,6); IF STP(REQ_DATE$,3)="" THEN REQ_DATE$=X3$(15,6) END_IF ; CALL "OS2OBC",X3$,X4$,ECE$(39,10),I{ALL},ECD$(26,10)+DIM(5)+REQ_DATE$,"EC3WS1",RETURNED_PRICE,"",COST,ECE[0]; GOTO 7888
7883 IF ECE$(28,1)="S" THEN RETURNED_PRICE$=STR(ECE[2]:"###,###.00"); ITEM_PRICE=ECE[2]; IF ITEM_PRICE=-999999999 THEN RETURNED_PRICE$="      .00",ITEM_PRICE=0 END_IF ; ECE[3]=EDV_COST; RETURN ! SSP 232412
7884 IF STOCK$="Y" OR (FM1[29]=0 AND FM1[3]=0) THEN GOTO 7885 ELSE GOTO 7887 ! SSP170941
7885 GOSUB SET_READONLY; DIM IC0$(187),IC0[40]; FIND (Z[6],KEY=ECE$(29,20),DOM=*NEXT)IOL=0360; GOSUB CLEAR_READONLY; ITEM_PRICE=IC0[0]; RETURNED_PRICE$=STR(ITEM_PRICE:X3$(69,1)+"###,###.00"); GOTO 7889 ! SSP170971, price from item master
7886 GOSUB CLEAR_READONLY
7887 IF FM1(29)=0 THEN BASE_PRICE=FM1(3) ELSE BASE_PRICE=FM1(29) END_IF ; IF FM1[25]=0 THEN ITEM_PRICE=BASE_PRICE ELSE IF BASE_PRICE=0 OR FM1[4]=0 THEN ITEM_PRICE=0 ELSE ITEM_PRICE=BASE_PRICE END_IF END_IF ; RETURNED_PRICE$=STR(ITEM_PRICE:X3$(69,1)+"###,###.00"); GOTO 7889; REM "item_price, calculated from fms or sell price, sell u/m and alt iss #1 um. SSP182135, was checking if FM1[3]=0 and setting to 0, changed to if BASE_PRICE is 0, then set to 0. SSP244503 - when using both FMS price and first alt U/M, calc was wrong
7888 IF ECE$(18,1)="O" THEN RETURNED_PRICE$=STR(RETURNED_PRICE:"###,###.00"); ITEM_PRICE=RETURNED_PRICE; ECE[2]=RETURNED_PRICE
7889 ! RETURN ! SSP 232412
7890 IF ITEM_PRICE=-999999999 OR ECE[2]=-999999999 THEN ITEM_PRICE=0,RETURNED_PRICE$="      .00" ! SSP 232412
7895 RETURN 
8100 REM "Copy output file to new file before returning the output file
8101 REM "Use port 1001 and 1002
8105 CLOSE (1001); CLOSE (1002)
8110 PRECISION 5; EMAIL_FILE$=%SERVER_DIR$+"TMP"+STR(INT(RND*100000)); PRECISION 2
8111 OPEN (1002,ERR=8115)EMAIL_FILE$; CLOSE (1002); GOTO 8110; REM "if we can open the file then it is in use, try again
8115 REM "Create file, then open files and copy
8120 SERIAL EMAIL_FILE$,DISK_NO,0,ERR=8110
8121 OPEN (1001,ERR=8145)TMP_NAME$; OPEN (1002)EMAIL_FILE$; MESS$="Creating temp HTML e-mail file "+EMAIL_FILE$,MTYPE$="EMAIL"; GOSUB 7500
8122 TEXT_IN$=ETEXT$[1]; GOSUB 8150
8123 WRITE RECORD (1002)TEXT_IN$; REM "write out email header
8125 READ RECORD (1001,SIZ=8192,END=8129)COPY$; COPY$=COPY$(1,POS(DIM(512,$00$)=COPY$+DIM(512,$00$))-1); IF MID(COPY$,1,LEN(HTML_TEXT$))=HTML_TEXT$ THEN COPY$=MID(COPY$,LEN(HTML_TEXT$)+1) END_IF ; IF LEN(COPY$)<>0 THEN WRITE RECORD (1002,SIZ=LEN(COPY$))COPY$ END_IF ; GOTO 8125 ! strip off html_header if here, it is covered in email open DBD-178-DBSPT-117394-SSP307354 only write if not 0 bytes
8128 IF EC_PARM$(1177,1)="Y" THEN SID$=EC$[1](1,7) ELSE SID$=EC$[1](1213,64) ! SSP212160 jdf
8129 WRITE RECORD (1002)ETEXT$[2]; REM "write out email closing
8130 PRECISION 5; EMAIL_ACTION_FILE$=%SERVER_DIR$+STR(INT(RND*100000))+".em"; PRECISION 2; CLOSE (1003); OPEN (1003,ERR=8131)EMAIL_ACTION_FILE$; GOTO 8130; REM "find unused tmp file name for email control file
8131 SERIAL EMAIL_ACTION_FILE$,DISK_NO,0,ERR=8140; OPEN (1003)EMAIL_ACTION_FILE$
8132 WRITE RECORD (1003)"basic=EC3EM0"; WRITE RECORD (1003)"template="+EMAIL_FILE$; WRITE RECORD (1003)"session_id="+SID$; WRITE RECORD (1003)"remove_file=Y" ! SSP212160 jdf      
8133 MESS$="Posting e-mail to send : "+EMAIL_ACTION_FILE$,MTYPE$="EMAIL"; GOSUB 7500
8140 CLOSE (1001); CLOSE (1002); CLOSE (1003)
8145 RETURN 
8150 REM "Send LINE$ to EC3BYB for generic fields processing
8160 CALL "EC3BYB",ERR=8161,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100 ! 227154
8195 RETURN 
8246 REM "get fm1 record
8247 GOSUB SET_READONLY; STOCK$="N"; DIM FM1$(449),FM1(31); READ (Z(7),KEY=ECE$(29,20),DOM=8248)IOL=0370; IF EC$[7](598,1)="Y" THEN FM1(29)=FM1(3); GOTO 8249 ELSE GOTO 8249; REM "162539. SSP186391, added reset of STOCK$ to N, if coming to 8248 from 7560, was set for last item. SSP236926 - set READONLY
8248 STOCK$="N"; READ (Z(7),KEY=EC$[2](51,10)+ECE$(39,10),DOM=8249)IOL=0370; IF FM1$(105,1)="Y" THEN STOCK$="Y" ! SSP170971
8249 GOSUB CLEAR_READONLY; RETURN ! SSP236926 - clear READONLY 
8250 REM "Reads for a worksheet line
8265 DIM EC7$(200),EC7[1]; EC7$(1,13)=ECE$(1,10)+ECE$(25,3); REM "Worksheet #, line #
8270 FIND (Z[22],KEY=EC7$(1,13),DOM=8271)IOL=0420
8275 DIM FM1$(449),FM1[31]; FM1$(1,20)=ECE$(29,20); FIND (Z[7],KEY=ECE$(29,20),DOM=*NEXT)IOL=0370
8280 DIM ECR$(1000); FIND (Z[25],KEY=ECE$(29,20),DOM=*NEXT)IOL=0450 ! SSP#153121
8295 RETURN 
8600 REM "ck if order has approval lines 148750
8601 APPROVAL_LINES$="",NONAPPROVAL_LINES$=""; IF EC_PARM$(946,1)<>"Y" THEN GOTO 8645 ELSE IF POS(EC$[7](593,1)="AY")=0 THEN NONAPPROVAL_LINES$="*"; GOTO 8645; REM "if not activated for customer or at all set nonapproval list to not null
8602 READ (LINECHAN,KEY=WORKSHEET$,DOM=*NEXT)
8603 READ (LINECHAN,END=8609)IOL=0330; IF ECE$(1,LEN(WORKSHEET$))<>WORKSHEET$ THEN GOTO 8609 ELSE READ (Z(24),KEY=ECE$(1,10)+ECE$(25,3),DOM=*NEXT)
8604 READ (Z(24),END=8606)EC0REC$; IF EC0REC$(1,13)<>ECE$(1,10)+ECE$(25,3) THEN GOTO 8603
8605 MM=NUM(EC0REC$(27,5)); IF MM<60 OR M>69 THEN IF POS(EC0REC$(11,3)=NONAPPROVAL_LINES$,3)=0 THEN NONAPPROVAL_LINES$=NONAPPROVAL_LINES$+ECE$(25,3); GOTO 8603 ELSE GOTO 8603 ELSE IF POS(EC0REC$(11,3)=APPROVAL_LINES$,3)=0 THEN APPROVAL_LINES$=APPROVAL_LINES$+EC0REC$(11,3); GOTO 8603 ELSE GOTO 8603
8610 REM "ck status
8616 IF APPROVAL_LINES$="" THEN GOTO 8645; REM "no approval situation (exit)
8617 IF EC$[7](596,1)<>"Y" THEN APPROVAL_LINES$=APPROVAL_LINES$+NONAPPROVAL_LINES$,NONAPPROVAL_LINES$=""; REM "if parm not set to release partial order then set all lines as approval
8618 EXTRACT (HDRCHAN,KEY=WORKSHEET$)IOL=0310; ECD$(55,1)="Y"; WRITE (HDRCHAN,KEY=WORKSHEET$)IOL=0310; WRITE (Z(33),KEY=WORKSHEET$)IOL=0310; REM "flag order for approval and copy to approval hdr EDN
8620 REM "process lines
8622 FOR MM=0 TO LEN(APROVAL_LINES$)/3-1; DIM ECEKEY$(13); ECEKEY$(1,10)=WORKSHEET$,ECEKEY$(11,3)=APPROVAL_LINES$(MM*3+1,3)
8624 DIM ECE(8); READ (LINECHAN,KEY=ECEKEY$,DOM=8630)IOL=0330; REMOVE (LINECHAN,KEY=ECEKEY$); WRITE (Z(34),KEY=ECEKEY$)IOL=0330; GOSUB 4050; REM "move line to approval file
8629 REM "*** insert line replacement here - ie message line indicating removal for approval **
8630 NEXT MM
8645 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNR$(X$)=STR(10000000-NUM(STR(ASC(X$(1,1)))+X$(2)):"0000000")
8950 REM "This line here to avoid error 28 when exiting loops inside 1000's
8960 EXITTO 1090
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
10400 REM "Item price to be retrieved from lots, only if parameter enabled for EC customer - WO 227556
10405 GET_PRICE_FROM_LOTS:
10410 LOT_PRICE=0,LOT_PRICE_FOUND=0,LOT_PRICE_OPTIONS$="W"
10415 IF EC$[7](747,1)<>"Y" OR POS(ECE$(28,1)="CI")=0 THEN GOTO DONE_GPL
10420 LOT_ITEMKEY$=ECE$(29,20); IF NUL(ECE$(29,20)) OR NOT(NUL(ECE$(129,1))) THEN GOTO DONE_GPL ! Abort if no valid item code on line or set to create a PO
10425 DIM ECE_WHSE_LIST$(48); ECE_WHSE_LIST$=STP(ECE$(165,48),2)
10430 CALL "FM2ICF",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},LOT_ITEMKEY$,ECE_WHSE_LIST$,"",0,LOT_PRICE,LOT_PRICE_FOUND,LOT_PRICE_OPTIONS$
10435 DONE_GPL:
10440 IF LOT_PRICE_FOUND AND LOT_PRICE<>0 THEN CALC_ITEM_PRICE=LOT_PRICE,RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
10445 RETURN 
10449 ! 
12000 LINE_UNIT_PRICE_OVERRIDE:! 281341
12020 IF ECE[2]>0 THEN CALC_ITEM_PRICE=ECE[2],RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
12045 RETURN 
12049 ! 
56000 REM "200152-Issue with pa_notification_body.htm, tag 3p_text[1]
56002 REM "201193-Questions about security of Boars Head EC Promo site.       
56004 REM "212160-Webec is down.  Cannot use 64 character session id          
56006 REM "227154-Modify EC3BYB to support a condition tag : ?tf?if?[expr]    
56008 REM "244850-3p_proof_url tag logic into EC3EM1                          
56009 REM "246150-Item price and total price tags not supported currently  
56010 REM "253673-pa_notification_body page uses qty_in_eaches, not working   
56012 REM "254444-Email address isn't displaying on the Approval Notification 
56013 REM "282335-Approval email confirmation for Quick Item Entry feature is 
56014 REM "289039-Third party artwork URLs not displayed through standard 3p  
56016 REM "307354-DBD-178 DBSPT-117394 (041-EC3EM1-66225) Approval Email      
