0010 REM "EC Create Variable Print email to Vendor<EC3VP1>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 10/17/17 - 14.419444 - dmm - SSP# 290559
0037 REM "290559-FlowPoint; 3p_full_url tag, files by worksheet and order.   
0040 REM "Copyright 2017 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3VP1",X1$="Create Variable Print Email to Vendor"
0120 EOL$=$0D0A$; REM EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0150 REM "EC$[1]=ESB session record, EC$[2]=client number        , ec$[3]=message from server to called program, EC$[4]=formatted date, EC$[5]=formatted time EC$[6]=ECA2$ available web catalogs (concatonated string) EC$[7]=customer webec parms (ECS)  EC$[8]=image path (customer if set otherwise from ec_parm) EC$[9]=ST_LIST sort code record EC$[10]=reporting whse list EC$[11]=(1,4)warehouse code to use for o/e FM2RT0  (5,4)=would contain the 'other'warehouse for availability checking o/e messaging <not passed to FM2RT0, EC$[12]=email params,see 8000s [13] UNUSED ,[14]=ECY$, [15]=inventory system parameters [16]=Credict Card code/desc list [17]=active webcode [18-20] unused                                                                 
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O FS2... 02O EC8... 03O EML... 04O EC6... 05O FS1... 13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0900 PRINT_DOC=0
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1025 SWITCH TAG$ ! 1185 end switch
1030 CASE "print_doc"; PRINT_DOC=1; BREAK
1035 CASE "template"; TEMPLATE$=VALUE$; BREAK
1040 CASE "order"; ORDER$=VALUE$; BREAK
1045 CASE "order_line"; ORDER_LINE$=VALUE$; BREAK
1185 END SWITCH ! 1050
1190 NEXT I
1195 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="999999.20040601",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1200 ! Check parm, if doing only one email per vendor, then check FS1 for flag, if set then don't process file, if not set, then set it so any other files for this order out there won't get processed.  WO178946
1202 IF EC_PARM$(1137,1)="Y" THEN READ RECORD (Z[5],KEY=ORDER$,DOM=9900)FS1$; IF FS1$(282,1)="Y" THEN GOTO 9900 ELSE FS1$(282,1)="Y"; WRITE RECORD (Z[5],KEY=ORDER$)FS1$; GOSUB CREATE_LINES_FILE
1203 IF EC_PARM$(1137,1)="Y" THEN GOSUB GET_NEXT_VENDOR
1204 ! if FS2 or EC8 are missing the just leave
1205 DIM FS2$(228); FIND (Z[1],KEY=ORDER$+ORDER_LINE$,DOM=9900)FS2$(1)
1207 CALL "ZZDISP","AX",FS2$(94,10),"A/P",X3$,VENDOR$,"",0,0,X4$
1208 CALL "ZZDISP","AX",FS2$(147,8)+FS2$(9,1),"P/O",X3$,PO_CODE$,"",0,0,X4$
1209 CALL "ZZDISP","AX",FS2$(147,8),"O/P",X3$,ORD_NUM$,"",0,0,X4$
1210 DIM EC8$(200); FIND (Z[2],KEY=ORDER$+ORDER_LINE$,DOM=9900)EC8$(1)
1213 DIM EC6$(900); FIND (Z[4],KEY=PAD("PROOF",10),DOM=*NEXT)EC6$(1)
1215 ! if no vendor PROOF email address in EML then leave. Note we are sending only 1 email
1220 DIM EML$(160); FIND (Z[3],KEY="VN"+PAD(FS2$(94,10)+FS2$(90,4),20)+PAD("PROOF",10),KNO=2,DOM=9900)EML$
1225 EMAIL_ADDR$=STP(EML$(41,60)); IF STP(EMAIL_ADDR$,3)="" THEN IF EC_PARM$(1137,1)="Y" THEN GOTO 1203 ELSE GOTO 9900 ! SSP184259, if no email address in EML record, then we are done with this vendor.
1228 TMP=FN%_LOG_MESSAGE("MESG","Variable Print Proof Email|ORDER|"+ORDER$+"|LINE|"+ORDER_LINE$+"|PO|"+PO_CODE$+"|VENDOR|"+VENDOR$+"|PLANT|"+FS2$(90,4)+"|ADDR|"+EMAIL_ADDR$+"|")
1229 ! Get PROOF subject line in PROOF_TEXT$[1] and PROOF email body in PROOF_TEXT$[2]
1230 DIM PROOF_TEXT$[4]; BYF_OPTIONS$="Y",ETEXT_NEEDED$=PAD("PROOF",10)+"00001"+PAD("PROOF",10)+"00002"+PAD("PROOF",10)+"00003"+PAD("PROOF",10)+"00004"; CALL "EC3BYF",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,ETEXT_NEEDED$,PROOF_TEXT${ALL},BYF_OPTIONS$; REM "PROOF_TEXT 1=subject line, 2=email body
1234 ! Get Email start and Email end text
1250 ! Process PROOF_TEXT, setting SUBJECT$ to results of PROOF_TEXT[1], then process EMAIL_TEXT, then write out to temp file, and send 
1255 TEXT_TO_DO$=PROOF_TEXT$[2]; GOSUB PROCESS_TEXT; SUBJECT$=TEXT_DONE$
1257 TEXT_TO_DO$=PROOF_TEXT$[3]; GOSUB PROCESS_TEXT; EMAIL_BODY$=TEXT_DONE$
1258 TEXT_TO_DO$=PROOF_TEXT$[1]; GOSUB PROCESS_TEXT; EMAIL_HEADER$=TEXT_DONE$ ! requires SUBJECT$ to be set by now
1259 TEXT_TO_DO$=PROOF_TEXT$[4]; GOSUB PROCESS_TEXT; EMAIL_FOOTER$=TEXT_DONE$
1300 ! Create email file
1305 TMP_CHAN=HFN
1310 PRECISION 5; TMP_FILE$=%SERVER_DIR$+"PROOF_"+STR(INT(RND*100000)); PRECISION 2; SERIAL TMP_FILE$,ERR=*SAME
1315 OPEN (TMP_CHAN)TMP_FILE$
1318 TMP=FN%_LOG_MESSAGE("MESG","Variable Print Proof Email|ORDER|"+ORDER$+"|LINE|"+ORDER_LINE$+"|TMP_FILE|"+TMP_FILE$+"|")
1320 WRITE RECORD (TMP_CHAN)EMAIL_HEADER$
1325 WRITE RECORD (TMP_CHAN)EMAIL_BODY$
1330 WRITE RECORD (TMP_CHAN)EMAIL_FOOTER$
1345 CLOSE (TMP_CHAN)
1350 ! Send the email
1355 ! CMD$="/usr/lib/sendmail -t < "+TMP_FILE$ ! 232226
1360 ! INVOKE CMD$ ! 232226
1361 CALL "EC3EML",X3$,X4$,EC_PARM$,TMP_FILE$ ! 232226
1362 TMP=FN%_LOG_MESSAGE("MESG","Variable Print Proof Email|ORDER|"+ORDER$+"|LINE|"+ORDER_LINE$+"|TMP_FILE|"+TMP_FILE$+"|SEND_DONE|")
1365 ! ERASE TMP_FILE$,ERR=*NEXT ! 232226
1495 IF EC_PARM$(1137,1)="Y" THEN GOTO 1203 ELSE GOTO 9900
1500 PROCESS_TEXT:
1501 ! Modified to call routine, will take in TEXT_TO_DO$ and return TEXT_DONE$ with tags replaced by values
1502 ! put list of tags in DATA statement at line 2805 for PRINT_DOC processing
1503 ! status and status_msg are given as examples
1510 IF PRINT_DOC THEN READ DATA LINE$,ERR=2950 ELSE LINE$=TEXT_TO_DO$,TEXT_TO_DO$=""; GOSUB BYB_PROCESSING
1515 CHKTAG=1
1520 WHILE CHKTAG ! 2800 wend
1522 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
1530 TAG$=LINE$(P1,MSL); LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
1600 SWITCH TAG$ ! 2790 end switch
1610 CASE "?tf?status?"
1615 IF PRINT_DOC THEN TAGDESC$="Status code, 0=ok"; GOSUB 5000 ELSE LINE$=LINE1$+STR(STATUS)+LINE2$
1619 BREAK
1620 CASE "?tf?status_msg?"
1625 IF PRINT_DOC THEN TAGDESC$="Status message relating to status code"; GOSUB 5000 ELSE LINE$=LINE1$+STR(STATUS_MSG$)+LINE2$
1629 BREAK
1630 CASE "?tf?subject?"
1632 IF PRINT_DOC THEN TAGDESC$="Subject line of email for Variable Print Proof"; GOSUB 5000 ELSE LINE$=LINE1$+SUBJECT$+LINE2$
1634 BREAK
1635 CASE "?tf?email?"
1637 IF PRINT_DOC THEN TAGDESC$="PROOF Email Address for Vendor on this Order Line"; GOSUB 5000 ELSE LINE$=LINE1$+EMAIL_ADDR$+LINE2$
1639 BREAK
1640 CASE "?tf?po_no?"
1642 IF PRINT_DOC THEN TAGDESC$="P/O number of the proof"; GOSUB 5000 ELSE LINE$=LINE1$+PO_CODE$+LINE2$
1644 BREAK
1645 CASE "?tf?po_line?"
1647 IF PRINT_DOC THEN TAGDESC$="Line number of the P/O for this proof"; GOSUB 5000 ELSE LINE$=LINE1$+ORDER_LINE$+LINE2$
1649 BREAK
1650 CASE "?tf?proof_file?"
1652 IF PRINT_DOC THEN TAGDESC$="Name of the proof file"; GOSUB 5000 ELSE LINE$=LINE1$+STP(EC8$(22,20))+LINE2$
1654 BREAK
1655 CASE "?tf?proof_url?"
1657 IF PRINT_DOC THEN TAGDESC$="Full URL to proof file"; GOSUB 5000 ELSE LINE$=LINE1$+STP(EC6$(141,60))+"/"+STP(EC8$(22,20))+LINE2$
1659 BREAK
1660 CASE "?tf?vendor_url?"
1662 IF PRINT_DOC THEN TAGDESC$="URL for vendors to use"; GOSUB 5000 ELSE LINE$=LINE1$+STP(EC6$(201,60))+LINE2$
1664 BREAK
1670 CASE "?tf?proof_2_file?"
1672 IF PRINT_DOC THEN TAGDESC$="Name of the second proof file"; GOSUB 5000 ELSE LINE$=LINE1$+STP(EC8$(42,20))+LINE2$
1674 BREAK
1675 CASE "?tf?proof_2_url?"
1677 IF PRINT_DOC THEN TAGDESC$="Full URL to second proof file"; GOSUB 5000 ELSE LINE$=LINE1$+STP(EC6$(141,60))+"/"+STP(EC8$(42,20))+LINE2$
1679 BREAK
1680 CASE "?tf?proof_3_file?"
1682 IF PRINT_DOC THEN TAGDESC$="Name of the third proof file"; GOSUB 5000 ELSE LINE$=LINE1$+STP(EC8$(62,50))+LINE2$
1684 BREAK
1685 CASE "?tf?proof_3_url?"
1687 IF PRINT_DOC THEN TAGDESC$="Full URL to third proof file"; GOSUB 5000 ELSE LINE$=LINE1$+STP(EC6$(141,60))+"/"+STP(EC8$(62,50))+LINE2$
1689 BREAK
1690 CASE "?tf?linestart?"
1692 GOSUB PROCESS_LINE_TEXT; LINE$=LINE1$+LINES_SECTION$+LINE2$
1694 BREAK
1695 CASE "?tf?order_no?"
1697 IF PRINT_DOC THEN TAGDESC$="Order number"; GOSUB 5000 ELSE LINE$=LINE1$+ORD_NUM$+LINE2$
1699 BREAK
1700 CASE "?tf?item_code?"
1702 IF PRINT_DOC THEN TAGDESC$="Item Code"; GOSUB 5000 ELSE LINE$=LINE1$+STP(FS2$(19,10),1)+LINE2$
1704 BREAK
1705 CASE "?tf?item_desc?"
1707 IF PRINT_DOC THEN TAGDESC$="Item Description"; GOSUB 5000 ELSE LINE$=LINE1$+STP(FS2$(50,40),1)+LINE2$
1709 BREAK
1710 CASE "?tf?3p_full_url?" ! SSP290559
1715 IF PRINT_DOC THEN TAGDESC$="3p Full URL"; GOSUB 5000 ELSE GOSUB GET_EEM_FULL_URL; LINE$=LINE1$+FN%HTML_ESC$(STP(EEM_FULL_URL$))+LINE2$ ! SSP290559
1720 BREAK
2785 DEFAULT ; LINE$=LINE1$+LINE2$
2790 END SWITCH ! 1600
2800 WEND ! 1520
2805 DATA "?tf?status?","?tf?status_msg?"
2990 TEXT_DONE$=LINE$,LINE$=""
2995 RETURN 
2999 ! ********************************************************
5000 REM print tag desc html         
5010 LINE$=TAG$+" "+TAGDESC$
5090 RETURN 
5100 ADD_MSG_TO_LOG:! Add message to log file
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+ECD$(1,10)+"|LINE|"+ECE$(25,3)+"|MESSAGE NO|"+STR(MESSAGE_NO:"00000")+"|MESSAGE|"+MESSAGE$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
5500 PROCESS_LINE_TEXT:
5505 ! Copied from PROCESS_TEXT section for WO178946.  We will do one email per vendor, they need linestart/lineend in body template.  Some of these tags don't make sense for this section, just left them in.
5510 ! put list of tags in DATA statement at line 6805 for PRINT_DOC processing
5515 ! status and status_msg are given as examples
5516 P2=POS("?tf?lineend?"=LINE2$)
5517 LS_TEMPLATE$=LINE2$(1,P2-1),LINE2$=LINE2$(P2+12)
5520 LINES_SECTION$=""
5525 GOSUB GET_LINE_DATA
5530 LS$=LS_TEMPLATE$
5535 GOSUB LINE_BYB_PROCESSING
5580 LINE_CHKTAG=1
5585 WHILE LINE_CHKTAG ! 6800 wend
5590 P1=MSK(LS$,"\?tf\?[^?]*\?"); IF P1=0 THEN LINE_CHKTAG=0; BREAK
5595 TAG$=LS$(P1,MSL); LS1$=LS$(1,P1-1),LS2$=MID(LS$,P1+MSL)
5600 SWITCH TAG$ ! 2790 end switch
5605 CASE "?tf?status?"
5610 IF PRINT_DOC THEN TAGDESC$="Status code, 0=ok"; GOSUB 5000 ELSE LS$=LS1$+STR(STATUS)+LS2$
5615 BREAK
5620 CASE "?tf?status_msg?"
5625 IF PRINT_DOC THEN TAGDESC$="Status message relating to status code"; GOSUB 5000 ELSE LS$=LS1$+STR(STATUS_MSG$)+LS2$
5630 BREAK
5635 CASE "?tf?subject?"
5640 IF PRINT_DOC THEN TAGDESC$="Subject line of email for Variable Print Proof"; GOSUB 5000 ELSE LS$=LS1$+SUBJECT$+LS2$
5645 BREAK
5650 CASE "?tf?email?"
5655 IF PRINT_DOC THEN TAGDESC$="PROOF Email Address for Vendor on this Order Line"; GOSUB 5000 ELSE LS$=LS1$+EMAIL_ADDR$+LS2$
5660 BREAK
5665 CASE "?tf?po_no?"
5670 IF PRINT_DOC THEN TAGDESC$="P/O number of the proof"; GOSUB 5000 ELSE LS$=LS1$+STP(PO_CODES$,1,",")+LS2$
5675 BREAK
5680 CASE "?tf?po_line?"
5685 IF PRINT_DOC THEN TAGDESC$="Line number of the P/O for this proof"; GOSUB 5000 ELSE LS$=LS1$+STP(ORDER_LINES$,1,",")+LS2$
5690 BREAK
5695 CASE "?tf?proof_file?"
5700 IF PRINT_DOC THEN TAGDESC$="Name of the proof file"; GOSUB 5000 ELSE LS$=LS1$+STP(PROOF_1S$,1,",")+LS2$
5705 BREAK
5710 CASE "?tf?proof_url?"
5715 IF PRINT_DOC THEN TAGDESC$="Full URL to proof file"; GOSUB 5000 ELSE LS$=LS1$+STP(EC6$(141,60))+"/"+STP(EC8$(22,20))+LS2$
5720 BREAK
5725 CASE "?tf?vendor_url?"
5730 IF PRINT_DOC THEN TAGDESC$="URL for vendors to use"; GOSUB 5000 ELSE LS$=LS1$+STP(EC6$(201,60))+LS2$
5735 BREAK
5740 CASE "?tf?proof_2_file?"
5745 IF PRINT_DOC THEN TAGDESC$="Name of the second proof file"; GOSUB 5000 ELSE LS$=LS1$+STP(PROOF_2S$,1,",")+LS2$
5750 BREAK
5755 CASE "?tf?proof_2_url?"
5760 IF PRINT_DOC THEN TAGDESC$="Full URL to second proof file"; GOSUB 5000 ELSE LS$=LS1$+PROOF_2URLS$+LS2$ ! 231792
5765 BREAK
5770 CASE "?tf?proof_3_file?"
5775 IF PRINT_DOC THEN TAGDESC$="Name of the third proof file"; GOSUB 5000 ELSE LS$=LS1$+PROOF_3S$+LS2$
5780 BREAK
5785 CASE "?tf?proof_3_url?"
5790 IF PRINT_DOC THEN TAGDESC$="Full URL to third proof file"; GOSUB 5000 ELSE LS$=LS1$+STP(EC6$(141,60))+"/"+PROOF_3S$+LS2$
5795 BREAK
5800 CASE "?tf?3p_full_url?" ! SSP290559
5805 IF PRINT_DOC THEN TAGDESC$="3p Full URL"; GOSUB 5000 ELSE GOSUB GET_EEM_FULL_URL2; LS$=LS1$+FN%HTML_ESC$(STP(EEM_FULL_URL$))+LS2$ ! SSP290559
5810 BREAK
6785 DEFAULT ; LS$=LS1$+LS2$
6790 END SWITCH ! 1600
6800 WEND ! 5585
6805 DATA "?tf?status?","?tf?status_msg?"
6990 LINES_SECTION$=LINES_SECTION$+LS$; IF END_OF_RECORDS OR DONE_WITH_VENDOR THEN GOTO *RETURN ELSE GOTO 5525
6995 RETURN 
7500 CREATE_LINES_FILE:
7505 ! Record will be Vendor, Plant, proof file 3, order line, po code, 3rd party id, proof file 1, proof file 2.  Key will be Vendor, Plant, Proof file 3, Order line
7510 MEM=HFN; CLOSE (MEM); OPEN (MEM)"*MEMORY*"
7515 READ (Z[2],KEY=ORDER$,DOM=*NEXT)
7520 K$=KEY(Z[2],END=7585); READ (Z[2],KEY=K$)EC8_REC$
7525 IF K$(1,8)<>ORDER$ THEN GOTO 7585
7530 READ (Z[1],KEY=EC8_REC$(1,11),DOM=9900)FS2_REC$
7535 RECORD$=FS2_REC$(94,10)+FS2_REC$(90,4)+EC8_REC$(62,50)+EC8_REC$(9,3)+FS2_REC$(9,1)+EC8_REC$(12,10)+EC8_REC$(22,20)+EC8_REC$(42,20)
7545 WRITE (MEM,KEY=RECORD$(1,67))RECORD$
7550 GOTO 7520
7585 READ (MEM,KEY="",DOM=*NEXT)
7590 RETURN 
7595 ! 
7600 GET_NEXT_VENDOR:
7605 DONE_WITH_VENDOR=0
7610 K$=KEY(MEM,END=9900); READ (MEM,KEY=K$)MEM_REC$
7615 VENDOR_PLANT$=K$(1,14)
7620 FIRST_INFO3$=K$(15,50)
7625 ORDER_LINE$=K$(65,3)
7635 VENDOR_PLANT_INFO3$=K$(1,64)
7640 RETURN 
7645 ! 
7700 GET_LINE_DATA:
7705 PO_CODES$="",ORDER_LINES$="",PROOF_1S$="",PROOF_2S$="",PROOF_3S$="",PROOF_2URLS$="" ! 231792
7710 READ (MEM,KEY=VENDOR_PLANT_INFO3$,DOM=*NEXT)
7715 K1$=KEY(MEM,END=*NEXT); READ (MEM,KEY=K1$)MEM_REC$; GOTO 7720
7716 END_OF_RECORDS=1; GOTO *RETURN
7720 IF K1$(1,14)<>VENDOR_PLANT$ THEN DONE_WITH_VENDOR=1; READ (MEM,KEY=LAST_KEY$,DOM=*RETURN); GOTO *RETURN
7725 IF K1$(1,64)<>VENDOR_PLANT_INFO3$ THEN VENDOR_PLANT_INFO3$=K1$(1,64); READ (MEM,KEY=LAST_KEY$,DOM=*RETURN); GOTO *RETURN
7740 PO_CODES$+=MEM_REC$(68,1)+","
7745 ORDER_LINES$+=MEM_REC$(65,3)+","
7750 PROOF_1S$+=STP(MEM_REC$(79,20),1)+","
7755 PROOF_2S$+=STP(MEM_REC$(99,20),1)+","
7760 PROOF_3S$=STP(MEM_REC$(15,50),1)
7765 PROOF_2URLS$+="<A HREF="+QUO+STP(EC6$(141,60))+"/"+STP(MEM_REC$(99,20),1)+QUO+">"+STP(EC6$(141,60))+"/"+STP(MEM_REC$(99,20),1)+"</A><BR>" ! 231792
7785 LAST_KEY$=K1$; GOTO 7715
7790 RETURN 
7795 ! 
7800 GET_EEM_FULL_URL:! SSP290559, get full url from EEM using ECGM3H
7810 EEM_FULL_URL$=""; CALL "ECGM3H;GET_EEM_REC",ERR=*NEXT,X3$,X4$,FS2$(147,8),FS2$(6,3),"01",EEM_FULL_URL$,ECGM3H_OPTIONS$
7845 RETURN 
7849 ! 
7850 GET_EEM_FULL_URL2:! SSP290559, get full url from EEM using ECGM3H
7860 EEM_FULL_URL$=""; CALL "ECGM3H;GET_EEM_REC",ERR=*NEXT,X3$,X4$,ORDER$,STP(ORDER_LINES$,1,","),"01",EEM_FULL_URL$,ECGM3H_OPTIONS$
7895 RETURN 
7899 ! 
8150 BYB_PROCESSING:! Send LINE$ to EC3BYB for generic fields processing
8160 CALL "EC3BYB",ERR=8161,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$
8195 RETURN 
8250 LINE_BYB_PROCESSING:! Send linestart/lineend portion to EC3BYB for generic fields processing
8260 CALL "EC3BYB",ERR=8161,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LS$,BYBINFO${ALL},BYBOPTIONS$
8290 RETURN 
8295 ! 
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 IF MEM>0 THEN CLOSE (MEM)
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56000 ! Program changes starting 03/13/06
56010 REM "193625-Web.ec tags usable in VPO "vendor proof" email body?
56011 REM "231792-Vendor proof emails are not showing the quantities ordered  
56013 REM "232226-Programming changes to allow customized interfacing with    
56014 REM "290559-FlowPoint; 3p_full_url tag, files by worksheet and order.   
