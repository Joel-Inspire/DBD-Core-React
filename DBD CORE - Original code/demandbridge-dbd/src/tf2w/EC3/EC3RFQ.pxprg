0010 REM "EC RFQ Processing <EC3RFQ>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 12/07/12 - 13.053611 - crg - SSP# 259622
0037 REM "259622-EC RFQ, View Item Specifications, get err 12-EC3VWF-1505.   
0040 REM "Copyright 2012 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3RFQ",X1$="EC RFQ Processing"
0120 EOL$=$0D0A$; REM EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0140 DIM MESS_INFO$[20] ! ,EC_PARM$(1275)
0150 REM "EC$[1]=ESB session record, EC$[2]=client number        , ec$[3]=message from server to called program, EC$[4]=formatted date, EC$[5]=formatted time EC$[6]=ECA2$ available web catalogs (concatonated string) EC$[7]=customer webec parms (ECS)  EC$[8]=image path (customer if set otherwise from ec_parm) EC$[9]=ST_LIST sort code record EC$[10]=reporting whse list EC$[11]=(1,4)warehouse code to use for o/e FM2RT0  (5,4)=would contain the 'other'warehouse for availability checking o/e messaging <not passed to FM2RT0, EC$[12]=email params,see 8000s [13] UNUSED ,[14]=ECY$, [15]=inventory system parameters [16]=Credict Card code/desc list [17]=active webcode [18-20] unused                                                                 
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O QSA... 02O QSB... 03O QSC... 04O QSD... 07OSQSD... 13O ZZPARM"
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1025 SWITCH TAG$ ! 1185 end switch
1035 CASE "template"; TEMPLATE$=VALUE$; BREAK
1040 CASE "vendor"; VENDOR$=VALUE$; BREAK ! Must be full 10 char TF format
1045 CASE "rfq"; RFQ$=VALUE$; BREAK
1050 CASE "delivery"; DELIVERY$=VALUE$; BREAK
1055 CASE "comment"; COMMENT$=VALUE$; BREAK
1060 CASE "cost_1"; COST_1$=VALUE$; BREAK
1065 CASE "cost_2"; COST_2$=VALUE$; BREAK
1070 CASE "cost_3"; COST_3$=VALUE$; BREAK
1075 CASE "cost_4"; COST_4$=VALUE$; BREAK
1080 CASE "cost_5"; COST_5$=VALUE$; BREAK
1085 CASE "vend_quote_num"; VEND_QUOTE_NUM$=VALUE$; BREAK
1090 CASE "rfq_line"; RFQ_LINE$=VALUE$; BREAK
1095 CASE "update_rfq"; IF VALUE$="Y" THEN UPDATE_RFQ=1 END_IF ; BREAK
1100 CASE "qsd_key"; QSD_KEY$=VALUE$; BREAK
1105 CASE "no_bid"; IF VALUE$="Y" THEN NO_BID=1 END_IF ; BREAK
1110 CASE "working_days_1"; WORKING_DAYS_1$=VALUE$; BREAK ! WO229740
1115 CASE "working_days_2"; WORKING_DAYS_2$=VALUE$; BREAK ! WO229740
1120 CASE "working_days_3"; WORKING_DAYS_3$=VALUE$; BREAK ! WO229740
1125 CASE "working_days_4"; WORKING_DAYS_4$=VALUE$; BREAK ! WO229740
1130 CASE "working_days_5"; WORKING_DAYS_5$=VALUE$; BREAK ! WO229740
1180 DEFAULT ; VIA TAG$=VALUE$; BREAK ! Set to same name variable as TAG$
1185 END SWITCH ! 1050
1190 NEXT I
1195 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="181797.20050315",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1210 ! perform any data creation function here - update a worksheet, etc
1220 IF NOT(NUL(RFQ$)) THEN START_RFQ$=RFQ$,END_RFQ$=RFQ$ ELSE START_RFQ$=DIM(8),END_RFQ$=DIM(8,$FE$)
1225 IF NUL(VENDOR$) THEN VENDOR$=EC$[2](888,10) ! This is normal case, get Vendor from buyer
1250 IF UPDATE_RFQ THEN {
1260 DIM QSD$:IOL(Z[4]); READ DATA FROM DIM(LEN(QSD$)),REC=QSD$ TO IOL=IOL(QSD$); EXTRACT (Z[4],KEY=QSD_KEY$,DOM=QSD_NOT_FOUND,REC=QSD$)
1265 IF NO_BID THEN {
1270 QSD.VEND_QUOTE_NUM$=PAD("NOBID",10),QSD.DELIVERY$=DIM(10),QSD.TF_COMMENT$=DIM(20),QSD.COMMENT_2$=DIM(15) ! 229136
1275 QSD.COST_QTY_BREAK_1=0,QSD.COST_QTY_BREAK_2=0,QSD.COST_QTY_BREAK_3=0,QSD.COST_QTY_BREAK_4=0,QSD.COST_QTY_BREAK_5=0
1277 QSD.WORKING_DAYS_1=0,QSD.WORKING_DAYS_2=0,QSD.WORKING_DAYS_3=0,QSD.WORKING_DAYS_4=0,QSD.WORKING_DAYS_5=0 ! WO229740
1280  } ELSE {
1285 QSD.VEND_QUOTE_NUM$=VEND_QUOTE_NUM$
1290 QSD.DELIVERY$=DELIVERY$
1295 QSD.TF_COMMENT$=MID(COMMENT$,1,20),QSD.COMMENT_2$=MID(COMMENT$,21) ! 229136
1300 QSD.COST_QTY_BREAK_1=NUM(COST_1$,ERR=*PROCEED); QSD.COST_QTY_BREAK_2=NUM(COST_2$,ERR=*PROCEED),QSD.COST_QTY_BREAK_3=NUM(COST_3$,ERR=*PROCEED),QSD.COST_QTY_BREAK_4=NUM(COST_4$,ERR=*PROCEED),QSD.COST_QTY_BREAK_5=NUM(COST_5$,ERR=*PROCEED)
1302 QSD.WORKING_DAYS_1=NUM(WORKING_DAYS_1$,ERR=*PROCEED),QSD.WORKING_DAYS_2=NUM(WORKING_DAYS_2$,ERR=*PROCEED),QSD.WORKING_DAYS_3=NUM(WORKING_DAYS_3$,ERR=*PROCEED),QSD.WORKING_DAYS_4=NUM(WORKING_DAYS_4$,ERR=*PROCEED),QSD.WORKING_DAYS_5=NUM(WORKING_DAYS_5$,ERR=*PROCEED) ! WO229740
1305  }
1315 TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|EC3RFQ|Updating QSD information|QSD_KEY|"+QSD_KEY$+"|")
1320 WRITE (Z[4],KEY=QSD_KEY$,REC=QSD$)
1330 IF EC_PARM$(1177,1)="Y" THEN SID$=EC$[1](1,7) ELSE SID$=EC$[1](1213,64) ! SSP212160 jdf
1340 CALL "EC3EMA",X3$,X4$,"*",EC$[1](8,15),"","EC3RFE","",EC$[14](1,15),"email_type=VENDOR|session_id="+SID$+"|qsd_key="+QSD_KEY$+"|remove_file=Y|no_header=Y|",RETURN_CODE ! SSP212160 jdf
1341 TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|EC3RFQ|Setting up VENDOR email|QSD_KEY|"+QSD_KEY$+"|RETURN_CODE|"+STR(RETURN_CODE)+"|")
1345 CALL "EC3EMA",X3$,X4$,"*",EC$[1](8,15),"","EC3RFE","",EC$[14](1,15),"email_type=CSR|session_id="+SID$+"|qsd_key="+QSD_KEY$+"|remove_file=Y|no_header=Y|",RETURN_CODE ! SSP212160 jdf
1347 TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|EC3RFQ|Setting up CSR email|QSD_KEY|"+QSD_KEY$+"|RETURN_CODE|"+STR(RETURN_CODE)+"|")
1350  }
1355 QSD_NOT_FOUND:
1503 ! status and status_msg are given as examples
1504 IF NOT(NUL(%BASIC2$)) THEN GOTO 2990 ! Skip outputting template if additional program to be done
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1510 READ (100,END=2950)LINE$; LINE$=FNBYB$(LINE$)
1515 CHKTAG=1
1520 WHILE CHKTAG ! 2800 wend
1522 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
1530 TAG$=LINE$(P1,MSL); LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
1600 SWITCH TAG$ ! 2790 end switch
1610 CASE "?tf?rfq_list_start?"; GOSUB PROCESS_TABLE_TEXT; LINE$=TABLE_SECTION$; BREAK
1629 BREAK
2785 DEFAULT ; LINE$=LINE1$+LINE2$ ! didn't match existing tag, so remove it
2790 END SWITCH ! 1600
2800 WEND ! 1520
2810 IF LINE$<>"" THEN PRINT (OUTPUT)LINE$
2900 GOTO 1510; REM next read 
2990 GOTO 9900
3000 PROCESS_BREAKS:! add code for the sell break section called from PROCESS_TABLE
3005 BREAK_SECTION$="",SELL_BREAK_MASK$="##,###,###",COST_MASK$="##,###,###.00",DAYS_MASK$="##,###" ! WO229740
3010 TMP=POS("?tf?sell_break_end?"=TL2$); PB_TEMPLATE$=FNBYB$(MID(TL2$,1,TMP-1)),TL2$=MID(TL2$,TMP)
3050 FOR BREAK_NUMBER=1 TO 5
3055 BREAK_NUMBER$=STR(BREAK_NUMBER)
3060 IF VIN(QSB$,"sell_break_"+BREAK_NUMBER$,ERR=*BREAK)=0 THEN BREAK ! leave after finding first break without quantity 
3070 PB_LINE$=PB_TEMPLATE$,PB_CHKTAG=1
3075 WHILE PB_CHKTAG
3090 P1=MSK(PB_LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN PB_CHKTAG=0; BREAK
3095 TAG$=PB_LINE$(P1,MSL); PB1$=PB_LINE$(1,P1-1),PB2$=MID(PB_LINE$,P1+MSL)
3100 SWITCH TAG$
3110 CASE "?tf?sell_break?"; PB_LINE$=PB1$+FNM$(VIN(QSB$,"SELL_BREAK_"+BREAK_NUMBER$,ERR=*PROCEED),SELL_BREAK_MASK$)+PB2$; BREAK
3115 CASE "?tf?cost?"; PB_LINE$=PB1$+FNM$(VIN(QSD$,"COST_QTY_BREAK_"+BREAK_NUMBER$,ERR=*PROCEED),COST_MASK$)+PB2$; BREAK
3120 CASE "?tf?break_number?"; PB_LINE$=PB1$+BREAK_NUMBER$+PB2$; BREAK
3125 CASE "?tf?rfq_key?"; PB_LINE$=PB1$+QSB.QUOTE_DIV$+QSB.QUOTE_NUM$+PB2$; BREAK ! 229739
3130 CASE "?tf?working_days?"; PB_LINE$=PB1$+FNM$(VIN(QSD$,"WORKING_DAYS_"+BREAK_NUMBER$,ERR=*PROCEED),DAYS_MASK$)+PB2$; BREAK ! WO229740
3340 DEFAULT ; PB_LINE$=PB1$+PB2$
3345 END SWITCH 
3350 WEND 
3360 BREAK_SECTION$+=PB_LINE$
3395 NEXT BREAK_NUMBER
3495 RETURN 
3499 ! ****************************************************
5100 ADD_MSG_TO_LOG:! Add message to log file
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+ECD$(1,10)+"|LINE|"+ECE$(25,3)+"|MESSAGE NO|"+STR(MESSAGE_NO:"00000")+"|MESSAGE|"+MESSAGE$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
5500 PROCESS_TABLE_TEXT:
5505 TL_TEMPLATE$=LINE$; TABLE_SECTION$="",END_OF_RECORDS=0,QSD_RECORDS_FOUND=0
5510 READ (100,END=*NEXT)TABLE_LINE$; TL_TEMPLATE$+=FNBYB$(TABLE_LINE$)+EOL$; IF POS("?tf?rfq_list_end?"=TABLE_LINE$)=0 THEN GOTO *SAME
5514 READ (Z[4],KNO=2,KEY=VENDOR$+DIM(10)+START_RFQ$,DOM=*NEXT)
5515 GOSUB GET_TABLE_DATA
5520 WHILE NOT(END_OF_RECORDS)
5530 TABLE_LINE$=TL_TEMPLATE$
5580 TABLE_CHKTAG=1
5585 WHILE TABLE_CHKTAG ! 6800 wend
5590 P1=MSK(TABLE_LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN TABLE_CHKTAG=0; BREAK
5595 TAG$=TABLE_LINE$(P1,MSL); TL1$=TABLE_LINE$(1,P1-1),TL2$=MID(TABLE_LINE$,P1+MSL)
5600 SWITCH TAG$ ! 6790 end switch
5605 CASE "?tf?rfq?"; TABLE_LINE$=TL1$+FN%ZZDISP$(QSD.QUOTE_DIV$+QSD.QUOTE_NUM$,"O/P")+TL2$; BREAK
5610 CASE "?tf?rfq_line?"; TABLE_LINE$=TL1$+QSD.QUOTE_LINE_NUM$+TL2$; BREAK
5615 CASE "?tf?vendor?"; TABLE_LINE$=TL1$+FN%ZZDISP$(QSD.VEND_DIV$+QSD.VEND_CODE$,"A/P")+TL2$; BREAK
5620 CASE "?tf?delivery?"; TABLE_LINE$=TL1$+QSD.DELIVERY$+TL2$; BREAK
5625 CASE "?tf?comment?"; TABLE_LINE$=TL1$+QSD.TF_COMMENT$+QSD.COMMENT_2$+TL2$; BREAK ! 229136
5630 CASE "?tf?um?"; TABLE_LINE$=TL1$+STP(STP(QSB.SELL_UM$)+"/"+STP(STR(QSB.SELL_QTY_PER:"###,###"),2))+TL2$; BREAK
5635 CASE "?tf?cost_um?"; TABLE_LINE$=TL1$+STP(STP(QSC.COST_UM$)+"/"+STP(STR(QSC.COST_QTY_PER:"###,###"),2))+TL2$; BREAK ! SSP 229739
5640 CASE "?tf?sell_break_start?"; GOSUB PROCESS_BREAKS; TABLE_LINE$=TL1$+BREAK_SECTION$+TL2$; BREAK
5710 CASE "?tf?item_code?"; TABLE_LINE$=TL1$+QSB.ITEM_CODE$+TL2$; BREAK
5715 CASE "?tf?prod_code?"; TABLE_LINE$=TL1$+QSB.PROD_CODE$+TL2$; BREAK
5720 CASE "?tf?left_right?"; TABLE_LINE$=TL1$+STP(QSB.LEFT_RIGHT$)+TL2$; BREAK
5725 CASE "?tf?top_bottom?"; TABLE_LINE$=TL1$+STP(QSB.TOP_BOTTOM$)+TL2$; BREAK
5730 CASE "?tf?plys?"; TABLE_LINE$=TL1$+STP(QSB.PLYS$)+TL2$; BREAK
5735 CASE "?tf?item_desc?"; TABLE_LINE$=TL1$+STP(QSB.ITEM_DESC$)+TL2$; BREAK
5740 CASE "?tf?rfq_key?"; TABLE_LINE$=TL1$+QSD.QUOTE_DIV$+QSD.QUOTE_NUM$+TL2$; BREAK
5745 CASE "?tf?qsd_key?"; TABLE_LINE$=TL1$+QSD.QUOTE_DIV$+QSD.QUOTE_NUM$+QSD.QUOTE_LINE_NUM$+QSD.VEND_NUM_ON_SCREEN$+TL2$; BREAK
5750 CASE "?tf?vend_quote_num?"; TABLE_LINE$=TL1$+STP(QSD.VEND_QUOTE_NUM$)+TL2$; BREAK
5755 CASE "?tf?csr?"; TABLE_LINE$=TL1$+STP(QSA.CUST_SERV_REP$)+TL2$; BREAK
5760 CASE "?tf?quotes_done?"; TABLE_LINE$=TL1$+FNQ$(QSD.QUOTE_DIV$+QSD.QUOTE_NUM$)+TL2$; BREAK
5765 CASE "?tf?rfq_file?"; TABLE_LINE$=TL1$+STP(FN%ZZDISP$(QSD.QUOTE_DIV$+QSD.QUOTE_NUM$,"QSA")+"_"+QSD.VEND_DIV$+QSD.VEND_CODE$,3," ")+TL2$; BREAK ! 259622
6785 DEFAULT ; TABLE_LINE$=TL1$+TL2$
6790 END SWITCH ! 5600
6800 WEND ! 5585
6945 TABLE_SECTION$=TABLE_SECTION$+TABLE_LINE$
6970 GOSUB GET_TABLE_DATA
6975 WEND ! 5520
6995 RETURN 
6999 ! ************************************************
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7700 GET_TABLE_DATA:
7715 IF QSD_KEY$="" THEN {! we are looking for unquoted rfqs
7720 KEY_3$=KEY(Z[4],KNO=2,END=END_OF_QSD); IF KEY_3$(1,20)<>VENDOR$+DIM(10) THEN GOTO END_OF_QSD ELSE IF MID(KEY_3$,21,8)>END_RFQ$ THEN GOTO END_OF_QSD ! we are looking for blank quotes (haven't gotten yet, or the quote we just did
7725 DIM QSD$:IOL(Z[4]); READ DATA FROM DIM(LEN(QSD$)),REC=QSD$ TO IOL=IOL(QSD$); READ (Z[4],KNO=2,KEY=KEY_3$,REC=QSD$)
7740  } ELSE {! qsd_key$<>"" we are looking for 1 record
7745 IF QSD_RECORDS_FOUND>0 THEN GOTO END_OF_QSD ! if we have read the one record the move on
7750 DIM QSD$:IOL(Z[4]); READ DATA FROM DIM(LEN(QSD$)),REC=QSD$ TO IOL=IOL(QSD$); READ (Z[4],KNO=0,KEY=QSD_KEY$,REC=QSD$)
7755  }
7757 GOSUB SET_READONLY; DIM QSB$:IOL(Z[2]); READ DATA FROM DIM(LEN(QSB$)),REC=QSB$ TO IOL=IOL(QSB$); READ (Z[2],KEY=QSD.QUOTE_DIV$+QSD.QUOTE_NUM$+QSD.QUOTE_LINE_NUM$,DOM=*NEXT,REC=QSB$) ! 229739
7760 GOSUB SET_READONLY; DIM QSC$:IOL(Z[3]); READ DATA FROM DIM(LEN(QSC$)),REC=QSC$ TO IOL=IOL(QSC$); READ (Z[3],KEY=QSD.QUOTE_DIV$+QSD.QUOTE_NUM$+QSD.QUOTE_LINE_NUM$,DOM=*NEXT,REC=QSC$) ! 229739
7761 GOSUB CLEAR_READONLY
7765 QSD_RECORDS_FOUND+=1
7795 RETURN 
7796 END_OF_QSD: END_OF_RECORDS=1; RETURN 
7799 ! ************************************************************
8600 DEF FNQ$(LOCAL RFQ$)
8601 ! given RFQ$, look thru QSD records and determine how many done/to do, done is has vendor quote number or non-zero first bucket
8602 ! Use separate QSD file open on Z[7]
8605 RETURN$="",TODO=0,DONE=0
8610 DIM QSD2$:IOL(Z[7]); READ DATA FROM DIM(LEN(QSD2$)),REC=QSD2$ TO IOL=IOL(QSD2$)
8620 SELECT *,REC=QSD2$ FROM Z[7] BEGIN RFQ$ END RFQ$
8625 IF NOT(NUL(QSD2.VEND_QUOTE_NUM$)) OR QSD2.COST_QTY_BREAK_1>0 THEN DONE+=1
8630 TODO+=1
8640 NEXT RECORD 
8660 RETURN$=STR(DONE)+" OF "+STR(TODO)
8690 RETURN RETURN$
8695 END DEF
8699 ! ************************************************************
8700 DEF FNM$(LOCAL AMOUNT, LOCAL MASK$)
8705 ! if AMOUNT is 0 then return null string, else STR AMOUNT with MASK and strip leading and trailing blanks
8715 IF AMOUNT=0 THEN RETURN "" ELSE RETURN STP(STR(AMOUNT:MASK$),2)
8745 END DEF
8749 ! **********************************************************
8800 DEF FNBYB$(LOCAL DATA$)
8801 ! Send DATA$ through EC3BYB
8820 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,DATA$,BYBINFO${ALL},BYBOPTIONS$
8840 RETURN DATA$
8845 END DEF
8849 ! *****************************************************
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8950 ! FND$ - Standard date routine
8955 DEF FND$(LOCAL DATE_IN$, LOCAL SPECIAL_FORMAT$)
8960 LOCAL DATE_OUT$
8965 IF NUL(DATE_IN$) THEN DATE_OUT$="" ELSE IF NOT(NUL(SPECIAL_FORMAT$)) THEN DATE_OUT$=FN%FMT_TFDATE$(DATE_IN$,SPECIAL_FORMAT$) ELSE CALL "ZZDISP","DX",DATE_IN$,"",X3$,DATE_OUT$,"",0,0,X4$
8970 RETURN DATE_OUT$
8975 END DEF
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56002 REM "201193-Questions about security of Boars Head EC Promo site.       
56004 REM "212160-Webec is down.  Cannot use 64 character session id          
56005 REM "229136-When the vendor enters comments in the online quote         
56006 REM "229739-Modify the EC Vendor Submit Bid page with javascript to     
56008 REM "229740-Create RFQ Working Days field, collect online from vendors
56009 REM "259622-EC RFQ, View Item Specifications, get err 12-EC3VWF-1505.
56010 REM "271095-Delete the hardcoded "$" symbol in the masks that format costs;
