0010 REM "EC Inventory Availability Routine <EC3IC0>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 09/12/16 - 16.788611 - dmm - SSP# 286880
0037 REM "286880-Error in EC resp (0-EC3WS1-1090) for order 37-A012VY        
0040 REM "Copyright 2016 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "OPTIONS$(1,1) R=reporting warehouse list    O=order entry selection warehouse list
0052 REM "OPTIONS$(2,1)=I inventory figs only  U-usage figs only   B-both inventory and usage figures
0053 REM "FM4$ - returned with single FM4$ for single location inquiry or for ALL locations returned with FM4$ string format with fields containing last dates
0054 REM "USAGE_KEYS$ - (1,4)-usage year  (5,2)-period (7,4)-customer location (BLANK WILL TAKE FROM CUSTOMER DEFAULTS)
0055 REM "OPTIONS$(3,1)=N/Y  - are figures needed N- returnes empty dimensioned variables
0056 REM "OPTIONS$(4,1)=Y/N - Y = has form master but is stock item
0057 REM "OPTIONS$(5,1) = Balance type from FM3 to return (if blank returns U)
0058 REM "OPTIONS$(6,10) = From customer if set, use when getting inventory availablity, but do not use for usage
0059 ! OPTIONS$(16,1) = (R) coming from EC3RAA 
0060 REM "CHANNELS (1)-IC1  (2)-FM3  (3)-FM4  (4)-ECR
0062 REM "FM3(ALL) 0-13=fm3 record   20-33=prior year fm3 record (all others unused)
0065 ! OPTIONS$(17,1)="A", IC1 for all warehouses excluding hidden SSP224324
0066 ! CHANNELS[5]=FM0 SSP224324
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},ITEM_KEY$,USAGE_KEYS$,CHANNELS{ALL},IC1INFO{ALL},FM3{ALL},FM3ALL{ALL},FM4$,FM4{ALL},FM4ALL{ALL},FORM_OTHER{ALL},FORM_OTHERALL{ALL},OPTIONS$
0100 SETERR 9000
0110 X0$="EC3IC0",X1$="E/C Inventory Availability Routine"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0130 REM 'STD MASKS
0132 UMASK$="#,###,##0-"; USAGE_KEYS$=PAD(USAGE_KEYS$,50)
0134 USAGE_ITEM_KEY$=EC$[2](51,10)+ITEM_KEY$(11,10); REM "for usage figures need to pull the usage based on the buyer customer - not the item customer
0310 IOLIST IC1$,IC1[0],IC1[1],IC1[2],IC1[3],IC1[4],IC1[5],IC1[6],IC1[7],IC1[8],IC1[9],IC1[10],IC1[11],IC1[12],IC1[13],IC1[14],IC1[15],IC1[16],IC1[17],IC1[18],IC1[19],IC1[20],IC1[21],IC1[22],IC1[23],IC1[24],IC1[25],IC1[26],IC1[27],IC1[28],IC1[29],IC1[30],IC1[31],IC1[32],IC1[33],IC1[34],IC1[35],IC1[36],IC1[37],IC1[38],IC1[39],IC1[40]
0320 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0330 IOLIST FM3$,FM3[0],FM3[1],FM3[2],FM3[3],FM3[4],FM3[5],FM3[6],FM3[7],FM3[8],FM3[9],FM3[10],FM3[11],FM3[12],FM3[13]
0332 IOLIST FM3ALL$,FM3ALL[0],FM3ALL[1],FM3ALL[2],FM3ALL[3],FM3ALL[4],FM3ALL[5],FM3ALL[6],FM3ALL[7],FM3ALL[8],FM3ALL[9],FM3ALL[10],FM3ALL[11],FM3ALL[12],FM3ALL[13]
0340 IOLIST FM4$,FM42$,FM4[0],FM4[1],FM4[2],FM4[3],FM4[4],FM4[5],FM4[6],FM4[7],FM4[8],FM4[9],FM4[10],FM4[11],FM4[12],FM4[13],FM4[14],FM4[15]
0342 IOLIST FM4ALL$,FM42$,FM4ALL[0],FM4ALL[1],FM4ALL[2],FM4ALL[3],FM4ALL[4],FM4ALL[5],FM4ALL[6],FM4ALL[7],FM4ALL[8],FM4ALL[9],FM4ALL[10],FM4ALL[11],FM4ALL[12],FM4ALL[13],FM4ALL[14],FM4ALL[15]
0350 IOLIST IC1$,IC1[0],IC1[1],IC1[2],IC1[3],IC1[4],IC1[5],IC1[6],IC1[7],IC1[8],IC1[9],IC1[10],IC1[11],IC1[12],IC1[13],IC1[14],IC1[15],IC1[16],IC1[17],IC1[18],IC1[19],IC1[20],IC1[21],IC1[22],IC1[23],IC1[24],IC1[25],IC1[26],IC1[27],IC1[28],IC1[29],IC1[30],IC1[31],IC1[32],IC1[33],IC1[34],IC1[35],IC1[36],IC1[37],IC1[38],IC1[39],IC1[40]
0370 IOLIST ECR$
0500 REM "set file channels
0505 DIM FM3$(50),FM3ALL$(50),FM3[33],FM3ALL[33],FM4$(216),FM4[15],FM4ALL$(216),FM4ALL[15],ICIINFO[40],IC1$(1000),FORM_OTHER[10],FORM_OTHERALL[10]
0506 IF OPTIONS$(3,1)="Y" THEN GOTO 9900
0510 IF POS(OPTIONS$(2,1)="IB")<>0 THEN IC1_CHANNEL=CHANNELS[1]
0511 IF POS(OPTIONS$(2,1)="UB")<>0 THEN FM3_CHANNEL=CHANNELS[2],FM4_CHANNEL=CHANNELS[3]
0530 REM "Read parameters
0535 CLOSE (200); OPEN (200)"ZZPARM"; READ (200,KEY="STATF/M")S9$; CLOSE (200)
0540 Q=POS("U"=S9$(49),17); IF Q>0 THEN M0$=S9$(48+Q,17)
0600 REM "set warehouse list based on OPTIONS$
0610 ON POS(OPTIONS$(1,1)="RO") GOTO 0620,0620,0630
0620 WHSE_LIST$=EC$[10]; GOTO 0640
0630 WHSE_LIST$=EC$[11]; GOTO 0640
0640 BALANCE_TYPE$=OPTIONS$(5,1); IF BALANCE_TYPE$=" " THEN BALANCE_TYPE$="U"; REM "set balance type to retrieve from FM3
0650 REM "get item parmeters
0660 GOSUB SET_READONLY; DIM ECR$(1000); FIND (CHANNELS[4],KEY=ITEM_KEY$,DOM=0661)ECR$
0661 GOSUB CLEAR_READONLY
0662 IF ECR$(256,48)=DIM(48) THEN GOTO 0670
0664 WHSE_LIST$=STP(ECR$(256,48),1)
0700 REM "set operating variables
0710 IF STP(USAGE_KEYS$(7,4),3," ")="" THEN IF EC_PARM$(558,1)="Y" AND OPTIONS$(16,1)<>"R" THEN CUST_LOCATION$=EC$[1](1167,4),USAGE_KEYS$(7,4)=CUST_LOCATION$; GOTO 0712 ELSE CUST_LOCATION$=EC$[2](61,4),USAGE_KEYS$(7,4)=CUST_LOCATION$; GOTO 0712; REM "ssp 157200, 164729
0711 IF STP(USAGE_KEYS$(7,4),3," ")<>"" THEN CUST_LOCATION$=USAGE_KEYS$(7,4); REM "154600
0712 IF STP(USAGE_KEYS$(1,4),3," ")="" THEN USAGE_YEAR$=EC$[1](171,4),USAGE_KEYS$(1,4)=USAGE_YEAR$ ELSE USAGE_YEAR$=USAGE_KEYS$(1,4) END_IF ; PRIOR_USAGE_YEAR$=STR(NUM(USAGE_YEAR$)-1:"0000"); REM "ssp 154319
0713 UP=NUM(USAGE_KEYS$(5,2),ERR=0714)
0714 IF UP<1 OR UP>12 THEN USAGE_PERIOD$=EC$[1](175,2),USAGE_KEYS$(5,2)=USAGE_PERIOD$ ELSE USAGE_PERIOD$=USAGE_KEYS$(5,2)
0900 IF OPTIONS$(2,1)="U" THEN GOTO 2000; REM "go to usage processing only
1000 REM "load IC1 information
1010 REM "IC1INFO(XX) - processed values
1020 REM "0-summ reorder points    1-highest last cost   2-highest avg cost
1030 REM "3-summ beg balance  4-sum receipts  5-sum sales   6-sum adjstmnts
1040 REM "7-sum committed  8-sum on p/o  9-sum last count
1050 REM "10-sum reorder qty  11-sum b/o qty
1060 REM "see below for other index defs (above 30)
1070 DIM IC1INFO[40]; IF OPTIONS$(4,1)="Y" THEN IC_KEY$=DIM(10)+ITEM_KEY$(11) ELSE IF LEN(STP(MID(OPTIONS$,6,10)))=10 THEN IC_KEY$=OPTIONS$(6,10)+ITEM_KEY$(11) ELSE IC_KEY$=ITEM_KEY$ ! ssp# 153083 - if from customer set then use it
1075 IC0_KEY$=OPTIONS$(6,10)+ITEM_KEY$(11); IF STP(CUST_LOCATION$,3," ")="" THEN CST_LOC$="*" ELSE CST_LOC$=CUST_LOCATION$
1080 READ (IC1_CHANNEL,KEY=IC_KEY$,DOM=1090)
1090 GOSUB SET_READONLY; IC1KEY$=KEY(IC1_CHANNEL,END=1180); DIM IC1$(1000),IC1[40]; READ (IC1_CHANNEL,KEY=IC1KEY$)IOL=0310; GOSUB CLEAR_READONLY; IF IC1KEY$(1,LEN(ITEM_KEY$))<>IC_KEY$ THEN GOTO 1180 ! SSP286880, add READONLY
1100 IF OPTIONS$(17,1)<>"A" THEN IF POS(IC1KEY$(21,4)=WHSE_LIST$,4)=0 THEN GOTO 1090 END_IF ELSE READ (CHANNELS[5],KEY="D"+DIM(10)+IC1KEY$(21,4),DOM=1090)WHSE$; IF WHSE$(234,1)="Y" THEN GOTO 1090 ! SSP232324, check all warehouses, excluding hidden
1110 FOR VV=0 TO 11
1120 IF POS(STR(VV:"00")="0102",2)<>0 THEN GOTO 1140
1130 IC1INFO[VV]=IC1INFO[VV]+IC1[VV]; GOTO 1151
1140 REM "process highest value
1150 IF IC1INFO[VV]<IC1[VV] THEN IC1INFO[VV]=IC1[VV]
1160 NEXT VV; REM "process next IC1 variable
1170 GOTO 1090
1180 REM "calculate other variables
1190 IC1INFO[30]=IC1INFO[3]+IC1INFO[4]-IC1INFO[5]+IC1INFO[6]; REM "ic1_on_hand
1200 IC1INFO[31]=IC1INFO[30]-IC1INFO[7]; REM "ic1_qty_avail
1210 IC1INFO[32]=IC1INFO[31]+IC1INFO[8]; REM "ic1_avail_for_sale
1212 IF EC$[1](1145,1)="1" THEN IC1INFO[33]=IC1INFO[31] ELSE IC1INFO[33]=IC1INFO[30]; REM "ic1_reorder_ckpoint (depending on FMPD parameter 226,1)
1215 ONPO=0; DIM TMP[20]; IF POS(X3$(9,3)="101",3)>0 THEN GOTO *NEXT ELSE CALL "FM2UZO",X3$,IC0_KEY$,CST_LOC$,0,0,0,0,ONPO,3,TMP{ALL}; IF ONPO<>0 THEN IC1INFO[8]=ONPO ! SSP167711, SSP258666, bypass calculation of ONPO amount for WM.
1400 REM "eoj for inventory figures
1420 IF OPTIONS$(2,1)="I" THEN GOTO 5000; REM "inventory processing only - skip usage
2000 REM "usage processing
2055 IF STP(CUST_LOCATION$,3," ")="" THEN GOSUB 7850 ELSE GOSUB 7800
2057 GOSUB 7900
5000 GOTO 9500
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7800 REM "process usage files FM3/FM4 for single customer location
7804 LAST_COMPLETED_PER_USAGE=0,FM4_AVG_MOS_USAGE=0
7805 DIM FM3$(50),FM3[33]; TEMP$=USAGE_ITEM_KEY$+CUST_LOCATION$+USAGE_YEAR$; CALL "ZZPACK",X3$,"R",M0$(3,2),"",0,0,FM3{ALL},FM3_CHANNEL,BALANCE_TYPE$,TEMP$,S9$; REM "load FM3$ for single location - ssp 154319 (changed fm3 dim to 33)
7806 DIM FM3_PRIORYR$(50),FM3_PRIORYR(14); TEMP$=USAGE_ITEM_KEY$+CUST_LOCATION$+PRIOR_USAGE_YEAR$; CALL "ZZPACK",X3$,"R",M0$(3,2),"",0,0,FM3_PRIORYR{ALL},FM3_CHANNEL,BALANCE_TYPE$,TEMP$,S9$; REM "load in prior year usage figures - ssp 154319
7807 FOR XXX=0 TO 13; FM3(XXX+20)=FM3_PRIORYR(XXX); NEXT XXX; REM "put prior year figures into FM3 - ssp 154319
7810 DIM FM4$(200),FM4[15]; READ (FM4_CHANNEL,KEY=USAGE_ITEM_KEY$+CUST_LOCATION$,DOM=7831)IOL=0340
7811 IF FM4$(26,1)<>"Y" THEN FM4[3]=0
7815 LAST_COMPLETED_PER_USAGE=FM3[NUM(USAGE_PERIOD$)],FM4_AVG_MOS_USAGE=FM4[0]
7845 RETURN 
7850 REM "Process blank customer location for ALL locations
7854 FM4_AVG_MOS_USAGEALL=0,LAST_COMPLETED_PER_USAGEALL=0
7855 READ (FM3_CHANNEL,KEY=USAGE_ITEM_KEY$,DOM=7857)
7857 FM3KEY$=KEY(FM3_CHANNEL,END=7860); IF FM3KEY$(1,LEN(USAGE_ITEM_KEY$))<>USAGE_ITEM_KEY$ THEN GOTO 7860 ELSE IF FM3KEY$(25,5)<>USAGE_YEAR$+BALANCE_TYPE$ THEN READ (FM3_CHANNEL); GOTO 7857 ELSE CALL "ZZPACK",X3$,"R",M0$(3,2),"",0,0,FM3{ALL},FM3_CHANNEL,BALANCE_TYPE$,FM3KEY$(1,LEN(FM3KEY$)-1),S9$; REM READ (FM3_CHANNEL,KEY=FM3KEY$) IOL=00330
7858 FOR INDEX3=1 TO 12; FM3ALL[INDEX3]=FM3ALL[INDEX3]+FM3[INDEX3]; NEXT INDEX3; GOTO 7857
7860 READ (FM3_CHANNEL,KEY=USAGE_ITEM_KEY$,DOM=7861)
7861 FM3KEY$=KEY(FM3_CHANNEL,END=7863); IF FM3KEY$(1,LEN(USAGE_ITEM_KEY$))<>USAGE_ITEM_KEY$ THEN GOTO 7863 ELSE IF FM3KEY$(25,5)<>PRIOR_USAGE_YEAR$+BALANCE_TYPE$ THEN READ (FM3_CHANNEL); GOTO 7861 ELSE CALL "ZZPACK",X3$,"R",M0$(3,2),"",0,0,FM3{ALL},FM3_CHANNEL,BALANCE_TYPE$,FM3KEY$(1,LEN(FM3KEY$)-1),S9$; REM READ (FM3_CHANNEL,KEY=FM3KEY$) IOL=00330
7862 FOR INDEX3=0 TO 13; FM3ALL[INDEX3+20]=FM3ALL[INDEX3+20]+FM3[INDEX3]; NEXT INDEX3; GOTO 7861
7863 REM "process FM4 Records
7864 DIM FM4ALL$(500); READ (FM4_CHANNEL,KEY=USAGE_ITEM_KEY$,DOM=7865)
7865 FM4KEY$=KEY(FM4_CHANNEL,END=7876); IF FM4KEY$(1,LEN(USAGE_ITEM_KEY$))<>USAGE_ITEM_KEY$ THEN GOTO 7876 ELSE READ (FM4_CHANNEL,KEY=FM4KEY$)IOL=0340
7866 IF STP(FM4ALL$(89,6),3," ")="" THEN FM4ALL$(89,6)=FM4$(89,6) ELSE IF FM4$(89,6)>FM4ALL$(89,6) THEN FM4ALL$(89,6)=FM4$(89,6); REM "capture oldest ship date accross all locations
7870 FOR INDEX4=0 TO 15; IF INDEX4<>3 THEN FM4ALL[INDEX4]=FM4ALL[INDEX4]+FM4[INDEX4] ELSE IF FM4$(26,1)="Y" THEN FM4ALL[3]=FM4ALL[3]+FM4[3]
7871 NEXT INDEX4; GOTO 7865
7876 FM4_AVG_MOS_USAGEALL=FM4ALL[0],LAST_COMPLETED_PER_USAGEALL=FM3ALL[NUM(USAGE_PERIOD$)]
7895 FM4$=FM4ALL$; REM "set for return for all locations
7896 FOR INDEX4=0 TO 15; FM4[INDEX4]=FM4ALL[INDEX4]; NEXT INDEX4; REM "transfer all location down to FM4
7899 RETURN 
7900 REM "This section must be processed for all buyer's whether or not a single customer location is specified
7901 DIM FORM_OTHER[10],FORM_OTHERALL[10]
7902 REM "FORM_OTHER(X)
7903 REM "0 - average monthly usage   1 - last completed period usage
7904 REM "2 - ytd usage    3 - cumulative usage (ssp 154319)
7909 REM "calculate YTD usage figures
7910 YTD_USAGE=0,YTD_USAGE_ALL=0; FOR VV=1 TO 12; YTD_USAGE=YTD_USAGE+FM3[VV],YTD_USAGE_ALL=YTD_USAGE_ALL+FM3ALL[VV]; NEXT VV
7911 DIM TWOYR(24),TWOYRALL(24); REM "ssp 154319
7912 FOR XXX=1 TO 12; TWOYR(XXX)=FM3(XXX+20),TWOYR(XXX+12)=FM3(XXX),TWOYRALL(XXX)=FM3ALL(XXX+20),TWOYRALL(XXX+12)=FM3ALL(XXX); NEXT XXX; REM "154319 - create array of prior year (1-12) and current year (13-24)
7915 LAST_COMPLETED_PER_USAGEALL=FM3ALL[NUM(USAGE_PERIOD$)]
7920 IF STP(CUST_LOCATION$,3," ")="" THEN YTD_USAGE=YTD_USAGE_ALL,LAST_COMPLETED_PER_USAGE=LAST_COMPLETED_PER_USAGEALL,FM4_AVG_MOS_USAGE=FM4_AVG_MOS_USAGEALL; FOR FM3INDEX=1 TO 12; FM3[FM3INDEX]=FM3ALL[FM3INDEX]; NEXT FM3INDEX
7925 REM "calculate cumulative usage - ssp 154319
7927 IF EC$[7](586,1)<>"Y" OR NUM(EC$[7](591,2),ERR=7940)<=0 THEN GOTO 7940
7929 VV=NUM(USAGE_PERIOD$)+12
7930 FOR XXX=VV TO VV-NUM(EC$[7](591,2)) STEP -1; FORM_OTHER(3)=FORM_OTHER(3)+TWOYR(XXX),FORM_OTHERALL(3)=FORM_OTHERALL(3)+TWOYRALL(XXX); NEXT XXX; REM "ssp 154319 "
7980 REM "set FORM_OTHER/FORM_OTHERALL information
7981 FORM_OTHER[0]=FM4_AVG_MOS_USAGE,FORM_OTHERALL[0]=FM4_AVG_MOS_USAGEALL
7982 FORM_OTHER[1]=LAST_COMPLETED_PER_USAGE,FORM_OTHERALL[1]=LAST_COMPLETED_PER_USAGEALL
7983 FORM_OTHER[2]=YTD_USAGE,FORM_OTHERALL[2]=YTD_USAGE_ALL
7995 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9005 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K)+", ITEM KEY: "+ITEM_KEY$; LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$)
9010 GOTO 9900
9900 REM "End
9950 EXIT 
9999 END 
56002 REM "201406-nohup.out file in /usr/lib/pvx is getting alot of errors    
56004 ! 232324-Call from EC3WS1, RON info, check all warehouses
56006 REM "258666-EC timing out on CCES orders, too many open POs during calc 
56008 REM "286880-Error in EC resp (0-EC3WS1-1090) for order 37-A012VY        
