0010 REM "EC Ship Notice Processing <EC3SN1>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 05/17/22 - 17.37554 - dmm - SSP# 307401
0037 REM "307401-DBD-239; Add AR1 EQD_CUST field to DBDXML SHIP_NOTICE       
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3SN1",X1$="EC Ship Notice Processing"
0120 EOL$=$0D0A$; REM EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0140 DIM MESS_INFO$[20]
0150 REM "EC$[1]=ESB session record, EC$[2]=client number        , ec$[3]=message from server to called program, EC$[4]=formatted date, EC$[5]=formatted time EC$[6]=ECA2$ available web catalogs (concatonated string) EC$[7]=customer webec parms (ECS)  EC$[8]=image path (customer if set otherwise from ec_parm) EC$[9]=ST_LIST sort code record EC$[10]=reporting whse list EC$[11]=(1,4)warehouse code to use for o/e FM2RT0  (5,4)=would contain the 'other'warehouse for availability checking o/e messaging <not passed to FM2RT0, EC$[12]=email params,see 8000s [13] UNUSED ,[14]=ECY$, [15]=inventory system parameters [16]=Credict Card code/desc list [17]=active webcode [18-20] unused                                                                 
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="13O ZZPARM"
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1025 SWITCH TAG$ ! 1185 end switch
1035 CASE "template"; TEMPLATE$=VALUE$; BREAK
1040 CASE "send_data"; IF STP(VALUE$,2)="Y" THEN SEND_DATA=1; BREAK
1045 CASE "url"; URL$=STP(VALUE$); BREAK
1050 CASE "3p_order_id"; ORDER_ID_3P$=VALUE$; BREAK
1055 CASE "3p_sender_id"; SENDER_ID_3P$=VALUE$; BREAK
1060 CASE "order_no"; ORDER_NO$=VALUE$; BREAK
1061 CASE "order_uf"; ORDER_UF$=VALUE$; BREAK ! WO263088
1065 CASE "cust_po"; CUST_PO$=VALUE$; BREAK
1067 CASE "date_shipped"; DATE_SHIPPED$=VALUE$; BREAK ! SSP228984
1068 CASE "num_tracks"; GOSUB NUM_TRACKS; BREAK ! WO263088
1069 CASE "multiple_tracking_no"; GOSUB MULTIPLE_TRACKING_NO; BREAK ! WO263088
1070 CASE "tracking_no"; TRACKING_NO$=VALUE$; BREAK
1075 CASE "carrier_name"; CARRIER_NAME$=VALUE$; BREAK
1076 CASE "total_frt_special_lines_num"; TOTAL_FRT_SPECIAL_LINES_NUM$=VALUE$; BREAK ! SSP278673 
1077 CASE "azb_freight_num"; AZB_FREIGHT_NUM$=VALUE$; BREAK ! SSP278673 
1078 CASE "total_freight_num"; TOTAL_FREIGHT_NUM$=VALUE$; BREAK ! SSP278673 
1080 CASE "num_lines"; GOSUB NUM_LINES; BREAK
1100 CASE "ext_line_number"; GOSUB EXT_LINE_NUMBER; BREAK
1105 CASE "um"; GOSUB UNIT_OF_MEASURE; BREAK
1110 CASE "qty_per_um"; GOSUB QTY_PER_UM; BREAK
1115 CASE "qty_shipped_eaches"; GOSUB QTY_SHIPPED_EACHES; BREAK
1120 CASE "qty_shipped_units"; GOSUB QTY_SHIPPED_UNITS; BREAK
1125 CASE "item_code"; GOSUB ITEM_CODE; BREAK ! SSP278673
1130 CASE "ext_ref1"; GOSUB EXT_REF1; BREAK ! SSP296725
1135 CASE "no_shipnotice"; GOSUB NO_SHIPNOTICE; BREAK ! WO304831
1136 CASE "tf_description"; GOSUB TF_DESCRIPTION; BREAK ! SSP307255-DBD-101
1137 CASE "qty_ordered"; GOSUB QTY_ORDERED; BREAK ! SSP307255-DBD-101
1138 CASE "ctn_wt"; GOSUB CTN_WT; BREAK ! SSP307255-DBD-101
1140 CASE "ship_via_code"; SHIP_VIA_CODE$=VALUE$; BREAK ! SSP307255-DBD-101
1141 CASE "loc_addr_1"; LOC_ADDR_1$=VALUE$; BREAK ! SSP307255-DBD-101
1142 CASE "loc_addr_2"; LOC_ADDR_2$=VALUE$; BREAK ! SSP307255-DBD-101
1143 CASE "loc_city"; LOC_CITY$=VALUE$; BREAK ! SSP307255-DBD-101
1144 CASE "loc_st"; LOC_ST$=VALUE$; BREAK ! SSP307255-DBD-101
1145 CASE "loc_zip_code"; LOC_ZIP_CODE$=VALUE$; BREAK ! SSP307255-DBD-101
1146 CASE "ship_to_name"; SHIP_TO_NAME$=VALUE$; BREAK ! SSP307255-DBD-101
1147 CASE "attn_name"; ATTN_NAME$=VALUE$; BREAK ! SSP307255-DBD-101
1148 CASE "ordered_by"; ORDERED_BY$=VALUE$; BREAK ! SSP307255-DBD-101
1149 CASE "ec_source"; EC_SOURCE$=VALUE$; BREAK ! SSP307255-DBD-101
1150 CASE "rc_number"; GOSUB RC_NUMBER; BREAK ! SSP307285-DBD-115
1151 CASE "ext_field_1"; GOSUB EXT_FIELD_1; BREAK ! SSP307285-DBD-115
1152 CASE "ext_field_2"; GOSUB EXT_FIELD_2; BREAK ! SSP307285-DBD-115
1153 CASE "cust_code_formatted"; CUST_CODE_FORMATTED$=VALUE$; BREAK ! SSP307285-DBD-115
1154 CASE "cust_code_unformatted"; CUST_CODE_UNFORMATTED$=VALUE$; BREAK ! SSP307285-DBD-115
1155 CASE "inv_num"; INV_NUM$=VALUE$; BREAK ! SSP307285-DBD-115
1156 CASE "order_status"; ORDER_STATUS$=VALUE$; BREAK ! SSP307319-DBD-147
1157 CASE "3p_order_id_2"; ORDER_ID_3P_2$=VALUE$; BREAK ! DBD-185-DBSPT-115417-SSP307358
1158 CASE "eqd_cust"; EQD_CUST$=VALUE$; BREAK ! DBD-239-SSP307401
1180 DEFAULT ; VIA TAG$=VALUE$; BREAK ! Set to same name variable as TAG$
1185 END SWITCH ! 1050
1190 NEXT I
1195 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="224137.20081125",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1500 REM "Use template$ to open file, read line by line and insert
1502 IF NOT(NUL(%BASIC2$)) THEN GOTO 2990 ! Skip outputting template if additional program to be done
1503 IF TEMPLATE$="" THEN GOTO 2990
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1510 READ (100,END=DONE_WITH_TEMPLATE)LINE$; LINE$=FNBYB$(LINE$)
1515 CHKTAG=1
1520 WHILE CHKTAG ! 2800 wend
1525 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
1530 TAG$=LINE$(P1,MSL); LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
1600 SWITCH TAG$ ! 2790 end switch
1610 CASE "?tf?url?"; LINE$=LINE1$+URL$+LINE2$; BREAK
1615 CASE "?tf?3p_order_id?"; LINE$=LINE1$+ORDER_ID_3P$+LINE2$; BREAK
1620 CASE "?tf?3p_sender_id?"; LINE$=LINE1$+SENDER_ID_3P$+LINE2$; BREAK
1625 CASE "?tf?order_no?"; LINE$=LINE1$+ORDER_NO$+LINE2$; BREAK
1626 CASE "?tf?order_uf?"; LINE$=LINE1$+ORDER_UF$+LINE2$; BREAK ! WO263088
1630 CASE "?tf?cust_po?"; LINE$=LINE1$+CUST_PO$+LINE2$; BREAK
1632 CASE "?tf?date_shipped?"; DATE_FORMAT$="%Y-%Mz-%Dz",OUTPUT_DATE$=FND$(DATE_SHIPPED$,DATE_FORMAT$),LINE$=LINE1$+OUTPUT_DATE$+LINE2$; BREAK ! SSP228984
1635 CASE "?tf?tracking_no?"; LINE$=LINE1$+FN%HTML_ESC$(TRACKING_NO$)+LINE2$; BREAK ! SSP296115
1640 CASE "?tf?carrier_name?"; LINE$=LINE1$+CARRIER_NAME$+LINE2$; BREAK
1641 CASE "?tf?total_frt_special_lines_num?"; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(NUM(TOTAL_FRT_SPECIAL_LINES_NUM$):"-###,##0.00"),2))+LINE2$; BREAK ! SSP278673
1642 CASE "?tf?azb_freight_num?"; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(NUM(AZB_FREIGHT_NUM$):"-###,##0.00"),2))+LINE2$; BREAK ! SSP278673
1643 CASE "?tf?total_freight_num?"; LINE$=LINE1$+FN%HTML_ESC$(STP(STR(NUM(TOTAL_FREIGHT_NUM$):"-###,##0.00"),2))+LINE2$; BREAK
1645 CASE "?tf?multiple_tracking_start?"; GOSUB PROCESS_MULTIPLE_TRACKING; LINE$=MTN_LINES_SECTION$; BREAK ! WO263088, multiple tracking number matches
1650 CASE "?tf?sn_lines_start?"; GOSUB PROCESS_LINES; LINE$=LINES_SECTION$; BREAK
1660 CASE "?tf?ship_via_code?"; LINE$=LINE1$+FN%HTML_ESC$(SHIP_VIA_CODE$)+LINE2$; BREAK ! SSP307255-DBD-101
1662 CASE "?tf?loc_addr_1?"; LINE$=LINE1$+FN%HTML_ESC$(LOC_ADDR_1$)+LINE2$; BREAK ! SSP307255-DBD-101
1664 CASE "?tf?loc_addr_2?"; LINE$=LINE1$+FN%HTML_ESC$(LOC_ADDR_2$)+LINE2$; BREAK ! SSP307255-DBD-101
1666 CASE "?tf?loc_city?"; LINE$=LINE1$+FN%HTML_ESC$(LOC_CITY$)+LINE2$; BREAK ! SSP307255-DBD-101
1668 CASE "?tf?loc_st?"; LINE$=LINE1$+FN%HTML_ESC$(LOC_ST$)+LINE2$; BREAK ! SSP307255-DBD-101
1670 CASE "?tf?loc_zip_code?"; LINE$=LINE1$+FN%HTML_ESC$(LOC_ZIP_CODE$)+LINE2$; BREAK ! SSP307255-DBD-101
1672 CASE "?tf?ship_to_name?"; LINE$=LINE1$+FN%HTML_ESC$(SHIP_TO_NAME$)+LINE2$; BREAK ! SSP307255-DBD-101
1674 CASE "?tf?attn_name?"; LINE$=LINE1$+FN%HTML_ESC$(ATTN_NAME$)+LINE2$; BREAK ! SSP307255-DBD-101
1676 CASE "?tf?ordered_by?"; LINE$=LINE1$+FN%HTML_ESC$(ORDERED_BY$)+LINE2$; BREAK ! SSP307255-DBD-101
1678 CASE "?tf?ec_source?"; LINE$=LINE1$+FN%HTML_ESC$(EC_SOURCE$)+LINE2$; BREAK ! SSP307255-DBD-101
1680 CASE "?tf?cust_code_formatted?"; LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE_FORMATTED$)+LINE2$; BREAK ! SSP307285-DBD-115
1682 CASE "?tf?cust_code_unformatted?"; LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE_UNFORMATTED$)+LINE2$; BREAK ! SSP307285-DBD-115
1684 CASE "?tf?inv_num?"; LINE$=LINE1$+FN%HTML_ESC$(INV_NUM$)+LINE2$; BREAK ! SSP307285-DBD-115
1686 CASE "?tf?order_status?"; LINE$=LINE1$+FN%HTML_ESC$(ORDER_STATUS$)+LINE2$; BREAK ! SSP307319-DBD-147
1687 CASE "?tf?3p_order_id_2?"; LINE$=LINE1$+STP(ORDER_ID_3P_2$,2)+LINE2$; BREAK ! DBD-185-DBSPT-115417-SSP307358
1688 CASE "?tf?eqd_cust?"; LINE$=LINE1$+STP(EQD_CUST$,2)+LINE2$; BREAK ! DBD-239-SSP307401
2785 DEFAULT ; LINE$=LINE1$+LINE2$ ! didn't match existing tag, so remove it
2790 END SWITCH ! 1600
2800 WEND ! 1520
2810 IF LINE$<>"" THEN PRINT (OUTPUT)LINE$
2900 GOTO 1510; REM next read 
2950 DONE_WITH_TEMPLATE:
2955 IF SEND_DATA THEN GOSUB SEND_XML_FILE
2990 GOTO 9900
3000 PROCESS_LINES:! Add ship notice lines info based on SN section
3005 LINES_SECTION$=""; LINES_TEMPLATE$=LINE$
3010 READ (100,END=DONE_WITH_TEMPLATE)SN_LINE$; SN_LINE$=SUB(SUB(SN_LINE$,$0D$,""),$0A$,""); LINES_TEMPLATE$+=FNBYB$(SN_LINE$)+EOL$; IF POS("?tf?sn_lines_end?"=LINES_TEMPLATE$)=0 THEN GOTO *SAME
3060 FOR X=1 TO NUM_LINES
3070 SN_LINE$=LINES_TEMPLATE$,LINES_CHKTAG=1
3075 WHILE LINES_CHKTAG
3090 P1=MSK(SN_LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN LINES_CHKTAG=0; BREAK
3095 TAG$=SN_LINE$(P1,MSL); SN_LINE1$=SN_LINE$(1,P1-1),SN_LINE2$=MID(SN_LINE$,P1+MSL)
3100 SWITCH TAG$
3105 CASE "?tf?ext_line_number?"; SN_LINE$=SN_LINE1$+ELNS$[X]+SN_LINE2$; BREAK
3110 CASE "?tf?um?"; SN_LINE$=SN_LINE1$+UOMS$[X]+SN_LINE2$; BREAK
3115 CASE "?tf?qty_per_um?"; SN_LINE$=SN_LINE1$+QPUS$[X]+SN_LINE2$; BREAK
3120 CASE "?tf?qty_shipped_eaches?"; SN_LINE$=SN_LINE1$+QSES$[X]+SN_LINE2$; BREAK
3125 CASE "?tf?qty_shipped_units?"; SN_LINE$=SN_LINE1$+QSUS$[X]+SN_LINE2$; BREAK
3126 CASE "?tf?item_code?"; SN_LINE$=SN_LINE1$+FN%HTML_ESC$(ITEMS$[X])+SN_LINE2$; BREAK ! SSP278673 SSP294000
3127 CASE "?tf?ext_ref1?"; SN_LINE$=SN_LINE1$+FN%HTML_ESC$(STP(EER1S$[X],1))+SN_LINE2$; BREAK ! SSP296725
3128 CASE "?tf?no_shipnotice?"; SN_LINE$=SN_LINE1$+FN%HTML_ESC$(STP(NOSNS$[X],1))+SN_LINE2$; BREAK ! WO304831
3130 CASE "?tf?order_no?"; SN_LINE$=SN_LINE1$+ORDER_NO$+SN_LINE2$; BREAK
3131 CASE "?tf?order_uf?"; SN_LINE$=SN_LINE1$+ORDER_UF$+SN_LINE2$; BREAK ! WO263088
3135 CASE "?tf?3p_order_id?"; SN_LINE$=SN_LINE1$+ORDER_ID_3P$+SN_LINE2$; BREAK
3136 CASE "?tf?tf_description?"; SN_LINE$=SN_LINE1$+FN%HTML_ESC$(STP(TFDS$[X],1))+SN_LINE2$; BREAK ! SSP307255-DBD-101
3137 CASE "?tf?qty_ordered?"; SN_LINE$=SN_LINE1$+FN%HTML_ESC$(STP(QORS$[X],1))+SN_LINE2$; BREAK ! SSP307255-DBD-101
3138 CASE "?tf?ctn_wt?"; SN_LINE$=SN_LINE1$+FN%HTML_ESC$(STP(CWTS$[X],1))+SN_LINE2$; BREAK ! SSP307255-DBD-101
3139 CASE "?tf?rc_number?"; SN_LINE$=SN_LINE1$+FN%HTML_ESC$(STP(RCNS$[X],1))+SN_LINE2$; BREAK ! SSP307285-DBD-115
3140 CASE "?tf?ext_field_1?"; SN_LINE$=SN_LINE1$+FN%HTML_ESC$(STP(EF1S$[X],1))+SN_LINE2$; BREAK ! SSP307285-DBD-115
3141 CASE "?tf?ext_field_2?"; SN_LINE$=SN_LINE1$+FN%HTML_ESC$(STP(EF2S$[X],1))+SN_LINE2$; BREAK ! SSP307285-DBD-115
3142 CASE "?tf?3p_order_id_2?"; SN_LINE$=SN_LINE1$+STP(ORDER_ID_3P_2$,2)+SN_LINE2$; BREAK ! DBD-185-DBSPT-115417-SSP307358
3143 CASE "?tf?eqd_cust?"; SN_LINE$=SN_LINE1$+STP(EQD_CUST$,2)+SN_LINE2$; BREAK ! DBD-239-SSP307401
3144 DEFAULT ; SN_LINE$=SN_LINE1$+SN_LINE2$
3145 END SWITCH 
3150 WEND 
3160 LINES_SECTION$+=SN_LINE$
3170 LINE_DONE:
3171 PRINT (OUTPUT)LINES_SECTION$,; LINES_SECTION$=""
3180 NEXT X
3190 SN_DONE:
3195 RETURN 
3199 ! 
4000 PROCESS_MULTIPLE_TRACKING:! WO263088, multiple tracking numbers for same order/invoice
4005 MTN_LINES_SECTION$=""; MTN_LINES_TEMPLATE$=LINE$
4010 READ (100,END=DONE_WITH_TEMPLATE)MTN_LINE$; MTN_LINE$=SUB(SUB(MTN_LINE$,$0D$,""),$0A$,""); MTN_LINES_TEMPLATE$+=FNBYB$(MTN_LINE$)+EOL$; IF POS("?tf?multiple_tracking_end?"=MTN_LINES_TEMPLATE$)=0 THEN GOTO *SAME
4060 FOR X=1 TO NUM_TRACKS
4070 MTN_LINE$=MTN_LINES_TEMPLATE$,MTN_LINES_CHKTAG=1
4075 WHILE MTN_LINES_CHKTAG
4090 P1=MSK(MTN_LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN MTN_LINES_CHKTAG=0; BREAK
4095 TAG$=MTN_LINE$(P1,MSL); MTN_LINE1$=MTN_LINE$(1,P1-1),MTN_LINE2$=MID(MTN_LINE$,P1+MSL)
4100 SWITCH TAG$
4105 CASE "?tf?cust_po?"; MTN_LINE$=MTN_LINE1$+CUST_PO$+MTN_LINE2$; BREAK
4110 CASE "?tf?multiple_tracking_no?"; MTN_LINE$=MTN_LINE1$+FN%HTML_ESC$(MTNS$[X])+MTN_LINE2$; BREAK ! SSP296115
4115 CASE "?tf?order_uf?"; MTN_LINE$=MTN_LINE1$+ORDER_UF$+MTN_LINE2$; BREAK
4120 CASE "?tf?date_shipped_standard?"; DATE_FORMAT$="",OUTPUT_DATE$=FND$(DATE_SHIPPED$,DATE_FORMAT$),MTN_LINE$=MTN_LINE1$+OUTPUT_DATE$+MTN_LINE2$; BREAK
4140 DEFAULT ; MTN_LINE$=MTN_LINE1$+MTN_LINE2$
4145 END SWITCH 
4150 WEND 
4160 MTN_LINES_SECTION$+=MTN_LINE$
4170 MTN_LINE_DONE:
4171 PRINT (OUTPUT)MTN_LINES_SECTION$,; MTN_LINES_SECTION$=""
4180 NEXT X
4190 MTN_DONE:
4195 RETURN 
4199 ! 
5100 ADD_MSG_TO_LOG:! Add message to log file
5105 ! Add other info as needed here
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
7000 NUM_LINES:
7010 NUM_LINES=0; NUM_LINES=NUM(VALUE$,ERR=*NEXT)
7045 RETURN 
7049 ! 
7050 EXT_LINE_NUMBER:
7055 IF NOT(NUM_LINES) THEN GOTO *RETURN
7060 DIM ELNS$[NUM_LINES]
7065 FOR X=1 TO NUM_LINES
7070 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN ELNS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7080
7075 NEXT X
7095 RETURN 
7099 ! 
7100 UNIT_OF_MEASURE:
7105 IF NOT(NUM_LINES) THEN GOTO *RETURN
7110 DIM UOMS$[NUM_LINES]
7115 FOR X=1 TO NUM_LINES
7120 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN UOMS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7130
7125 NEXT X
7145 RETURN 
7149 ! 
7150 QTY_PER_UM:
7155 IF NOT(NUM_LINES) THEN GOTO *RETURN
7160 DIM QPUS$[NUM_LINES]
7165 FOR X=1 TO NUM_LINES
7170 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN QPUS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7180
7175 NEXT X
7195 RETURN 
7199 ! 
7200 QTY_SHIPPED_EACHES:
7205 IF NOT(NUM_LINES) THEN GOTO *RETURN
7210 DIM QSES$[NUM_LINES]
7215 FOR X=1 TO NUM_LINES
7220 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN QSES$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7230
7225 NEXT X
7245 RETURN 
7249 ! 
7250 QTY_SHIPPED_UNITS:
7255 IF NOT(NUM_LINES) THEN GOTO *RETURN
7260 DIM QSUS$[NUM_LINES]
7265 FOR X=1 TO NUM_LINES
7270 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN QSUS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7280
7275 NEXT X
7295 RETURN 
7299 ! 
7300 SEND_XML_FILE:
7310 FILE_TO_SEND$=PTH(OUTPUT); CLOSE (OUTPUT)
7315 COMMAND_CODE$=PAD("SHIP_NOT_"+SENDER_ID_3P$,20)
7320 CALL "ZZ2CMD",ERR=*NEXT,X3$,X4$,"{"+COMMAND_CODE$+"}",URL$+SEP+FILE_TO_SEND$+SEP+"Content-type=text/xml","NR",RET_CODE,RESP$
7330 MX=FN%_LOG_MESSAGE("MESG","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|"+PGN+"|SEND_XML_FILE|"+FILE_TO_SEND$+"|RESPCODE|"+STR(RET_CODE)+"|RESPONSE|"+RESP$)
7340 RETURN 
7349 ! 
7400 NUM_TRACKS:! WO263088, number of multiple matching tracking numbers
7410 NUM_TRACKS=0; NUM_TRACKS=NUM(VALUE$,ERR=*NEXT)
7445 RETURN 
7449 ! 
7450 MULTIPLE_TRACKING_NO:! WO263088, multiple matching tracking numbers
7455 IF NOT(NUM_TRACKS) THEN GOTO *RETURN
7460 DIM MTNS$[NUM_TRACKS]
7465 FOR X=1 TO NUM_TRACKS
7470 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN MTNS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7480
7475 NEXT X
7495 RETURN 
7499 ! 
7500 ITEM_CODE:! SSP278673
7505 IF NOT(NUM_LINES) THEN GOTO *RETURN
7510 DIM ITEMS$[NUM_LINES]
7515 FOR X=1 TO NUM_LINES
7520 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN ITEMS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7530
7525 NEXT X
7545 RETURN 
7549 ! 
7550 EXT_REF1:! SSP296725
7555 IF NOT(NUM_LINES) THEN GOTO *RETURN
7560 DIM EER1S$[NUM_LINES]
7565 FOR X=1 TO NUM_LINES
7570 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN EER1S$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7580
7575 NEXT X
7595 RETURN 
7599 ! 
7600 NO_SHIPNOTICE:! WO304831
7605 IF NOT(NUM_LINES) THEN GOTO *RETURN
7610 DIM NOSNS$[NUM_LINES]
7615 FOR X=1 TO NUM_LINES
7620 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN NOSNS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7630
7625 NEXT X
7645 RETURN 
7649 ! 
7650 TF_DESCRIPTION:! SSP307255-DBD-101
7655 IF NOT(NUM_LINES) THEN GOTO *RETURN
7660 DIM TFDS$[NUM_LINES]
7665 FOR X=1 TO NUM_LINES
7670 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN TFDS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7580
7675 NEXT X
7695 RETURN 
7699 ! 
7700 QTY_ORDERED:! SSP307255-DBD-101
7705 IF NOT(NUM_LINES) THEN GOTO *RETURN
7710 DIM QORS$[NUM_LINES]
7715 FOR X=1 TO NUM_LINES
7720 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN QORS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7730
7725 NEXT X
7745 RETURN 
7749 ! 
7750 CTN_WT:! SSP307255-DBD-101
7755 IF NOT(NUM_LINES) THEN GOTO *RETURN
7760 DIM CWTS$[NUM_LINES]
7765 FOR X=1 TO NUM_LINES
7770 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN CWTS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7780
7775 NEXT X
7795 RETURN 
7799 ! 
7800 RC_NUMBER:! SSP307285-DBD-115
7805 IF NOT(NUM_LINES) THEN GOTO *RETURN
7810 DIM RCNS$[NUM_LINES]
7815 FOR X=1 TO NUM_LINES
7820 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN RCNS$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7830
7825 NEXT X
7845 RETURN 
7849 ! 
7850 EXT_FIELD_1:! SSP307285-DBD-115
7855 IF NOT(NUM_LINES) THEN GOTO *RETURN
7860 DIM EF1S$[NUM_LINES]
7865 FOR X=1 TO NUM_LINES
7870 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN EF1S$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7880
7875 NEXT X
7895 RETURN 
7899 ! 
7900 EXT_FIELD_2:! SSP307285-DBD-115
7905 IF NOT(NUM_LINES) THEN GOTO *RETURN
7910 DIM EF2S$[NUM_LINES]
7915 FOR X=1 TO NUM_LINES
7920 P=POS(", "=VALUE$); IF P>1 OR (P=0 AND STP(VALUE$)>"") THEN EF2S$[X]=VALUE$(1,P-1); IF P>1 THEN VALUE$=VALUE$(P+2) END_IF ELSE EXITTO 7930
7925 NEXT X
7945 RETURN 
7949 ! 
8800 DEF FNBYB$(LOCAL DATA$)
8801 ! Send DATA$ through EC3BYB
8820 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,DATA$,BYBINFO${ALL},BYBOPTIONS$
8840 RETURN DATA$
8845 END DEF
8849 ! *****************************************************
8850 DEF FNM$(LOCAL AMOUNT, LOCAL MASK$)
8855 ! if AMOUNT is 0 then return null string, else STR AMOUNT with MASK and strip leading and trailing blanks
8860 IF AMOUNT=0 THEN RETURN "" ELSE RETURN STP(STR(AMOUNT:MASK$),2)
8895 END DEF
8899 ! **********************************************************
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNN(LOCAL DATA$)
8925 LINE$=LINE1$+DATA$+LINE2$
8930 RETURN 0
8949 ! *****************************
8950 ! FND$ - Standard date routine
8955 DEF FND$(LOCAL DATE_IN$, LOCAL SPECIAL_FORMAT$)
8960 LOCAL DATE_OUT$
8965 IF NUL(DATE_IN$) THEN DATE_OUT$="" ELSE IF NOT(NUL(SPECIAL_FORMAT$)) THEN DATE_OUT$=FN%FMT_TFDATE$(DATE_IN$,SPECIAL_FORMAT$) ELSE CALL "ZZDISP","DX",DATE_IN$,"",X3$,DATE_OUT$,"",0,0,X4$
8970 RETURN DATE_OUT$
8975 END DEF
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56000 REM "224137-Capture Four51 info by order, retrieve later for ShipNotice
56002 REM "228984-Modify the Four51 ShipNotice for noticeDate to be the date
56004 REM "263088-Pier1; Modify EC Invoice/ShipNotice programs used in SJ     
56006 REM "278673-Flowpoint; Template/EC3SN1 changes for Ship Notice/Closeout 
56008 REM "294000-FlowPoint; ship notice data errors in FP because item codes 
56010 REM "296115-FlowPoint; error on ShipNotice data in DBDXML going to FP   
56012 REM "296725-FlowPoint; Propago NEED ECR EXT_REF_1 FOR SHIP NOTICE    
56014 REM "304831-Vendor option to instruct FlowPoint to not send shipping    
56016 REM "307255-DBD-101; DBSPT-80384/499 Order Acknowledgement/Shipment need
56018 REM "307285-DBD-115-DBSPT-87098; DBDXML SHIP_NOTICE EDW fields addition 
56020 REM "307319-DBSPT-87098-DBD-147; Change timing of ShipNotice Request to 
56022 REM "307358-DBSPT-115417-DBD-185; Expand EEE/EEP for ORDER_ID_3P_2, add 
56024 REM "307401-DBD-239; Add AR1 EQD_CUST field to DBDXML SHIP_NOTICE       
