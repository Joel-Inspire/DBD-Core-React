0010 REM "Approval Worksheet Processing <EC3AP1>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 01/09/19 - 11.033333 - dmm - SSP# 303115
0037 REM "303115-FN%HTML_ESC$ additions in EC programs                       
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3AP1",X1$="Approval Worksheet Processing"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0130 NY$="NY"
0140 DIM MESS_INFO$[20]
0305 IOLIST EDU$
0310 IOLIST ECD$,ECD2$
0320 IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
0330 IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
0340 IOLIST EDN$,EDN2$
0350 IOLIST EDO$,EDO[0],EDO[1],EDO[2],EDO[3],EDO[4],EDO[5],EDO[6],EDO[7],EDO[8]
0355 IOLIST COMP_EDO$,COMP_EDO[0],COMP_EDO[1],COMP_EDO[2],COMP_EDO[3],COMP_EDO[4],COMP_EDO[5],COMP_EDO[6],COMP_EDO[7],COMP_EDO[8] ! SSP224259
0360 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0370 IOLIST FM1$(1),FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0380 IOLIST FM0$
0390 IOLIST FMPS$
0391 IOLIST FMPH$
0392 IOLIST FMPX$,FMPX(0),FMPX(1),FMPX(2)
0420 IOLIST EC7$,EC7[0],EC7[1]
0430 IOLIST UM$,UM[0],UM[1],UM[2],UM[3],UM[4],UM[5]
0450 IOLIST ECR$
0460 IOLIST EDD$,EDD[0]
0470 IOLIST GRB$,GRB(0),GRB(1),GRB(2),GRB(3),GRB(4),GRB(5),GRB(6),GRB(7),GRB(8),GRB(9),GRB(10),GRB(11),GRB(12),GRB(13),GRB(14),GRB(15),GRB(16),GRB(17),GRB(18),GRB(19),GRB(20)
0480 IOLIST EDT$
0485 IOLIST COMP_EDT$
0490 IOLIST INVOICE_LINE_INDEX,GRT$,GRT(0),GRT(1),GRT(2),GRT(3),GRT(4),GRT(5),GRT(6),GRT(7),GRT(8),GRT(9),GRT(10)
0491 IOLIST EDS1$,EDS2$
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))],FS6[7],BLGRBNKS$(100)
0510 Z$="01O EDU... 020 ECD... 03O ECE... 04O EDN... 05O EDO... 07O FM1... 08O FM0... 09O FMP... 13O ZZPARM 17O ECO... 18O EDT... 22O EC7... 23O ECV... 25O ECR... 27O EC6... 28O EC9... 29O IC0... 30O IC1... "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0535 READ (Z[13],KEY=X3$(9,3)+"I/C")ICPARM$
0540 DIM M6[1]; M6$="###,###.00-",M6[0]=621,M6[1]=2; IF ICPARM$(45,1)>"2" THEN DIM M6$(11,"0"); M6[1]=NUM(ICPARM$(45,1)),M6$(1,10-M6[1])="##########",M6$(POS("0"=M6$),1)=".",M6[0]=(10-M6[1])*100+M6[1]*10
0550 IF EC_PARM$(1177,1)="Y" THEN SID$=EC$[1](1,7) ELSE SID$=EC$[1](1213,64) ! SSP212160 jdf
1000 REM "Process DATA array
1005 DATA_TAGS$="001<worksheet>002<action>003<worksheet_line>004<orig_order_quantity>005<new_order_quantity>006<template>007<approval_comments>"
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1090
1021 WORKSHEET$=VALUE$; GOTO 1090; REM "worksheet
1022 ACTION$=UCS(VALUE$); GOTO 1090; REM "action (A=approve R=reject C=change quantity line E=Lock for editing S=Save edited worksheet)
1023 WORKSHEET_LINE$=VALUE$; GOTO 1090; REM "worksheet_line
1024 ORIG_ORDER_QUANTITY=NUM(VALUE$,ERR=1090); GOTO 1090; REM "orig_order_quantity
1025 NEW_ORDER_QUANTITY=NUM(VALUE$,ERR=1090); GOTO 1090; REM "new_order_quantity
1026 TEMPLATE$=STP(VALUE$,3," "); GOTO 1090; REM "template
1027 APPROVAL_COMMENTS$=STP(VALUE$,2); IF LEN(APPROVAL_COMMENTS$)>240 THEN APPROVAL_COMMENTS$=APPROVAL_COMMENTS$(1,240) END_IF ; GOTO 1090; REM "approval_comments
1090 NEXT I
1100 REM "Process order
1101 VERSION$="273337.20141223",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$="" ! SSP224259
1102 DIM ECN$(1580),ECN(1),ECD$(1580),ECD[1],ECE$(499),ECE[8],EDO$(499),EDO(8); USE_EXIST=0 ! 155076
1103 CALL "EC3DAT",X3$,3,CURRTIME$,CURRDATE$,FORMATTED_DATE$; INTIME$=CURRTIME$; GOSUB 7920; FORMATTED_TIME$=OUTTIME$
1110 FIND (Z(4),KEY=WORKSHEET$)IOL=0340
1111 GOSUB 7250; IF MID(EDU$,61,1)="E" THEN IF EC$[2](1,15)<>MID(EDU$,46,15) THEN LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR","Worksheet "+WORKSHEET$+" is currently locked by approver "+STP(MID(EDU$,46,15),2)+" and is not accessible!"); GOTO 9900 ! SSP#255476 - If worksheet is currently locked then only approver who can access is the one who locked it
1115 IF ACTION$="C" THEN GOSUB 7200; REM "line quantity change
1120 IF ACTION$="E" OR ACTION$="S" THEN GOSUB 7500; REM "Edit approval mode
1180 REM "update status
1181 DIM OPTIONS$(50)
1182 IF POS(ACTION$="ARCES")=0 THEN ACTION$="V"
1185 CALL "EC3AP2",X3$,X4$,EC_PARM$,EC${ALL},WORKSHEET$,ACTION$,EC$[2](1,15),APPROVAL_COMMENTS$,OPTIONS$
1195 GOTO 1500; REM "Process output file
1200 REM "pre-processing section
1490 RETURN 
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1503 IF TEMPLATE$="" THEN GOTO 1995 ELSE CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$; GOSUB 2100
1504 FIND (Z(4),KEY=WORKSHEET$,DOM=1505)IOL=0310; REM "If no template, ok then we may be starting order, so display location info etc
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<cust_code>002<cust_name>003<ec_company>004<session_id>005<buyer_id>006<buyer_name>007<worksheet>008<customer>009<location>010<cust_req>011<req_date>012<attention>013<ship_via>014<needed_by>015<wslinestart>016<cust_loc_code>017<address_1>018<address_2>019<city>020<state>021<zip>022<addr_1>023<addr_2>024<addr_3>025<cost_center>026<location_name>027<recv_dept>028<ship_via_list>029<date>030<time>031<tf_order_no>032<mark_for>033<location_list>034<locchangestart>035<man_name>036<man_addr_1>037<man_addr_2>038<man_city>039<man_state>040<man_zip>041<category_entry_start>042<message>043<message_start>044<ship_via_code>045<location_desc>046<addr_city>047<addr_state>048<addr_zip>049<addr_unformatted_1>050<addr_unformatted_2>051<addr_name>052<ship_via_text>053<location_text>054<cc_type>055<cc_number>056<cc_expire>057<cc_name>058<cc_type_list>059<ordered_by>060<item_price_total>061<weight_total_order>062<invoice_total_net>063<invoice_sales_tax>064<invoice_freight>065<invoice_total>066<invoicelinestart>067<cc_number_last4>068<qty_total_order>069<item_count>070<invoice_number>071<perm_addr_change_shipto_done>072<perm_attn_change_shipto_done>073<order_approval_comments>074<calc_item_price_total>075<os_item_price_total>076<order_email_addr>077<ship_with>078<buyer_previous_orders_start>"
1510 READ (100,END=1595)LINE$; GOSUB 8150
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1517 REM "LET PGINDEX=POS("<!?TF?MESSAGE"=LINE$); IF PGINDEX=0 THEN GOTO 01518 ELSE ESCAPE ; IF PGINDEX=1 THEN LET LINE$=LINE$(3) ELSE LET LINE$=LINE$(1,PGINDEX-1)+LINE$(PGINDEX+2); REM "GET RID OF THE DARNED <! ON PAGE CONTROL TAGS - OTHERWISE THE WHOLE LINE GETS COMMENTED OUT IN THE HTML
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2090
2001 LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE$)+LINE2$; GOTO 2095; REM "cust_code SSP303115
2002 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](23,35),1))+LINE2$; GOTO 2095; REM "cust_name SSP303115
2003 LINE$=LINE1$+FN%HTML_ESC$(STP(EC_PARM$(7,50),1))+LINE2$; GOTO 2095; REM "ec_company SSP303115
2004 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](1,7),1))+LINE2$; GOTO 2095; REM "session_id from EC$ SSP303115
2005 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](8,15),1))+LINE2$; GOTO 2095; REM "Buyer id SSP303115
2006 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[2](16,35),1))+LINE2$; GOTO 2095; REM "Buyer name SSP303115
2007 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1,10),1))+LINE2$; GOTO 2095; REM "worksheet SSP303115
2008 CALL "ZZDISP","AX",ECD$(26,10),"A/R",X3$,TMP$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(TMP$)+LINE2$; GOTO 2095; REM "Customer code SSP303115
2009 LINE$=LINE1$+FN%HTML_ESC$(ECD$(36,4))+LINE2$; GOTO 2095; REM "location code SSP303115
2010 LINE$=LINE1$+FN%HTML_ESC$(STP(EDN$(40,10)+EDN$(163,5),1))+LINE2$; GOTO 2095; REM "cust_req SSP303115
2011 IF STP(ECD$(58,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",ECD$(58,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+FN%HTML_ESC$(TMP$)+LINE2$; GOTO 2095; REM "req_date SSP303115
2012 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(64,30),1))+LINE2$; GOTO 2095; REM "attention SSP303115
2013 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(94,15),1))+LINE2$; GOTO 2095; REM "ship_via SSP303115
2014 IF STP(ECD$(109,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",ECD$(109,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+FN%HTML_ESC$(TMP$)+LINE2$; GOTO 2095; REM "needed by SSP303115
2015 GOSUB 3500; LINE$=LINES_SECTION$; GOTO 2095; REM "wslinestart
2016 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(214,9),1))+LINE2$; GOTO 2095; REM "cust_loc_code SSP303115
2017 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(51,30),1))+LINE2$; GOTO 2095; REM "address_1 SSP303115
2018 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(81,30),1))+LINE2$; GOTO 2095; REM "address_2 SSP303115
2019 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(111,16),1))+LINE2$; GOTO 2095; REM "city SSP303115
2020 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(127,2),1))+LINE2$; GOTO 2095; REM "state SSP303115
2021 LINE$=LINE1$+FN%HTML_ESC$(STP(LOC_ZIP$,1))+LINE2$; GOTO 2095; REM "zip SSP303115
2022 LINE$=LINE1$+FN%HTML_ESC$(ADDR$[1])+LINE2$; GOTO 2095; REM "addr_1 SSP303115
2023 LINE$=LINE1$+FN%HTML_ESC$(ADDR$[2])+LINE2$; GOTO 2095; REM "addr_2 SSP303115
2024 LINE$=LINE1$+FN%HTML_ESC$(ADDR$[3])+LINE2$; GOTO 2095; REM "addr_3 SSP303115
2025 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(236,9),1))+LINE2$; GOTO 2095; REM "cost_center SSP303115
2026 IF STP(FM0$(248,35),3," ")="" THEN LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(16,35),1))+LINE2$ ELSE LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(248,35),1))+LINE2$ END_IF ; GOTO 2095; REM "location_name SSP303115
2027 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(382,20),1))+LINE2$; GOTO 2095; REM "recv_dept SSP303115
2028 GOSUB 2150; LINE$=LINE1$+SHIPVIA$+LINE2$; GOTO 2095 ! WO181002, ship_via_list
2029 LINE$=LINE1$+FN%HTML_ESC$(EC$[4])+LINE2$; GOTO 2095; REM "date SSP303115
2030 LINE$=LINE1$+FN%HTML_ESC$(EC$[5])+LINE2$; GOTO 2095; REM "time SSP303115
2031 CALL "ZZDISP","AX",ECD$(235,8),"O/P",X3$,TMP$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(TMP$)+LINE2$; GOTO 2095; REM "tf_order_no SSP303115
2032 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(330,35),1))+LINE2$; GOTO 2095; REM "mark_for SSP303115
2033 LINE$=LINE1$+LINE2$; GOTO 2095; REM "location_list-NOTSUPPORTED
2034 GOTO 2095; REM "locchangestart-not supported
2035 LINE$=LINE1$+FN%HTML_ESC$(ECD$(376,35))+LINE2$; GOTO 2095; REM "man_name SSP303115
2036 LINE$=LINE1$+FN%HTML_ESC$(ECD$(243,30))+LINE2$; GOTO 2095; REM "man_addr_1 SSP303115
2037 LINE$=LINE1$+FN%HTML_ESC$(ECD$(273,30))+LINE2$; GOTO 2095; REM "man_addr_2 SSP303115
2038 LINE$=LINE1$+FN%HTML_ESC$(ECD$(303,16))+LINE2$; GOTO 2095; REM "man_city SSP303115
2039 LINE$=LINE1$+FN%HTML_ESC$(ECD$(319,2))+LINE2$; GOTO 2095; REM "man_state SSP303115
2040 CALL "ZZDISP","AX",ECD$(321,9),"ZIP",X3$,TMP_ZIP$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(TMP_ZIP$)+LINE2$; GOTO 2095; REM "man_zip SSP303115
2041 GOTO 2095; REM "category_entry_start-not supported
2042 LINE$=LINE1$+FN%HTML_ESC$(MESSAGE$)+LINE2$; GOTO 2095; REM "message SSP303115
2043 MESSAGE_SECTION$=""; LINE$=LINE1$+MESSAGE_SECTION$+LINE2$; GOTO 2095; REM "message_start-order message not currently suppported
2044 LINE$=LINE1$+FN%HTML_ESC$(ECD$(188,1))+LINE2$; GOTO 2095; REM "SHIP_VIA_CODE SSP303115
2045 IF STP(FM0$(16,35),3," ")="" THEN LD$=FM0$(248,35) ELSE LD$=FM0$(16,35) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(LD$,2))+LINE2$; GOTO 2095; REM "location_desc SSP303115SAVE
2046 LINE$=LINE1$+FN%HTML_ESC$(STP(SHIP$(111,16),1))+LINE2$; GOTO 2095; REM "addr_city SSP303115
2047 LINE$=LINE1$+FN%HTML_ESC$(STP(SHIP$(127,2),1))+LINE2$; GOTO 2095; REM "addr_state SSP303115
2048 LINE$=LINE1$+FN%HTML_ESC$(STP(SHIP$(129,9),1))+LINE2$; GOTO 2095; REM "addr_zip SSP303115
2049 LINE$=LINE1$+FN%HTML_ESC$(STP(SHIP$(51,30),1))+LINE2$; GOTO 2095; REM "addr_unformatted_1 SSP303115
2050 LINE$=LINE1$+FN%HTML_ESC$(STP(SHIP$(81,30),1))+LINE2$; GOTO 2095; REM "addr_unformatted_2 SSP303115
2051 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(376,35),2))+LINE2$; GOTO 2095; REM "addr_name SSP303115
2052 TEXT_OPT=1; TEXT_OPT=0; LINE$=LINE1$+LINE2$; GOTO 2095; REM "ship_via_text - 137648-NOT SUPPORTED
2053 TEXT_OPT=1; TEXT_OPT=0; LINE$=LINE1$+LINE2$; GOTO 2095; REM "location_text  -137648-NOT SUPPORTED
2054 LINE$=LINE1$+FN%HTML_ESC$(ECD$(411,4))+LINE2$; GOTO 2095; REM "cc_type SSP303115
2055 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(415,20),2))+LINE2$; GOTO 2095; REM "cc_number SSP303115
2056 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(435,4),2))+LINE2$; GOTO 2095; REM "cc_expire SSP303115
2057 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(439,40),2))+LINE2$; GOTO 2095; REM "cc_name SSP303115
2058 GOSUB 2300; LINE$=LINE1$+CCLIST$+LINE2$; GOTO 2095; REM "cc_type_list
2059 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(168,20),1))+LINE2$; GOTO 2095; REM "ordered_by SSP303115
2060 IF EC$[2](322,1)="Y" THEN LINE$=LINE1$+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+FN%HTML_ESC$(STP(STR(ITEM_PRICE_TOTAL:"###,###.00-"),1))+LINE2$; GOTO 2095; REM "item_price_total  ssp 146577, 154989 SSP303115
2061 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(ITEM_WGT_TOTAL:"###,###.00-"),1))+LINE2$; GOTO 2095; REM "weight_total_order  ssp 146577 SSP303115
2062 LINE$=LINE1$+FN%HTML_ESC$(X3$(69,1)+STP(STR(GRB(1)-FRT_INSALE:"###,###.00-"),1))+LINE2$; GOTO 2095; REM "invoice_total_net SSP303115
2063 LINE$=LINE1$+FN%HTML_ESC$(X3$(69,1)+STP(STR(GRB(4)+GRB(6)+GRB(8):"###,###.00-"),1))+LINE2$; GOTO 2095; REM "invoice_sales_tax SSP303115
2064 LINE$=LINE1$+FN%HTML_ESC$(X3$(69,1)+STP(STR(GRB(2)+FRT_INSALE:"###,###.00-"),1))+LINE2$; GOTO 2095; REM "invoice_freight SSP303115
2065 LINE$=LINE1$+FN%HTML_ESC$(X3$(69,1)+STP(STR(GRB(9):"###,###.00-"),1))+LINE2$; GOTO 2095; REM "invoice_total SSP303115
2066 INVOICE_SECTION$=""; LINE$=INVOICE_SECTION$; GOTO 2095; REM "invoicelinestart SSP303115
2067 CCNUMB$=STP(ECD$(415,20),3," "),CCNUMB$=STP(CCNUMB$,3,"-"),CCLEN=LEN(CCNUMB$); IF CCLEN>=4 THEN CCNUMB$="*********"+CCNUMB$(CCLEN-4,4) ELSE CCNUMB$="*********"+CCNUMB$ END_IF ; LINE$=LINE1$+FN%HTML_ESC$(CCNUMB$)+LINE2$; GOTO 2095; REM "cc_number_last4 SSP303115
2068 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(QTY_TOTAL_ORDER:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "qty_total_order SSP303115
2069 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(ITEM_COUNT:"##0"),1))+LINE2$; GOTO 2095; REM "item_count SSP303115
2070 CALL "ZZDISP","A",INVOICE_HDR_KEY$(7,8),"AR6",X3$,INVOICE_NUMBER$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(INVOICE_NUMBER$)+LINE2$; GOTO 2095; REM "invoice_number SSP303115
2071 IF ECD$(56,1)="Y" THEN TEMP$="Yes" ELSE TEMP$="No" END_IF ; LINE$=LINE1$+TEMP$+LINE2$; GOTO 2095; REM "perm_addr_change_shipto_done 154323
2072 IF ECD$(57,1)="Y" THEN TEMP$="Yes" ELSE TEMP$="No" END_IF ; LINE$=LINE1$+TEMP$+LINE2$; GOTO 2095; REM "perm_attn_change_shipto_done 154323
2073 GOSUB 7250; LINE$=LINE1$+FN%HTML_ESC$(STP(EDU$(82,240),2))+LINE2$; GOTO 2095; REM "order_approval_comments SSP303115
2074 IF EC$[2](322,1)="Y" THEN LINE$=LINE1$+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+FN%HTML_ESC$(STP(STR(CALC_ITEM_PRICE_TOTAL:"###,###.00-"),1))+LINE2$; GOTO 2095 ! WO177343, calc_item_price_total.  SSP181146, copied from EC3WS1 SSP303115
2075 IF OS_ITEM_PRICE_TOTAL=0 THEN OS_ITEM_PRICE_TOTAL$="" ELSE OS_ITEM_PRICE_TOTAL$=STP(STR(OS_ITEM_PRICE_TOTAL:"###,###.00-"),1) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(OS_ITEM_PRICE_TOTAL$)+LINE2$; GOTO 2095 ! WO184546, os_item_price_total, for TOPS items only, always show, even if buyer set to not see pricing. SSP303115
2076 LINE$=LINE1$+FN%HTML_ESC$(EDN$(677,40))+LINE2$; GOTO 2095 ! SSP188420, order_email_addr SSP303115
2077 LINE$=LINE1$+FN%HTML_ESC$(STP(EDN$(205,30),1))+LINE2$; GOTO 2095 ! SSP254770
2078 GOSUB 4000; LINE$=LINE1$+BUYER_PREV_ORDER_SECTION$+LINE2$; GOTO 2095 ! WO273337, buyer_previous_orders_start
2090 LINE$=LINE1$+LINE2$; GOTO 2095; REM "tag not found, replace with nothingg
2095 RETURN 
2100 REM "Get Location information & format addr$[] array with address
2106 GOSUB SET_READONLY; DIM ADDR$[3],FM0$(618); READ (Z[8],KEY="C"+EDN$(26,14),DOM=2107)IOL=0380
2107 GOSUB CLEAR_READONLY
2109 DIM SHIP$(521); SHIP$(51,87)=EDN$(243,87) ! SSP254377, different from EC3WS1, just need to display what we have in the worksheet
2119 LOC_ZIP$=""; CALL "ZZDISP","AX",EDN$(321,9),"ZIP",X3$,LOC_ZIP$,"",0,0,X4$; REM "153619
2120 ADDRI=1; REM "153618
2121 IF STP(EDN$(243,30),3," ")="" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=STP(EDN$(243,30),1),ADDRI=ADDRI+1; REM "153618
2122 IF STP(EDN$(273,30),3," ")="" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=STP(EDN$(273,30),1),ADDRI=ADDRI+1; REM "153618
2123 IF STP(EDN$(303,16),3," ")="" THEN CSZ$=STP(EDN$(319,2),1)+" "+STP(LOC_ZIP$,1) ELSE CSZ$=STP(EDN$(303,16),1)+", "+STP(EDN$(319,2),1)+" "+STP(LOC_ZIP$,1); REM "153618
2124 IF STP(CSZ$,3," ")="" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=CSZ$,ADDRI=ADDRI+1; REM "153618
2145 RETURN 
2150 REM "Return SHIPVIA$ as HTML for drop down list.  WO181002, copied from EC3WS1 then modified.
2151 IF EC$[7](587,1)="Y" AND FM0$(305,1)<>" " THEN GOTO 2186; REM "ck if restriction to ship-to ship-via activated.
2152 IF EC$[2](735,10)=DIM(10) THEN BUYER_SPECIFIC_SHIPVIA$="N" ELSE BUYER_SPECIFIC_SHIPVIA$="Y"
2153 READ (Z[23],KEY=EC$[2](51,10)+"SHIP_VIA  ",DOM=2154); REM "ck for customer specific shipvias
2154 CUSTOMER_SPECIFIC_SHIPVIA$="N"; ECV_KEY$=KEY(Z[23],END=2155); IF ECV_KEY$(1,20)=EC$[2](51,10)+"SHIP_VIA  " THEN CUSTOMER_SPECIFIC_SHIPVIA$="Y"
2155 SHIPVIA$=""; IF EDN$(188,1)<>" " THEN SELECTED$=EDN$(188,1) ELSE IF FM0$(305,1)<>DIM(1) THEN SELECTED$=FM0$(305,1) ELSE SELECTED$=EC$[1](155,1)
2158 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "If in comment remove the start of the comment
2159 IF CUSTOMER_SPECIFIC_SHIPVIA$="N" AND BUYER_SPECIFIC_SHIPVIA$="N" THEN READ (Z[9],KEY="S",DOM=2160) ELSE IF BUYER_SPECIFIC_SHIPVIA$="Y" THEN READ (Z[23],KEY=DIM(10)+EC$[2](735,10),DOM=2180) ELSE GOTO 2170
2160 READ (Z[9],END=2190)IOL=0390; IF FMPS$(1,1)<>"S" THEN GOTO 2190 ELSE IF FMPS$(18,1)="Y" THEN GOTO 2160; REM "Skip shipvias marked with an yes
2163 IF TEXT_OPT THEN SHIPVIA$=SHIPVIA$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2160; REM "137648
2165 IF FMPS$(2,1)=SELECTED$ THEN SHIPVIA$=SHIPVIA$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE SHIPVIA$=SHIPVIA$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2167 GOTO 2160
2170 REM "build shipvias from customer specific list
2171 GOSUB 6950; REM get defaults
2172 CUST_SHIPVIA$=KEY(Z[23],END=2180); READ (Z[23]); IF CUST_SHIPVIA$(1,20)<>EC$[2](51,10)+"SHIP_VIA  " THEN GOTO 2180
2174 READ (Z[9],KEY="S"+CUST_SHIPVIA$(21,1),DOM=2172)IOL=0390; IF FMPS$(18,1)="Y" THEN GOTO 2171; REM "skip shipvias marked with a yes
2175 IF TEXT_OPT THEN {
2176 IF FMPS$(2,1)=DEF_SHIP_VIA$ THEN SHIPVIA$=FMPS$(2,1)+" "+FMPS$(3,15)+EOL$+SHIPVIA$; GOTO 2172 ELSE SHIPVIA$=SHIPVIA$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2172
2177  } ELSE {
2178 IF FMPS$(2,1)=DEF_SHIP_VIA$ THEN SHIPVIA$="<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"+SHIPVIA$ ELSE IF FMPS$(2,1)=SELECTED$ THEN SHIPVIA$=SHIPVIA$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE SHIPVIA$=SHIPVIA$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2179 GOTO 2172 }
2180 REM "build ship-vias from buyer assigned code set
2181 BUYER_SHIPVIA$=KEY(Z[23],END=2190); READ (Z[23]); IF BUYER_SHIPVIA$(1,20)<>DIM(10)+EC$[2](735,10) THEN GOTO 2190
2182 READ (Z[9],KEY="S"+BUYER_SHIPVIA$(21,1),DOM=2181)IOL=0390
2183 IF FMPS$(18,1)="Y" THEN GOTO 2181; REM "Skip ship via's marked with an yes
2184 IF TEXT_OPT THEN SHIPVIA$=SHIPVIA$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2181 ELSE IF FMPS$(2,1)=SELECTED$ THEN SHIPVIA$=SHIPVIA$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE SHIPVIA$=SHIPVIA$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2185 GOTO 2181
2186 REM "restricted to shipvia on shipto
2187 IF TEXT_OPT THEN SHIPVIA$=FM0$(305,1)+" "+FM0$(306,15)+EOL$ ELSE SHIPVIA$="<option selected value="+QUO+FM0$(305,1)+QUO+">"+FM0$(306,15)+"</option>"
2190 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN SHIPVIA$=SHIPVIA$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2191 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2192 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1)
2195 RETURN 
3000 REM "message processing, lookup up message in ECO, return in MESSAGE_SECTION
3005 IF ORDER_MESSAGE_NO=0 THEN MESSAGE_SECTION$=""; DIM ECO$(300); GOTO 3045; REM "discard message section HTML
3010 DIM ECO$(300); ECO$(1,10)=ECD$(26,10),ECO$(11,10)=X0$,ECO$(21,5)=STR(ORDER_MESSAGE_NO:"00000")
3011 FIND (Z[17],KEY=ECO$(1,25),DOM=3012)ECO$; GOTO 3013
3012 ECO$(1,10)=DIM(10); FIND (Z[17],KEY=ECO$(1,25),DOM=3016)ECO$
3016 REM "PRINT ECO$; ESCAPE
3017 IF ECO$(26,1)="Y" THEN GOTO 3045; REM "If don't display, then skip this section
3020 MTMP$=STP(ECO$(30,240),1)
3025 MS2_INDEX=POS("?tf?"=MTMP$); IF MS2_INDEX=0 THEN GOTO 3040
3026 MSEND2_INDEX=POS("?"=MTMP$(MS2_INDEX+4)),MTMP_TAG$=MTMP$(MS2_INDEX+4,MSEND2_INDEX-1),MTMP1$=MTMP$(1,MS2_INDEX-1),MTMP2$=MTMP$(MS2_INDEX+MSEND2_INDEX+4)
3030 MINFO$=""; IF NUM(MTMP_TAG$,ERR=3031)<=15 THEN MINFO$=MESS_INFO$[NUM(MTMP_TAG$,ERR=3031)]
3032 MTMP$=MTMP1$+MINFO$+MTMP2$
3035 GOTO 3025
3041 MLINE$=""
3042 IF MTMP$="" THEN GOTO 3043 ELSE MPOS=POS(" "=MTMP$); IF MPOS=0 OR MPOS=LEN(MTMP$) THEN INLINE$=MTMP$,MTMP$="" ELSE INLINE$=MTMP$(1,MPOS),MTMP$=MTMP$(MPOS+1) END_IF ; IF LEN(MLINE$)+LEN(INLINE$)>60 THEN MESSAGE$=MESSAGE$+MLINE$+EOL$,MLINE$=INLINE$ ELSE MLINE$=MLINE$+INLINE$ END_IF ; GOTO 3042
3043 MESSAGE$=MESSAGE$+MLINE$
3044 REM "DIM MESS_INFO$[FN%NEA("MESS_INFO$",1)]
3045 RETURN 
3500 REM "Get lines section in LS_TEMPLATE$ and generate LINES_SECTION$ containing an entry for each order line from ESE
3502 LINES_SECTION$="",LS_TAGS$="001<line_number>002<line_type>003<from_customer>004<item_code>005<cost_center>006<cost_code>007<item_desc>008<um>009<ship_from>010<quantity>011<qty_per_um>012<session_id>013<worksheet>014<3pinfostart>015<>016<3p_id>017<lotlinestart>018<qty_in_eaches>019<linemessage_start>020<cic_code>021<item_price>022<item_price_ext>023<vp_info_1>024<vp_info_2>025<vp_id>026<proof_url>027<po_code>028<vendor_code>029<vendor_plant>030<weight_total>031<form_memo>032<line_class>033<item_key>034<ic1_avail_in_stock_sell>035<calc_item_price>036<calc_item_price_ext>037<os_item_price>038<os_item_price_ext>039<calc_item_price_num>040<item_code_esc>041<item_desc_esc>042<quantity_esc>043<um_code>044<qty_per_um_esc>045<item_source>046<ext_line_number>047<changeqtystart>"
3503 REM "Setup LS_TEMPLATE$
3504 LS_TEMPLATE$=LINE$
3505 READ (100,END=3506)LINE$; GOSUB 8150; LS_TEMPLATE$=LS_TEMPLATE$+LINE$+EOL$; IF POS("?tf?wslineend?"=LINE$)=0 THEN GOTO 3505
3509 READ (Z[5],KEY=WORKSHEET$,DOM=3510)
3510 DIM EDO$(499),EDO[8]; READ (Z[5],END=3595)IOL=0350; IF EDO$(1,10)<>WORKSHEET$ THEN GOTO 3595 ELSE GOSUB 7600; GOSUB 8250 ! 155076
3514 LS$=LS_TEMPLATE$
3515 LS_INDEX=POS("?tf?"=LS$); IF LS_INDEX=0 THEN GOTO 3591
3516 LSEND_INDEX=POS("?"=LS$(LS_INDEX+4)),LS_TAG$=LS$(LS_INDEX+4,LSEND_INDEX-1),LS1$=LS$(1,LS_INDEX-1),LS2$=LS$(LS_INDEX+LSEND_INDEX+4),LS_POS=POS("<"+LS_TAG$+">"=LS_TAGS$); IF LS_POS=0 THEN LS$=LS1$+LS2$,LS_INDEX=0 ELSE LS_INDEX=NUM(LS_TAGS$(LS_POS-3,3))
3520 ON LS_INDEX GOTO 3589,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3589
3521 LS$=LS1$+FN%HTML_ESC$(EDO$(25,3))+LS2$; GOTO 3590; REM "line_number SSP303115
3522 LS$=LS1$+FN%HTML_ESC$(EDO$(28,1))+LS2$; GOTO 3590; REM "line_type SSP303115
3523 CALL "ZZDISP","AX",EDO$(29,10),"A/R",X3$,TMP$,"",0,0,X4$; LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3590; REM "from_customer SSP303115
3524 IF EDO$(18,1)="O" THEN IC$=EDO$(228,20) ELSE IC$=EDO$(39,10) END_IF ; LS$=LS1$+FN%HTML_ESC$(STP(IC$,1))+LS2$; GOTO 3590; REM "item_code SSP303115
3525 LS$=LS1$+FN%HTML_ESC$(STP(EDO$(49,9),1))+LS2$; GOTO 3590; REM "cost_center SSP303115
3526 LS$=LS1$+FN%HTML_ESC$(STP(EDO$(58,9),1))+LS2$; GOTO 3590; REM "cost_code SSP303115
3527 ITEM_COUNT=ITEM_COUNT+1; LS$=LS1$+FN%HTML_ESC$(STP(EDO$(67,40),1))+LS2$; GOTO 3590; REM "item_desc SSP303115
3528 TMP$=STP(EDO$(107,4),1)+"/"+STP(STR(EDO[1]:"##,###"),2); IF TMP$="/" THEN LS$=LS1$+LS2$; GOTO 3590 ELSE LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3590; REM "um SSP303115
3529 LS$=LS1$+FN%HTML_ESC$(STP(EDO$(111,4),1))+LS2$; GOTO 3590; REM "ship_from  SSP303115
3530 QTY_TOTAL_ORDER=QTY_TOTAL_ORDER+(EDO(0)/QTY_DIVISOR); LS$=LS1$+FN%HTML_ESC$(STR(EDO[0]/QTY_DIVISOR:"#,###,##0"))+LS2$; GOTO 3590; REM "quantity SSP303115
3531 LS$=LS1$+FN%HTML_ESC$(STR(EDO[1]:"##,###"))+LS2$; GOTO 3590; REM "qty_per_um SSP303115
3532 LS$=LS1$+FN%HTML_ESC$(STP(EC$[1](1,7),1))+LS2$; GOTO 3590; REM "session_id SSP303115
3533 LS$=LS1$+FN%HTML_ESC$(WORKSHEET$)+LS2$; GOTO 3590; REM "worksheet SSP303115
3534 GOSUB 3950; LS$=LS1$+TPINFO_TEMPLATE$+LS2$; GOTO 3590; REM "3pinfostart
3535 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(44,20),1))+LS2$; GOTO 3590; REM "** not used ** SSP303115
3536 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(14,10),1))+LS2$; GOTO 3590; REM "3p_id SSP303115
3537 GOSUB 3900; LS$=LS1$+LOT_SECTION$+LS2$; GOTO 3590; REM "lotlinestart - output of lotted information
3538 GOSUB 7300; LS$=LS1$+FN%HTML_ESC$(STR(QTY_IN_EACHES:"#,###,###"))+LS2$; GOTO 3590; REM "qty_in_eaches. SSP172401 SSP303115
3539 GOSUB 3850; LS$=LS1$+LINEMSG_SECTION$+LS2$; GOTO 3590; REM "linemessage_start
3540 LS$=LS1$+FN%HTML_ESC$(TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1)))+LS2$; GOTO 3590; REM "cic_code, form code if cic_code is blank SSP303115
3541 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3590 ELSE GOSUB 8246; IF FM1(29)=0 THEN ITEMPRICE=FM1(3) ELSE ITEMPRICE=FM1(29) END_IF ; LS$=LS1$+FN%HTML_ESC$(STP(STR(ITEMPRICE:"###,###.00-"),2))+LS2$; GOTO 3590; REM "item_price 154989 SSP303115
3542 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3590 ELSE GOSUB 8246; IF FM1(29)=0 THEN ITEMPRICE=FM1(3) ELSE ITEMPRICE=FM1(29) END_IF ; ITEMPRICEEXT=ITEMPRICE*EDO(0); ITEM_PRICE_TOTAL+=ITEMPRICEEXT; LS$=LS1$+FN%HTML_ESC$(STP(STR(ITEMPRICEEXT:"###,###.00-"),2))+LS2$; GOTO 3590; REM "item_price_ext 154989 SSP303115
3543 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(24,20),1))+LS2$; GOTO 3590; REM "vp_info_1 ssp#148607 SSP303115
3544 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(44,20),1))+LS2$; GOTO 3590; REM "vp_info_2 ssp#148607 SSP303115
3545 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(14,10),1))+LS2$; GOTO 3590; REM "vp_id ssp#148607 SSP303115
3546 GOSUB 4100; LS$=LS1$+FN%HTML_ESC$(PROOF_URL$)+LS2$; GOTO 3590; REM "proof_url ssp#148607 SSP303115
3547 LS$=LS1$+FN%HTML_ESC$(EDO$(129,1))+LS2$; GOTO 3590; REM "po_code SSP303115
3548 CALL "ZZDISP","AX",EDO$(115,10),"A/P",X3$,TMP$,"",0,0,X4$; LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3590; REM "vendor_code SSP303115
3549 LS$=LS1$+FN%HTML_ESC$(EDO$(125,4))+LS2$; GOTO 3590; REM "vendor_plant SSP303115
3550 GOSUB 8246; IF FM1(18)=0 THEN ITEMWGT=0 ELSE ITEMWGT=FM1(18) END_IF ; ITEMWGTEXT=ITEMWGT*EDO(0); ITEM_WGT_TOTAL+=ITEMWGTEXT; IF ITEMWGTEXT=0 THEN WGT$="n/a" ELSE WGT$=STP(STR(ITEMWGTEXT:"###,###.00-"),2) END_IF ; LS$=LS1$+FN%HTML_ESC$(WGT$)+LS2$; GOTO 3590; REM "weight_total SSP303115
3551 GOSUB 8246; LS$=LS1$+FN%HTML_ESC$(STP(FM1$(389,60),2))+LS2$; GOTO 3590; REM "form_memo SSP303115
3552 LC=NUM(EDO$(25,3)),LC$=STR(MOD(LC,2)+1); LS$=LS1$+FN%HTML_ESC$(LC$)+LS2$; GOTO 3590; REM "line_class SSP303115
3553 LS$=LS1$+FN%HTML_ESC$(EDO$(29,20))+LS2$; GOTO 3590; REM "item_key SSP303115
3554 IF POS(EDO$(28,1)="CI")=0 THEN LS$=LS1$+LS2$; GOTO 3590 ELSE GOSUB 8350; LS$=LS1$+FN%HTML_ESC$(STP(STR(IC1INFO[31]/PACKDIV:"#,###,##0-"),1))+LS2$; GOTO 3590 ! WO181418, ic1_avail_in_stock_sell, only for C or I type worksheet lines SSP303115
3555 GOSUB 8246; GOSUB 7880; IF EDO$(18,1)<>"O" AND POS(EDO$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; LS$=LS1$+FN%HTML_ESC$(RETURNED_PRICE$)+LS2$; GOTO 3590 ! WO177343, calc_item_price.  SSP181146, copied from EC3WS1. SSP255326, IMS price SSP303115
3556 GOSUB 8246; GOSUB 7880; IF EDO$(18,1)<>"O" AND POS(EDO$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; GOSUB 7350; CALC_ITEM_PRICE_TOTAL+=ITEMPRICEEXT; LS$=LS1$+FN%HTML_ESC$(STP(STR(ITEMPRICEEXT:"###,###.00-"),2))+LS2$; GOTO 3590 ! WO177343, calc_item_price_ext.  SSP181146, copied from EC3WS1. SSP255326, IMS price SSP303115
3557 IF EDO$(18,1)<>"O" THEN RETURNED_PRICE$="" ELSE GOSUB 7882 END_IF ; LS$=LS1$+FN%HTML_ESC$(RETURNED_PRICE$)+LS2$; GOTO 3590 ! WO184546, os_item_price, TOPS price,always show, even if buyer set to not see pricing. SSP303115
3558 IF EDO$(18,1)<>"O" THEN ITEMPRICEEXT=0,OS_ITEMPRICEEXT$="" ELSE GOSUB 7882; GOSUB 7350; OS_ITEMPRICEEXT$=STP(STR(ITEMPRICEEXT:"###,###.00-"),2),OS_ITEM_PRICE_TOTAL+=ITEMPRICEEXT END_IF ; LS$=LS1$+FN%HTML_ESC$(OS_ITEMPRICEEXT$)+LS2$; GOTO 3590 ! WO184546, os_item_price_ext, TOPS price, always show, even if buyer set to not see pricing. SSP303115
3559 GOSUB 8246; GOSUB 7880; IF EDO$(18,1)<>"O" AND POS(EDO$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; LS$=LS1$+FN%HTML_ESC$(STP(STP(RETURNED_PRICE$,3,X3$(69,1)),2))+LS2$; GOTO 3590 ! WO210688, calc_item_price_num SSP303115
3560 IF EDO$(18,1)="O" THEN IC$=EDO$(228,20) ELSE IC$=EDO$(39,10) END_IF ; LS$=LS1$+FN%HTML_ESC$(STP(IC$,1))+LS2$; GOTO 3590; REM "item_code_esc SSP303115
3561 ITEM_COUNT=ITEM_COUNT+1; LS$=LS1$+FN%HTML_ESC$(STP(EDO$(67,40),1))+LS2$; GOTO 3590; REM "item_desc_esc SSP303115
3562 QTY_TOTAL_ORDER=QTY_TOTAL_ORDER+(EDO(0)/QTY_DIVISOR); LS$=LS1$+FN%HTML_ESC$(STP(STR(EDO[0]/QTY_DIVISOR:"########0.00"),2))+LS2$; GOTO 3590; REM "quantity_esc SSP303115
3563 LS$=LS1$+FN%HTML_ESC$(STP(EDO$(107,4),1))+LS2$; GOTO 3590; REM "um_code SSP303115
3564 LS$=LS1$+FN%HTML_ESC$(STR(EDO[1]))+LS2$; GOTO 3590; REM "qty_per_um_esc SSP303115
3565 LS$=LS1$+FN%HTML_ESC$(STP(EDO$(18,1),1))+LS2$; GOTO 3590; REM "item_source
3566 LS$=LS1$+FN%HTML_ESC$(STP(EDO$(321,3),1))+LS2$; GOTO 3590; REM "ext_line_number
3567 GOSUB DISPLAY_CHGQTY_SECTION; LS$=LS1$+CQ_SECTION$+LS2$; GOTO 3590; REM "changeqtystart
3589 LS$=LS1$+LS2$; GOTO 3590; REM "not found replace with a '?'
3590 GOTO 3515
3591 IF LEN(LINES_SECTION$)+LEN(LS$)>64000 THEN PRINT (OUTPUT)LINES_SECTION$,EOL$; LINES_SECTION$=""; REM "ssp#134905
3592 LINES_SECTION$=LINES_SECTION$+LS$; IF DISPLAY_LINE_NUMBER$<>"" THEN GOTO 3595 ELSE GOTO 3510; REM "add to lines section, then get next line if any ssp#146692
3595 RETURN 
3850 REM "get line message section (linemessage_start)
3852 LINEMSG_SECTION$="",LM_TEMPLATE$=LS2$(2); IF LS1$(LEN(LS1$)-1,2)="<!" THEN LS1$=LS1$(1,LEN(LS1$)-2)
3853 LINEMSG_END=POS("<!?tf?linemessage_end"=LM_TEMPLATE$),LM_TEMPLATE$=LM_TEMPLATE$(1,LINEMSG_END-1)
3854 LINEMSG_END=POS("<!?tf?linemessage_end"=LS2$); IF LEN(LS2$)=LINEMSG_END+23 THEN LS2$="" ELSE LS2$=LS2$(LINEMSG_END+23); REM "strip out the line message section from LS2$
3858 DIM OPTIONS$(20); OPTIONS$(2,1)="Y"; REM "OPTIONS$(2,1)=approval order
3860 CALL "EC3MG0",X3$,X4$,EC_PARM$,EC${ALL},LM_TEMPLATE$,EDO$,MESS_INFO${ALL},OPTIONS$; REM "process messages for line
3891 LINEMSG_SECTION$=LM_TEMPLATE$
3895 RETURN 
3900 REM "Get lotted lines section in LOT_TEMPLATE$ and generate LOT_SECTION$ containing an entry for each order line from ICF for the corresponding line section item
3903 REM "Setup LOT_TEMPLATE$
3904 LOT_TEMPLATE$=LS2$(2)
3905 LOT_END=POS("<!?tf?lotlineend"=LOT_TEMPLATE$),LOT_TEMPLATE$=LOT_TEMPLATE$(1,LOT_END-1)
3906 LS2$=LS2$(2); REM "get rid of trailing > from opening <!?tf?lotlinstart>
3907 LOT_END=POS("<!?tf?lotlineend"=LS2$); IF LEN(LS2$)=LOT_END+18 THEN LS2$="" ELSE LS2$=LS2$(LOT_END+18); REM "strip out the lot section from LS2$
3910 DIM ECR$(1000); FIND (Z[25],KEY=EDO$(29,20),DOM=3911)ECR$
3912 IF STP(ECR$(256,48),1)="" THEN WHSE_LIST$=EC$[11] ELSE WHSE_LIST$=STP(ECR$(256,48),1)
3920 REM "get lot records
3922 CALL "EC3IC1",X3$,X4$,EC_PARM$,EC${ALL},EDO$(29,20),WHSE_LIST$,EDO[0]*EDO[1],EDO[1],ICF_INFO${ALL},NEXT_ICF_INDEX,ECD$(235,8)
3925 REM "IF NEXT_ICF_INDEX=1 THEN LET LOT_TEMPLATE$=""; GOTO 03933; REM "NO LOT RECORDS
3930 REM "output lot section
3932 CALL "EC3IC2",X3$,X4$,EC_PARM$,EC${ALL},LOT_TEMPLATE$,ICF_INFO${ALL},NEXT_ICF_INDEX-1,""
3933 IF EDO$(129,1)=" " THEN LOT_SECTION$=LOT_TEMPLATE$ ELSE LOT_SECTION$=""; REM "if po being issued then eliminate lot section completely
3940 RETURN 
3950 REM "Get lines section in TPINFO_TEMPLATE$ and generate TPINFO_SECTION$ containing an entry for each order line from ESE
3951 IF LEN(LS1$)<=2 THEN LS1$="" ELSE LS1$=LS1$(1,LEN(LS1$)-2); REM "get rid of <!
3952 TPINFO_SECTION$="",TPINFO_TAGS$="001<3p_info_1>002<3p_info_2>003<3p_text>004<3p_info_3>005<3p_proof_url>"
3953 REM "Setup TPINFO_TEMPLATE$
3954 TPINFO_TEMPLATE$=LS2$(2)
3955 TPINFO_END=POS("<!?tf?3pinfoend"=TPINFO_TEMPLATE$),TPINFO_TEMPLATE$=TPINFO_TEMPLATE$(1,TPINFO_END-1)
3956 LS2$=LS2$(2); REM "get rid of trailing > from opening <!?tf?3pinfostart>
3957 TPINFO_END=POS("<!?tf?3pinfoend"=LS2$); IF LEN(LS2$)=TPINFO_END+17 THEN LS2$="" ELSE LS2$=LS2$(TPINFO_END+17); REM "strip out the lot section from LS2$
3959 IF NUL(MID(ECR$,243,10)) AND NUL(MID(EC7$,14,10)) THEN TPINFO_TEMPLATE$=""; GOTO 3995; REM "if no 3pinfo in both ECR AND EC7 record, eliminate section; used to be, check only ECR and eliminate section
3965 TPINFO_INDEX=POS("?tf?"=TPINFO_TEMPLATE$); IF TPINFO_INDEX=0 THEN GOTO 3991
3966 TPINFOEND_INDEX=POS("?"=TPINFO_TEMPLATE$(TPINFO_INDEX+4)),TPINFO_TAG$=TPINFO_TEMPLATE$(TPINFO_INDEX+4,TPINFOEND_INDEX-1),TP1$=TPINFO_TEMPLATE$(1,TPINFO_INDEX-1),TP2$=TPINFO_TEMPLATE$(TPINFO_INDEX+TPINFOEND_INDEX+4),TPINFO_POS=POS("<"+TPINFO_TAG$+">"=TPINFO_TAGS$); IF TPINFO_POS=0 THEN TPINFO_TEMPLATE$=TP1$+TP2$,TPINFO_INDEX=0 ELSE TPINFO_INDEX=NUM(TPINFO_TAGS$(TPINFO_POS-3,3))
3970 ON TPINFO_INDEX GOTO 3989,3971,3972,3973,3974,3975,3989
3971 TPINFO_TEMPLATE$=TP1$+STP(EC7$(24,20),1)+TP2$; GOTO 3990; REM "3p_info_1
3972 TPINFO_TEMPLATE$=TP1$+STP(EC7$(44,20),2)+TP2$; GOTO 3990; REM "3p_info_2. SSP176753, was previously setting to EC7$(24,20)
3973 GOSUB 4350; TPINFO_TEMPLATE$=TP1$+VAR_TEXT$+TP2$; GOTO 3990; REM "3p_text 166342
3974 TPINFO_TEMPLATE$=TP1$+STP(EC7$(64,50),2)+TP2$; GOTO 3990 ! WO178946, 3p_info_3
3975 THREEPTEMP$=THREEPKEY$,THREEPKEY$=TBL(NUL(MID(ECR$,243,10)),ECR$(243,10),EC7$(14,10)); GOSUB 4130; THREEPKEY$=THREEPTEMP$; TPINFO_TEMPLATE$=TP1$+STP(EC6$(141,60),2)+TP2$; GOTO 3990 ! SSP215913, 3p_proof_url
3989 TPINFO_TEMPLATE$=TP1$+"?"+TP2$; GOTO 3990; REM "not found replace with a '?'
3990 GOTO 3965
3995 RETURN 
4000 ! WO273337, buyer previous orders, call EC3BPO to populate
4005 BUYER_PREV_ORDER_SECTION$="",BPO_TEMPLATE$=LINE$+EOL$
4006 READ (100,END=*NEXT)LINE$; GOSUB 8150; BPO_TEMPLATE$=BPO_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buyer_previous_orders_end?"=LINE$)=0 THEN GOTO *SAME
4010 BPO_END=POS("?tf?buyer_previous_orders_end?"=BPO_TEMPLATE$); BPO_TEMPLATE$=BPO_TEMPLATE$(1,BPO_END+30); LINE2$=LINE$(31)
4015 GOSUB 7250; ORIG_BUYER$=MID(EDU$,21,15); IF STP(ORIG_BUYER$,3)="" THEN GOTO 4040
4025 OPTIONS$=""; CALL "EC3BPO",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},ORIG_BUYER$,OPTIONS$,"?tf?buyer_previous_orders_start?",BPO_TEMPLATE$,"?tf?buyer_previous_orders_end?",BPO_STAT${ALL},3 ! Call EC3BPO to populate BPO section with 3 previous orders
4040 BUYER_PREV_ORDER_SECTION$=BPO_TEMPLATE$
4045 RETURN 
4049 ! 
4100 ! get PROOF_URL$ - this is only the url to directory you must tack on the actual proof file name ssp#148607
4105 PROOF_URL$=""
4110 DIM EC6$(900); FIND (Z[27],KEY=MID(EC7$,14,10),DOM=*NEXT)EC6$
4120 PROOF_URL$=STP(EC6$(141,60))
4125 RETURN 
4130 REM "get 3p id master record 148750
4140 IF THREEPKEY$=DIM(10) THEN THREEPKEY$=MID(ECR$,243,10) END_IF ; IF THREEPKEY$=DIM(10) THEN DIM EC6$(900); GOTO 4149 ! SSP166300, was getting error 47 at 8447, added DIM for EC6$
4141 DIM EC6$(900); FIND (Z(27),KEY=THREEPKEY$,DOM=*NEXT)EC6$
4149 RETURN 
4250 REM "get TOPS united stationers item code
4252 DIM IC2$(100); FIND (Z(31),KEY=GRT$(55,20)+EC_PARM$(936,10)+DIM(4),DOM=4253)IC2$
4254 RETURN 
4350 REM "3p_text handling, TP2$ should have [x] in it
4355 REM "Extract [x] part from TP2, if not found then ignore
4360 VAR_TEXT$=""
4365 BRACKET_POS=POS("]"=TP2$); IF MID(TP2$,1,1)<>"[" OR BRACKET_POS=0 THEN RETURN ELSE VAR_CODE$=TP2$(1,BRACKET_POS),TP2$=TP2$(BRACKET_POS+1)
4370 VAR_CODE$=VAR_CODE$(2,LEN(VAR_CODE$)-2); VAR_CODE$=STR(NUM(VAR_CODE$,ERR=4368):"00000")
4375 VAR_CODE_KEY$=TBL(NUL(MID(ECR$,243,10)),ECR$(243,10),EC7$(14,10))+VAR_CODE$; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,VAR_CODE_KEY$,VAR_TEXT${ALL}
4380 VAR_TEXT$=VAR_TEXT$[1]
4385 RETURN 
4390 ! 
4900 ! WO177343, calc_item_price, get sell price by checking for quantity breaks and pricing tables, similar to OF2UAA logic, load pricing array (7600), then pick a price (8000).  SSP181146, copied from EC3WS1
4905 GOSUB SET_READONLY; DIM AR1$(599),FMPD$(243); READ (33007,KEY=EC$[2](51,10),DOM=*NEXT)AR1$; FIND (Z[9],KEY="D"+EC$[2](51,10),DOM=*NEXT)FMPD$ ! WO226583, need customer default parms 
4910 DIM IC0$(187),IC0[40]; FIND (Z[29],KEY=EDO$(29,20),DOM=*NEXT)IOL=0360; GOSUB CLEAR_READONLY; GOTO 4915
4911 GOSUB CLEAR_READONLY; GOTO *RETURN ! No IC0 record for this item
4915 PRECISION M6[1]
4920 DIM P[12,1]; P[0,1]=IC0[0]
4925 FOR I=1 TO 6; P[I,0]=IC0[1+(I-1)*2],P[I,1]=IC0[2+(I-1)*2],P[I+6,0]=IC0[21+(I-1)*2],P[I+6,1]=IC0[22+(I-1)*2]; NEXT I
4930 IF POS(" "<>IC0$(109,3)+AR1$(398,3))>0 THEN X$=$7E$+IC0$(109,3)+AR1$(398,3)+IC0$(1,20); DIM Q[35]; CALL "IC2ICF",X3$,Z[9],X$,EDO[1],IC0[15],IC0[14],IC0[0],IC0[18],IC0[17],IC0[20],Q{ALL} ! Pricing table calculation
4935 PRECISION 2
4940 IF X$="" THEN GOTO 4950
4942 DIM P[12,1]; P[0,1]=Q[0]
4945 FOR I=0 TO 11; P[I+1,0]=Q[I*2+1],P[I+1,1]=Q[I*2+2]; NEXT I
4950 ! Calculate price
4952 LOWEST_QBG=0; IF MID(FMPD$,107,1)="Y" AND MID(IC0$,113,3)<>DIM(3) THEN LOWEST_QBG=1 ! WO226583, if parm Customer always gets lowest QBG price? set to Y and item has QBG set then see line 4970 for logic to always use lowest non-zero break
4955 PRECISION M6[1]
4960 CALC_ITEM_PRICE=P[0,1]*EDO[1]/IC0[14]; IF P[1,0]=0 THEN GOTO 4985
4963 GOSUB 7300 ! Calculate QTY_IN_EACHES
4965 FOR I=1 TO 12
4970 IF ABS(QTY_IN_EACHES)<P[I,0] AND LOWEST_QBG=0 THEN I=99; GOTO 4980 ! WO226583, if always give lowest then don't exit if qty is lower than break
4975 IF P[I,0]<>0 THEN CALC_ITEM_PRICE=P[I,1]*EDO[1]/IC0[14]
4980 NEXT I
4985 PRECISION 2
4989 RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
4990 RETURN 
4995 ! 
6600 REM "Create email request file 148750
6601 ESCAPE ; REM "Use port 1001 and 1002
6602 DIM ETEXT_NEEDED$(30); ETEXT_NEEDED$(1,10)="email",ETEXT_NEEDED$(16,10)="email",ETEXT_NEEDED$(11,5)="00001",ETEXT_NEEDED$(26,5)="00002"; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,ETEXT_NEEDED$,ETEXT${ALL}
6605 CLOSE (1001); CLOSE (1002)
6610 PRECISION 5; EMAIL_FILE$=%SERVER_DIR$+"TMP"+EMAIL_ACTION$+STR(INT(RND*100000)); PRECISION 2
6611 OPEN (1002,ERR=6615)EMAIL_FILE$; CLOSE (1002); GOTO 6610; REM "if we can open the file then it is in use, try again
6615 REM "Create file, then open files and copy
6620 SERIAL EMAIL_FILE$,DISK_NO,0,ERR=6610
6621 OPEN (1001,ERR=6645)TMP_NAME$; OPEN (1002)EMAIL_FILE$; MESS$="Creating temp HTML e-mail file "+EMAIL_FILE$,MTYPE$="EMAIL"; GOSUB 7500
6622 TEXT_IN$=ETEXT$[1]; GOSUB 6650
6623 WRITE RECORD (1002)TEXT_IN$; REM "write out email header
6625 READ RECORD (1001,SIZ=6692,END=6629)COPY$; COPY$=COPY$(1,POS(DIM(512,$00$)=COPY$+DIM(512,$00$))-1); IF MID(COPY$,1,LEN(HTML_TEXT$))=HTML_TEXT$ THEN COPY$=MID(COPY$,LEN(HTML_TEXT$)+1) END_IF ; WRITE RECORD (1002,SIZ=LEN(COPY$))COPY$; GOTO 6625 ! strip off html_header if here, it is covered in email open
6629 WRITE RECORD (1002)ETEXT$[2]; REM "write out email closing
6630 PRECISION 5; EMAIL_ACTION_FILE$=%SERVER_DIR$+STR(INT(RND*100000))+".em"; PRECISION 2; CLOSE (1003); OPEN (1003,ERR=6631)EMAIL_ACTION_FILE$; GOTO 6630; REM "find unused tmp file name for email control file
6631 SERIAL EMAIL_ACTION_FILE$,DISK_NO,0,ERR=6640; OPEN (1003)EMAIL_ACTION_FILE$
6632 WRITE RECORD (1003)"basic=EC3EM0"; WRITE RECORD (1003)"template="+EMAIL_FILE$; WRITE RECORD (1003)"session_id="+SID$; WRITE RECORD (1003)"remove_file=Y" ! SSP212160 jdf
6633 MESS$="Posting e-mail to send : "+EMAIL_ACTION_FILE$,MTYPE$="EMAIL"; GOSUB 7500
6640 CLOSE (1001); CLOSE (1002); CLOSE (1003)
6645 RETURN 
6950 REM ' get ship via default
6955 DEF_SHIP_VIA$=""
6960 IF EDN$(188,1)<>" " THEN DEF_SHIP_VIA$=EDN$(188,1) ELSE IF FM0$(305,1)<>DIM(1) THEN DEF_SHIP_VIA$=FM0$(305,1) ELSE DEF_SHIP_VIA$=EC$[1](155,1)
6995 RETURN 
7000 REM "convert email action to 3p id master
7003 DIM TP_ACTIONCD$(10),TP_ACTIONCD1$(200),TP_ACTIONCD2$(200)
7005 XX=INT(POS(EMAIL_ACTION$="AN",2)/2); ON XX GOTO 7045,7010,7045
7010 TP_ACTIONCD$=EC_PARM$(1021,10); GOTO 7030; REM "email notification of required approval "
7030 FIND (Z(28),KEY=TP_ACTIONCD$+"00001",DOM=*NEXT)TP_ACTIONCD_1$
7031 FIND (Z(28),KEY=TP_ACTIONCD$+"00002",DOM=*NEXT)TP_ACTIONCD_2$
7045 RETURN 
7050 REM "get ccinformation
7055 DIM GRB(500),GRB(20)
7060 IF POS(CCACTION$="CI")=0 THEN GOTO 7090 ELSE INVCHAN=Z(28)
7070 FIND (INVCHAN,KEY=ECD$(509,14),DOM=7071)IOL=0470
7098 RETURN 
7100 REM "build invoice display array
7101 IF ECD$(509,14)=DIM(14) THEN GOTO 7145
7102 INVHDR=Z(28),INVLINE=Z(29); REM "set invoice header and lin channels
7103 INVOICE_LINE_COUNT=0,FRT_INSALE=0; DIM INVOICE$[200,10]; REM "200 lines  (index 4) 1=order line #  2=ART string var$  3=extended sell amt  4=display/print line 5=qty per um 6=order qty  7=shipped qty   8=unit price  9=qty ordered eaches  10=qty shipped eaches
7105 DIM GRB(20),GRB$(500),GRT$(500),GRT(10); FIND (INVHDR,KEY=ECD$(509,14),DOM=7145)IOL=0470
7108 INVOICE_LINE_INDEX=GRB(20)
7110 IF INVOICE_LINE_INDEX=0 THEN GOTO 7145 ELSE READ (INVLINE,IND=INVOICE_LINE_INDEX)IOL=0490
7112 INVOICE_LINE_COUNT=INVOICE_LINE_COUNT+1
7115 INVOICE$[INVOICE_LINE_COUNT,1]=GRT$(47,3),INVOICE$[INVOICE_LINE_COUNT,2]=GRT$,INVOICE$[INVOICE_LINE_COUNT,3]=STR(GRT(4)),INVOICE$[INVOICE_LINE_COUNT,4]=GRT$(6,1),INVOICE$[INVOICE_LINE_COUNT,5]=STR(GRT(6)),INVOICE$[INVOICE_LINE_COUNT,8]=STR(GRT(2)),INVOICE$[INVOICE_LINE_COUNT,9]=STR(GRT(0)),INVOICE$[INVOICE_LINE_COUNT,10]=STR(GRT(1)); REM "assign invoice line values
7116 QTY_PER=GRT(6); IF QTY_PER=0 OR GRT$(50,4)="M   " THEN QTY_PER=1
7117 INVOICE$[INVOICE_LINE_COUNT,6]=STR(GRT(0)/QTY_PER),INVOICE$[INVOICE_LINE_COUNT,7]=STR(GRT(1)/QTY_PER)
7119 IF GRT$(1,1)<>"S" THEN GOTO 7110; REM "if not special charge then get next line
7120 REM "special charge line 
7122 DIM FMPX$(100),FMPX(2); FIND (Z(9),KEY="X"+GRT$(65,10),DOM=7125)IOL=0392
7123 IF FMPX$(60,1)="Y" THEN INVOICE$[INVOICE_LINE_COUNT,4]="N",FRT_INSALE=FRT_INSALE+GRT(4); REM "if special charge is freight type then turn off display and add to frt in net sale
7129 GOTO 7110
7145 RETURN 
7200 REM "line change - update line and write message line
7201 IF ORIG_ORDER_QUANTITY=NEW_ORDER_QUANTITY OR NEW_ORDER_QUANTITY<0 THEN GOTO 7245
7205 DIM EDO$(400),EDO(8); EDO$(1,10)=WORKSHEET$,EDO$(25,3)=WORKSHEET_LINE$
7208 EXTRACT (Z(5),KEY=EDO$(1,10)+EDO$(25,3),DOM=7245)IOL=0350 ! SSP224259, DOM was going to 7240, changed to 7245
7209 IF POS(EDO$(28,1)="MS")>0 OR EDO$(259,3)<>DIM(3) THEN GOTO 7245 ! SSP224259, if message line or companion to another line, no change allowed. SSP224598, added check for special charge line.
7210 EDO(0)=NEW_ORDER_QUANTITY
7212 WRITE (Z(5),KEY=EDO$(1,10)+EDO$(25,3))IOL=0350
7230 REM "write out change message
7232 DIM EDT$(295); EDT$(1,10)=WORKSHEET$,EDT$(11,3)=EDO$(25,3),EDT$(14,3)="001"
7234 EDT$(32,60)="Order quantity changed from "+STP(STR(ORIG_ORDER_QUANTITY),2)+" "+EDO$(107,4)+"/"+STR(EDO(1))
7235 EDT$(92,60)="to "+STP(STR(NEW_ORDER_QUANTITY),2)+" "+EDO$(107,4)+"/"+STR(EDO(1))
7236 EDT$(152,60)="on "+FORMATTED_DATE$+" at "+FORMATTED_TIME$+" by "+STP(EC$[2](16,35),2)
7238 WRITE (Z(18),KEY=EDT$(1,16),DOM=*NEXT)IOL=0480; GOTO 7240
7239 EDT$(14,3)=STR(NUM(EDT$(14,3))+1:"000"); GOTO 7238
7240 GOSUB CHANGE_COMPANIONS ! SSP224259
7245 ! All done
7248 RETURN 
7250 REM "update approval status record
7252 DIM EDU$(511); EDU$(1,10)=WORKSHEET$
7255 FIND (Z(1),KEY=EDU$(1,10),DOM=*NEXT)IOL=0305
7265 RETURN 
7300 ! If parm says so then don't extend quantity in eaches for M/1000, SSP166123                                                                        
7305 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4) ! SSP167126
7310 QTY_IN_EACHES=EDO[0]*EDO[1]
7315 IF EDO$(107,4)<>THOUSANDS$ THEN GOTO *RETURN
7320 IF (EC_PARM$(948,1)<>"Y" AND EDO$(299,1)=" ") OR EDO$(299,1)="Y" THEN GOTO *RETURN
7325 QTY_IN_EACHES=EDO[0]
7340 RETURN 
7345 ! 
7350 ! If parm says so then don't extend item_price_ext for M/1000, SSP166123
7355 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4) ! SSP167126
7360 ITEMPRICEEXT=ITEM_PRICE*EDO[0]
7365 IF EDO$(107,4)<>THOUSANDS$ THEN GOTO *RETURN
7370 IF (EC_PARM$(948,1)<>"Y" AND EDO$(299,1)=" ") OR EDO$(299,1)="Y" THEN GOTO *RETURN
7375 ITEMPRICEEXT=ITEM_PRICE*EDO[0]/1000
7390 RETURN 
7395 ! 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7500 REM "255476 - Set edit approval mode for given worksheet in session
7505 SET_APPROVAL_EDIT_MODE:
7510 IF NUL(WORKSHEET$) THEN RETURN ! Worksheet must be specified
7512 IF EC_PARM$(946,1)<>"Y" OR EC$[2](867,1)<>"Y" OR EC$[7](763,1)<>"Y" THEN RETURN ! Approvals enabled, Buyer is an approver, Customer is enabled for Edit approval worksheets mode
7515 IF ACTION$="E" THEN {! Enable Edit Approval Worksheet mode
7520 EXTRACT RECORD (33005,KEY=EC$[1](1,7))ECBREC$
7525 ECBREC$(1318,1)="Y",ECBREC$(97,10)=WORKSHEET$ ! Enable edit approval worksheet mode, set current worksheet number in session for EC3WS1 to use
7530 WRITE RECORD (33005,KEY=EC$[1](1,7))ECBREC$
7535 EC$[1]=ECBREC$
7540  }
7545 IF ACTION$="S" THEN {! Clear Edit Approval Worksheet mode
7550 EXTRACT RECORD (33005,KEY=EC$[1](1,7))ECBREC$
7555 ECBREC$(1318,1)="",ECBREC$(97,10)="" ! Clear edit approval worksheet mode, clear current worksheet number in session
7560 WRITE RECORD (33005,KEY=EC$[1](1,7))ECBREC$
7565 EC$[1]=ECBREC$
7570  }
7595 RETURN 
7599 ! 
7600 REM "Do calculations for worksheet line
7603 QTY_DIVISOR=1; GOTO 7645; REM "EDO[0] should be in the correct units already so we will just set QTY_DIVISOR to one
7604 REM "Set qty_divisor
7605 DIM UM$(22),UM[5]; FIND (Z[13],KEY="U/M"+EDO$(107,4),DOM=7606)IOL=0430
7607 IF UM$(20,1)="Y" OR UM$(21,1)="Y" OR EDO[1]=0 THEN QTY_DIVISOR=1 ELSE QTY_DIVISOR=EDO[1]
7645 RETURN 
7880 REM "item_price 162539.  SSP181146, copied from EC3WS1
7881 RETURNED_PRICE$=""; IF EC$[2](322,1)="Y" THEN GOTO 7895; REM "153032
7882 IF EDO$(18,1)="O" THEN DIM I[30]; REQ_DATE$=EDN$(58,6); IF STP(REQ_DATE$,3)="" THEN REQ_DATE$=X3$(15,6) END_IF ; CALL "OS2OBC",X3$,X4$,EDO$(39,10),I{ALL},EDN$(26,10)+DIM(5)+REQ_DATE$,"EC3WS1",RETURNED_PRICE,"",COST,EDO[0]; GOTO 7888
7883 IF EDO$(28,1)="S" THEN RETURNED_PRICE$=STR(EDO[2]:"###,###.00"); ITEM_PRICE=EDO[2]; RETURN 
7884 IF STOCK$="Y" OR (FM1[29]=0 AND FM1[3]=0) THEN GOTO 7885 ELSE GOTO 7887 ! SSP170941
7885 GOSUB SET_READONLY; DIM IC0$(187),IC0[40]; FIND (Z[29],KEY=EDO$(29,20),DOM=*NEXT)IOL=0360; GOSUB CLEAR_READONLY; ITEM_PRICE=IC0[0]; RETURNED_PRICE$=STR(ITEM_PRICE:X3$(69,1)+"###,###.00"); GOTO 7889 ! SSP170971, price from item master
7886 GOSUB CLEAR_READONLY
7887 IF FM1(29)=0 THEN BASE_PRICE=FM1(3) ELSE BASE_PRICE=FM1(29) END_IF ; IF FM1[25]=0 THEN ITEM_PRICE=BASE_PRICE ELSE IF FM1[3]=0 OR FM1[4]=0 THEN ITEM_PRICE=0 ELSE ITEM_PRICE=BASE_PRICE*FM1[25]/FM1[4] END_IF END_IF ; RETURNED_PRICE$=STR(ITEM_PRICE:X3$(69,1)+"###,###.00"); GOTO 7889; REM "item_price, calculated from fms or sell price, sell u/m and alt iss #1 um
7888 IF EDO$(18,1)="O" THEN RETURNED_PRICE$=STR(RETURNED_PRICE:"###,###.00"); ITEM_PRICE=RETURNED_PRICE; EDO[2]=RETURNED_PRICE
7889 RETURN 
7895 RETURN 
7900 REM "convert date
7905 DIM OUTDATE$(10); IF STP(INDATE$,3," ")="" THEN DIM OUTDATE$(0); GOTO 7915
7910 CALL "ZZDISP","DXS",INDATE$,"",X3$,OUTDATE$,"",1,10,X4$
7915 RETURN 
7920 REM "convert time
7921 IF INTIME$=DIM(4) THEN DIM OUTTIME$(0); GOTO 7926
7925 CALL "EC3DAT",X3$,12,INTIME$,OUTTIME$,""
7929 RETURN 
8000 CHANGE_COMPANIONS:! SSP224259, if changing qty on line, find companions if any and change accordingly, only if I,C or S types
8005 IF ORIG_ORDER_QUANTITY=0 THEN GOTO *RETURN
8010 DIM COMP_EDO$(400),COMP_EDO[8]; K$=KEY(Z[5],END=*RETURN); EXTRACT (Z[5],KEY=K$)IOL=0355
8015 IF COMP_EDO$(1,10)<>WORKSHEET$ OR COMP_EDO$(259,3)=DIM(3) THEN GOTO *RETURN ELSE IF POS(COMP_EDO$(28,1)="M")>0 THEN READ (Z[5],END=*RETURN); GOTO 8010 ! If different worksheet or worksheet line is not a companion, we are done, else if an M type then go get the next one
8020 COMP_ORIG_ORDER_QUANTITY=COMP_EDO[0]
8021 IF NEW_ORDER_QUANTITY=0 THEN COMP_NEW_ORDER_QUANTITY=0; GOTO 8029
8022 IF COMP_ORIG_ORDER_QUANTITY=1 AND ORIG_ORDER_QUANTITY<>1 THEN READ (Z[5],END=*RETURN); GOTO 8010 ! If original companion qty is 1 but original master qty isn't, the companion is force to 1, so leave it 1, go back to see if any more companions for this master
8025 COMP_NEW_ORDER_QUANTITY=COMP_EDO[0]/ORIG_ORDER_QUANTITY*NEW_ORDER_QUANTITY
8029 COMP_EDO[0]=COMP_NEW_ORDER_QUANTITY
8030 WRITE (Z[5],KEY=K$)IOL=0355
8035 ! Write out change message
8040 DIM COMP_EDT$(295); COMP_EDT$(1,10)=WORKSHEET$,COMP_EDT$(11,3)=COMP_EDO$(25,3),COMP_EDT$(14,3)="001"
8045 COMP_EDT$(32,60)="Order quantity changed from "+STP(STR(COMP_ORIG_ORDER_QUANTITY),2)+" "+COMP_EDO$(107,4)+"/"+STR(COMP_EDO[1])
8050 COMP_EDT$(92,60)="to "+STP(STR(COMP_NEW_ORDER_QUANTITY),2)+" "+COMP_EDO$(107,4)+"/"+STR(COMP_EDO[1])
8055 COMP_EDT$(152,60)="on "+FORMATTED_DATE$+" at "+FORMATTED_TIME$+" by COMPANION to line "+WORKSHEET_LINE$
8060 WRITE (Z[18],KEY=COMP_EDT$(1,16),DOM=*NEXT)IOL=0485; GOTO 8010
8065 COMP_EDT$(14,3)=STR(NUM(COMP_EDT$(14,3))+1:"000"); GOTO 8060
8090 RETURN 
8095 ! 
8100 REM "Copy output file to new file before returning the output file
8101 REM "Use port 1001 and 1002
8105 CLOSE (1001); CLOSE (1002)
8110 PRECISION 5; EMAIL_FILE$=%SERVER_DIR$+"TMP"+STR(INT(RND*100000)); PRECISION 2
8111 OPEN (1002,ERR=8115)EMAIL_FILE$; CLOSE (1002); GOTO 8110; REM "if we can open the file then it is in use, try again
8115 REM "Create file, then open files and copy
8120 SERIAL EMAIL_FILE$,DISK_NO,0,ERR=8110
8121 OPEN (1001,ERR=8145)TMP_NAME$; OPEN (1002)EMAIL_FILE$; MESS$="Creating temp HTML e-mail file "+EMAIL_FILE$,MTYPE$="EMAIL"; GOSUB 7500
8122 TEXT_IN$=ETEXT$[1]; GOSUB 8150
8123 WRITE RECORD (1002)TEXT_IN$; REM "write out email header
8125 READ RECORD (1001,SIZ=8192,END=8129)COPY$; COPY$=COPY$(1,POS(DIM(512,$00$)=COPY$+DIM(512,$00$))-1); IF MID(COPY$,1,LEN(HTML_TEXT$))=HTML_TEXT$ THEN COPY$=MID(COPY$,LEN(HTML_TEXT$)+1) END_IF ; WRITE RECORD (1002,SIZ=LEN(COPY$))COPY$; GOTO 8125 ! strip off html_header if here, it is covered in email open
8129 WRITE RECORD (1002)ETEXT$[2]; REM "write out email closing
8130 PRECISION 5; EMAIL_ACTION_FILE$=%SERVER_DIR$+STR(INT(RND*100000))+".em"; PRECISION 2; CLOSE (1003); OPEN (1003,ERR=8131)EMAIL_ACTION_FILE$; GOTO 8130; REM "find unused tmp file name for email control file
8131 SERIAL EMAIL_ACTION_FILE$,DISK_NO,0,ERR=8140; OPEN (1003)EMAIL_ACTION_FILE$
8132 WRITE RECORD (1003)"basic=EC3EM0"; WRITE RECORD (1003)"template="+EMAIL_FILE$; WRITE RECORD (1003)"session_id="+SID$; WRITE RECORD (1003)"remove_file=Y" ! SSP212160 jdf
8133 MESS$="Posting e-mail to send : "+EMAIL_ACTION_FILE$,MTYPE$="EMAIL"; GOSUB 7500
8140 CLOSE (1001); CLOSE (1002); CLOSE (1003)
8145 RETURN 
8150 REM "Send LINE$ to EC3BYB for generic fields processing
8160 CALL "EC3BYB",ERR=8161,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100 ! 227154
8195 RETURN 
8246 REM "get fm1 record.  SSP181146, copied from EC3WS1
8247 GOSUB SET_READONLY; DIM FM1$(449),FM1(31); READ (Z(7),KEY=EDO$(29,20),DOM=8248)IOL=0370; IF EC$[7](598,1)="Y" THEN FM1(29)=FM1(3); GOTO 8249 ELSE GOTO 8249; REM "162539. SSP236926 - set READONLY
8248 STOCK$="N"; READ (Z(7),KEY=EC$[2](51,10)+EDO$(39,10),DOM=8249)IOL=0370; IF FM1$(105,1)="Y" THEN STOCK$="Y" ! SSP170971
8249 GOSUB CLEAR_READONLY; RETURN ! SSP236926 - clear READONLY 
8250 REM "Reads for a worksheet line
8260 GOSUB SET_READONLY ! SSP236926 - set READONLY
8265 DIM EC7$(200),EC7[1]; EC7$(1,13)=EDO$(1,10)+EDO$(25,3); REM "Worksheet #, line #
8270 FIND (Z[22],KEY=EC7$(1,13),DOM=8271)IOL=0420
8275 DIM FM1$(449),FM1[31]; FM1$(1,20)=EDO$(29,20); FIND (Z[7],KEY=EDO$(29,20),DOM=*NEXT)IOL=0370
8277 DIM IC0$(200),IC0[40]; FIND (Z[29],KEY=EDO$(29,20),DOM=*NEXT)IOL=0360
8280 DIM ECR$(1000); FIND (Z[25],KEY=EDO$(29,20),DOM=*NEXT)IOL=0450 ! SSP#153121
8282 GOSUB CLEAR_READONLY ! SSP236926 - clear READONLY
8285 IF POS(EDO$(28,1)="CI")>0 THEN GOSUB 8300 ! WO181418, get inventory figures
8295 RETURN 
8300 ! Get inventory figures, don't need usage, copied from EC3PC1, WO181418
8310 DIM CHANNELS[4]; CHANNELS[1]=Z[30],CHANNELS[4]=Z[25] ! IC1/ECR channels
8315 DIM OPTIONS$(20); OPTIONS$(1,2)="RI"; REM "R-reported warehouses I-inventory figures only
8320 OPTIONS$(3,1)=NO_INVUSAGE$; REM "controls wether inventory /usage figures are needed - if not Y will return dimensioned variables only
8325 OPTIONS$(6,10)=FM1$(185,10) ! from customer
8330 FINDITEMKEY$=EDO$(29,20); CALL "EC3IC0",X3$,X4$,EC_PARM$,EC${ALL},FINDITEMKEY$,USAGE_KEYS$,CHANNELS{ALL},IC1INFO{ALL},FM3{ALL},FM3ALL{ALL},FM4$,FM4{ALL},FM4ALL{ALL},FORM_OTHER{ALL},FORM_OTHERALL{ALL},OPTIONS$
8345 RETURN 
8349 ! 
8350 REM "get active uom.  Copied from EC3PC1, WO181418
8360 ON POS(EDO$(28,1)="CI")-1 GOTO 8365,8375
8365 REM "not stock sot it's custom - items FM1
8370 IF STP(FM1$(238,4),3," ")="" OR FM1[25]=0 THEN UM$=STP(FM1$(100,4),1),PACK=FM1[4]; GOTO 8385 ELSE UM$=STP(FM1$(238,4),1),PACK=FM1[25]; GOTO 8385
8375 REM "stock item - items IC0
8380 UM$=IC0$(120,4),PACK=IC0[14]
8385 UM$=STP(UM$,1),EXT_UM$=STP(UM$,1)+"/"+STR(PACK:"##,##0")
8390 IF PACK=0 THEN PACKDIV=1 ELSE PACKDIV=PACK
8395 RETURN 
8399 ! 
8600 REM "ck if order has approval lines 148750
8601 APPROVAL_LINES$="",NONAPPROVAL_LINES$=""; IF EC_PARM$(946,1)<>"Y" THEN GOTO 8645 ELSE IF POS(EC$[7](593,1)="AY")=0 THEN NONAPPROVAL_LINES$="*"; GOTO 8645; REM "if not activated for customer or at all set nonapproval list to not null
8602 READ (Z(5),KEY=WORKSHEET$,DOM=*NEXT)
8603 READ (Z(5),END=8609)IOL=0350; IF EDO$(1,LEN(WORKSHEET$))<>WORKSHEET$ THEN GOTO 8609 ELSE READ (Z(24),KEY=EDO$(1,10)+EDO$(25,3),DOM=*NEXT)
8604 READ (Z(24),END=8606)EC0REC$; IF EC0REC$(1,13)<>EDO$(1,10)+EDO$(25,3) THEN GOTO 8603
8605 MM=NUM(EC0REC$(27,5)); IF MM<60 OR M>69 THEN IF POS(EC0REC$(11,3)=NONAPPROVAL_LINES$,3)=0 THEN NONAPPROVAL_LINES$=NONAPPROVAL_LINES$+EDO$(25,3); GOTO 8603 ELSE GOTO 8603 ELSE IF POS(EC0REC$(11,3)=APPROVAL_LINES$,3)=0 THEN APPROVAL_LINES$=APPROVAL_LINES$+EC0REC$(11,3); GOTO 8603 ELSE GOTO 8603
8610 REM "ck status
8616 IF APPROVAL_LINES$="" THEN GOTO 8645; REM "no approval situation (exit)
8617 IF EC$[7](596,1)<>"Y" THEN APPROVAL_LINES$=APPROVAL_LINES$+NONAPPROVAL_LINES$,NONAPPROVAL_LINES$=""; REM "if parm not set to release partial order then set all lines as approval
8618 EXTRACT (Z(4),KEY=WORKSHEET$)IOL=0310; ECD$(55,1)="Y"; WRITE (Z(4),KEY=WORKSHEET$)IOL=0310; WRITE (Z(33),KEY=WORKSHEET$)IOL=0310; REM "flag order for approval and copy to approval hdr EDN
8620 REM "process lines
8622 FOR MM=0 TO LEN(APROVAL_LINES$)/3-1; DIM EDOKEY$(13); EDOKEY$(1,10)=WORKSHEET$,EDOKEY$(11,3)=APPROVAL_LINES$(MM*3+1,3)
8624 DIM EDO(8); READ (Z(5),KEY=EDOKEY$,DOM=8630)IOL=0350; REMOVE (Z(5),KEY=EDOKEY$); WRITE (Z(34),KEY=EDOKEY$)IOL=0350; GOSUB 4050; REM "move line to approval file
8629 REM "*** insert line replacement here - ie message line indicating removal for approval **
8630 NEXT MM
8645 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNR$(X$)=STR(10000000-NUM(STR(ASC(X$(1,1)))+X$(2)):"0000000")
8950 REM "This line here to avoid error 28 when exiting loops inside 1000's
8960 EXITTO 1090
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
10400 REM "Item price to be retrieved from lots, only if parameter enabled for EC customer - WO 227556
10405 GET_PRICE_FROM_LOTS:
10410 LOT_PRICE=0,LOT_PRICE_FOUND=0,LOT_PRICE_OPTIONS$="W"
10415 IF EC$[7](747,1)<>"Y" OR POS(EDO$(28,1)="CI")=0 THEN GOTO DONE_GPL
10420 LOT_ITEMKEY$=EDO$(29,20); IF NUL(EDO$(29,20)) OR NOT(NUL(EDO$(129,1))) THEN GOTO DONE_GPL ! Abort if no valid item code on line or set to create a PO
10425 DIM ECE_WHSE_LIST$(48); ECE_WHSE_LIST$=STP(EDO$(165,48),2)
10430 CALL "FM2ICF",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},LOT_ITEMKEY$,ECE_WHSE_LIST$,"",0,LOT_PRICE,LOT_PRICE_FOUND,LOT_PRICE_OPTIONS$
10435 DONE_GPL:
10440 IF LOT_PRICE_FOUND AND LOT_PRICE<>0 THEN CALC_ITEM_PRICE=LOT_PRICE,RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
10445 RETURN 
10449 ! 
10599 ! 
10600 DISPLAY_CHGQTY_SECTION:
10602 CQ_SECTION$="",CQ_TAGS$="001<line_number>002<quantity>003<rc_number>004<worksheet>"
10604 CQ_TEMPLATE$=LS2$; CQ_END=POS("?tf?changeqtyend?"=CQ_TEMPLATE$); IF CQ_END>0 THEN LS2$=MID(CQ_TEMPLATE$,CQ_END+LEN("?tf?changeqtyend?")); CQ_TEMPLATE$=CQ_TEMPLATE$(1,CQ_END-1)
10608 CQS$=CQ_TEMPLATE$
10609 IF NOT(NUL(EDO$(259,3))) OR POS(EDO$(28,1)="MS") THEN GOTO *RETURN ! Companion item or message line or special charge, suppress change qty section
10612 CQ_NEXT_TAG: CQ_INDEX=POS("?tf?"=CQS$); IF CQ_INDEX=0 THEN GOTO CQ_SECTION_END
10614 CQSEND_INDEX=POS("?"=CQS$(CQ_INDEX+4)),CQ_TAG$=CQS$(CQ_INDEX+4,CQSEND_INDEX-1),CQS1$=CQS$(1,CQ_INDEX-1),CQS2$=CQS$(CQ_INDEX+CQSEND_INDEX+4),CQ_POS=POS("<"+CQ_TAG$+">"=CQ_TAGS$); IF CQ_POS=0 THEN CQS$=CQS1$+CQS2$,CQ_INDEX=0 ELSE CQ_INDEX=NUM(CQ_TAGS$(CQ_POS-3,3))
10620 ON CQ_INDEX GOTO CQ_NOT_FOUND,CQ_TAG_1,CQ_TAG_2,CQ_TAG_3,CQ_TAG_4,CQ_NOT_FOUND
10621 CQ_TAG_1: CQS$=CQS1$+FN%HTML_ESC$(EDO$(25,3))+CQS2$; GOTO CQ_NEXT_TAG; REM "line_number
10622 CQ_TAG_2: QTY_TOTAL_ORDER=QTY_TOTAL_ORDER+(EDO(0)/QTY_DIVISOR); IF EDO$(28,1)="M" THEN QTY$="0" ELSE QTY$=STR(EDO[0]/QTY_DIVISOR:"#########0") END_IF ; CQS$=CQS1$+FN%HTML_ESC$(STP(QTY$,2))+CQS2$; GOTO CQ_NEXT_TAG; REM "quantity
10623 CQ_TAG_3: CQS$=CQS1$+FN%HTML_ESC$(STP(EDO$(262,20),1))+CQS2$; GOTO CQ_NEXT_TAG; REM "rc_number
10624 CQ_TAG_4: CQS$=CQS1$+FN%HTML_ESC$(WORKSHEET$)+CQS2$; GOTO CQ_NEXT_TAG; REM "worksheet
10639 CQ_NOT_FOUND: CQS$=CQS1$+CQS2$; GOTO CQ_NEXT_TAG; REM "not found, eliminate tag
10640 GOTO CQ_NEXT_TAG
10641 CQ_SECTION_END:
10644 CQ_SECTION$+=CQS$
10645 RETURN 
10649 ! 
12000 LINE_UNIT_PRICE_OVERRIDE:! 281341
12020 IF EDO[2]>0 THEN CALC_ITEM_PRICE=EDO[2],RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
12045 RETURN 
12049 ! 
56000 REM "193685-XML orders coming in from Printegra are multiplying by 1000,
56002 REM "201193-Questions about security of Boars Head EC Promo site.       
56003 REM "210688-Modify WebEC to support PeopleSoft punchout
56004 REM "212160-Webec is down.  Cannot use 64 character session id          
56006 ! 224259-If qty changed, need to change qty of companions
56008 ! 224598-Don't allow qty change for S type lines
56009 REM "227154-Modify EC3BYB to support a condition tag : ?tf?if?[expr]    
56012 REM "226583-calc_item_price tags to recognize lowest QBG cust parm
56013 REM "227556-Create new EC program to determine highest lot sell price,  
56014 REM "236926-[DT5] Err in email confirmation - 0 - EC3WS1 - 8247
56016 REM "215913-Request to add 3p_proof_url tag to EC3WS1 and EC3AP1.
56018 REM "254377-Need address tags to work in EC3AP1 for approval detail page
56020 REM "254770-Does the ship_with tag work for pa_approve_detail.html page?
56022 REM "255326-Order Approval Status, IMS price is not displaying.         
56023 REM "255476-TVIINC workflow - Phase 1: Approver edit worksheets feature 
56024 REM "273337-EC Approval; ability to list the requesting buyer's last 3  
56025 REM "289039-Third party artwork URLs not displayed through standard 3p  
56026 REM "303115-FN%HTML_ESC$ additions in EC programs                       
