0010 REM "WebEC Catalog Category Item Move utility <EC3UT7>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 06/16/10 - 16.765 - tma - SSP# 238827
0037 REM "238827-When using the EC Catalog Item Copy/Rename.  This change    
0040 REM "Copyright 2010 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="EC3UT7",X1$="WebEC Catalog Item Change Utility",K9$="",K9=0
0120 DIM Z0$(80,"-")
0130 K0=9,K1=1
0135 C9=-1,V9=-2
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ECN...  02O AR1...  03O ECG...  04OSECH...  05OSECH...  06O EDA...  07O ECR...  " ! SSP#238827
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "
0620 GOSUB 6000
0700 REM "Check for existing entries
0710 K$=KEY(Z[1],END=0800)
0720 CALL "ZZPROM","X0AP2CBA",X3$,Z,"Entries exist in the Data Enry File.","","",0; ON Z GOTO 0800,0721,9900
0730 CALL "ZZINIT",STR(Z[1]:"00")
0800 REM 
1000 REM "
1010 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1030 DIM B$(100),B0$(100),C$(100),C0$(100),D$(100),D0$(100),D8$(40),D9$(40)
1035 DIM A$(41)
1040 IF V9<>-1 THEN GOSUB 6900
1045 A$(1,0+K9)=K9$+A1$
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 5000
1140 ON X0 GOTO 1200,1250,1500
1200 REM "From Catalog Code
1205 X$="Use F1-F3 report option to obtain printout prior to updating"
1210 CALL "ZZENTR","SUZX",A{ALL},A$,X4$,X3$,20,3,1,10,C0,"","{1"+X$,"","AR2UTZ00","EDA","EC3MCC",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1210,1211
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,5000,6970
1220 FIND (Z[6],KEY=A$(1,10),DOM=1200)EDA$; GOSUB 6450
1240 GOTO 1120
1250 REM "From Catalog Category
1255 X$="Enter the pattern match (?* wildcards available)"
1260 CALL "ZZENTR","SUZX",A{ALL},A$,X4$,X3$,20,4,11,10,C0,"","{1"+X$,A$(1,10),"AR2UTZ02","","",""; IF ABS(C0)>4 THEN GOSUB 6400
1265 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1266,6800,5000,6970
1290 GOTO 1120
1500 REM "
1505 Z9=-1
1510 A1$=A$(1,20)
1520 READ (Z[1],KEY=A1$,DOM=1600)IOL=0310
1525 Z9=0
1530 GOSUB 6600
1590 GOTO 1700
1600 REM "
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630,6975
1630 GOTO 1000
1650 A$(7,3)=A$(1,3); GOSUB 6220
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700,6800
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 EXTRACT (Z[1],KEY=A1$,DOM=1870)IOL=0310
1865 C9=1
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2035 IF X0*6+11<LEN(V9$) THEN IF V9$(X0*6+11,1)="2" THEN GOTO 2020
2040 ON X0 GOTO 2150,2200,1800
2100 REM "To Catalog Code
2102 IF STP(A$(21,10),3," ")="" THEN A$(21,10)=A$(1,10); GOSUB 6200
2110 CALL "ZZENTR","SUZX",A{ALL},A$,X4$,X3$,20,6,21,10,C0,"","{3"+X$,"","AR2UTZ04","ECP","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2160,2161
2140 GOTO 2020
2150 REM "To Catalog Category
2152 X$="Must be valid category"
2153 ! SSP187167, found that routine depends on this being an existing category.
2160 CALL "ZZENTR","SUZX",A{ALL},A$,X4$,X3$,20,7,31,10,C0,"","{3"+X$,"","AR2UTZ06","ECG","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2160,2161
2162 FIND (Z[3],KEY=A$(31,10),DOM=2160)ECGTOREC$
2164 PRINT @(35,7),ECGTOREC$(11,30),
2170 IF C0=2 THEN GOTO 2020
2190 GOTO 2020
2200 REM "copy/delete existing category
2202 X$="C=leaves in existing category  M=moves to new category"
2210 CALL "ZZENTR","SUZX",A{ALL},A$,X4$,X3$,20,8,41,1,C0,"","{3"+X$,A$(1,10),"AR2UTZ06","ECH","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 2160,2161
2212 IF POS(A$(41,1)="CM")=0 THEN GOTO 2200
2240 GOTO 2020
5000 REM "End of entry
5020 CALL "ZZPROM","9",X3$,Z,"Update Now?","","",0; IF Z=1 THEN GOTO 9900
5090 GOSUB 7500
5095 CALL "ZZINIT",STR(Z[1]:"00")
5100 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5110 RUN "EC3UT5"
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(1,3),"     Catalog code: ",@(1,4),"Item code pattern:",@(0,5),Z0$,
6065 PRINT @(2,7),"To category code:",@(9,8),"Copy/Move:",
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6220 PRINT @(20,6),A$(21,10),@(20,7),A$(31,10),@(20,8),A$(41,1),
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6457 DIM EDA$(128); EDA$(11,30)="Catalog Master Missing"; FIND (Z[6],KEY=A$(1,10),DOM=6458)EDA$
6460 PRINT @(20,3),A$(1,10),@(20,4),A$(11,10),@(32,3),EDA$(11,30),
6490 RETURN 
6500 REM "DELETE
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6690 RETURN 
6700 REM "ADD ENTRY
6705 IF Z9=0 THEN GOTO 6790
6710 WRITE (Z[1],KEY=A1$)IOL=0310
6790 GOTO 1630
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 A$(1,LEN(A1$))=A1$
6825 IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 1140
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6870 GOTO 6895
6890 GOTO 1515
6895 PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=1140); GOTO 1140
6900 REM "GET DEFAULTS
6902 V9$="2203  2205  "
6910 IF V9>=0 THEN READ (Z[13],IND=V9)V9$,IOL=0310; GOTO 6930 ELSE V9=-1
6920 EXTRACT (Z[13],KEY=X0$+"DFLT",DOM=6921)V9$,IOL=0310; V9=IND(Z[13]); READ (Z[13])
6930 RETURN 
6950 REM "WRITE DEFAULT
6955 WRITE (Z[13],KEY=X0$+"DFLT")V9$,IOL=0310
6960 GOSUB 6920; GOTO 1630
6970 REM "ENTRY DEFAULTS
6975 PRINT 'CF'; V9=-2,Q$=""
6980 FOR X=1 TO LEN(V9$) STEP 6
6982 PRINT @(NUM(V9$(X,2)),NUM(V9$(X+2,2))),; IF V9=-2 THEN PRINT V9$(X+4,1), ELSE READ RECORD (0,SIZ=1)Q$; IF POS(Q$="1234Z")=0 THEN PRINT 'RB'; GOTO 6982
6990 IF Q$="Z" THEN EXITTO 6950 ELSE V9$(X+4,LEN(Q$))=Q$; NEXT X
6995 V9=0; GOTO 6980
7500 REM "Update
7510 READ (Z[1],KEY="",DOM=7511)
7520 A1$=KEY(Z[1],END=7600); READ (Z[1],KEY=A1$)A$
7525 FIND (Z[3],KEY=A$(31,10),DOM=7520); REM "if category not on file then skip
7527 CATALOG$=A1$(1,10),PATTERN$=STP(A1$(11,10),2)
7528 READ (Z[4],KEY=CATALOG$,DOM=7529)
7530 REM "process catalog
7532 ECHKEY$=KEY(Z[4],END=7520); IF ECHKEY$(1,LEN(CATALOG$))<>CATALOG$ THEN GOTO 7520 ELSE READ (Z[4],KEY=ECHKEY$)ECH$
7534 IF STP(ECH$(21,20),1) LIKE PATTERN$ AND ECH$(11,10)<>A$(31,10) THEN GOTO 7535 ELSE GOTO 7532
7538 ON POS(A$(41,1)="CM") GOTO 7540,7540
7540 REM "copy to new category
7542 ECHNEW$=ECH$,ECHNEW$(11,10)=A$(31,10)
7544 WRITE (Z[5],KEY=ECHNEW$(1,40))ECHNEW$
7545 GOSUB UPDATE_ECR ! SSP#238827
7546 IF A$(41,1)="C" THEN GOTO 7530
7550 REM "complete move
7552 REMOVE (Z[4],KEY=ECHKEY$); GOTO 7530
7600 RETURN 
7990 GOTO 9900
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 CALL "ZZINFO",Z[F],T9,X3$,T,T0,K,B9,D,S0,S1,F$
8115 PRINT @(0,7),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8900 REM 
8910 DEF FNS$(Z9$)=Z9$(1,POS("  "=Z9$+"  ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
17000 UPDATE_ECR:! SSP#238827
17010 READ RECORD (Z[7],KEY=ECH$(41,20),DOM=*RETURN)ECR$ ! SSP#238827
17015 IF A$(41,1)="M" AND ECH$(11,10)=ECR$(21,10) THEN ECR$(21,10)=A$(31,10) ELSE IF A$(41,1)="C" AND ECR$(21,10)=DIM(10) THEN ECR$(21,10)=A$(31,10) ! SSP#238827
17020 FOR X9=0 TO 40 STEP 10 ! SSP#238827
17025 IF A$(41,1)="M" AND ECH$(11,10)=ECR$(193+X9,10) THEN ECR$(193+X9,10)=A$(31,10) ELSE IF A$(41,1)="C" AND ECR$(193+X9,10)=DIM(10) AND ECR$(21,10)<>A$(31,10) AND POS(A$(31,10)=ECR$(193,40),10)=0 AND POS(A$(31,10)=ECR$(325,150),10)=0 THEN ECR$(193+X9,10)=A$(31,10) ! SSP#238827
17030 NEXT X9 ! SSP#238827
17040 FOR X9=0 TO 150 STEP 10 ! SSP#238827
17045 IF A$(41,1)="M" AND ECH$(11,10)=ECR$(325+X9,10) THEN ECR$(325+X9,10)=A$(31,10) ELSE IF A$(41,1)="C" AND ECR$(325+X9,10)=DIM(10) AND ECR$(21,10)<>A$(31,10) AND POS(A$(31,10)=ECR$(193,40),10)=0 AND POS(A$(31,10)=ECR$(325,150),10)=0 THEN ECR$(325+X9,10)=A$(31,10) ! SSP#238827
17050 NEXT X9 ! SSP#238827
17070 WRITE RECORD (Z[7],KEY=ECH$(41,20))ECR$ ! SSP#238827
17199 RETURN ! SSP#238827
56002 REM "238827-When using the EC Catalog Item Copy/Rename.  This change    
