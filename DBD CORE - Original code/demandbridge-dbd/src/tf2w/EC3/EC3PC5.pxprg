0010 REM "EC Product Catalog Menu<EC3PC5>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 07/08/19 - 14.638611 - dmm - SSP# 307179
0037 REM "307179-DBSPT-66337; Product Catalog Images not displaying correctly
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 ! SSP184883, copied EC3PC0, added logic for catalog/category menu
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3PC5",X1$="E/C Product Catalog Menu"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0320 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0340 IOLIST ECG$
0350 IOLIST ECH$
0360 IOLIST ECR$
0370 IOLIST FM4$(1),FM42$,FM4(0),FM4(1),FM4(2),FM4(3),FM4(4),FM4(5),FM4(6),FM4(7),FM4(8),FM4(9),FM4(10),FM4(11),FM4(12),FM4(13),FM4(14),FM4(15)
0380 IOLIST EC9$
0390 IOLIST P$(1),P[0],P[1]
0410 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1... 020 FM1... 03O FT1... 04O ECG... 05O ECH... 06O ECR... 07O FM4... 08O EC9... 09O EDE... 10O EDA... 11O IC0... 12O FMP... 13O ZZPARM 14O EDI... 15O ECB... 16O EC6... 17O FS0... 18O EDQ... 19O IC1...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM 'SET IMG SRC PREFIX/SUFFIX
0610 IMGSRC_PREFIX$=STP(EC_PARM$(311,20),2),IMGSRC_ATTRIB$=" "+STP(EC_PARM$(331,60),2)+">",IMGSRC_SUFFIX$=STP(EC_PARM$(391,20),2)
0800 GOSUB 3000
0810 DIM FM4(15)
1000 REM "Process DATA array
1005 DATA_TAGS$="001<template>002<user>003<password>004<maxrows>005<position_item>006<direction>007<session_id>008<category>009<catalog>"
1006 MAX_ROWS=TBL(SGN(NUM(EC_PARM$(258,3))),500,NUM(EC_PARM$(258,3))),POSITION_ITEM$="",DIRECTION$="F"
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 USER$=VALUE$; GOSUB 3000; GOTO 1090; REM "user
1023 PASSWORD$=VALUE$; GOTO 1090; REM "password
1024 MAX_ROWS=NUM(VALUE$,ERR=1090); GOTO 1090; REM "maxrows
1025 POSITION_ITEM$=VALUE$; GOTO 1090; REM "position_item
1026 IF VALUE$="backward" THEN DIRECTION$="B"; GOTO 1090; REM "direction, only set if it is 'backward'
1027 SESSION_ID$=VALUE$; GOTO 1090; REM "Get session id
1028 CATEGORY$=PAD(VALUE$,10); GOTO 1090; REM "single catalog category to display
1029 CATALOG$=VALUE$; IF LEN(CATALOG$)<10 THEN CATALOG$=PAD(CATALOG$,10) END_IF ; GOTO 1090; REM "catalog 160122
1090 NEXT I
1100 REM "preprocessing
1101 VERSION$="54.0000.184883.190495.20051221",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1105 ENTRY_TAGS$="001<item_code>002<cic_code>003<desc>004<um_ext>005<price>006<item_key>007<user>008<password>009<session_id>010<catalog_code>011<catalog_addl>012<catalog_image>013<fms_price>014<alt_um_ext>015<price_in_alt_um>016<flagged_fms_price>017<image_form1>018<image_form2>019<image_form3>020<image_form4>021<image_form5>022<image_form1_link>023<image_form2_link>024<image_form3_link>025<image_form4_link>026<image_form5_link>027<um>028<qty_um>029<alt_um>030<qty_alt_um>031<3p_text>032<item_key_ue>033<desc_ue>034<qtybreakstart>035<fms_in_alt_um>036<vp_text>037<vp_url>038<infostockstart>039<infowrstart>040<infopostart>041<form_memo>042<monthly_max>043<line_class>044<form_note>045<max_months>046<cumulative_max>047<base_price>048<item_key_catalog>049<item_key_catalog_ue>050<flagged_price_in_alt_um>051<qty_breaks_ddl>052<ic1_avail_in_stock_sell>053<item_code_pdf>054<rev_date>055<catalog_id>056<category_id>057<position_item>"
1106 CATALOG_CHANGED$="N"; IF STP(CATALOG$,3," ")<>"" THEN IF EC$[1](1105,10)<>CATALOG$ THEN CATALOG_CHANGED$="Y",CATEGORY$=""; REM "157032
1107 IF STP(CATALOG$,1)="" THEN IF EC$[1](1105,10)=DIM(10) THEN CATALOG$=EC$[2](325,10) ELSE CATALOG$=EC$[1](1105,10); REM "ssp 157032
1108 IF STP(CATEGORY$,3," ")="" AND STP(EC$[1](1135,10),3," ")<>"" AND CATALOG_CHANGED$="N" THEN CATEGORY$=EC$[1](1135,10); REM "157032 - get last active category for current catalog
1110 REM "set the active catalog
1112 IF STP(CATEGORY$,3)<>"" AND EC$[1](1135,10)<>DIM(10) THEN IF CATEGORY$<>EC$[1](1135,10) THEN EC$[1](1178,20)=DIM(20) ! SSP184721, clear last item which can be used for the POSITION_ITEM$ at 3405 if buyer chose a different category
1113 EXTRACT RECORD (Z[15],KEY=EC$[1](1,7))ECBREC$; ECBREC$(1105,10)=CATALOG$; IF CATALOG$=EC$[1](1105,10) THEN ECBREC$(1135,10)=CATEGORY$ ELSE ECBREC$(1135,10)=DIM(10) END_IF ; EC$[1](1105,10)=ECBREC$(1105,10),EC$[1](1135,10)=ECBREC$(1135,10); WRITE RECORD (Z[15],KEY=EC$[1](1,7))ECBREC$; REM "update session record with current catalog
1114 IF CATALOG$<>EC$[1](1105,10) THEN CATEGORY$=""; REM "reset category with change in catalog
1115 REM "set active catalog
1118 DIM EDA$(128); CATALOGSORT=0; FIND (Z[10],KEY=CATALOG$,DOM=1119)EDA$; IF EDA$(73,1)="Y" THEN CATALOGSORT=1; REM "ssp 154559
1119 GOSUB 8050; REM "get category list
1120 IF STP(CATEGORY$,2)="" AND STP(POSITION_ITEM$,1)<>"" THEN IF EC$[2](1,15)=MID(POSITION_ITEM$,1,15) THEN CATEGORY$=EC$[2](483,10); REM 167992. My catalog next page
1121 IF STP(CATEGORY$,2)="" THEN IF STP(POSITION_ITEM$,1)<>"" THEN CATEGORY$=POSITION_ITEM$(11,10) ELSE GOSUB 8600 ! SSP173447, was CATEGORY$=EDI_CATEGORY_LIST$(1,10) ! SSP#146994
1122 IF STP(CATEGORY$,1)="" THEN MYCATALOG$="N",CATALOG_CHANNEL=5; GOTO *NEXT END_IF ; IF CATEGORY$=EC$[2](483,10) THEN MYCATALOG$="Y",CATALOG_CHANNEL=9 ELSE MYCATALOG$="N",CATALOG_CHANNEL=5; REM "if current catalog is the buyer specific catalog EDE.  SSP178947, if no category then don't set mycatalog
1123 DIM ECG$(300); READ (Z[4],KEY=CATEGORY$,DOM=1124)IOL=0340
1124 IF EC$[1](1135,10)=DIM(10) AND STP(CATEGORY$,3)<>"" THEN EXTRACT RECORD (Z[15],KEY=EC$[1](1,7))ECBREC$; ECBREC$(1135,10)=CATEGORY$,EC$[1](1135,10)=CATEGORY$; WRITE RECORD (Z[15],KEY=EC$[1](1,7))ECBREC$ ! SSP184721, if buyer is just logging in, CATEGORY$ wasn't set back at 1113, so set last active category here.
1125 REM 'CK FOR VALID MAXROWS
1126 IF NUM(EC_PARM$(258,3))<>0 OR MAX_ROWS=0 THEN MAX_ROWS=NUM(EC_PARM$(258,3))
1140 REM "Gather catalog items for this p/c page
1142 GOSUB 3400
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<user>002<cust_code>003<password>004<cust_name>005<ec_company>006<entrystart>007<buttonnext>008<buttonprev>009<session_id>010<buyer_id>011<buyer_name>012<date>013<time>014<categorystart>015<mousedbox1start>016<category_list>017<category_code>018<category_desc>019<category_addl>020<category_text>021<oldallorderstart>022<old3porderstart>023<buttonallstart>024<catalog_list>025<catalog_text>026<old3porderstart>027<catalog_table_start>"
1510 READ (100,END=1595)LINE$; GOSUB 7550
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2090
2001 LINE$=LINE1$+FN%HTML_ESC$(USER$)+LINE2$; GOTO 2095; REM "user SSP303115
2002 LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE$)+LINE2$; GOTO 2095; REM "cust_code SSP303115
2003 LINE$=LINE1$+FN%HTML_ESC$(PASSWORD$)+LINE2$; GOTO 2095; REM "password SSP303115
2004 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](23,35),1))+LINE2$; GOTO 2095; REM "cust_name SSP303115
2005 LINE$=LINE1$+FN%HTML_ESC$(STP(EC_PARM$(7,50),1))+LINE2$; GOTO 2095; REM "ec_company SSP303115
2006 GOSUB 3200; LINE$=TABLE$; GOTO 2095; REM "entrystart
2007 GOSUB 3500; LINE$=BUTTON$; GOTO 2095; REM "buttonnext
2008 GOSUB 3600; LINE$=BUTTON$; GOTO 2095; REM "buttonprev
2009 LINE$=LINE1$+FN%HTML_ESC$(STP(SESSION_ID$,1))+LINE2$; GOTO 2095; REM "session_id SSP303115
2010 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](8,15),1))+LINE2$; GOTO 2095; REM "buyer_id SSP303115
2011 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[2](16,35),1))+LINE2$; GOTO 2095; REM "buyer_name SSP303115
2012 LINE$=LINE1$+FN%HTML_ESC$(EC$[4])+LINE2$; GOTO 2095; REM " date SSP303115
2013 LINE$=LINE1$+FN%HTML_ESC$(EC$[5])+LINE2$; GOTO 2095; REM "time SSP303115
2014 GOSUB 2200; GOTO 2095; REM "categorystart - store in CAT_TEMPLATE$
2015 GOTO 2095; REM "mousedbox1start - store in MOUSEDBOX1_TEMPLATE$
2016 GOSUB 2150; LINE$=LINE1$+CATEGORY_LIST$+LINE2$; GOTO 2095; REM "catalog category list
2017 LINE$=LINE1$+FN%HTML_ESC$(ECH$(11,10))+LINE2$; GOTO 2095; REM "category_code SSP303115
2018 LINE$=LINE1$+FN%HTML_ESC$(STP(ECG$(11,30),2))+LINE2$; GOTO 2095; REM "category_desc SSP303115
2019 LINE$=LINE1$+FN%HTML_ESC$(STP(ECG$(41,60),2))+LINE2$; GOTO 2095; REM "category additional SSP303115
2020 TEXT_OPT=1; GOSUB 2150; TEXT_OPT=0; LINE$=LINE1$+CATEGORY_LIST$+LINE2$; GOTO 2095; REM "category_text
2021 GOSUB 3800; LINE$=TABLE$; GOTO 2095; REM "allorderstart
2022 GOSUB 3850; LINE$=TABLE$; GOTO 2095; REM "3porderstart
2023 GOSUB 3700; LINE$=ALLBUTTON$; GOTO 2095; REM "buttonallstart
2024 GOSUB 2250; LINE$=LINE1$+CATALOG_LIST$+LINE2$; GOTO 2095; REM "catalog_list
2025 TEXT_OPT=1; GOSUB 2250; TEXT_OPT=0; LINE$=LINE1$+CATALOG_LIST$+LINE2$; GOTO 2095; REM "catalog_text
2026 GOSUB 3850; LINE$=TABLE$; GOTO 2095; REM "3porderstart SSP#148607
2027 GOSUB CATALOG_TABLE_START; LINE$=CATALOG_TABLE$; GOTO 2095 ! catalog_table_start, SSP184883
2090 LINE$=LINE1$+"?"+LINE2$; GOTO 2095; REM "tag not found, replace with '?'
2095 RETURN 
2150 REM "Return CATEGORY_LIST$ as HTML for drop down list
2152 IF CATALOG$=EC$[2](325,10) THEN PUBLISHED$=EC$[6]; GOTO 2155
2153 PUBLISHED$=EDI_CATEGORY_LIST$
2155 CATEGORY_LIST$="",HOLD_ECG$=ECG$; REM "133591
2157 IF LEN(STP(PUBLISHED$,2))=0 THEN GOTO 2195
2158 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "Remove start of comment if there
2159 FOR PP=0 TO LEN(PUBLISHED$)/10-1; CURRCAT$=PUBLISHED$(PP*10+1,10)
2160 READ (Z[4],KEY=CURRCAT$,DOM=2180)IOL=0340
2161 IF MID(ECG$,107,1)="Y" THEN GOTO 2180 ! SSP172253, restrict category from DDL
2162 IF TEXT_OPT THEN CATEGORY_LIST$=CATEGORY_LIST$+CURRCAT$+" "+ECG$(11,30)+EOL$; GOTO 2180; REM "137648
2163 IF CATEGORY$="" THEN IF PP=0 THEN SELECTED$="<option selected"; GOTO 2165 ELSE SELECTED$="<option"; GOTO 2165
2164 IF CATEGORY$<>"" THEN IF CURRCAT$=CATEGORY$ THEN SELECTED$="<option selected" ELSE SELECTED$="<option"
2165 CATEGORY_LIST$=CATEGORY_LIST$+SELECTED$+" value="+QUO+CURRCAT$+QUO+">"+ECG$(11,30)+"</option>"; REM "if first item in list (pp=0) then set to be SELECTED as the initial value in the dd list
2180 NEXT PP
2185 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN CATEGORY_LIST$=CATEGORY_LIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2186 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2195 ECG$=HOLD_ECG$; RETURN ; REM "133591
2200 REM "Store category header template into CAT_TEMPLATE$, it will be used in the entry section
2204 CAT_TEMPLATE$=LINE$,LINE$=""
2205 READ (100,END=2206)LINE$; GOSUB 7550
2206 IF POS("?tf?categoryend?"=LINE$)<>0 THEN GOTO 2209 END_IF ; INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN GOTO 2209; REM "searching for tags within the category heading section
2207 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
2208 GOSUB 2000; REM "process tags within the category section
2209 CAT_TEMPLATE$=CAT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?categoryend?"=LINE$)=0 THEN GOTO 2205
2230 LINE$=""
2245 RETURN 
2250 REM "Return CATALOG_LIST$ as HTML for drop down list
2253 CATALOG_LIST$="",TEMP_PUBLISHED$=EC$[1](565,180),PUBLISHED$=""
2256 FOR PP=0 TO 17; IF TEMP_PUBLISHED$(PP*10+1,10)<>DIM(10) THEN PUBLISHED$=PUBLISHED$+TEMP_PUBLISHED$(PP*10+1,10) END_IF ; NEXT PP
2257 IF LEN(STP(PUBLISHED$,2))=0 THEN IF CATALOG_SEARCH_LIST$<>"Y" THEN GOTO 2295 ELSE CATALOG_LIST$=ADD_TEXT$; GOTO 2295
2258 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "Remove start of comment if there
2259 FOR PP=0 TO LEN(PUBLISHED$)/10-1; CURRCATALOG$=PUBLISHED$(PP*10+1,10); IF CURRCATALOG$=DIM(10) THEN GOTO 2280
2260 DIM EDA_REC$(125); FIND (Z[10],KEY=CURRCATALOG$,DOM=2280)EDA_REC$; IF EDA_REC$(74,1)="Y" THEN GOTO 2280 ! SSP172253, Restrict catalog from DDL
2261 IF TEXT_OPT2 THEN CATALOG_LIST$=CATALOG_LIST$+CURRCATALOG$+" "+EC$[1](745+PP*20,20)+" "+EDA_REC$(11,30); GOTO 2280 ! SSP184883, need string of catalogs and descriptions.  WO256222, add long description (30)
2262 IF TEXT_OPT THEN CATALOG_LIST$=CATALOG_LIST$+CURRCATALOG$+" "+EC$[1](745+PP*20,20)+EOL$; GOTO 2280; REM "137648
2263 IF CATALOG$="" THEN IF PP=0 THEN SELECTED$="<option selected"; GOTO 2265 ELSE SELECTED$="<option"
2264 IF CATALOG$<>"" THEN IF CURRCATALOG$=CATALOG$ THEN SELECTED$="<option selected" ELSE SELECTED$="<option"
2265 CATALOG_LIST$=CATALOG_LIST$+SELECTED$+" value="+QUO+CURRCATALOG$+QUO+">"+EC$[1](745+PP*20,20)+"</option>"; REM "if first item in list (pp=0) then set to be SELECTED as the initial value in the dd list
2280 NEXT PP
2285 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN CATALOG_LIST$=CATALOG_LIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2286 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2295 RETURN 
3000 REM "Read customer data into AR1$
3010 GOSUB SET_READONLY; DIM AR1$(600); READ (Z[1],KEY=EC$[2](51,10),DOM=3011)AR1$; GOSUB CLEAR_READONLY
3015 CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$
3045 RETURN 
3200 REM "Output entries, using ENTRY_TEMPLATE$ to pass information, create TABLE$ to output
3201 GOSUB SET_READONLY
3202 REM "entry tags moved to line 1110
3203 REM "Setup ENTRY_TEMPLATE$
3204 ENTRY_TEMPLATE$=LINE$,TABLE$="",PREV_CATEGORY$=""
3205 READ (100,END=3206)LINE$; GOSUB 7550; ENTRY_TEMPLATE$=ENTRY_TEMPLATE$+LINE$+EOL$; IF POS("?tf?entryend?"=LINE$)=0 THEN GOTO 3205
3209 REM "Now read catalog,if B direction do it backwards
3210 IF DIRECTION$="B" THEN START_PT=TOTAL_RECORDS,END_PT=1,STEP_SIZE=-1 ELSE START_PT=1,END_PT=TOTAL_RECORDS,STEP_SIZE=1
3211 IF TOTAL_RECORDS<1 THEN GOTO 3246 ! SSP# 148027
3215 FOR ENTRY_INDEX=START_PT TO END_PT STEP STEP_SIZE
3217 ECH$=ITEM$[ENTRY_INDEX,1]; REM "get next item
3218 GOSUB 7100; IF BADITEM$="Y" THEN GOTO 3245; REM "get FM1/IC0/ECR
3221 REM "**IF ECR$(181,6)<>DIM(6) THEN ECR$(181,6)>X3$(21,6) GOTO 3245 REM "IF EFFECTIVE DATE NOT YET REACHED THEN SKIP
3222 REM "**IF ECR$(187,6)<>DIM(6) THEN ECR$(187,6)<X3$(21,6) GOTO 3245 ; REM "IF EXPIRATION DATE HAS PASSED THEN SKIP
3223 GOSUB 8000; IF ITEM_OK$<>"Y" THEN GOTO 3245; REM "secure code restriction
3225 ENTRY$=ENTRY_TEMPLATE$
3228 IF ITEM$[ENTRY_INDEX,1](1,10)<>PREV_CATEGORY$ THEN GOSUB 4000
3230 GOSUB 3300
3235 IF LEN(TABLE$+ENTRY$)>62000 THEN PRINT (OUTPUT)TABLE$,EOL$,; TABLE$="" END_IF ; TABLE$=TABLE$+ENTRY$
3245 NEXT ENTRY_INDEX
3295 GOSUB CLEAR_READONLY; RETURN 
3300 REM "Given item, create row in table
3305 EINDEX=POS("?tf?"=ENTRY$); IF EINDEX=0 THEN GOTO 3399
3306 EEND_INDEX=POS("?"=ENTRY$(EINDEX+4)),ETAG$=ENTRY$(EINDEX+4,EEND_INDEX-1),ENTRY1$=ENTRY$(1,EINDEX-1),ENTRY2$=ENTRY$(EINDEX+EEND_INDEX+4),EPOS=POS("<"+ETAG$+">"=ENTRY_TAGS$); IF EPOS=0 THEN EINDEX=0 ELSE EINDEX=NUM(ENTRY_TAGS$(EPOS-3,3))
3309 REM PRINT 'CS',@(0,0),"EINDEX: ",EINDEX," ",ETAG$,; INPUT *,
3310 ON EINDEX GOTO 3394,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3394
3311 IF STOCK$<>"Y" THEN ITEMCD$=STP(FM1$(11,10),1) ELSE ITEMCD$=STP(IC0$(11,10),1) END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(ITEMCD$)+ENTRY2$; GOTO 3395; REM "item_code SSP303115
3312 ENTRY$=ENTRY1$+FN%HTML_ESC$(TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1)))+ENTRY2$; GOTO 3395; REM "cic_code SSP303115
3313 IF STOCK$<>"Y" THEN ITEMDESC$=STP(FM1$(42,40),1) ELSE ITEMDESC$=STP(IC0$(21,40),1) END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(ITEMDESC$)+ENTRY2$; GOTO 3395; REM "item description SSP303115
3314 IF STOCK$<>"Y" THEN ITEM_TYPE$="C" ELSE ITEM_TYPE$="I" END_IF ; GOSUB 7800; UM_EXT$=EXT_UM$; ENTRY$=ENTRY1$+FN%HTML_ESC$(UM_EXT$)+ENTRY2$; GOTO 3395; REM "um_ext, selling u/m & u/per extended SSP303115
3315 IF EC$[2](322,1)="Y" THEN ENTRY$=ENTRY1$+ENTRY2$; GOTO 3395 ELSE IF STOCK$<>"Y" THEN SELL_PRICE=FM1[3] ELSE SELL_PRICE=IC0[0] END_IF ; IF EC$[7](598,1)<>"Y" AND (FM1[29]<>0 OR EC$[7](601,1)="Y") THEN SELL_PRICE=FM1[29] END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(SELL_PRICE:X3$(69,1)+"###,###.00"))+ENTRY2$; GOTO 3395; REM "price, WO174240, if cust parm says so, always use FMS price, even if 0. SSP263620, was IF EC$[7](598,1)="N", corrected to <>"Y" SSP303115
3316 IF STOCK$="Y" OR FLAGGED_STOCK$="Y" THEN ITEMKEY$=IC0$(1,20) ELSE ITEMKEY$=FM1$(1,20) END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(ITEMKEY$)+ENTRY2$; GOTO 3395; REM "item_key - key to Form master SSP303115
3317 ENTRY$=ENTRY1$+FN%HTML_ESC$(USER$)+ENTRY2$; GOTO 3395; REM "user SSP303115
3318 ENTRY$=ENTRY1$+FN%HTML_ESC$(PASSWORD$)+ENTRY2$; GOTO 3395; REM "password  SSP303115
3319 ENTRY$=ENTRY1$+FN%HTML_ESC$(SESSION_ID$)+ENTRY2$; GOTO 3395; REM "session id SSP303115
3320 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(ECH$(21,20),1))+ENTRY2$; GOTO 3395; REM "catalog_code from ECH SSP303115
3321 IF LEN(ECH$)<121 THEN ECH$=ECH$+DIM(60) END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(ECH$(61,60),1))+ENTRY2$; GOTO 3395; REM "catalog_addl from ECH SSP303115
3322 IF LEN(ECH$)<181 THEN ECH$=ECH$+DIM(180) END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(ECH$(121,60),1))+ENTRY2$; GOTO 3395; REM "catalog_image from ECH SSP303115
3323 IF FM1[29]=0 THEN FMS_PRICE=FM1[3] ELSE FMS_PRICE=FM1[29] END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(FMS_PRICE:X3$(69,1)+"###,###.00"))+ENTRY2$; GOTO 3395; REM "fms_price SSP303115
3324 IF STOCK$<>"Y" THEN ITEM_TYPE$="C" ELSE ITEM_TYPE$="I" END_IF ; GOSUB 7800; UM_EXT$=EXT_UM$; ENTRY$=ENTRY1$+FN%HTML_ESC$(UM_EXT$)+ENTRY2$; GOTO 3395; REM "alt_um_ext, alternate unit of issue  u/m & u/per extended SSP303115
3325 PER$="N"; GOSUB 7880; GOTO 3395; REM "price_in_alt_um, calculated from sell price, sell u/m and alt iss #1 um
3326 IF FM1[29]=0 THEN FMS_PRICE=FM1[3] ELSE FMS_PRICE=FM1[29] END_IF ; IF EC$[2](322,1)="Y" THEN ENTRY$=ENTRY1$+ENTRY2$ ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(FMS_PRICE:X3$(69,1)+"###,###.00 per "))+ENTRY2$ END_IF ; GOTO 3395; REM "flagged_fms_price,shown unless don't show flag in buyer is set SSP303115
3327 IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(31,30),3," ")<>"" THEN ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(31,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form1. SSP174647, then SSP175716 SSP303115 SSP307179
3328 IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(61,30),3," ")<>"" THEN ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(61,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form2. SSP174647, then SSP175716 SSP303115 SSP307179
3329 IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(91,30),3," ")<>"" THEN ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(91,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form3. SSP174647, then SSP175716 SSP303115 SSP307179
3330 IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(121,30),3," ")<>"" THEN ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(121,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form4. SSP174647, then SSP175716 SSP303115 SSP307179
3331 IF STP(ECR$(151,30),3," ")="" AND EC_PARM$(1136,1)<>"Y" THEN ENTRY$=ENTRY1$+ENTRY2$; GOTO 3395 ELSE IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(151,30),3," ")<>"" THEN ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(151,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form5. SSP174647, then SSP175716 SSP303115 SSP307179
3332 IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(31,30),3," ")<>"" THEN ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(31,30),2))+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+ENTRY2$; GOTO 3395; REM "image_form1_link. SSP174647, then SSP175716 SSP303115
3333 IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(61,30),3," ")<>"" THEN ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(61,30),2))+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+ENTRY2$; GOTO 3395; REM "image_form2_link. SSP174647, then SSP175716 SSP303115
3334 IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(91,30),3," ")<>"" THEN ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(91,30),2))+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+ENTRY2$; GOTO 3395; REM "image_form3_link. SSP174647, then SSP175716 SSP303115
3335 IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(121,30),3," ")<>"" THEN ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(121,30),2))+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+ENTRY2$; GOTO 3395; REM "image_form4_link. SSP174647, then SSP175716 SSP303115
3336 IF STP(ECR$(151,30),3," ")="" AND EC_PARM$(1136,1)<>"Y" THEN ENTRY$=ENTRY1$+ENTRY2$; GOTO 3395 ELSE IF EC_PARM$(1136,1)<>"Y" OR STP(ECR$(151,30),3," ")<>"" THEN ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(151,30),2))+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(EC_PARM$(198,60),2)+STP(EC_PARM$(411,20),2))+ENTRY2$; GOTO 3395; REM "image_form5_link. SSP174647, then SSP175716 SSP303115
3337 IF STOCK$<>"Y" THEN ITEM_TYPE$="C" ELSE ITEM_TYPE$="I" END_IF ; GOSUB 7800; ENTRY$=ENTRY1$+FN%HTML_ESC$(UM$)+ENTRY2$; GOTO 3395; REM "um SSP303115
3338 ITEM_TYPE$="C"; GOSUB 7800; ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(PACK))+ENTRY2$; GOTO 3395; REM "qty_um SSP303115
3339 IF STOCK$<>"Y" THEN ALTUM$=FM1$(238,4) ELSE ALTUM$=IC0$(120,4) END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(ALTUM$)+ENTRY2$; GOTO 3395; REM "alt_um SSP303115
3340 IF STOCK$<>"Y" THEN ALTQTY=FM1[25] ELSE ALTQTY=IC0[14] END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(ALTQTY))+ENTRY2$; GOTO 3395; REM "qty_alt_um SSP303115
3341 GOSUB 7600; ENTRY$=ENTRY1$+FN%HTML_ESC$(VAR_TEXT$)+ENTRY2$; GOTO 3395; REM "3p_text, ENTRY2$ should have [x] var on very front of it SSP303115
3342 GOSUB 7700; ENTRY$=ENTRY1$+FN%HTML_ESC$(ITEM_KEY_UE$)+ENTRY2$; GOTO 3395; REM "item_key_ue SSP303115
3343 GOSUB 7750; ENTRY$=ENTRY1$+FN%HTML_ESC$(DESC_UE$)+ENTRY2$; GOTO 3395; REM "desc_ue SSP303115
3344 GOSUB 7950; GOSUB 4100; ENTRY$=ENTRY1$+QTYBREAK$+ENTRY2$; GOTO 3395; REM "qtybreakstart
3345 GOSUB 7890; GOTO 3395; REM "fms_in_alt_um, calculation of sell price converted to alternate unit of issue
3346 GOSUB 7600; ENTRY$=ENTRY1$+FN%HTML_ESC$(VAR_TEXT$)+ENTRY2$; GOTO 3395; REM "vp_text, ENTRY2$ should have [x] var on very front of it ssp#148607 SSP303115
3347 GOSUB 3900; ENTRY$=ENTRY1$+FN%HTML_ESC$(VAR_URL$)+ENTRY2$; GOTO 3395; REM "vp_url ssp#148607 SSP303115
3348 GOSUB 4300; ENTRY$=ENTRY1$+INFOSTOCK$+ENTRY2$; GOTO 3395; REM "infostockstart
3349 GOSUB 4350; ENTRY$=ENTRY1$+INFOWR$+ENTRY2$; GOTO 3395; REM "infowrstart
3350 GOSUB 4400; ENTRY$=ENTRY1$+INFOPO$+ENTRY2$; GOTO 3395; REM "infopostart
3351 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(FM1$(389,60),2))+ENTRY2$; GOTO 3395; REM "form_memo SSP303115
3352 GOSUB 7000; ENTRY$=ENTRY1$+FN%HTML_ESC$(MAX$)+ENTRY2$; GOTO 3395; REM "monthly_max SSP303115
3353 LC$=STR(MOD(ENTRY_INDEX,2)+1); ENTRY$=ENTRY1$+FN%HTML_ESC$(LC$)+ENTRY2$; GOTO 3395; REM "line_class - in order to reference alternating style sheet on product catalog SSP303115
3354 GOSUB 4450; ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(FS0$(21,60),2))+ENTRY2$; GOTO 3395; REM "form_note ssp 152241 SSP303115
3355 GOSUB 7000; IF MAX$="" THEN ENTRY$=ENTRY1$+ENTRY2$; GOTO 3395 ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(STR(NUM(EC$[7](591,2)):"##"),2)+" mo max qty: ")+ENTRY2$; GOTO 3395; REM "max_months SSP303115
3356 GOSUB 7000; ENTRY$=ENTRY1$+FN%HTML_ESC$(CUMULATIVE_MAX$)+ENTRY2$; GOTO 3395; REM "cumulative_max SSP303115
3357 IF EC$[2](322,1)="Y" THEN ENTRY$=ENTRY1$+ENTRY2$; GOTO 3395 ELSE IF ECR$(253,1)="C" THEN SELL_PRICE=FM1[3] ELSE GOSUB 7950; SELL_PRICE=NUM(BREAKPRICE$[0]) END_IF END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(SELL_PRICE:X3$(69,1)+"###,###.00"))+ENTRY2$; GOTO 3395; REM "base_price 157200A SSP303115
3358 ITEMKEY$=ECH$(41,20); ENTRY$=ENTRY1$+FN%HTML_ESC$(ITEMKEY$)+ENTRY2$; GOTO 3395; REM "item_key - key to Form master SSP303115
3359 GOSUB 7700; ENTRY$=ENTRY1$+FN%HTML_ESC$(ITEM_KEY_UE$)+ENTRY2$; GOTO 3395; REM "item_key_ue SSP303115
3360 PER$="Y"; GOSUB 7880; GOTO 3395 ! WO166710, flagged_price_in_alt_um
3361 GOSUB 8200; ENTRY$=ENTRY1$+QB_LIST$+ENTRY2$; GOTO 3395 ! WO175854, qty_breaks_ddl
3362 GOSUB 8350; ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(STR(IC1INFO[31]/PACKDIV:"#,###,##0-"),1))+ENTRY2$; GOTO 3395 ! WO181418, ic1_avail_in_stock_sell SSP303115
3363 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(ECH$(51,10),1)+".pdf")+ENTRY2$; GOTO 3395 ! WO181992, item_code_pdf. SSP185254, changed STP code from 3 to 1. SSP303115
3364 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(FM1$(167,6),1))+ENTRY2$; GOTO 3395 ! SSP186078, rev_date SSP303115
3365 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(CATALOG$))+ENTRY2$; GOTO 3395 ! catalog_id SSP303115
3366 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(CATEGORY$))+ENTRY2$; GOTO 3395 ! category_id SSP303115
3367 ENTRY$=ENTRY1$+FN%HTML_ESC$(ITEM$[ENTRY_INDEX,2])+ENTRY2$; GOTO 3395 ! position_item SSP303115
3394 ENTRY$=ENTRY1$+""+ENTRY2$; GOTO 3395; REM "tag not found, replace with '?'
3395 GOTO 3305
3399 RETURN 
3400 REM "Use ECH catalog file to put in order, output header when category changes
3401 GOSUB 8450; GOSUB 3450
3402 IF MYCATALOG$="Y" THEN GOTO 3403 ELSE GOTO 3405
3403 IF POSITION_ITEM$="" AND DIRECTION$="B" THEN POSITION_ITEM$=EC$[2](1,15)+$FFFFFFFFFFFF$ ELSE IF POSITION_ITEM$="" AND DIRECTION$="F" THEN DIM POSITION_ITEM$(40); POSITION_ITEM$(1,15)=HI$; REM "positioning for active category 163469
3404 GOTO 3407
3405 IF POSITION_ITEM$="" AND DIRECTION$="F" AND EC$[1](1178,20)<>DIM(20) THEN POSITION_ITEM$=CATALOG$+CATEGORY$+EC$[1](1178,19); GOTO 3407 ! SSP177687, if we have a last active - first item in the session record then use it.
3406 IF POSITION_ITEM$="" AND DIRECTION$="B" THEN POSITION_ITEM$=CATALOG$+CATEGORY$+$FFFFFFFFFFFF$ ELSE IF POSITION_ITEM$="" AND DIRECTION$="F" THEN POSITION_ITEM$=CATALOG$+CATEGORY$+$00$; REM "if in backwards order, start at end of file
3407 ECB_FIRST_ITEM$=DIM(20); GOSUB 8650 ! SSP177687, always clear last active - first item
3410 FIRST_ITEM$="",LAST_ITEM$="",TOTAL_RECORDS=0,INDEX=1; DIM ITEM$[MAX_ROWS,2]; REM "ITEMS$[r,x] where x=1 ECH$ record  x=2 current ECH/EDE key  ssp154559
3415 IF MYCATALOG$="N" THEN READ (Z[5],KEY=POSITION_ITEM$,KNO=CATALOGSORT,DOM=3416) ELSE IF CVS(POSITION_ITEM$,2)<>"" THEN READ (Z[9],KEY=POSITION_ITEM$,KNO=CATALOGSORT,DOM=3416) ELSE READ (Z[9],KEY=EC$[2](1,15),KNO=CATALOGSORT,DOM=3416); REM "ssp 154559/154600/163469/167992
3420 IF DIRECTION$="B" THEN KEY_3$=KEP(Z[CATALOG_CHANNEL],KNO=CATALOGSORT,END=3435) ELSE KEY_3$=KEY(Z[CATALOG_CHANNEL],KNO=CATALOGSORT,END=3435); REM "ssp 154559
3421 READ (Z[CATALOG_CHANNEL],KEY=KEY_3$,KNO=CATALOGSORT)ECH$; DIM EDE$(55); IF MYCATALOG$="Y" THEN EDE$=ECH$; DIM ECH$(60); ECH$(1,10)=CATALOG$,ECH$(11,10)=EC$[2](483,10),ECH$(21,40)=EDE$(16,40) END_IF ; IF EC$[2](339,1)<>"Y" THEN GOTO 3424 END_IF ; IF EC$[2](483,10)<>DIM(10) THEN GOTO 3424; REM "ck for only active forms for fms location - if active set then if default category include all items in remaining categories
3422 FM4_FOUND$="N"; FIND (Z[7],KEY=ECH$(41,20)+EC$[1](1167,4),DOM=3420)IOL=0370; FM4_FOUND$="Y"; REM "ssp 154600
3424 GOSUB SET_READONLY; DIM ECR$(1024); FIND (Z[6],KEY=ECH$(41,20),DOM=*NEXT)IOL=0360; GOSUB 8000; IF ITEM_OK$<>"Y" THEN GOSUB CLEAR_READONLY; GOTO 3420 ! SSP173987. SSP185006, added READONLY logic
3425 GOSUB CLEAR_READONLY; IF MYCATALOG$<>"Y" THEN GOTO 3428
3426 IF KEY_3$(1,15)<>EC$[2](1,15) THEN GOTO 3435 ELSE ITEM$[INDEX,1]=ECH$,ITEM$[INDEX,2]=KEY_3$,TOTAL_RECORDS=TOTAL_RECORDS+1,INDEX=INDEX+1; IF MAX_ROWS<>0 AND TOTAL_RECORDS>=MAX_ROWS THEN GOTO 3435
3427 GOTO 3429
3428 IF KEY_3$(1,10)<>CATALOG$ OR (NOT(NUL(CATEGORY$)) AND KEY_3$(11,10)<>CATEGORY$) OR STP(CATEGORY$,1)="" THEN GOTO 3435 END_IF ; ITEM$[INDEX,1]=ECH$,ITEM$[INDEX,2]=KEY_3$,TOTAL_RECORDS=TOTAL_RECORDS+1,INDEX=INDEX+1; IF MAX_ROWS<>0 AND TOTAL_RECORDS>=MAX_ROWS THEN GOTO 3435; REM "skip to correct place to exit. SSP178947, if blank category then don't add record to array
3430 GOTO 3420
3440 IF TOTAL_RECORDS>0 THEN IF DIRECTION$="B" THEN FIRST_ITEM$=ITEM$[TOTAL_RECORDS,2],LAST_ITEM$=ITEM$[1,2] ELSE FIRST_ITEM$=ITEM$[1,2],LAST_ITEM$=ITEM$[TOTAL_RECORDS,2]
3445 RETURN 
3450 REM "Set VERY_FIRST_ITEM$ and VERY_LAST_ITEM$. These will be used to determine when to NOT show prev and next buttons
3455 VERY_FIRST_ITEM$="",VERY_LAST_ITEM$=""
3456 IF MYCATALOG$<>"Y" THEN GOTO 3460 ELSE READ (Z[9],KEY=EC$[2](1,15),KNO=CATALOGSORT,DOM=3457)
3457 VK$=KEY(Z[9],KNO=CATALOGSORT,END=3466); IF VK$(1,15)<>EC$[2](1,15) THEN GOTO 3466 ELSE VERY_FIRST_ITEM$=VK$; GOTO 3466; REM "set very first item for active items category
3460 READ (Z[5],KEY=CATALOG$+CATEGORY$,KNO=CATALOGSORT,DOM=3461)
3465 VK$=KEY(Z[5],KNO=CATALOGSORT,END=3466); READ (Z[5],KEY=VK$)ECH_REC$; IF VK$(1,20)=CATALOG$+CATEGORY$ THEN IF EC$[2](339,1)<>"Y" THEN VERY_FIRST_ITEM$=VK$ ELSE IF EC$[2](483,10)<>DIM(10) THEN VERY_FIRST_ITEM$=VK$ ELSE FIND (Z[7],KEY=ECH_REC$(41,20)+EC$[1](1167,4),DOM=3465); VERY_FIRST_ITEM$=VK$; REM "ssp 154600 2/11/03
3467 IF MYCATALOG$<>"Y" THEN GOTO 3470 ELSE READ (Z[9],KEY=EC$[2](1,15)+$FF$,KNO=CATALOGSORT,DOM=3468)
3468 VK$=KEP(Z[9],KNO=CATALOGSORT,END=3472); READ (Z[9],KEY=VK$,KNO=CATALOGSORT)EDE_REC$; ECR_KEY$=EDE_REC$(36,20); GOSUB 8100; IF ITEM_OK$<>"Y" THEN GOTO *SAME ELSE IF VK$(1,15)<>EC$[2](1,15) THEN GOTO 3472 ELSE VERY_LAST_ITEM$=VK$; GOTO 3472; REM "set very last item for active item category. SSP178734, check secure codes, if not ok go back for another item
3470 READ (Z[5],KEY=CATALOG$+CATEGORY$+$FF$,KNO=CATALOGSORT,DOM=3471)
3471 VK$=KEP(Z[5],KNO=CATALOGSORT,END=3472); READ (Z[5],KEY=VK$,KNO=CATALOGSORT)ECH_REC$; ECR_KEY$=ECH_REC$(41,20); GOSUB 8100; IF ITEM_OK$<>"Y" THEN GOTO *SAME ELSE IF VK$(1,20)=CATALOG$+CATEGORY$ THEN IF EC$[2](339,1)<>"Y" THEN VERY_LAST_ITEM$=VK$ ELSE IF EC$[2](483,10)<>DIM(10) THEN VERY_LAST_ITEM$=VK$ ELSE FIND (Z[7],KEY=ECH_REC$(41,20)+EC$[1](1167,4),DOM=3471); VERY_LAST_ITEM$=VK$; REM "ssp 154600 2/11/03. SSP178734, check secure codes, if not ok go back for another item
3495 RETURN 
3500 REM "Output next button, using BUTTON_NEXT_TEMPLATE$ to pass information, creating BUTTON$, if needed
3502 BUTTON$="",BUTTON_NEXT_TAGS$="001<position_item>002<user>003<password>004<session_id>005<category>"
3503 REM "Setup BUTTON_NEXT_TEMPLATE$
3505 READ (100,END=3506)LINE$; GOSUB 7550; BUTTON_NEXT_TEMPLATE$=BUTTON_NEXT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonnextend?"=LINE$)=0 THEN GOTO 3505
3510 IF LAST_ITEM$=VERY_LAST_ITEM$ THEN BUTTON$=""; GOTO 3595 ELSE BUTTON$=BUTTON_NEXT_TEMPLATE$
3515 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3591
3516 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_NEXT_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_NEXT_TAGS$(BNPOS-3,3))
3520 ON BNINDEX GOTO 3590,3521,3522,3523,3524,3525,3590
3521 RTEXT$=LAST_ITEM$; GOSUB 7900; BUTTON$=BUTTON1$+UTEXT$+BUTTON2$; GOTO 3590; REM "position_item
3522 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3590; REM "User
3523 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3590; REM "password
3524 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3590; REM "session_id
3525 BUTTON$=BUTTON1$+CATEGORY$+BUTTON2$; GOTO 3590; REM "category
3590 GOTO 3515
3595 RETURN 
3600 REM "Output previous button, using BUTTON_PREV_TEMPLATE$ to pass information, creating BUTTON$, if needed
3602 BUTTON$="",BUTTON_PREV_TAGS$="001<position_item>002<user>003<password>004<session_id>005<category>"
3605 READ (100,END=3606)LINE$; GOSUB 7550; BUTTON_PREV_TEMPLATE$=BUTTON_PREV_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonprevend?"=LINE$)=0 THEN GOTO 3605
3610 IF FIRST_ITEM$=VERY_FIRST_ITEM$ THEN BUTTON$=""; GOTO 3695 ELSE BUTTON$=BUTTON_PREV_TEMPLATE$
3615 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3691
3616 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_PREV_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_PREV_TAGS$(BNPOS-3,3))
3620 ON BNINDEX GOTO 3690,3621,3622,3623,3624,3625,3690
3621 RTEXT$=FIRST_ITEM$; GOSUB 7900; BUTTON$=BUTTON1$+UTEXT$+BUTTON2$; ECB_FIRST_ITEM$=MID(FIRST_ITEM$,21,20); GOSUB 8650; GOTO 3690; REM "position_item. SSP177687, save off first item in session record
3622 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3690; REM "User
3623 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3690; REM "password
3624 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3690; REM "session_id
3625 BUTTON$=BUTTON1$+CATEGORY$+BUTTON2$; GOTO 3690; REM "category
3690 GOTO 3615
3695 RETURN 
3700 REM "buttonallstart/end
3702 ALLBUTTON$=""
3705 READ (100,END=3706)LINE$; GOSUB 7550; ALLBUTTON$=ALLBUTTON$+LINE$+EOL$; IF POS("?tf?buttonallend?"=LINE$)=0 THEN GOTO 3705
3707 IF ITEMALL_COUNT=0 THEN ALLBUTTON$=""
3709 RETURN 
3750 REM "Process ITEM$[X] and separate into ITEMALL$[X] and ITEM3P$[X] for separate section display
3751 IF SEPARATION_DONE$="Y" THEN GOTO 3795
3752 DIM ITEMALL$[MAX_ROWS],ITEM3P$[MAX_ROWS]; ITEMALL_COUNT=0,ITEM3P_COUNT=0
3753 SEPARATION_DONE$="Y"; IF TOTAL_RECORDS=0 THEN GOTO 3795
3755 FOR SI=1 TO TOTAL_RECORDS
3756 GOSUB SET_READONLY
3757 DIM ECR$(1024); FIND (Z[6],KEY=ITEM$[SI,1](41,20),DOM=3760)ECR$; GOSUB 8000; IF ITEM_OK$<>"Y" THEN GOTO 3769 END_IF ; IF ECR$(243,10)=DIM(10) THEN GOTO 3760 ELSE GOTO 3765
3760 REM "all item
3761 GOSUB CLEAR_READONLY
3762 ITEMALL_COUNT=ITEMALL_COUNT+1,ITEMALL$[ITEMALL_COUNT]=ITEM$[SI,1]; GOTO 3769
3765 REM "3p item
3767 ITEM3P_COUNT=ITEM3P_COUNT+1,ITEM3P$[ITEM3P_COUNT]=ITEM$[SI,1]
3769 NEXT SI
3795 RETURN 
3800 REM "Output entries, using ENTRYALL_TEMPLATE$ to pass information, create TABLE$ to output
3802 GOSUB 3400
3803 GOSUB 3750
3804 REM "entry tags moved to line 1110
3805 REM "Setup ENTRYALL_TEMPLATE$
3806 ENTRYALL_TEMPLATE$="",TABLE$="",PREV_CATEGORY$=""
3807 ENTRYALL_TEMPLATE$=CTENTRY2$(1,POS("?tf?allorderend?"=CTENTRY2$)-1),CTENTRY2$=CTENTRY2$(POS("?tf?allorderend?"=CTENTRY2$)+16)
3809 REM "Now read catalog,if B direction do it backwards
3810 IF DIRECTION$="B" THEN START_PT=ITEMALL_COUNT,END_PT=1,STEP_SIZE=-1 ELSE START_PT=1,END_PT=ITEMALL_COUNT,STEP_SIZE=1
3812 IF ITEMALL_COUNT=0 THEN GOTO 3849
3815 FOR ENTRY_INDEX=START_PT TO END_PT STEP STEP_SIZE
3817 ECH$=ITEMALL$[ENTRY_INDEX]; REM "get next item
3818 GOSUB 7100; IF BADITEM$="Y" THEN GOTO 3845; REM "get FM1/IC0/ECR
3821 REM "**IF ECR$(181,6)<>DIM(6) THEN ECR$(181,6)>X3$(21,6) GOTO 3845 REM "IF EFFECTIVE DATE NOT YET REACHED THEN SKIP
3822 REM "**IF ECR$(187,6)<>DIM(6) THEN ECR$(187,6)<X3$(21,6) GOTO 3845 ; REM "IF EXPIRATION DATE HAS PASSED THEN SKIP
3823 GOSUB 8000; IF ITEM_OK$<>"Y" THEN GOTO 3845
3825 ENTRY$=ENTRYALL_TEMPLATE$; GOSUB CHECK_FOR_INCLUDE
3828 IF ITEMALL$[ENTRY_INDEX](1,10)<>PREV_CATEGORY$ THEN GOSUB 4000
3830 ACTIVETEMPLATE$=ENTRYALL_TEMPLATE$; GOSUB 3300
3835 TABLE$=TABLE$+ENTRY$
3845 NEXT ENTRY_INDEX
3849 RETURN 
3850 REM "Output entries, using ENTRY3P_TEMPLATE$ to pass information, create TABLE$ to output
3851 GOSUB 3750
3853 REM "Setup ENTRY3P_TEMPLATE$
3854 ENTRY3P_TEMPLATE$="",TABLE$="",PREV_CATEGORY$=""
3855 ENTRY3P_TEMPLATE$=CTENTRY2$(1,POS("?tf?3porderend?"=CTENTRY2$)-1),CTENTRY2$=CTENTRY2$(POS("?tf?3porderend?"=CTENTRY2$)+15)
3859 REM "Now read catalog,if B direction do it backwards
3860 IF DIRECTION$="B" THEN START_PT=ITEM3P_COUNT,END_PT=1,STEP_SIZE=-1 ELSE START_PT=1,END_PT=ITEM3P_COUNT,STEP_SIZE=1
3864 IF ITEM3P_COUNT=0 THEN GOTO 3899
3865 FOR ENTRY_INDEX=START_PT TO END_PT STEP STEP_SIZE
3867 ECH$=ITEM3P$[ENTRY_INDEX]; IF EDA$(41,1)="S" OR ECH$(41,10)=DIM(10) THEN STOCK$="Y" ELSE STOCK$="N"
3868 GOSUB 7100; IF BADITEM$="Y" THEN GOTO 3895; REM "get FM1/IC0/ECR; 162820
3869 IF EC$[7](598,1)="Y" THEN FM1(29)=FM1(3); REM "162539
3870 DIM ECR$(1024); FIND (Z[6],KEY=ECH$(41,20),DOM=3881)IOL=0360; REM "get form webec parms
3871 REM "**IF ECR$(181,6)<>DIM(6) THEN ECR$(181,6)>X3$(21,6) GOTO 3895 REM "IF EFFECTIVE DATE NOT YET REACHED THEN SKIP
3872 REM "**IF ECR$(187,6)<>DIM(6) THEN ECR$(187,6)<X3$(21,6) GOTO 3895 ; REM "IF EXPIRATION DATE HAS PASSED THEN SKIP
3873 REM "**
3875 ENTRY$=ENTRY3P_TEMPLATE$; GOSUB CHECK_FOR_INCLUDE
3878 IF ITEM3P$[ENTRY_INDEX](1,10)<>PREV_CATEGORY$ THEN GOSUB 4000
3880 ACTIVETEMPLATE$=ENTRY3P_TEMPLATE$; GOSUB 3300
3885 IF LEN(TABLE$+ENTRY$)>62000 THEN PRINT (OUTPUT)TABLE$,EOL$,; TABLE$="" END_IF ; TABLE$=TABLE$+ENTRY$
3895 NEXT ENTRY_INDEX
3899 RETURN 
3900 ! Set VAR_URL$, assumes ECR$ is for current item - ssp#148607
3905 VAR_URL$=""
3910 DIM EC6$(900); FIND (Z[16],KEY=ECR$(243,10),DOM=*NEXT)EC6$
3915 VAR_URL$=STP(EC6$(81,60))
3949 RETURN 
4000 REM "Category has changed, output a category header (if categorystart was supplied and we have html to do so), then update PREV_CATEGORY$
4002 CAT_TAGS$="001<category_code>002<category_desc>003<category_addl>"
4003 DIM ECG$(100); ECG$(1,10)=ITEM$[ENTRY_INDEX,1](11,10); FIND (Z[4],KEY=ECG$(1,10),DOM=4004)IOL=0340
4004 PREV_CATEGORY$=ITEM$[ENTRY_INDEX,1](11,10)
4005 IF CAT_TEMPLATE$="" THEN GOTO 4095 ELSE CAT$="",TMP_CAT$=CAT_TEMPLATE$; REM "Skip if no template supplied, else setup for starting
4006 CINDEX=POS("?tf?"=TMP_CAT$); IF CINDEX=0 THEN CAT$=CAT$+TMP_CAT$; GOTO 4093
4007 CEND_INDEX=POS("?"=TMP_CAT$(CINDEX+4)),CTAG$=TMP_CAT$(CINDEX+4,CEND_INDEX-1),CAT$=CAT$+TMP_CAT$(1,CINDEX-1),TMP_CAT$=TMP_CAT$(CINDEX+CEND_INDEX+4),CPOS=POS("<"+CTAG$+">"=CAT_TAGS$); IF CPOS=0 THEN CINDEX=0 ELSE CINDEX=NUM(CAT_TAGS$(CPOS-3,3))
4010 ON CINDEX GOTO 4089,4011,4012,4013,4089
4011 CAT$=CAT$+STP(ECG$(1,10),1); GOTO 4090; REM "category_code
4012 CAT$=CAT$+STP(ECG$(11,30),1); GOTO 4090; REM "category_desc
4013 CAT$=CAT$+STP(ECG$(41,60),1); GOTO 4090; REM "category_addl
4089 CAT$=CAT$+"?"; GOTO 4090; REM "tag not found, replace with '?'
4090 GOTO 4006
4093 TABLE$=TABLE$+CAT$
4095 RETURN 
4100 REM "quantity break pricing section (qtybreakstart)
4101 REM "Output entries, using QTYBREAK_TEMPLATE$ to pass information, create QTABLE$ to output
4102 REM "entry tags moved to line 1110
4103 REM "Setup QTYBREAK_TEMPLATE$
4104 QTYBREAK_TEMPLATE$=ACTIVETEMPLATE$,QTABLE$="",TMPENTRY$=ACTIVETEMPLATE$
4110 STARTQP=POS("<!?tf?qtybreakstart?>"=QTYBREAK_TEMPLATE$); IF STARTQP<>0 AND LEN(QTYBREAK_TEMPLATE$)<>STARTQP+21 THEN QTYBREAK_TEMPLATE$=QTYBREAK_TEMPLATE$(STARTQP+21)
4111 ENDQP=POS("<!?tf?qtybreakend?>"=QTYBREAK_TEMPLATE$); IF ENDQP<>0 THEN QTYBREAK_TEMPLATE$=QTYBREAK_TEMPLATE$(1,ENDQP-1)
4112 REM "strip out the qtybreakstart/end section from ENTRY2$ that is currently being processed
4115 ENDQP=POS("<!?tf?qtybreakend?>"=ENTRY2$); IF ENDQP=0 THEN GOTO 4116 ELSE ENTRY2$=ENTRY2$(ENDQP+21)
4116 IF LEN(ENTRY1$)<=2 THEN GOTO 4117 END_IF ; IF ENTRY1$(LEN(ENTRY1$)-1,2)="<!" THEN ENTRY1$=ENTRY1$(1,LEN(ENTRY1$)-2); REM "strip out page control tag <! that is left over with the processing of it as a simple data tag
4117 REM "PRINT 'CS',"ENTRY1: ",'LF',@(0),ENTRY1$,; INPUT *
4120 QBENTRY$=QTYBREAK_TEMPLATE$
4122 IF QTYBREAKS_INEFFECT$="Y" THEN GOSUB 4200; QTYBREAK$=QBENTRY$ ELSE QTYBREAK$=""; REM "157200
4149 RETURN 
4200 REM "Given item, create row in table
4210 CALL "EC3QB2",X3$,X4$,EC_PARM$,EC${ALL},STOCK$,FLAGGED_STOCK$,ECR$,BREAKQTY${ALL},BREAKPRICE${ALL},BREAKALL${ALL},BREAKRANGE${ALL},BREAKRANGEALL${ALL},QBENTRY$,OPTIONS$,FM1$,IC0$
4240 RETURN 
4300 REM "infostockstart - strip section into INFOSTOCK_TEMPLATE$
4301 REM "Output entries, using INFOSTOCK_TEMPLATE$ to pass information
4304 INFOSTOCK_TEMPLATE$=ACTIVETEMPLATE$,TMPENTRY$=ACTIVETEMPLATE$
4310 STARTXX=POS("<!?tf?infostockstart?>"=INFOSTOCK_TEMPLATE$); IF STARTXX<>0 AND LEN(INFOSTOCK_TEMPLATE$)<>STARTXX+22 THEN INFOSTOCK_TEMPLATE$=INFOSTOCK_TEMPLATE$(STARTXX+22)
4311 ENDXX=POS("<!?tf?infostockend?>"=INFOSTOCK_TEMPLATE$); IF ENDXX<>0 THEN INFOSTOCK_TEMPLATE$=INFOSTOCK_TEMPLATE$(1,ENDXX-1)
4312 REM "strip out the infostockstart/end section from ENTRY2$ that is currently being processed
4315 ENDXX=POS("<!?tf?infostockend?>"=ENTRY2$); IF ENDXX=0 THEN GOTO 4316 ELSE ENTRY2$=ENTRY2$(ENDXX+20)
4316 IF LEN(ENTRY1$)<=2 THEN GOTO 4317 END_IF ; IF ENTRY1$(LEN(ENTRY1$)-1,2)="<!" THEN ENTRY1$=ENTRY1$(1,LEN(ENTRY1$)-2); REM "strip out page control tag <! that is left over with the processing of it as a simple data tag
4317 REM "PRINT 'CS',"ENTRY1: ",'LF',@(0),ENTRY1$,; INPUT *
4319 IF STOCK$<>"Y" AND FLAGGED_STOCK$<>"Y" THEN INFOSTOCK_TEMPLATE$=""; REM "if not stock item then return nothing
4320 INFOSTOCKENTRY$=INFOSTOCK_TEMPLATE$
4322 REM "GOSUB 4200
4332 INFOSTOCK$=INFOSTOCKENTRY$
4349 RETURN 
4350 REM "infowrstart - strip section into INFOWR_TEMPLATE$
4351 REM "Output entries, using INFOWR_TEMPLATE$ to pass information
4354 INFOWR_TEMPLATE$=ACTIVETEMPLATE$,TMPENTRY$=ACTIVETEMPLATE$
4360 STARTXX=POS("<!?tf?infowrstart?>"=INFOWR_TEMPLATE$); IF STARTXX<>0 AND LEN(INFOWR_TEMPLATE$)<>STARTXX+19 THEN INFOWR_TEMPLATE$=INFOWR_TEMPLATE$(STARTXX+19)
4361 ENDXX=POS("<!?tf?infowrend?>"=INFOWR_TEMPLATE$); IF ENDXX<>0 THEN INFOWR_TEMPLATE$=INFOWR_TEMPLATE$(1,ENDXX-1)
4362 REM "strip out the infowrstart/end section from ENTRY2$ that is currently being processed
4365 ENDXX=POS("<!?tf?infowrend?>"=ENTRY2$); IF ENDXX=0 THEN GOTO 4366 ELSE ENTRY2$=ENTRY2$(ENDXX+17)
4366 IF LEN(ENTRY1$)<=2 THEN GOTO 4367 END_IF ; IF ENTRY1$(LEN(ENTRY1$)-1,2)="<!" THEN ENTRY1$=ENTRY1$(1,LEN(ENTRY1$)-2); REM "strip out page control tag <! that is left over with the processing of it as a simple data tag
4367 REM "PRINT 'CS',"ENTRY1: ",'LF',@(0),ENTRY1$,; INPUT *
4369 IF ECR$(255,1)="Y" OR STOCK$="Y" OR FLAGGED_STOCK$="Y" THEN INFOWR_TEMPLATE$=""; REM "if not warehouse release of custom form then return nothing
4370 INFOWRENTRY$=INFOWR_TEMPLATE$
4372 REM "GOSUB 4200
4382 INFOWR$=INFOWRENTRY$
4399 RETURN 
4400 REM "infopostart - strip section into INFOPO_TEMPLATE$
4401 REM "Output entries, using INFOPO_TEMPLATE$ to pass information
4404 INFOPO_TEMPLATE$=ACTIVETEMPLATE$,TMPENTRY$=ACTIVETEMPLATE$
4410 STARTXX=POS("<!?tf?infopostart?>"=INFOPO_TEMPLATE$); IF STARTXX<>0 AND LEN(INFOPO_TEMPLATE$)<>STARTXX+19 THEN INFOPO_TEMPLATE$=INFOPO_TEMPLATE$(STARTXX+19)
4411 ENDXX=POS("<!?tf?infopoend?>"=INFOPO_TEMPLATE$); IF ENDXX<>0 THEN INFOPO_TEMPLATE$=INFOPO_TEMPLATE$(1,ENDXX-1)
4412 REM "strip out the infopostart/end section from ENTRY2$ that is currently being processed
4415 ENDXX=POS("<!?tf?infopoend?>"=ENTRY2$); IF ENDXX=0 THEN GOTO 4416 ELSE ENTRY2$=ENTRY2$(ENDXX+17)
4416 IF LEN(ENTRY1$)<=2 THEN GOTO 4417 END_IF ; IF ENTRY1$(LEN(ENTRY1$)-1,2)="<!" THEN ENTRY1$=ENTRY1$(1,LEN(ENTRY1$)-2); REM "strip out page control tag <! that is left over with the processing of it as a simple data tag
4417 REM "PRINT 'CS',"ENTRY1: ",'LF',@(0),ENTRY1$,; INPUT *
4419 IF ECR$(255,1)<>"Y" OR STOCK$="Y" OR FLAGGED_STOCK$="Y" THEN INFOPO_TEMPLATE$=""; REM "if not warehouse release of custom form then return nothing   ; 157200
4420 INFOPOENTRY$=INFOPO_TEMPLATE$
4422 REM "GOSUB 4200
4432 INFOPO$=INFOPOENTRY$
4449 RETURN 
4450 REM "read in FS0 for item
4452 DIM FS0$(200); FIND (Z(17),KEY=FM1$(1,20),DOM=4453)FS0$
4459 RETURN 
4500 CATALOG_TABLE_START:
4505 CATALOG_TABLE_TAGS$="001<catalogid>002<catalogdesc>003<category_table_start>004<catalogdesclong>005<catalogid_ue>"
4510 TEXT_OPT2=1; GOSUB 2250 ! Get CATALOG_LIST$
4515 CATALOG_TABLE_TEMPLATE$=LINE$,CATALOG_TABLE$="",LINE$=""
4520 READ (100,END=*NEXT)LINE$; GOSUB 7550; CATALOG_TABLE_TEMPLATE$=CATALOG_TABLE_TEMPLATE$+LINE$+EOL$; IF POS("?tf?catalog_table_end?"=LINE$)=0 THEN GOTO *SAME
4525 IF LEN(CATALOG_LIST$)<62 THEN GOTO CATALOG_TABLE_START_END ! WO256222, change from 31 to 62 since adding catalog long desc (30)
4529 NUM_CATS=LEN(CATALOG_LIST$)/62 ! WO256222, change from 31 to 62 since adding catalog long desc (30)
4530 FOR X=1 TO NUM_CATS
4535 CATALOGID$=CATALOG_LIST$(1,10),CATALOGDESC$=CATALOG_LIST$(12,20); CATALOG$=CATALOGID$,CATALOGDESCLONG$=CATALOG_LIST$(33,30) ! WO256222, get catalogdesclong
4540 CATENTRY$=CATALOG_TABLE_TEMPLATE$
4545 ACTIVETEMPLATE$=CATALOG_TABLE_TEMPLATE$; GOSUB CATALOG_TABLE_OUTPUT
4550 IF LEN(CATALOG_TABLE$+CATENTRY$)>25000 THEN PRINT (OUTPUT)CATALOG_TABLE$,EOL$,; CATALOG_TABLE$="" END_IF ; CATALOG_TABLE$=CATALOG_TABLE$+CATENTRY$
4555 CATALOG_LIST$=CATALOG_LIST$(63) ! WO256222, change from 32 to 63 since we now have catalog long description (30)
4560 NEXT X
4590 CATALOG_TABLE_START_END:RETURN 
4595 ! 
4600 CATALOG_TABLE_OUTPUT:
4605 EINDEX=POS("?tf?"=CATENTRY$); IF EINDEX=0 THEN GOTO CATALOG_TABLE_OUTPUT_END
4610 EEND_INDEX=POS("?"=CATENTRY$(EINDEX+4)),ETAG$=CATENTRY$(EINDEX+4,EEND_INDEX-1),CATENTRY1$=CATENTRY$(1,EINDEX-1),CATENTRY2$=CATENTRY$(EINDEX+EEND_INDEX+4),EPOS=POS("<"+ETAG$+">"=CATALOG_TABLE_TAGS$); IF EPOS=0 THEN EINDEX=0 ELSE EINDEX=NUM(CATALOG_TABLE_TAGS$(EPOS-3,3))
4615 ON EINDEX GOTO 4680,4621,4622,4623,4624,4625,4680
4621 CATENTRY$=CATENTRY1$+CATALOGID$+CATENTRY2$; GOTO 4685 ! CATALOGID
4622 CATENTRY$=CATENTRY1$+CATALOGDESC$+CATENTRY2$; GOTO 4685 ! CATALOGDESC
4623 GOSUB CATEGORY_TABLE_START; CATENTRY$=CATENTRY1$+CATEGORY_TABLE$+CATENTRY2$; GOTO 4685 ! category_table_start
4624 CATENTRY$=CATENTRY1$+CATALOGDESCLONG$+CATENTRY2$; GOTO 4685 ! WO256222, catalogdesclong
4625 CATENTRY$=CATENTRY1$+FN%URL_ESC$(CATALOGID$)+CATENTRY2$; GOTO 4685 ! catalogid_ue CATALOGID URL-safe SSP245897
4680 CATENTRY$=CATENTRY1$+""+CATENTRY2$; GOTO 4685
4685 GOTO 4605
4690 CATALOG_TABLE_OUTPUT_END:RETURN 
4695 ! 
4700 CATEGORY_TABLE_START:
4705 CATEGORY_TABLE_TAGS$="001<categoryid>002<categorydesc>003<catalogid>004<allorderstart>005<3porderstart>006<categoryaddl>007<categoryid_ue>008<catalogid_ue>"
4710 CATALOG$=CATALOGID$; GOSUB 8050 ! Get EDI_CATEGORY_LIST$
4715 CATEGORY_TABLE_TEMPLATE$=ACTIVETEMPLATE$,CATEGORY_TABLE$="",TMPENTRY$=ACTIVETEMPLATE$
4720 STARTCT=POS("<!?tf?category_table_start?>"=CATEGORY_TABLE_TEMPLATE$); IF STARTCT<>0 AND LEN(CATEGORY_TABLE_TEMPLATE$)<>STARTCT+28 THEN CATEGORY_TABLE_TEMPLATE$=CATEGORY_TABLE_TEMPLATE$(STARTCT+28)
4725 ENDCT=POS("<!?tf?category_table_end?>"=CATEGORY_TABLE_TEMPLATE$); IF ENDCT<>0 THEN CATEGORY_TABLE_TEMPLATE$=CATEGORY_TABLE_TEMPLATE$(1,ENDCT-1)
4730 ENDCT=POS("<!?tf?category_table_end?>"=CATENTRY2$); IF ENDCT=0 THEN GOTO *NEXT ELSE CATENTRY2$=CATENTRY2$(ENDCT+28) ! strip out the category_table_start/end section from CATENTRY2$ that is currently being processed
4735 IF LEN(CATENTRY1$)<=2 THEN GOTO *NEXT END_IF ; IF CATENTRY1$(LEN(CATENTRY1$)-1,2)="<!" THEN CATENTRY1$=CATENTRY1$(1,LEN(CATENTRY1$)-2) ! strip out page control tag <! that is left over with the processing of it as a simple data tag
4740 FOR XX=1 TO LEN(EDI_CATEGORY_LIST$)/10
4745 CATEGORY$=EDI_CATEGORY_LIST$((XX-1)*10+1,10)
4750 IF NUL(CATEGORY$) THEN GOTO 4770
4755 DIM ECG$(120); READ (Z[4],KEY=CATEGORY$,DOM=4770)ECG$; IF ECG$(107,1)="Y" THEN GOTO 4770
4760 CATEGORYID$=ECG$(1,10),CATEGORYDESC$=ECG$(11,30); CATEGORY$=CATEGORYID$; POSITION_ITEM$=""
4761 CATEGORYADDL$=STP(ECG$(41,60)) ! SSP230737
4765 CTENTRY$=CATEGORY_TABLE_TEMPLATE$; GOSUB CATEGORY_TABLE_OUTPUT
4767 CATEGORY_TABLE$=CATEGORY_TABLE$+CTENTRY$
4770 NEXT XX
4790 CATEGORY_TABLE_START_END:RETURN 
4795 ! 
4800 CATEGORY_TABLE_OUTPUT:
4805 EINDEX=POS("?tf?"=CTENTRY$); IF EINDEX=0 THEN GOTO CATEGORY_TABLE_OUTPUT_END
4810 EEND_INDEX=POS("?"=CTENTRY$(EINDEX+4)),ETAG$=CTENTRY$(EINDEX+4,EEND_INDEX-1),CTENTRY1$=CTENTRY$(1,EINDEX-1),CTENTRY2$=CTENTRY$(EINDEX+EEND_INDEX+4),EPOS=POS("<"+ETAG$+">"=CATEGORY_TABLE_TAGS$); IF EPOS=0 THEN EINDEX=0 ELSE EINDEX=NUM(CATEGORY_TABLE_TAGS$(EPOS-3,3))
4815 ON EINDEX GOTO 4880,4821,4822,4823,4824,4825,4826,4827,4828,4880
4821 CTENTRY$=CTENTRY1$+CATEGORYID$+CTENTRY2$; GOTO 4885 ! categoryid
4822 CTENTRY$=CTENTRY1$+CATEGORYDESC$+CTENTRY2$; GOTO 4885 ! category_desc
4823 CTENTRY$=CTENTRY1$+CATALOGID$+CTENTRY2$; GOTO 4885 ! catalogid
4824 GOSUB 3800; CTENTRY$=CTENTRY1$+TABLE$+CTENTRY2$; GOTO 4885; REM "allorderstart
4825 GOSUB 3850; CTENTRY$=CTENTRY1$+TABLE$+CTENTRY2$; GOTO 4885; REM "3porderstart
4826 CTENTRY$=CTENTRY1$+CATEGORYADDL$+CTENTRY2$; GOTO 4885 ! categoryaddl, SSP230737
4827 CTENTRY$=CTENTRY1$+FN%URL_ESC$(CATEGORYID$)+CTENTRY2$; GOTO 4885 ! categoryid_ue CATEGORYID URL-safe SSP245897
4828 CTENTRY$=CTENTRY1$+FN%URL_ESC$(CATALOGID$)+CTENTRY2$; GOTO 4885 ! catalogid_ue CATALOGID URL-safe SSP245897
4880 CTENTRY$=CTENTRY1$+""+CTENTRY2$; GOTO 4885
4885 GOTO 4805
4890 CATEGORY_TABLE_OUTPUT_END:RETURN 
4895 ! 
7000 REM "monthly_max
7002 IF EC$[2](87,1)="Y" THEN GOTO 7040 ELSE IF STP(FM4$,2)="" OR FM4$(1,20)<>ECH$(41,20) THEN GOSUB 7050
7003 MAX=0
7004 IF FM4LOCATED$="N" THEN GOTO 7010; REM "if no fm4 then only check for item parm max level
7006 IF FM4(10)<>0 THEN MAX=FM4(10); GOTO 7040
7007 PERCENTUSAGE=NUM(EC$[2](229,4)); IF PERCENTUSAGE=0 OR THEN THEN GOTO 7010
7008 MAX=FM4(0)*(PERCENTUSAGE/100); GOTO 7040
7010 IF NUM(ECR$(520,8))<>0 THEN MAX=NUM(ECR$(520,8)); GOTO 7040
7040 GOSUB 7800; MAX=MAX/SELLPACK
7042 IF MAX=0 THEN MAX$="" ELSE MAX$=STP(STR(MAX:"#,###,##0"),1)+" "+EXT_UM$
7043 IF MAX=0 THEN CUMULATIVE_MAX$="" ELSE CUMULATIVE_MAX$=STP(STR(MAX*NUM(EC$[7](591,2)):"#,###,##0"),2)+" "+EXT_UM$
7045 RETURN 
7050 REM "get FM4 record
7054 DIM FM4(15),FM4(500)
7070 READ (Z(7),KEY=ECH$(41,20)+EC$[1](1167,4),DOM=7071)IOL=0370; FM4LOCATED$="Y"; GOTO 7072
7071 FM4LOCATED$="N"
7095 RETURN 
7100 REM "get FM1/IC0/ECR item information ssp 157200
7101 BADITEM$="N",IC0FOUND$="N",STOCK$="N",FLAGGED_STOCK$="N"; REM "158267
7105 FINDITEMKEY$=ECH$(41,20); IF EDA$(41,1)="S" OR ECH$(41,10)=DIM(10) THEN STOCK$="Y" ELSE STOCK$="N"; REM "157200
7110 GOSUB SET_READONLY; DIM FM1$(550),FM1[31],IC0$(200),IC0[40]; IF STOCK$="Y" THEN GOTO 7112 ELSE FIND (Z[2],KEY=FINDITEMKEY$,DOM=7111)IOL=0320; IF EC$[7](598,1)="Y" THEN FM1(29)=FM1(3) END_IF ; IF FM1$(105,1)="Y" AND EC_PARM$(556,1)="Y" THEN FLAGGED_STOCK$="Y"; GOTO 7112 ELSE GOTO 7112 ! SSP#160707 / 162539
7111 GOSUB CLEAR_READONLY; BADITEM$="Y"; GOTO 7140
7112 GOSUB CLEAR_READONLY; GOSUB SET_READONLY; FIND (Z(11),KEY=ECH$(41,20),DOM=7113)IOL=0410; IC0FOUND$="Y"; GOTO 7115; REM "get IC0 record using custom item master key
7113 FIND (Z(11),KEY=DIM(10)+ECH$(51,10),DOM=7115)IOL=0410; IC0FOUND$="Y"; REM "get IC0 record using stock setting
7115 GOSUB CLEAR_READONLY; IF STOCK$="Y" AND IC0FOUND$<>"Y" THEN GOTO 7111; REM "bad record since stock item but no IC0 record found
7120 GOSUB SET_READONLY; IF STOCK$="Y" THEN FIND (Z[2],KEY=EC$[2](51,10)+ECH$(51,10),DOM=*NEXT)IOL=0320; IF EC$[7](598,1)="Y" THEN FM1[29]=FM1[3] ! SSP182025, if FM1 record setup for this customer, this stock item, read for FM1, may need later for alternate unit info
7121 GOSUB CLEAR_READONLY ! SSP182025
7130 GOSUB SET_READONLY; DIM ECR$(1024); FIND (Z[6],KEY=ECH$(41,20),DOM=7131)IOL=0360; REM "get form webec parms
7131 GOSUB CLEAR_READONLY; IF IC0FOUND$="N" AND ECR$(253,1)="I" THEN ECR$(253,1)="C"; REM "if pricing source set to inventory but no inventory record found then reset to custom item master
7135 GOSUB 8300 ! WO181418, get inventory figures for this item
7140 RETURN 
7550 REM "Send LINE$ to EC3BYB for generic fields processing
7560 CALL "EC3BYB",ERR=7561,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100 ! 227154
7595 RETURN 
7600 REM "3p_text handling, ENTRY2$ should have [x] in it
7605 REM "Extract [x] part from line2, if not found then ignore
7606 VAR_TEXT$=""
7610 IF LEN(ENTRY2$)<3 THEN GOTO 7611 ELSE BRACKET_POS=POS("]"=ENTRY2$); IF ENTRY2$(1,1)<>"[" OR BRACKET_POS=0 THEN GOTO 7611 ELSE VAR_CODE$=ENTRY2$(1,BRACKET_POS),ENTRY2$=ENTRY2$(BRACKET_POS+1); GOTO 7612
7611 VAR_TEXT$=""; GOTO 7645; REM "did not find var code part, so leave
7612 VAR_CODE$=VAR_CODE$(2,LEN(VAR_CODE$)-2); VAR_CODE$=STR(NUM(VAR_CODE$,ERR=7611):"00000")
7614 REM "FIND (Z[8],KEY=ECR$(243,10)+VAR_CODE$,DOM=07611) IOL=00380
7615 VAR_CODE_KEY$=ECR$(243,10)+VAR_CODE$; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,VAR_CODE_KEY$,VAR_TEXT${ALL}
7620 VAR_TEXT$=VAR_TEXT$[1]
7645 RETURN 
7700 REM "Netscape and other may require URL encoded item code to hide spaces, slashes, etc. we will encode the whole string rather than just the special chars, because its easier
7705 ITEM_KEY_UE$="",ITEM_KEY_CATALOG_UE$=""
7707 IF STOCK$="Y" OR FLAGGED_STOCK$="Y" THEN ITEMKEY$=IC0$(1,20) ELSE ITEMKEY$=FM1$(1,20)
7708 ITEMKEYCATALOG$=ECH$(41,20)
7710 FOR JJ=1 TO 20; ITEM_KEY_UE$=ITEM_KEY_UE$+"%"+HTA(ITEMKEY$(JJ,1)); NEXT JJ
7712 FOR JJ=1 TO 20; ITEM_KEY_CATALOG_UE$=ITEM_KEY_CATALOG_UE$+"%"+HTA(ITEMKEYCATALOG$(JJ,1)); NEXT JJ
7745 RETURN 
7750 REM "URL encode the description
7752 IF STOCK$<>"Y" THEN DESC$=STP(FM1$(42,40),1) ELSE DESC$=STP(IC0$(21,40),1)
7755 DESC_UE$=""; IF DESC$="" THEN GOTO 7795
7760 FOR JJ=1 TO LEN(DESC$); DESC_UE$=DESC_UE$+"%"+HTA(DESC$(JJ,1)); NEXT JJ
7795 RETURN 
7800 REM "get active uom
7810 ON POS(ITEM_TYPE$="CI")-1 GOTO 7820,7840
7820 REM "C - items FM1
7830 IF STP(FM1$(238,4),3," ")="" OR FM1[25]=0 THEN UM$=STP(FM1$(100,4),1),PACK=FM1[4],SELLPACK=PACK,EXT_UM$=UM$+"/"+STR(PACK:"###0"); GOTO 7860 ELSE UM$=STP(FM1$(238,4),1),PACK=FM1[25],SELLPACK=PACK,EXTU$=UM$+"/"+STR(PACK:"###0"); GOTO 7860
7840 REM "I - items IC0
7845 IF STOCK$="Y" AND FM1$(105,1)="Y" THEN IF STP(FM1$(238,4),3," ")<>"" AND FM1[25]<>0 THEN UM$=STP(FM1$(238,4),1),PACK=FM1[25],SELLPACK=PACK,EXTU$=UM$+"/"+STR(PACK:"###0"); GOTO 7860 ! SSP182025, if stock item, but found an FM1 record for this customer and it's marked Stock? Y, then if alternate unit, then use it
7850 UM$=STP(IC0$(120,4),1),PACK=IC0[14],SELLPACK=PACK
7860 EXT_UM$=UM$+"/"+STP(STR(PACK:"###0"),2),EXTUMS$=UM$+"es/"+STR(PACK:"###0"); IF SELLPACK=0 THEN SELLPACK=1
7870 RETURN 
7880 REM "price_in_alt_um
7881 IF EC$[2](322,1)="Y" THEN ENTRY$=ENTRY1$+ENTRY2$; GOTO 7899; REM "153032
7882 IF STOCK$<>"Y" THEN GOTO 7887 ELSE GOTO 7883
7885 ALT_PRICE=IC0[0]; IF STOCK$="Y" AND FM1$(105,1)="Y" AND FM1$(238,4)<>DIM(4) AND FM1[25]<>0 AND IC0[14]<>0 THEN ALT_PRICE=IC0[0]*FM1[25]/IC0[14] END_IF ; IF PER$="Y" THEN ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(ALT_PRICE:X3$(69,1)+"###,###.00 per "))+ENTRY2$; GOTO 7889 ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(ALT_PRICE:X3$(69,1)+"###,###.00"))+ENTRY2$; GOTO 7889; REM "price_in_alt_um, calculated from sell price, sell u/m and alt iss #1 um. WO166710, flagged_price_in_alt_um, SSP#169488.  SSP182025, for stock items that have a custom item master for this customer, if there is an alt unit then use it to calculate the price SSP303115
7887 IF FM1[25]=0 THEN ALT_PRICE=FM1[3] ELSE IF FM1[3]=0 OR FM1[4]=0 THEN ALT_PRICE=0 ELSE ALT_PRICE=FM1[3]*FM1[25]/FM1[4] END_IF END_IF ; IF PER$="Y" THEN ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(ALT_PRICE:X3$(69,1)+"###,###.00 per "))+ENTRY2$; GOTO 7889 ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(ALT_PRICE:X3$(69,1)+"###,###.00"))+ENTRY2$; GOTO 7889; REM "price_in_alt_um, calculated from sell price, sell u/m and alt iss #1 um.  WO166710 SSP303115
7889 RETURN 
7890 REM "fms_in_alt_um
7891 IF EC$[2](322,1)="Y" THEN ENTRY$=ENTRY1$+ENTRY2$; GOTO 7899; REM "153032,153888
7892 IF STOCK$<>"Y" THEN GOTO 7897 ELSE GOTO 7893
7895 ALTFMS_PRICE=IC0[0]; ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(ALTFMS_PRICE:X3$(69,1)+"###,###.00"))+ENTRY2$; GOTO 7899; REM "fms_in_alt_um, calculated from sell price, sell u/m and alt iss #1 um SSP303115
7897 IF FM1[25]=0 THEN ALTFMS_PRICE=FM1[29] ELSE IF FM1[29]=0 OR FM1[4]=0 THEN ALTFMS_PRICE=0 ELSE ALTFMS_PRICE=FM1[29]*FM1[25]/FM1[4] END_IF END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(ALTFMS_PRICE:X3$(69,1)+"###,###.00"))+ENTRY2$; GOTO 7899; REM "fms_alt_um, calculated from sell price, sell u/m and alt iss #1 um SSP303115
7899 RETURN 
7900 REM "URL encode anything
7902 REM "RTEXT passed in   UTEXT returned
7910 UTEXT$=""; IF RTEXT$="" THEN GOTO 7930
7920 FOR JJ=1 TO LEN(RTEXT$); UTEXT$=UTEXT$+"%"+HTA(RTEXT$(JJ,1)); NEXT JJ
7930 RETURN 
7950 REM "break variables
7960 ! CALL "EC3QB1",X3$,X4$,EC_PARM$,EC${ALL},STOCK$,FLAGGED_STOCK$,Z(12),ECR$,IC0$,IC0{ALL},AR1$,Q{ALL},P{ALL},BREAKQTY${ALL},BREAKPRICE${ALL},BREAKALL${ALL},BREAKRANGE${ALL},BREAKRANGEALL${ALL},QTYBREAKS_INEFFECT$,OPTIONS$; REM "157200a
7995 RETURN 
8000 REM "ck item secure codes against buyer record
8001 IF EC$[2](86,1)="Y" THEN GOTO 8030; REM "bypass if secure code super user
8002 ITEM_OK$="Y"
8004 IF ECR$(233,10)=DIM(10) THEN GOTO 8019
8005 ITEM_OK$="N"
8010 FOR ITEM_OK=0 TO 4
8012 TEMP$=ECR$(ITEM_OK*2+233,2); IF TEMP$=DIM(2) THEN GOTO 8018
8014 IF POS(TEMP$=EC$[2](233,20)+EC$[2](898,40),2)<>0 THEN EXITTO 8030
8018 NEXT ITEM_OK
8019 IF EC_PARM$(554,1)<>"Y" THEN GOTO 8040
8020 REM "ck for unlimited secure codes 153058
8021 DIM EDQ$(1000); EDQ$(1,20)=ECR$(1,20),EDQ$(21,2)="01"; READ (Z(18),KEY=EDQ$(1,22),DOM=8040)EDQ$
8022 CODES$=STP(EDQ$(23,978),3," "); IF CODES$="" THEN GOTO 8040 ! SSP173398, was GOTO 8030
8023 ITEM_OK$="N" ! SSP173398
8024 FOR ITEM_OK=0 TO LEN(CODES$)/2-1; CURRCODE$=CODES$(ITEM_OK*2+1,2)
8025 IF POS(CURRCODE$=EC$[2](233,20)+EC$[2](898,40),2)<>0 THEN EXITTO 8030
8026 NEXT ITEM_OK
8027 GOTO 8040
8030 ITEM_OK$="Y"
8040 RETURN 
8050 REM "return list of categories based on EDI
8051 IF EC$[2](325,10)=CATALOG$ THEN EDI_CATEGORY_LIST$=EC$[6]; GOTO 8061
8052 EDI_CATEGORY_LIST$=""
8053 READ (Z[14],KEY=CATALOG$,DOM=8054)
8060 EDIKEY$=KEY(Z[14],END=8061); IF EDIKEY$(1,10)=CATALOG$ THEN GOSUB 8400; IF CAT_OK$="Y" THEN EDI_CATEGORY_LIST$=EDI_CATEGORY_LIST$+EDIKEY$(11,10); READ (Z[14]); GOTO 8060 ELSE READ (Z[14]); GOTO 8060 ! SSP188981, added category secure code check
8070 IF LEN(EDI_CATEGORY_LIST$)=0 THEN DIM EDI_CATEGORY_LIST$(10)
8090 RETURN 
8100 ! Read ECR record, then check secure codes
8110 ITEM_OK$="Y"
8120 DIM ECR$(1024); FIND (Z[6],KEY=ECR_KEY$,DOM=*RETURN)IOL=0360
8130 GOSUB 8000
8140 RETURN 
8145 ! 
8200 ! Return QB_LIST$ as HTML for drop down list, for qty_breaks_ddl tag
8205 QB_LIST$=""
8210 ! IF POS("<!"=ENTRY1$,-1)>1 THEN ENTRY1$=ENTRY1$(1,POS("<!"=ENTRY1$)-1); REM "Remove start of comment if there; 237269-Ignore comments
8215 QB_UM$=IC0$(120,4),QB_PACK=IC0[14]; IF STP(FM1$(238,4),1)>"" AND FM1[25]<>0 THEN QB_UM$=FM1$(238,4),QB_PACK=FM1[25]
8220 DIM P$(21),P[1]; READ (Z[13],KEY="U/M"+QB_UM$,DOM=*NEXT)IOL=0390
8225 IF P$(20,1)="Y" THEN QB_PACK=P[1]
8226 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4)
8227 IF QB_UM$=THOUSANDS$ AND EC_PARM$(948,1)<>"Y" THEN QB_PACK=1000
8230 IF QB_PACK=0 THEN QB_PACK=1
8235 QB_LIST$="<option selected value="+QUO+DIM(20)+QUO+">          </option>"
8240 FOR X=1 TO 11 STEP 2
8245 IF IC0[X]=0 THEN EXITTO 8270 ELSE QB_LIST$+="<option value="+QUO+STR(INT(IC0[X]/QB_PACK+.99))+QUO+">"+STR(INT(IC0[X]/QB_PACK+.99))+"</option>"
8250 NEXT X
8255 FOR X=21 TO 31 STEP 2
8260 IF IC0[X]=0 THEN EXITTO 8270 ELSE QB_LIST$+="<option value="+QUO+STR(INT(IC0[X]/QB_PACK+.99))+QUO+">"+STR(INT(IC0[X]/QB_PACK+.99))+"</option>"
8265 NEXT X
8270 STMP=POS("</select>"=ENTRY1$,-1); IF STMP<>0 THEN QB_LIST$=QB_LIST$+"</select>"; IF STMP=1 THEN ENTRY1$="" ELSE ENTRY1$=ENTRY1$(1,STMP-1)
8275 ! IF ENTRY2$>"" THEN IF ENTRY2$(1,1)=">" THEN ENTRY2$=ENTRY2$(2); REM "if token was part of a comment, then remove the end of the comment. 237269-Ignore comments
8290 RETURN 
8295 ! 
8300 ! Get inventory figures, don't need usage, copied from EC3PC1, WO181418
8310 DIM CHANNELS[4]; CHANNELS[1]=Z[19],CHANNELS[4]=Z[6] ! IC1/ECR channels
8315 DIM OPTIONS$(20); OPTIONS$(1,2)="RI"; REM "R-reported warehouses I-inventory figures only
8320 OPTIONS$(3,1)=NO_INVUSAGE$; REM "controls wether inventory /usage figures are needed - if not Y will return dimensioned variables only
8325 OPTIONS$(6,10)=FM1$(185,10) ! from customer
8330 ! CALL "EC3IC0",X3$,X4$,EC_PARM$,EC${ALL},FINDITEMKEY$,USAGE_KEYS$,CHANNELS{ALL},IC1INFO{ALL},FM3{ALL},FM3ALL{ALL},FM4$,FM4{ALL},FM4ALL{ALL},FORM_OTHER{ALL},FORM_OTHERALL{ALL},OPTIONS$
8345 RETURN 
8349 ! 
8350 REM "get active uom.  Copied from EC3PC1, WO181418
8360 ON POS(STOCK$="NY")-1 GOTO 8365,8375
8365 REM "not stock sot it's custom - items FM1
8370 IF STP(FM1$(238,4),3," ")="" OR FM1[25]=0 THEN UM$=STP(FM1$(100,4),1),PACK=FM1[4]; GOTO 8385 ELSE UM$=STP(FM1$(238,4),1),PACK=FM1[25]; GOTO 8385
8375 REM "stock item - items IC0
8380 UM$=IC0$(120,4),PACK=IC0[14]
8385 UM$=STP(UM$,1),EXT_UM$=STP(UM$,1)+"/"+STR(PACK:"##,##0")
8390 IF PACK=0 THEN PACKDIV=1 ELSE PACKDIV=PACK
8395 RETURN 
8399 ! 
8400 ! Building list of categories, need to check secure codes, used similar logic from EC3PC2, 8000's, SSP188981
8405 IF EC$[2](86,1)="Y" THEN CAT_OK$="Y"; GOTO 8445 ! Buyer is su, accept all categories
8410 CAT_OK$="N"; DIM CGY$(106); READ (Z[4],KEY=EDIKEY$(11,10),DOM=8445)CGY$
8415 CAT_SCODES$=STP(CGY$(101,6),2)
8420 IF CAT_SCODES$="" THEN CAT_OK$="Y"; GOTO 8445
8425 FOR XXX=0 TO LEN(CAT_SCODES$)/2-1
8430 CODE$=CAT_SCODES$(XXX*2+1,2); IF POS(CODE$=EC$[2](233,20)+EC$[2](898,40),2)<>0 THEN CAT_OK$="Y"; EXITTO 8445
8435 NEXT XXX
8440 CAT_OK$="N"
8445 RETURN 
8449 ! 
8450 SET_CATALOG_VAR:
8455 DIM EDA$(128); CATALOGSORT=0; FIND (Z[10],KEY=CATALOG$,DOM=*NEXT)EDA$; IF EDA$(73,1)="Y" THEN CATALOGSORT=1; REM "ssp 154559, SSP216374, DOM was to 1119, changed to *NEXT
8460 IF STP(CATEGORY$,1)="" THEN MYCATALOG$="N",CATALOG_CHANNEL=5; GOTO *NEXT END_IF ; IF CATEGORY$=EC$[2](483,10) THEN MYCATALOG$="Y",CATALOG_CHANNEL=9 ELSE MYCATALOG$="N",CATALOG_CHANNEL=5; REM "if current catalog is the buyer specific catalog EDE.  SSP178947, if no category then don't set mycatalog
8470 SEPARATION_DONE$="N"
8495 RETURN 
8500 SET_READONLY:REM "Set the PRM READONLY to on
8510 SAVE_XI=PRM('XI'); SET_PARAM 'XI' ! Ignore exclusive locks, save previous setting
8525 SET_READONLY_END:RETURN 
8530 CLEAR_READONLY:REM "Restore previous setting
8535 SET_PARAM 'XI'=SAVE_XI ! restore previous setting
8545 CLEAR_READONLY_END:RETURN 
8600 ! SSP173447, set CATEGORY$ from EDI_CATEGORY_LIST, but don't use any categories that have restrict from DDL set
8610 NUM_CATEGORIES=LEN(EDI_CATEGORY_LIST$)/10; IF NUM_CATEGORIES=0 THEN CATEGORY$=DIM(10); GOTO *RETURN
8615 FOR X=1 TO NUM_CATEGORIES
8620 CAT_TO_CHECK$=EDI_CATEGORY_LIST$((X-1)*10+1,10)
8622 IF NUL(CAT_TO_CHECK$) THEN GOTO 8630
8625 DIM ECG$(120); READ (Z[4],KEY=CAT_TO_CHECK$,DOM=*NEXT)ECG$; IF ECG$(107,1)<>"Y" THEN CATEGORY$=CAT_TO_CHECK$; EXITTO *RETURN
8630 NEXT X
8635 CATEGORY$=DIM(10)
8640 RETURN 
8645 ! 
8650 ! SSP177687, setting position_item for buttonprev, need to save the first item in the ECB record so we can use it later if position_item is blank.  Also need to clear it after using it.  Will come to this routine to do both.
8660 EXTRACT RECORD (Z[15],KEY=EC$[1](1,7))ECBREC$; ECBREC$(1178,20)=ECB_FIRST_ITEM$,EC$[1](1178,20)=ECBREC$(1178,20); WRITE RECORD (Z[15],KEY=EC$[1](1,7))ECBREC$
8690 RETURN 
8695 ! 
8700 GET_INCLUDE_FILE:! found include tag now get name from brackets, find file, and set INCLUDE_DATA$ to it's contents
8705 INCLUDE_DATA$=""
8710 IF MSK(INCENTRY2$,"\[[^\]]*\]")=1 THEN {
8715 INCLUDE_FILE$=INCENTRY2$(2,MSL-2),INCENTRY2$=MID(INCENTRY2$,MSL+1)
8720 ! If we see a tag in the include file name, then call EC3BYB to add info
8725 P=POS("?tf?qty_breaks_only?"=INCLUDE_FILE$); IF P>0 THEN GOSUB SET_QTY_BREAKS_ONLY; IF P=1 THEN INCLUDE_FILE$=QTY_BREAKS_ONLY$+INCLUDE_FILE$(P+20) ELSE INCLUDE_FILE$=INCLUDE_FILE$(1,P-1)+QTY_BREAKS_ONLY$+INCLUDE_FILE$(P+20)
8726 P=POS("?tf?item_key?"=INCLUDE_FILE$); IF P>0 THEN GOSUB SET_ITEM_KEY; IF P=1 THEN INCLUDE_FILE$=ITEM_KEY_INCL$+INCLUDE_FILE$(P+13) ELSE INCLUDE_FILE$=INCLUDE_FILE$(1,P-1)+ITEM_KEY_INCL$+INCLUDE_FILE$(P+13) ! WO 240669
8727 P=POS("?tf?show_pdf_link?"=INCLUDE_FILE$); IF P>0 THEN GOSUB SET_SHOW_PDF_LINK; IF P=1 THEN INCLUDE_FILE$=SHOW_PDF_LINK$+INCLUDE_FILE$(P+18) ELSE INCLUDE_FILE$=INCLUDE_FILE$(1,P-1)+SHOW_PDF_LINK$+INCLUDE_FILE$(P+18)
8730 ! If webcode then try with webcode first
8735 IF NOT(NUL(EC$[2](276,15))) THEN IF_CHAN=HFN; OPEN (IF_CHAN,ERR=*NEXT)STP(EC$[14](56,60),1)+DLM+STP(EC$[2](276,15),1)+INCLUDE_FILE$; GOTO GET_INCLUDE_DATA
8740 IF_CHAN=HFN; OPEN (IF_CHAN,ERR=*RETURN)STP(EC$[14](56,60),1)+DLM+INCLUDE_FILE$
8745 GET_INCLUDE_DATA:READ (IF_CHAN,ERR=*NEXT,END=*NEXT)IF_IN$; INCLUDE_DATA$+=IF_IN$+EOL$; GOTO *SAME
8750 ! Remove the last EOL$ so we don't introduce an extra line feed
8755 INCLUDE_DATA$=MID(INCLUDE_DATA$,1,LEN(INCLUDE_DATA$)-(LEN(EOL$)))
8759 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,INCLUDE_DATA$,BYBINFO${ALL},BYBOPTIONS$,IF_CHAN ! 227154
8760  }
8765 RETURN 
8770 ! 
8775 SET_QTY_BREAKS_ONLY:
8780 QTY_BREAKS_ONLY$="N"
8785 IF ECR$(572,1)="Y" AND IC0[1]>0 THEN QTY_BREAKS_ONLY$="Y"
8795 RETURN 
8799 ! 
8800 CHECK_FOR_INCLUDE:
8810 TXTINDEX=POS("?tf?3p_text?"=ENTRY$); IF TXTINDEX=0 THEN GOTO 8830
8815 TXTENDINDEX=POS("?"=ENTRY$(TXTINDEX+4)),TXTTAG$=ENTRY$(TXTINDEX+4,TXTENDINDEX-1),TXTENTRY1$=ENTRY$(1,TXTINDEX-1),TXTENTRY2$=ENTRY$(TXTINDEX+TXTENDINDEX+4)
8820 GOSUB GET_3PTEXT_FILE
8825 ENTRY$=TXTENTRY1$+TXT_VAR_TEXT$+TXTENTRY2$
8830 INCINDEX=POS("?tf?EC3PC5_include?"=ENTRY$); IF INCINDEX=0 THEN GOTO *RETURN
8835 INCENDINDEX=POS("?"=ENTRY$(INCINDEX+4)),INCTAG$=ENTRY$(INCINDEX+4,INCENDINDEX-1),INCENTRY1$=ENTRY$(1,INCINDEX-1),INCENTRY2$=ENTRY$(INCINDEX+INCENDINDEX+4)
8840 GOSUB GET_INCLUDE_FILE
8845 ENTRY$=INCENTRY1$+INCLUDE_DATA$+INCENTRY2$
8848 RETURN 
8849 ! 
8850 GET_3PTEXT_FILE:! special one for use with new EC3PC5_include, copied from 7600's
8855 ! Extract [x] part from txtentry2, if not found then ignore
8860 TXT_VAR_TEXT$=""
8865 IF LEN(TXTENTRY2$)<3 THEN GOTO 8870 ELSE BRACKET_POS=POS("]"=TXTENTRY2$); IF TXTENTRY2$(1,1)<>"[" OR BRACKET_POS=0 THEN GOTO 8870 ELSE TXT_VAR_CODE$=TXTENTRY2$(1,BRACKET_POS),TXTENTRY2$=TXTENTRY2$(BRACKET_POS+1); GOTO 8875
8870 TXT_VAR_TEXT$=""; GOTO *RETURN; REM "did not find var code part, so leave
8875 TXT_VAR_CODE$=TXT_VAR_CODE$(2,LEN(TXT_VAR_CODE$)-2); TXT_VAR_CODE$=STR(NUM(TXT_VAR_CODE$,ERR=8870):"00000")
8885 TXT_VAR_CODE_KEY$=ECR$(243,10)+TXT_VAR_CODE$; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,TXT_VAR_CODE_KEY$,TXT_VAR_TEXT${ALL}
8890 TXT_VAR_TEXT$=TXT_VAR_TEXT$[1]
8895 RETURN 
8899 ! 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8950 SET_ITEM_KEY:! WO 240669
8955 IF STOCK$="Y" OR FLAGGED_STOCK$="Y" THEN ITEM_KEY_INCL$=IC0$(1,20) ELSE ITEM_KEY_INCL$=FM1$(1,20) END_IF ; ITEM_KEY_INCL$=STP(ITEM_KEY_INCL$,3,*EC_PARM$(687,19)+" ",ERR=*PROCEED) ! Strip invalid chars from Item key
8970 RETURN 
8974 ! 
8975 SET_SHOW_PDF_LINK:
8980 SHOW_PDF_LINK$="N"
8985 IF ECR$(576,1)="Y" THEN SHOW_PDF_LINK$="Y"
8990 RETURN 
8995 ! 
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 REM FOR I=1 TO 20; IF Z[I]<>0 THEN CLOSE (Z[I]) FI; NEXT I
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56000 ! Program changes starting 10/24/05
56010 REM "184883-Need program/tags to show catalogs and/or categories for new
56015 REM "190495-New Web.ec pages-installation and testing
56020 REM "192407-Buyer needs 20 additional secure codes.
56021 REM "209899-Display items in the catalog/category section of site
56025 ! 216374-I am getting numerous emails today that the web server is
56026 REM "227154-Modify EC3BYB to support a condition tag : ?tf?if?[expr]    
56028 REM "230737-Modification to EC3PC5 for category additional description
56029 REM "237269-Issue with qty breaks dropdown display
56030 REM "240669-EC tag item_key support for ec3pc0_include tag
56032 REM "256222-New EC output tag in EC3PC5, catalogdesclong, to output the 
56034 REM "245897-Modify EC3PC5 to support URL encoded versions of the catalog
56036 REM "263620-IMS price doesn't show, product catalog, customer 80-09227, 
56038 REM "303115-FN%HTML_ESC$ additions in EC programs                       
56040 REM "307179-DBSPT-66337; Product Catalog Images not displaying correctly
