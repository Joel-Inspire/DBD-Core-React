0010 REM "EC PO EC Function <EC3PO1>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 10/19/22 - 14.651675 - dmm - SSP# 307397
0037 REM "307397-DBD-255 - Impending Whse Receipt notification - 943 XML     
0040 REM "Copyright 2022 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3PO1",X1$="EC PO Function"
0120 EOL$=$0D0A$; REM EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0140 DIM MESS_INFO$[20]
0150 REM "EC$[1]=ESB session record, EC$[2]=client number        , ec$[3]=message from server to called program, EC$[4]=formatted date, EC$[5]=formatted time EC$[6]=ECA2$ available web catalogs (concatonated string) EC$[7]=customer webec parms (ECS)  EC$[8]=image path (customer if set otherwise from ec_parm) EC$[9]=ST_LIST sort code record EC$[10]=reporting whse list EC$[11]=(1,4)warehouse code to use for o/e FM2RT0  (5,4)=would contain the 'other'warehouse for availability checking o/e messaging <not passed to FM2RT0, EC$[12]=email params,see 8000s [13] UNUSED ,[14]=ECY$, [15]=inventory system parameters [16]=Credict Card code/desc list [17]=active webcode [18-20] unused
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O PO1... 02O PO2... 03O PO3... 04O AP4... 05O XM0... 06O IC2... 07O FS1... 08OSAR1... 09O EML... 10O AQ1... 11O FM0... 12O EEG...  13O ZZPARM  14O EC6...  15O EC8...  16O FMV...  17O FMP...  18O EEM...  19O SH5...  20O POE...  21O FM1...  22O FS2...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0550 FIND (Z[13],KEY=X3$(9,3)+"XMLOUT",DOM=*NEXT)XMLOUT$
0560 DIM XMLOUT$(100); XMLOUT$(40,10)="RUSH" ! TESTING
0570 DIM OP_PARM$(513); FIND (Z[13],KEY=X3$(9,3)+"F/M",DOM=*NEXT)OP_PARM$(1) ! SSP307302-DBD-126
0571 DEFAULT_COUNTRY$=MID(OP_PARM$,344,2) ! SSP307302-DBD-126
0572 IF STP(DEFAULT_COUNTRY$)="" THEN DEFAULT_COUNTRY$="US" ! SSP307302-DBD-126
0573 DOC_TYPE$="850" ! DBD-255 - default to PO, unless overriden in request to "943" mode
0600 ! Set Masks
0610 COUNT_MASK$="###"
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1025 SWITCH TAG$ ! 1185 end switch
1030 CASE "template"; TEMPLATE$=VALUE$; BREAK
1035 CASE "po"; PO_NUM$=VALUE$; BREAK
1040 CASE "xml_to_vendor"; IF VALUE$="Y" THEN XML_TO_VENDOR=1 END_IF ; BREAK
1180 DEFAULT ; VIA TAG$=VALUE$; BREAK ! Set to same name variable as TAG$
1185 END SWITCH ! 1050
1190 NEXT I
1195 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="182560.20050504",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1200 ! Get info
1203 GOSUB SET_READONLY ! SSP245945
1205 MX=FN%_LOG_MESSAGE("MESG","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|EC3PO1|SEND PO INFO|PO_NUM|"+FN%ZZDISP$(PO_NUM$,"P/O")+"|")
1210 DIM PO1$:IOL(Z[1]); READ DATA FROM DIM(LEN(PO1$)),REC=PO1$ TO IOL=IOL(PO1$); READ (Z[1],KEY=PO_NUM$,DOM=PO1_NOT_FOUND,REC=PO1$) ! SSP245945, change EXTRACT to READ, we will do an EXTRACT later when we are about to write to PO1 that the xml has been sent if we are in that mode
1215 DIM AP4$:IOL(Z[4]); READ DATA FROM DIM(LEN(AP4$)),REC=AP4$ TO IOL=IOL(AP4$); READ (Z[4],KEY=PO1.VEND_DIV$+PO1.VEND_CODE$,DOM=AP4_NOT_FOUND,REC=AP4$); OUR_ACCOUNT_NUMBER$=AP4.OUR_ACCT_NUM$ ! SSP240741, change EXTRACT to READ. We don't need exclusive access to AP4 record, this started causing error 0's in OE if process hanging onto this record too long
1217 DIM AQ1$:IOL(Z[10]); READ DATA FROM DIM(LEN(AQ1$)),REC=AQ1$ TO IOL=IOL(AQ1$); READ (Z[10],KEY=PO1.VEND_DIV$+PO1.VEND_CODE$+PO1.PLANT_CODE$+MID(PO_NUM$,1,2),REC=AQ1$,DOM=*NEXT); IF STP(AQ1.ACCT_NUM$,3)>"" THEN OUR_ACCOUNT_NUMBER$=AQ1.ACCT_NUM$ ! SSP189703
1220 DIM GENERAL_SHIPPING$:IOL(Z[3]); READ DATA FROM DIM(LEN(GENERAL_SHIPPING$)),REC=GENERAL_SHIPPING$ TO IOL=IOL(GENERAL_SHIPPING$); FIND (Z[3],KEY=MID(PO_NUM$,1,8)+DIM(5),DOM=*NEXT,REC=GENERAL_SHIPPING$)
1225 IF NOT(NUL(GENERAL_SHIPPING.LOC_ZIP_CODE$)) THEN WHILE LEN(STP(GENERAL_SHIPPING.LOC_ZIP_CODE$))<5; GENERAL_SHIPPING.LOC_ZIP_CODE$="0"+GENERAL_SHIPPING.LOC_ZIP_CODE$; WEND 
1230 IF POS("M"=AP4.OPTIONS$) THEN GOSUB GET_MESSAGE_LINES_TEXT ! 300617
1250 ! Load line info, so we can count the lines as well
1255 HAS_RUSH_CHARGE$="N"; PO_LINE_CHAN=HFN; OPEN (PO_LINE_CHAN)"*memory*"
1260 DIM PO2$:IOL(Z[2]); READ DATA FROM DIM(LEN(PO2$)),REC=PO2$ TO IOL=IOL(PO2$)
1270 SELECT *,REC=PO2$ FROM Z[2] BEGIN PO_NUM$ END PO_NUM$+$FE$
1275 IF PO2.LINE_TYPE$="S" THEN IF PO2.ITEM_CODE$=XMLOUT$(40,10) THEN HAS_RUSH_CHARGE$="Y"; GOTO NEXT_REC ! if this is a special charge line, and the special charge line is a RUSH type charge the indicate we have a rush charge and don't add to line list
1277 IF PO2.LINE_TYPE$="M" THEN GOTO NEXT_REC ! SSP234945, we don't output "M" type lines at this time, don't include in the count.
1280 PO_LINE_COUNT+=1; WRITE (PO_LINE_CHAN,KEY=STR(PO_LINE_COUNT:"000"),REC=PO2$)IOL=IOL(Z[2])
1285 NEXT_REC:
1290 NEXT RECORD 
1300 ! Get order header and Customer information
1305 DIM FS1$:IOL(Z[7]); FIND (Z[7],KEY=MID(PO_NUM$,1,8),DOM=*NEXT,REC=FS1$)
1310 DIM AR1$:IOL(Z[8]); FIND (Z[8],KEY=FS1.CUST_DIV$+FS1.CUST_CODE$,DOM=*NEXT,REC=AR1$)
1315 DIM CUST$(600); FIND (Z[8],KEY=FS1.CUST_DIV$+FS1.CUST_CODE$,DOM=*NEXT)CUST$ ! add and use this record to get started at 377 without having to change the embedded data dictionary
1320 GOSUB GET_CSR_EMAIL
1325 DIM FM0C$(618); FIND (Z[11],KEY="C"+FS1.CUST_DIV$+FS1.CUST_CODE$+GENERAL_SHIPPING.LOC_CODE$,DOM=*NEXT)FM0C$(1) ! SSP290559
1326 DIM FM0D$(618); IF NOT(NUL(WHSE_CODE$)) THEN FIND (Z[11],KEY="D"+DIM(10)+PAD(WHSE_CODE$,4),DOM=*NEXT)FM0D$(1) ! DBD-255
1330 DIM SH5$(36),SHIPPERID$(20); FIND (Z[19],KEY=FS1.CUST_DIV$+FS1.CUST_CODE$+GENERAL_SHIPPING.LOC_CODE$+GENERAL_SHIPPING.SHIP_VIA_CODE$,DOM=*NEXT)SH5$(1); SHIPPERID$=SH5$(16,20) ! WO290352, WO298437
1335 IF STP(GENERAL_SHIPPING.SHIPPER_ID$)>"" THEN SHIPPERID$=GENERAL_SHIPPING.SHIPPER_ID$ ! WO298437, if PO3 has shipper id then use it 
1500 ! Ready to output
1503 ! status and status_msg are given as examples
1504 IF NOT(NUL(%BASIC2$)) THEN GOTO 2990 ! Skip outputting template if additional program to be done
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1510 READ (100,END=DONE_WITH_TEMPLATE)LINE$; LINE$=FNBYB$(LINE$)
1515 CHKTAG=1
1520 WHILE CHKTAG ! 2800 wend
1522 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
1530 TAG$=LINE$(P1,MSL); LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
1535 T_IN=POS("."=TAG$); IF T_IN THEN TAG_PARM$=MID(TAG$,T_IN+1),TAG$=MID(TAG$,1,T_IN-1) ELSE TAG_PARM$="" ! DBD-191-DBSPT-117328-SSP307365
1600 SWITCH TAG$ ! 2790 end switch
1605 CASE "?tf?our_account_number?"; NN=FNN(STP(OUR_ACCOUNT_NUMBER$)); BREAK
1610 CASE "?tf?po_line_count?"; NN=FNN(FNM$(PO_LINE_COUNT,COUNT_MASK$)); BREAK
1615 CASE "?tf?po_number?"; NN=FNN(FN%ZZDISP$(PO1.PO_DIV$+PO1.PO_NUM$,"P/O")); BREAK
1620 CASE "?tf?gen_vendor_ship_via?"; REAL_SHIP_VIA$=GENERAL_SHIPPING.SHIP_VIA_CODE$; GOSUB GET_VENDOR_SHIP_VIA; NN=FNN(VENDOR_SHIP_VIA$); BREAK
1625 CASE "?tf?gen_comp_name_to_ship_to?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.COMP_NAME_TO_SHIP_TO$))); BREAK
1630 CASE "?tf?gen_loc_addr_1?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.LOC_ADDR_1$))); BREAK
1635 CASE "?tf?gen_loc_addr_2?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.LOC_ADDR_2$))); BREAK
1640 CASE "?tf?gen_loc_city?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.LOC_CITY$))); BREAK
1645 CASE "?tf?gen_loc_st?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.LOC_ST$))); BREAK
1650 CASE "?tf?gen_loc_zip_code?"; NN=FNN(FNX$(STP(FN%ZZDISP$(GENERAL_SHIPPING.LOC_ZIP_CODE$,"ZIP")))); BREAK
1655 CASE "?tf?po_lines_start?"; GOSUB PROCESS_PO_LINES; LINE$=PO_LINES_SECTION$; BREAK
1660 CASE "?tf?gen_loc_attn_name?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.ATTN_NAME$))); BREAK
1665 CASE "?tf?market_channel?"; NN=FNN(FNX$(STP(CUST$(446,10)))); BREAK ! replace later with AR1.MARKET_CHANNEL$
1670 CASE "?tf?formatted_cust_code?"; NN=FNN(STP(FN%ZZDISP$(FS1.CUST_DIV$+FS1.CUST_CODE$,"A/R"))); BREAK ! SSP189703
1675 CASE "?tf?unformatted_cust_code?"; NN=FNN(FS1.CUST_DIV$+FS1.CUST_CODE$); BREAK ! SSP189703
1680 CASE "?tf?item_po_line?"; GOSUB ITEM_PO_LINE_TAG; NN=FNN(ITEM_PO_LINE$); BREAK ! SSP189703
1690 CASE "?tf?csr_email_address?"; NN=FNN(STP(EML.EMAIL_ADDRESS$,2)); BREAK ! SSP 189101 
1700 CASE "?tf?vendor_plant?"; GOSUB GET_PLANT_CODE; NN=FNN(PLANT_CODE_TO_USE$); BREAK ! WO208887
1710 CASE "?tf?po_date_yyyymmdd?"; GOSUB GET_PO_DATE_YYYYMMDD; NN=FNN(PO_DATE_YYYYMMDD$); BREAK ! WO233323
1720 CASE "?tf?date_requested_yyyymmdd?"; DATE_IN$=FS1.DATE_REQUESTED$; GOSUB PUT_DATE_INTO_YYYYMMDD; NN=FNN(DATE_OUT$); BREAK ! SSP243727 
1730 CASE "?tf?date_required_yyyymmdd?"; DATE_IN$=PO1.DATE_REQ$; GOSUB PUT_DATE_INTO_YYYYMMDD; NN=FNN(DATE_OUT$); BREAK ! SSP243727
1740 CASE "?tf?new_repeat?"; GOSUB GET_PURCHASE_ORDER_TYPE; NN=FNN(PURCHASE_ORDER_TYPE$); BREAK ! SSP243727"
1750 CASE "?tf?plant_quote_num?"; NN=FNN(FNX$(STP(PO1.PLANT_QUOTE_NUM$))); BREAK ! SSP243727, SSP268027
1760 CASE "?tf?cust_po_number?"; NN=FNN(FNX$(STP(PO1.CUST_PO$))); BREAK ! SSP253287
1770 CASE "?tf?gen_ship_via_desc?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.SHIP_VIA_DESC$))); BREAK ! SSP253287
1780 CASE "?tf?gen_inside_delivery?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.INSIDE_DELIVERY$))); BREAK ! SSP253287
1790 CASE "?tf?gen_ship_with?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.SHIP_WITH$))); BREAK ! SSP253287
1800 CASE "?tf?gen_how_to_ship_desc?"; GOSUB GET_HOW_TO_SHIP_DESC; NN=FNN(FNX$(STP(HOW_TO_SHIP_DESC$))); BREAK ! SSP253287
1810 CASE "?tf?gen_fob_desc?"; GOSUB GET_FOB_DESC; NN=FNN(FNX$(STP(FOB_DESC$))); BREAK ! SSP253287
1820 CASE "?tf?gen_mark_for?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.MARK_FOR$))); BREAK ! WO270120
1830 CASE "?tf?gen_loc_code?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.LOC_CODE$))); BREAK ! SSP290559
1840 CASE "?tf?cust_loc_code?"; NN=FNN(FNX$(STP(FM0C$(214,9)))); BREAK ! SSP290559
1850 CASE "?tf?recvg_dept?"; NN=FNN(FNX$(STP(FM0C$(382,20)))); BREAK ! SSP290559
1860 CASE "?tf?gen_loc_type?"; NN=FNN(FNX$(STP(GENERAL_SHIPPING.LOC_TYPE$))); BREAK ! SSP290559
1870 CASE "?tf?sh5_shipper_id?"; NN=FNN(FNX$(STP(SHIPPERID$))); BREAK ! WO290352, WO298437
1880 CASE "?tf?po_comments_start?"; GOSUB PROCESS_PO_COMMENTS; LINE$=PO_COM_SECTION$; BREAK ! WO298437, PO Comments
1881 CASE "?tf?message_lines_text?"; NN=FNN(FNX$(MSGSTXT$)); BREAK ! 
1890 CASE "?tf?ordered_by?"; NN=FNN(FNX$(STP(FS1.ORDERED_BY$))); BREAK ! SSP306882
1900 CASE "?tf?gen_loc_country?"; COUNTRY$=STP(GENERAL_SHIPPING.LOC_COUNTRY$); IF STP(COUNTRY$)="" THEN COUNTRY$=DEFAULT_COUNTRY$ END_IF ; NN=FNN(FNX$(STP(COUNTRY$))); BREAK ! SSP307210-DBD-63 SSP307302-DBD-126
1910 CASE "?tf?bus_unit?"; NN=FNN(FNX$(STP(FM0D$(568,10)))); BREAK ! DBD-255
2785 DEFAULT ; LINE$=LINE1$+LINE2$ ! didn't match existing tag, so remove it, unless one of the special tag prefixes below
2786 IF POS("?tf?po1_"=TAG$)=1 THEN GOSUB PROCESS_PO1_TAG; PP=FNN(FNX$(STP(PO1_TAG_VAL$))); BREAK ! 307397-DBD-255
2790 END SWITCH ! 1600
2800 WEND ! 1520
2810 IF LINE$<>"" THEN PRINT (OUTPUT)LINE$
2900 GOTO 1510; REM next read
2950 DONE_WITH_TEMPLATE:
2955 GOSUB CLEAR_READONLY ! SSP245945
2960 IF XML_TO_VENDOR THEN GOSUB SEND_XML_TO_VENDOR
2990 GOTO 9900
3000 PROCESS_PO_LINES:! Add PO line info based on PO line section
3005 PO_LINES_SECTION$=""; PO_LINE_TEMPLATE$=LINE$,QTY_MASK$="###,###,###",EACHES_MASK$="##########",EXT_MASK$="#########.00",UM_MASK$="##########"
3010 READ (100,END=*NEXT)PO_LINE$; PO_LINE_TEMPLATE$+=FNBYB$(SUB(PO_LINE$,$0D$,""))+EOL$; IF POS("?tf?po_lines_end?"=PO_LINE$)=0 THEN GOTO *SAME
3040 DIM PO2$:IOL(Z[2]); READ DATA FROM DIM(LEN(PO2$)),REC=PO2$ TO IOL=IOL(PO2$)
3050 FOR PO_LINE_NUM=1 TO PO_LINE_COUNT
3060 READ (PO_LINE_CHAN,KEY=STR(PO_LINE_NUM:"000"),DOM=END_OF_PO_LINE,REC=PO2$)IOL=IOL(Z[2])
3065 IF PO2.LINE_TYPE$="M" THEN GOTO END_OF_PO_LINE
3067 GOSUB GET_ITEM_COMMENTS ! SSP243068
3070 PO_LINE$=PO_LINE_TEMPLATE$,POL_CHKTAG=1
3075 WHILE POL_CHKTAG
3090 P1=MSK(PO_LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN POL_CHKTAG=0; BREAK
3095 TAG$=PO_LINE$(P1,MSL); PO_LINE1$=PO_LINE$(1,P1-1),PO_LINE2$=MID(PO_LINE$,P1+MSL)
3100 SWITCH TAG$
3110 CASE "?tf?po_line_number?"; PP=FNP(PO2.LINE_NUM$); BREAK
3115 CASE "?tf?vendor_item_code?"; GOSUB GET_VENDOR_ITEM_CODE; PP=FNP(FNX$(VENDOR_ITEM_CODE$)); BREAK ! SSP242210, add function to escape symbols
3120 CASE "?tf?quantity_in_eaches?"; IF PO2.LINE_TYPE$="S" AND PO2.OPEN_QTY=0 THEN PO2.OPEN_QTY=1 END_IF ; PP=FNP(FNM$(PO2.OPEN_QTY,EACHES_MASK$)); BREAK ! SSP242210, add check for 0 quantity for "S" types, might be extension only
3125 CASE "?tf?has_rush_charge?"; PP=FNP(HAS_RUSH_CHARGE$); BREAK
3130 CASE "?tf?po_line_ext?"; PP=FNP(FNM$(PO2.EXT,EXT_MASK$)); BREAK ! SSP189703
3135 CASE "?tf?po_line_desc?"; PP=FNP(FNX$(STP(PO2.TF_DESC$))); BREAK ! SSP189703, SSP 211380
3140 CASE "?tf?prev_job_num?"; PP=FNP(FNX$(STP(PO1.PREV_JOB_NUM$))); BREAK ! SSP189703, SSP268027
3145 CASE "?tf?gen_vendor_ship_via?"; REAL_SHIP_VIA$=GENERAL_SHIPPING.SHIP_VIA_CODE$; GOSUB GET_VENDOR_SHIP_VIA; PP=FNP(VENDOR_SHIP_VIA$); BREAK ! SSP 189101
3150 CASE "?tf?quantity_in_um?"; UM_QTY=PO2.UM_AMT; IF UM_QTY=0 THEN UM_QTY=1 END_IF ; IF PO2.LINE_TYPE$="S" AND PO2.OPEN_QTY=0 THEN PO2.OPEN_QTY=1 END_IF ; PP=FNP(FNM$(PO2.OPEN_QTY/UM_QTY,EACHES_MASK$)); BREAK ! SSP 196766, SSP242210, add check for 0 quantity for "S" types, might be extension only
3155 CASE "?tf?po_line_cost?"; PP=FNP(FNM$(PO2.TF_COST,EXT_MASK$)); BREAK ! SSP 196766, SSP 211380
3160 CASE "?tf?po_starting_number?"; PP=FNP(STP(PO2.STARTING_NUM$,2)); BREAK ! SSP212100
3165 CASE "?tf?po_number_lines?"; PP=FNP(FN%ZZDISP$(PO1.PO_DIV$+PO1.PO_NUM$,"P/O")); BREAK ! WO234315, need to output PO number in lines section
3170 CASE "?tf?3p_order_line_id?"; ORD_LINE_ID_3P$=""; GOSUB GET_3P_ORDER_LINE_ID; PP=FNP(STP(ORD_LINE_ID_3P$,2)); BREAK ! WO234315
3175 CASE "?tf?3pinfostart?"; GOSUB PROCESS_3PINFO; PP=FNP(TPINFO_SECTION$); BREAK ! SSP242631
3180 CASE "?tf?item_comments_1?"; PP=FNP(FNX$(STP(ITEM_COMMENTS$[1]))); BREAK ! SSP243068, SSP245661
3185 CASE "?tf?item_comments_2?"; PP=FNP(FNX$(STP(ITEM_COMMENTS$[2]))); BREAK ! SSP243068, SSP245661
3190 CASE "?tf?item_comments_3?"; PP=FNP(FNX$(STP(ITEM_COMMENTS$[3]))); BREAK ! SSP243068, SSP245661
3195 CASE "?tf?item_comments_4?"; PP=FNP(FNX$(STP(ITEM_COMMENTS$[4]))); BREAK ! SSP243068, SSP245661
3200 CASE "?tf?item_comments_5?"; PP=FNP(FNX$(STP(ITEM_COMMENTS$[5]))); BREAK ! SSP243068, SSP245661
3205 CASE "?tf?item_comments_6?"; PP=FNP(FNX$(STP(ITEM_COMMENTS$[6]))); BREAK ! SSP243068, SSP245661
3210 CASE "?tf?item_comments_7?"; PP=FNP(FNX$(STP(ITEM_COMMENTS$[7]))); BREAK ! SSP243068, SSP245661
3215 CASE "?tf?item_comments_8?"; PP=FNP(FNX$(STP(ITEM_COMMENTS$[8]))); BREAK ! SSP243068, SSP245661
3220 CASE "?tf?date_requested_yyyymmdd?"; DATE_IN$=FS1.DATE_REQUESTED$; GOSUB PUT_DATE_INTO_YYYYMMDD; PP=FNP(DATE_OUT$); BREAK ! SSP243727 
3225 CASE "?tf?date_required_yyyymmdd?"; DATE_IN$=PO1.DATE_REQ$; GOSUB PUT_DATE_INTO_YYYYMMDD; PP=FNP(DATE_OUT$); BREAK ! SSP243727
3229 CASE "?tf?vendor_specs_enabled_start?"; GOSUB VENDOR_SPECS_ENABLED; PP=FNP(SPECS_LINE$); BREAK ! 259010
3230 CASE "?tf?vendor_ss_enabled_start?"; GOSUB VENDOR_SPECIAL_SHIPPING_ENABLED; PP=FNP(SS_LINE$); BREAK ! 259100
3235 CASE "?tf?item_code?"; GOSUB GET_ITEM_CODE; PP=FNP(FNX$(ITEMCODE$)); BREAK ! WO298437, CIC if available
3236 CASE "?tf?po_line_um?"; PP=FNP(STP(FNX$(PO2.UM$))); BREAK ! 307397
3237 CASE "?tf?po_line_um_amt?"; PP=FNP(FNM$(PO2.UM_AMT,UM_MASK$)); BREAK ! 307397
3238 CASE "?tf?po_line_type?"; PP=FNP(PO2.LINE_TYPE$); BREAK ! SSP307397-DBD-255
3340 DEFAULT ; PP=FNP("")
3345 END SWITCH 
3350 WEND 
3390 PO_LINES_SECTION$+=PO_LINE$
3394 END_OF_PO_LINE:
3395 NEXT PO_LINE_NUM
3495 RETURN 
3499 ! ****************************************************
3500 PROCESS_3PINFO:! SSP242631, 3pinfostart/3pinfoend, tags match EC3VP1
3505 TPINFO_SECTION$="",TPINFO_TEMPLATE$=PO_LINE2$
3510 TPINFO_END=POS("?tf?3pinfoend?"=TPINFO_TEMPLATE$),TPINFO_TEMPLATE$=TPINFO_TEMPLATE$(1,TPINFO_END-1)
3515 PO_LINE2$=PO_LINE2$(TPINFO_END+14)
3520 DIM EC8$:IOL(Z[15]); READ DATA FROM DIM(LEN(EC8$)),REC=EC8$ TO IOL=IOL(EC8$)
3525 NO_EC8=1; READ (Z[15],KEY=PO1.PO_DIV$+PO1.PO_NUM$(1,6)+PO2.LINE_NUM$,REC=EC8$,DOM=*NEXT)IOL=IOL(Z[15]); NO_EC8=0
3530 DIM EC6$:IOL(Z[14]); READ DATA FROM DIM(LEN(EC6$)),REC=EC6$ TO IOL=IOL(EC6$)
3535 READ (Z[14],KEY=EC8.ID_3P$,REC=EC6$,DOM=*NEXT)IOL=IOL(Z[14])
3540 TP_LINE$=TPINFO_TEMPLATE$,TPL_CHKTAG=1
3545 WHILE TPL_CHKTAG
3550 TP1=MSK(TP_LINE$,"\?tf\?[^?]*\?"); IF TP1=0 THEN TPL_CHKTAG=0; BREAK
3555 TP_TAG$=TP_LINE$(TP1,MSL); TP_LINE1$=TP_LINE$(1,TP1-1),TP_LINE2$=MID(TP_LINE$,TP1+MSL)
3557 T_IN=POS("."=TP_TAG$); IF T_IN THEN TAG_PARM$=STP(MID(TP_TAG$,T_IN+1),2,"?"),TP_TAG$=MID(TP_TAG$,1,T_IN-1)+"?" ELSE TAG_PARM$="" ! DBD-191-DBSPT-117328-SSP307365
3560 SWITCH TP_TAG$
3570 CASE "?tf?po_no?"; TT=FNTP(FN%ZZDISP$(PO1.PO_DIV$+PO1.PO_NUM$,"P/O")); BREAK ! PO Number Formatted
3575 CASE "?tf?po_line?"; TT=FNTP(PO2.LINE_NUM$); BREAK ! PO line number
3580 CASE "?tf?proof_file?"; TT=FNTP(STP(EC8.INFO_3P_1$)); BREAK ! 3rd party info field 1
3585 CASE "?tf?proof_url?"; IF NO_EC8 OR STP(EC8.INFO_3P_1$)="" THEN PROOF_URL$="" ELSE PROOF_URL$=STP(EC6.PROOF_URL$)+"/"+STP(EC8.INFO_3P_1$) END_IF ; TT=FNTP(PROOF_URL$); BREAK ! proof 1 URL
3590 CASE "?tf?proof_2_file?"; TT=FNTP(STP(EC8.INFO_3P_2$)); BREAK ! 3rd party info field 2
3595 CASE "?tf?proof_2_url?"; IF NO_EC8 OR STP(EC8.INFO_3P_2$)="" THEN PROOF_2_URL$="" ELSE PROOF_2_URL$=STP(EC6.PROOF_URL$)+"/"+STP(EC8.INFO_3P_2$) END_IF ; TT=FNTP(PROOF_2_URL$); BREAK ! proof 2 URL
3600 CASE "?tf?proof_3_file?"; TT=FNTP(STP(EC8.INFO_3P_3$)); BREAK ! 3rd party info field 3
3605 CASE "?tf?proof_3_url?"; IF NO_EC8 OR STP(EC8.INFO_3P_3$)="" THEN PROOF_3_URL$="" ELSE PROOF_3_URL$=STP(EC6.PROOF_URL$)+"/"+STP(EC8.INFO_3P_3$) END_IF ; TT=FNTP(PROOF_3_URL$); BREAK ! proof 3 URL
3610 CASE "?tf?proof_3_2_file?"; GOSUB GET_PROOF_3_2; TT=FNTP(STP(PROOF_3_2_FILE$)); BREAK ! SSP243061, 3rd party info field 3, unless blank, then info field 2 instead
3615 CASE "?tf?proof_3_2_url?"; GOSUB GET_PROOF_3_2; IF NO_EC8 OR STP(PROOF_3_2_FILE$)="" THEN PROOF_3_2_URL$="" ELSE PROOF_3_2_URL$=STP(EC6.PROOF_URL$)+CUSTOM$+"/"+STP(PROOF_3_2_FILE$) END_IF ; GOSUB GET_FULL_URL_1; IF FULL_3P_URL$>"" THEN PROOF_3_2_URL$=STP(FULL_3P_URL$) END_IF ; TT=FNTP(PROOF_3_2_URL$); BREAK ! SSP243061, proof_3_2 URL. SSP290559, 3p_full_url. SSP292699, insert custom portion of URL if any, DBD-191-DBSPT-117328-SSP307365 only check for "01" seqence in EEM
3620 CASE "?tf?3p_full_url?"; GOSUB GET_FULL_URL; TT=FNTP(FULL_URL_N$); BREAK ! SSP290559, 3p_full_url, DBD-191-DBSPT-117328-SSP307365
3740 DEFAULT ; TT=FNTP("")
3745 END SWITCH 
3750 WEND 
3780 TPINFO_SECTION$+=TP_LINE$
3795 RETURN 
3799 ! 
3800 GET_PROOF_3_2:! SSP243061 - check info 3, use it if not blank else use info 2
3805 PROOF_3_2_FILE$=""
3810 IF STP(EC8.INFO_3P_3$)>"" THEN PROOF_3_2_FILE$=STP(EC8.INFO_3P_3$) ELSE PROOF_3_2_FILE$=STP(EC8.INFO_3P_2$)
3820 CUSTOM$=""; IF POS(X3$(9,3)="566632",3)>0 AND (POS("docu-source"=EC6.PROOF_URL$)>0 OR POS("nwdtoolkits.deluxe.com"=EC6.PROOF_URL$)>0) THEN CUSTOM$=STP(FS1.CUST_CODE$,1) ! 292699, for 566 need cust code only inserted into proof_3_2_url, if this is EC VP proof URL DBD-105-DBSPT-82046-SSP307265
3845 RETURN 
3849 ! 
3850 GET_FULL_URL_1:! SSP290559, 3p_full_url DBD-191-DBSPT-117328-SSP307365 ONLY USE THIS ROUTINE FOR 01 SEQUENCE IN EEM
3855 FULL_3P_URL$=""
3860 DIM EEM$(309); READ (Z[18],KEY=PO1.PO_DIV$+PO1.PO_NUM$(1,6)+PO2.LINE_NUM$+"01",DOM=*RETURN)EEM$(1)
3865 FULL_3P_URL$=EEM$(14,256)
3895 RETURN 
3899 ! 
3900 GET_FULL_URL:! DBD-191-DBSPT-117328-SSP307365 MULTIPLE SEQ SUPPORT
3905 FULL_URL_N$=""
3910 TAG_PARM=1; IF TAG_PARM$>"" THEN TAG_PARM=NUM(TAG_PARM$,ERR=*PROCEED) END_IF ; EEM_SEQ$=STR(TAG_PARM:"00")
3915 DIM EEM$(309)
3920 READ (Z[18],KEY=PO1.PO_DIV$+PO1.PO_NUM$(1,6)+PO2.LINE_NUM$+EEM_SEQ$,DOM=*RETURN)EEM$(1)
3925 FULL_URL_N$=STP(EEM$(14,256))
3945 RETURN 
3949 ! 
4000 SEND_XML_TO_VENDOR:! take output file and send to vendor
4005 FILE_TO_SEND$=PTH(OUTPUT); CLOSE (OUTPUT)
4009 IF DOC_TYPE$="850" THEN {
4010 SEND_CMD$="< "+%SERVER_TEMPLATE_DIR$+STP(AP4.WEB_ADDRESS$)+"_send_xml_order"+" "+FILE_TO_SEND$
4011  } ELSE {
4012 SEND_CMD$="< "+%SERVER_TEMPLATE_DIR$+"943_flowpoint_send_xml_order"+" "+FILE_TO_SEND$
4013  }
4025 MX=FN%_LOG_MESSAGE("MESG","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|EC3PO1|SEND XML INFO TO VENDOR|PO_NUM|"+FN%ZZDISP$(PO_NUM$,"P/O")+"|FILE_TO_SEND|"+FILE_TO_SEND$+"|COMMAND|"+SEND_CMD$+"|")
4030 SEND_CHAN=HFN; OPEN (SEND_CHAN,ERR=SEND_OPEN_ERR)SEND_CMD$
4035 READ (SEND_CHAN,BSY=*SAME,END=SEND_READ_DONE)RESP_IN$; RESP$+=RESP_IN$; GOTO *SAME; REM "199338
4045 SEND_READ_DONE:
4050 ! MM=MSK(RESP$,"<BR>...<BR><BR>.*<BR>"); IF MM<>0 THEN RESP_HOLD$=RESP$,RESP$=SUB(SUB(RESP$,"<BR>...<BR><BR>",""),"<BR>","")
4051 MM=MSK(RESP$,"<:>MESSAGE:.*<:>"); IF MM<>0 THEN RESP_HOLD$=RESP$,RESP$=SUB(SUB(RESP$(MM,MSL),"<:>",""),"MESSAGE:","")
4060 MX=FN%_LOG_MESSAGE("MESG","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|EC3PO1|SEND XML INFO TO VENDOR|PO_NUM|"+FN%ZZDISP$(PO_NUM$,"P/O")+"|FILE_TO_SEND|"+FILE_TO_SEND$+"|RESPONSE|"+RESP$+"|")
4062 GOSUB UPDATE_PO
4065 GOSUB EMAIL_CSR
4075 SEND_DONE:
4085 MX=FN%_LOG_MESSAGE("MESG","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|EC3PO1|SEND XML INFO TO VENDOR|PO_NUM|"+FN%ZZDISP$(PO_NUM$,"P/O")+"|SEND DONE|")
4090 CLOSE (SEND_CHAN)
4095 RETURN 
4096 SEND_OPEN_ERR: MX=FN%_LOG_MESSAGE("EXCP","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|EC3PO1|SEND XML INFO TO VENDOR|PO_NUM|"+FN%ZZDISP$(PO_NUM$,"P/O")+"|FILE_TO_SEND|"+FILE_TO_SEND$+"|ERROR ON OPEN|"+STR(ERR)+"|"); GOTO SEND_DONE
4099 ! ****************************************
4100 GET_CSR_EMAIL:
4105 IF EML_P$="" THEN DIM EML_P$(512); FIND (Z[13],KEY=X3$(9,3)+"EML",DOM=*NEXT)EML_P$
4110 READ (Z[9],KNO=1,KEY="CS"+FS1.CUST_SERV_REP$,DOM=*NEXT)
4115 EML_KEY$=KEY(Z[9],END=CSR_EMAIL_DONE); IF MID(EML_KEY$,1,6)<>"CS"+FS1.CUST_SERV_REP$ THEN GOTO CSR_EMAIL_DONE
4120 DIM EML$:IOL(Z[9]); READ (Z[9],KEY=EML_KEY$,DOM=CSR_EMAIL_DONE,REC=EML$)
4125 CSR_EMAIL_DONE:
4130 RETURN 
4140 ! ****************************************
4150 EMAIL_CSR:! Send an email to the CSR with the RESP$
4155 IF POS("DUPLICATE"=RESP$) THEN GOTO EC_DONE
4160 TOADDRESS$=STP(EML.EMAIL_ADDRESS$); IF NUL(TOADDRESS$) THEN GOTO EC_DONE
4165 MAILSERVER$=STP(EML_P$(7,60)); DM=MSK(MAILSERVER$,"\..*\..*$"); IF DM<>0 THEN FROMADDRESS$="xml@"+MAILSERVER$(DM+1),REPLYADDRESS$=FROMADDRESS$ ELSE FROMADDRESS$="xml@"+MAILSERVER$,REPLYADDRESS$="xml@"+MAILSERVER$
4167 IF STP(EC$[2](109,60))>"" THEN FROMADDRESS$=STP(EC$[2](109,60)),REPLYADDRESS$=FROMADDRESS$ ! SSP299688,optionally use XMLOUT buyer email address as the from addr
4170 IF NOT(ERR_EMAIL) THEN SUBJECT$="Purchase order "+FN%ZZDISP$(PO1.PO_DIV$+PO1.PO_NUM$,"P/O")+" sent to vendor "+FN%ZZDISP$(PO1.VEND_DIV$+PO1.VEND_CODE$,"A/P") ! SSP245945, if using ERR_EMAIL flag SUBJECT$ is already set
4175 IF NOT(ERR_EMAIL) THEN MESSAGE$=SUBJECT$+$0A0A$+"Their response: "+RESP$ ! SSP245945, if using ERR_EMAIL flag MESSAGE$ is already set  
4180 CALL "*web/email",ERR=*NEXT,FROMADDRESS$,REPLYADDRESS$,TOADDRESS$,CCADDRESS$,BCCADDRESS$,SUBJECT$,MESSAGE$,ATTACHMENTS$,"N",MAILSERVER$,SERVERTIMEOUT,LINEWRAPSAT,BODYENCODING$,ERASEIT,ERRORMESG$
4185 CWDIR HWD
4190 EC_DONE:
4195 RETURN 
4199 ! *****************************************************************
5100 ADD_MSG_TO_LOG:! Add message to log file
5105 ! Add other info as needed here
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
5150 UPDATE_PO:! Update Vendor XML sent! flag on PO header (2,1)
5160 EXTRACT RECORD (Z[1],KEY=PO_NUM$,DOM=ERR_UPDATE_PO,ERR=*NEXT)PO_HDR$; MX=FN%_LOG_MESSAGE("MESG","EC3PO1 LINE 5160 EXTRACT OK PO_NUM$="+PO_NUM$+" PO_HDR$(1,55)="+PO_HDR$(1,55)+"|"); GOTO 5166 ! SSP245945, changed READ to EXTRACT RECORD.  If we can extract it, go on to do the update, if we get ERR 0 then we will wait and try 10 times. SSP252766, add log msg
5165 WAIT 1; IF LOOP_COUNT++>10 THEN LOOP_COUNT=1; GOTO ERR_UPDATE_PO ELSE GOTO 5160 ! SSP245945, can't extract record, try 10 times
5169 IF DOC_TYPE$="850" THEN {
5170 PO_HDR$(2,1)="Y"; MX=FN%_LOG_MESSAGE("MESG","EC3PO1 LINE 5170 SET VEND XML SENT FLAG PO_HDR$(2,1)="+PO_HDR$(2,1)+"|") ! SSP252766, add log msg
5171  } ELSE {
5172 PO_HDR$(3,1)="Y"; MX=FN%_LOG_MESSAGE("MESG","EC3PO1 LINE 5172 SET IWR XML SENT FLAG PO_HDR$(3,1)="+PO_HDR$(3,1)+"|") ! DBD-255
5173  }
5175 WRITE RECORD (Z[1],KEY=PO_NUM$,ERR=ERR_UPDATE_PO)PO_HDR$; MX=FN%_LOG_MESSAGE("MESG","EC3PO1 LINE 5175 WRITE RECORD OK PO_NUM$="+PO_NUM$+" PO_HDR$(1,55)="+PO_HDR$(1,55)+"|"); GOTO UPDATE_PO_DONE ! SSP245945, changed WRITE to WRITE RECORD. SSP252766, add log msg
5179 ! 
5180 ERR_UPDATE_PO:
5185 MX=FN%_LOG_MESSAGE("MESG","ERR "+STR(ERR)+" at "+STR(TCB(5))+" while updating XML sent flag on PO "+PO_NUM$)
5187 SUBJECT$="ERROR attempting to update PO "+FN%ZZDISP$(PO1.PO_DIV$+PO1.PO_NUM$,"P/O"),MESSAGE$=SUBJECT$+$0A0A$+"Please manually change the XML Sent field to Y.",ERR_EMAIL=1; GOSUB EMAIL_CSR; ERR_EMAIL=0 ! SSP245945, if we have a CSR email address, send email about the error when attempting to update the XML sent flag
5189 ! 
5190 UPDATE_PO_DONE:! SSP245945
5195 RETURN 
5199 ! 
5200 ITEM_PO_LINE_TAG:
5205 ITEM_PO_LINE$=""
5210 DIM PO2$:IOL(Z[2]); READ DATA FROM DIM(LEN(PO2$)),REC=PO2$ TO IOL=IOL(PO2$)
5215 FOR PO_LINE_NUM=1 TO PO_LINE_COUNT
5220 READ (PO_LINE_CHAN,KEY=STR(PO_LINE_NUM:"000"),DOM=END_OF_ITEM_PO_LINE_TAG,REC=PO2$)IOL=IOL(Z[2])
5225 IF PO2.LINE_TYPE$="M" THEN GOTO END_OF_ITEM_PO_LINE_TAG
5230 ITEM_PO_LINE$+="Item"+PO2.LINE_NUM$+" "
5235 END_OF_ITEM_PO_LINE_TAG:
5240 NEXT PO_LINE_NUM
5245 RETURN 
5249 ! 
6500 PROCESS_PO_COMMENTS:! WO298437
6510 PO_COM_SECTION$="",PO_COM_TEMPLATE$=LINE$
6515 READ (100,END=*NEXT)PO_COM_LINE$; PO_COM_TEMPLATE$+=FNBYB$(SUB(PO_COM_LINE$,$0D$,""))+EOL$; IF POS("?tf?po_comments_end?"=PO_COM_LINE$)=0 THEN GOTO *SAME
6540 READ (Z[20],KEY=PO1.PO_DIV$+PO1.PO_NUM$,DOM=*NEXT)
6550 DIM POE$:IOL(Z[20]); READ DATA FROM DIM(LEN(POE$)),REC=POE$ TO IOL=IOL(POE$)
6560 READ (Z[20],REC=POE$,END=6695)IOL=IOL(Z[20]); IF POE.PO_DIV$+POE.PO_NUM$<>PO1.PO_DIV$+PO1.PO_NUM$ THEN GOTO 6695
6565 IF POE.PRINT_LINE$<>"Y" THEN GOTO 6550
6570 PO_COM_LINE$=PO_COM_TEMPLATE$,PO_COM_CHKTAG=1
6580 WHILE PO_COM_CHKTAG
6590 PO_COM1=MSK(PO_COM_LINE$,"\?tf\?[^?]*\?"); IF PO_COM1=0 THEN PO_COM_CHKTAG=0; BREAK
6600 PO_COM_TAG$=PO_COM_LINE$(PO_COM1,MSL); PO_COM_LINE1$=PO_COM_LINE$(1,PO_COM1-1),PO_COM_LINE2$=MID(PO_COM_LINE$,PO_COM1+MSL)
6610 SWITCH PO_COM_TAG$
6611 CASE "?tf?po_com_line_num?"; PO_COM_LINE$=PO_COM_LINE1$+STP(FNX$(POE.PO_LINE_NUM$),2)+PO_COM_LINE2$; BREAK
6612 CASE "?tf?po_comment?"; PO_COM_LINE$=PO_COM_LINE1$+STP(FNX$(POE.TF_COMMENT$),2)+PO_COM_LINE2$; BREAK
6650 DEFAULT ; PO_COM_LINE$=PO_COM_LINE1$+PO_COM_LINE2$
6660 END SWITCH 
6670 WEND 
6680 PO_COM_SECTION$+=PO_COM_LINE$
6690 GOTO 6550
6695 RETURN 
6699 ! 
6900 REM "Control tags to suppress item specs HTML section if vendor does not support it
6905 VENDOR_SPECS_ENABLED:
6915 LI2=POS("?tf?vendor_specs_enabled_end?"=PO_LINE2$); IF LI2>0 THEN SPECS_LINE$=MID(PO_LINE2$,1,LI2-1),PO_LINE2$=MID(PO_LINE2$,LI2+29) ! Get HTML until the end of the section
6925 IF AP4.XML_ITEM_SPECS$<>"Y" THEN SPECS_LINE$=""; GOTO *RETURN ! if vendor has not enabled support for specs then discard section
6935 SPEC_ITEM_KEY$=PO2.CUST_DIV$+PO2.CUST_CODE$+PO2.ITEM_CODE$,SPEC_OPTIONS$="" ! If here then OK to display section, get specs by calling EC3FMS
6940 CALL "EC3FMS",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},SPEC_ITEM_KEY$,SPEC_OPTIONS$,SPECS_LINE$
6945 RETURN 
6949 ! 
6950 REM "Control tags to suppress special shipping HTML section if vendor does not support it
6955 VENDOR_SPECIAL_SHIPPING_ENABLED:
6960 LI2=POS("?tf?vendor_ss_enabled_end?"=PO_LINE2$); IF LI2>0 THEN SS_LINE$=MID(PO_LINE2$,1,LI2-1),PO_LINE2$=MID(PO_LINE2$,LI2+26) ! Get HTML until the end of the section
6965 IF (AP4.XML_SPECIAL_SHIP$<>"Y" OR PO2.SPECIAL_SHIPPING$<>"Y") AND (DOC_TYPE$<>"943") THEN SS_LINE$=""; GOTO *RETURN ! if vendor has not enabled support for special shipping or line has no special shipping, then discard section. ssp289557; Or is not an IWR 943 - DBD-255
6970 PO3_KEY$=PO2.PO_DIV$+MID(PO2.PO_NUM$,1,6)+" "+PO2.LINE_NUM$,SS_OPTIONS$="" ! If here then OK to display section, get specs by calling EC3PO3 for the current PO line
6975 CALL "EC3PO3",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},PO3_KEY$,SS_OPTIONS$,SS_LINE$
6995 RETURN 
6999 ! 
7000 GET_VENDOR_SHIP_VIA:! Look up ship via (REAL_SHIP_VIA$) in XM0 to get vendor's ship via code
7005 VENDOR_SHIP_VIA$=""
7010 DIM XM0$:IOL(Z[5]); READ DATA FROM DIM(LEN(XM0$)),REC=XM0$ TO IOL=IOL(XM0$); FIND (Z[5],KEY=PO1.VEND_DIV$+PO1.VEND_CODE$+REAL_SHIP_VIA$,KNO=1,DOM=*RETURN,REC=XM0$)
7040 VENDOR_SHIP_VIA$=STP(XM0.VEND_SHIP_VIA_CODE$)
7045 RETURN 
7049 ! ***********************************************************
7050 GET_VENDOR_ITEM_CODE:! Given PO2 rec, get VENDOR_ITEM_CODE, check IC2, if not there then use just the ITEM_CODE, not the CUSTOMER+ITEM_CODE
7055 VENDOR_ITEM_CODE$=PO2.ITEM_CODE$
7065 DIM IC2$:IOL(Z[6]); READ DATA FROM DIM(LEN(IC2$)),REC=IC2$ TO IOL=IOL(IC2$); FIND (Z[6],KEY=PO2.CUST_DIV$+PO2.CUST_CODE$+PO2.ITEM_CODE$+PO1.VEND_DIV$+PO1.VEND_CODE$+PO1.PLANT_CODE$,DOM=*RETURN,REC=IC2$)
7070 IF NOT(NUL(IC2.SUPP_ITEM_CODE$)) THEN VENDOR_ITEM_CODE$=STP(IC2.SUPP_ITEM_CODE$)
7095 RETURN 
7099 ! **********************************************************
7151 FNX:
7152 DEF FNX$(LOCAL X$)
7165 TRANSLATE X$,"&"+$05$+"&amp;"+"<"+$04$+"&lt;"+">"+$04$+"&gt;"+QUO+$06$+"&quot;"+"'"+$06$+"&apos;" ! SSP247374, fix for apostrophe
7170 RETURN X$
7195 END DEF
7199 ! ***********************************************************
7200 GET_PLANT_CODE:! WO208887, populate vendor_plant with plant from PO header, or map code from plant record if not blank
7205 PLANT_CODE_TO_USE$=""
7210 IF STP(PO1.PLANT_CODE$,3)="" THEN GOTO *RETURN
7215 PLANT_CODE_TO_USE$=PO1.PLANT_CODE$
7220 DIM FM0$(618); READ (Z[11],KEY="P"+PO1.VEND_DIV$+PO1.VEND_CODE$+PO1.PLANT_CODE$,DOM=*RETURN)FM0$(1); IF STP(FM0$(568,10),3)>"" THEN PLANT_CODE_TO_USE$=STP(FM0$(568,10),1)
7245 RETURN 
7249 ! 
7250 GET_PO_DATE_YYYYMMDD:! WO233323, get PO date in yyyy-mm-dd format
7255 DATE_IN$=PO1.PO_DATE$
7260 IF STP(DATE_IN$,1)="" THEN DATE_IN$=X3$(21,6)
7265 PO_DATE_YYYYMMDD$=FN%FMT_TFDATE$(DATE_IN$,"%Y-%Mz-%Dz")
7295 RETURN 
7299 ! 
7300 GET_3P_ORDER_LINE_ID:! WO234315
7310 DIM EEG$:IOL(Z[12]); READ DATA FROM DIM(LEN(EEG$)),REC=EEG$ TO IOL=IOL(EEG$); READ (Z[12],KEY=MID(PO_NUM$,1,8)+PO2.LINE_NUM$,REC=EEG$,DOM=*RETURN)
7315 ORD_LINE_ID_3P$=EEG.ORDER_LINE_ID_3P$
7345 RETURN 
7349 ! 
7400 GET_ITEM_COMMENTS:! SSP243068
7405 DIM ITEM_COMMENTS$[8]; FMV_ITEM$=PO2.CUST_DIV$+PO2.CUST_CODE$+PO2.ITEM_CODE$,FMV_COUNT=0
7410 DIM FMV$(95); READ (Z[16],KEY=FMV_ITEM$,DOM=*NEXT)
7415 NEXT_FMV_KEY: FMV_KEY$=KEY(Z[16],END=*RETURN); IF FMV_KEY$(1,20)<>FMV_ITEM$ THEN GOTO *RETURN
7420 NEXT_FMV:READ (Z[16],KEY=FMV_KEY$)FMV$(1)
7425 IF FMV$(24,1)<>"Y" THEN GOTO NEXT_FMV_KEY
7430 FMV_COUNT+=1; ITEM_COMMENTS$[FMV_COUNT]=FMV$(25,65); IF FMV_COUNT=8 THEN GOTO *RETURN ! Only get the first eight item comments set to print
7435 GOTO NEXT_FMV_KEY
7440 RETURN 
7445 ! 
7450 PUT_DATE_INTO_YYYYMMDD:! SSP243727 - if date is blank then set to ""
7460 IF STP(DATE_IN$)="" THEN DATE_OUT$=""; GOTO *RETURN
7470 DATE_OUT$=FN%FMT_TFDATE$(DATE_IN$,"%Y-%Mz-%Dz")
7490 RETURN 
7495 ! 
7500 GET_PURCHASE_ORDER_TYPE:! SSP243727
7510 ON POS(MID(PO1.NEW_REPEAT$,1,1)="NECSB") GOTO 7539,7520,7521,7522,7523,7524
7520 PURCHASE_ORDER_TYPE$="New"; GOTO *RETURN
7521 PURCHASE_ORDER_TYPE$="Exact repeat"; GOTO *RETURN
7522 PURCHASE_ORDER_TYPE$="Copy change"; GOTO *RETURN
7523 PURCHASE_ORDER_TYPE$="Spec change"; GOTO *RETURN
7524 PURCHASE_ORDER_TYPE$="Copy and Spec change"; GOTO *RETURN
7539 PURCHASE_ORDER_TYPE$=""; GOTO *RETURN
7540 RETURN 
7545 ! 
7550 GET_HOW_TO_SHIP_DESC:! SSP253287
7555 GOSUB SET_READONLY
7560 DIM HTS$(20); READ (Z[17],KEY="H"+GENERAL_SHIPPING.HOW_TO_SHIP_CODE$,DOM=*NEXT)HTS$(1)
7565 HOW_TO_SHIP_DESC$=STP(HTS$(3,15),1)
7570 GOSUB CLEAR_READONLY
7590 RETURN 
7595 ! 
7600 SET_READONLY:
7610 SET_PARAM 'XI'
7620 SET_READONLY_END:RETURN 
7630 CLEAR_READONLY:
7640 SET_PARAM -'XI'
7645 CLEAR_READONLY_END:RETURN 
7649 ! 
7650 GET_FOB_DESC:! SSP253287
7655 GOSUB SET_READONLY
7660 DIM FOB$(20); READ (Z[17],KEY="F"+GENERAL_SHIPPING.FOB$,DOM=*NEXT)FOB$(1)
7665 FOB_DESC$=STP(FOB$(3,15),1)
7670 GOSUB CLEAR_READONLY
7690 RETURN 
7695 ! 
7700 GET_ITEM_CODE:! WO298437, CIC if available else item code
7705 ITEMCODE$=PO2.ITEM_CODE$
7715 DIM FM1$:IOL(Z[21]); READ DATA FROM DIM(LEN(FM1$)),REC=FM1$ TO IOL=IOL(FM1$); FIND (Z[21],KEY=PO2.CUST_DIV$+PO2.CUST_CODE$+PO2.ITEM_CODE$,DOM=*RETURN,REC=FM1$)
7720 IF NOT(NUL(FM1.CIC$)) THEN ITEMCODE$=STP(FM1.CIC$)
7745 RETURN 
7749 ! 
7750 GET_MESSAGE_LINES_TEXT:! 300617
7751 MSGSTXT$=""
7753 IF PO1.PO_NUM$(7,1)=" " THEN GOTO 7765
7755 READ (Z[22],KEY=MID(PO1.PO_DIV$+PO1.PO_NUM$,1,8),DOM=*NEXT)
7756 FS2K$=KEY(Z[22],END=7795); IF MID(FS2K$,1,8)<>MID(PO1.PO_DIV$+PO1.PO_NUM$,1,8) THEN GOTO 7795
7758 READ (Z[22],KEY=FS2K$)FS2$; IF FS2$(155,1)="M" AND (FS2$(9,1)=PO1.PO_NUM$(7,1) OR FS2$(9,1)=" ") THEN MSGSTXT$+=STP(FS2$(50,40),2)+" "
7760 GOTO 7756
7764 ! 
7765 READ (Z[2],KEY=PO_NUM$,DOM=*NEXT)
7770 PO2K$=KEY(Z[2],END=7795); READ (Z[2],KEY=PO2K$)PO2$; IF MID(PO2K$,1,9)<>PAD(PO_NUM$,9) THEN GOTO 7795
7775 MSGSTXT$+=STP(PO2$(28,40),2)+" "
7780 GOTO 7770
7795 RETURN 
7799 ! 
7800 PROCESS_PO1_TAG:! 307397-DBD-255
7805 TAG$=MID(TAG$,5); TAG$=STP(TAG$,1,"?")
7806 PO1_TAG_VAL$=""
7810 PO1_TAG_VAL$=EVS(SUB(UCS(TAG$),"PO1_","PO1.")+"$"); IF LEN(PO1_TAG_VAL$)=0 THEN PO1_TAG_VAL$=STR(EVN(SUB(UCS(TAG$),"PO1_","PO1.")))
7845 RETURN 
7849 ! 
8000 ! Caught errors
8010 PO1_NOT_FOUND: MX=FN%_LOG_MESSAGE("EXCP","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|EC3PO1|PO NOT FOUND|PO_NUM|"+FN%ZZDISP$(PO_NUM$,"P/O")+"|"); GOTO 9900
8015 AP4_NOT_FOUND: MX=FN%_LOG_MESSAGE("EXCP","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|EC3PO1|VENDOR NOT FOUND|PO_NUM|"+FN%ZZDISP$(PO_NUM$,"P/O")+"|VENDOR CODE|"+FN%ZZDISP$(PO1.VEND_DIV$+PO1.VEND_CODE$,"A/P")+"|"); GOTO 9900
8600 FNTP:! SSP242631
8605 DEF FNTP(LOCAL DATA$)
8610 TP_LINE$=TP_LINE1$+FNX$(DATA$)+TP_LINE2$ ! SSP293745
8640 RETURN 0
8649 ! 
8700 FNM:DEF FNM$(LOCAL AMOUNT, LOCAL MASK$)
8705 ! if AMOUNT is 0 then return null string, else STR AMOUNT with MASK and strip leading and trailing blanks
8715 IF AMOUNT=0 THEN RETURN "" ELSE RETURN STP(STR(AMOUNT:MASK$),2)
8745 END DEF
8749 ! **********************************************************
8750 FNP:
8751 DEF FNP(LOCAL DATA$)
8760 PO_LINE$=PO_LINE1$+DATA$+PO_LINE2$
8790 RETURN 0
8799 ! ********************************************************
8800 FNBYB:
8801 DEF FNBYB$(LOCAL DATA$)
8802 ! Send DATA$ through EC3BYB
8820 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,DATA$,BYBINFO${ALL},BYBOPTIONS$
8840 RETURN DATA$
8845 END DEF
8849 ! *****************************************************
8850 DEF FNM$(LOCAL AMOUNT, LOCAL MASK$)
8855 ! if AMOUNT is 0 then return null string, else STR AMOUNT with MASK and strip leading and trailing blanks
8860 IF AMOUNT=0 THEN RETURN "" ELSE RETURN STP(STR(AMOUNT:MASK$),2)
8895 END DEF
8899 ! **********************************************************
8915 FNT:DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 FNN:
8921 DEF FNN(LOCAL DATA$)
8925 LINE$=LINE1$+DATA$+LINE2$
8930 RETURN 0
8949 ! *****************************
8950 ! FND$ - Standard date routine
8955 FND:DEF FND$(LOCAL DATE_IN$, LOCAL SPECIAL_FORMAT$)
8960 LOCAL DATE_OUT$
8965 IF NUL(DATE_IN$) THEN DATE_OUT$="" ELSE IF NOT(NUL(SPECIAL_FORMAT$)) THEN DATE_OUT$=FN%FMT_TFDATE$(DATE_IN$,SPECIAL_FORMAT$) ELSE CALL "ZZDISP","DX",DATE_IN$,"",X3$,DATE_OUT$,"",0,0,X4$
8970 RETURN DATE_OUT$
8975 END DEF
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 IF PO_LINE_CHAN<>0 THEN CLOSE (PO_LINE_CHAN,ERR=*NEXT)
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56000 ! Program changes starting 02/08/06
56010 REM "189703-Building interface between Solion for PO's and Invoices
56020 REM "189101-Interface TFP and Solion
56022 REM "196766-Governor Computer Interface                                 
56025 REM "208887-Implement a vendor plant mapping in Topform for XML POs.
56027 REM "212100-XML PO to Printegra currently does not show starting number
56028 REM "211380-TopForm file feldnames which are SQL keywords break Oracle. 
56030 REM "233323-Navitor Purchase 10 hr block of time to integrate with Sage
56032 REM "234315-Capture lineItemId from Four51 orders, modify Vendor PO
56034 REM "234945-DB XML exchange hub - po_line_count adding M types
56036 REM "240741-[DT9] Entering Broker XML POs, DBD session locks up until 
56038 REM "242210-Ampersand in the itemcode is not being translated in the
56040 REM "242631-Need vendor proof URL/file tags for DB VP added to EC3PO1.  
56042 REM "243068-Add item comments tags to EC3PO1 to output at the line level
56044 ! 243061-New tag to output proof 3 unless blank then proof 2-3p_info_3_2
56056 REM "243727-EC3PO1 - date_requested_yyyymmdd, date_required_yyyymmdd,   
56058 REM "245661-243068; EC3PO1 comments not encoded properly.               
56060 REM "245945-BCT PO's that print and also go out XML, programs are both  
56062 REM "247374-EC3XPN XML special characters, need to add apostrophe.      
56064 REM "252766-Flowpoint XML PO's to BCT sometimes going more than once.   
56066 ! 253287-Add output tags, cust_po_number, gen_ship_via_desc, etc.
56067 REM "259010-Ability to export item specifications
56068 REM "259100-Adding support for special shipping information to XML PO
56070 REM "270120-Flowpoint; Add mark_for tag to EC3PO1 for XML order output. 
56072 REM "289557-FlowPoint; additional to EC3PO3 special shipping PO output  
56074 REM "290559-FlowPoint; 3p_full_url tag, loc_code, cust_loc_code
56076 ! 290352-FlowPoint; sh5_shipper_id
56078 REM "292699-Need update to Variable Print to honor the 3P ID when it's  
56080 REM "293745-EC3PO1 needs fix to escape full url and any other tags that 
56082 REM "298437-PO Comments, shipper ID from PO3, item_code for CIC/item
56083 ! 299688-with 298437, option for CSR email from addr come from buyer
56084 REM "300617-XML PO; output ALL message lines from sales order, together 
56086 REM "306882-FlowPoint; Can the Ordered By field be added as an extrinsic
56088 REM "307210-DBD-63-International shipping address - add country code           
56090 REM "307265-DBD-105-DBSPT-82046-update to custom code in EC3PO1 VP URL  
56092 REM "307302-DBD-126;EC3PO1/3; if country is blank, use default          
56094 REM "307365-DBD-191-DBSPT-117328; Additional Order Line URL support     
56095 REM "307397-DBD-255 - Impending Whse Receipt notification - 943 XML     
