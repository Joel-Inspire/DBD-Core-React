0010 REM "EC Open Invoice Status <EC3IN0>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 01/09/19 - 11.038055 - dmm - SSP# 303115
0037 REM "303115-FN%HTML_ESC$ additions in EC programs                       
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3IN0",X1$="E/C Open Invoice Status"
0130 NY$="NY"
0310 IOLIST AR6$,AR6[0],AR6[1],AR6[2],AR6[3],AR6[4],AR6[5],AR6[6],AR6[7],AR6[8],AR6[9],AR6[10],AR6[11],AR6[12],AR6[13],AR6[14]
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))],FS6[7],BLANKS$(100),FT3[13]
0510 Z$="020 AR6... 13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0524 IF EC$[2](1066,1)<>"Y" THEN GOTO 9900
0525 GOSUB SET_READONLY
0600 REM "Build search strings
0910 CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$
1000 REM "Process DATA array
1005 DATA_TAGS$="001<template>002<maxrows>003<position_invoice>004<direction>005<session_id>006<invoice_sort>"
1006 MAX_ROWS=25,POSITION_INVOICE$="",DIRECTION$="F",INVOICE_SORT$="H0"
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 MAX_ROWS=NUM(VALUE$,ERR=1090); GOTO 1090; REM "maxrows
1023 POSITION_INVOICE$=VALUE$; GOTO 1090; REM "position_invoice
1024 IF VALUE$="backward" THEN DIRECTION$="B"; GOTO 1090; REM "direction, only set if it is 'backward'
1025 SESSION_ID$=VALUE$; GOTO 1090; REM "Get session id
1026 INVOICE_SORT$=VALUE$; GOTO 1090; REM "Invoice sort - if no sort requested defaults to invoice number
1090 NEXT I
1100 REM "Gather orders on this page
1101 VERSION$="20080807",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1105 GOSUB SET_INVOICE_SORT
1109 IF NUM(EC_PARM$(433,3))<>0 OR MAX_ROWS=0 THEN MAX_ROWS=NUM(EC_PARM$(433,3))
1110 GOSUB 3400 ! Get open invoices
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<cust_code>002<cust_name>003<ec_company>004<entrystart>005<buttonnext>006<buttonprev>007<session_id>008<buyer_id>009<buyer_name>010<date>011<time>012<invoice_sort>"
1510 READ (100,END=1595)LINE$; GOSUB 7550
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2090
2001 LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE$)+LINE2$; GOTO 2095; REM "cust_code SSP303115
2002 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](23,35),1))+LINE2$; GOTO 2095; REM "cust_name SSP303115
2003 LINE$=LINE1$+FN%HTML_ESC$(STP(EC_PARM$(7,50),1))+LINE2$; GOTO 2095; REM "ec_company SSP303115
2004 GOSUB 3200; LINE$=TABLE$; GOTO 2095; REM "entrystart
2005 GOSUB 3500; LINE$=BUTTON$; GOTO 2095; REM "buttonnext
2006 GOSUB 3600; LINE$=BUTTON$; GOTO 2095; REM "buttonprev
2007 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](1,7),1))+LINE2$; GOTO 2095; REM "session_id from EC$ SSP303115
2008 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](8,15),1))+LINE2$; GOTO 2095; REM "buyer_id SSP303115
2009 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[2](16,35),1))+LINE2$; GOTO 2095; REM "buyer_name SSP303115
2010 LINE$=LINE1$+FN%HTML_ESC$(EC$[4])+LINE2$; GOTO 2095; REM " date SSP303115
2011 LINE$=LINE1$+FN%HTML_ESC$(EC$[5])+LINE2$; GOTO 2095; REM "time SSP303115
2012 LINE$=LINE1$+INVOICE_SORT$+LINE2$; GOTO 2095; REM "invoice_sort
2090 LINE$=LINE1$+"?"+LINE2$; GOTO 2095; REM "tag not found, replace with '?'
2095 RETURN 
3200 REM "Output entries, using ENTRY_TEMPLATE$ to pass information, create TABLE$ to output
3202 ENTRY_TAGS$="001<cust_code>002<inv_num>003<inv_type>004<inv_date>005<billed_from_cust_code>006<cust_po>007<terms_code>008<split_terms>009<inv_due_date>010<disc_due_day>011<order_no>012<sper_code>013<sper_code_2>014<sper_code_3>015<sper_code_4>016<sper_code_5>017<apply_to_inv_num>018<audit_num>019<cust_category>020<stax_code>021<fy>022<acctpd>023<greatest_fy>024<greatest_acctpd>025<ship_date>026<shipped_via>027<summary_bill_ref>028<multi_stax>029<factory_job_num>030<inv_amt>031<inv_bal>032<disc_amt>033<cash_in_progress>034<orig_inv_amt>035<stax_billed>036<frt_billed>037<net_sale>"
3203 REM "Setup ENTRY_TEMPLATE$
3204 ENTRY_TEMPLATE$=LINE$,TABLE$=""
3205 READ (100,END=3206)LINE$; GOSUB 7550; ENTRY_TEMPLATE$=ENTRY_TEMPLATE$+LINE$+EOL$; IF POS("?tf?entryend?"=LINE$)=0 THEN GOTO 3205
3209 REM "Now read order$, if B direction do it backwards
3210 IF DIRECTION$="B" THEN START_PT=TOTAL_RECORDS,END_PT=1,STEP_SIZE=-1 ELSE START_PT=1,END_PT=TOTAL_RECORDS,STEP_SIZE=1
3215 FOR ENTRY_INDEX=START_PT TO END_PT STEP STEP_SIZE
3216 ! PRINT "DEBUG: ",ENTRY_INDEX," ",INVOICE$[ENTRY_INDEX,2]
3220 DIM AR6$(181),AR6[14]; FIND (Z[2],KEY=INVOICE$[ENTRY_INDEX,2],DOM=*NEXT)IOL=0310
3224 ! PRINT "DEBUG: ",ENTRY_INDEX," ",AR6{ALL}
3225 ENTRY$=ENTRY_TEMPLATE$
3230 GOSUB 3300
3235 IF LEN(TABLE$)+LEN(ENTRY$)>62000 THEN PRINT (OUTPUT)TABLE$,EOL$,; TABLE$="" END_IF ; TABLE$=TABLE$+ENTRY$; REM "#134089
3245 NEXT ENTRY_INDEX
3295 RETURN 
3300 REM "Given AR6$, create row in table
3305 EINDEX=POS("?tf?"=ENTRY$); IF EINDEX=0 THEN GOTO 3395
3306 EEND_INDEX=POS("?"=ENTRY$(EINDEX+4)),ETAG$=ENTRY$(EINDEX+4,EEND_INDEX-1),ENTRY1$=ENTRY$(1,EINDEX-1),ENTRY2$=ENTRY$(EINDEX+EEND_INDEX+4),EPOS=POS("<"+ETAG$+">"=ENTRY_TAGS$); IF EPOS=0 THEN EINDEX=0 ELSE EINDEX=NUM(ENTRY_TAGS$(EPOS-3,3))
3310 ON EINDEX GOTO 3389,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3389
3311 CALL "ZZDISP","AX",AR6$(1,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$; ENTRY$=ENTRY1$+FN%HTML_ESC$(CUST_CODE$)+ENTRY2$; GOTO 3390; REM "cust_code SSP303115
3312 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(11,8),1))+ENTRY2$; GOTO 3390; REM "inv_num SSP303115
3313 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(19,1),1))+ENTRY2$; GOTO 3390; REM "inv_type SSP303115
3314 CALL "ZZDISP","DX",AR6$(20,6),"",X3$,DATE1$,"",0,0,X4$; ENTRY$=ENTRY1$+FN%HTML_ESC$(DATE1$)+ENTRY2$; GOTO 3390; REM "inv_date SSP303115
3315 CALL "ZZDISP","AX",AR6$(27,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$; ENTRY$=ENTRY1$+FN%HTML_ESC$(CUST_CODE$)+ENTRY2$; GOTO 3390; REM "billed_from_cust_code SSP303115
3316 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(36,15),1))+ENTRY2$; GOTO 3390; REM "cust_po SSP303115
3317 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(51,2),1))+ENTRY2$; GOTO 3390; REM "terms_code SSP303115
3318 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(53,1),1))+ENTRY2$; GOTO 3390; REM "split_terms SSP303115
3319 CALL "ZZDISP","DX",AR6$(54,6),"",X3$,DATE1$,"",0,0,X4$; ENTRY$=ENTRY1$+FN%HTML_ESC$(DATE1$)+ENTRY2$; GOTO 3390; REM "inv_due_date SSP303115
3320 CALL "ZZDISP","DX",AR6$(60,6),"",X3$,DATE1$,"",0,0,X4$; ENTRY$=ENTRY1$+FN%HTML_ESC$(DATE1$)+ENTRY2$; GOTO 3390; REM "disc_due_day SSP303115
3321 CALL "ZZDISP","AX",AR6$(66,8),"O/P",X3$,ORDER_NO$,"",0,0,X4$; ENTRY$=ENTRY1$+FN%HTML_ESC$(ORDER_NO$)+ENTRY2$; GOTO 3390; REM "order_no SSP303115
3322 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(74,4),1))+ENTRY2$; GOTO 3390; REM "sper_code SSP303115
3323 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(78,4),1))+ENTRY2$; GOTO 3390; REM "sper_code_2 SSP303115
3324 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(82,4),1))+ENTRY2$; GOTO 3390; REM "sper_code_3 SSP303115
3325 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(86,4),1))+ENTRY2$; GOTO 3390; REM "sper_code_4 SSP303115
3326 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(90,4),1))+ENTRY2$; GOTO 3390; REM "sper_code_5 SSP303115
3327 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(94,8),1))+ENTRY2$; GOTO 3390; REM "apply_to_inv_num SSP303115
3328 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(102,6),1))+ENTRY2$; GOTO 3390; REM "audit_num SSP303115
3329 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(108,9),1))+ENTRY2$; GOTO 3390; REM "cust_category SSP303115
3330 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(117,10),1))+ENTRY2$; GOTO 3390; REM "stax_code SSP303115
3331 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(127,4),1))+ENTRY2$; GOTO 3390; REM "fy SSP303115
3332 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(131,2),1))+ENTRY2$; GOTO 3390; REM "acctpd SSP303115
3333 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(133,4),1))+ENTRY2$; GOTO 3390; REM "greatest_fy SSP303115
3334 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(137,2),1))+ENTRY2$; GOTO 3390; REM "greatest_acctpd SSP303115
3335 CALL "ZZDISP","DX",AR6$(139,6),"",X3$,DATE1$,"",0,0,X4$; ENTRY$=ENTRY1$+FN%HTML_ESC$(DATE1$)+ENTRY2$; GOTO 3390; REM "ship_date SSP303115
3336 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(145,15),1))+ENTRY2$; GOTO 3390; REM "shipped_via SSP303115
3337 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(160,8),1))+ENTRY2$; GOTO 3390; REM "summary_bill_ref SSP303115
3338 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(168,1),1))+ENTRY2$; GOTO 3390; REM "multi_stax SSP303115
3339 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(AR6$(169,12),1))+ENTRY2$; GOTO 3390; REM "factory_job_num SSP303115
3340 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(AR6[2]:"-$###,###.00"))+ENTRY2$; GOTO 3390; REM "inv_amt SSP303115
3341 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(AR6[3]:"-$###,###.00"))+ENTRY2$; GOTO 3390; REM "inv_bal SSP303115
3342 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(AR6[4]:"-$###,###.00"))+ENTRY2$; GOTO 3390; REM "disc_amt SSP303115
3343 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(AR6[5]:"-$###,###.00"))+ENTRY2$; GOTO 3390; REM "cash_in_progress SSP303115
3344 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(AR6[6]:"-$###,###.00"))+ENTRY2$; GOTO 3390; REM "orig_inv_amt SSP303115
3345 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(AR6[7]:"-$###,###.00"))+ENTRY2$; GOTO 3390; REM "stax_billed SSP303115
3346 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(AR6[8]:"-$###,###.00"))+ENTRY2$; GOTO 3390; REM "frt_billed SSP303115
3347 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(AR6[9]:"-$###,###.00"))+ENTRY2$; GOTO 3390; REM "net_sale SSP303115
3389 ENTRY$=ENTRY1$+"?"+ENTRY2$; GOTO 3390; REM "tag not found, replace with '?'
3390 GOTO 3305
3395 RETURN 
3400 REM "build order status screen using ECW (user defined order sort)
3401 REM "fill INVOICE$[] with orders, using position_order$ and direction$, if direction$='B'(ackwards) then 1->total_records is in reverse order, so read it later as total_records-> 1
3403 GOSUB 3450
3404 ! IF WHO="crg" THEN PRINT VERY_FIRST_INVOICE$," ",VERY_LAST_INVOICE$; ESCAPE ; REM "IF INVOICE POSITION KEY PASSED IN THEN USE THE IDENTIFIED PO SORT ON THE CUSTOMER PARAMETERS AS THE SORT
3405 IF POSITION_INVOICE$="" AND DIRECTION$="B" THEN POSITION_INVOICE$=EC$[2](51,10)+$FFFFFFFFFFFF$; REM "if in backwards order, start at end of file
3406 IF POSITION_INVOICE$="" AND DIRECTION$="F" THEN POSITION_INVOICE$=EC$[2](51,10); REM "if forward, start at beginning of file
3410 INVOICE_LIST$="",FIRST_INVOICE$="",LAST_INVOICE$="",TOTAL_RECORDS=0,INDEX=1; DIM INVOICE$[MAX_ROWS,3]; REM "141008 / 158066
3415 READ (Z[2],KEY=POSITION_INVOICE$,DOM=*NEXT)
3420 IF DIRECTION$="B" THEN AR6KEY$=KEP(Z[2],KNO=INVOICE_SORT,END=3435) ELSE AR6KEY$=KEY(Z[2],KNO=INVOICE_SORT,END=3435)
3421 READ (Z[2],KEY=AR6KEY$,DOM=*NEXT)
3422 INVNUMB$=AR6KEY$; GOSUB CHECK_INVOICE; IF REPORT$="N" THEN GOTO 3420; REM "skip if invoice does not meet reporting requirements
3423 INVOICE_CK$=AR6KEY$(LEN(AR6KEY$)-7,8)
3425 INVOICE$[INDEX,0]=ONUMB$,INVOICE$[INDEX,1]=OSTATUS$,INVOICE$[INDEX,2]=AR6KEY$,INVOICE$[INDEX,3]=STP(SM4_SHIP_DATE$,3," "),TOTAL_RECORDS=TOTAL_RECORDS+1,INDEX=INDEX+1; IF MAX_ROWS<>0 AND TOTAL_RECORDS>=MAX_ROWS THEN GOTO 3435; REM "skip to correct place to exit / 158066
3430 GOTO 3420
3440 IF DIRECTION$="B" THEN FIRST_INVOICE$=INVOICE$[TOTAL_RECORDS,2],LAST_INVOICE$=INVOICE$[1,2] ELSE FIRST_INVOICE$=INVOICE$[1,2],LAST_INVOICE$=INVOICE$[TOTAL_RECORDS,2]
3445 RETURN 
3450 REM "Set VERY_FIRST_INVOICE$ and VERY_LAST_INVOICE$. These will be used to determine when to NOT show prev and next buttons
3451 VERY_FIRST_INVOICE$="",VERY_LAST_INVOICE$=""
3453 ON INT(POS(INVOICE_SORT$="H0H1H2H3",2)/2) GOTO 3454,3454,3454,3454,3454,3454
3454 SORTKEY_HI$=EC$[2](51,10)
3460 READ (Z[2],KEY=SORTKEY_HI$,DOM=3461)
3465 VK$=KEY(Z[2],END=3467); READ (Z[2]); IF VK$(1,LEN(SORTKEY_HI$))=SORTKEY_HI$ THEN INVNUMB$=VK$; GOSUB CHECK_INVOICE; GOTO 3466 ELSE GOTO 3470
3466 IF REPORT$="Y" THEN VERY_FIRST_INVOICE$=VK$; GOTO 3470 ELSE GOTO 3465
3470 READ (Z[2],KEY=SORTKEY_HI$+$FF$,DOM=3471)
3471 VK$=KEP(Z[2],END=3473); READ (Z[2],KEY=VK$,END=3473); IF VK$(1,LEN(SORTKEY_HI$))=SORTKEY_HI$ THEN INVNUMB$=VK$; GOSUB CHECK_INVOICE; GOTO 3472 ELSE GOTO 3474
3472 IF REPORT$="Y" THEN VERY_LAST_INVOICE$=VK$; GOTO 3474 ELSE GOTO 3471
3495 RETURN 
3500 REM "Output next button, using BUTTON_NEXT_TEMPLATE$ to pass information, creating BUTTON$, if needed
3502 BUTTON$="",BUTTON_NEXT_TAGS$="001<position_invoice>002<session_id>003<active_invoice_sort>"
3503 REM "Setup BUTTON_NEXT_TEMPLATE$
3505 READ (100,END=3506)LINE$; GOSUB 7550; BUTTON_NEXT_TEMPLATE$=BUTTON_NEXT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonnextend?"=LINE$)=0 THEN GOTO 3505
3510 IF LAST_INVOICE$=VERY_LAST_INVOICE$ THEN BUTTON$=""; GOTO 3595 ELSE BUTTON$=BUTTON_NEXT_TEMPLATE$
3515 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3591
3516 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_NEXT_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_NEXT_TAGS$(BNPOS-3,3))
3520 ON BNINDEX GOTO 3590,3521,3522,3523,3590
3521 BUTTON$=BUTTON1$+LAST_INVOICE$+BUTTON2$; GOTO 3590; REM "position_order
3522 BUTTON$=BUTTON1$+EC$[1](1,7)+BUTTON2$; GOTO 3590; REM "session_id from EC$
3523 BUTTON$=BUTTON1$+INVOICE_SORT$+BUTTON2$; GOTO 3590; REM "acvtive order sort
3590 GOTO 3515
3595 RETURN 
3600 REM "Output previous button, using BUTTON_PREV_TEMPLATE$ to pass information, creating BUTTON$, if needed
3602 BUTTON$="",BUTTON_PREV_TAGS$="001<position_invoice>002<session_id>003<active_invoice_sort>"
3605 READ (100,END=3606)LINE$; GOSUB 7550; BUTTON_PREV_TEMPLATE$=BUTTON_PREV_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonprevend?"=LINE$)=0 THEN GOTO 3605
3610 IF FIRST_INVOICE$=VERY_FIRST_INVOICE$ THEN BUTTON$=""; GOTO 3695 ELSE BUTTON$=BUTTON_PREV_TEMPLATE$
3615 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3691
3616 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_PREV_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_PREV_TAGS$(BNPOS-3,3))
3620 ON BNINDEX GOTO 3690,3621,3622,3623,3690
3621 BUTTON$=BUTTON1$+FIRST_INVOICE$+BUTTON2$; GOTO 3690; REM "position_order
3622 BUTTON$=BUTTON1$+EC$[1](1,7)+BUTTON2$; GOTO 3690; REM "session_id
3623 BUTTON$=BUTTON1$+INVOICE_SORT$+BUTTON2$; GOTO 3690; REM "active order sort
3690 GOTO 3615
3695 RETURN 
4000 REM "Set invoice sort: H0=Primary key, H1,H2,H3 alternate keys
4005 SET_INVOICE_SORT:
4010 ON POS(UCS(STP(INVOICE_SORT$,2))="H0H1H2H3",2) GOTO 4040,4040,4015,4020,4025,4040
4015 INVOICE_SORT=1; GOTO 4441
4020 INVOICE_SORT=2; GOTO 4441
4025 INVOICE_SORT=3; GOTO 4441
4040 INVOICE_SORT=0; GOTO 4441
4041 INVOICE_SORT$="H"+STR(INVOICE_SORT:"0")
4045 RETURN 
7300 CHECK_INVOICE:
7305 REPORT$="Y"
7310 IF EC$[2](51,10)<>MID(INVNUMB$,1,10) THEN REPORT$="N"
7349 RETURN 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7550 REM "Send LINE$ to EC3BYB for generic fields processing
7560 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100
7595 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNR$(X$)=STR(10000000-NUM(STR(ASC(X$(1,1)))+X$(2)):"0000000")
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9005 GOSUB CLEAR_READONLY
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 GOSUB CLEAR_READONLY
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56001 REM "220527-Create new programs/pages to display cust info, open invoices
56002 REM "303115-FN%HTML_ESC$ additions in EC programs                       
