0010 REM "EC Coupon Function <EC3CPN>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 10/16/09 - 16.525833 - crg - SSP# 233319
0037 REM "233319-Allow cc orders to be paid with coupons * sales tax, freight
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3CPN",X1$="EC Coupon Function                     "
0120 EOL$=$0D0A$; REM EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0140 DIM MESS_INFO$[20]
0145 MASK1$="$#,###,###.00-"
0150 REM "EC$[1]=ESB session record, EC$[2]=client number        , ec$[3]=message from server to called program, EC$[4]=formatted date, EC$[5]=formatted time EC$[6]=ECA2$ available web catalogs (concatonated string) EC$[7]=customer webec parms (ECS)  EC$[8]=image path (customer if set otherwise from ec_parm) EC$[9]=ST_LIST sort code record EC$[10]=reporting whse list EC$[11]=(1,4)warehouse code to use for o/e FM2RT0  (5,4)=would contain the 'other'warehouse for availability checking o/e messaging <not passed to FM2RT0, EC$[12]=email params,see 8000s [13] UNUSED ,[14]=ECY$, [15]=inventory system parameters [16]=Credict Card code/desc list [17]=active webcode [18-20] unused                                                                 
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O EDX... 02O EDY... 03O EDZ... 04OSECD... 05OSECE... 06O FMP... 07O FM1... 08O IC0... 09OSEDZ... 10O ECR...  11O EDQ...  12O GRB...  13O ZZPARM"
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0535 READ (Z[13],KEY=X3$(9,3)+"I/C")ICPARM$
0540 DIM M6[1]; M6$="###,###.00-",M6[0]=621,M6[1]=2; IF ICPARM$(45,1)>"2" THEN DIM M6$(11,"0"); M6[1]=NUM(ICPARM$(45,1)),M6$(1,10-M6[1])="##########",M6$(POS("0"=M6$),1)=".",M6[0]=(10-M6[1])*100+M6[1]*10
0900 PRINT_DOC=0
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1025 SWITCH TAG$ ! 1185 end switch
1030 CASE "print_doc"; PRINT_DOC=1; BREAK
1035 CASE "template"; TEMPLATE$=VALUE$; BREAK
1040 CASE "use_coupon"; USE_COUPON=1; BREAK
1045 CASE "use_cc_coupon"; USE_COUPON=1,USE_CC_COUPON=1; BREAK ! 233319
1179 ! coupon_number
1180 DEFAULT ; VIA TAG$=VALUE$; BREAK ! Set to same name variable as TAG$
1185 END SWITCH ! 1050
1190 NEXT I
1195 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="177733.20050128",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1205 IF PRINT_DOC=0 THEN {! 1495 }
1210 ! perform any data creation function here - update a worksheet, etc
1215 ! Read in customer params based on Buyer Customer
1220 DIM EDX$:IOL(Z[1]); READ DATA FROM DIM(LEN(EDX$)),REC=EDX$ TO IOL=IOL(EDX$)
1225 FIND (Z[1],KEY=EC$[2](51,10),DOM=*NEXT,REC=EDX$)
1227 IF EDX.ALLOW_CC_COUPONS$<>"Y" THEN USE_CC_COUPON=0 ! 233319 - parameter disallows use of coupons for paying cc invoices
1230 ! Read in Buyer's balance
1235 DIM EDY$:IOL(Z[2]); READ DATA FROM DIM(LEN(EDY$)),REC=EDY$ TO IOL=IOL(EDY$)
1240 FIND (Z[2],KEY=EC$[2](1,15),DOM=*NEXT,REC=EDY$)
1245 ! If we have coupon_number use it, else get FIRST coupon for this buyer
1250 DIM EDZ$:IOL(Z[3]); READ DATA FROM DIM(LEN(EDZ$)),REC=EDZ$ TO IOL=IOL(EDZ$)
1254 ! if not given coupon number, find first unused coupon, else read with coupon number
1255 IF NUL(COUPON_NUMBER$) THEN {
1260 READ (Z[3],KEY=EC$[2](1,15),KNO=1,DOM=*NEXT)
1264 ! Read next EDZ record, is it for this buyer? if yes, has it been used (worksheet <> blank)?
1265 CHECK_NEXT_EDZ_RECORD: EDZ_KEY$=""; EDZ_KEY$=KEY(Z[3],END=*PROCEED); IF MID(EDZ_KEY$,1,15)=EC$[2](1,15) THEN {
1270 READ (Z[3],KEY=EDZ_KEY$,KNO=1,REC=EDZ$,DOM=*NEXT)
1275 IF NOT(NUL(EDZ.WORKSHEET$)) THEN GOTO CHECK_NEXT_EDZ_RECORD ! this one is used, look for the next one
1278 COUPON_NUMBER$=EDZ.COUPON_NUMBER$
1280  }
1285  } ELSE {
1290 READ (Z[3],KEY=COUPON_NUMBER$,KNO=0,REC=EDZ$,DOM=*NEXT)
1295  }
1300 ! Are they using the coupon?
1305 IF USE_COUPON THEN {
1310 IF NOT(NUL(EDZ.WORKSHEET$)) THEN COUPON_MESSAGE$="This coupon is already used on worksheet # "+EDZ.WORKSHEET$; GOTO USE_COUPON_DONE
1315 IF NOT(NUL(EDZ.ORDER_DIV$+EDZ.ORDER_NUM$)) THEN COUPON_MESSAGE$="This coupon is already used on Order "+FN%ZZDISP$(EDZ.ORDER_DIV$+EDZ.ORDER_NUM$,"O/P"); GOTO USE_COUPON_DONE
1320 IF EDZ.COUPON_AMOUNT<0 OR (EDZ.COUPON_AMOUNT=0 AND EDX.ALLOW_ZERO$<>"Y") THEN COUPON_MESSAGE$="There is not a coupon amount available to use"; GOTO USE_COUPON_DONE ! WO214047, only allow use of zero amount if customer parms says it's ok 
1325 IF NUL(EC$[1](97,10)) THEN COUPON_MESSAGE$="You do not have a shopping cart to apply the coupon to"; GOTO USE_COUPON_DONE
1330 ! Check worksheet amount, if 0 then don't use coupon
1335 GOSUB CALC_WORKSHEET_TOTAL; IF USE_CC_COUPON THEN GOSUB CALC_INVOICE_BALANCE; IF INVOICE_ERR THEN COUPON_MESSAGE$="An invoice balance could not be found for this worksheet"; GOTO USE_COUPON_DONE ! 233319
1340 IF NOT(USE_CC_COUPON) THEN IF WORKSHEET_TOTAL<=0 THEN COUPON_MESSAGE$="Worksheet total of "+STP(STR(WORKSHEET_TOTAL:MASK1$),2)+" is less than or equal to 0, so no coupon applied"; GOTO USE_COUPON_DONE ! 233319
1350 IF STP(EDZ.SECURE_CODES$,2)="" THEN GOTO *NEXT ELSE GOSUB CHECK_SECURE_CODES; IF SECURE_OK$="N" THEN COUPON_MESSAGE$="There are no eligible items on the worksheet for this coupon."; GOTO USE_COUPON_DONE ! WO214047, if this coupon has secure codes, we need to make sure at least one current worksheet line has an item with a matching secure code
1360 ! Add coupon to worksheet
1365 COUPON_MESSAGE$="Start Create Worksheet line from coupon: "+EDZ.COUPON_NUMBER$
1370 FIX_WORKSHEET_TOTAL=WORKSHEET_TOTAL; IF USE_CC_COUPON THEN FIX_WORKSHEET_TOTAL=INV_TOTAL END_IF ; IF FIX_WORKSHEET_TOTAL<=0 THEN GOTO USE_COUPON_DONE ! 233319
1375 GOSUB FIX_COUPON_AMOUNT
1380 GOSUB CREATE_WORKSHEET_LINE
1390 USE_COUPON_DONE:
1391 MOUT$="SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|CUSTOMER|"+FN%ZZDISP$(EC$[2](51,10),"A/R")+"|COUPON NUMBER|"+EDZ.COUPON_NUMBER$+"|COUPON AMOUNT|"+STP(STR(EDZ.COUPON_AMOUNT:MASK1$),2)+"|COUPON MESSAGE|"+COUPON_MESSAGE$+"|"; MX=FN%_LOG_MESSAGE("INFO",MOUT$)
1395  } ! use_coupon
1495  }
1502 ! put list of tags in DATA statement at line 2805 for PRINT_DOC processing
1503 ! status and status_msg are given as examples
1504 IF NOT(NUL(%BASIC2$)) THEN GOTO 2990 ! Skip outputting template if additional program to be done
1505 IF PRINT_DOC=0 THEN CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1510 IF PRINT_DOC THEN READ DATA LINE$,ERR=2950 ELSE READ (100,END=2950)LINE$; GOSUB BYB_PROCESSING
1515 PROCESS_LINE: CHKTAG=1 ! 231267
1520 WHILE CHKTAG ! 2800 wend
1522 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
1530 TAG$=LINE$(P1,MSL); LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
1600 SWITCH TAG$ ! 2790 end switch
1610 CASE "?tf?status?"
1615 IF PRINT_DOC THEN TAGDESC$="Status code, 0=ok"; GOSUB 5000 ELSE LINE$=LINE1$+STR(STATUS)+LINE2$
1619 BREAK
1620 CASE "?tf?status_msg?"
1625 IF PRINT_DOC THEN TAGDESC$="Status message relating to status code"; GOSUB 5000 ELSE LINE$=LINE1$+STR(STATUS_MSG$)+LINE2$
1629 BREAK
1630 CASE "?tf?coupon_number?"; N=FNN("Coupon number of the coupon",EDZ.COUPON_NUMBER$); BREAK
1635 CASE "?tf?coupon_buyer?"; N=FNN("Buyer Id on the coupon",EDZ.BUYER_ID$); BREAK
1645 CASE "?tf?coupon_customer?"; N=FNN("Customer code on the coupon",FN%ZZDISP$(EDZ.CUST_DIV$+EDZ.CUST_CODE$,"A/R")); BREAK
1650 CASE "?tf?date_issued?"; N=FNN("Date coupon was issued",FND$(EDZ.DATE_ISSUED$,"")); BREAK
1655 CASE "?tf?date_redeemed?"; N=FNN("Date coupon was redeemed on an order",FND$(EDZ.DATE_REDEEMED$,"")); BREAK
1660 CASE "?tf?coupon_worksheet?"; N=FNN("Worksheet that the coupon was used on",EDZ.WORKSHEET$); BREAK
1665 CASE "?tf?coupon_order?"; N=FNN("TopForm Order that the coupon was used on",FN%ZZDISP$(EDZ.ORDER_DIV$+EDZ.ORDER_NUM$,"O/P")); BREAK
1670 CASE "?tf?coupon_amount?"; N=FNN("Amount of the coupon",STP(STR(EDZ.COUPON_AMOUNT:MASK1$),2)); BREAK
1675 CASE "?tf?buyer_coupon_balance?"; N=FNN("Buyer's current balance toward the next coupon",STP(STR(EDY.PURCHASES:MASK1$),2)); BREAK
1680 CASE "?tf?trigger_amount?"; N=FNN("Amount needed to trigger the next coupon",STP(STR(EDX.TRIGGER_AMOUNT:MASK1$),2)); BREAK
1685 CASE "?tf?next_coupon_amount?"; N=FNN("The amount of discount the next coupon will be for",STP(STR(EDX.COUPON_AMOUNT:MASK1$),2)); BREAK
1690 CASE "?tf?coupon_message?"; N=FNN("Message generated when applying the coupon to a worksheet to let us know what happened",COUPON_MESSAGE$); BREAK
1695 CASE "?tf?coupon_list_start?"; IF PRINT_DOC THEN TAGDESC$="Coupon listing start tag, must have corresponding ?tf?coupon_list_end? tag to end section"; GOSUB 5000 ELSE GOSUB COUPON_LISTING; CL_MODE=0; END_IF ; BREAK ! 231267
2785 DEFAULT ; LINE$=LINE1$+LINE2$ ! didn't match existing tag, so remove it
2790 END SWITCH ! 1600
2800 WEND ! 1520
2805 DATA "?tf?status?","?tf?status_msg?","?tf?coupon_number?","?tf?coupon_buyer?","?tf?coupon_customer?","?tf?date_issued?","?tf?date_redeemed?","?tf?coupon_worksheet?","?tf?coupon_order?","?tf?coupon_amount?","?tf?buyer_coupon_balance?","?tf?trigger_amount?","?tf?next_coupon_amount?","?tf?coupon_message?","?tf?coupon_list_start?" ! 231267
2810 IF LINE$<>"" THEN PRINT (OUTPUT)LINE$
2900 IF CL_MODE THEN GOTO *RETURN ELSE GOTO 1510; REM next read  ! 231267 - Return to 5200s if in CALL'ed mode
2990 GOTO 9900
5000 REM print tag desc html         
5010 LINE$=TAG$+" "+TAGDESC$
5090 RETURN 
5100 ADD_MSG_TO_LOG:! Add message to log file
5105 ! Add other info as needed here
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
5200 REM "231267 - Coupon listing for buyer, only available coupons will be listed, upto a max of MAX_COUPONS
5210 COUPON_LISTING:
5220 CL_MODE=1,MAX_COUPONS=1000,CL_COUNT=0,CL_TEMPLATE$=LINE2$,LINE2$=""
5225 PRINT (OUTPUT)LINE1$
5230 READ (100,END=CL_DONE)CL_LINE$; CL1=MSK(CL_LINE$,"\?tf\?coupon_list_end\?"); IF CL1=0 THEN CL_TEMPLATE$=CL_TEMPLATE$+CL_LINE$; GOTO *SAME ELSE TAG$=CL_LINE$(CL1,MSL); CL_LINE1$=CL_LINE$(1,CL1-1),CL_LINE2$=MID(CL_LINE$,CL1+MSL); CL_TEMPLATE$=CL_TEMPLATE$+CL_LINE1$
5240 ! Start filling out the template section with coupon info
5250 READ (Z[3],KEY=EC$[2](1,15),KNO=1,DOM=*NEXT)
5260 ! Read next EDZ record, is it for this buyer? if yes, has it been used (worksheet <> blank)?
5270 GET_NEXT_COUPON: EDZ_KEY$=""; EDZ_KEY$=KEY(Z[3],END=*PROCEED)
5280 IF MID(EDZ_KEY$,1,15)=EC$[2](1,15) AND CL_COUNT<MAX_COUPONS THEN {
5290 READ (Z[3],KEY=EDZ_KEY$,KNO=1,REC=EDZ$,DOM=*NEXT)
5300 IF NOT(NUL(EDZ.WORKSHEET$)) THEN GOTO GET_NEXT_COUPON ! this one is used, look for the next one
5310 LINE$=CL_TEMPLATE$; GOSUB PROCESS_LINE
5320 CL_COUNT++; GOTO GET_NEXT_COUPON ! Repeat for next coupon, increment counter to detect if MAX_COUPONS limit reached
5330  }
5340 CL_DONE: CL_MODE=0; LINE2$=CL_LINE2$; PRINT (OUTPUT)LINE2$; LINE$=""
5345 RETURN 
5349 ! ********************************************************
7500 CREATE_WORKSHEET_LINE:! Create line on worksheet for coupon
7505 DIM ECD$:IOL(Z[4]); READ DATA FROM DIM(LEN(ECD$)),REC=ECD$ TO IOL=IOL(ECD$); EXTRACT (Z[4],KEY=EC$[1](97,10),REC=ECD$,DOM=CWL_DONE)
7510 EXTRACT (Z[3],KEY=EDZ.COUPON_NUMBER$,KNO=0,REC=EDZ$,DOM=CWL_DONE)
7520 DIM FMPX$(61),FMPX[3]; FIND (Z[6],KEY="X"+EDX.SPECIAL_CHG_CODE$,DOM=CWL_DONE)FMPX$,FMPX[0],FMPX[1],FMPX[2],FMPX[3]
7550 DIM ECE$:IOL(Z[5]); READ DATA FROM DIM(LEN(ECE$)),REC=ECE$ TO IOL=IOL(ECE$)
7555 ECE.WORKSHEET_NO$=EC$[1](97,10),ECE.LINE_TYPE$="S",ECE.ITEM_CODE$=EDX.SPECIAL_CHG_CODE$
7560 ECE.ITEM_DESC$=FMPX$(12,40),ECE.UNIT_OF_MEAS$=FMPX$(55,4),ECE.QTY_PER_UNIT_MEAS=FMPX[0]
7561 TMP_POS=POS("#"=ECE.ITEM_DESC$); IF TMP_POS<>0 THEN ECE.ITEM_DESC$=PAD(MID(ECE.ITEM_DESC$,1,TMP_POS)+EDZ.COUPON_NUMBER$+MID(ECE.ITEM_DESC$,TMP_POS+1),40)
7562 ECE.PRINT_FLAGS$="SI"+DIM(3) ! 190124 Default to print on Sales order and Invoice, but not Packing list
7565 ECE.QUANTITY=1,ECE.LINE_UNIT_PRICE=-EDZ.COUPON_AMOUNT,ECE.LINE_UNIT_COST=FMPX[2]
7575 READ (Z[5],KEY=ECE.WORKSHEET_NO$+$FFFFFF$,DOM=7577)
7577 KEY_5$="",KEY_5$=KEP(Z[5],END=7579)
7579 IF KEY_5$="" OR MID(KEY_5$,1,10)<>ECE.WORKSHEET_NO$ THEN ECE.LINE_NUMBER$="001" ELSE ECE.LINE_NUMBER$=STR(NUM(KEY_5$(11,3))+1:"000")
7580 ECE_WRITE:WRITE (Z[5],KEY=ECE.WORKSHEET_NO$+ECE.LINE_NUMBER$,DOM=DUP_ECE,REC=ECE$)
7585 COUPON_MESSAGE$="Created line "+ECE.LINE_NUMBER$+" on worksheet "+ECE.WORKSHEET_NO$+" for "+STR(EDZ.COUPON_AMOUNT:MASK1$); IF POS(X3$(9,3)="092")>0 THEN COUPON_MESSAGE$="Coupon Applied." ! WO214047
7586 EDZ.WORKSHEET$=ECE.WORKSHEET_NO$; WRITE (Z[3],KEY=EDZ.COUPON_NUMBER$,REC=EDZ$)
7590 CWL_DONE:
7595 RETURN 
7599 ! ********************************************************
7600 FIX_COUPON_AMOUNT:! Get simple order total of the "net" total of the worksheet, If coupon amount is less than or equal, ok. If coupon amount is > total worksheet amount then create new coupon for the amount over and write out, and set current coupon equal to worksheet amount, then continue processing. 
7615 IF FIX_WORKSHEET_TOTAL<EDZ.COUPON_AMOUNT THEN {! 233319
7616 MOUT$="SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|CUSTOMER|"+FN%ZZDISP$(EC$[2](51,10),"A/R")+"|COUPON NUMBER|"+EDZ.COUPON_NUMBER$+"|COUPON AMOUNT|"+STP(STR(EDZ.COUPON_AMOUNT:MASK1$),2)+"|WORKSHEET|"+EC$[1](97,10)+"|FIX WORKSHEET TOTAL|"+STR(FIX_WORKSHEET_TOTAL:MASK1$)+"|SPLITTING COUPON|"; MX=FN%_LOG_MESSAGE("INFO",MOUT$) ! 233319
7620 DIM EDZ$:IOL(Z[3]); READ DATA FROM DIM(LEN(EDZ$)),REC=EDZ$ TO IOL=IOL(EDZ$)
7625 EXTRACT (Z[3],KEY=COUPON_NUMBER$,KNO=0,REC=EDZ$)
7630 DIM NEW_EDZ$:IOL(Z[3]); READ DATA FROM DIM(LEN(NEW_EDZ$)),REC=NEW_EDZ$ TO IOL=IOL(NEW_EDZ$)
7635 EXTRACT RECORD (Z[13],KEY=X3$(9,3)+"E/C",DOM=7645,ERR=7640)TMP_EC_PARM$; GOTO 7645
7640 IF ERR=0 THEN WAIT 1; GOTO 7635 ELSE GOTO 9000
7645 NEW_COUPON_NUMBER$=TMP_EC_PARM$(1138,10); TMP_EC_PARM$(1138,10)=FN%NEXT_SEQ$(TMP_EC_PARM$(1138,10),5); WRITE RECORD (Z[13],KEY=X3$(9,3)+"E/C")TMP_EC_PARM$
7650 NEW_EDZ.BUYER_ID$=EDZ.BUYER_ID$,NEW_EDZ.CUST_DIV$=EDZ.CUST_DIV$,NEW_EDZ.CUST_CODE$=EDZ.CUST_CODE$,NEW_EDZ.DATE_ISSUED$=EDZ.DATE_ISSUED$
7655 NEW_EDZ.COUPON_NUMBER$=NEW_COUPON_NUMBER$,NEW_EDZ.COUPON_AMOUNT=EDZ.COUPON_AMOUNT-FIX_WORKSHEET_TOTAL,NEW_EDZ.TRIGGER_AMOUNT=EDZ.TRIGGER_AMOUNT ! 233319
7660 NEW_EDZ.WORKSHEET$="",NEW_EDZ.ORDER_DIV$="",NEW_EDZ.ORDER_NUM$=""
7665 MOUT$="SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|CUSTOMER|"+FN%ZZDISP$(EC$[2](51,10),"A/R")+"|COUPON NUMBER|"+EDZ.COUPON_NUMBER$+"|COUPON AMOUNT|"+STP(STR(EDZ.COUPON_AMOUNT:MASK1$),2)+"|WORKSHEET|"+EC$[1](97,10)+"|FIX WORKSHEET TOTAL|"+STR(FIX_WORKSHEET_TOTAL:MASK1$)+"|SPLITTING COUPON|NEW COUPON NUMBER|"+NEW_EDZ.COUPON_NUMBER$+"|NEW COUPON AMOUNT|"+STR(NEW_EDZ.COUPON_AMOUNT:MASK1$)+"|"; MX=FN%_LOG_MESSAGE("INFO",MOUT$) ! 233319
7670 WRITE (Z[9],KEY=NEW_EDZ.COUPON_NUMBER$,REC=NEW_EDZ$)
7680 EDZ.COUPON_AMOUNT=FIX_WORKSHEET_TOTAL; WRITE (Z[3],KEY=EDZ.COUPON_NUMBER$,REC=EDZ$) ! 233319
7690  } ! fix total < coupon amount
7694 FCA_END:
7695 RETURN 
7699 ! ***************************************************************
7700 CHECK_SECURE_CODES:! WO214047, read through ECE for this worksheet and make sure at least one item has a matching secure code to those in the coupon record
7705 SECURE_OK$="N",SECURE_WK$=EC$[1](97,10)
7710 READ (Z[5],KEY=SECURE_WK$,DOM=*NEXT)
7715 NEXT_SEC_ECE: ECEKEY$=KEY(Z[5],END=CSC_DONE); READ (Z[5],KEY=ECEKEY$)SEC_ECE$
7720 IF SEC_ECE$(1,10)<>SECURE_WK$ THEN GOTO CSC_DONE
7725 IF POS(SEC_ECE$(28,1)="CI")=0 THEN GOTO NEXT_SEC_ECE
7730 READ (Z[10],KEY=SEC_ECE$(29,20),DOM=NEXT_SEC_ECE)ECR$
7735 IF ECR$(233,10)=DIM(10) THEN GOTO NEXT_SEC_ECE
7740 FOR ITEM_OK=0 TO 4
7745 TEMP$=ECR$(ITEM_OK*2+233,2); IF TEMP$=DIM(2) THEN GOTO 7755
7750 IF POS(TEMP$=EDZ.SECURE_CODES$,2)<>0 THEN SECURE_OK$="Y"; EXITTO CSC_DONE
7755 NEXT ITEM_OK
7760 IF EC_PARM$(554,1)<>"Y" THEN GOTO CSC_DONE ! Unlimited secure codes by item
7765 DIM EDQ$(1000); EDQ$(1,20)=ECR$(1,20),EDQ$(21,2)="01"; READ (Z[11],KEY=EDQ$(1,22),DOM=CSC_DONE)EDQ$
7770 CODES$=STP(EDQ$(23,978),3," "); IF CODES$="" THEN GOTO CSC_DONE
7775 FOR ITEM_OK=0 TO LEN(CODES$)/2-1; CURRCODE$=CODES$(ITEM_OK*2+1,2)
7780 IF POS(CURRCODE$=EDZ.SECURE_CODES$,2)<>0 THEN SECURE_OK$="Y"; EXITTO CSC_DONE
7785 NEXT ITEM_OK
7790 CSC_DONE:RETURN 
7795 ! 
8150 BYB_PROCESSING:! Send LINE$ to EC3BYB for generic fields processing
8160 CALL "EC3BYB",ERR=8161,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$
8195 RETURN 
8800 DUP_ECE:! line number is duplicated, update and try again
8805 ECE.LINE_NUMBER$=STR(NUM(ECE.LINE_NUMBER$)+1:"000"); GOTO ECE_WRITE
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8919 ! FNN - Normal tag processing with PRINT_DOC, LINE$, LINE1$, and LINE2$
8920 DEF FNN(LOCAL DESC$, LOCAL DATA$)
8925 IF PRINT_DOC THEN TAGDESC$=DESC$; GOSUB 5000 ELSE LINE$=LINE1$+DATA$+LINE2$
8930 RETURN 0
8950 ! FND$ - Standard date routine
8955 DEF FND$(LOCAL DATE_IN$, LOCAL SPECIAL_FORMAT$)
8960 LOCAL DATE_OUT$
8965 IF NUL(DATE_IN$) THEN DATE_OUT$="" ELSE IF NOT(NUL(SPECIAL_FORMAT$)) THEN DATE_OUT$=FN%FMT_TFDATE$(DATE_IN$,SPECIAL_FORMAT$) ELSE CALL "ZZDISP","DX",DATE_IN$,"",X3$,DATE_OUT$,"",0,0,X4$
8970 RETURN DATE_OUT$
8975 END DEF
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
10000 ADD_TO_BALANCE:! Given an ECD record, lookup the order and add the amount to the buyer's balance
10010 ENTER X3$,X4$,EC${ALL},ECD$
10015 DIM Z[NUM(X3$(60,3))]
10017 Z$="01O EDY... 02O FS1... 03O EDX... 04O EDZ... 13O ZZPARM "
10020 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 10021,9900
10023 DIM EDX$:IOL(Z[3]); READ DATA FROM DIM(LEN(EDX$)),REC=EDX$ TO IOL=IOL(EDX$)
10024 FIND (Z[3],KEY=MID(ECD$,26,10),DOM=ATB_DONE,REC=EDX$); IF EDX.DONT_TRIGGER$="Y" THEN GOTO ATB_DONE ! Is this customer doing it? WO214047, if customer is set to not trigger auto coupons, then get out
10025 DIM EDY$:IOL(Z[1]); READ DATA FROM DIM(LEN(EDY$)),REC=EDY$ TO IOL=IOL(EDY$)
10027 DIM FS1$:IOL(Z[2]); READ DATA FROM DIM(LEN(FS1$)),REC=FS1$ TO IOL=IOL(FS1$)
10030 FIND (Z[2],KEY=ECD$(235,8),DOM=ATB_DONE,REC=FS1$)
10050 EDY.BUYER_ID$=ECD$(11,15)
10055 EXTRACT (Z[1],KEY=ECD$(11,15),REC=EDY$,DOM=*NEXT)
10060 EDY.PURCHASES+=FS1.ORDER_AMT
10090 MASK1$="$#,###,###.00-"
10100 ! Check if exceeds trigger amount, if yes then create coupon
10104 CHECK_PURCHASE_AMOUNT:
10105 IF EDY.PURCHASES>=EDX.TRIGGER_AMOUNT THEN {
10110 EXTRACT RECORD (Z[13],KEY=X3$(9,3)+"E/C",DOM=10120,ERR=10115)TMP_EC_PARM$; GOTO 10120
10115 IF ERR=0 THEN WAIT 1; GOTO 10110 ELSE GOTO 9000
10120 COUPON_NUMBER$=TMP_EC_PARM$(1138,10); TMP_EC_PARM$(1138,10)=FN%NEXT_SEQ$(TMP_EC_PARM$(1138,10),5); WRITE RECORD (Z[13],KEY=X3$(9,3)+"E/C")TMP_EC_PARM$
10145 DIM EDZ$:IOL(Z[4]); READ DATA FROM DIM(LEN(EDZ$)),REC=EDZ$ TO IOL=IOL(EDZ$)
10150 EDZ.COUPON_NUMBER$=COUPON_NUMBER$,EDZ.BUYER_ID$=EDY.BUYER_ID$,EDZ.CUST_DIV$=EDX.CUST_DIV$,EDZ.CUST_CODE$=EDX.CUST_CODE$
10155 EDZ.DATE_ISSUED$=DTE(JUL(0,0,0):"YYYYMMDD"),EDZ.DATE_ISSUED$=CHR(NUM(EDZ.DATE_ISSUED$(1,3))-125)+EDZ.DATE_ISSUED$(4)
10160 EDZ.COUPON_AMOUNT=EDX.COUPON_AMOUNT,EDZ.TRIGGER_AMOUNT=EDX.TRIGGER_AMOUNT
10170 MOUT$="SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|CUSTOMER|"+FN%ZZDISP$(EC$[2](51,10),"A/R")+"|ORDER|"+FN%ZZDISP$(ECD$(235,8),"O/P")+"|ORDER AMOUNT|"+STP(STR(FS1.ORDER_AMT:MASK1$),2)+"|CURRENT BALANCE|"+STP(STR(EDY.PURCHASES:MASK1$),2)+"|TRIGGER AMOUNT|"+STP(STR(EDX.TRIGGER_AMOUNT:MASK1$),2)+"|COUPON NUMBER|"+EDZ.COUPON_NUMBER$+"|COUPON AMOUNT|"+STP(STR(EDZ.COUPON_AMOUNT:MASK1$),2)+"|BALANCE AFTER COUPON|"+STP(STR(EDY.PURCHASES-EDX.TRIGGER_AMOUNT:MASK1$),2)+"|"; MX=FN%_LOG_MESSAGE("INFO",MOUT$)
10175 WRITE (Z[4],KEY=EDZ.COUPON_NUMBER$,REC=EDZ$)
10180 EDY.PURCHASES=EDY.PURCHASES-EDX.TRIGGER_AMOUNT; WRITE LOCK (Z[1],KEY=ECD$(11,15),REC=EDY$) ! clear purchases bucket
10183 IF TMP_EC_PARM$(1177,1)="Y" THEN SID$=EC$[1](1,7) ELSE SID$=EC$[1](1213,64) ! SSP212160 jdf
10185 CALL "EC3EMA",X3$,X4$,"*",EC$[1](8,15),"","EC3CPE","",EC$[14](1,15),"session_id="+SID$+"|coupon_number="+EDZ.COUPON_NUMBER$+"|remove_file=Y|no_header=Y|",RETURN_CODE ! SSP212160 jdf
10189 GOTO CHECK_PURCHASE_AMOUNT ! is there enough more to create another coupon
10190  } ELSE {
10191 MOUT$="SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|CUSTOMER|"+FN%ZZDISP$(EC$[2](51,10),"A/R")+"|ORDER|"+FN%ZZDISP$(ECD$(235,8),"O/P")+"|ORDER AMOUNT|"+STP(STR(FS1.ORDER_AMT:MASK1$),2)+"|CURRENT BALANCE|"+STP(STR(EDY.PURCHASES:MASK1$),2)+"|"; MX=FN%_LOG_MESSAGE("INFO",MOUT$)
10192 WRITE (Z[1],KEY=ECD$(11,15),REC=EDY$)
10195  }
10285 ATB_DONE:
10290 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
10295 EXIT 
10299 ! ****************************************
10300 UPDATE_COUPONS:! After the order is done, update any coupons from the worksheet with redeemed date and order #
10310 ENTER X3$,X4$,EC${ALL},ECD$
10315 DIM Z[NUM(X3$(60,3))]
10320 Z$="01O EDZ... 02OSEDZ... 13O ZZPARM "
10325 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 10326,9900
10400 SELECT *,REC=EDZ$ FROM Z[1],KNO=3 BEGIN ECD$(1,10) END ECD$(1,10)
10420 EXTRACT (Z[2],KEY=KEC(Z[1],KNO=0),DOM=NEXT_COUPON,REC=EDZU$)
10425 EDZU.ORDER_DIV$=ECD$(235,2),EDZU.ORDER_NUM$=ECD$(237,6)
10430 EDZU.DATE_REDEEMED$=DTE(JUL(0,0,0):"YYYYMMDD"),EDZU.DATE_REDEEMED$=CHR(NUM(EDZU.DATE_REDEEMED$(1,3))-125)+EDZU.DATE_REDEEMED$(4)
10465 WRITE (Z[2],KEY=KEC(Z[1],KNO=0),REC=EDZU$)
10475 MOUT$="UPDATE COUPON WITH ORDER INFO|SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|CUSTOMER|"+FN%ZZDISP$(EC$[2](51,10),"A/R")+"|ORDER|"+FN%ZZDISP$(ECD$(235,8),"O/P")+"|COUPON NUMBER|"+EDZU.COUPON_NUMBER$+"|"; MX=FN%_LOG_MESSAGE("INFO",MOUT$)
10480 NEXT_COUPON:
10485 NEXT RECORD 
10580 UC_DONE:
10590 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
10595 EXIT 
10599 ! *******************************************************
11000 CALC_WORKSHEET_TOTAL:! Given TOTAL_WORKSHEET # in EC$[1](97,10) get WORKSHEET_TOTAL using simple order totaling type logic
11005 TOTAL_WORKSHEET$=EC$[1](97,10),WORKSHEET_TOTAL=0; DIM ECE[8],IC0[40],FM1[31]
11010 IOLIST ECD$,ECD2$
11015 IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
11020 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
11025 IOLIST FM1$(1),FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
11040 READ (Z[4],KEY=TOTAL_WORKSHEET$,DOM=DONE_WITH_TOTAL)IOL=11010
11045 READ (Z[5],KEY=TOTAL_WORKSHEET$,DOM=*NEXT)
11050 WHILE 1 ! get ECE records & process each one
11055 READ (Z[5],END=*BREAK)IOL=11015; IF ECE$(1,10)<>TOTAL_WORKSHEET$ THEN BREAK
11100 REM "get fm1 record -EC3WS1 8246-8248
11105 DIM FM1$(449),FM1(31); READ (Z[7],KEY=ECE$(29,20),DOM=*NEXT)IOL=11025; IF EC$[7](598,1)="Y" THEN FM1(29)=FM1(3); GOTO GOT_FM1 ELSE GOTO GOT_FM1; REM "162539
11110 STOCK$="N"; READ (Z[7],KEY=EC$[2](51,10)+ECE$(39,10),DOM=*NEXT)IOL=11025; IF FM1$(105,1)="Y" THEN STOCK$="Y" ! SSP170971
11113 GOT_FM1:
11120 ! EC3WS1 7880 - 7899
11125 REM "item_price 162539
11130 RETURNED_PRICE$=""; IF EC$[2](322,1)="Y" THEN GOTO ITEM_PRICE_SET; REM "153032
11135 IF ECE$(18,1)="O" THEN DIM I[30]; REQ_DATE$=ECD$(58,6); IF STP(REQ_DATE$,3)="" THEN REQ_DATE$=X3$(15,6) END_IF ; CALL "OS2OBC",X3$,X4$,ECE$(39,10),I{ALL},ECD$(26,10)+DIM(5)+REQ_DATE$,"EC3WS1",RETURNED_PRICE,"",COST,ECE[0]; GOTO 11165
11140 IF ECE$(28,1)="S" THEN RETURNED_PRICE$=STR(ECE[2]:"###,###.00"); ITEM_PRICE=ECE[2]; ECE[3]=EDV_COST; GOTO ITEM_PRICE_SET
11145 IF STOCK$="Y" OR (FM1[29]=0 AND FM1[3]=0) THEN GOTO 11150 ELSE GOTO 11160 ! SSP170941
11150 GOSUB SET_READONLY; DIM IC0$(187),IC0[40]; FIND (Z[8],KEY=ECE$(29,20),DOM=*NEXT)IOL=11020; GOSUB CLEAR_READONLY; ITEM_PRICE=IC0[0]; RETURNED_PRICE$=STR(ITEM_PRICE:X3$(69,1)+"###,###.00"); GOTO 11168 ! SSP170971, price from item master
11155 GOSUB CLEAR_READONLY
11160 IF FM1(29)=0 THEN BASE_PRICE=FM1(3) ELSE BASE_PRICE=FM1(29) END_IF ; IF FM1[25]=0 THEN ITEM_PRICE=BASE_PRICE ELSE IF BASE_PRICE=0 OR FM1[4]=0 THEN ITEM_PRICE=0 ELSE ITEM_PRICE=BASE_PRICE*FM1[25]/FM1[4] END_IF END_IF ; RETURNED_PRICE$=STR(ITEM_PRICE:X3$(69,1)+"###,###.00"); GOTO 11168; REM "item_price, calculated from fms or sell price, sell u/m and alt iss #1 um. SSP182135, was checking if FM1[3]=0 and setting to 0, changed to if BASE_PRICE is 0, then set to 0.
11165 IF ECE$(18,1)="O" THEN RETURNED_PRICE$=STR(RETURNED_PRICE:"###,###.00"); ITEM_PRICE=RETURNED_PRICE; ECE[2]=RETURNED_PRICE
11180 IF ECE$(18,1)<>"O" AND POS(ECE$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB DO_QTY_BREAK_PRICE
11190 ITEM_PRICE_SET:
11200 ! EC3WS1 - 7350-7399
11205 ! If parm says so then don't extend item_price_ext for M/1000, SSP166123
11210 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4) ! SSP167126
11215 ITEMPRICEEXT=ITEM_PRICE*ECE[0]
11220 IF ECE$(107,4)<>THOUSANDS$ THEN GOTO THOUSAND_CALC_DONE
11225 IF (EC_PARM$(948,1)<>"Y" AND ECE$(299,1)=" ") OR ECE$(299,1)="Y" THEN GOTO THOUSAND_CALC_DONE ! SSP224623, changed EDO$ to ECE$
11230 ITEMPRICEEXT=ITEM_PRICE*ECE[0]/1000
11235 THOUSAND_CALC_DONE:
11300 ! add to total
11305 WORKSHEET_TOTAL+=ITEMPRICEEXT
11445 WEND 
11450 DONE_WITH_TOTAL:
11495 RETURN 
11499 ! **************************************************
11500 SET_READONLY:
11505 SET_PARAM 'XI'
11510 SET_READONLY_END:RETURN 
11515 CLEAR_READONLY:
11520 SET_PARAM -'XI'
11525 CLEAR_READONLY_END:RETURN 
11600 DO_QTY_BREAK_PRICE:! WO185477, get sell price by checking for quantity breaks and pricing tables
11605 GOSUB SET_READONLY; DIM AR1$(599); READ (33007,KEY=EC$[2](51,10),DOM=*NEXT)AR1$
11610 DIM IC0$(187),IC0[40]; FIND (Z[8],KEY=ECE$(29,20),DOM=*NEXT)IOL=11715; GOSUB CLEAR_READONLY; GOTO 11620
11615 GOSUB CLEAR_READONLY; GOTO *RETURN ! No IC0 record for this item
11620 PRECISION M6[1]
11625 DIM P[12,1]; P[0,1]=IC0[0]
11630 FOR I=1 TO 6; P[I,0]=IC0[1+(I-1)*2],P[I,1]=IC0[2+(I-1)*2],P[I+6,0]=IC0[21+(I-1)*2],P[I+6,1]=IC0[22+(I-1)*2]; NEXT I
11635 IF POS(" "<>IC0$(109,3)+AR1$(398,3))>0 THEN X$=$7E$+IC0$(109,3)+AR1$(398,3)+IC0$(1,20); DIM Q[35]; CALL "IC2ICF",X3$,Z[9],X$,ECE[1],IC0[15],IC0[14],IC0[0],IC0[18],IC0[17],IC0[20],Q{ALL} ! Pricing table calculation
11640 PRECISION 2
11645 IF X$="" THEN GOTO 11660
11650 DIM P[12,1]; P[0,1]=Q[0]
11655 FOR I=0 TO 11; P[I+1,0]=Q[I*2+1],P[I+1,1]=Q[I*2+2]; NEXT I
11660 ! Calculate price
11665 PRECISION M6[1]
11670 CALC_ITEM_PRICE=P[0,1]*ECE[1]/IC0[14]; IF P[1,0]=0 THEN GOTO 11700
11675 GOSUB 11750 ! Calculate QTY_IN_EACHES
11680 FOR I=1 TO 12
11685 IF ABS(QTY_IN_EACHES)<P[I,0] THEN I=99; GOTO 11695
11690 IF P[I,0]<>0 THEN CALC_ITEM_PRICE=P[I,1]*ECE[1]/IC0[14]
11695 NEXT I
11700 PRECISION 2
11705 RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
11710 RETURN 
11715 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
11749 ! **********************************************
11750 ! If parm says so then don't extend quantity in eaches for M/1000, SSP166123                                                                        
11755 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4) ! SSP167126
11760 QTY_IN_EACHES=ECE[0]*ECE[1]
11765 IF ECE$(107,4)<>THOUSANDS$ THEN GOTO *RETURN
11770 IF (EC_PARM$(948,1)<>"Y" AND ECE$(299,1)=" ") OR ECE$(299,1)="Y" THEN GOTO *RETURN ! SSP224623, changed EDO$ to ECE$
11775 QTY_IN_EACHES=ECE[0]
11795 RETURN 
11799 ! *************************************
11800 ! Get temporary invoice balance, if being asked to pay it using coupons - 233319
11805 CALC_INVOICE_BALANCE:
11810 IOL_GRB:IOLIST GRB$,GRB(0),GRB(1),GRB(2),GRB(3),GRB(4),GRB(5),GRB(6),GRB(7),GRB(8),GRB(9),GRB(10),GRB(11),GRB(12),GRB(13),GRB(14),GRB(15),GRB(16),GRB(17),GRB(18),GRB(19),GRB(20)
11820 DIM ECD$:IOL(Z[4]); READ DATA FROM DIM(LEN(ECD$)),REC=ECD$ TO IOL=IOL(ECD$); READ (Z[4],KEY=EC$[1](97,10),REC=ECD$,DOM=ERR_NO_REC)
11830 DIM GRB$(500),GRB(20); FIND (Z[12],KEY=ECD.INV_HDR_KEY$,DOM=ERR_NO_REC)IOL=IOL_GRB
11840 INV_TAX=GRB(4)+GRB(6)+GRB(8),INV_FREIGHT=GRB(2),INV_TOTAL=GRB(9); REM "invoice_sales_tax, invoice_freight, invoice_total
11850 CIB_RETURN:
11890 RETURN 
11895 ERR_NO_REC:
11896 INVOICE_ERR=1; COUPON_MESSAGE$="Missing worksheet or invoice record"; GOTO CIB_RETURN
11899 ! **************************************************
15000 DELETE_FROM_WORKSHEET:! Given a worksheet # delete all associated coupons by clearing the worksheet number
15005 SETERR DFW_END
15010 ENTER X3$,X4$,WORKSHEET$
15015 DIM Z[NUM(X3$(60,3))]
15020 Z$="01O EDZ... 02OSEDZ... 13O ZZPARM "
15025 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO *NEXT,DFW_END
15030 SELECT *,REC=EDZ$ FROM Z[1],KNO=3 BEGIN WORKSHEET$ END WORKSHEET$
15040 EXTRACT (Z[2],KEY=KEC(Z[1],KNO=0),DOM=NEXT_COUPON_TO_CHECK,REC=EDZU$)
15045 EDZU.ORDER_DIV$="",EDZU.ORDER_NUM$="",EDZU.WORKSHEET$=""
15065 WRITE (Z[2],KEY=KEC(Z[1],KNO=0),REC=EDZU$)
15070 MOUT$="REMOVE COUPON FROM WORKSHEET|WORKSHEET|"+WORKSHEET$+"|COUPON NUMBER|"+EDZU.COUPON_NUMBER$+"|"; MX=FN%_LOG_MESSAGE("INFO",MOUT$)
15080 NEXT_COUPON_TO_CHECK:
15085 NEXT RECORD 
15089 DFW_END:
15090 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
15095 EXIT 
15099 ! ****************************************************************
16000 ELIGIBLE_COUPON_CHECK:! WO214910, check for an eligible coupon, including check secure code logic added for WO214047
16005 SETERR ECC_DONE
16010 ENTER X3$,X4$,EC${ALL},ELIGIBLE_COUPON$
16015 DIM Z[NUM(X3$(60,3))]
16020 Z$="03O EDZ... 05O ECE... 10O ECR... 11O EDQ... "
16025 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO *NEXT,ECC_DONE
16030 ELIGIBLE_COUPON$="N"
16035 DIM EDZ$:IOL(Z[3]); READ DATA FROM DIM(LEN(EDZ$)),REC=EDZ$ TO IOL=IOL(EDZ$)
16040 READ (Z[3],KEY=EC$[2](1,15),KNO=1,DOM=*NEXT)
16045 NEXT_EDZ_RECORD: EDZ_KEY$=KEY(Z[3],END=ECC_DONE); IF EDZ_KEY$(1,15)<>EC$[2](1,15) THEN GOTO ECC_DONE ELSE READ (Z[3],KEY=EDZ_KEY$,KNO=1,REC=EDZ$)
16050 IF EDZ.WORKSHEET$<>DIM(10) THEN GOTO NEXT_EDZ_RECORD
16055 IF STP(EDZ.SECURE_CODES$,2)="" THEN ELIGIBLE_COUPON$="Y"; GOTO ECC_DONE
16060 IF STP(EC$[1](97,10),2)="" THEN GOTO NEXT_EDZ_RECORD
16065 GOSUB CHECK_SECURE_CODES
16070 IF SECURE_OK$="Y" THEN ELIGIBLE_COUPON$="Y"; GOTO ECC_DONE ELSE GOTO NEXT_EDZ_RECORD
16075 ! 
16080 ECC_DONE:
16085 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
16090 EXIT 
16095 ! 
56000 REM "193685-XML orders coming in from Printegra are multiplying by 1000,
56002 REM "201193-Questions about security of Boars Head EC Promo site.       
56004 REM "212160-Webec is down.  Cannot use 64 character session id          
56006 REM "214047-Modify EC Coupon Processing, allow zero value coupons, tie
56008 REM "214910-Additional to WO214047; Add a tag that will display when
56010 REM "224623-Error in EC using a coupon (047-EC3CPN-11770)
56011 REM "231267-Modify the EC coupon listing, add tags to allow more display
56012 REM "233319-Allow cc orders to be paid with coupons * sales tax, freight
