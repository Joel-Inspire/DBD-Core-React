0010 REM "Catalog Load Utiltiy <EC3UT3>"
0011 REM "version 51.020729
0012 REM "ssp 149241 - product code mapping
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 04/04/13 - 16.291666 - tma - SSP# 262375
0037 REM "262375-EC3UT3.  Change form to item                                
0040 REM "Copyright 2013 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="EC3UT3",X1$="Catalog Load Utility",K9$="",K9=0 ! SSP221193
0120 DIM Z0$(80,"-")
0130 K0=9,K1=1
0135 C9=-1,V9=-2
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$(1); REM "ssp #143713, 143715
0380 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0390 IOLIST EE1$,EE1_2$
0410 IOLIST IC1$,IC1[0],IC1[1],IC1[2],IC1[3],IC1[4],IC1[5],IC1[6],IC1[7],IC1[8],IC1[9],IC1[10],IC1[11],IC1[12],IC1[13],IC1[14],IC1[15],IC1[16],IC1[17],IC1[18],IC1[19],IC1[20]
0460 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0470 IOLIST EDK$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ECQ...  02O AR1...  03O FM0...  04O FTD...  05O FMP...  06O ECG...  07O ECH...  08O FM1...  09O FM4...  10O ECR...  11O IC1...  12O ECI...  13O ZZPARM  14O EDA...  15O EDH...  16O IC0...  17O EDK...  18O EDR...  19O EE1...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "
0605 FFROW$="141414141414151515151515161616161616",FFCOL$="001326395265001326395265001326395265"
0610 READ (Z[13],KEY=X3$(9,3)+"E/C")EC_PARM$
0620 GOSUB 6000
0700 REM "Check for existing entries
0710 K$=KEY(Z[1],END=0800)
0800 REM "Get needed system parameters
0810 FIND (Z[13],KEY=X3$(9,3)+"F/M")OPPARM$
1000 REM "
1010 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1030 DIM B$(100),B0$(100),C$(100),C0$(100),D$(100),D0$(100),D8$(40),D9$(40),IC0[40]
1035 DIM A$(511),A[1],BLANKS$(100)
1040 IF V9<>-1 THEN GOSUB 6900
1045 A$(1,0+K9)=K9$+A1$
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 5000
1140 ON X0 GOTO 1200,1500
1200 REM "Catalog ID
1205 X$="Use F1-F3 report option to obtain printout prior to updating"
1210 CALL "ZZENTR","SZXU",A{ALL},A$,X4$,X3$,17,3,1,10,C0,"","{1"+X$,"","AR2UTZ00","EDA","EC3MCC",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 1210,1211
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,5000,6970
1220 GOSUB 6200
1230 FIND (Z[14],KEY=A$(1,10),DOM=1200)
1240 GOTO 1120
1250 REM "future use (possibly tying to customer shipto)
1255 X$="Enter the current catalog category where items are setup"
1260 CALL "ZZENTR","SUZX",A{ALL},A$,X4$,X3$,17,4,11,10,C0,"","{1"+X$,A$(1,10),"AR2UTZ02","ECH","",""; IF ABS(C0)>4 THEN GOSUB 6400
1262 FIND (Z[3],KEY=A$(11,10),DOM=1250)ECGREC$; PRINT @(28,4),ECGREC$(11,30),
1265 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1266,6800,5000,6970
1290 GOTO 1120
1500 REM "
1505 Z9=-1
1510 A1$=A$(1,10)
1520 READ (Z[1],KEY=A1$,DOM=1600)IOL=0310; TYPE$="ACCESS"; GOSUB LOG_ACTIVITY
1525 Z9=0
1530 GOSUB 6600
1590 GOTO 1700
1600 REM "
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630,6975
1630 GOTO 1000
1650 TYPE$="NEW"; GOSUB LOG_ACTIVITY; GOSUB 8200; REM "copy option
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1810 IF POS(A$(44,1)="BC")<>0 THEN CALL "ZZPROM",".4",X3$,Z,"WARNING: Catalog loading instructions direct EC item parms to be cleared!","","",0 ! SSP221993
1820 CALL "ZZPROM","X0EC3UT3",X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,6700,6700,6800,6800,8350,6700,6800
1830 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 EXTRACT (Z[1],KEY=A1$,DOM=1870)IOL=0310
1865 C9=1
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 C9=1,X$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2035 IF X0*6+11<LEN(V9$) THEN IF V9$(X0*6+11,1)="2" THEN GOTO 2020
2040 ON X0 GOTO 2550,3450,3500,3550,3600,2100,2600,3000,3050,2150,2200,2250,2300,3100,3150,3200,3250,3400,2350,3300,3350,2500,2650,2700,2750,2800,2850,2900,2950,1800; REM "160771
2100 REM "Catalog source
2101 IF EDA$(41,1)="S" THEN VALIDS$="PE",X$="P-product code  E-item E/C Parms"; GOTO 2103
2102 VALIDS$="PFRE",X$="P=product code  F=function field  R=reorder group code  E=Item E/C Parms"
2110 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,18,6,15,1,C0,"","{3"+X$,"","AR2UTZ04","","",""; IF POS(A$(15,1)=VALIDS$)=0 THEN GOTO 2100
2140 GOTO 2020
2150 REM "FILTER: only load if CIC code set
2151 IF EDA$(41,1)="S" THEN GOTO 2190
2152 X$="Y will only load items that have a CIC code entered"
2160 CALL "ZZENTR","YU",A{ALL},A$,X4$,X3$,53,8,16,1,C0,"","{3"+X$,"","AR2UTZ06","","",""
2190 GOTO 2020
2200 REM "FILTER: only load if IMS?
2201 IF EDA$(41,1)="S" THEN GOTO 2240
2202 X$="Y will exclude non-IMS items" ! SSP#230758
2210 CALL "ZZENTR","YU",A{ALL},A$,X4$,X3$,53,9,17,1,C0,"","{3"+X$,"","AR2UTZ06","","",""
2240 GOTO 2020
2250 REM "FILTER: only load if IMS price is set!SSP#230758
2251 IF EDA$(41,1)="S" THEN GOTO 2290
2252 X$="Y will only load items whose IMS price is not zero" ! SSP#230758
2260 CALL "ZZENTR","YU",A{ALL},A$,X4$,X3$,53,10,18,1,C0,"","{3"+X$,"","AR2UTZ06","","",""
2290 GOTO 2020
2300 REM "FILTER: function field
2301 IF EDA$(41,1)="S" THEN A$(43,1)=" ",A$(116,48)=DIM(48); GOSUB 6200; GOTO 2340
2302 X$="Y=only load custom item if NOT blan   X=exclude from loading values listed"
2303 IF A$(43,1)=" " THEN A$(43,1)="N"
2310 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,53,11,43,1,C0,"","{3"+X$,"","AR2UTZ06","","",""
2320 IF POS(A$(43,1)="YNX")=0 THEN GOTO 2300
2340 GOTO 2020
2350 REM "FILTER: only load inventoried forms
2351 IF A$(108,1)=" " THEN A$(108,1)="N"
2352 X$="A=Items with whse recs  B=Only if On-Hand is > zero  N=ignore option"
2360 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,53,12,108,1,C0,"##0","{3"+X$,"","AR2UTZ06","","",""
2362 IF POS(A$(108,1)="ABN")=0 THEN GOTO 2350
2390 GOTO 2020
2400 REM "FILTER:  only load forms active at this customer ship-to location
2401 IF FMPD$(24,1)<>"Y" THEN PRINT @(53,13),'SB',"Client not on IMS",'SF',; GOTO 2440 ! SSP#230758
2402 X$="if ship-to entered - only items having screen 8 entry will be setup"
2410 CALL "ZZENTR","SZ",A{ALL},A$,X4$,X3$,53,13,19,4,C0,"","{3"+X$,"C"+A$(1,10),"AR2UTZ06","FM0","",""; IF ABS(C0)>4 THEN GOSUB 6400
2412 IF STP(A$(19,4),3," ")="" THEN GOTO 2440
2414 FIND (Z[3],KEY="C"+A$(1,10)+A$(19,4),DOM=2400)FM0$
2416 PRINT @(5,18),'CL',FM0$(15,35),
2440 GOTO 2020
2450 REM "FILTER:  only load forms active at this receiving dept
2451 IF OPPARM$(250,1)<>"Y" THEN PRINT @(53,14),'SB',"Recvg dept not activated",'SF',; GOTO 2490; REM "billing/recvg dept not activated
2452 IF STP(A$(19,4),3," ")="" THEN GOTO 2460
2454 A$(23,20)=BLANKS$(1,20); GOSUB 6200; GOTO 2490
2460 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,53,14,23,20,C0,"","{3"+X$,"","AR2UTZ06","","",""
2462 IF STP(A$(23,20),3," ")="" THEN GOTO 2490
2463 IF OPPARM$(279,1)<>"Y" THEN GOTO 2490; REM "if recvg dept not required to be unique then file not available for checking
2464 READ (Z[4],KEY="C"+A$(1,10)+A$(23,20),DOM=2465)
2466 RDKEY$=KEY(Z[4],END=2470); IF RDKEY$(12,20)=A$(23,20) THEN GOTO 2480
2470 CALL "ZZPROM",".Y",X3$,Z,"NOTE: no reference of this receiving dept found for this customer - Accept?","","",0; ON Z GOTO 2472,2450
2490 GOTO 2020
2500 REM "clear existing catalog
2502 X$="A=clear catalog ONLY  B=clear item parms ONLY   C=clear both  N=no clearing"
2510 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,23,17,44,1,C0,"","{3"+X$,"","AR2UTZ06","","",""
2512 IF POS(A$(44,1)="NABC")=0 THEN GOTO 2500
2514 IF A$(15,1)="E" THEN IF POS(A$(44,1)="BC")<>0 THEN PRINT @(0,22),'CE','RB',"Option not allowed with loading of category from item parameters <Ret> ",; INPUT (0,LEN=1)*,; PRINT @(0,22),; GOTO 2500
2524 IF POS(A$(44,1)="BC")<>0 THEN CALL "ZZPROM",".Y",X3$,Z,"Accept setting which will cause clearing of EC item parameters","","",0; ON Z GOTO 2525,2500; REM "158857, SSP221193
2540 GOTO 2020
2550 REM "Source customer code
2551 IF EDA$(41,1)="S" THEN A$(45,10)=DIM(10); GOSUB 6200; GOTO 2540
2552 IF STP(A$(45,10),3," ")="" THEN A$(45,10)=A$(1,10); GOSUB 6200
2553 FIND (Z[2],KEY=A$(45,10),DOM=2554); GOTO 2555
2554 A$(45,10)=DIM(10); REM "customer does not match catalog id so clear
2560 CALL "ZZENTR","AUZ",A{ALL},A$,X4$,X3$,17,4,45,10,C0,"A/R","{3"+X$,"","AR2UTZ06","AR1","",""
2562 FIND (Z[2],KEY=A$(45,10),DOM=2550)AR1$; IF EC_PARM$(949,1)<>"Y" THEN PRINT @(28,4),'CL',AR1$(11,35), ELSE PRINT @(0,22),'CL',AR1$(11,35),; REM "160771
2563 CALL "ZZDISP","A",A$(45,10),"A/R",X3$,"","",17,4,X4$
2564 DIM FMPD$(300); FIND (Z[5],KEY="D"+A$(45,10),DOM=2565)FMPD$
2590 GOTO 2020
2600 REM "catalog item code source
2601 IF EDA$(41,1)="S" THEN A$(55,1)=" "; GOSUB 6200; GOTO 2640
2602 X$="F=item code  C=CIC code  G=function field (use ?tf?item_code? on catalog page)"
2610 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,51,6,55,1,C0,"","{3"+X$,"","AR2UTZ06","","",""
2612 IF POS(A$(55,1)="FCGI")=0 THEN GOTO 2600
2640 GOTO 2020
2650 REM 'OVERRITE EXISTING CATALOG ENTRY
2651 IF A$(56,1)=" " THEN A$(56,1)="Y"; REM "set default overwrite to Y
2660 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,55,17,56,1,C0,"","{3"+X$,"","AR2UTZ06","ECH","",""
2690 GOTO 2020
2700 REM "image format
2702 X$="C=cust cd (raw)+item  D=cust cd(formatted)+item  F=item code  N=no loading"
2710 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,79,17,57,1,C0,"","{3"+X$,"","AR2UTZ06","ECH","",""
2712 IF POS(A$(57,1)="CDFN")=0 THEN GOTO 2700
2740 GOTO 2020
2750 REM "image 1 suffix
2755 IF STP(A$(58,10),3," ")="" THEN A$(58,10)=EC_PARM$(441,10)
2760 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,14,18,58,10,C0,"","{3"+X$,"","AR2UTZ06","ECH","",""
2790 GOTO 2020
2800 REM "image 2 suffix
2805 IF STP(A$(68,10),3," ")="" THEN A$(68,10)=EC_PARM$(451,10)
2810 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,14,19,68,10,C0,"","{3"+X$,"","AR2UTZ06","ECH","",""
2840 GOTO 2020
2850 REM "image 3 suffix
2855 IF STP(A$(78,10),3," ")="" THEN A$(78,10)=EC_PARM$(461,10)
2860 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,39,18,78,10,C0,"","{3"+X$,"","AR2UTZ06","ECH","",""
2890 GOTO 2020
2900 REM "image 4 suffix
2905 IF STP(A$(88,10),3," ")="" THEN A$(88,10)=EC_PARM$(471,10)
2910 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,39,19,88,10,C0,"","{3"+X$,"","AR2UTZ06","ECH","",""
2940 GOTO 2020
2950 REM "image 5 suffix
2955 IF STP(A$(98,10),3," ")="" THEN A$(98,10)=EC_PARM$(481,10)
2960 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,64,18,98,10,C0,"","{3"+X$,"","AR2UTZ06","ECH","",""
2990 GOTO 2020
3000 REM "clear after update
3010 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,75,6,109,1,C0,"","{3"+X$,"","AR2UTZ06","ECH","",""
3040 GOTO 2020
3050 REM "initial load
3051 IF EDA$(41,1)="S" THEN GOSUB 6200; GOTO 3090
3052 X$="If initial load will set category source to Item EC Parms after update"
3060 CALL "ZZENTR","Y",A{ALL},A$,X4$,X3$,75,7,11,1,C0,"","{3"+X$,"","AR2UTZ06","","",""
3090 GOTO 2020
3100 REM "function value 1
3102 IF POS(A$(43,1)="YX")=0 THEN GOTO 3140
3103 IF A$(43,1)="Y" THEN FFC$="matches" ELSE FFC$="doen't match"
3106 X$="Only load if specified value "+FFC$+" function field (wildcards avail)"
3110 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,65,9,116,12,C0,"","{3"+X$,"","AR2UTZ06","","",""
3140 GOTO 2020
3150 REM "function value 2
3152 IF POS(A$(43,1)="YX")=0 THEN GOTO 3190
3153 IF A$(43,1)="Y" THEN FFC$="matches" ELSE FFC$="doen't match"
3156 X$="Only load if specified value "+FFC$+" function field (wildcards avail)"
3160 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,65,10,128,12,C0,"","{3"+X$,"","AR2UTZ06","","",""
3190 GOTO 2020
3200 REM "function value 3
3202 IF POS(A$(43,1)="YX")=0 THEN GOTO 3240
3203 IF A$(43,1)="Y" THEN FFC$="matches" ELSE FFC$="doen't match"
3206 X$="Only load if specified value "+FFC$+" function field (wildcards avail)"
3210 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,65,11,140,12,C0,"","{3"+X$,"","AR2UTZ06","","",""
3240 GOTO 2020
3250 REM "function vlaue 4
3252 IF POS(A$(43,1)="YX")=0 THEN GOTO 3290
3253 IF A$(43,1)="Y" THEN FFC$="matches" ELSE FFC$="doen't match"
3256 X$="Only load if specified value "+FFC$+" function field (wildcards avail)"
3260 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,65,12,152,12,C0,"","{3"+X$,"","AR2UTZ06","","",""
3290 GOTO 2020
3300 REM "include item selection codes
3301 CODE=0; IF EDA$(41,1)<>"S" THEN A$(164,45)=DIM(45); PRINT @(9,14),'CL',; GOTO 3340
3302 X$="Enter code for selection of Stock Inventory Product"
3305 IF CODE>14 OR CODE<0 THEN GOTO 3340
3306 IC=CODE*4+9,INCLUDEINDEX=CODE*3+164
3310 CALL "ZZENTR","SUZ",A{ALL},A$,X4$,X3$,IC,14,INCLUDEINDEX,3,C0,"","{3"+X$,"","AR2UTZ06","EDH","EC3CBB",""; IF C0=6 THEN GOSUB 6400; C0=1
3312 IF C0=2 THEN CODE=CODE-1; GOTO 3305 ELSE IF C0=4 THEN GOTO 3340 ELSE IF INT(C0)=3 THEN C0=1; GOTO 3340
3319 PRINT @(IC,14),A$(INCLUDEINDEX,3),
3320 IF A$(INCLUDEINDEX,3)<>DIM(3) THEN FIND (Z[15],KEY=A$(INCLUDEINDEX,3),DOM=3310)EDH$; PRINT @(5,20),'CL',EDH$(4,40),
3330 CODE=CODE+1; GOTO 3305
3340 GOSUB 6200; GOTO 2020
3350 REM "exclude item selection codes
3351 CODE=0; IF EDA$(41,1)<>"S" THEN A$(209,45)=DIM(45); PRINT @(9,15),'CL',; GOTO 3390
3352 X$="Enter code to be excluded for selection of Stock Inventory Product"
3355 IF CODE>14 OR CODE<0 THEN GOTO 3390
3356 EC=CODE*4+9,EXCLUDEINDEX=CODE*3+209
3360 CALL "ZZENTR","SUZ",A{ALL},A$,X4$,X3$,EC,15,EXCLUDEINDEX,3,C0,"","{3"+X$,"","AR2UTZ06","EDH","EC3CBB",""; IF C0=6 THEN GOSUB 6400; C0=1
3362 IF C0=2 THEN CODE=CODE-1; GOTO 3355 ELSE IF C0=4 THEN GOTO 3390 ELSE IF INT(C0)=3 THEN C0=1; GOTO 3390
3369 PRINT @(EC,15),A$(EXCLUDEINDEX,3),
3370 IF A$(EXCLUDEINDEX,3)<>DIM(3) THEN FIND (Z[15],KEY=A$(EXCLUDEINDEX,3),DOM=3360)EDH$; PRINT @(5,20),EDH$(4,40),
3380 CODE=CODE+1; GOTO 3355
3390 GOSUB 6200; GOTO 2020
3400 REM "ff values
3401 Q0=X0-13
3404 DATASTART=Q0*12+254
3406 IF POS(A$(43,1)="YX")=0 THEN GOTO 3440
3408 IF A$(43,1)="Y" THEN FFC$="matches" ELSE FFC$="doen't match"
3409 X$="Only load if specified value "+FFC$+" function field (wildcards avail)"
3410 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,NUM(FFCOL$(Q0*2+1,2)),NUM(FFROW$(Q0*2+1,2)),DATASTART,12,C0,"##0","{3"+X$,"","AR2UTZ06","","",""
3411 IF C0=4 THEN GOTO 3440
3412 IF C0=2 THEN IF Q0=0 THEN GOTO 3440 ELSE Q0=Q0-1; GOTO 3404
3420 REM "IF A$(DATASTART,12)=DIM(12) THEN GOTO 3440 ; REM "158857 - allow blank entries
3430 Q0=Q0+1; IF Q0<=17 THEN GOTO 3404
3440 GOTO 2020
3450 REM "source customer 2 160771
3451 IF EC_PARM$(949,1)<>"Y" THEN A$(470,10)=DIM(10); GOTO 3490
3452 IF EDA$(41,1)="S" THEN A$(470,10)=DIM(10); GOSUB 6200; GOTO 3490
3460 CALL "ZZENTR","AUZ",A{ALL},A$,X4$,X3$,29,4,470,10,C0,"A/R","{3"+X$,"","AR2UTZ06","AR1","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 3460,*NEXT
3461 IF A$(470,10)=DIM(10) OR A$(470,10)="0000000000" THEN A$(470,10)=DIM(10); GOSUB 6200; GOTO 3490
3462 FIND (Z[2],KEY=A$(470,10),DOM=3450)AR1$; PRINT @(0,22),'CL',AR1$(11,35),
3463 CALL "ZZDISP","A",A$(470,10),"A/R",X3$,"","",29,4,X4$
3490 GOTO 2020
3500 REM "source customer 3 160771
3501 IF EC_PARM$(949,1)<>"Y" THEN A$(480,10)=DIM(10); GOTO 3540
3502 IF EDA$(41,1)="S" THEN A$(480,10)=DIM(10); GOSUB 6200; GOTO 3540
3510 CALL "ZZENTR","AUZ",A{ALL},A$,X4$,X3$,41,4,480,10,C0,"A/R","{3"+X$,"","AR2UTZ06","AR1","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 3510,*NEXT
3521 IF A$(480,10)=DIM(10) OR A$(480,10)="0000000000" THEN A$(480,10)=DIM(10); GOSUB 6200; GOTO 3540
3522 FIND (Z[2],KEY=A$(480,10),DOM=3510)AR1$; PRINT @(0,22),'CL',AR1$(11,35),
3523 CALL "ZZDISP","A",A$(480,10),"A/R",X3$,"","",41,4,X4$
3540 GOTO 2020
3550 REM "source customer 4 160771
3551 IF EC_PARM$(949,1)<>"Y" THEN A$(490,10)=DIM(10); GOTO 3590
3552 IF EDA$(41,1)="S" THEN A$(500,10)=DIM(10); GOSUB 6200; GOTO 3590
3560 CALL "ZZENTR","AUZ",A{ALL},A$,X4$,X3$,53,4,490,10,C0,"A/R","{3"+X$,"","AR2UTZ06","AR1","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 3560,*NEXT
3561 IF A$(490,10)=DIM(10) OR A$(490,10)="0000000000" THEN A$(490,10)=DIM(10); GOSUB 6200; GOTO 3590
3562 FIND (Z[2],KEY=A$(490,10),DOM=3610)AR1$; PRINT @(0,22),'CL',AR1$(11,35),
3563 CALL "ZZDISP","A",A$(490,10),"A/R",X3$,"","",53,4,X4$
3590 GOTO 2020
3600 REM "source customer 5 160771
3601 IF EC_PARM$(949,1)<>"Y" THEN A$(500,10)=DIM(10); GOTO 3640
3602 IF EDA$(41,1)="S" THEN A$(500,10)=DIM(10); GOSUB 6200; GOTO 3640
3610 CALL "ZZENTR","AUZ",A{ALL},A$,X4$,X3$,65,4,500,10,C0,"A/R","{3"+X$,"","AR2UTZ06","AR1","",""; IF ABS(C0)>4 THEN GOSUB 6400; ON C0 GOTO 3610,*NEXT
3621 IF A$(500,10)=DIM(10) OR A$(500,10)="0000000000" THEN A$(500,10)=DIM(10); GOSUB 6200; GOTO 3640
3622 FIND (Z[2],KEY=A$(500,10),DOM=3610)AR1$; PRINT @(0,22),'CL',AR1$(11,35),
3623 CALL "ZZDISP","A",A$(500,10),"A/R",X3$,"","",65,4,X4$
3640 GOTO 2020
3650 REM "ff value 10
3690 GOTO 2020
3700 REM "ff value 11
3740 GOTO 2020
3750 REM "ff value 12
3790 GOTO 2020
3800 REM "ff value 13
3840 GOTO 2020
3850 REM "ff value 14
3890 GOTO 2020
3900 REM "ff value 15
3940 GOTO 2020
3950 REM "ff value 16
3990 GOTO 2020
5000 REM "End of entry
5020 CALL "ZZPROM",".Y",X3$,Z,"Generate catalog entries now?","","",0; ON Z GOTO 5021,9900
5021 UPDATE_CATALOGS$=""
5022 READ (Z[1],KEY="",DOM=5023)
5030 ECQ_KEY$=KEY(Z[1],END=5100); READ (Z[1],KEY=ECQ_KEY$)ECQ$
5032 DIM EDA$(128); EDA$(11,30)="Catalog Master Missing"; FIND (Z[14],KEY=ECQ_KEY$,DOM=5033)EDA$
5034 PROMPT$="Update ("+ECQ_KEY$+") - "+EDA$(11,30); PRINT @(0,21),'CE',PROMPT$,
5035 REM "0-No to current  1-Yes to current  2-Yes to ALL  3-Exit to update
5036 CALL "ZZPROM","X1EC3UT3",X3$,Z,"","","V",X0; ON Z GOTO 5030,5040,5050,5100
5039 REM "update single catalog
5040 UPDATE_CATALOGS$=UPDATE_CATALOGS$+ECQ_KEY$; GOTO 5030
5049 REM "update all catalogs
5050 UPDATE_CATALOGS$=""; READ (Z[1],KEY="",DOM=5051)
5052 ECQ_KEY$=KEY(Z[1],END=5100); READ (Z[1],KEY=ECQ_KEY$)ECQ$
5054 UPDATE_CATALOGS$=UPDATE_CATALOGS$+ECQ_KEY$; GOTO 5052
5590 GOSUB 7500; GOTO 9970
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6060 PRINT @(2,3),"   Catalog ID: ",@(60,3),"Updated:",@(0,5),Z0$,@(0,7),Z0$,
6065 PRINT @(1,6),"Category source:",@(25,6),"Catalog item code source:",@(0,4),"Source customer:",@(17,8),"Only load if item has CIC code set?",@(61,7),"Initial load?      ",@(32,9),"Only load IMS items?",@(12,10),"Only load items with non-zero IMS price?",@(9,11),"Only load items with FUNCTION field loaded?",@(24,12),"Only load inventoried items:",@(0,17),"Clear catalog entries?",@(27,17),"Overwrite existing entries?",@(55,6),"Clear after update?",@(61,8),"Function Fld Values",@(61,9),"F1.",@(61,10),"F2.",@(61,11),"F3.",@(61,12),"F4.", ! SSP#230758
6066 PRINT @(65,17),"image format:",@(0,18),"(",EC_PARM$(261,10),"):",@(0,19),"(",EC_PARM$(271,10),"):",@(25,18),"(",EC_PARM$(281,10),"):",@(25,19),"(",EC_PARM$(291,10),"):",@(50,18),"(",EC_PARM$(301,10),"):",
6067 PRINT @(0,13),Z0$,@(0,16),Z0$,
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6202 GOSUB 6450
6205 DIM EDA$(128); EDA$(11,30)="ID Record missing-Setup F1-F2"; FIND (Z[14],KEY=A$(1,10),DOM=6217)EDA$; PRINT @(28,3),EDA$(11,30),
6207 IF EDA$(41,1)="S" THEN PRINT 'SB',@(0,13),Z0$,@(30,13),"Stock Selection Codes",@(0,14),'CL','SB',"Include:",@(0,15),'CL','SB',"Exclude:",@(0,16),Z0$,'SF', ELSE PRINT @(0,13),'SB',Z0$,@(25,13),"18 Additional Function Field Values",@(0,14),'CL',@(0,15),'CL',@(0,16),'CL','SF',
6217 IF EDA$(41,1)<>"S" THEN A$(164,90)=DIM(90) ELSE A$(116,48)=DIM(48),A$(16,3)=DIM(3),A$(43,1)=DIM(1),A$(45,10)=DIM(10),A$(55,1)="I",A$(11,1)="N"; REM "clear selection codes here in case they f1-f2'd and made a change
6218 CALL "ZZDISP","A",A$(45,10),"A/R",X3$,"","",17,4,X4$
6219 CALL "ZZDISP","D",A$(110,6),"",X3$,"","",68,3,X4$
6220 PRINT @(18,6),A$(15,1),@(53,8),A$(16,1),@(53,9),A$(17,1),@(53,10),A$(18,1),@(53,11),A$(43,1),@(53,12),A$(108,1),@(23,17),A$(44,1),@(51,6),A$(55,1),@(55,17),A$(56,1),@(75,7),A$(11,1),
6222 PRINT @(79,17),A$(57,1),@(14,18),A$(58,10),@(14,19),A$(68,10),@(39,18),A$(78,10),@(39,19),A$(88,10),@(64,18),A$(98,10),@(75,6),A$(109,1),@(65,9),A$(116,12),@(65,10),A$(128,12),@(65,11),A$(140,12),@(65,12),A$(152,12),
6224 DIM AR1$(1000); AR1$(11,35)="Invalid customer- need to set"; FIND (Z[2],KEY=A$(45,10),DOM=6225)AR1$; IF EC_PARM$(949,1)<>"Y" THEN PRINT @(28,4),AR1$(11,35), ELSE PRINT @(0,22),'CL',AR1$(11,35),
6230 FOR SC=0 TO 14
6231 PRINT @(SC*4+9,14),A$(SC*3+164,3),@(SC*4+9,15),A$(SC*3+209,3),
6232 NEXT SC
6233 IF EDA$(41,1)="S" THEN IF A$(164,45)=DIM(45) THEN PRINT @(9,14),"Include All",
6234 IF EDA$(41,1)="S" THEN IF A$(209,45)=DIM(45) THEN PRINT @(9,15),"Exclude None",
6235 IF EC_PARM$(949,1)<>"Y" THEN GOTO 6240; REM "160771
6236 CALL "ZZDISP","A",A$(470,10),"A/R",X3$,"","",29,4,X4$; REM "160771
6237 CALL "ZZDISP","A",A$(480,10),"A/R",X3$,"","",41,4,X4$; REM "160771
6238 CALL "ZZDISP","A",A$(490,10),"A/R",X3$,"","",53,4,X4$; REM "160771
6239 CALL "ZZDISP","A",A$(500,10),"A/R",X3$,"","",65,4,X4$; REM "160771
6244 IF EDA$(41,1)<>"C" THEN GOTO 6250
6248 FOR SC=0 TO 17; PRINT @(NUM(FFCOL$(SC*2+1,2)),NUM(FFROW$(SC*2+1,2))),A$(SC*12+254,12),; NEXT SC
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>=0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6460 PRINT @(17,3),A$(1,10),
6490 RETURN 
6500 REM "DELETE
6510 REMOVE (Z[1],KEY=A1$,DOM=6511); TYPE$="DELETE"; GOSUB LOG_ACTIVITY
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6690 RETURN 
6700 REM "ADD ENTRY
6705 IF Z9=0 THEN GOTO 6790
6710 WRITE (Z[1],KEY=A1$)IOL=0310; TYPE$="WRITE"; GOSUB LOG_ACTIVITY
6790 GOTO 1630
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 A$(1,LEN(A1$))=A1$
6825 IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 1140
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6870 GOTO 6895
6890 GOTO 1515
6895 PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=1140); GOTO 1140
6900 REM "GET DEFAULTS
6902 V9$="2203  2205  "
6910 IF V9>=0 THEN READ (Z[13],IND=V9)V9$,IOL=0310; GOTO 6930 ELSE V9=-1
6920 EXTRACT (Z[13],KEY=X0$+"DFLT",DOM=6921)V9$,IOL=0310; V9=IND(Z[13]); READ (Z[13])
6930 RETURN 
6950 REM "WRITE DEFAULT
6955 WRITE (Z[13],KEY=X0$+"DFLT")V9$,IOL=0310
6960 GOSUB 6920; GOTO 1630
6970 REM "ENTRY DEFAULTS
6975 PRINT 'CF'; V9=-2,Q$=""
6980 FOR X=1 TO LEN(V9$) STEP 6
6982 PRINT @(NUM(V9$(X,2)),NUM(V9$(X+2,2))),; IF V9=-2 THEN PRINT V9$(X+4,1), ELSE READ RECORD (0,SIZ=1)Q$; IF POS(Q$="1234Z")=0 THEN PRINT 'RB'; GOTO 6982
6990 IF Q$="Z" THEN EXITTO 6950 ELSE V9$(X+4,LEN(Q$))=Q$; NEXT X
6995 V9=0; GOTO 6980
7500 REM "load catalog
7501 IF POS(A$(44,1)="BC")<>0 THEN CALL "ZZPROM",".Y",X3$,CLEARCATALOG,"Loading instructions indicate EC item parameters to be cleared - Proceed?","","",0; ON CLEARCATALOG GOTO 7502,7990 ! SSP221193
7502 IF LEN(UPDATE_CATALOGS$)=0 THEN GOTO 7961
7505 FOR UINDEX=0 TO LEN(UPDATE_CATALOGS$)/10-1; CATALOG_KEY$=UPDATE_CATALOGS$(UINDEX*10+1,10)
7506 PRINT @(0,20),'CE',
7510 REM "get next update record
7530 EXTRACT (Z[1],KEY=CATALOG_KEY$)IOL=0310
7531 TYPE$="GENERATE"; GOSUB LOG_ACTIVITY
7532 DIM EDA$(100); FIND (Z[14],KEY=CATALOG_KEY$,DOM=7533)EDA$
7535 SOURCE_CUSTOMERS$=A$(45,10)+STP(A$(470,40),1," "); REM "160771, SSP231883, changed the STP 3 (strip all) to STP 1 (strip trailing)
7550 REM "ck if clearing existing catalog
7552 IF A$(44,1)="N" THEN GOTO 7580
7553 PRINT @(0,20),'CE',"Purging catalog ",A$(1,10),
7555 READ (Z[7],KEY=A$(1,10),DOM=*NEXT); REM "160771
7556 ECHKEY$=KEY(Z[7],END=7580); IF ECHKEY$(1,10)<>A$(1,10) THEN GOTO 7580
7557 READ (Z[7],KEY=ECHKEY$)ECH$; IF POS(A$(44,1)="BC")<>0 THEN REMOVE (Z[10],KEY=ECH$(41,20),DOM=7558)
7558 IF POS(A$(44,1)="AC")<>0 THEN REMOVE (Z[7],KEY=ECHKEY$,DOM=7559)
7559 IF POS(A$(44,1)="AC")<>0 THEN REMOVE (Z[12],KEY=ECH$(1,10)+ECH$(21,20)+ECH$(41,20)+ECH$(11,10),DOM=7560)
7560 GOTO 7556
7580 FOR CC=0 TO LEN(SOURCE_CUSTOMERS$)/10-1; CURR_CUSTOMER$=SOURCE_CUSTOMERS$(CC*10+1,10); PRINT @(40,22),'CL',"Processing customer: ",CURR_CUSTOMER; REM "160771
7590 IF EDA$(41,1)<>"S" THEN READ (Z[8],KEY=CURR_CUSTOMER$,DOM=7591) ELSE READ (Z[16],KEY="",DOM=7591); REM "160771
7595 PRINT @(0,20),'CE',"Loading catalog ",A$(1,10),
7600 REM "get next form for customer
7602 DIM FM1$(550),FM1[31],IC0$(200),IC0[40]
7605 IF EDA$(41,1)<>"S" THEN GOTO 7610
7606 ITEMKEY$=KEY(Z[16],END=7900); ICITEMKEY$=ITEMKEY$; READ (Z[16],KEY=ITEMKEY$)IOL=0460; ITEMDESC$=IC0$(21,40); IF IC0$(108,1)="I" OR IC0$(1,10)<>DIM(10) THEN GOTO 7606 ELSE GOTO 7614
7610 ITEMKEY$=KEY(Z[8],END=7900); IF ITEMKEY$(1,10)<>CURR_CUSTOMER$ THEN GOTO 7900; REM "160771
7612 READ (Z[8],KEY=ITEMKEY$)IOL=0380; ITEMDESC$=FM1$(42,40); REM "ssp 154559
7613 IF FM1$(195,1)="I" THEN GOTO 7600; REM "do not load inactive forms
7614 DIM ECR$(1000); FIND (Z[10],KEY=ITEMKEY$,DOM=7615)ECR$
7615 IF FM1$(105,1)="Y" THEN ICITEMKEY$=DIM(10)+ITEMKEY$(11,10) ELSE ICITEMKEY$=ITEMKEY$; REM "if item flagged STOCK? Y then set for inventory to check the stock inventory item
7617 IF EDA$(41,1)<>"S" THEN GOTO 7700
7620 REM "ck for selection codes
7621 REM "INCLUDE selection codes
7622 IF A$(164,45)=DIM(45) THEN SCOK$="Y"; GOTO 7630
7623 SCOK$="N"
7624 FOR SC=0 TO 14
7625 SC$=A$(SC*3+164,3); IF SC$=DIM(3) THEN GOTO 7628
7626 IF POS(SC$=ECR$(475,48),3)<>0 THEN SCOK$="Y"; EXITTO 7629
7628 NEXT SC
7630 REM "exclude
7631 IF A$(209,45)=DIM(45) THEN GOTO 7640
7632 FOR SC=0 TO 14
7633 SC$=A$(SC*3+209,3); IF SC$=DIM(3) THEN GOTO 7638
7634 IF POS(SC$=ECR$(475,48),3)<>0 THEN SCOK$="N"; EXITTO 7639
7638 NEXT SC
7650 IF SCOK$="N" THEN GOTO 7600
7700 REM "qualified item - ck other filtering options
7704 IF A$(16,1)="Y" THEN IF STP(FM1$(350,20),3," ")="" THEN GOTO 7600; REM "cic code must be set
7705 IF A$(17,1)="Y" THEN IF FM1$(108,1)<>"Y" THEN GOTO 7600; REM "must be IMS form
7706 IF A$(18,1)="Y" THEN IF FM1[29]=0 THEN GOTO 7600; REM "IMS price needs to be set
7707 IF POS(A$(43,1)="YX")<>0 THEN GOSUB 8300; IF FUNCTION_MATCH$<>"Y" THEN GOTO 7600; REM "ck for function field
7710 REM "ck for inventoried status
7711 IF A$(108,1)="N" THEN GOTO 7730; REM "ignore inventoried status
7712 ON_HAND_BALANCE=0,IC1_COUNT=0; READ (Z[11],KEY=ICITEMKEY$,DOM=7713)
7713 IC1KEY$=KEY(Z[11],END=7715); IF IC1KEY$(1,LEN(ICITEMKEY$))<>ICITEMKEY$ THEN GOTO 7715 ELSE DIM IC1[20]; READ (Z[11],KEY=IC1KEY$)IOL=0410; IC1_COUNT=IC1_COUNT+1; IF A$(108,1)="A" THEN GOTO 7720; REM "A=load if any warehouse records on file
7714 ON_HAND_BALANCE=ON_HAND_BALANCE+IC1[3]+IC1[4]-IC1[5]+IC1[6]; GOTO 7713
7715 IF ON_HAND_BALANCE=0 THEN GOTO 7600; REM "skip if cumulative on-hand balance is zero
7750 REM "Form passed test - Set up web catalog category
7752 DIM ECG$(120)
7755 ON POS(A$(15,1)="PRFE")-1 GOTO 7760,7765,7770,7800
7760 REM "product code source
7761 IF EDA$(41,1)="S" THEN PC$=IC0$(61,3) ELSE PC$=FM1$(21,3)
7762 FIND (Z[5],KEY="T"+PC$,DOM=7795)PCREC$; DIM EDK$(55); FIND (Z(17),KEY=PC$,DOM=7763)IOL=0470; IF EDK$(54,1)="Y" THEN GOTO 7600; REM "read in product code and category mappings - skip item if told to exclude
7763 PCMAPS$=""; IF EDK$(4,50)<>DIM(50) THEN FOR PCM=0 TO 4; IF EDK$(PCM*10+4,10)<>DIM(10) THEN PCMAPS$=PCMAPS$+EDK$(PCM*10+4,10) END_IF ; NEXT PCM; GOTO 7800; REM "if p/c mappings in effect then do not write category for the product code
7764 ECG$(1,10)=PC$,ECG$(11,30)=PCREC$(5,15); GOTO 7795
7765 REM "Reorder group source
7767 FIND (Z[5],KEY="G"+FM1$(212,3),DOM=7795)ROGROUP$; ECG$(1,10)=FM1$(212,3),ECG$(11,30)=ROGROUP$(5,30); GOTO 7795
7770 REM "function field
7771 IF STP(FM1$(173,10),3," ")="" THEN GOTO 7600; REM "skip if function field is blank
7772 ECG$(1,10)=FM1$(173,10); GOTO 7795
7795 ECG$(1,10)=STR(NUM(ECG$(1,10),ERR=7796):"0000000000")
7797 WRITE (Z[6],KEY=ECG$(1,10),DOM=7798)ECG$
7800 REM "write catalog entry
7802 DIM ECH$(190)
7805 ECH$(1,10)=A$(1,10),ECH$(11,10)=ECG$(1,10),ECH$(41,20)=ITEMKEY$; IF ECH$(61,40)=DIM(40) THEN ECH$(61,40)=ITEMDESC$; REM "ssp 154559/ 158394
7806 IF A$(15,1)<>"E" THEN ECH$(11,10)=ECG$(1,10); GOTO 7810
7807 REM '
7808 REM '
7809 REM '
7810 ON POS(A$(55,1)="FCIG")-1 GOTO 7811,7812,7813,7814
7811 ECH$(21,20)=FM1$(11,10); GOTO 7815
7812 ECH$(21,20)=FM1$(350,20); GOTO 7815
7813 ECH$(21,20)=IC0$(11,10); GOTO 7815
7814 ECH$(21,20)=FM1$(173,12); GOTO 7815
7830 IF A$(15,1)="P" AND PCMAPS$<>"" THEN CATEGORIES$=PCMAPS$; GOTO 7842; REM "if p/c source and mapping in effect then set up multiple categories
7840 IF A$(15,1)<>"E" THEN GOTO 7850
7841 CATEGORIES$=ECR$(21,10)+ECR$(193,40)+ECR$(325,150); GOSUB 8400; CATEGORIES$=CATEGORIES$+ADDL_CATEGORIES$; REM "159049
7842 FOR CATEGORIES_INDEX=0 TO LEN(CATEGORIES$)/10-1
7843 CURR_CATEGORY$=STP(CATEGORIES$(CATEGORIES_INDEX*10+1,10),2); IF CURR_CATEGORY$="" THEN GOTO 7848 ELSE ECH$(11,10)=CURR_CATEGORY$
7844 IF A$(56,1)="Y" THEN WRITE (Z[7],KEY=ECH$(1,40))ECH$ ELSE WRITE (Z[7],KEY=ECH$(1,40),DOM=7845)ECH$
7845 ECIKEY$=ECH$(1,10)+ECH$(21,20)+ECH$(41,20)+ECH$(11,10); IF A$(56,1)="Y" THEN WRITE (Z[12],KEY=ECIKEY$) ELSE WRITE (Z[12],KEY=ECIKEY$,DOM=7846)
7848 NEXT CATEGORIES_INDEX
7849 GOTO 7852
7850 IF A$(56,1)="Y" THEN WRITE (Z[7],KEY=ECH$(1,40))ECH$ ELSE WRITE (Z[7],KEY=ECH$(1,40),DOM=7851)ECH$
7851 ECIKEY$=ECH$(1,10)+ECH$(21,20)+ECH$(41,20)+ECH$(11,10); IF A$(56,1)="Y" THEN WRITE (Z[12],KEY=ECIKEY$) ELSE WRITE (Z[12],KEY=ECIKEY$,DOM=7852)
7852 REM 
7854 PRINT @(0,22),ECH$(1,40)," - ",FM1$(1,20),
7855 REM "set image name
7856 IMAGE_NAME$=""; ON POS(A$(57,1)="CFDN")-1 GOTO 7857,7858,7859,7860
7857 IMAGE_NAME$=ECH$(41,10); GOTO 7860
7858 IMAGE_NAME$=ECH$(51,10); GOTO 7860
7859 CALL "ZZDISP","AX",ECH$(41,10),"A/R",X3$,FMTCC$,"",0,0,X4$; IMAGE_NAME$=STP(FMTCC$,2)+ECH$(51,10); GOTO 7860
7860 REM "write form webec parmeters
7861 GOSUB 8000; REM "stip out special characters from image name
7862 DIM ECR$(1000)
7864 ECR$(1,20)=ECH$(41,20); READ (Z[10],KEY=ECR$(1,20),DOM=7865)ECR$; IF A$(15,1)<>"E" THEN GOSUB 8050; REM "set initial category if source is not E
7865 GOSUB 8050
7866 IF IMAGE_NAME$="" THEN GOTO 7870
7867 FOR IMAGE=0 TO 4; EXTENSION$=STP(A$(IMAGE*10+58,10),2); IF EXTENSION$<>"" THEN ECR$(IMAGE*30+31,30)=IMAGE_NAME$+STP(A$(IMAGE*10+58,10),2)
7868 NEXT IMAGE
7870 IF A$(56,1)="Y" THEN WRITE (Z[10],KEY=ECR$(1,20))ECR$ ELSE WRITE (Z[10],KEY=ECR$(1,20),DOM=7871)ECR$
7890 GOTO 7600; REM "get next form
7900 NEXT CC; REM "get next source customer 160771
7940 IF A$(11,1)="Y" THEN A$(15,1)="E",A$(11,1)="N"; REM "if initial load then set category source to form EC parmaeters automatically
7942 A$(110,6)=X3$(21,6); REM "udpate update date
7950 IF A$(109,1)="Y" THEN REMOVE (Z[1],KEY=CATALOG_KEY$); TYPE$="CLEAR"; GOSUB LOG_ACTIVITY ELSE WRITE (Z[1],KEY=CATALOG_KEY$)IOL=0310; TYPE$="WRITE"; GOSUB LOG_ACTIVITY
7960 NEXT UINDEX
7990 RETURN 
8000 REM "strip out special characters
8003 IMAGE_NAME$=STP(IMAGE_NAME$,3),IMAGE_LEN=LEN(IMAGE_NAME$)
8005 SCS$=STP(STP(STP(EC_PARM$(687,19),1),0),3),SI=1,MAXSI=LEN(SCS$)
8006 IF SCS$="" THEN GOTO 8040; REM "no characters to filter
8010 SCSP=POS(SCS$(SI,1)=IMAGE_NAME$); IF SCSP=0 THEN SI=SI+1; GOTO 8030
8012 IF SCSP=1 THEN IMAGE_NAME$=IMAGE_NAME$(2); GOTO 8030; REM "first character
8014 IF SCSP=10 THEN IMAGE_NAME$=IMAGE_NAME$(1,9); GOTO 8030; REM "last character
8016 IMAGE_NAME$=IMAGE_NAME$(1,SCSP-1)+IMAGE_NAME$(SCSP+1,IMAGE_LEN-SCSP); GOTO 8030
8030 IMAGE_NAME$=PAD(IMAGE_NAME$,IMAGE_LEN); IF SI<MAXSI THEN GOTO 8010
8035 IMAGE_NAME$=STP(STP(STP(IMAGE_NAME$,1),0),3)
8040 RETURN 
8050 REM "determine categories on item parameters
8052 ON POS(A$(15,1)="PFRE") GOTO 8095,8060,8055,8055,8095
8055 ECR$(21,10)=ECH$(11,10); GOTO 8095
8060 REM "product code assignment
8062 IF PCMAPS$="" THEN GOTO 8055
8065 FOR PCM=0 TO LEN(PCMAPS$)/10-1
8067 CURRMAP$=PCMAPS$(PCM*10+1,10)
8070 ON PCM GOTO 8071,8072,8073,8074,8075
8071 ECR$(21,10)=CURRMAP$; GOTO 8080
8072 ECR$(193,10)=CURRMAP$; GOTO 8080
8073 ECR$(203,10)=CURRMAP$; GOTO 8080
8074 ECR$(213,10)=CURRMAP$; GOTO 8080
8075 ECR$(223,10)=CURRMAP$; GOTO 8080
8080 NEXT PCM
8095 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 CALL "ZZINFO",Z[F],T9,X3$,T,T0,K,B9,D,S0,S1,F$
8115 PRINT @(0,7),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8200 REM "copy catalog load parameters
8205 DIM COPYCATALOG[1],COPYCATALOG$(10)
8210 PRINT @(2,21),'CE',"Enter catalog ID to copy from (blank for manual setup manually):",
8220 CALL "ZZENTR","SZXU",COPYCATALOG{ALL},COPYCATALOG$,X4$,X3$,66,21,1,10,C0,"","{3"+X$,"","EC3AR110","EDA","",""; IF ABS(C0)>4 THEN GOSUB 6400
8230 IF STP(COPYCATALOG$,3," ")="" THEN GOTO 8290
8232 READ (Z[1],KEY=COPYCATALOG$,DOM=8234)COPYREC$; GOTO 8240
8234 CALL "ZZPROM",".4",X3$,Z,"Catalog ID parameters not on file","","",0; GOTO 8200
8240 NEWA$=COPYREC$,NEWA$(1,10)=A$(1,10),A$=NEWA$; GOSUB 6450; GOSUB 6200
8290 RETURN 
8300 REM "ck for function field filter value
8302 FUNCTION_MATCH$="Y"; IF POS(A$(43,1)="YX")=0 THEN GOTO 8345
8303 FUNCTION_VALUES$=A$(116,48)+A$(254,216); IF FUNCTION_VALUES$<>DIM(264) THEN GOTO 8310
8304 IF FM1$(173,12)=DIM(12) THEN FUNCTION_MATCH$="N"; GOTO 8345 ELSE GOTO 8345
8310 FOR VVV=0 TO 21
8312 FVALUE$=FUNCTION_VALUES$(VVV*12+1,12); IF FVALUE$=DIM(12) THEN GOTO 8320
8313 ON POS(A$(43,1)="YX")-1 GOTO 8314,8316
8314 IF FM1$(173,12) LIKE STP(FVALUE$,1) OR FM1$(173,12)=FVALUE$ THEN EXITTO 8322 ELSE GOTO 8320; REM "matching function values
8316 REM "exclude values
8317 IF FM1$(173,12) LIKE STP(FVALUE$,1) THEN GOTO 8320; REM "if matching skip
8318 IF FM1$(173,12)<>DIM(12) AND POS(FM1$(173,12)=A$(116,48),12)=0 THEN EXITTO 8322; REM "make sure function field set and does not equal value
8320 NEXT VVV; FUNCTION_MATCH$="N"
8345 RETURN 
8350 REM "single catalog update
8360 WRITE (Z[1],KEY=A1$)IOL=0310; TYPE$="WRITE"; GOSUB LOG_ACTIVITY
8370 UPDATE_CATALOGS$=A1$; GOSUB 7500; IF CLEARCATALOG=1 THEN GOTO 8390; REM "158857
8372 PRINT @(0,22),'CL',"Updating catalog/category cross reference..."
8374 CALL "EC3UTF",X3$,X4$,A1$,"CALLED"
8376 PRINT @(0,22),'CL',
8380 CALL "ZZPROM",".4",X3$,Z,"Generation of Catalog "+A1$+" Complete","","",0
8390 PRINT @(0,20),'CE',; GOTO 1800
8400 REM "get additional category codes; REM "159049
8405 ADDL_CATEGORIES$=""
8407 READ (Z(18),KEY=ECR$(1,20),DOM=*NEXT)
8410 EDRKEY$=KEY(Z(18),END=8430); READ (Z(18)); IF EDRKEY$(1,20)<>ECR$(1,20) THEN GOTO 8430
8412 IF STP(EDRKEY$(21,10),3," ")<>"" THEN ADDL_CATEGORIES$=ADDL_CATEGORIES$+EDRKEY$(21,10)
8414 GOTO 8410
8440 RETURN 
8800 LOG_ACTIVITY:! Write record to EE1 file for ECQ activity, SSP185129
8805 ! TYPE$ will be passed in, ACCESS, NEW, WRITE, DELETE, CLEAR, GENERATE
8810 DIM EE1$(35),EE1_2$(600)
8815 CAT_ID$=A$(1,10),DATE$=X3$(21,6),USER$=X3$(40,3)
8820 TIME$=DTE(0:"%Hz%mz%sz")
8825 EE1$=CAT_ID$+DATE$+TIME$+PAD(TYPE$,10)+USER$
8830 EE1_2$=PAD(A$,600)
8840 WRITE (Z[19],KEY=EE1$,DOM=8820)IOL=0390
8845 LOG_ACTIVITY_END:RETURN 
8849 ! 
8900 REM 
8910 DEF FNS$(Z9$)=Z9$(1,POS("  "=Z9$+"  ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 SETERR 9940
9930 Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "EC3UT5"
9970 RUN "EC3UT5"; REM "republish buyer catalogs
9999 END 
56000 REM "221193-CHUI and GUI places that refer to WebEC or TopForm.
56002 REM "231883-Generating UNION catalog with multiple source customers only
