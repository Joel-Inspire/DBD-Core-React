0010 REM "Order Approval Purchase/Reject <EC3AP3>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 08/13/19 - 9.2525 - dmm - SSP# 307194
0037 REM "307194-DBD-64; Aprvl Order Request replace session with buyer/pwd  
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3AP3",X1$="Order Approval Purchase/Reject"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0130 NY$="NY"
0140 DIM MESS_INFO$[20]
0310 IOLIST ECD$,ECD2$
0320 IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
0330 IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
0360 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0370 IOLIST FM1$(1),FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0380 IOLIST FM0$
0390 IOLIST FMPS$
0391 IOLIST FMPH$
0392 IOLIST FMPX$,FMPX(0),FMPX(1),FMPX(2)
0420 IOLIST EC7$,EC7[0],EC7[1]
0430 IOLIST UM$,UM[0],UM[1],UM[2],UM[3],UM[4],UM[5]
0450 IOLIST ECR$
0460 IOLIST EDD$,EDD[0]
0491 IOLIST EDS1$,EDS2$
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))],FS6[7],BLGRBNKS$(100),ECE(8)
0510 Z$="01O EDN... 02O EDO... 03O ECD... 04O ECE... 05O EC0... 06O IC0... 07O ECR... 08O FM0... 09O FMP...  13O ZZPARM 19O IC1... 20O FM3... 21O FM4... 25O ECR... 28O EDU...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0550 IF EC_PARM$(1177,1)="Y" THEN SID$=EC$[1](1,7) ELSE SID$=EC$[1](1213,64) ! SSP212160 jdf
1000 REM "Process DATA array
1001 REM "Set ECD_IN$ and ECE_IN$ and any other variables
1002 REM "INPUT$[X,Y] where Y = 1=worksheet# 2=approve action"
1004 DIM ECD_IN$(1580),ECE_IN$(499),ECE_IN[8],ECE_SET[8],ECE_IN_DATA$[2000],ECE_IN_DATA[2000,8],ECE_SET_DATA[2000,8],REAL_ITEM_KEY_DATA$[2000],DELETE_LINE[2000],QUANTITY_MULTIPLIER[2000],INPUT$[500,2]
1005 DATA_TAGS$="001<template>002<approval_action>003<worksheet>004<single_worksheet>005<pa_ord_conf_pgn>006<cust_req>007<ship_via_code>008<file_suffix>"
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE INPUT$[VAL_INDEX,2]=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "approval_action
1023 GOSUB 8300; WORKSHEET_COUNT=0; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE INPUT$[VAL_INDEX,1]=VAL$[VAL_INDEX],WORKSHEET_COUNT=WORKSHEET_COUNT+1; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "worksheet
1024 WORKSHEET_COUNT=1,INPUT$[1,1]=VALUE$; GOTO 1090; REM "single_worksheet
1025 PA_ORD_CONF_PGN$=""; IF STP(VALUE$,3)>"" THEN PA_ORD_CONF_PGN$=VALUE$ END_IF ; GOTO 1090 ! SSP172454, pa_ord_conf_pgn, Program to set BASIC2 tag to when creating file for approved order to fill out order confirmation, in this case EC3OS1
1026 CUST_REQ$=PAD(VALUE$,15); GOTO 1090 ! WO181002, cust_req
1027 GOSUB 7650; GOTO 1090 ! WO181002, ship_via_code
1028 FILE_SUFFIX$=STP(VALUE$,2); FILE_SUFFIX=1; GOTO 1090; REM "file_suffix SSP 210688
1090 NEXT I
1100 REM "Process order
1101 VERSION$="307194.20190813",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1130 GOSUB 1200
1195 GOTO 1500; REM "Process output file
1200 REM "process approved worksheets
1202 WORKSHEET_LIST$="",REQUESTED_ACTION_LIST$=""; IF WORKSHEET_COUNT=0 THEN GOTO 1290
1205 GOSUB CLEAR_EDIT_APPROVAL_MODE ! 255476
1210 FOR VV=1 TO WORKSHEET_COUNT
1212 IF POS(INPUT$[VV,2]="AR")=0 THEN GOTO 1219
1213 CK_WORKSHEET$=INPUT$[VV,1]; DIM EDU$(511); FIND (Z[28],KEY=CK_WORKSHEET$,DOM=*NEXT)EDU$(1); IF POS(EDU$(392,1)="AR")>0 THEN GOTO 1219 ELSE GOTO 1215 ! SSP277197, if already approved or rejected then don't process
1214 GOTO 1219 ! SSP277197, if no EDU record then this approval worksheet already approved or rejected and removed so don't process
1215 WORKSHEET_LIST$=WORKSHEET_LIST$+INPUT$[VV,1],REQUESTED_ACTION_LIST$=REQUESTED_ACTION_LIST$+INPUT$[VV,2] ! SSP277197, MOVE LINE 1214 TO LINE 1215
1216 CALL "EC3AP2",X3$,X4$,EC_PARM$,EC${ALL},INPUT$[VV,1],INPUT$[VV,2],EC$[2](1,15),"",""
1219 NEXT VV
1220 REM "process flagged worksheets
1222 IF LEN(WORKSHEET_LIST$)=0 THEN GOTO 1286 ! SSP168592
1225 FOR VV=0 TO LEN(WORKSHEET_LIST$)/10-1
1226 WORKSHEET$=WORKSHEET_LIST$(VV*10+1,10),ACTION_TAKEN$=REQUESTED_ACTION_LIST$(VV*1+1,1); ON POS(ACTION_TAKEN$="AR") GOTO 1285,1227,1250
1227 REM " PRINT @(0,20),'CE',"worksheet being processed: ",WORKSHEET$,'LF'; ESCAPE 
1228 GOSUB 7000; GOSUB 7100; REM "reset worksheet and move back from approval files
1230 REM "process worksheet lines
1231 READ (Z(4),KEY=WORKSHEET$,DOM=*NEXT)
1232 ECEKEY$=KEY(Z(4),END=1240); IF ECEKEY$(1,10)<>WORKSHEET$ THEN GOTO 1240 ELSE READ (Z(4),KEY=ECEKEY$)IOL=0320
1235 GOSUB 7550; REM "get item information & ck for messages
1237 GOTO 1232; REM "get next line
1240 CALL "EC3EM2",X3$,X4$,EC_PARM$,EC${ALL},WORKSHEET$,"AA",""; REM "generate order approval email
1242 GOSUB 7700; REM "create purchase '.*ec ' type file for current server
1249 GOTO 1285
1250 REM "rejected order processing
1251 READ (Z[1],KEY=WORKSHEET$,DOM=*NEXT)IOL=0310; IF POS(ECD$(645,1)="YR")>0 OR ECD$(235,8)<>DIM(8) THEN GOTO 1285 ELSE ECD$(645,1)="R"; WRITE (Z[1],KEY=WORKSHEET$)IOL=0310 ! SSP166022, Need to set ECN record to R, unless this one was already processed, if so then don't process again
1252 GOSUB 7000; REM "remove worksheet from ECD/ECE
1256 CALL "EC3EM2",X3$,X4$,EC_PARM$,EC${ALL},WORKSHEET$,"AR",""; REM "generate order rejection email
1260 ROTMP_FILE$=FILE_PATH$+"TRO"+WORKSHEET$; ERASE ROTMP_FILE$,ERR=*NEXT ! SSP247956, if reorder email temp file available we will now erase it
1285 NEXT VV
1290 RETURN 
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1503 IF TEMPLATE$="" THEN GOTO 1995 ELSE CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<cust_code>002<cust_name>003<ec_company>004<session_id>005<buyer_id>006<buyer_name>007<worksheet>008<customer>009<location>010<cust_req>011<req_date>012<attention>013<ship_via>014<needed_by>015<entrystart>016<cust_loc_code>017<address_1>018<address_2>019<city>020<state>021<zip>022<addr_1>023<addr_2>024<addr_3>025<cost_center>026<location_name>027<recv_dept>028<ship_via_list>029<date>030<time>031<tf_order_no>032<mark_for>033<location_list>034<locchangestart>035<man_name>036<man_addr_1>037<man_addr_2>038<man_city>039<man_state>040<man_zip>041<category_entry_start>042<message>043<message_start>044<ship_via_code>045<location_desc>046<addr_city>047<addr_state>048<addr_zip>049<addr_unformatted_1>050<addr_unformatted_2>051<addr_name>052<ship_via_text>053<location_text>054<cc_type>055<cc_number>056<cc_expire>057<cc_name>058<cc_type_list>059<ordered_by>060<item_price_total>061<weight_total_order>062<invoice_total_net>063<invoice_sales_tax>064<invoice_freight>065<invoice_total>066<invoicelinestart>067<cc_number_last4>068<qty_total_order>069<item_count>070<invoice_number>071<perm_addr_change_shipto_done>072<perm_attn_change_shipto_done>"
1510 READ (100,END=1595)LINE$; GOSUB 8150
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1517 REM "LET PGINDEX=POS("<!?TF?MESSAGE"=LINE$); IF PGINDEX=0 THEN GOTO 01518 ELSE ESCAPE ; IF PGINDEX=1 THEN LET LINE$=LINE$(3) ELSE LET LINE$=LINE$(1,PGINDEX-1)+LINE$(PGINDEX+2); REM "GET RID OF THE DARNED <! ON PAGE CONTROL TAGS - OTHERWISE THE WHOLE LINE GETS COMMENTED OUT IN THE HTML
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 IF LEN(WORKSHEET_LIST$)=0 THEN GOTO 1510 ELSE GOSUB 2000; GOTO 1515 ! SSP168592
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2090
2001 LINE$=LINE1$+CUST_CODE$+LINE2$; GOTO 2095; REM "cust_code
2002 LINE$=LINE1$+STP(EC$[1](23,35),1)+LINE2$; GOTO 2095; REM "cust_name
2003 LINE$=LINE1$+STP(EC_PARM$(7,50),1)+LINE2$; GOTO 2095; REM "ec_company
2004 LINE$=LINE1$+STP(EC$[1](1,7),1)+LINE2$; GOTO 2095; REM "session_id from EC$
2005 LINE$=LINE1$+STP(EC$[1](8,15),1)+LINE2$; GOTO 2095; REM "Buyer id
2006 LINE$=LINE1$+STP(EC$[2](16,35),1)+LINE2$; GOTO 2095; REM "Buyer name
2007 LINE$=LINE1$+STP(ECD$(1,10),1)+LINE2$; GOTO 2095; REM "worksheet
2008 CALL "ZZDISP","AX",ECD$(26,10),"A/R",X3$,TMP$,"",0,0,X4$; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "Customer code
2009 LINE$=LINE1$+ECD$(23,6)+LINE2$; GOTO 2095; REM "location code
2010 LINE$=LINE1$+STP(ECD$(40,10)+ECD$(163,5),1)+LINE2$; GOTO 2095; REM "cust_req
2011 IF STP(ECD$(58,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",ECD$(58,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "req_date
2012 GOSUB 6800; LINE$=LINE1$+STP(ECD$(64,30),1)+LINE2$; GOTO 2095; REM "attention "
2013 LINE$=LINE1$+STP(ECD$(94,15),1)+LINE2$; GOTO 2095; REM "ship_via
2014 IF STP(ECD$(109,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",ECD$(109,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "needed by
2015 GOSUB 3500; LINE$=LINES_SECTION$; GOTO 2095; REM "entrystart
2016 LINE$=LINE1$+STP(FM0$(214,9),1)+LINE2$; GOTO 2095; REM "cust_loc_code
2017 LINE$=LINE1$+STP(FM0$(51,30),1)+LINE2$; GOTO 2095; REM "address_1
2018 LINE$=LINE1$+STP(FM0$(81,30),1)+LINE2$; GOTO 2095; REM "address_2
2019 LINE$=LINE1$+STP(FM0$(111,16),1)+LINE2$; GOTO 2095; REM "city
2020 LINE$=LINE1$+STP(FM0$(127,2),1)+LINE2$; GOTO 2095; REM "state
2021 LINE$=LINE1$+STP(LOC_ZIP$,1)+LINE2$; GOTO 2095; REM "zip
2022 LINE$=LINE1$+ADDR$[1]+LINE2$; GOTO 2095; REM "addr_1
2023 LINE$=LINE1$+ADDR$[2]+LINE2$; GOTO 2095; REM "addr_2
2024 LINE$=LINE1$+ADDR$[3]+LINE2$; GOTO 2095; REM "addr_3
2025 LINE$=LINE1$+STP(FM0$(236,9),1)+LINE2$; GOTO 2095; REM "cost_center
2026 IF STP(FM0$(248,35),3," ")="" THEN LINE$=LINE1$+STP(FM0$(16,35),1)+LINE2$ ELSE LINE$=LINE1$+STP(FM0$(248,35),1)+LINE2$ END_IF ; GOTO 2095; REM "location_name
2027 LINE$=LINE1$+STP(FM0$(382,20),1)+LINE2$; GOTO 2095; REM "recv_dept
2028 GOSUB 2150; LINE$=LINE1$+SHIPVIA$+LINE2$; GOTO 2095; REM "ship_via_list
2029 LINE$=LINE1$+EC$[4]+LINE2$; GOTO 2095; REM "date
2030 LINE$=LINE1$+EC$[5]+LINE2$; GOTO 2095; REM "time
2031 CALL "ZZDISP","AX",ECD$(235,8),"O/P",X3$,TMP$,"",0,0,X4$; LINE$=LINE1$+TMP$+LINE2$; GOTO 2095; REM "tf_order_no
2032 IF ECD_IN$(330,35)<>DIM(35) THEN ECD$(330,35)=ECD_IN$(330,35) END_IF ; IF ECD$(330,35)=DIM(35) AND EC$[2](591,35)<>DIM(35) THEN ECD$(330,35)=EC$[2](591,35) END_IF ; LINE$=LINE1$+STP(ECD$(330,35),1)+LINE2$; GOTO 2095; REM "mark_for
2033 GOSUB 2200; LINE$=LINE1$+LOC_LIST$+LINE2$; GOTO 2095; REM "location_list
2034 GOSUB 3600; LINE$=LOC_CHG$; GOTO 2095; REM "locchangestart
2035 LINE$=LINE1$+ECD$(376,35)+LINE2$; GOTO 2095; REM "man_name
2036 LINE$=LINE1$+ECD$(243,30)+LINE2$; GOTO 2095; REM "man_addr_1
2037 LINE$=LINE1$+ECD$(273,30)+LINE2$; GOTO 2095; REM "man_addr_2
2038 LINE$=LINE1$+ECD$(303,16)+LINE2$; GOTO 2095; REM "man_city
2039 LINE$=LINE1$+ECD$(319,2)+LINE2$; GOTO 2095; REM "man_state
2040 CALL "ZZDISP","AX",ECD$(321,9),"ZIP",X3$,TMP_ZIP$,"",0,0,X4$; LINE$=LINE1$+TMP_ZIP$+LINE2$; GOTO 2095; REM "man_zip
2041 GOSUB 3700; LINE$=CAT_ITEM_SECTION$; GOTO 2095; REM "category_entry_start
2042 LINE$=LINE1$+MESSAGE$+LINE2$; GOTO 2095; REM "message
2043 GOSUB 3050; LINE$=LINE1$+MESSAGE_SECTION$+LINE2$; GOTO 2095; REM "message_start
2044 LINE$=LINE1$+ECD$(188,1)+LINE2$; GOTO 2095; REM "SHIP_VIA_CODE
2045 IF STP(FM0$(16,35),3," ")="" THEN LD$=FM0$(248,35) ELSE LD$=FM0$(16,35) END_IF ; LINE$=LINE1$+STP(LD$,2)+LINE2$; GOTO 2095; REM "location_desc
2046 LINE$=LINE1$+STP(SHIP$(111,16),1)+LINE2$; GOTO 2095; REM "addr_city
2047 LINE$=LINE1$+STP(SHIP$(127,2),1)+LINE2$; GOTO 2095; REM "addr_state
2048 LINE$=LINE1$+STP(SHIP$(129,9),1)+LINE2$; GOTO 2095; REM "addr_zip
2049 LINE$=LINE1$+STP(SHIP$(51,30),1)+LINE2$; GOTO 2095; REM "addr_unformatted_1"
2050 LINE$=LINE1$+STP(SHIP$(81,30),1)+LINE2$; GOTO 2095; REM "addr_unformatted_2
2051 LINE$=LINE1$+STP(ECD$(376,35),2)+LINE2$; GOTO 2095; REM "addr_name
2052 TEXT_OPT=1; GOSUB 2150; TEXT_OPT=0; LINE$=LINE1$+SHIPVIA$+LINE2$; GOTO 2095; REM "ship_via_text - 137648
2053 TEXT_OPT=1; GOSUB 2200; TEXT_OPT=0; LINE$=LINE1$+LOC_LIST$+LINE2$; GOTO 2095; REM "location_text  -137648
2054 IF ECD_IN$(411,4)<>DIM(4) THEN ECD$(411,4)=ECD_IN$(411,4) END_IF ; LINE$=LINE1$+ECD$(411,4)+LINE2$; GOTO 2095; REM "cc_type
2055 IF ECD_IN$(415,20)<>DIM(20) THEN ECD$(415,20)=ECD_IN$(415,20) END_IF ; IF ECD$(415,20)=DIM(20) THEN ECD$(415,20)=EC$[2](497,20) END_IF ; LINE$=LINE1$+STP(ECD$(415,20),2)+LINE2$; GOTO 2095; REM "cc_number
2056 IF ECD_IN$(435,4)<>DIM(4) THEN ECD$(435,4)=ECD_IN$(435,4) END_IF ; IF ECD$(435,4)=DIM(4) THEN ECD$(435,4)=EC$[2](517,4) END_IF ; LINE$=LINE1$+STP(ECD$(435,4),2)+LINE2$; GOTO 2095; REM "cc_expire
2057 IF ECD_IN$(439,40)<>DIM(40) THEN ECD$(439,40)=ECD_IN$(439,40) END_IF ; IF ECD$(439,40)=DIM(40) THEN ECD$(439,40)=EC$[2](521,40) END_IF ; LINE$=LINE1$+STP(ECD$(439,40),2)+LINE2$; GOTO 2095; REM "cc_name
2058 GOSUB 2300; LINE$=LINE1$+CCLIST$+LINE2$; GOTO 2095; REM "cc_type_list
2059 LINE$=LINE1$+STP(ECD$(168,20),1)+LINE2$; GOTO 2095; REM "ordered_by
2060 IF EC$[2](322,1)="Y" THEN LINE$=LINE1$+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+STP(STR(ITEM_PRICE_TOTAL:"###,###.00-"),1)+LINE2$; GOTO 2095; REM "item_price_total  ssp 146577, 154989
2061 LINE$=LINE1$+STP(STR(ITEM_WGT_TOTAL:"###,###.00-"),1)+LINE2$; GOTO 2095; REM "weight_total_order  ssp 146577
2062 LINE$=LINE1$+X3$(69,1)+STP(STR(GRB(1)-FRT_INSALE:"###,###.00-"),1)+LINE2$; GOTO 2095; REM "invoice_total_net
2063 LINE$=LINE1$+X3$(69,1)+STP(STR(GRB(4)+GRB(6)+GRB(8):"###,###.00-"),1)+LINE2$; GOTO 2095; REM "invoice_sales_tax
2064 LINE$=LINE1$+X3$(69,1)+STP(STR(GRB(2)+FRT_INSALE:"###,###.00-"),1)+LINE2$; GOTO 2095; REM "invoice_freight
2065 LINE$=LINE1$+X3$(69,1)+STP(STR(GRB(9):"###,###.00-"),1)+LINE2$; GOTO 2095; REM "invoice_total
2066 GOSUB 3200; LINE$=INVOICE_SECTION$; GOTO 2095; REM "invoicelinestart
2067 IF ECD_IN$(415,20)<>DIM(20) THEN ECD$(415,20)=ECD_IN$(415,20) END_IF ; IF ECD$(415,20)=DIM(20) THEN ECD$(415,20)=EC$[2](497,20) END_IF ; CCNUMB$=STP(ECD$(415,20),3," "),CCNUMB$=STP(CCNUMB$,3,"-"),CCLEN=LEN(CCNUMB$); IF CCLEN>=4 THEN CCNUMB$="*********"+CCNUMB$(CCLEN-4,4) ELSE CCNUMB$="*********"+CCNUMB$ END_IF ; LINE$=LINE1$+CCNUMB$+LINE2$; GOTO 2095; REM "cc_number_last4
2068 LINE$=LINE1$+STP(STR(QTY_TOTAL_ORDER:"#,###,##0"),1)+LINE2$; GOTO 2095; REM "qty_total_order
2069 LINE$=LINE1$+STP(STR(ITEM_COUNT:"##0"),1)+LINE2$; GOTO 2095; REM "item_count
2070 CALL "ZZDISP","A",INVOICE_HDR_KEY$(7,8),"AR6",X3$,INVOICE_NUMBER$,"",0,0,X4$; LINE$=LINE1$+INVOICE_NUMBER$+LINE2$; GOTO 2095; REM "invoice_number
2071 IF ECD$(56,1)="Y" THEN TEMP$="Yes" ELSE TEMP$="No" END_IF ; LINE$=LINE1$+TEMP$+LINE2$; GOTO 2095; REM "perm_addr_change_shipto_done 154323
2072 IF ECD$(57,1)="Y" THEN TEMP$="Yes" ELSE TEMP$="No" END_IF ; LINE$=LIEN1$+TEMP$+LINE2$; GOTO 2095; REM "perm_attn_change_shipto_done 154323
2090 LINE$=LINE1$+LINE2$; GOTO 2095; REM "tag not found, replace with nothingg
2095 RETURN 
2100 REM "Get Location information & format addr$[] array with address
2104 REM "OLD WAY ->DIM ADDR$[3],FM0$(521); READ (Z[8],KEY="C"+EC$[2](51,14),DOM=02106) IOL=00380
2106 GOSUB SET_READONLY; DIM ADDR$[3],FM0$(618); READ (Z[8],KEY="C"+ECD$(26,14),DOM=2107)IOL=0380
2107 GOSUB CLEAR_READONLY
2108 IF LOCATION_CHANGED THEN GOSUB 8750; IF STP(FM0$(51,87),3," ")="" OR ECD$(243,87)<>DIM(87) AND (ORIGINAL_ECD_SHIPTO$=ECD$(36,4) OR ECD_IN$(243,87)<>DIM(87)) THEN GOTO 2109 ELSE ECD$(243,87)=FM0$(51,87); IF FM0$(248,35)=DIM(35) THEN ECD$(376,35)=FM0$(16,35) ELSE ECD$(376,35)=FM0$(248,35); REM "136662 / 153517 - use name if not blank / ssp 154600 (gosub 8750 to update active location) / 158233 / 153618
2109 DIM SHIP$(521); IF ECD$(243,87)=DIM(87) OR ORIGINAL_ECD_SHIPTO$<>ECD$(36,4) THEN SHIP$=FM0$; GOTO 2112 ELSE SHIP$=FM0$; IF ECD_IN$(243,87)<>DIM(87) THEN SHIP$(51,87)=ECD_IN$(243,87),ECD$(243,87)=ECD_IN$(243,87) ELSE SHIP$(51,87)=ECD$(243,87); REM "if ther is currently no address on the order or the selected shipto has changed then pull the address from FM0 otherwise maintain from the ECD record and allow manual overrides in 2111->136662 / 153618
2110 IF ECD_IN$(273,30)<>DIM(30) THEN SHIP$(81,30)=ECD_IN$(273,30) ELSE IF ECD_IN$(243,87)<>DIM(87) THEN SHIP$(81,30)=ECD_IN$(273,30); REM "if the incoming 2nd address line is blank then if the remaining ecd_in is not blank assume that the user has entered in a blank in the 2nd address line and assign
2111 IF ECD_IN$(243,30)<>DIM(30) THEN SHIP$(51,30)=ECD_IN$(243,30) END_IF ; IF ECD_IN$(303,16)<>DIM(16) THEN SHIP$(111,16)=ECD_IN$(303,16) END_IF ; IF ECD_IN$(319,2)<>DIM(2) THEN SHIP$(127,2)=ECD_IN$(319,2) END_IF ; IF ECD_IN$(321,9)<>DIM(9) THEN SHIP$(129,9)=ECD_IN$(321,9) END_IF ; IF ECD_IN$(376,35)<>DIM(35) THEN SHIP$(248,35)=ECD_IN$(376,35)
2113 REM "IF X3$(9,3)="092" THEN IF LOCATION_CHANGED THEN IF FM0$(248,35)=DIM(35) THEN ECD$(376,35)=FM0$(16,35) ELSE ECD$(376,35)=FM0$(248,35); REM "153618
2119 LOC_ZIP$=""; CALL "ZZDISP","AX",SHIP$(129,9),"ZIP",X3$,LOC_ZIP$,"",0,0,X4$; REM "153619
2120 ADDRI=1; REM "153618
2121 IF STP(SHIP$(51,30),3," ")="" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=STP(SHIP$(51,30),1),ADDRI=ADDRI+1; REM "153618
2122 IF STP(SHIP$(81,30),3," ")="" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=STP(SHIP$(81,30),1),ADDRI=ADDRI+1; REM "153618
2123 IF STP(SHIP$(111,16),3," ")="" THEN CSZ$=STP(SHIP$(127,2),1)+" "+STP(LOC_ZIP$,1) ELSE CSZ$=STP(SHIP$(111,16),1)+", "+STP(SHIP$(127,2),1)+" "+STP(LOC_ZIP$,1); REM "153618
2124 IF STP(CSZ$,3," ")="" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=CSZ$,ADDRI=ADDRI+1; REM "153618
2125 GOSUB 6800; IF LOCATION_CHANGED THEN LOCATION_CHANGED=0; REM "Set attention field if blank 158233
2140 IF ECD_IN$(411,68)<>DIM(68) THEN ECD$(411,68)=ECD_IN$(411,68); REM "credit card information
2145 RETURN 
2150 REM "Return SHIPVIA$ as HTML for drop down list
2151 IF EC$[7](587,1)="Y" AND EC$[1](259,1)<>" " THEN GOTO 2186; REM "ck if restriction to ship-to ship-via activated  ssp 145477
2152 IF EC$[2](735,10)=DIM(10) THEN BUYER_SPECIFIC_SHIPVIA$="N" ELSE BUYER_SPECIFIC_SHIPVIA$="Y"
2153 READ (Z[23],KEY=EC$[2](51,10)+"SHIP_VIA  ",DOM=2154); REM "ck for customer specific shipto's
2154 CUSTOMER_SPECIFIC_SHIPVIA$="N"; ECV_KEY$=KEY(Z[23],END=2155); IF ECV_KEY$(1,20)=EC$[2](51,10)+"SHIP_VIA  " THEN CUSTOMER_SPECIFIC_SHIPVIA$="Y"
2155 SHIPVIA$=""; IF ECD_IN$(188,1)<>" " THEN SELECTED$=ECD_IN$(188,1) ELSE IF ECD$(188,1)<>" " THEN SELECTED$=ECD$(188,1) ELSE IF EC$[2](61,4)=DIM(4) THEN SELECTED$=EC$[1](155,1) ELSE SELECTED$=FM0$(305,1)
2158 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "If in comment remove the start of the comment
2159 IF CUSTOMER_SPECIFIC_SHIPVIA$="N" AND BUYER_SPECIFIC_SHIPVIA$="N" THEN READ (Z[9],KEY="S",DOM=2160) ELSE IF BUYER_SPECIFIC_SHIPVIA$="Y" THEN READ (Z[23],KEY=DIM(10)+EC$[2](735,10),DOM=2180) ELSE GOTO 2170
2160 READ (Z[9],END=2190)IOL=0390; IF FMPS$(1,1)<>"S" THEN GOTO 2190 ELSE IF FMPS$(18,1)="Y" THEN GOTO 2160; REM "Skip ship via's marked with an yes
2163 IF TEXT_OPT THEN SHIPVIA$=SHIPVIA$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2160; REM "137648
2165 IF FMPS$(2,1)=SELECTED$ THEN SHIPVIA$=SHIPVIA$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE SHIPVIA$=SHIPVIA$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2167 GOTO 2160
2170 REM "build ship-vias from customer specific list
2171 CUST_SHIPVIA$=KEY(Z[23],END=2176); READ (Z[23]); IF CUST_SHIPVIA$(1,20)<>EC$[2](51,10)+"SHIP_VIA  " THEN GOTO 2176
2172 READ (Z[9],KEY="S"+CUST_SHIPVIA$(21,1),DOM=2171)IOL=0390
2173 IF FMPS$(18,1)="Y" THEN GOTO 2171; REM "Skip ship via's marked with an yes
2174 IF TEXT_OPT THEN SHIPVIA$=SHIPVIA$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2171 ELSE IF FMPS$(2,1)=SELECTED$ THEN SHIPVIA$=SHIPVIA$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE SHIPVIA$=SHIPVIA$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2175 GOTO 2171
2180 REM "build ship-vias from buyer assigned code set
2181 BUYER_SHIPVIA$=KEY(Z[23],END=2190); READ (Z[23]); IF BUYER_SHIPVIA$(1,20)<>DIM(10)+EC$[2](735,10) THEN GOTO 2190
2182 READ (Z[9],KEY="S"+BUYER_SHIPVIA$(21,1),DOM=2181)IOL=0390
2183 IF FMPS$(18,1)="Y" THEN GOTO 2181; REM "Skip ship via's marked with an yes
2184 IF TEXT_OPT THEN SHIPVIA$=SHIPVIA$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2181 ELSE IF FMPS$(2,1)=SELECTED$ THEN SHIPVIA$=SHIPVIA$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE SHIPVIA$=SHIPVIA$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2185 GOTO 2181
2186 REM "restricted to ship-via on shipto
2187 IF TEXT_OPT THEN SHIPVIA$=EC$[1](259,1)+" "+EC$[1](260,15)+EOL$ ELSE SHIPVIA$="<option selected value="+QUO+EC$[1](259,1)+QUO+">"+EC$[1](260,15)+"</option>"; REM "ssp 145477
2190 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN SHIPVIA$=SHIPVIA$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2191 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2195 RETURN 
2200 REM "Return LOC_LIST$ as HTML for drop down listwhen called from lines section
2205 LOC_LIST$=""; IF ECD_IN$(36,4)<>DIM(4) THEN SELECTED$=ECD_IN$(36,4) ELSE IF ECD$(36,4)<>DIM(4) THEN SELECTED$=ECD$(36,4) ELSE SELECTED$=EC$[2](61,4)
2206 IF SELECTED$=DIM(4) THEN LOC_LIST$="<option selected value="+QUO+QUO+"></option>"; REM "if no pre selected value, default to blank so we don't overwrite with the first one.
2210 IF EC$[9]="" THEN PGMNAME$="EC3SCS" ELSE PGMNAME$=STP(EC$[9](57,6),2)
2211 IF TEXT_OPT THEN ALL$="T" ELSE ALL$=""
2212 CALL PGMNAME$,X3$,X4$,EC_PARM$,EC${ALL},ST_LIST$,SELECTED$,ALL$,""
2214 LOC_LIST$=LOC_LIST$+ST_LIST$
2234 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "If in comment remove the start of the comment
2235 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN LOC_LIST$=LOC_LIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2236 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2245 RETURN 
2250 REM "Return LOC_LIST$ as HTML for drop down list when called from loc change section
2255 LOC_LIST$=""; IF ECD_IN$(36,4)<>DIM(4) THEN SELECTED$=ECD_IN$(36,4) ELSE IF ECD$(36,4)<>DIM(4) THEN SELECTED$=ECD$(36,4) ELSE SELECTED$=EC$[2](61,4)
2260 IF EC$[9]="" THEN PGMNAME$="EC3SCS" ELSE PGMNAME$=STP(EC$[9](57,6),2)
2262 CALL PGMNAME$,X3$,X4$,EC_PARM$,EC${ALL},ST_LIST$,SELECTED$,"",""
2264 LOC_LIST$=LOC_LIST$+ST_LIST$
2284 IF POS("<!"=LC1$,-1)<>0 THEN LC1$=LC1$(1,POS("<!"=LC1$,-1)-1); REM "If in comment remove the start of the comment
2285 STMP=POS("</select>"=LC1$,-1); IF STMP<>0 THEN LOC_LIST$=LOC_LIST$+"</select>"; IF STMP=1 THEN LC1$="" ELSE LC1$=LC1$(1,STMP-1)
2286 IF LC2$>"" THEN IF LC2$(1,1)=">" THEN LC2$=LC2$(2); REM "if token was part of a comment, then remove the end of the comment.
2295 RETURN 
2350 REM "Return CCLIST$ as HTML for drop down list
2355 CCLIST$=""; IF EC$[2](493,4)<>DIM(4) THEN SELECTED$=EC$[2](493,4) ELSE SELECTED$=EC$[1](327,4) END_IF ; IF ECD_IN$(411,4)<>DIM(4) THEN SELECTED$=ECD_IN$(411,4)
2358 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "If in comment remove the start of the comment
2360 FOR CCCOUNT=0 TO 6; CCCODE$=EC$[1](CCCOUNT*4+327,4),CCDESC$=EC$[1](CCCOUNT*30+355,30); IF CCCODE$=DIM(4) THEN GOTO 2367
2365 IF CCCODE$=SELECTED$ THEN CCLIST$=CCLIST$+"<option selected value="+QUO+CCCODE$+QUO+">"+CCDESC$+"</option>" ELSE CCLIST$=CCLIST$+"<option value="+QUO+CCCODE$+QUO+">"+CCDESC$+"</option>"
2367 NEXT CCCOUNT
2370 GOTO 2376; REM "build credit cards from customer specific list   *** FUTURE ***
2371 CUST_CCLIST$=KEY(Z[23],END=2376); READ (Z[23]); IF CUST_CCLIST$(1,20)<>EC$[2](51,10)+"SHIP_VIA  " THEN GOTO 2376
2372 READ (Z[9],KEY="S"+CUST_CCLIST$(21,1),DOM=2371)IOL=0390
2373 IF FMPS$(18,1)="Y" THEN GOTO 2371; REM "Skip ship via's marked with an yes
2374 IF TEXT_OPT THEN CCLIST$=CCLIST$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2371 ELSE IF FMPS$(2,1)=SELECTED$ THEN CCLIST$=CCLIST$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE CCLIST$=CCLIST$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2375 GOTO 2371
2385 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN CCLIST$=CCLIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2386 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2395 RETURN 
3000 REM "message processing, lookup up message in ECO, return in MESSAGE_SECTION
3005 IF ORDER_MESSAGE_NO=0 THEN MESSAGE_SECTION$=""; DIM ECO$(300); GOTO 3045; REM "discard message section HTML
3010 DIM ECO$(300); ECO$(1,10)=ECD$(26,10),ECO$(11,10)=X0$,ECO$(21,5)=STR(ORDER_MESSAGE_NO:"00000")
3011 FIND (Z[17],KEY=ECO$(1,25),DOM=3012)ECO$; GOTO 3013
3012 ECO$(1,10)=DIM(10); FIND (Z[17],KEY=ECO$(1,25),DOM=3016)ECO$
3016 REM "PRINT ECO$; ESCAPE
3017 IF ECO$(26,1)="Y" THEN GOTO 3045; REM "If don't display, then skip this section
3020 MTMP$=STP(ECO$(30,240),1)
3025 MS2_INDEX=POS("?tf?"=MTMP$); IF MS2_INDEX=0 THEN GOTO 3040
3026 MSEND2_INDEX=POS("?"=MTMP$(MS2_INDEX+4)),MTMP_TAG$=MTMP$(MS2_INDEX+4,MSEND2_INDEX-1),MTMP1$=MTMP$(1,MS2_INDEX-1),MTMP2$=MTMP$(MS2_INDEX+MSEND2_INDEX+4)
3030 MINFO$=""; IF NUM(MTMP_TAG$,ERR=3031)<=15 THEN MINFO$=MESS_INFO$[NUM(MTMP_TAG$,ERR=3031)]
3032 MTMP$=MTMP1$+MINFO$+MTMP2$
3035 GOTO 3025
3041 MLINE$=""
3042 IF MTMP$="" THEN GOTO 3043 ELSE MPOS=POS(" "=MTMP$); IF MPOS=0 OR MPOS=LEN(MTMP$) THEN INLINE$=MTMP$,MTMP$="" ELSE INLINE$=MTMP$(1,MPOS),MTMP$=MTMP$(MPOS+1) END_IF ; IF LEN(MLINE$)+LEN(INLINE$)>60 THEN MESSAGE$=MESSAGE$+MLINE$+EOL$,MLINE$=INLINE$ ELSE MLINE$=MLINE$+INLINE$ END_IF ; GOTO 3042
3043 MESSAGE$=MESSAGE$+MLINE$
3044 REM "DIM MESS_INFO$[FN%NEA("MESS_INFO$",1)]
3045 RETURN 
3050 REM "Get lines section in MS_TEMPLATE$ and generate MESSAGE_SECTION$ containing the message
3052 MESSAGE_SECTION$="",MS_TAGS$="001<message>"
3053 MS_TEMPLATE$=LINE$
3055 READ (100,END=3056)LINE$; GOSUB 8150; MS_TEMPLATE$=MS_TEMPLATE$+LINE$+EOL$; IF POS("?tf?message_end?"=LINE$)=0 THEN GOTO 3055
3056 MSTART=POS("<!?tf?message_start?>"=MS_TEMPLATE$),MSTARTEND=POS("start?>"=MS_TEMPLATE$); IF MSTARTEND<>0 THEN MS_TEMPLATE$=MS_TEMPLATE$(MSTARTEND+8); REM "get rid of leading tag
3057 MSEND=POS("<!?tf?message_end"=MS_TEMPLATE$); IF MSEND<>0 THEN MS_TEMPLATE$=MS_TEMPLATE$(1,MSEND-1)
3064 MS$=MS_TEMPLATE$
3065 MS_INDEX=POS("?tf?"=MS$); IF MS_INDEX=0 THEN GOTO 3091
3066 MSEND_INDEX=POS("?"=MS$(MS_INDEX+4)),MS_TAG$=MS$(MS_INDEX+4,MSEND_INDEX-1),MS1$=MS$(1,MS_INDEX-1),MS2$=MS$(MS_INDEX+MSEND_INDEX+4),MS_POS=POS("<"+MS_TAG$+">"=MS_TAGS$); IF MS_POS=0 THEN MS$=MS1$+MS2$,MS_INDEX=0 ELSE MS_INDEX=NUM(MS_TAGS$(MS_POS-3,3))
3070 ON MS_INDEX GOTO 3089,3071,3089
3071 GOSUB 3000; MS$=MS1$+MESSAGE$+MS2$; GOTO 3090; REM "message
3089 MS$=MS1$+MS2$; GOTO 3090; REM "Not found
3090 GOTO 3065
3091 MESSAGE_SECTION$=MS$
3092 IF ORDER_MESSAGE_NO=0 THEN MESSAGE_SECTION$=""; REM "discard message section if no message
3095 IF POS("<!"=LINE1$)<>0 THEN LINE1$=""; REM "**wab qbf
3096 IF POS(">"=LINE2$)<>0 THEN LINE2$=""; REM "**wab qbf
3099 RETURN 
3100 REM "Lookup info for Special Charge
3105 DIM FMPX$(61),FMPX[3]; FIND (Z[9],KEY="X"+ECE$(39,10),DOM=3106)FMPX$,FMPX[0],FMPX[1],FMPX[2],FMPX[3]; GOTO 3110
3106 ECE$(11,2)="01",MESSAGE_NO=1; MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 3000; GOTO 3145; REM "if not in Special chrages,flag error
3110 IF ECE$(67,40)=DIM(40) THEN ECE$(67,40)=FMPX$(12,40); REM "Set description if not set
3112 IF ECE$(107,4)=DIM(4) THEN ECE$(107,4)=FMPX$(55,4),ECE[1]=FMPX[0]
3140 GOSUB 6700; REM "write line 159048
3145 RETURN 
3200 REM "Get lines section in LI_TEMPLATE$ and generate INVOICE_SECTION$ containing an entry for each order line from ESE
3202 INVOICE_SECTION$="",LI_TAGS$="001<order_line_number>002<line_type>003<item_code>004<item_desc>005<um>006<quantity_ordered>007<qty_per_um>008<session_id>009<worksheet>010<qty_in_eaches_ordered>011<cic_code>012<invoice_unit_price>013<invoice_unit_price_ext>014<qty_in_eaches_shipped>015<quantity_shipped>016<line_class>"
3203 REM "Setup LI_TEMPLATE$
3204 LI_TEMPLATE$=LINE$,INVOICE_LINE_READ=0
3205 READ (100,END=3206)LINE$; GOSUB 8150; LI_TEMPLATE$=LI_TEMPLATE$+LINE$+EOL$; IF POS("?tf?invoicelineend?"=LINE$)=0 THEN GOTO 3205
3208 IF DISPLAY_LINE_NUMBER$<>"" THEN DIM ECE$(499),ECE[8]; READ (Z[3],KEY=WORKSHEET$+DISPLAY_LINE_NUMBER$,DOM=3295)IOL=0330; GOSUB 7600; GOSUB 8250; GOTO 3214 ! ssp #146692 #155076
3210 INVOICE_LINE_READ=INVOICE_LINE_READ+1; IF INVOICE_LINE_READ>INVOICE_LINE_COUNT THEN GOTO 3295 ELSE IF INVOICE$[INVOICE_LINE_READ,4]<>"Y" THEN GOTO 3210; REM "get next line and check print/display status
3211 GRT$=INVOICE$[INVOICE_LINE_READ,2],INVOICE_LINE_EXT=NUM(INVOICE$[INVOICE_LINE_READ,3]),PRINT_INVOICE_LINE$=INVOICE$[INVOICE_LINE_READ,4],QTY_PER=NUM(INVOICE$[INVOICE_LINE_READ,5]),INV_QTY_ORDERED=NUM(INVOICE$[INVOICE_LINE_READ,6]),INV_QTY_SHIPPED=NUM(INVOICE$[INVOICE_LINE_READ,7]),INV_UNIT_PRICE=NUM(INVOICE$[INVOICE_LINE_READ,8]),OE=NUM(INVOICE$[INVOICE_LINE_READ,9]),SE=NUM(INVOICE$[INVOICE_LINE_READ,10]); REM "set variables for invoice line being processed  "
3214 LS$=LI_TEMPLATE$
3215 LI_INDEX=POS("?tf?"=LS$); IF LI_INDEX=0 THEN GOTO 3291
3216 LSEND_INDEX=POS("?"=LS$(LI_INDEX+4)),LI_TAG$=LS$(LI_INDEX+4,LSEND_INDEX-1),LS1$=LS$(1,LI_INDEX-1),LS2$=LS$(LI_INDEX+LSEND_INDEX+4),LI_POS=POS("<"+LI_TAG$+">"=LI_TAGS$); IF LI_POS=0 THEN LS$=LS1$+LS2$,LI_INDEX=0 ELSE LI_INDEX=NUM(LI_TAGS$(LI_POS-3,3))
3220 ON LI_INDEX GOTO 3289,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,3235,3326,3289
3221 LS$=LS1$+STR(NUM(GRT$(47,3)):"###")+LS2$; GOTO 3290; REM "order_line_number
3222 LS$=LS1$+GRT$(1,1)+LS2$; GOTO 3290; REM "line_type
3223 GOSUB 4250; IF STP(IC2$(35,20),3," ")="" THEN IIC$=STP(GRT$(65,10),1) ELSE IIC$=STP(IC2$(35,20),1) END_IF ; LS$=LS1$+IIC$+LS2$; GOTO 3290; REM "item_code - will use united stationers code if existing
3224 LS$=LS1$+STP(GRT$(7,40),1)+LS2$; GOTO 3290; REM "item_desc
3225 TMP$=STP(GRT$(50,4),1)+"/"+STP(STR(QTY_PER:"##,###"),2); IF TMP$="/" THEN LS$=LS1$+LS2$; GOTO 3290 ELSE LS$=LS1$+TMP$+LS2$; GOTO 3290; REM "um
3226 LS$=LS1$+STR(INV_QTY_ORDERED:"#,###,##0.00")+LS2$; GOTO 3290; REM "quantity_ordered
3227 LS$=LS1$+STR(QTY_PER:"##,###")+LS2$; GOTO 3290; REM "qty_per_um
3228 LS$=LS1$+EC$[1](1,7)+LS2$; GOTO 3290; REM "session_id
3229 LS$=LS1$+WORKSHEET$+LS2$; GOTO 3290; REM "worksheet
3230 LS$=LS1$+STR(OE:"#,###,###")+LS2$; GOTO 3290; REM "qty_in_eaches_ordered
3231 LS$=LS1$+TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1))+LS2$; GOTO 3290; REM "cic_code, form code if cic_code is blank
3232 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3290 ELSE LS$=LS1$+STR(INV_UNIT_PRICE:X3$(69,1)+"###,##0.00")+LS2$; GOTO 3290; REM "invoice_unit_price  154989
3233 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3290 ELSE LS$=LS1$+STR(INVOICE_LINE_EXT:X3$(69,1)+"###,##0.00-")+LS2$; GOTO 3290; REM "invoice_unit_price_ext 154989
3234 LS$=LS1$+STR(SE:"#,###,##0")+LS2$; GOTO 3290; REM "qty_in_eaches_shipped  "
3235 LS$=LS1$+STR(INV_QTY_SHIPPED:"#,###,##0.00")+LS2$; GOTO 3290; REM "quantity_shipped
3236 LC=NUM(GRT$(47,3)),LC$=STR(MOD(LC,2)+1); LS$=LS1$+LC$+LS2$; GOTO 3290; REM "line_class
3289 LS$=LS1$+LS2$; GOTO 3290; REM "not found replace with a '?'
3290 GOTO 3215
3291 IF LEN(INVOICE_SECTION$)+LEN(LS$)>64000 THEN PRINT (OUTPUT)INVOICE_SECTION$,EOL$; INVOICE_SECTION$=""; REM "ssp#134905
3292 INVOICE_SECTION$=INVOICE_SECTION$+LS$; IF DISPLAY_LINE_NUMBER$<>"" THEN GOTO 3295 ELSE GOTO 3210; REM "add to lines section, then get next line if any ssp#146692
3295 RETURN 
3500 REM "Get lines section in LS_TEMPLATE$ and generate LINES_SECTION$ containing an entry for each order line from ESE
3502 LINES_SECTION$="",LS_TAGS$="001<worksheet>002<action>003<action_desc>"
3503 REM "Setup LS_TEMPLATE$
3504 LS_TEMPLATE$=LINE$
3505 READ (100,END=3506)LINE$; GOSUB 8150; LS_TEMPLATE$=LS_TEMPLATE$+LINE$+EOL$; IF POS("?tf?entryend?"=LINE$)=0 THEN GOTO 3505
3508 IF DISPLAY_LINE_NUMBER$<>"" THEN DIM ECE$(499),ECE[8]; READ (Z[3],KEY=WORKSHEET$+DISPLAY_LINE_NUMBER$,DOM=3595)IOL=0330; GOSUB 7600; GOSUB 8250; GOTO 3514 ! ssp #146692 155076
3509 GOSUB SET_READONLY; READ (Z[3],KEY=WORKSHEET$,DOM=*NEXT) ! SSP290055 ADD READONLY
3510 GOSUB CLEAR_READONLY ! SSP290055
3511 FOR WORKSHEET_ENTRY=0 TO LEN(WORKSHEET_LIST$)/10-1 ! SSP290055 LINE 3510 BECOMES 3511
3512 WSHEET$=WORKSHEET_LIST$((WORKSHEET_ENTRY)*10+1,10),WACTION$=REQUESTED_ACTION_LIST$((WORKSHEET_ENTRY)*1+1,1) ! SSP290055 LINE 3511 BECOMES 3512
3513 IF WACTION$="A" THEN WDESC$="Approved" ELSE IF WACTION$="R" THEN WDESC$="Rejected" ELSE WDESC$="" ! SSP290055 LINE 3512 BECOMES 3513
3514 LS$=LS_TEMPLATE$
3515 LS_INDEX=POS("?tf?"=LS$); IF LS_INDEX=0 THEN GOTO 3591
3516 LSEND_INDEX=POS("?"=LS$(LS_INDEX+4)),LS_TAG$=LS$(LS_INDEX+4,LSEND_INDEX-1),LS1$=LS$(1,LS_INDEX-1),LS2$=LS$(LS_INDEX+LSEND_INDEX+4),LS_POS=POS("<"+LS_TAG$+">"=LS_TAGS$); IF LS_POS=0 THEN LS$=LS1$+LS2$,LS_INDEX=0 ELSE LS_INDEX=NUM(LS_TAGS$(LS_POS-3,3))
3520 ON LS_INDEX GOTO 3589,3521,3522,3523,3589; REM "159423
3521 LS$=LS1$+WSHEET$+LS2$; GOTO 3590; REM "worksheet
3522 LS$=LS1$+WACTION$+LS2$; GOTO 3590; REM "action
3523 LS$=LS1$+WDESC$+LS2$; GOTO 3590; REM "action_desc
3589 LS$=LS1$+LS2$; GOTO 3590; REM "not found replace with a '?'
3590 GOTO 3515
3591 IF LEN(LINES_SECTION$)+LEN(LS$)>24000 THEN PRINT (OUTPUT)LINES_SECTION$,EOL$; LINES_SECTION$=""; REM "ssp#134905
3592 LINES_SECTION$=LINES_SECTION$+LS$; NEXT WORKSHEET_ENTRY
3595 RETURN 
3600 REM "Location change section, template in LC_TEMPLATE$ and generate LOC_CHG$ containing the section with location change info. HOWEVER, if buyer id location field is filled in the skip this section, they can't change it.
3602 LOC_CHG$="",LC_TAGS$="001<location_list>"
3603 REM "Setup LC_TEMPLATE$
3604 LC_TEMPLATE$=LINE$+EOL$
3605 READ (100,END=3606)LINE$; GOSUB 8150; LC_TEMPLATE$=LC_TEMPLATE$+LINE$+EOL$; IF POS("?tf?locchangeend?"=LINE$)=0 THEN GOTO 3605
3609 IF EC$[2](61,4)<>DIM(4) THEN GOTO 3695; REM "If location code of buyer record is not blank, then they are not allowed to change their shipto location.
3614 LC$=LC_TEMPLATE$
3615 LC_INDEX=POS("?tf?"=LC$); IF LC_INDEX=0 THEN GOTO 3691
3616 LCEND_INDEX=POS("?"=LC$(LC_INDEX+4)),LC_TAG$=LC$(LC_INDEX+4,LCEND_INDEX-1),LC1$=LC$(1,LC_INDEX-1),LC2$=LC$(LC_INDEX+LCEND_INDEX+4),LC_POS=POS("<"+LC_TAG$+">"=LC_TAGS$); IF LC_POS=0 THEN LC$=LC1$+LC2$,LC_INDEX=0 ELSE LC_INDEX=NUM(LC_TAGS$(LC_POS-3,3))
3620 ON LC_INDEX GOTO 3689,3621,3689
3621 GOSUB 2250; LC$=LC1$+LOC_LIST$+LC2$; GOTO 3690; REM "location_list
3689 LC$=LC1$+LC2$; GOTO 3690; REM "not found replace with a BLANK
3690 GOTO 3615
3691 LOC_CHG$=LC$; REM "Put in loc_chg$ and leave
3695 RETURN 
3700 REM "Get cat item entry in CI_TEMPLATE$ and generate CAT_ITEM_SECTION$ containing an entry for each item in the catalog
3702 CAT_ITEM_SECTION$="",CI_TAGS$="001<category_desc>002<category_addl_desc>003<category_item_list>004<category_item_um_list>"
3703 REM "Setup CI_TEMPLATE$
3704 CI_TEMPLATE$=LINE$
3705 READ (100,END=3706)LINE$; GOSUB 8150; CI_TEMPLATE$=CI_TEMPLATE$+LINE$+EOL$; IF POS("?tf?category_entry_end?"=LINE$)=0 THEN GOTO 3705
3706 IF LEN(EC$[6])<10 THEN GOTO 3795
3708 FOR CAT_I=1 TO LEN(EC$[6])-9 STEP 10
3709 CATALOG_ID$=EC$[2](51,10); READ (Z[15],KEY=CATALOG_ID$+EC$[6](CAT_I,10),DOM=3710); REM "Position catalog
3710 DIM ECH$(60); READ (Z[15],END=3791)ECH$; IF ECH$(1,10)<>CATALOG_ID$ OR ECH$(11,10)<>EC$[6](CAT_I,10) THEN GOTO 3791
3712 DIM ECG$(100); READ (Z[14],KEY=ECH$(11,10),DOM=3710)ECG$
3714 CI$=CI_TEMPLATE$
3715 CI_INDEX=POS("?tf?"=CI$); IF CI_INDEX=0 THEN GOTO 3791
3716 CIEND_INDEX=POS("?"=CI$(CI_INDEX+4)),CI_TAG$=CI$(CI_INDEX+4,CIEND_INDEX-1),CI1$=CI$(1,CI_INDEX-1),CI2$=CI$(CI_INDEX+CIEND_INDEX+4),CI_POS=POS("<"+CI_TAG$+">"=CI_TAGS$); IF CI_POS=0 THEN CI$=CI1$+CI2$,CI_INDEX=0 ELSE CI_INDEX=NUM(CI_TAGS$(CI_POS-3,3))
3720 ON CI_INDEX GOTO 3789,3721,3722,3723,3724,3789
3721 CI$=CI1$+STP(ECG$(11,30),1)+CI2$; GOTO 3790; REM "category_desc
3722 CI$=CI1$+STP(ECG$(41,60),1)+CI2$; GOTO 3790; REM "category_addl_desc
3723 UM=0; GOSUB 3800; CI$=CI1$+CI_LIST$+CI2$; GOTO 3790; REM "category_item_list
3724 UM=1; GOSUB 3800; CI$=CI1$+CI_LIST$+CI2$; GOTO 3790; REM "catetory_item_um_list adds u/m to descriptions
3789 CI$=CI1$+CI2$; GOTO 3790; REM "tag not found
3790 GOTO 3715
3791 IF LEN(CAT_ITEM_SECTION$)+LEN(CI$)>64000 THEN PRINT (OUTPUT)CAT_ITEM_SECTION$,EOL$,; CAT_ITEM_SECTION$=""; REM "ssp# 130807
3792 CAT_ITEM_SECTION$=CAT_ITEM_SECTION$+CI$; NEXT CAT_I; REM "Add to cat item section, then get next category if any, moved from 3791 by ssp#130807
3795 RETURN 
3800 REM "Process list of items for a category, when we come in, ECH$ holds the first item for the list
3805 CI_LIST$="<option value="+QUO+QUO+">"
3809 CURR_CATEGORY$=ECH$(11,10); GOTO 3811; REM "First time thru, skip read we already have ECH$
3810 DIM ECH$(60); READ (Z[15],END=3830)ECH$; IF ECH$(1,10)<>CATALOG_ID$ OR ECH$(11,10)<>CURR_CATEGORY$ THEN GOTO 3830
3811 DIM FM1$(449),FM1[31]; FIND (Z[7],KEY=ECH$(41,20),DOM=3812)IOL=0370
3813 IF UM THEN CI_UM$=" - "+STP(FM1$(100,4),2)+"/"+STP(STR(FM1[4]:"#####"),2) ELSE CI_UM$=""
3815 CI_LIST$=CI_LIST$+"<option value="+QUO+FM1$(11,10)+QUO+">"+STP(ECH$(21,20),1)+"-"+STP(FM1$(42,40),1)+CI_UM$+"</option>"
3820 GOTO 3810
3830 REM "Clean up CI_LIST$, etc,
3832 CTMP=POS("</select>"=CI1$,-1); IF CTMP<>0 THEN CI_LIST$=CI_LIST$+"</select>"; IF CTMP=1 THEN CI1$="" ELSE CI1$=CI1$(1,CTMP-1)
3833 IF CI2$>"" THEN IF CI2$(1,1)=">" THEN CI2$=CI2$(2); REM "if token was part of a comment, then remove the end of the comment
3845 RETURN 
3850 REM "get line message section (linemessage_start)
3852 LINEMSG_SECTION$="",LM_TEMPLATE$=LS2$(2); IF LS1$(LEN(LS1$)-1,2)="<!" THEN LS1$=LS1$(1,LEN(LS1$)-2)
3853 LINEMSG_END=POS("<!?tf?linemessage_end"=LM_TEMPLATE$),LM_TEMPLATE$=LM_TEMPLATE$(1,LINEMSG_END-1)
3854 LINEMSG_END=POS("<!?tf?linemessage_end"=LS2$); IF LEN(LS2$)=LINEMSG_END+23 THEN LS2$="" ELSE LS2$=LS2$(LINEMSG_END+23); REM "strip out the line message section from LS2$
3858 DIM OPTIONS$(20); REM "OPTIONS$(1,1)=ORDER_REVIEW$
3860 CALL "EC3MG0",X3$,X4$,EC_PARM$,EC${ALL},LM_TEMPLATE$,ECE$,MESS_INFO${ALL},OPTIONS$; REM "process messages for line
3891 LINEMSG_SECTION$=LM_TEMPLATE$
3895 RETURN 
3900 REM "Get lotted lines section in LOT_TEMPLATE$ and generate LOT_SECTION$ containing an entry for each order line from ICF for the corresponding line section item
3903 REM "Setup LOT_TEMPLATE$
3904 LOT_TEMPLATE$=LS2$(2)
3905 LOT_END=POS("<!?tf?lotlineend"=LOT_TEMPLATE$),LOT_TEMPLATE$=LOT_TEMPLATE$(1,LOT_END-1)
3906 LS2$=LS2$(2); REM "get rid of trailing > from opening <!?tf?lotlinstart>
3907 LOT_END=POS("<!?tf?lotlineend"=LS2$); IF LEN(LS2$)=LOT_END+18 THEN LS2$="" ELSE LS2$=LS2$(LOT_END+18); REM "strip out the lot section from LS2$
3910 DIM ECR$(1000); FIND (Z[25],KEY=ECE$(29,20),DOM=3911)ECR$
3912 IF STP(ECR$(256,48),1)="" THEN WHSE_LIST$=EC$[11] ELSE WHSE_LIST$=STP(ECR$(256,48),1)
3920 REM "get lot records
3922 CALL "EC3IC1",X3$,X4$,EC_PARM$,EC${ALL},ECE$(29,20),WHSE_LIST$,ECE[0]*ECE[1],ECE[1],ICF_INFO${ALL},NEXT_ICF_INDEX,ECD$(235,8)
3925 REM "IF NEXT_ICF_INDEX=1 THEN LET LOT_TEMPLATE$=""; GOTO 03933; REM "NO LOT RECORDS
3930 REM "output lot section
3932 CALL "EC3IC2",X3$,X4$,EC_PARM$,EC${ALL},LOT_TEMPLATE$,ICF_INFO${ALL},NEXT_ICF_INDEX-1,""
3933 IF ECE$(129,1)=" " THEN LOT_SECTION$=LOT_TEMPLATE$ ELSE LOT_SECTION$=""; REM "if po being issued then eliminate lot section completely
3940 RETURN 
3950 REM "Get lines section in TPINFO_TEMPLATE$ and generate TPINFO_SECTION$ containing an entry for each order line from ESE
3951 IF LEN(LS1$)<=2 THEN LS1$="" ELSE LS1$=LS1$(1,LEN(LS1$)-2); REM "get rid of <!
3952 TPINFO_SECTION$="",TPINFO_TAGS$="001<3p_info_1>002<3p_info_2>"
3953 REM "Setup TPINFO_TEMPLATE$
3954 TPINFO_TEMPLATE$=LS2$(2)
3955 TPINFO_END=POS("<!?tf?3pinfoend"=TPINFO_TEMPLATE$),TPINFO_TEMPLATE$=TPINFO_TEMPLATE$(1,TPINFO_END-1)
3956 LS2$=LS2$(2); REM "get rid of trailing > from opening <!?tf?3pinfostart>
3957 TPINFO_END=POS("<!?tf?3pinfoend"=LS2$); IF LEN(LS2$)=TPINFO_END+17 THEN LS2$="" ELSE LS2$=LS2$(TPINFO_END+17); REM "strip out the lot section from LS2$
3959 IF LEN(ECR$)<252 THEN GOTO 3995 END_IF ; IF ECR$(243,10)=DIM(10) THEN TPINFO_TEMPLATE$=""; GOTO 3995; REM "if no 3pinfo on item parameter then eliminate section
3965 TPINFO_INDEX=POS("?tf?"=TPINFO_TEMPLATE$); IF TPINFO_INDEX=0 THEN GOTO 3991
3966 TPINFOEND_INDEX=POS("?"=TPINFO_TEMPLATE$(TPINFO_INDEX+4)),TPINFO_TAG$=TPINFO_TEMPLATE$(TPINFO_INDEX+4,TPINFOEND_INDEX-1),TP1$=TPINFO_TEMPLATE$(1,TPINFO_INDEX-1),TP2$=TPINFO_TEMPLATE$(TPINFO_INDEX+TPINFOEND_INDEX+4),TPINFO_POS=POS("<"+TPINFO_TAG$+">"=TPINFO_TAGS$); IF TPINFO_POS=0 THEN TPINFO_TEMPLATE$=TP1$+TP2$,TPINFO_INDEX=0 ELSE TPINFO_INDEX=NUM(TPINFO_TAGS$(TPINFO_POS-3,3))
3970 ON TPINFO_INDEX GOTO 3989,3971,3972,3989
3971 TPINFO_TEMPLATE$=TP1$+STP(EC7$(24,20),1)+TP2$; GOTO 3990; REM "3p_info_1
3972 TPINFO_TEMPLATE$=TP1$+STP(EC7$(24,20),2)+TP2$; GOTO 3990; REM "3p_info_2
3989 TPINFO_TEMPLATE$=TP1$+"?"+TP2$; GOTO 3990; REM "not found replace with a '?'
3990 GOTO 3965
3995 RETURN 
4000 REM "delete all message lines for order
4002 READ (Z[24],KEY=WORKSHEET$,DOM=4003)
4004 EC0_KEY$=KEY(Z[24],END=4005); IF EC0_KEY$(1,10)<>WORKSHEET$ THEN GOTO 4005 ELSE REMOVE (Z[24],KEY=EC0_KEY$); GOTO 4004
4045 RETURN 
4050 REM "remove single line message
4051 IF LEN(ECE$)=0 THEN GOTO 4055
4052 READ (Z[24],KEY=ECE$(1,10)+ECE$(25,3),DOM=4053)
4053 REM "ssp 154319 - do not clear message lines since shipto may now change
4054 EC0_KEY$=KEY(Z[24],END=4055); IF EC0_KEY$(1,13)<>ECE$(1,10)+ECE$(25,3) THEN GOTO 4055 ELSE REMOVE (Z[24],KEY=EC0_KEY$); GOTO 4054
4095 RETURN 
4100 ! get PROOF_URL$ - this is only the url to directory you must tack on the actual proof file name ssp#148607
4105 PROOF_URL$=""
4110 DIM EC6$(900); FIND (Z[27],KEY=MID(EC7$,14,10),DOM=*NEXT)EC6$
4120 PROOF_URL$=STP(EC6$(141,60))
4125 RETURN 
4130 REM "get 3p id master record 148750
4140 IF THREEPKEY$=DIM(10) THEN THREEPKEY$=ECR$(243,10) END_IF ; IF THREEPKEY$=DIM(10) THEN DIM EC6$(900); GOTO 4149 ! SSP 223680  ** moved as root **
4141 DIM EC6$(900); FIND (Z(27),KEY=THREEPKEY$,DOM=*NEXT)EC6$
4149 RETURN 
4200 REM "Adding P/O code, set vendor if not blank, and update ECD2 info
4210 EXTRACT (Z[2],KEY=ECD$(1,10),DOM=4240)IOL=0310
4215 IF ECE$(115,14)=DIM(14) THEN ECE$(115,14)=FM1$(82,14)
4220 ECD2$=ECD2$+ECE$(115,14)+ECE$(129,1)
4230 WRITE (Z[2],KEY=ECD$(1,10))IOL=0310
4245 RETURN 
4250 REM "get TOPS united stationers item code
4252 DIM IC2$(100); FIND (Z(31),KEY=GRT$(55,20)+EC_PARM$(936,10)+DIM(4),DOM=4253)IC2$
4254 RETURN 
5000 REM "Clear Edit Approval Worksheet mode from session
5005 CLEAR_EDIT_APPROVAL_MODE:
5010 IF EC$[1](1318,1)<>"Y" THEN GOTO 5045
5015 EXTRACT RECORD (33005,KEY=EC$[1](1,7))ECBREC$
5020 ECBREC$(1318,1)="",ECBREC$(97,10)="" ! Clear edit approval worksheet mode, clear current worksheet number in session
5025 WRITE RECORD (33005,KEY=EC$[1](1,7))ECBREC$
5030 EC$[1]=ECBREC$
5045 RETURN 
5049 ! 
6600 REM "Create email request file 148750
6601 REM "Use port 1001 and 1002
6602 DIM ETEXT_NEEDED$(30); ETEXT_NEEDED$(1,10)="email",ETEXT_NEEDED$(16,10)="email",ETEXT_NEEDED$(11,5)="00001",ETEXT_NEEDED$(26,5)="00002"; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,ETEXT_NEEDED$,ETEXT${ALL}
6605 CLOSE (1001); CLOSE (1002)
6610 PRECISION 5; EMAIL_FILE$=%SERVER_DIR$+"TMP"+EMAIL_ACTION$+STR(INT(RND*100000)); PRECISION 2
6611 OPEN (1002,ERR=6615)EMAIL_FILE$; CLOSE (1002); GOTO 6610; REM "if we can open the file then it is in use, try again
6615 REM "Create file, then open files and copy
6620 SERIAL EMAIL_FILE$,DISK_NO,0,ERR=6610
6621 OPEN (1001,ERR=6645)TMP_NAME$; OPEN (1002)EMAIL_FILE$; MESS$="Creating temp HTML e-mail file "+EMAIL_FILE$,MTYPE$="EMAIL"; GOSUB 7500
6622 TEXT_IN$=ETEXT$[1]; GOSUB 6650
6623 WRITE RECORD (1002)TEXT_IN$; REM "write out email header
6625 READ RECORD (1001,SIZ=6692,END=6629)COPY$; COPY$=COPY$(1,POS(DIM(512,$00$)=COPY$+DIM(512,$00$))-1); IF MID(COPY$,1,LEN(HTML_TEXT$))=HTML_TEXT$ THEN COPY$=MID(COPY$,LEN(HTML_TEXT$)+1) END_IF ; WRITE RECORD (1002,SIZ=LEN(COPY$))COPY$; GOTO 6625 ! strip off html_header if here, it is covered in email open
6629 WRITE RECORD (1002)ETEXT$[2]; REM "write out email closing
6630 PRECISION 5; EMAIL_ACTION_FILE$=%SERVER_DIR$+STR(INT(RND*100000))+".em"; PRECISION 2; CLOSE (1003); OPEN (1003,ERR=6631)EMAIL_ACTION_FILE$; GOTO 6630; REM "find unused tmp file name for email control file
6631 SERIAL EMAIL_ACTION_FILE$,DISK_NO,0,ERR=6640; OPEN (1003)EMAIL_ACTION_FILE$
6632 WRITE RECORD (1003)"basic=EC3EM0"; WRITE RECORD (1003)"template="+EMAIL_FILE$; WRITE RECORD (1003)"session_id="+SID$; WRITE RECORD (1003)"remove_file=Y" ! SSP212160 jdf
6633 MESS$="Posting e-mail to send : "+EMAIL_ACTION_FILE$,MTYPE$="EMAIL"; GOSUB 7500
6640 CLOSE (1001); CLOSE (1002); CLOSE (1003)
6645 RETURN 
6700 REM "central write for ECE - 159048
6701 REM "PRINT "DUP CK: ",ECE$(1,10),"-",ECE$(25,3),"  ",ECE$(29,20)," ",ECE$(28,1)
6702 REM "PRINT ECR$(1,80)
6710 ECEDUPFOUND$="N"; IF EC$[7](588,1)<>"Y" OR POS(ECE$(28,1)="SM")<>0 THEN GOTO 6730; REM "write line if message line/special charge/ or feature not activated
6712 DIM EDS1$(1910),EDS2$(95); FIND (Z(35),KEY=ECE$(1,10),DOM=*NEXT)IOL=0491
6713 IF POS(ECE$(29,20)=EDS1$(11,1900),20)=0 THEN GOTO 6730 ELSE ECEDUPFOUND$="Y"
6714 IF ECR$(528,1)="Y" THEN ECEDUPFOUND$="N"; GOTO 6730; REM "item allowed to be ordered multiple times
6717 REMOVE (Z(3),KEY=ECE$(1,10)+ECE$(25,3),DOM=*NEXT); EDSACTION$="D"; GOSUB 6850; GOTO 6745
6718 GOTO 6745
6730 WRITE (Z(3),KEY=ECE$(1,10)+ECE$(25,3))IOL=0330
6732 IF POS(ECE$(28,1)="MS")=0 THEN EDSACTION$="A"; GOSUB 6850
6745 RETURN 
6800 REM "process attention field  - 158233
6801 IF ATTN_ROUTINE_DONE$="Y" THEN GOTO 6825 ELSE ATTN_ROUTINE_DONE$="Y"
6802 IF NEW_WORKSHEET$<>"Y" AND ECD$(64,30)=DIM(30) THEN GOTO 6820; REM "if not initial set up then assume simple display - do not change values
6804 IF EC$[2](561,30)=DIM(30) THEN GOTO 6810
6806 IF ECD_IN$(64,30)=DIM(30) AND (ATTENTION_VALUE_SUBMITTED$="Y" OR ECD$(64,30)=DIM(30)) THEN ECD_IN$(64,30)=EC$[2](561,30),ECD$(64,30)=EC$[2](561,30) ELSE GOTO 6820; REM "if no value initially set then default to buyer attention field
6810 IF NEW_WORKSHEET$="Y" THEN GOTO 6815
6811 IF LOCATION_CHANGED<>1 THEN GOTO 6820
6812 IF EC_PARM$(560,1)<>"Y" AND ECD_IN$(64,30)<>DIM(30) THEN ECD$(64,30)=ECD_IN$(64,30); GOTO 6820; REM "after initially setting - always accept changes
6815 IF STP(SHIP$,3," ")="" THEN SHIP$=FM0$ END_IF ; IF SHIP$(160,20)<>DIM(20) THEN ECD$(64,30)=SHIP$(160,20); REM "do not retain - set to shipto attn if exists "
6825 RETURN 
6830 REM "permanet address / attention change
6832 EXTRACT (Z(8),KEY="C"+ECD$(26,10)+ECD$(36,4),DOM=6849)IOL=0380
6834 IF ECD$(57,1)<>"Y" THEN GOTO 6840
6836 FM0$(160,20)=ECD$(64,20)
6838 IF ECD$(56,1)<>"Y" THEN GOTO 6845
6840 FM0$(51,87)=ECD$(243,87)
6841 IF FM0$(248,35)=DIM(35) THEN FM0$(16,35)=ECD$(376,35) ELSE FM0$(248,35)=ECD$(376,35)
6845 WRITE (Z(8),KEY="C"+ECD$(26,10)+ECD$(36,4))IOL=0380
6849 RETURN 
6850 REM "update ECS worksheet stats file 159048
6852 IF PROCESSLINE$="" THEN PROCESSLINE$=ECE$(25,3); REM "if not passed in the use line
6853 PL=NUM(PROCESSLINE$)-1; IF PL<0 OR PL>95 THEN GOTO 6895 END_IF ; DIM EDS1$(1910),EDS2$(95); IF PROCESSWKSHEET$<>"" THEN EDS1$(1,10)=PROCESSWKSHEET$; GOTO 6854 END_IF ; IF ECD$(1,10)<>DIM(10) THEN EDS1$(1,10)=ECD$(1,10) ELSE EDS1$(1,10)=EC$[1](97,10)
6855 EXTRACT (Z(35),KEY=EDS1$(1,10),DOM=*NEXT)IOL=0491
6857 ON POS(EDSACTION$="AD") GOTO 6880,6860,6870
6860 REM "line addition
6861 EDS1$(PL*20+11,20)=ECE$(29,20),EDS2$(PL*1+1,1)=ECE$(129,1)
6869 GOTO 6880
6870 REM "line deletion
6871 EDS1$(PL*20+11,20)=DIM(20),EDS2$(PL*1+1,1)=" "; GOSUB 4050; GOTO 6880
6885 WRITE (Z(35),KEY=EDS1$(1,10))IOL=0491
6895 PROCESSLINE$=""; RETURN 
6900 REM "update warehouse on session record
6901 REM "routine called if the shipto location has changed and no-elogisitics on customer (update whse list based on shipto default warehouse) ssp 155399
6905 IF UPDATE_SESSION_WHSE<>1 THEN GOTO 6949; REM "exit if no location change or no whse default by shipto
6906 IF FM0$(284,4)=DIM(4) THEN DFLTWHSE$=EC$[1](178,4) ELSE DFLTWHSE$=FM0$(284,4); REM "if selected shipto has no whse then reset to customer default
6910 IF EC$[7](233,1)<>"Y" THEN GOTO 6912; REM "ck if opposite warehouse set
6911 IF DFLTWHSE$(1,1)="0" THEN NEXTWHSE$="9"+DFLTWHSE$(2,3) ELSE NEXTWHSE$="0"+DFLTWHSE$(2,3) END_IF ; DFLTWHSE$=DFLTWHSE$+NEXTWHSE$; REM "set opposite warehouse
6912 DFLTWHSE$=PAD(DFLTWHSE$,48)
6915 EXTRACT RECORD (33005,KEY=EC$[1](1,7))ECB$; ECB$(279,48)=DFLTWHSE$; WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
6916 EC$[11]=DFLTWHSE$,EC$[10]=EC$[11],EC$[1](279,48)=DFLTWHSE$; REM "reset current session variable
6919 READ (Z(3),KEY=WORKSHEET$,DOM=6920)
6920 ECEKEY$=KEY(Z(3),END=6930); IF ECEKEY$(1,LEN(WORKSHEET$))<>WORKSHEET$ THEN GOTO 6930 ELSE EXTRACT (Z(3),KEY=ECEKEY$)IOL=0330
6921 ECE$(165,48)=DFLTWHSE$
6922 IF LEN(FM1$)<499 THEN DIM FM1$(499),FM1(31); FIND (Z(7),KEY=ECE$(29,20),DOM=*NEXT)IOL=0370
6923 IF LEN(ECR$)<1000 THEN DIM ECR$(1000); FIND (Z(25),KEY=ECE$(29,20),DOM=*NEXT)IOL=0450
6925 ECE$(11,2)=DIM(2),MESSAGE_NO=0; WOLINE$=ECE$(1,10)+ECE$(25,3); REM "reset order line messages
6927 GOSUB 8400; IF ECE$(11,2)<>DIM(2) THEN WRITE (Z(3),KEY=ECEKEY$)IOL=0330; GOSUB 8350; REM "reprocess line for exceptions
6929 IF ECE$(11,2)=DIM(2) THEN WRITE (Z(3),KEY=ECEKEY$)IOL=0330; GOTO 6920 ELSE GOTO 6920
6949 RETURN 
7000 REM "148750 - Clear out worksheet from ECD/ECE/message files
7001 REM "original worksheet and all message lines cleared
7005 REMOVE (Z(3),KEY=WORKSHEET$,DOM=*NEXT)
7006 READ (Z(4),KEY=WORKSHEET$,DOM=*NEXT)
7007 READ (Z(5),KEY=WORKSHEET$,DOM=*NEXT)
7010 ECEKEY$=KEY(Z(4),END=*NEXT); IF ECEKEY$(1,10)<>WORKSHEET$ THEN GOTO *NEXT ELSE REMOVE (Z(4),KEY=ECEKEY$); GOTO 7010
7012 EC0MSGCD=0; EC0KEY$=KEY(Z(5),END=*NEXT); IF EC0KEY$(1,10)<>WORKSHEET$ THEN GOTO *NEXT ELSE READ (Z[5],KEY=EC0KEY$,DOM=7012)EC0MSG$; EC0MSGCD=NUM(MID(EC0MSG$,27,5),ERR=*PROCEED); IF EC0MSGCD>=60 AND EC0MSGCD<70 THEN REMOVE (Z(5),KEY=EC0KEY$); END_IF ; GOTO 7012 ! 213340
7045 RETURN 
7100 REM "move worksheet to ECD/ECE from approval files
7105 READ (Z(1),KEY=WORKSHEET$,DOM=7145)IOL=0310; IF POS(ECD$(645,1)="YR")>0 OR ECD$(235,8)<>DIM(8) THEN EXITTO 1285 ELSE GOSUB 7150; ECD$(645,1)="Y"; WRITE (Z(3),KEY=WORKSHEET$)IOL=0310; WRITE (Z[1],KEY=WORKSHEET$)IOL=0310 ! SSP166022, Added write to EDN, need to know this worksheet is approved so it can't be processed again.  If this is an already approved or rejected worksheet, then don't process again.
7106 READ (Z(2),KEY=WORKSHEET$,DOM=*NEXT)
7110 EDOKEY$=KEY(Z(2),END=*NEXT); IF EDOKEY$(1,10)<>WORKSHEET$ THEN GOTO *NEXT ELSE READ (Z(2),KEY=EDOKEY$)IOL=0320; WRITE (Z(4),KEY=EDOKEY$)IOL=0320; GOTO 7110
7145 RETURN 
7149 ! 
7150 ! WO181002.  If coming from approval detail, the approver may have updated the customer PO and ship via, need to update if those variables are set
7155 IF STP(CUST_REQ$,3)>"" THEN ECD$(40,10)=CUST_REQ$(1,10),ECD$(163,5)=CUST_REQ$(11,5) ! WO181002, approver has entered/modified the customer PO
7160 IF STP(SHIP_VIA_CODE$,3)>"" THEN ECD$(188,1)=SHIP_VIA_CODE$,ECD$(94,15)=SHIP_VIA_DESC$ ! WO181002, approver has selected/modified the ship via
7190 RETURN 
7195 ! 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7500 REM "Put MESS$ in log & display to screen if IMODE
7501 REM "MTYPE$ is type, clear it after, if '' then say info
7502 REM "valid are INFO,WARN,EXIT,EXCP,STAT,EMAIL
7504 IF XMODE THEN GOTO 7541
7505 IF MTYPE$="" THEN MTYPE$="INFO"
7510 OUT$=DTE(0:"%Y-%Mz-%Dz|%Hz:%mz:%sz")+"|"+MTYPE$+"|"+MESS$; PRECISION 2
7520 IF USE_START_LOG THEN GOTO *NEXT ELSE IF NO_LOG THEN GOTO 7540 ELSE PRINT (33003)OUT$; REM "151249, if start_log set, don't do anything We may use the start log until we have the server id
7540 IF DISPLAY_LOG THEN PRINT OUT$
7541 MTYPE$=""
7545 RETURN 
7550 REM "find FM1 and IC0 records, setup def_xx$ if needed for defaulting, use FM1 first then IC0 data
7551 SET_BY_FM1=0,SET_BY_IC0=0
7553 DEF_UM$="",DEF_QTY_UM=1,DEF_DESC$=""
7554 IF ECE$(28,1)=" " THEN ECE$(28,1)="C"; REM "For now, if blank default to custom
7558 REM "*IF ECE$(11,2)="02" THEN GOTO 7595 ! set in get_item_code, if item missing then skip the rest
7560 DIM ECR$(1000),FM1$(449),FM1[31]; FIND (Z[7],KEY=ECE$(29,20),DOM=7565)IOL=0370
7561 SET_BY_FM1=1,DEF_DESC$=FM1$(42,40),DEF_UM$=FM1$(100,4),DEF_QTY_UM=FM1[4]
7562 IF STP(FM1$(238,4),3," ")="" THEN GOTO 7563 ELSE DEF_UM$=FM1$(238,4),DEF_QTY_UM=FM1[25]; REM "Use alternate unit of issue
7563 IF STP(FM1$(185,10),3," ")="" THEN GOTO 7564 ELSE ECE$(29,10)=FM1$(185,10); REM "ssp110406
7564 IF ECR$(255,1)="Y" THEN GOSUB 8800; REM "Setup P/O information if needed
7565 IF ECR$(255,1)<>"Y" AND ECE$(129,1)<>" " THEN GOSUB 4200; REM "Update p/o codes info used if not auto generating po_info
7570 DIM IC0$(187),IC0[40]; FIND (Z[6],KEY=ECE$(29,20),DOM=7575)IOL=0360
7571 SET_BY_IC0=1; IF DEF_DESC$="" THEN DEF_DESC$=IC0$(21,40) END_IF ; IF DEF_UM$="" THEN DEF_UM$=IC0$(120,4),DEF_QTY_UM=IC0[14]
7580 IF SET_BY_FM1=0 AND SET_BY_IC0=0 THEN ECE$(11,2)="01",MESSAGE_NO=1; MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 3000; GOTO 7595; REM "if not in FM1 or IC0 then flag error
7582 IF STP(ECE$(67,40),3," ")="" THEN ECE$(67,40)=DEF_DESC$
7583 IF STP(ECE$(107,4),3," ")="" THEN ECE$(107,4)=DEF_UM$,ECE[1]=DEF_QTY_UM
7584 IF ECE[1]=0 THEN ECE[1]=DEF_QTY_UM
7595 ITEM_CODE_END:GOSUB 8400; RETURN 
7600 REM "Do calculations for worksheet line
7603 QTY_DIVISOR=1; GOTO 7645; REM "ECE[0] should be in the correct units already so we will just set QTY_DIVISOR to one
7604 REM "Set qty_divisor
7605 DIM UM$(22),UM[5]; FIND (Z[13],KEY="U/M"+ECE$(107,4),DOM=7606)IOL=0430
7607 IF UM$(20,1)="Y" OR UM$(21,1)="Y" OR ECE[1]=0 THEN QTY_DIVISOR=1 ELSE QTY_DIVISOR=ECE[1]
7645 RETURN 
7650 REM "Given VALUE$ set ship via code &description
7655 VALUE$=STP(VALUE$,2); IF VALUE$="" THEN GOTO 7695 ELSE IF LEN(VALUE$)>1 THEN VALUE$=VALUE$(1,1)
7660 DIM FMPS$(20); FIND (Z[9],KEY="S"+VALUE$,DOM=7695)IOL=0390
7665 SHIP_VIA_CODE$=VALUE$,SHIP_VIA_DESC$=FMPS$(3,15)
7695 RETURN 
7700 REM "Create worksheet purchase file
7701 REM "Use port 1001 and 1002
7705 CLOSE (1001); CLOSE (1002)
7706 IF NOT(FILE_SUFFIX) THEN XX$=STP(EC$[14](176,20),2),XX=POS("."=XX$),FILE_SUFFIX$=XX$(XX) ! SSP 210688
7707 PURCHASE_TEMPLATE$=STP(EC_PARM$(1051,35),2); CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},PURCHASE_TEMPLATE$; REM "verify template
7710 PRECISION 5; EC_FILE$=%SERVER_DIR$+STR(INT(RND*100000))+FILE_SUFFIX$; PRECISION 2
7711 OPEN (1002,ERR=7715)EC_FILE$; CLOSE (1002); GOTO 7710; REM "if we can open the file then it is in use, try again
7715 REM "Create file, then open files and copy
7720 SERIAL EC_FILE$,DISK_NO,0,ERR=7710
7721 OPEN LOCK (1002)EC_FILE$; MESS$="Creating temp HTML e-mail file "+EC_FILE$,MTYPE$="EMAIL"; GOSUB 7500
7732 WRITE RECORD (1002)"basic=EC3WS1"
7733 WRITE RECORD (1002)"template="+PURCHASE_TEMPLATE$
7734 WRITE RECORD (1002)"user="+STP(EC$[2](1,15),2); WRITE RECORD (1002)"password="+STP(EC$[2](65,15),2) ! SSP307194 WRITE RECORD (1002)"session_id="+SID$ ! SSP212160 jdf
7735 WRITE RECORD (1002)"worksheet="+WORKSHEET$
7736 IF STP(PA_ORD_CONF_PGN$,3)>"" THEN WRITE RECORD (1002)"basic2="+STP(PA_ORD_CONF_PGN$,2) ! SSP172454
7737 WRITE RECORD (1002)"remove_file=Y" ! SSP184287
7738 WRITE RECORD (1002)"purchase=Y"
7739 WRITE RECORD (1002)"approval_purchase=Y"
7745 WRITE RECORD (1002)EOL$
7746 MESS$="Posting e-mail to send PA order approval: "+WORKSHEET$+"|"+EC_FILE$,MTYPE$="EMAIL"; GOSUB 7500
7747 CLOSE (1001); CLOSE (1002); CLOSE (1003)
7749 RETURN 
7750 REM "Given VALUE$ fill in zip code, removing any dashes
7755 P=POS("-"=VALUE$); IF P>0 THEN IF P=LEN(VALUE$) THEN VALUE$=VALUE$(1,P-1); GOTO 7755 ELSE IF P=1 THEN VALUE$=VALUE$(2); GOTO 7755 ELSE IF P<>0 THEN VALUE$=VALUE$(1,P-1)+VALUE$(P+1)
7790 ECD_IN$(321,9)=VALUE$
7795 RETURN 
7800 REM "DELETE_WORKSHEET worksheet, remove from ECD,ECE & ECF, if current worksheet then clear current worksheet info. if no worksheet # given, delete the current worksheet
7805 IF STP(ECD_IN$(1,10),3," ")="" THEN ECD_IN$(1,10)=EC$[1](97,10); REM "If worksheet blank, substitute current worksheet
7810 EXTRACT (Z[2],KEY=ECD_IN$(1,10),DOM=7835)IOL=0310; REM "If not found then make sure not in other files then leave
7830 REMOVE (Z[2],KEY=ECD_IN$(1,10),DOM=7831); PROCESSWKSHEET$=ECD_IN$; REM "159048
7831 GOSUB 8100
7832 GOSUB 4000; REM "clear message lines
7835 REM "Remove from other files
7836 REMOVE (Z[4],KEY=ECD$(26,10)+ECD$(11,15)+ECD$(1,10),DOM=7837)
7837 REMOVE (Z[4],KEY=ECD_IN$(26,10)+ECD_IN$(11,15)+ECD_IN$(1,10),DOM=7838); REM "Try with both ecd and ecd_in in case we didn't find ecd$
7838 READ (Z[3],KEY=ECD_IN$(1,10),DOM=7839)
7839 KEY_3$=KEY(Z[3],END=7840); IF KEY_3$(1,10)=ECD_IN$(1,10) THEN REMOVE (Z[3],KEY=KEY_3$,DOM=7839); EDSACTION$="D",PROCESSLINE$=KEY_3$(11,3); GOSUB 6850; GOTO 7839; REM "159048
7840 PROCESSWKSHEET$=""; REMOVE (Z[10],KEY=ECD$(11,15)+ECD$(40,10)+ECD$(163,5)+ECD$(1,10),DOM=7841); REM "159048
7841 REMOVE (Z[10],KEY=ECD_IN$(11,15)+ECD_IN$(40,10)+ECD_IN$(163,5)+ECD_IN$(1,10),DOM=7842); REM "try both in case we didn't find ECD record
7844 ECD_IN$(1)="",ECE_IN$(1)="",ECD$(1)="",ECE$(1)=""; REM "clear input buffers and records
7845 RETURN 
7850 REM "If worksheet # blank, but not customer req number blank then lookup worksheet number via ECJ
7855 BUYER_REQ$=EC$[1](8,15)+ECD_IN$(40,10)+ECD_IN$(163,5)
7860 READ (Z[10],KEY=BUYER_REQ$,DOM=7861)
7865 KEY_10$=KEY(Z[10],END=7895); IF KEY_10$(1,30)<>BUYER_REQ$ THEN GOTO 7895
7875 ECD_IN$(1,10)=KEY_10$(31,10); REM "Found matching req for this buyer, so use its worksheet number
7895 RETURN 
7900 REM "purchase order routine
7902 IF ECD$(235,8)<>DIM(8) THEN GOTO 7930; REM "if order exists -bypass creation
7903 IF EC_PARM$(946,1)<>"Y" THEN GOTO 7906 ELSE GOSUB 8600; IF NONAPPROVAL_LINES$="" THEN HDR_FILE$="To Aprvl",ECD$(235,8)=HDR_FILE$; GOTO 7913; REM "order/approval 148750 "
7905 IF ECD$(235,8)<>DIM(8) THEN GOTO 7930; REM "if order exists -bypass creation
7906 IF STP(ECD$(168,20),3," ")="" THEN ECD$(168,20)=EC$[1](8,15); REM "If ordered by not set, then put in buyer id
7907 IF STP(ECD$(40,10)+ECD$(163,5),3," ")="" THEN ECD$(40,10)=EC$[2](307,10),ECD$(163,5)=EC$[2](317,5); REM "If cust p/o blank add in default cust/po from buyer info ssp#124432
7908 ECD$(58,6)=X3$(15,6),ORIG_ECD$=ECD$,ECD$(40,10)=FN%CVT4$(ECD$(40,10)),ECD$(163,5)=FN%CVT4$(ECD$(163,5))
7910 IF EC$[2](338,1)="Y" THEN HDR_FILE$="9999zzzz",ECD$(235,8)=HDR_FILE$; REM "buyer set for testing, ssp 146555
7913 WRITE (Z(2),KEY=ECD$(1,10))IOL=0310; IF EC$[2](338,1)="Y" THEN GOTO 7985 ELSE IF EC_PARM$(946,1)="Y" AND NONAPPROVAL_LINES$="" THEN GOTO 7985; REM "testing flag ck / or no non-approval lines
7920 CALL "EC3OE0",X3$,X4$,EC_PARM$,EC${ALL},ECD$(1,10),RET; READ (Z[2],KEY=ECD$(1,10))IOL=0310; REM "create order and reload ECD$ information
7930 REM "ck if credit card purchase
7932 IF ECD$(507,1)<>"Y" THEN GOTO 7985; REM "if order not credit card purchase then skip 159819
7937 REM "determine credit card action
7938 REM "**IF ECD$(508,1)=" " THEN CCACTION$="C"; REM "if no action yet taken then set to create
7939 ON POS(CCACTION$="CDI")-1 GOTO 7940,7950,7960
7940 REM "create temp invoice
7943 GOSUB 7000; GOTO 7975
7950 REM "delete temp invoice
7952 GOSUB 7000; GOTO 7975
7960 REM "invoice the temp invoice
7962 GOSUB 7000; GOTO 7975
7975 REM "get invoice information
7977 GOSUB 7050
7980 REM "transaction completed? (close worksheet/send email)
7982 IF ECD$(507,1)<>"Y" THEN GOTO 7985
7983 IF ECD$(508,1)<>"I" THEN GOTO 7990; REM "if ccpurchase not invoiced then not complete
7985 REQUESTED_EMAIL_ACTION$="O"; IF CCACTION$="" OR POS(CCACTION$=" I")<>0 THEN GOSUB 8550; REM "Send 'O'rder emails if needed - ssp 146930 - only send email if no credit card or if credit card action is to do final invoicing
7986 REM "Clear current worksheet # in session record on disk & in memory
7987 EC$[1](97,10)=""; EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=7987)ECB$
7988 ECB$(97,10)=""; WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
7998 RETURN 
8000 REM "take Q$, try to figure out date and return in Q$
8001 REM "assume MM?DD?YY(YY) format where we don't care about ?'s. if only YY then pivot on 60
8004 IF LEN(Q$)=7 AND Q$(2,1)="/" THEN Q$="0"+Q$; REM "135234
8005 IF LEN(Q$)<6 THEN GOTO 8045 ELSE IF LEN(Q$)>=8 THEN Q$=Q$(1,2)+Q$(4,2)+Q$(7); IF LEN(Q$)>8 THEN Q$=Q$(1,8)
8009 REM "NOW in MMDDYY.. format
8010 IF LEN(Q$(5))>2 THEN YY$=Q$(5) ELSE IF Q$(5)<"60" THEN YY$="20"+Q$(5) ELSE YY$="19"+Q$(5)
8015 TMP$=Q$,Q$=DIM(6),Q$=CHR(NUM(YY$(1,3),ERR=8016)-125,ERR=8016)+YY$(4,1)+TMP$(1,4); REM "135884
8045 RETURN 
8050 REM "New order, get new worksheet number
8055 DIM ECTMP$(256); EXTRACT (Z[13],KEY=X3$(9,3)+"E/C",DOM=8056)ECTMP$
8057 IF STP(ECTMP$(115,10),3," ")="" THEN ECD_IN$(1,10)=DIM(9,"0")+"1",ECTMP$(115,10)=DIM(9,"0")+"2" ELSE ECD_IN$(1,10)=ECTMP$(115,10),ECTMP$(115,10)=STR(NUM(ECTMP$(115,10))+1:"0000000000"); WRITE (Z[13],KEY=X3$(9,3)+"E/C")ECTMP$
8060 FIND (Z[2],KEY=ECD_IN$(1,10),DOM=8061); GOTO 8055; REM "if already exists then try another number
8065 EC$[1](97,10)=ECD_IN$(1,10); EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=8067)ECB$
8066 ECB$(97,10)=ECD_IN$(1,10); WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
8095 RETURN 
8100 REM "Clear current worksheet
8105 EC$[1](97,10)=""; EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=8111)ECB$
8110 ECB$(97,10)=""; WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
8115 REM "Default values in ECD$ for display etc.
8120 DIM ECD$(1580),ECD[1],ECE$(499),ECE[1]
8125 ECD$(26,14)=EC$[2](51,14); REM "Set customer & ship to from buyer
8126 DIM FMPD$(243); FIND (Z[9],KEY="D"+ECD$(26,10),DOM=8127)FMPD$
8127 IF STP(ECD$(36,4),3," ")="" THEN ECD$(36,4)=EC$[1](1167,4); REM "if blank, set from active shipto on session record ssp# 154600
8130 DIM FM0$(618); READ (Z[8],KEY="C"+ECD$(26,14),DOM=8131)IOL=0380
8132 ECD$(243,87)=FM0$(51,87); IF FM0$(248,35)<>DIM(35) THEN ECD$(376,35)=FM0$(248,35) ELSE ECD$(376,35)=FM0$(16,35)
8133 REM "** what is this? removed with 154600 **IF FM0$(284,4)<>DIM(4) THEN ECD$(36,4)=FM0$(284,4); REM "set warehouse from shipto if not blank
8145 RETURN 
8150 REM "Send LINE$ to EC3BYB for generic fields processing
8160 CALL "EC3BYB",ERR=8161,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$
8195 RETURN 
8200 REM "DELETE_LINE, delete a single line given DEL_INDEX. We expect the corresponding line number in ECE_IN_DATA$[] array in (25,3).If line_number not given, don't delete anything.
8205 IF NUM(ECE_IN_DATA$[DEL_INDEX](25,3),ERR=8245)=0 THEN GOTO 8245
8206 IF STP(ECD_IN$(1,10),3," ")="" THEN ECD_IN$(1,10)=EC$[1](97,10); REM "If worksheet blank, substitute current worksheet
8210 REMOVE (Z[3],KEY=ECD_IN$(1,10)+ECE_IN_DATA$[DEL_INDEX](25,3),DOM=8211); PROCESSLINE$=ECE_IN_DATA$[DEL_INDEX](25,3),EDSACTION$="D"; GOSUB 6850; REM "159048
8211 WLINE$=ECD_IN$(1,10)+ECE_IN_DATA$[DEL_INDEX](25,3); READ (Z(24),KEY=WLINE$,DOM=8212); REM "154319 - multiple message lines
8212 WLINEKEY$=KEY(Z(24),END=8213); IF WLINEKEY$(1,LEN(WLINE$))<>WLINE$ THEN GOTO 8213 ELSE REMOVE (Z(24),KEY=WLINEKEY$); GOTO 8212; REM "154319 - multiple message lines
8215 WORKSHEET$=ECD_IN$(1,10); REM "Update worksheet number used in display
8245 RETURN 
8246 REM "get fm1 record
8247 DIM FM1$(449),FM1(31); READ (Z(7),KEY=ECE$(29,20),DOM=8248)IOL=0370; GOTO 8249
8248 READ (Z(7),KEY=EC$[2](51,10),DOM=8249)IOL=0370
8249 RETURN 
8250 REM "Reads for a worksheet line
8265 DIM EC7$(200),EC7[1]; EC7$(1,13)=ECE$(1,10)+ECE$(25,3); REM "Worksheet #, line #
8270 FIND (Z[22],KEY=EC7$(1,13),DOM=8271)IOL=0420
8275 DIM FM1$(449),FM1[31]; FM1$(1,20)=ECE$(29,20); FIND (Z[7],KEY=ECE$(29,20),DOM=*NEXT)IOL=0370
8280 DIM ECR$(1000); FIND (Z[25],KEY=ECE$(29,20),DOM=*NEXT)IOL=0450 ! SSP#153121
8295 RETURN 
8300 REM "Retreive 1 or more values in VALUE$ place in VAL$[] and set VAL_COUNT-Values seperated by ', 's (that is comma + blank), current max of 2000 values, 132667
8301 REM "We will add all values blank or not
8305 DIM VAL$[2000]; VAL_COUNT=0
8310 IF VAL_COUNT=2000 THEN GOTO 8340 ELSE VP=POS(", "=VALUE$); IF VP=0 THEN GOTO 8335
8315 VAL_COUNT=VAL_COUNT+1; IF VP=1 THEN VAL$[VAL_COUNT]="",VALUE$=VALUE$(3); GOTO 8310 ELSE VAL$[VAL_COUNT]=VALUE$(1,VP-1); IF VP=LEN(VALUE$) THEN VALUE$=""; GOTO 8340 ELSE VALUE$=VALUE$(VP+2); GOTO 8310
8335 REM "finish up last one
8337 VAL_COUNT=VAL_COUNT+1; VAL$[VAL_COUNT]=VALUE$
8340 IF VAL_COUNT>HIGHEST_VAL_COUNT THEN FOR TMP_INDEX=HIGHEST_VAL_COUNT+1 TO VAL_COUNT; ECE_IN_DATA$[TMP_INDEX]=DIM(LEN(ECE_IN$)); NEXT TMP_INDEX; HIGHEST_VAL_COUNT=VAL_COUNT; REM "If new higher val count value then initialize corresponding strings in ECE_IN_DATA$[]
8345 RETURN 
8350 REM "ck to see if worksheet line to be printed
8352 ORDER_MESSAGE_NO=0; DIM ECX$(512); IF STP(ECE_IN$(11),3," ")="" THEN GOTO 8390 ELSE IF NUM(ECE$(11,2))=0 THEN GOTO 8380; REM "159048
8353 DIM MSGKEY$(25),MSGTMP$(512); MSGKEY$(1,10)=ECD$(26,10),MSGKEY$(11,10)="EC3AP3",MSGKEY$(21,5)=STR(NUM(ECE$(11,2)):"00000"); FIND (Z[17],KEY=MSGKEY$,DOM=8354)MSGTMP$; GOTO 8356
8354 MSGKEY$(1,10)=DIM(10); FIND (Z[17],KEY=MSGKEY$,DOM=8380)MSGTMP$
8356 IF MSGTMP$(300,1)="Y" THEN ORDER_MESSAGE_NO=MESSAGE_NO,ORDER_MESSSAGE$=MESSAGE$; GOTO 8370 ELSE ORDER_MESSAGE_NO=MESSAGE_NO,ORDER_MESSAGE$=MESSAGE$; REM "ck flag to prevent order line addition
8358 IF MSGTMP$(27,1)="Y" THEN ECE[0]=0 ELSE IF MSGTMP$(302,1)="Y" THEN ECE(0)=INT(QTYREMAIN/ECE(1)); REM "add line but zero quantity(27,1) or (302,1) change qty to qty reamining below max
8359 IF MSGTMP$(28,1)="Y" THEN ECE$(228,1)="Y"; REM "if set to remove at purchase then add to ECE line
8368 GOTO 8380
8370 REMOVE (Z[3],KEY=ECE$(1,10)+ECE$(25,3),DOM=8390); EDSACTION$="D"; GOSUB 6850; GOTO 8390; REM "159048
8380 GOSUB 8500; WRITE (Z(3),KEY=ECE$(1,10)+ECE$(25,3))IOL=0330; REM "159048
8381 GOSUB 3000
8383 REM "write message to EC0 file
8384 IF ORDER_MESSAGE_NO=0 THEN GOTO 8390
8385 DIM EC0$(295); EC0$(1,10)=ECE$(1,10),EC0$(11,3)=ECE$(25,3),EC0$(14,3)="001",EC0$(17,10)="EC3WS1",EC0$(27,5)=STR(MESSAGE_NO:"00000")
8386 EC0$(32,240)=MESSAGE$,EC0$(272,4)=ECO$(26,4)
8387 WRITE (Z[24],KEY=EC0$(1,16),DOM=8388)EC0$; GOTO 8389
8388 EC0$(14,3)=STR(NUM(EC0$(14,3))+1:"000"); GOTO 8387
8390 MESSAGE_NO=0,MESSAGE$=""
8395 RETURN 
8400 REM "ck other things about the product to see if message required (messages > "00002"
8401 ACTIVE_LINE_MESSAGES$=""; DIM MESS_INFO$[20]; REM 
8402 DIM CHANNELS[4]; CHANNELS[1]=Z[19],CHANNELS[2]=Z[20],CHANNELS[3]=Z[21],CHANNELS[4]=Z[25]
8403 DIM OPTIONS$(20),USAGE_KEYS$(10); OPTIONS$(1,1)="O",OPTIONS$(4,1)=FM1$(105,1); IF EC$[7](586,1)="Y" THEN OPTIONS$(2,1)="B",USAGE_KEYS$(7,4)=ECD$(36,4) ELSE OPTIONS$(2,1)="I"; REM "ck if order maximums activated on customer parms - if so request usage figures ! ssp#153083, SSP165240, change OPTIONS$ DIM to 20
8404 IF STP(ECE$(39,10),3," ")="" THEN GOTO 8445; REM "no item code entered
8405 DIM IC1INFO[1],FM3[1],FM3ALL[1],FM4[1],FM4ALL[1],FORM_OTHER[1],FORM_OTHERALL[1]; REM "need to set dimensions to avoid err 42 on call - EC3IC0 dimensions to necessary sizes
8406 OPTIONS$(5,10)=FM1$(185,10) ! ssp# 153083
8407 IC0_ITEM_KEY$=ECE$(29,20)
8410 CALL "EC3IC0",X3$,X4$,EC_PARM$,EC${ALL},IC0_ITEM_KEY$,USAGE_KEYS$,CHANNELS{ALL},IC1INFO{ALL},FM3{ALL},FM3ALL{ALL},FM4$,FM4{ALL},FM4ALL{ALL},FORM_OTHER{ALL},FORM_OTHERALL{ALL},OPTIONS$
8411 REM "** do not check approval statuses **APPROVAL_MESSAGE_SET$="N"; IF EC$[7](593,1)="A" AND EC$[2](868,1)<>"Y" THEN APPROVAL_MESSAGE_SET$="Y",ECE$(11,2)="60",MESSAGE_NO=60,ECE$(19,1)="Y"; IF ECE[1]=0 THEN QTYPERSELL=1 ELSE QTYPERSELL=ECE[1] END_IF ; DIM MESS_INFO$[20]; MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 8350; REM "Set message, 1=itemcode 148750
8415 GOTO 8434; REM "order maximum check - Disabled
8416 IF EC$[7](586,1)<>"Y" OR EC$[2](87,1)="Y" THEN GOTO 8434 ELSE IF NUM(EC$[7](591,2))=0 THEN MAX_MULT=1 ELSE MAX_MULT=NUM(EC$[7](591,2)) END_IF ; REM "bypass if a) not activated on customer parm 586,1  b) overriden on buyer record 87,1/(ssp 154319 max_mult)
8417 PERCENT_AMU=NUM(EC$[2](229,4))/100; IF FM4[10]=0 AND NUM(ECR$(520,8))=0 AND PERCENT_AMU=0 THEN GOTO 8434; REM "if all max limits zero then bypass max ck
8418 LOC_MONTHLY_MAX=FM4[10]; IF LOC_MONTHLY_MAX=0 THEN LOC_MONTHLY_MAX=NUM(ECR$(520,8)) END_IF ; IF LOC_MONTHLY_MAX=0 THEN LOC_MONTHLY_MAX=FM4[0]*PERCENT_AMU
8419 LOC_ONORDER_QTY=0,LOC_ONORDER_QTY_STOCK=0; DIM XXX(20); CALL "FM2UZR",X3$,ECE$(29,20),"C"+ECD$(36,4),0,0,0,0,LOC_ONORDER_QTY,0,XXX{ALL}; REM "IF FM1$(105,1)="Y" AND EC_PARM$(556,1)="Y" THEN CALL "FM2UZR",X3$,DIM(10)+ECE$(39,10),"C"+ECD$(36,4),0,0,0,0,LOC_ONORDER_QTY_STOCK,XXX{ALL}; LOC_ONORDER_QTY=LOC_ONORDER_QTY+LOC_ONORDER_QTY_STOCK; REM "get on order qty for location - 135041
8420 ORDER_QTY=ECE[0]*ECE[1]; IF (ORDER_QTY+FM4(4)+FM4(5)+LOC_ONORDER_QTY)<=(LOC_MONTHLY_MAX*MAX_MULT) THEN GOTO 8434 ELSE QTYREMAIN=(LOC_MONTHLY_MAX*MAX_MULT)-(FM4(4)+FM4(5)+LOC_ONORDER_QTY); IF QTYREMAIN<0 THEN QTYREMAIN=0
8422 INT_MASK$="#,###,##0",DEC_MASK$="#,###,##0.00"
8423 ECE$(11,2)="05",MESSAGE_NO=5; IF ECE[1]=0 THEN QTYPERSELL=1 ELSE QTYPERSELL=ECE[1] END_IF ; MESS_INFO$[1]=STP(ECE$(39,10),2),MESS_INFO$[2]=STP(STR(IC1_AVAIL:INT_MASK$),2),MESS_INFO$[3]=STP(STR(ECE[0]*ECE[1]:INT_MASK$),2),MESS_INFO$[4]=STP(STR(ECE[0]*ECE[1]-IC1_AVAIL:INT_MASK$),2),MESS_INFO$[5]=STP(ECE$(107,4),2),MESS_INFO$[6]=STP(STR(ECE[1]:INT_MASK$),2),MESS_INFO$[10]=STP(STR(LOC_MONTHLY_MAX*MAX_MULT:INT_MASK$),2); OMAX_SU=LOC_MONTHLY_MAX*MAX_MULT/QTYPERSELL; IF FPT(OMAX_SU)=0 THEN MESS_INFO$[11]=STP(STR(OMAX_SU:INT_MASK$),2) ELSE MESS_INFO$[11]=STP(STR(OMAX_SU:DEC_MASK$),2); REM "Set message, 1=itemcode, 2=qty avail/eaches 3=qty ordered eaches, 4=qty remaining eaches,5=u/m,6=qty per u /m  10=location ordering max in eaches  11=ordering max in selling units 12=order max less mtd shipments"
8424 IF FPT(IC1_AVAIL_UM)=0 THEN MESS_INFO$[7]=STP(STR(IC1_AVAIL_UM:INT_MASK$),2) ELSE MESS_INFO$[7]=STP(STR(IC1_AVAIL_UM:DEC_MASK$),2) END_IF ; MESS_INFO$[8]=STP(STR(ECE[0]:INT_MASK$),2),MESS_INFO$[13]=STP(STR(QTYREMAIN/QTYPERSELL:DEC_MASK$),2); TMPQTY=ECE[0]-IC1_AVAIL_UM; IF FPT(TMPQTY)=0 THEN MESS_INFO$[9]=STP(STR(TMPQTY:INT_MASK$),2) ELSE MESS_INFO$[9]=STP(STR(TMPQTY:DEC_MASK$),2) END_IF ; REM "7=qty avail/in um, 8=qty ordered in um, 9=calculated remaining inventory in um, 13=max reamin in um
8425 MESS_INFO$[12]=STP(STR(QTYREMAIN:INT_MASK$),2); TMPQTY=QTYREMAIN/QTYPERSELL; IF FPT(TMPQTY)=0 THEN MESS_INFO$[13]=STP(STR(TMPQTY:INT_MASK$),2) ELSE MESS_INFO$[13]=STP(STR(TMPQTY:DEC_MASK$),2) END_IF ; MESS_INFO$[14]=STP(STR(MAX_MULT:INT_MASK$),2); REM "12-max remain in eaches, 13=max remain in sellum, 14=number of months total max accumulated over
8428 GOSUB 8350; REM "154319 - multiple messages
8429 IF APPROVAL_MESSAGE_SET$<>"Y" AND EC$[2](868,1)<>"Y" AND EC$[7](593,1)="Y" AND EC$[7](595,1)="Y" THEN GOTO 8430 ELSE GOTO 8433; REM "148750- only generate message if over max and not other situations
8430 APPROVAL_MESSAGE_SET$="Y",ECE$(11,2)="62",MESSAGE_NO=62,ECE$(19,1)="Y"; IF ECE[1]=0 THEN QTYPERSELL=1 ELSE QTYPERSELL=ECE[1] END_IF ; DIM MESS_INFO$[20]; MESS_INFO$[1]=STP(ECE$(39,10),2); REM "Set message, 1=itemcode 148750
8431 GOSUB 8350; REM "148750
8433 REM "ck availability
8434 IF ECR$(255,1)="Y" THEN GOTO 8445; REM "If p/o item then skip avail checks
8435 ON_HAND=IC1INFO[30],IC1_AVAIL=IC1INFO[31],IC1_BO=IC1INFO[11]; IF ECE[1]=0 THEN IC1_AVAIL_UM=IC_AVAIL ELSE IC1_AVAIL_UM=IC1_AVAIL/ECE[1]
8437 IF ECE[0]*ECE[1]<=IC1_AVAIL THEN GOTO 8445; REM "adequate stock
8438 IF IC1_AVAIL<=0 THEN ECE$(11,2)="03",MESSAGE_NO=3,ACTIVE_LINE_MESSAGES$=ACTIVE_LINE_MESSAGES$+"03"; MESS_INFO$[1]=ECE$(39,10) ELSE ECE$(11,2)="04",MESSAGE_NO=4,ACTIVE_LINE_MESSAGES$=ACTIVE_LINE_MESSAGES$+"04"; REM "not enough stock & 154319 multiple message lines / 148750
8439 REM "IF here then ic1_avail>0 (or 8418 sends to 8445) and ece[0]*ece[1]>ic1_avail (or 8437 sends to 8445)
8440 INT_MASK$="#,###,###",DEC_MASK$="#,###,###.00"
8441 MESS_INFO$[1]=STP(ECE$(39,10),2),MESS_INFO$[2]=STP(STR(IC1_AVAIL:INT_MASK$),2),MESS_INFO$[3]=STP(STR(ECE[0]*ECE[1]:INT_MASK$),2),MESS_INFO$[4]=STP(STR(ECE[0]*ECE[1]-IC1_AVAIL:INT_MASK$),2),MESS_INFO$[5]=STP(ECE$(107,4),2),MESS_INFO$[6]=STP(STR(ECE[1]:INT_MASK$),2); REM "Set message, 1=itemcode, 2=qty avail/eaches 3=qty ordered eaches, 4=qty remaining eaches,5=u/m,6=qty per u /m ; REM "158856
8442 IF FPT(IC1_AVAIL_UM)=0 THEN MESS_INFO$[7]=STP(STR(IC1_AVAIL_UM:INT_MASK$),2) ELSE MESS_INFO$[7]=STP(STR(IC1_AVAIL_UM:DEC_MASK$),2) END_IF ; MESS_INFO$[8]=STP(STR(ECE[0]:INT_MASK$),2); TMPQTY=ECE[0]-IC1_AVAIL_UM; IF FPT(TMPQTY)=0 THEN MESS_INFO$[9]=STP(STR(TMPQTY:INT_MASK$),2) ELSE MESS_INFO$[9]=STP(STR(TMPQTY:DEC_MASK$),2) END_IF ; REM "7=qty avail/in um, 8=qty ordered in um, 9=calculated remaining in um
8443 GOSUB 8350; REM "154319 - multiple messages per line
8444 GOTO 8495; REM "Done with setting messages for EC3WS1-00004 error, so leave
8445 REM "order approval variable print check
8446 REM "** do not check approval statuses ** SSP224259 IF APPROVAL_MESSAGE_SET$<>"Y" AND EC$[2](868,1)<>"Y" AND EC$[7](593,1)="Y" AND EC$[7](594,1)="Y" THEN THREEPKEY$=ECE$(248,10); GOSUB 4130 ELSE GOTO 8448 ***dmm - added as root***
8447 REM "** do not check approval statuses ** SSP224259 IF EC6$(261,1)<>"V" THEN GOTO 8448 ELSE APPROVAL_MESSAGE_SET$="Y",ECE$(11,2)="61",MESSAGE_NO=61,ECE$(19,1)="Y"; IF ECE[1]=0 THEN QTYPERSELL=1 ELSE QTYPERSELL=ECE[1] END_IF ; DIM MESS_INFO$[20]; MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 8350; REM "Set message, 1=itemcode 148750, SSP 223680 ***dmm - added as root***
8450 REM "additional order messaging goes here - exit at 8495
8495 RETURN 
8500 REM "Update 3rd party info if needed
8505 IF P_ID$="" THEN GOTO 8545
8510 DIM EC7$(200),EC7[1]
8515 EC7$(1,13)=ECE$(1,10)+ECE$(25,3); REM "Worksheet #, line #
8517 EC7$(14,10)=P_ID$,EC7$(24,20)=P_INFO_1$,EC7$(44,20)=P_INFO_2$; REM "3p id, 3p info fields 1&2
8530 WRITE (Z[22],KEY=EC7$(1,13))IOL=0420
8545 RETURN 
8550 REM "** CURRENTLY NOT USED - PROCESSED IN EC3OE0 - Add email addresses, if any, to EC$[12]
8551 REM "REQUESTED_EMAIL_ACTION$ = this is the action to process
8552 EC$[12]=""; REM "to prevent duplicate emails OLD 3194/SSP 144537
8555 CALL "ZZDISP","AX",ECD$(235,8),"O/P",X3$,ORDER_NO$,"",0,0,X4$
8560 FOR EI=0 TO 3; ON EI GOTO 8561,8562,8563,8564
8561 EMAIL_ADDR$=STP(EC$[2](109,60),2),EMAIL_ACTIONS$=STP(EC$[2](256,10),2); GOTO 8565
8562 EMAIL_ADDR$=STP(EC$[2](169,60),2),EMAIL_ACTIONS$=STP(EC$[2](266,10),2); GOTO 8565
8563 EMAIL_ADDR$=STP(EC$[2](340,60),2),EMAIL_ACTIONS$=STP(EC$[2](460,10),2); GOTO 8565
8564 EMAIL_ADDR$=STP(EC$[2](400,60),2),EMAIL_ACTIONS$=STP(EC$[2](470,10),2); GOTO 8565
8565 IF POS(REQUESTED_EMAIL_ACTION$=EMAIL_ACTIONS$)=0 THEN GOTO 8580; REM "If the action being requested is not in current email then skip
8567 IF EMAIL_ADDR$="" THEN GOTO 8580; REM "Skip if address blank
8570 ETMP$="{[email]"+EMAIL_ADDR$; REM "Email address
8572 CALL "EC3SEM",X3$,X4$,EC_PARM$,EC${ALL},"EMAILSUB_"+REQUESTED_EMAIL_ACTION$,ECD$(1,10),SUBJECT$; ETMP$=ETMP$+"[subject]"+SUBJECT$
8579 ETMP$=ETMP$+"}",EC$[12]=EC$[12]+ETMP$
8580 NEXT EI
8595 RETURN 
8600 REM "ck if order has approval lines 148750
8601 ESCAPE ; APPROVAL_LINES$="",NONAPPROVAL_LINES$=""; IF EC_PARM$(946,1)<>"Y" THEN GOTO 8645 ELSE IF POS(EC$[7](593,1)="AY")=0 THEN NONAPPROVAL_LINES$="*"; GOTO 8645; REM "if not activated for customer or at all set nonapproval list to not null
8602 READ (Z(3),KEY=WORKSHEET$,DOM=*NEXT)
8603 ECE_KEY$=KEY(Z(3),END=8606); IF ECE_KEY$(1,LEN(WORKSHEET$))<>WORKSHEET$ THEN GOTO 8606 ELSE READ (Z(3),KEY=ECE_KEY$)ECE$
8605 IF ECE$(19,1)<>"Y" THEN NONAPPROVAL_LINES$=NONAPPROVAL_LINES$+ECE$(25,3); GOTO 8603 ELSE APPROVAL_LINES$=APPROVAL_LINES$+ECE$(25,3); GOTO 8603
8606 IF EC$[7](596,1)="Y" THEN GOTO 8610; REM "ck if all lines to be marked for approval
8607 FOR XX=0 TO LEN(NONAPPROVAL_LINES$)/3-1; GETLINE$=WORKSHEET$+NONAPPROVAL_LINES$(XX*3+1,3); EXTRACT RECORD (Z(3),KEY=GETLINE$)ECETMP$; ECETMP$(19,1)="Y"; WRITE RECORD (Z(3),KEY=GETLINE$)ECETMP$; NEXT XX
8608 NONAPPROVAL_LINES$=""
8610 REM "ck status
8616 IF APPROVAL_LINES$="" THEN GOTO 8645; REM "no approval situation (exit)
8618 EXTRACT (Z(2),KEY=WORKSHEET$)IOL=0310; ECD$(55,1)="Y"; WRITE (Z(33),KEY=WORKSHEET$)IOL=0310; IF NONAPPROVAL_LINES$="" THEN REMOVE (Z(2),KEY=WORKSHEET$) ELSE WRITE (Z(2),KEY=WORKSHEET$)IOL=0310; REM "flag order for approval and copy to approval hdr EDN (if no nonapproval lines then remove from ECD) "
8620 REM "process lines
8622 FOR MM=0 TO LEN(APROVAL_LINES$)/3-1; DIM ECEKEY$(13); ECEKEY$(1,10)=WORKSHEET$,ECEKEY$(11,3)=APPROVAL_LINES$(MM*3+1,3)
8624 DIM ECE(8); READ (Z(3),KEY=ECEKEY$,DOM=8630)IOL=0330; REMOVE (Z(3),KEY=ECEKEY$); WRITE (Z(34),KEY=ECEKEY$)IOL=0330; GOSUB 4050; REM "move line to approval file
8625 NEXT MM
8630 CALL "EC3EM2",X3$,X4$,EC_PARM$,EC${ALL},WORKSHEET$,"AN",""; REM "create process request file to generate email
8635 CALL "EC3AP2",X3$,X4$,EC_PARM$,EC${ALL},WORKSHEET$,"N",EC$[2](1,15),"",""; REM "update approval status
8645 RETURN 
8650 REM "write credit card tracking file intopform
8651 IF ECD$(235,8)=DIM(8) THEN GOTO 8660
8653 DIM EDD$(114),EDD[1]
8654 EDD$(1,8)=ECD$(235,8),EDD$(9,68)=ECD$(411,68),EDD(0)=GRB(9); IF LEN(INVOICE_HDR_KEY$)>=14 THEN EDD$(77,8)=INVOICE_HDR_KEY$(7,8)
8656 IF CCACTION$="D" THEN REMOVE (Z(26),KEY=EDD$(1,8),DOM=8690); GOTO 8690 ELSE WRITE (Z[26],KEY=EDD$(1,8))IOL=0460
8660 REM "ck if credit card to be added to buyer profile
8662 IF UPDATE_CC_ONBUYER$<>"Y" THEN GOTO 8670
8664 ECAFSLOT=FN%FFN("ECA"+X3$(9,3)); IF ECAFSLOT<0 THEN GOTO 8690
8666 EXTRACT (ECAFSLOT,KEY=EC$[2](1,15),DOM=8690)ECA$,ECA2$
8667 ECA$(493,68)=ECD$(411,68)
8668 WRITE (ECAFSLOT,KEY=EC$[2](1,15))ECA$,ECA2$
8690 RETURN 
8700 REM "given VAL_INDEX, load from VAL$[VAL_INDEX] into ECE_IN_DATA[VAL_INDEX,ECE_BUCKET(will be 0 or 1 right now)] if VAL$[VAL_INDEX] is blank, then no value is loaded, otherwise load it (if it is numeric) and set ECE_SET_DATA[VAL_INDEX,ECE _BUCKET] to 1
8710 IF STP(VAL$[VAL_INDEX],3," ")="" OR VAL$[VAL_INDEX]="" THEN GOTO 8745
8715 ECE_IN_DATA[VAL_INDEX,ECE_BUCKET]=NUM(VAL$[VAL_INDEX],ERR=8716),ECE_SET_DATA[VAL_INDEX,ECE_BUCKET]=1
8745 RETURN 
8750 REM "update session record with new active shipto
8752 EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=8755)ECB$; ECB$(1167,4)=ECD$(36,4); WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
8753 DIM OPTIONS$(50); OPTIONS$(1,1)="N",OPTIONS$(12,4)=ECB$(1167,4); CALL "EC3UT4",X3$,X4$,EC$[2](1,15),XXXX$,OPTIONS$; REM "ssp 154600
8755 RETURN 
8800 REM "ECR says to setup P/O information so do it
8802 REM "Assume FM1$ is correct, need to get ECD$ and ECD2$
8803 IF EC_PARM$(707,1)=" " THEN GOTO 8845 ELSE EXTRACT (Z[2],KEY=ECD$(1,10),DOM=8845)IOL=0310
8804 REM "Always create new p/o - only 1 custom form per p/o allowed
8805 IF ECE$(18,1)<>"O" THEN VEND_PLANT$=FM1$(82,14) ELSE VEND_PLANT$=ECE$(115,14)
8806 REM "get range of allowed, and place on list, if not enough po's, then reject the line
8807 VP_RANGE=ASC(EC_PARM$(707,1))-ASC(EC_PARM$(706,1))+1
8808 USED_VP=INT(LEN(ECD2$)/15); IF USED_VP>=VP_RANGE THEN GOTO 8845 ELSE VP=USED_VP+1; PO_CODE$=CHR(ASC(EC_PARM$(706))+VP-1),ECD2$=ECD2$+VEND_PLANT$+PO_CODE$
8810 REM "Set fields in ECE$ & write out
8812 ECE$(115,14)=VEND_PLANT$,ECE$(129,1)=PO_CODE$
8840 WRITE (Z[2],KEY=ECD$(1,10))IOL=0310
8845 RETURN 
8850 GET_ITEM_CODE:REM "if given real_item_key, then put into ECE$(29,20) else take itemcode entered in ECE_in$(228,20) and if dont_check_catalog then put into ECE_in$(39,10),cust_code in ECE_in$(29,10) if appropriate, if check in catalog, lookup (give error if not found), then substitute from catalog item info. "
8852 IF ECE_IN$(18,1)="O" THEN ECE_IN$(29,20)=DIM(10)+ECE_IN$(29,10); IF ECE_IN$(28,1)=" " THEN ECE_IN$(28,1)="I" END_IF ; OSITEM$=ECE_IN$(39,10); GOSUB 7150; GOTO DONE_CHECKING; REM "if source of item is office supply OS0 then set as IC0 type <blank>+item code / Set line type to I
8855 IF REAL_ITEM_KEY$<>"" THEN ECE$(29,20)=REAL_ITEM_KEY$; GOTO DONE_CHECKING
8860 IF STP(ECE_IN$(29,10),3)="" THEN IF POS(ECE_IN$(28,1)=" C")<>0 THEN ECE_IN$(29,10)=ECD$(26,10) ! if no customer given and blank or custom type then set to customer from worksheet header
8862 IF EC$[14](441,1)="Y" THEN ECE_IN$(39,10)=ECE_IN$(228,20); GOTO DONE_CHECKING ! if don't check catalog option, then just set it and continue, it will have to fit in 39,10 or get chopped off
8864 READ (Z[18],KEY=EC$[2](325,10)+ECE_IN$(228,20),DOM=*NEXT)
8866 ECI$=KEY(Z[18],END=NOT_IN_CATALOG); IF MID(ECI$,1,30)<>EC$[2](325,10)+ECE_IN$(228,20) THEN GOTO NOT_IN_CATALOG ELSE ECE_IN$(29,20)=MID(ECI$,31,20); GOTO DONE_WITH_CATALOG ! After positioning read, check that hi order part matches, if so then we have our real item code else it is missing, set error message as needed
8868 NOT_IN_CATALOG: ECE_IN$(11,2)="02",MESSAGE_NO=2; MESS_INFO$[1]=STP(ECE_IN$(39,10),2) ! if not in Catalog then flag error
8870 DONE_WITH_CATALOG:
8895 DONE_CHECKING:
8899 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNR$(X$)=STR(10000000-NUM(STR(ASC(X$(1,1)))+X$(2)):"0000000")
8950 REM "This line here to avoid error 28 when exiting loops inside 1000's
8960 EXITTO 1090
8970 ! Ship Via Map, WO156839
8972 KMC=POS(","=VALUE$); IF KMC<>0 THEN VALUE$=MID(VALUE$,1,KMC-1)
8975 VALUE$=PAD(VALUE$,15)
8980 DIM EDM$(100); READ (Z[32],KEY=VALUE$,DOM=8990)EDM$
8985 VALUE$=EDM$(16,1); GOSUB 7650 ! Set ship via code and desc
8990 RETURN 
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56002 REM "201193-Questions about security of Boars Head EC Promo site.       
56004 REM "205455-Oracle - FFN usage in ZZFLES to be replaced with FN%FFN     
56005 REM "210688-Modify WebEC to support Peoplesoft punchout
56006 REM "212160-Webec is down.  Cannot use 64 character session id          
56010 ! SSP224259-Error 13 line 4141 need to REM 8446 ***dmm - added as root***
56011 REM "255476-TVIINC workflow - Phase 1: Approver edit worksheets feature 
56012 REM "247956-If order required Purchase approval not sending Reorder     
56014 REM "277197-EC Worksheet approved, user double-clicks, creates second   
56016 REM "290055-Webec error APPROVAL STATUS 0-EC3AP3-3509 system slow, two  
56018 REM "307194-DBD-64-DBSPT-69942; Aprvl Order Request replace session with buyer/pwd  
