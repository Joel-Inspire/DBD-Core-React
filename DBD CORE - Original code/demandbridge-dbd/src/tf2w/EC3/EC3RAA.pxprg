0010 REM "WebEC Inventory/Usage by Form Report Engine <EC3RAA>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 02/22/11 - 15.306111 - dmm - SSP# 244473
0037 REM "244473-Customer 00-00100795, item 10-0706-03, ROP is 0 but item    
0040 REM "Copyright 2011 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0102 GOSUB SET_READONLY
0110 X0$="EC3RAA",X1$="WebEC Form Status Report"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0132 UMASK$="#,###,##0-"
0320 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0340 IOLIST ECG$
0350 IOLIST ECH$
0360 IOLIST ECR$
0380 IOLIST FM0$
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0507 WORK_FILE$="W"+EC$[1](1,7); REM "work file is "W"+session id
0508 ERASE WORK_FILE$,ERR=*NEXT ! CLOSE (1001); OPEN (1001,ERR=0509)WORK_FILE$; CLOSE (1001); GOTO 0510 SSP191340, if we already have the work file defined, it may have been in EC3PC0 or another program, and we may not have defined it with the alternate key, which will cause an error 80 later on in this program.  We don't reuse any of the records, see 5000's where we initialize the file first, so we should just define a new file here each time.
0509 KEYED WORK_FILE$,60,[1:1:35]+[2:61:40]+[2:1:40],,2048; REM "create work file if it doesn't exist
0510 Z$="01O AR1... 020 FM1... 03O FT1... 04O ECG... 05O ECH... 06O ECR... 07O "+WORK_FILE$+" 08O FM0... 09O IC1... 10O FM3... 11O FM4... 12O EDE... 13O ZZPARM 14O EDI... 15O EDA... 18O EDQ... 19O EE3... "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0525 DIM EC_PARM$(1275); READ (Z[13],KEY=X3$(9,3)+"E/C",DOM=*NEXT)EC_PARM$(1)
0530 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4) ! SSP185844
0600 REM 'SET IMG SRC PREFIX/SUFFIX
0601 ITEM_SEARCH_ELEMENTS=8,ST_SEARCH_ELEMENTS=7
0602 DIM SI$[ITEM_SEARCH_ELEMENTS,3]; REM "item search elements (index 1=search text   2=<string>AAAABBBB  A=starting position B=length of fm1 field 2=<numeric>AAAA A=numeric element 3=S/N (string or numeric  <string processed unless set to N>
0603 DIM ST$[ST_SEARCH_ELEMENTS,3]; REM "shipto search elements (index 1=search text   2=<string>AAAABBBB  A=starting position B=length of fm1 field 2=<numeric>AAAA A=numeric element 3=S/N (string or numeric  <string processed unless set to N>
0610 IMGSRC_PREFIX$=STP(EC_PARM$(311,20),2),IMGSRC_ATTRIB$=" "+STP(EC_PARM$(331,60),2)+">",IMGSRC_SUFFIX$=STP(EC_PARM$(391,20),2)
0800 GOSUB 3000
1000 REM "Process DATA array
1005 DATA_TAGS$="001<template>002<user>003<password>004<maxrows>005<position_item>006<direction>007<session_id>008<category>009<search>010<search_type>011<search_item_code>012<search_item_description>013<search_item_lr>014<search_item_tb>015<search_item_ply>016<search_item_fms>017<search_item_vendorcd>018<search_item_cic>019<search_st_code>020<search_st_area_code>021<search_st_state>022<search_st_rec_dept>023<search_st_location>024<search_st_zip_code>025<search_st_city>026<requested_usage_year>027<requested_location>028<requested_period>029<suppress_duplicates>030<report_in_sell_units>031<balance_type>032<catalog>033<only_below_reorderpt>"
1006 MAX_ROWS=NUM(EC_PARM$(258,3)),POSITION_ITEM$="",DIRECTION$="F"
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 USER$=VALUE$; GOSUB 3000; GOTO 1090; REM "user
1023 PASSWORD$=VALUE$; GOTO 1090; REM "password
1024 MAX_ROWS=NUM(VALUE$,ERR=1090); GOTO 1090; REM "maxrows
1025 POSITION_ITEM$=VALUE$; GOTO 1090; REM "position_item
1026 IF VALUE$="backward" THEN DIRECTION$="B"; GOTO 1090; REM "direction, only set if it is 'backward'
1027 SESSION_ID$=VALUE$; GOTO 1090; REM "Get session id
1028 CATEGORY$=VALUE$; GOTO 1090; REM "category(s) to display (10 *'s is for all categories otherwise this can contain a single or multiple categories)
1029 SEARCH=POS(VALUE$="Y"); GOTO 1090; REM "if search set then will initiate searching mechanism - if not will work off the product catalog
1030 SEARCH_TYPE$=VALUE$; STYPE=INT(POS(SEARCH_TYPE$="I/CFM0ORD")/3); GOTO 1090; REM "search_type
1031 SEARCH_ITEM_CODE$=VALUE$,SI$[1,1]=VALUE$,SI$[1,2]="00110010"; GOTO 1090; REM "value to search item codes
1032 SEARCH_ITEM_DESC$=VALUE$,SI$[2,1]=VALUE$,SI$[2,2]="00420040"; GOTO 1090; REM "value to search item descriptions
1033 SEARCH_ITEM_LR$=VALUE$,SI$[3,1]=VALUE$,SI$[3,2]="00240008"; GOTO 1090; REM "search_item_lr (left-right dimensions)
1034 SEARCH_ITEM_TB$=VALUE$,SI$[4,1]=VALUE$,SI$[4,2]="00320008"; GOTO 1090; REM "search_item_tb (top-bottom)
1035 SEARCH_ITEM_PLY$=VALUE$,SI$[5,1]=VALUE$,SI$[5,2]="00400002"; GOTO 1090; REM "search_item_ply
1036 SEARCH_ITME_FMS$=VALUE$,SI$[6,1]=VALUE$,SI$[6,2]="01080001"; GOTO 1090; REM "search_item_fms (should be Y or N to only get certain FMS flagging
1037 SEARCH_ITEM_VENDCD$=VALUE$,SI$[7,1]=VALUE$,SI$[7,2]="00820010"; GOTO 1090; REM "search_item_vendorcd
1038 SEARCH_ITEM_CIC$=VALUE$,SI$[8,1]=VALUE$,SI$[8,2]="03500020"; GOTO 1090; REM "search_item_cic
1039 SEARCH_ST_CODE$=VALUE$,ST$[1,1]=VALUE$,ST$[1,2]="00120004"; GOTO 1090; REM "search_st_code (tf shipto code)
1040 SEARCH_ST_AREA_CODE$=VALUE$,ST$[2,1]=VALUE$,ST$[2,2]="02000003"; GOTO 1090; REM "search_st_area_code (uses first 3 char of phone)
1041 SEARCH_ST_STATE$=VALUE$,ST$[3,1]=VALUE$,ST$[3,2]="01270002"; GOTO 1090; REM "search_st_state
1042 SEARCH_ST_REC_DEPT$=VALU$,ST$[4,1]=VALUE$,ST$[4,2]="03820020"; GOTO 1090
1043 SEARCH_ST_LOC$=VALUE$,ST$[5,1]=VALUE$,ST$[5,2]="02140009"; GOTO 1090; REM "search_st_loc (customer 9 character location)
1044 SEARCH_ST_ZIP$=VALUE$,ST$[6,1]=VALUE$,ST$[6,2]="00240009"; GOTO 1090; REM "search_st_zip
1045 SEARCH_ST_CITY$=VALUE$,ST$[7,1]=VALUE$,ST$[7,2]="01110016"; GOTO 1090; REM "search_city
1046 USAGE_YEAR$=VALUE$; GOTO 1090; REM "requested_usage_year
1047 USAGE_LOCATION$=VALUE$; GOTO 1090; REM "requested_location
1048 USAGE_PERIOD$=VALUE$; GOTO 1090; REM "requested_period
1049 SUPPRESS_DUPLICATES$=VALUE$; GOTO 1090; REM "suppress_duplicates
1050 RS=POS(VALUE$="Yy"); IF RS<>0 THEN RS$="Y" ELSE RS$="N" END_IF ; GOTO 1090; REM " set flag for reporting in selling units
1051 BALANCE_TYPE$=UCS(VALUE$); GOTO 1090; REM "Set balance type to report from FM3 (if blank set to U in the 1100's)
1052 CATALOG$=VALUE$; GOTO 1090; REM "catalog
1053 BELOW_REORDER$=VALUE$; IF BELOW_REORDER$="ON" THEN BELOW_REORDER$="Y" END_IF ; GOTO 1090; REM "only_below_reorderpt (only applies to custom items FM1)
1090 NEXT I
1100 REM "preprocessing
1101 VERSION$="244473.20110222",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1107 IF SUPPRESS_DUPLICATES$="" THEN SUPPRESS_DUPLICATES$=EC_PARM$(686,1)
1108 DIM FM0$(500)
1112 IF STP(CATALOG$,2)<>"" THEN GOTO 1114; REM "set search category
1113 CATALOG$=EC$[1](1125,10); IF CATALOG$=DIM(10) THEN CATALOG$=EC$[2](325,10); REM "no catalog passed in so get from defaults
1114 GOSUB 8050; REM "get category list
1115 IF CATEGORY$="**********" THEN CATEGORY$=EDI_CATEGORY_LIST$
1116 DIM EDA$(200); FIND (Z(15),KEY=CATALOG$,DOM=1117)EDA$; REM "ssp 154559
1117 IF EDA$(73,1)<>"Y" THEN CATALOGSORT=0 ELSE CATALOGSORT=1; REM "ssp 154559
1120 IF USAGE_LOCATION$=DIM(4) THEN GOTO 1125
1121 FIND (Z[8],KEY="C"+EC$[2](51,10)+USAGE_LOCATION$,DOM=1122)IOL=0380
1125 REM 'CK FOR VALID MAXROWS
1126 IF MAX_ROWS=0 THEN MAX_ROWS=1000; REM "set rows to for reports
1127 IF STP(BALANCE_TYPE$,2)="" THEN BALANCE_TYPE$="U"
1130 REM "ck if new search
1132 IF SEARCH THEN GOSUB 5000; GOSUB 3400 ELSE GOSUB 4400; REM "if searching then build search files and get list from ECT - if not searching then get list from product catalog ECH
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<user>002<cust_code>003<password>004<cust_name>005<ec_company>006<entrystart>007<buttonnext>008<buttonprev>009<session_id>010<buyer_id>011<buyer_name>012<date>013<time>014<categorystart>015<mousedbox1start>016<category_list>017<category_code>018<number_records_found>019<unused_2>020<requested_usage_year>021<requested_location>022<requested_period>023<requested_rec_dept>"
1510 READ (100,END=1595)LINE$; GOSUB 7550
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2090
2001 LINE$=LINE1$+USER$+LINE2$; GOTO 2095; REM "user
2002 LINE$=LINE1$+CUST_CODE$+LINE2$; GOTO 2095; REM "cust_code
2003 LINE$=LINE1$+PASSWORD$+LINE2$; GOTO 2095; REM "password
2004 LINE$=LINE1$+STP(EC$[1](23,35),1)+LINE2$; GOTO 2095; REM "cust_name
2005 LINE$=LINE1$+STP(EC_PARM$(7,50),1)+LINE2$; GOTO 2095; REM "ec_company
2006 GOSUB 3200; LINE$=TABLE$; GOTO 2095; REM "entrystart
2007 GOSUB 3500; LINE$=BUTTON$; GOTO 2095; REM "buttonnext
2008 GOSUB 3600; LINE$=BUTTON$; GOTO 2095; REM "buttonprev
2009 LINE$=LINE1$+STP(SESSION_ID$,1)+LINE2$; GOTO 2095; REM "session_id
2010 LINE$=LINE1$+STP(EC$[1](8,15),1)+LINE2$; GOTO 2095; REM "buyer_id
2011 LINE$=LINE1$+STP(EC$[2](16,35),1)+LINE2$; GOTO 2095; REM "buyer_name
2012 LINE$=LINE1$+EC$[4]+LINE2$; GOTO 2095; REM " date
2013 LINE$=LINE1$+EC$[5]+LINE2$; GOTO 2095; REM "time
2014 GOSUB 2200; GOTO 2095; REM "categorystart - store in CAT_TEMPLATE$
2015 GOSUB 3700; LINE$=MOUSEDBOX1$; GOTO 2095; REM "mousedbox1start - store in MOUSEDBOX1_TEMPLATE$
2016 GOSUB 2150; LINE$=LINE1$+CATEGORY_LIST$+LINE2$; GOTO 2095; REM "catalog category list
2017 LINE$=LINE1$+ECH$(11,10)+LINE2$; GOTO 2095; REM "category_code
2018 IF SEARCH_TYPE$<>"" THEN FILE_SPEC$=FN%FIN$(Z(7),"NUMREC"),NUM_RECS=NUM(FILE_SPEC$),LINE$=LINE1$+"("+STP(STR(NUM_RECS:"##,##0"),2)+" Item(s) found)"+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+LINE2$; GOTO 2095; REM "number_records_found
2019 LINE$=LINE1$+LINE2$; GOTO 2095; REM "unused_2
2020 LINE$=LINE1$+USAGE_YEAR$+LINE2$; GOTO 2095; REM "requested_usage_year
2021 IF USAGE_LOCATION$="****" THEN TEMP$="ALL Locations" ELSE TEMP$=USAGE_LOCATION$ END_IF ; LINE$=LINE1$+TEMP$+LINE2$; GOTO 2095; REM "requested_location
2022 LINE$=LINE1$+USAGE_PERIOD$+LINE2$; GOTO 2095; REM "requested_period
2023 IF USAGE_LOCATION$="****" THEN TEMP$="All Locations" ELSE TEMP$=STP(FM0$(382,20),2) END_IF ; LINE$=LINE1$+TEMP$+LINE2$; GOTO 2095; REM "requested_rec_dept
2090 LINE$=LINE1$+LINE2$; GOTO 2095; REM "tag not found, replace with '?'. 233219, remove "?"
2095 RETURN 
2150 REM "Return CATEGORY_LIST$ as HTML for drop down list
2155 CATEGORY_LIST$="",PUBLISHED$=EC$[6]
2157 IF LEN(STP(PUBLISHED$,2))=0 THEN GOTO 2195
2159 FOR PP=0 TO LEN(PUBLISHED$)/10-1; CURRCAT$=PUBLISHED$(PP*10+1,10)
2160 READ (Z[4],KEY=CURRCAT$,DOM=2180)IOL=0340
2165 CATEGORY_LIST$=CATEGORY_LIST$+"<option selected value="+QUO+CURRCAT$+QUO; IF PP=0 THEN CATEGORY_LIST$=CATEGORY_LIST$+" SELECTED>"+ECG$(11,30)+"</option>" ELSE CATEGORY_LIST$=CATEGORY_LIST$+">"+ECG$(11,30)+"</option>"; REM "if first item in list (pp=0) then set to be SELECTED as the initial value in the dd list
2180 NEXT PP
2185 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN CATEGORY_LIST$=CATEGORY_LIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2186 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2195 RETURN 
2200 REM "Store category header template into CAT_TEMPLATE$, it will be used in the entry section
2204 CAT_TEMPLATE$=LINE$,LINE$=""
2205 READ (100,END=2210)LINE$; REM " GOSUB 07550
2206 IF POS("?tf?categoryend?"=LINE$)<>0 THEN GOTO 2209 END_IF ; INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN GOTO 2209; REM "searching for tags within the category heading section
2207 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
2209 CAT_TEMPLATE$=CAT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?categoryend?"=LINE$)=0 THEN GOTO 2205
2230 LINE$=""
2249 RETURN 
3000 REM "Read customer data into AR1$
3010 DIM AR1$(600); READ (Z[1],KEY=EC$[2](51,10),DOM=3011)AR1$
3015 CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$
3045 RETURN 
3200 REM "Output I/C type entries, using ENTRY_TEMPLATE$ to pass information, create TABLE$ to output
3201 ENTRY_TAGS$="001<item_code>002<cic_code>003<desc>004<um_ext>005<price>006<item_key>007<user>008<password>009<session_id>010<catalog_code>011<catalog_addl>012<catalog_image>013<fms_price>014<alt_um_ext>015<price_in_alt_um>016<flagged_fms_price>017<image_form1>018<image_form2>019<image_form3>020<image_form4>021<image_form5>022<image_form1_link>023<image_form2_link>024<image_form3_link>025<image_form4_link>026<image_form5_link>027<cic_code>028<left_right>029<top_bottom>030<plies>031<rev_date>032<function_code>033<carton_pack>034<carton_weight>035<numbered>036<last_ord_date>037<ending_number>038<previous_form_code>039<form_memo>040<sell_price>041<sell_qty_unit>042<last_ord_qty>043<desired_stocking_level>044<rop_days>045<rop_qty>046<form_mos_avg_usage>047<form_code>"
3202 ENTRY_TAGS$=ENTRY_TAGS$+"048<mosusage_p1>049<mosusage_p2>050<mosusage_p3>051<mosusage_p4>052<mosusage_p5>053<mosusage_p6>054<mosusage_p7>055<mosusage_p8>056<mosusage_p9>057<mosusage_p10>058<mosusage_p11>059<mosusage_p12>060<fm3_ytd_usage>061<fm3_current_per_usage>062<mosusage_all_p1>063<mosusage_all_p2>064<mosusage_all_p3>065<mosusage_all_p4>066<mosusage_all_p5>067<mosusage_all_p6>068<mosusage_all_p7>069<mosusage_all_p8>070<mosusage_all_p9>071<mosusage_all_p10>072<mosusage_all_p11>073<mosusage_all_p12>074<fm3_ytdall_usage>075<fm3_current_per_usageall>076<cust_location>077<fm4_is_item_counted>078<fm4_autorestock_method>079<fm4_last_count_date>080<fm4_usage_start_date>081<fm4_last_ship_date>082<fm4_billing_dept>083<fm4_avg_mos_usage>084<fm4_resupply_min_days>085<fm4_resupply_min_qty>086<fm4_last_count_qty>087<fm4_direct_shipments>088<fm4_whse_shipments>089<fm4_req_max>090<fm4_restock_days>091<fm4_restock_qty>092<fm4_total_ship>093<fm4_avg_mos_usageall>094<ic1_reorder_pt>095<ic1_last_cost>096<ic1_avg_cost>097<ic1_beg_balance>098<ic1_receipts>099<ic1_sales>100<ic1_adj>101<ic1_committed>102<ic1_onpo>103<ic1_last_count>104<ic1_reorder_qty>105<ic1_bo_qty>106<ic1_on_hand>107<ic1_avail_in_stock>108<ic1_avail_for_sale>109<usage_year>110<mos_supply>111<inv_value_ext>112<prev_order_no>113<below_3msupply_flag>114<days_on_hand_form>115<reorder_trigger>116<days_on_hand_ic1usage>117<form_or_fm4_avg_mos_usage>"
3203 REM "Setup ENTRY_TEMPLATE$
3204 ENTRY_TEMPLATE$=LINE$,TABLE$="",PREV_CATEGORY$=""; REM "Setup ENTRY_TEMPLATE$
3205 READ (100,END=3206)LINE$; GOSUB 7550; ENTRY_TEMPLATE$=ENTRY_TEMPLATE$+LINE$+EOL$; IF POS("?tf?entryend?"=LINE$)=0 THEN GOTO 3205
3209 REM "now read search file (work file)
3210 IF DIRECTION$="B" THEN START_PT=TOTAL_RECORDS,END_PT=1,STEP_SIZE=-1 ELSE START_PT=1,END_PT=TOTAL_RECORDS,STEP_SIZE=1
3211 CURRENT_REPORT_CATEGORY$="" REM "ssp 200988
3212 FOR ENTRY_INDEX=START_PT TO END_PT STEP STEP_SIZE
3213 IF SEARCH_TYPE$="" THEN GOTO 3215 ELSE GOTO 3214; REM "if searching then read from search work file else from ECH
3214 DIM FM1[40],FM1$(500); FIND (Z[7],KEY=DISPLAY$[ENTRY_INDEX],KNO=CATALOGSORT,DOM=3245)ECT$,ECH$,IOL=0320; DIM ECR$(1000); FIND (Z[6],KEY=FM1$(1,20),DOM=3218)IOL=0360; GOTO 3218; REM "get form webec parms
3215 DIM FM1[40],FM1$(500); ECH$=DISPLAY$[ENTRY_INDEX]; FIND (Z[2],KEY=MID(DISPLAY$[ENTRY_INDEX],41,20),DOM=3245)IOL=0320; DIM ECR$(1000); FIND (Z[6],KEY=MID(DISPLAY$[ENTRY_INDEX],41,20),DOM=3216)IOL=0360; GOTO 3216; REM "reading using ECH$ key
3218 GOSUB 7900; REM "get inventory/usage figures
3224 REM "put in read for order information here!
3225 ENTRY$=ENTRY_TEMPLATE$
3226 IF RS$<>"Y" THEN SELL_UM=1; GOTO 3228; REM "if not reporting in selling units then set divisor to 1
3227 ITEM_TYPE$="C"; GOSUB 7800; SELL_UM$=UM$,SELL_UM=PACK,SELL_EXT$=EXT_UM$; IF SELL_UM=0 THEN SELL_UM=1; REM "Set selling unit for reporting capability
3228 IF BELOW_REORDER$="Y" THEN GOSUB 7500; IF REORDER_TRIGGERED$<>"Y" THEN GOTO 3245; REM "ck if only reporting custom items below reorder - skip if no ro triger
3229 IF CURRENT_REPORT_CATEGORY$=ECH$(11,10) THEN GOTO 3230 ELSE CURRENT_REPORT_CATEGORY$=ECH$(11,10); GOSUB 4000; REM "output category heading
3230 GOSUB 3300
3235 IF LEN(TABLE$+ENTRY$)>50000 THEN PRINT (OUTPUT)TABLE$,EOL$,; TABLE$="" END_IF ; TABLE$=TABLE$+ENTRY$
3245 NEXT ENTRY_INDEX
3295 RETURN 
3300 REM "Given FM1$, create row in table
3305 EINDEX=POS("?tf?"=ENTRY$); IF EINDEX=0 THEN GOTO 3396
3306 EEND_INDEX=POS("?"=ENTRY$(EINDEX+4)),ETAG$=ENTRY$(EINDEX+4,EEND_INDEX-1),ENTRY1$=ENTRY$(1,EINDEX-1),ENTRY2$=ENTRY$(EINDEX+EEND_INDEX+4),EPOS=POS("<"+ETAG$+">"=ENTRY_TAGS$); IF EPOS=0 THEN EINDEX=0 ELSE EINDEX=NUM(ENTRY_TAGS$(EPOS-3,3))
3308 IF RS$<>"Y" THEN SELL_UM=1 ELSE ITEM_TYPE$="C"; GOSUB 7800; SELL_UM$=UM$,SELL_UM=PACK,SELL_EXT$=EXT_UM$; IF SELL_UM=0 THEN SELL_UM=1; REM "Set selling unit for reporting capability.  SSP169935
3310 ON EINDEX GOTO 3392,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,3388,3389,3390,3791,3792,3793,3794,3795,3796,3797,3798,3799,3800,3801,3802,3803,3804,3085,3806,3807,3808,3809,3810,3811,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3392
3311 ENTRY$=ENTRY1$+STP(FM1$(11,10),1)+ENTRY2$; GOTO 3395; REM "item_code
3312 ENTRY$=ENTRY1$+TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1))+ENTRY2$; GOTO 3395; REM "cic_code
3313 ENTRY$=ENTRY1$+STP(FM1$(42,40),1)+ENTRY2$; GOTO 3395; REM "item description
3314 ITEM_TYPE$="C"; GOSUB 7800; UM_EXT$=EXT_UM$; ENTRY$=ENTRY1$+UM_EXT$+ENTRY2$; GOTO 3395; REM "um_ext, selling u/m & u/per extended
3315 ENTRY$=ENTRY1$+STR(FM1[3]:"$###,###.00")+ENTRY2$; GOTO 3395; REM "sell price
3316 ENTRY$=ENTRY1$+FM1$(1,20)+ENTRY2$; GOTO 3395; REM "item_key - key to Form master
3317 ENTRY$=ENTRY1$+USER$+ENTRY2$; GOTO 3395; REM "user
3318 ENTRY$=ENTRY1$+PASSWORD$+ENTRY2$; GOTO 3395; REM "password
3319 ENTRY$=ENTRY1$+SESSION_ID$+ENTRY2$; GOTO 3395; REM "session id
3320 ENTRY$=ENTRY1$+STP(ECH$(21,20),1)+ENTRY2$; GOTO 3395; REM "catalog_code from ECH
3321 IF LEN(ECH$)<121 THEN ECH$=ECH$+DIM(60) END_IF ; ENTRY$=ENTRY1$+STP(ECH$(61,60),1)+ENTRY2$; GOTO 3395; REM "catalog_addl from ECH
3322 IF LEN(ECH$)<181 THEN ECH$=ECH$+DIM(180) END_IF ; ENTRY$=ENTRY1$+STP(ECH$(121,60),1)+ENTRY2$; GOTO 3395; REM "catalog_image from ECH
3323 IF FM1[29]=0 THEN FMS_PRICE=FM1[3] ELSE FMS_PRICE=FM1[29] END_IF ; ENTRY$=ENTRY1$+STR(FMS_PRICE:"$###,###.00")+ENTRY2$; GOTO 3395; REM "fms_price
3324 ITEM_TYPE$="C"; GOSUB 7800; UM_EXT$=EXT_UM$; ENTRY$=ENTRY1$+UM_EXT$+ENTRY2$; GOTO 3395; REM "alt_um_ext, alternate unit of issue  u/m & u/per extended
3325 IF FM1[25]=0 THEN ALT_PRICE=FM1[3] ELSE IF FM1[3]=0 OR FM1[4]=0 THEN ALT_PRICE=0 ELSE ALT_PRICE=FM1[3]*FM1[25]/FM1[4] END_IF END_IF ; ENTRY$=ENTRY1$+STR(ALT_PRICE:"$###,###.00")+ENTRY2$; GOTO 3395; REM "price_in_alt_um, calculated from sell price, sell u/m and alt iss #1 um
3326 IF FM1[29]=0 THEN FMS_PRICE=FM1[3] ELSE FMS_PRICE=FM1[29] END_IF ; IF EC$[2](322,1)="Y" THEN ENTRY$=ENTRY1$+ENTRY2$ ELSE ENTRY$=ENTRY1$+STR(FMS_PRICE:"$###,###.00 per ")+ENTRY2$ END_IF ; GOTO 3395; REM "flagged_fms_price,shown unless don't show flag in buyer is set
3327 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(31,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form1
3328 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(61,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form2
3329 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(31,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form3
3330 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(31,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form4
3331 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(31,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3395; REM "image_form5
3332 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(31,30),2)+ENTRY2$; GOTO 3395; REM "image_form1_link
3333 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(61,30),2)+ENTRY2$; GOTO 3395; REM "image_form2_link
3334 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(91,30),2)+ENTRY2$; GOTO 3395; REM "image_form3_link
3335 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(121,30),2)+ENTRY2$; GOTO 3395; REM "image_form4_link
3336 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(151,30),2)+ENTRY2$; GOTO 3395; REM "image_form5_link
3337 ENTRY$=ENTRY1$+TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1))+ENTRY2$; GOTO 3395; REM "cic_code
3338 ENTRY$=ENTRY1$+STP(FM1$(24,8),1)+ENTRY2$; GOTO 3395; REM "left_right
3339 ENTRY$=ENTRY1$+STP(FM1$(32,8),1)+ENTRY2$; GOTO 3395; REM "top_bottom
3340 ENTRY$=ENTRY1$+STP(FM1$(40,2),1)+ENTRY2$; GOTO 3395; REM "plies
3341 ENTRY$=ENTRY1$+STP(FM1$(167,6),1)+ENTRY2$; GOTO 3395; REM "rev_date
3342 ENTRY$=ENTRY1$+STP(FM1$(173,12),1)+ENTRY2$; GOTO 3395; REM "function_code
3343 ENTRY$=ENTRY1$+STR(FM1[0]:"###,###")+ENTRY2$; GOTO 3395; REM "carton_pack
3344 ENTRY$=ENTRY1$+STR(FM1[18]:"###.##")+ENTRY2$; GOTO 3395; REM "carton_weight
3345 ENTRY$=ENTRY1$+STP(FM1$(104,1),1)+ENTRY2$; GOTO 3395; REM "numbered
3346 CALL "ZZDISP","DX",FM1$(126,6),"",X3$,DATE1$,"",0,0,X4$; ENTRY$=ENTRY1$+DATE1$+ENTRY2$; GOTO 3395; REM "last_ord_date,SSP157847
3347 ENTRY$=ENTRY1$+STP(FM1$(140,9),1)+ENTRY2$; GOTO 3395; REM "ending_number
3348 ENTRY$=ENTRY1$+STP(FM1$(199,10),1)+ENTRY2$; GOTO 3395; REM "previous_form_code
3349 ENTRY$=ENTRY1$+STP(FM1$(389,60),1)+ENTRY2$; GOTO 3395; REM "form_memo
3350 ENTRY$=ENTRY1$+STP(STR(FM1[3]:"$#,##0.00-"),1)+ENTRY2$; GOTO 3395; REM "sell_price
3351 ENTRY$=ENTRY1$+STP(STR(FM1[4]:"#,##0"),1)+ENTRY2$; GOTO 3395; REM "sell_qty_unit
3352 ENTRY$=ENTRY1$+STP(STR(FM1[16]/SELL_UM:"##,###,##0"),1)+ENTRY2$; GOTO 3395; REM "last_ord_qty
3353 ENTRY$=ENTRY1$+STP(STR(FM1[21]/SELL_UM:"###,##0"),1)+ENTRY2$; GOTO 3395; REM "desired_stocking_level
3354 ENTRY$=ENTRY1$+STP(STR(FM1[22]:"##0"),1)+ENTRY2$; GOTO 3395; REM "rop_days
3355 ENTRY$=ENTRY1$+STP(STR(FM1[23]/SELL_UM:"###,##0"),1)+ENTRY2$; GOTO 3395; REM "rop_qty
3356 ENTRY$=ENTRY1$+STP(STR(FM1[24]/SELL_UM:"###,##0-"),1)+ENTRY2$; GOTO 3395; REM "form_mos_avg_usage
3357 ENTRY$=ENTRY1$+STP(FM1$(11,10),1)+ENTRY2$; GOTO 3395; REM "form_code
3358 ENTRY$=ENTRY1$+STP(STR(FM3[1]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p1
3359 ENTRY$=ENTRY1$+STP(STR(FM3[2]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p2
3360 ENTRY$=ENTRY1$+STP(STR(FM3[3]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p3
3361 ENTRY$=ENTRY1$+STP(STR(FM3[4]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p4
3362 ENTRY$=ENTRY1$+STP(STR(FM3[5]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p5
3363 ENTRY$=ENTRY1$+STP(STR(FM3[6]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p6
3364 ENTRY$=ENTRY1$+STP(STR(FM3[7]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p7
3365 ENTRY$=ENTRY1$+STP(STR(FM3[8]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p8
3366 ENTRY$=ENTRY1$+STP(STR(FM3[9]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p9
3367 ENTRY$=ENTRY1$+STP(STR(FM3[10]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p10
3368 ENTRY$=ENTRY1$+STP(STR(FM3[11]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p11
3369 ENTRY$=ENTRY1$+STP(STR(FM3[12]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_p12
3370 ENTRY$=ENTRY1$+STP(STR(FORM_OTHER[2]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "fm3_ytd_usage
3371 ENTRY$=ENTRY1$+STP(STR(FORM_OTHER[1]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "fm3_current_per_usage
3372 ENTRY$=ENTRY1$+STP(STR(FM3ALL[1]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p1
3373 ENTRY$=ENTRY1$+STP(STR(FM3ALL[2]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p2
3374 ENTRY$=ENTRY1$+STP(STR(FM3ALL[3]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p3
3375 ENTRY$=ENTRY1$+STP(STR(FM3ALL[4]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p4
3376 ENTRY$=ENTRY1$+STP(STR(FM3ALL[5]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p5
3377 ENTRY$=ENTRY1$+STP(STR(FM3ALL[6]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p6
3378 ENTRY$=ENTRY1$+STP(STR(FM3ALL[7]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p7
3379 ENTRY$=ENTRY1$+STP(STR(FM3ALL[8]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p8
3380 ENTRY$=ENTRY1$+STP(STR(FM3ALL[9]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p9
3381 ENTRY$=ENTRY1$+STP(STR(FM3ALL[10]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p10
3382 ENTRY$=ENTRY1$+STP(STR(FM3ALL[11]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p11
3383 ENTRY$=ENTRY1$+STP(STR(FM3ALL[12]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "mosusage_all_p12
3384 ENTRY$=ENTRY1$+STP(STR(FORM_OTHERALL[2]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "fm3_ytdall_usage
3385 ENTRY$=ENTRY1$+STP(STR(FORM_OTHERALL[1]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "fm3_current_per_usageall
3386 ENTRY$=ENTRY1$+FM4$(21,4)+ENTRY2$; GOTO 3395; REM "cust_location
3387 ENTRY$=ENTRY1$+STP(FM4$(26,1),1)+ENTRY2$; GOTO 3395; REM "fm4_is_item_counted
3388 ENTRY$=ENTRY1$+STP(FM4$(27,1),1)+ENTRY2$; GOTO 3395; REM "fm4_autorestock_method
3389 CALL "ZZDISP","DX",FM4$(75,6),"",X3$,DATE1$,"",0,0,X4$; ENTRY$=ENTRY1$+DATE1$+ENTRY2$; GOTO 3395; REM "fm4_last_count_date,SSP157847
3390 CALL "ZZDISP","DX",FM4$(83,6),"",X3$,DATE1$,"",0,0,X4$; ENTRY$=ENTRY1$+DATE1$+ENTRY2$; GOTO 3395; REM "fm4_usage_start_date,SSP157847
3392 ENTRY$=ENTRY1$+ENTRY2$; REM "tag not found, replace with '?'. 233219, remove "?"
3395 GOTO 3305
3399 RETURN 
3400 REM "Use Search Results file to build display array
3404 GOSUB 3450
3405 IF POSITION_ITEM$="" AND DIRECTION$="B" THEN POSITION_ITEM$=HIKEY$+$FFFFFFFFFFFF$ ELSE IF POSITION_ITEM$="" AND DIRECTION$="F" OR DIRECTION$="" THEN POSITION_ITEM$=HIKEY$; REM "if in backwards order, start at end of file
3410 FIRST_ITEM$="",LAST_ITEM$="",TOTAL_RECORDS=0,INDEX=1,ITEM_LIST$=""; DIM DISPLAY$[6000]
3415 READ (Z[7],KEY=POSITION_ITEM$,KNO=CATALOGSORT,DOM=3416)
3420 IF DIRECTION$="B" THEN ECTKEY$=KEP(Z[7],KNO=CATALOGSORT,END=3435) ELSE ECTKEY$=KEY(Z[7],KNO=CATALOGSORT,END=3435)
3425 IF ECTKEY$(1,25)<>HIKEY$ THEN GOTO 3435 ELSE READ (Z[7],KEY=ECTKEY$,KNO=CATALOGSORT)ECT_DATA1$,ECT_DATA2$
3426 ADD_ITEM$="Y"; IF SUPPRESS_DUPLICATES$="Y" THEN IF POS(ECT_DATA2$(41,20)=ITEM_LIST$,20)<>0 THEN ADD_ITEM$="N"
3427 IF ADD_ITEM$<>"Y" THEN GOTO 3428 ELSE DISPLAY$[INDEX]=ECTKEY$,TOTAL_RECORDS=TOTAL_RECORDS+1,INDEX=INDEX+1,ITEM_LIST$=ITEM_LIST$+ECT_DATA2$(41,20); IF MAX_ROWS<>0 AND TOTAL_RECORDS>=MAX_ROWS THEN GOTO 3428
3430 GOTO 3420
3440 IF DIRECTION$="B" THEN FIRST_ITEM$=DISPLAY$[TOTAL_RECORDS],LAST_ITEM$=DISPLAY$[1] ELSE FIRST_ITEM$=DISPLAY$[1],LAST_ITEM$=DISPLAY$[TOTAL_RECORDS]
3445 RETURN 
3450 REM "Set VERY_FIRST_ITEM$ and VERY_LAST_ITEM$. These will be used to determine when to NOT show prev and next buttons
3455 VERY_FIRST_ITEM$="",VERY_LAST_ITEM$=""
3460 READ (Z[7],KEY=HIKEY$,KNO=CATALOGSORT,DOM=3461)
3465 VK$=KEY(Z[7],KNO=CATALOGSORT,END=3466); IF VK$(1,25)=HIKEY$ THEN VERY_FIRST_ITEM$=VK$
3470 READ (Z[7],KEY=HIKEY$+$FF$,KNO=CATALOGSORT,DOM=3471)
3471 VK$=KEP(Z[7],END=3472,KNO=CATALOGSORT); IF VK$(1,25)=HIKEY$ THEN VERY_LAST_ITEM$=VK$
3495 RETURN 
3500 REM "Output next button, using BUTTON_NEXT_TEMPLATE$ to pass information, creating BUTTON$, if needed
3502 BUTTON$="",BUTTON_NEXT_TAGS$="001<position_item>002<user>003<password>004<session_id>005<category>"
3503 REM "Setup BUTTON_NEXT_TEMPLATE$
3505 READ (100,END=3506)LINE$; GOSUB 7550; BUTTON_NEXT_TEMPLATE$=BUTTON_NEXT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonnextend?"=LINE$)=0 THEN GOTO 3505
3510 IF LAST_ITEM$=VERY_LAST_ITEM$ THEN BUTTON$=""; GOTO 3595 ELSE BUTTON$=BUTTON_NEXT_TEMPLATE$
3515 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3591
3516 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_NEXT_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_NEXT_TAGS$(BNPOS-3,3))
3520 ON BNINDEX GOTO 3590,3521,3522,3523,3524,3525,3590
3521 BUTTON$=BUTTON1$+LAST_ITEM$+BUTTON2$; GOTO 3590; REM "position_item
3522 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3590; REM "User
3523 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3590; REM "password
3524 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3590; REM "session_id
3525 BUTTON$=BUTTON1$+CATEGORY$+BUTTON2$; GOTO 3590; REM "category
3590 GOTO 3515
3595 RETURN 
3600 REM "Output previous button, using BUTTON_PREV_TEMPLATE$ to pass information, creating BUTTON$, if needed
3602 BUTTON$="",BUTTON_PREV_TAGS$="001<position_item>002<user>003<password>004<session_id>005<category>"
3605 READ (100,END=3606)LINE$; GOSUB 7550; BUTTON_PREV_TEMPLATE$=BUTTON_PREV_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonprevend?"=LINE$)=0 THEN GOTO 3605
3610 IF FIRST_ITEM$=VERY_FIRST_ITEM$ THEN BUTTON$=""; GOTO 3695 ELSE BUTTON$=BUTTON_PREV_TEMPLATE$
3615 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3691
3616 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_PREV_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_PREV_TAGS$(BNPOS-3,3))
3620 ON BNINDEX GOTO 3690,3621,3622,3623,3624,3625,3690
3621 BUTTON$=BUTTON1$+FIRST_ITEM$+BUTTON2$; GOTO 3690; REM "position_item
3622 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3690; REM "User
3623 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3690; REM "password
3624 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3690; REM "session_id
3625 BUTTON$=BUTTON1$+CATEGORY$+BUTTON2$; GOTO 3690; REM "category
3690 GOTO 3615
3695 RETURN 
3700 REM "continuation of entry line tags
3791 CALL "ZZDISP","DX",FM4$(89,6),"",X3$,DATE1$,"",0,0,X4$; ENTRY$=ENTRY1$+DATE1$+ENTRY2$; GOTO 3395; REM "fm4_last_ship_date,SSP157847
3792 ENTRY$=ENTRY1$+STP(FM4$(180,20),1)+ENTRY2$; GOTO 3395; REM "fm4_billing_dept
3793 ENTRY$=ENTRY1$+STP(STR(FORM_OTHER[0]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "fm4_avg_mos_usage
3794 ENTRY$=ENTRY1$+STP(STR(FM4[1]:"##0"),1)+ENTRY2$; GOTO 3395; REM "fm4_resuply_min_days
3795 ENTRY$=ENTRY1$+STP(STR(FM4[2]/SELL_UM:"#,###,##0"),1)+ENTRY2$; GOTO 3395; REM "fm4_resupply_min_qty
3796 ENTRY$=ENTRY1$+STP(STR(FM4[3]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "fm4_last_count_qty
3797 ENTRY$=ENTRY1$+STP(STR(FM4[4]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "fm4_direct_shipments
3798 ENTRY$=ENTRY1$+STP(STR(FM4[5]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "fm4_whse_shipments
3799 ENTRY$=ENTRY1$+STP(STR(FM4[10]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "fm4_req_max
3800 ENTRY$=ENTRY1$+STP(STR(FM4[12]:"##0-"),1)+ENTRY2$; GOTO 3395; REM "fm4_restock_days
3801 ENTRY$=ENTRY1$+STP(STR(FM4[13]/SELL_UM:"#,###,##0"),1)+ENTRY2$; GOTO 3395; REM "fm4_restock_qty
3802 ENTRY$=ENTRY1$+STP(STR(FM4[4]+FM4[5]/SELL_UM:"#,###,##0"),1)+ENTRY2$; GOTO 3395; REM "fm4_total_ship
3803 ENTRY$=ENTRY1$+STP(STR(FORM_OTHERALL[0]/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395; REM "avg_mos_usageall
3804 ENTRY$=ENTRY1$+STP(STR(IC1INFO[0]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_reorder_pt
3805 ENTRY$=ENTRY1$+STP(STR(IC1INFO[1]:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_last_cost
3806 ENTRY$=ENTRY1$+STP(STR(IC1INFO[2]:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_avg_cost
3807 ENTRY$=ENTRY1$+STP(STR(IC1INFO[3]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_beg_balance
3808 ENTRY$=ENTRY1$+STP(STR(IC1INFO[4]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_receipts
3809 ENTRY$=ENTRY1$+STP(STR(IC1INFO[5]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_sales
3810 ENTRY$=ENTRY1$+STP(STR(IC1INFO[6]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_adj
3811 ENTRY$=ENTRY1$+STP(STR(IC1INFO[7]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_committed
3812 ENTRY$=ENTRY1$+STP(STR(IC1INFO[8]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_onpo
3813 ENTRY$=ENTRY1$+STP(STR(IC1INFO[9]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_last_count
3814 ENTRY$=ENTRY1$+STP(STR(IC1INFO[10]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_reorder_qty
3815 ENTRY$=ENTRY1$+STP(STR(IC1INFO[11]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_bo_qty
3816 ENTRY$=ENTRY1$+STP(STR(IC1INFO[30]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_on_hand
3817 ENTRY$=ENTRY1$+STP(STR(IC1INFO[31]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_avail_in_stock
3818 ENTRY$=ENTRY1$+STP(STR(IC1INFO[32]/SELL_UM:"#,###,##0-"),1)+ENTRY2$; GOTO 3395; REM "ic1_avail_for_sale
3819 ENTRY$=ENTRY1$+USAGE_KEYS$(1,4)+ENTRY2$; GOTO 3395; REM "usage_year
3820 IF FORM_OTHER[0]=0 THEN MOSSUPPLY$="0" ELSE MOSSUPPLY$=STR(IC1INFO[30]/FORM_OTHER[0]:"###,##0.00") END_IF ; ENTRY$=ENTRY1$+MOSSUPPLY$+ENTRY2$; GOTO 3395; REM "mos_supply (ic1_on_hand / fm4_avg_mos_usage)
3821 IF FM1[4]=0 THEN TEMPA=0 ELSE TEMPA=FM1[3]*1000/FM1[4] END_IF ; MULT=TEMPA*(IC1INFO[30]/1000); INVVALUEEXT$=STR(MULT:X3$(69,1)+"###,###.00"); ENTRY$=ENTRY1$+INVVALUEEXT$+ENTRY2$; GOTO 3395; REM "inv_value_ext (ic1_on_hand extended by sell price), 214670
3822 CALL "ZZDISP","AX",FM1$(132,8),"O/P",X3$,PREVORDER$,"",0,0,X4$; ENTRY$=ENTRY1$+PREVORDER$+ENTRY2$; GOTO 3395; REM "prev_order_no
3823 IF FORM_OTHER[0]=0 THEN TEMP=0 ELSE TEMP=IC1INFO[31]/FORM_OTHER[0] END_IF ; IF TEMP<=3 THEN TEMPFLAG$="*" ELSE TEMPFLAG$="" END_IF ; ENTRY$=ENTRY1$+TEMPFLAG$+ENTRY2$; GOTO 3395; REM "below_3msupply_flag
3824 IF FM1(24)=0 THEN DAYSFORM=0 ELSE DAYSFORM=((IC1INFO[33]/SELL_UM)/(FM1[24]/SELL_UM)*30) END_IF ; IF DAYSFORM<0 THEN DAYSFORM=0 END_IF ; ENTRY$=ENTRY1$+STP(STR(DAYSFORM:"###,##0-"),1)+ENTRY2$; GOTO 3395; REM "days_on_hand_form  - days supply on hand of (form_mos_avg_usage/ic1_avail_in_stock)*30
3825 ENTRY$=ENTRY1$+RO_TYPE$+ENTRY2$; GOTO 3395; REM "reorder_trigger (Date/Qty/Days) label of what triggered the backorder situation
3826 IF SELL_UM=0 THEN SELL_UM=1 END_IF ; IF FORM_OTHER[0]=0 THEN DOHI=0,ENTRY$=ENTRY1$+STP(STR(DOHI:"#0"),1)+ENTRY2$; GOTO 3395 ELSE DOHI=(IC1INFO[30]/SELL_UM)/(FORM_OTHER[0]/SELL_UM)*30,ENTRY$=ENTRY1$+STP(STR(DOHI:"###,##0"),1)+ENTRY2$; GOTO 3395; REM "days_on_hand_ic1usage
3827 IF EC$[2](61,4)=DIM(4) THEN FOFAMU=FM1[24] ELSE FOFAMU=FORM_OTHER[0] END_IF ; ENTRY$=ENTRY1$+STP(STR(FOFAMU/SELL_UM:UMASK$),1)+ENTRY2$; GOTO 3395 ! WO174238, form_or_fm4_avg_mos_usage
4000 REM "Category has changed, output a category header (if categorystart was supplied and we have html to do so), then update PREV_CATEGORY$
4002 CAT_TAGS$="001<category_code>002<category_desc>003<category_addl>"
4003 DIM ECG$(100); IF SEARCH_TYPE$="" THEN ECG$(1,10)=DISPLAY$[ENTRY_INDEX](11,10) ELSE ECG$(1,10)=DISPLAY$[ENTRY_INDEX](26,10) END_IF ; FIND (Z[4],KEY=ECG$(1,10),DOM=4004)IOL=0340
4004 IF SEARCH_TYPE$="" THEN PREV_CATEGORY$=DISPLAY$[ENTRY_INDEX](11,10) ELSE PREV_CATEGORY$=DISPLAY$[ENTRY_INDEX](26,10)
4005 IF CAT_TEMPLATE$="" THEN GOTO 4095 ELSE CAT$="",TMP_CAT$=CAT_TEMPLATE$; REM "Skip if no template supplied, else setup for starting
4006 CINDEX=POS("?tf?"=TMP_CAT$); IF CINDEX=0 THEN CAT$=CAT$+TMP_CAT$; GOTO 4093
4007 CEND_INDEX=POS("?"=TMP_CAT$(CINDEX+4)),CTAG$=TMP_CAT$(CINDEX+4,CEND_INDEX-1),CAT$=CAT$+TMP_CAT$(1,CINDEX-1),TMP_CAT$=TMP_CAT$(CINDEX+CEND_INDEX+4),CPOS=POS("<"+CTAG$+">"=CAT_TAGS$); IF CPOS=0 THEN CINDEX=0 ELSE CINDEX=NUM(CAT_TAGS$(CPOS-3,3))
4010 ON CINDEX GOTO 4089,4011,4012,4013,4089
4011 CAT$=CAT$+STP(ECG$(1,10),1); GOTO 4090; REM "category_code
4012 CAT$=CAT$+STP(ECG$(11,30),1); GOTO 4090; REM "category_desc
4013 CAT$=CAT$+STP(ECG$(41,60),1); GOTO 4090; REM "category_addl
4089 CAT$=CAT$+""; GOTO 4090; REM "tag not found, replace with '?'. 233219, remove "?"
4090 GOTO 4006
4093 TABLE$=TABLE$+CAT$
4095 RETURN 
4400 REM "Use Product Catalog file to build display array
4401 REM "** currently not supporting next/previous buttons
4402 FIRST_ITEM$="",LAST_ITEM$="",TOTAL_RECORDS=0,INDEX=1,ITEM_LIST$=""; DIM DISPLAY$[6000]
4404 REM "GOSUB 04450
4405 FOR CATEGORY_INDEX=0 TO LEN(CATEGORY$)/10-1
4406 CURRENT_CATEGORY$=CATEGORY$(CATEGORY_INDEX*10+1,10); IF CURRENT_CATEGORY$=EC$[2](483,10) AND EC$[2](339,1)="Y" AND EC_PARM$(1151,1)="Y" AND CATALOG$<>EC$[2](325,10) THEN DIM EC3UT4_OPTIONS$(50); EC3UT4_OPTIONS$(1,1)="N",EC3UT4_OPTIONS$(2,10)=CATALOG$,EC3UT4_OPTIONS$(12,4)=EC$[1](1167,4); CALL "EC3UT4",X3$,X4$,EC$[2](1,15),EE3_CATEGORIES$,EC3UT4_OPTIONS$ ! WO184145, if category is active items category but this is not the main catalog, and parm enabled for active items/multiple catalogs, then call EC3UT4 so EE3 will have the correct records for this catalog.
4407 IF CURRENT_CATEGORY$=EC$[2](483,10) THEN IF EC_PARM$(1151,1)<>"Y" THEN READ (Z[12],KEY=EC$[2](1,15),KNO=CATALOGSORT,DOM=4408) ELSE READ (Z[19],KEY=EC$[2](1,15)+CATALOG$,KNO=CATALOGSORT,DOM=4409) END_IF ELSE READ (Z[5],KEY=CATALOG$+CURRENT_CATEGORY$,KNO=CATALOGSORT,DOM=4410) ! WO184145, if active items for multiple catalogs enabled, then use EE3 rather than EDE
4408 EDEKEY$=KEY(Z[12],KNO=CATALOGSORT,END=4435); IF EDEKEY$(1,15)<>EC$[2](1,15) THEN GOTO 4435 ELSE READ (Z[12],KEY=EDEKEY$,KNO=CATALOGSORT)EDE$; ECRKEY$=EDE$(36,20); DIM ECH$(190); ECH$(1,10)=EC$[2](325,10),ECH$(11,10)=EC$[2](483,10),ECH$(21,40)=EDE$(16,40),ECH$(61,40)=EDE$(56,40); GOTO 4411; REM "153058
4409 EE3KEY$=KEY(Z[19],KNO=CATALOGSORT,END=4435); IF EE3KEY$(1,25)<>EC$[2](1,15)+CATALOG$ THEN GOTO 4435 ELSE READ (Z[19],KEY=EE3KEY$,KNO=CATALOGSORT)EE3$; ECRKEY$=EE3$(46,20); DIM ECH$(190); ECH$(1,10)=CATALOG$,ECH$(11,10)=EC$[2](483,10),ECH$(21,40)=EE3$(26,40),ECH$(61,40)=EE3$(66,40); GOTO 4411 ! WO184145
4410 ECHKEY$=KEY(Z[5],KNO=CATALOGSORT,END=4435); IF ECHKEY$(1,20)<>CATALOG$+CURRENT_CATEGORY$ THEN GOTO 4442 ELSE READ (Z[5],KEY=ECHKEY$,KNO=CATALOGSORT)ECH$; ECRKEY$=ECH$(41,20); REM "153058
4411 IF EC$[2](339,1)<>"Y" THEN GOTO 4413; REM "ck if only reporting activeitems
4412 FIND (Z[11],KEY=ECH$(41,20)+EC$[1](1167,4),DOM=4410); REM "skip if no FM4 record, SSP165282, was EC$[2](61,4), location from buyer, caused err later on if buyer had no location, need to use active shipto location
4413 DIM ECR$(1000); FIND (Z(6),KEY=ECRKEY$,DOM=*NEXT)IOL=0360
4420 IF SUPPRESS_DUPLICATES$="Y" THEN IF POS(ECH$(41,20)=ITEM_LIST$,20)<>0 THEN GOTO 4426; REM "if already in display array then do not add again
4423 GOSUB 8000; IF ITEM_OK$<>"Y" THEN GOTO 4426
4425 DISPLAY$[INDEX]=ECH$,TOTAL_RECORDS=TOTAL_RECORDS+1,INDEX=INDEX+1,ITEM_LIST$=ITEM_LIST$+ECH$(41,20)
4430 IF CURRENT_CATEGORY$=EC$[2](483,10) THEN IF EC_PARM$(1151,1)<>"Y" THEN GOTO 4408 ELSE GOTO 4409 END_IF ELSE GOTO 4410 ! WO184145
4442 NEXT CATEGORY_INDEX
4443 FIRST_ITEM$=DISPLAY$[1],LAST_ITEM$=DISPLAY$[TOTAL_RECORDS]
4445 RETURN 
4450 REM "Set VERY_FIRST_ITEM$ and VERY_LAST_ITEM$. These will be used to determine when to NOT show prev and next buttons
4455 VERY_FIRST_ITEM$="",VERY_LAST_ITEM$=""
4460 READ (Z[5],KEY=EC$[2](325,10),DOM=4461)
4465 VK$=KEY(Z[5],END=4466); IF VK$(1,10)=EC$[2](325,10) THEN VERY_FIRST_ITEM$=VK$
4470 READ (Z[5],KEY=EC$[2](325,10)+$FF$,DOM=4471)
4471 VK$=KEP(Z[5],END=4472); IF VK$(1,10)=EC$[2](325,10) THEN VERY_LAST_ITEM$=VK$
4495 RETURN 
5000 REM "Item Search
5002 HIKEY$=EC$[1](1,22)+SEARCH_TYPE$,FOUND=0
5006 ! FOUND=0; READ (Z[7],KEY=EC$[1](1,22),KNO=CATALOGSORT,DOM=5007) Remarked out this line on SSP191340, this line is not necessary
5008 CALL "ZZINIT",STR(Z[7]:"00")
5020 REM "process search type
5021 REM "I/C=form search    FM0=ship-to search    ORD=TF order number   P/O=customer p/o
5025 ON STYPE GOTO 5050,5200,5300
5050 REM "item search setup
5055 IF CATEGORY$="**********" THEN SEARCH_CATEGORY$=EDI_CATEGORY_LIST$ ELSE SEARCH_CATEGORY$=CATEGORY$
5100 REM "item searches
5101 FOR CATINDEX=0 TO LEN(SEARCH_CATEGORY$)/10-1; CURRCAT$=SEARCH_CATEGORY$(CATINDEX*10+1,10); IF CURRCAT$=EC$[2](483,10) AND EC$[2](339,1)="Y" AND EC_PARM$(1151,1)="Y" AND CATALOG$<>EC$[2](325,10) THEN DIM EC3UT4_OPTIONS$(50); EC3UT4_OPTIONS$(1,1)="N",EC3UT4_OPTIONS$(2,10)=CATALOG$,EC3UT4_OPTIONS$(12,4)=EC$[1](1167,4); CALL "EC3UT4",X3$,X4$,EC$[2](1,15),EE3_CATEGORIES$,EC3UT4_OPTIONS$; REM "get next category.  WO184145, if category is active items category but this is not the main catalog, and parm enabled for active items/multiple catalogs, then call EC3UT4 so EE3 will have the correct records for this catalog.
5102 IF CURRCAT$=EC$[2](483,10) THEN SEARCH_MYCATEGORY$="Y"; IF EC_PARM$(1151,1)<>"Y" THEN READ (Z[12],KEY=EC$[2](1,15),KNO=CATALOGSORT,DOM=5103) ELSE READ (Z[19],KEY=EC$[2](1,15)+CATALOG$,KNO=CATALOGSORT,DOM=5104) END_IF ELSE SEARCH_MYCATEGORY$="N"; READ (Z[5],KEY=CATALOG$+CURRCAT$,KNO=CATALOGSORT,DOM=5105) ! WO184145
5103 EDEKEY$=KEY(Z[12],KNO=CATALOGSORT,END=5180); IF EDEKEY$(1,15)<>EC$[2](1,15) THEN GOTO 5180 END_IF ; READ (Z[12],KEY=EDEKEY$,KNO=CATALOGSORT)EDEREC$; DIM ECH$(190); ECH$(1,10)=EC$[2](325,10),ECH$(11,10)=CURRCAT$,ECH$(21,40)=EDEREC$(16,40),ECH$(61,40)=EDEREC$(56,40); GOTO 5108
5104 EE3KEY$=KEY(Z[19],KNO=CATALOGSORT,END=5180); IF EE3KEY$(1,25)<>EC$[2](1,15)+CATALOG$ THEN GOTO 5180 END_IF ; READ (Z[19],KEY=EE3KEY$,KNO=CATALOGSORT)EE3REC$; DIM ECH$(190); ECH$(1,10)=CATALOG$,ECH$(11,10)=CURRCAT$,ECH$(21,40)=EE3REC$(26,40),ECH$(61,40)=EE3REC$(66,40); GOTO 5108 ! WO184145
5105 ECHKEY$=KEY(Z[5],KNO=CATALOGSORT,END=5180); IF ECHKEY$(1,10)<>CATALOG$ THEN GOTO 5180 END_IF ; IF ECHKEY$(11,10)<>CURRCAT$ THEN GOTO 5180 END_IF ; REM "if end-of-catalog or end-of-category --> get next category to process
5107 READ (Z[5],KEY=ECHKEY$,KNO=CATALOGSORT)IOL=0350
5108 DIM FM1$(500),FM1[40]; FIND (Z[2],KEY=ECH$(41,20),DOM=5160)IOL=0320; DIM ECR$(1000); FIND (Z[6],KEY=ECH$(41,20),DOM=5109)IOL=0360; GOSUB 8000; IF ITEM_OK$<>"Y" THEN GOTO 5160
5109 REPORT$="N",SINDEX=1
5110 IF EC$[2](339,1)<>"Y" THEN GOTO 5115 ELSE IF EC$[2](483,10)=DIM(10) THEN GOTO 5115
5111 FIND (Z[11],KEY=ECH$(41,20)+EC$[1](1167,4),DOM=5160); REM "if requiring activity at location - then skip if no FM4 record
5120 WHILE SINDEX<=ITEM_SEARCH_ELEMENTS AND REPORT$="N"; REM "set at 601
5122 ON POS(SI$[SINDEX,3]="SN") GOTO 5123,5123,5123
5123 IF LEN(STP(SI$[SINDEX,1],2))=0 THEN GOTO 5140; REM "no value requested for matching from the search request
5124 PATTERN$="*"+UCS(SI$[SINDEX,1])+"*",FM1VALUE$=STP(UCS(STP(FM1$(NUM(SI$[SINDEX,2](1,4)),NUM(SI$[SINDEX,2](5,4))),1)),0); REM "get fm1$ value - convert to uppercase and strip leading/trailing blanks
5126 IF LEN(FM1VALUE$)=0 THEN GOTO 5140
5128 IF FM1VALUE$ LIKE PATTERN$ THEN REPORT$="Y"
5140 SINDEX=SINDEX+1; WEND 
5145 IF REPORT$="N" THEN GOTO 5160
5150 REM "item qualifies against search
5152 WRITE (Z[7],KEY=HIKEY$+ECH$(11,10)+ECH$(41,20))HIKEY$+ECH$(11,10)+ECH$(41,20),ECH$,IOL=0320; FOUND=FOUND+1
5160 IF SEARCH_MYCATEGORY$="N" THEN GOTO 5105 ELSE IF EC_PARM$(1151,1)<>"Y" THEN GOTO 5103 ELSE GOTO 5104; REM "get next catalog record. WO184145
5180 NEXT CATINDEX
5190 GOTO 5990
5300 REM "tf order information search
5990 READ (Z[7],KEY="",KNO=CATALOGSORT,DOM=5991)
5995 RETURN 
7500 REM "ck if form over reorder point
7502 REORDER_TRIGGERED$="N"
7510 IF FM1$(109,6)<X3$(21,6) AND FM1$(109,6)<>DIM(6) THEN REORDER_TRIGGERED$="Y",RO_TYPE$="Date"; GOTO 7540; REM "ck reorder date
7512 IF FM1[23]>0 THEN IF IC1INFO[33]<FM1(23) THEN REORDER_TRIGGERED$="Y",RO_TYPE$="Qty"; GOTO 7540; REM "ck reorder qty. SSP244473, first make sure item's ROP qty is greater than zero, then if so go ahead with the check
7513 IF SELL_UM=0 OR FM1(24)=0 THEN GOTO 7540
7514 ROD=IC1INFO[33]/FM1(24)*30; IF ROD<FM1(22) THEN REORDER_TRIGGERED$="Y",RO_TYPE$="Days"; GOTO 7540; REM "ck reorder point in days. SSP189787, fixed calculation
7540 RETURN 
7550 REM "Send LINE$ to EC3BYB for generic fields processing
7560 CALL "EC3BYB",ERR=7561,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100
7595 RETURN 
7600 REM "format zip code
7620 CALL "ZZDISP","A",ZIPIN$,"ZIP",X3$,ZIPOUT$,"",0,0,X4$
7650 REM "format phone
7670 CALL "ZZDISP","P",PIN$,"",X3$,POUT$,"",0,0,X4$
7680 RETURN 
7700 REM "calcualte and extended price
7701 REM "first convert to each price and then calculate
7705 EACHQTY=FM1[3]*1000/SELL_UM
7800 REM "get active uom
7810 ON POS(ITEM_TYPE$="CI")-1 GOTO 7820,7840
7820 REM "C - items FM1
7830 IF STP(FM1$(238,4),3," ")="" OR FM1[25]=0 THEN UM$=FM1$(100,4),PACK=FM1[4]; GOTO 7860 ELSE UM$=FM1$(238,4),PACK=FM1[25]; GOTO 7860
7840 REM "I - items IC0
7850 UM$=IC0$(120,4),PACK=IC0[14]
7860 UM$=STP(UM$,1),EXT_UM$=STP(UM$,1)+"/"+STR(PACK:"##,##0")
7870 IF STP(UM$,1)=STP(THOUSANDS$,1) THEN IF EC_PARM$(948,1)="Y" THEN PACK=1 ! SSP185844, if suppress extending for thousands parm is Y, then set divisor to 1.
7890 RETURN 
7900 REM "get inventory / usage figures
7909 DIM USAGE_KEYS$(10); USAGE_KEYS$(1,4)=USAGE_YEAR$,USAGE_KEYS$(5,2)=USAGE_PERIOD$; IF USAGE_LOCATION$<>"****" THEN USAGE_KEYS$(7,4)=USAGE_LOCATION$; REM "set to value passed in
7910 DIM CHANNELS[4]; CHANNELS[1]=Z[9],CHANNELS[2]=Z[10],CHANNELS[3]=Z[11],CHANNELS[4]=Z[6]
7911 DIM OPTIONS$(20); OPTIONS$(1,2)="RB"; REM "R-reported warehouses   B-both usage/inventory figs
7912 OPTIONS$(5,1)=BALANCE_TYPE$
7913 OPTIONS$(16,1)="R" ! SSP164729, Need to know in EC3IC0 for line 710
7930 CALL "EC3IC0",X3$,X4$,EC_PARM$,EC${ALL},FM1$(1,20),USAGE_KEYS$,CHANNELS{ALL},IC1INFO{ALL},FM3{ALL},FM3ALL{ALL},FM4$,FM4{ALL},FM4ALL{ALL},FORM_OTHER{ALL},FORM_OTHERALL{ALL},OPTIONS$
7935 IF USAGE_LOCATION$="****" THEN FOR X=1 TO 12; FM3[X]=FM3ALL[X]; NEXT X ! SSP164729
7940 REM "set other vars to local variables
7941 FM4_AVG_MOS_USAGE=FORM_OTHER[0],FM4_AVG_MOS_USAGEALL=FORM_OTHERALL[0]
7942 LAST_COMPLETED_PER_USAGE=FORM_OTHER[1],LAST_COMPLETED_PER_USAGEALL=FORM_OTHERALL[1]
7943 YTD_USAGE=FORM_OTHER[2],YTD_USAGE_ALL=FORM_OTHERALL[2]
7990 RETURN 
8000 REM "ck item secure codes against buyer record
8001 IF EC$[2](86,1)="Y" THEN GOTO 8030; REM "bypass if secure code super user
8002 ITEM_OK$="Y"
8004 IF ECR$(233,10)=DIM(10) THEN GOTO 8019
8005 ITEM_OK$="N"
8010 FOR ITEM_OK=0 TO 4
8012 TEMP$=ECR$(ITEM_OK*2+233,2); IF TEMP$=DIM(2) THEN GOTO 8018
8014 IF POS(TEMP$=EC$[2](233,20)+EC$[2](898,40),2)<>0 THEN EXITTO 8030
8018 NEXT ITEM_OK
8019 IF EC_PARM$(554,1)<>"Y" THEN GOTO 8040
8020 REM "ck for unlimited secure codes 153058
8021 DIM EDQ$(1000); EDQ$(1,20)=ECR$(1,20),EDQ$(21,2)="01"; READ (Z(18),KEY=EDQ$(1,22),DOM=8040)EDQ$
8022 CODES$=STP(EDQ$(23,978),3," "); IF CODES$="" THEN GOTO 8040 ! SSP173398, was GOTO 8030
8023 ITEM_OK$="N" ! SSP173398
8024 FOR ITEM_OK=0 TO LEN(CODES$)/2-1; CURRCODE$=CODES$(ITEM_OK*2+1,2)
8025 IF POS(CURRCODE$=EC$[2](233,20)+EC$[2](898,40),2)<>0 THEN EXITTO 8030
8026 NEXT ITEM_OK
8027 GOTO 8040
8030 ITEM_OK$="Y"
8040 RETURN 
8050 REM "return list of categories based on EDI
8051 IF EC$[2](325,10)=CATALOG$ THEN EDI_CATEGORY_LIST$=EC$[6]; GOTO 8061
8052 EDI_CATEGORY_LIST$=""
8053 READ (Z[14],KEY=CATALOG$,DOM=8054)
8060 EDIKEY$=KEY(Z[14],END=8061); IF EDIKEY$(1,10)=CATALOG$ THEN EDI_CATEGORY_LIST$=EDI_CATEGORY_LIST$+EDIKEY$(11,10); READ (Z[14]); GOTO 8060
8070 IF LEN(EDI_CATEGORY_LIST$)=0 THEN DIM EDI_CATEGORY_LIST$(10)
8090 RETURN 
8500 SET_READONLY:REM "Set the PRM READONLY to on
8510 SAVE_XI=PRM('XI'); SET_PARAM 'XI' ! Ignore exclusive locks, save previous setting
8525 SET_READONLY_END:RETURN 
8530 CLEAR_READONLY:REM "Restore previous setting
8535 SET_PARAM 'XI'=SAVE_XI ! restore previous setting
8545 CLEAR_READONLY_END:RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 SETERR 9910; GOSUB CLEAR_READONLY
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56000 ! Program changes starting 10/31/05
56010 REM "184145-Ability to have "My Catalog" feature work for multiple
56015 REM "189787-Error (40-EC3RAA-7514) Low Stock Status Report
56020 REM "190689-Web EC reports only showing "my items" items
56025 REM "191340-Error on report pages sometimes (80-EC3RAA-5006)
56030 REM "191388-Secure codes not working on reports.  Changes made together with 191340
56035 REM "192407-Buyer needs 20 additional secure codes.                     
56037 REM "200988-EC3RAA, Category headers do not work if search is restricted
56039 REM "205460-Oracle - FIN(CHANNEL,"NUMREC") changed to use FN%FIN$()     
56040 REM "214670-Report tag inv_value_ext logic corrected
56041 REM "233219-Create excel versions of some of the EC html reports to use 
56042 REM "244473-Customer 00-00100795, item 10-0706-03, ROP is 0 but item    
