0010 REM "EC to POR Gateway <EC3POR>
0020 SETESC 9300; SETERR 9000
0035 REM "4.5 - 02/13/02 - 18.66 - wab - SSP# 146024
0040 REM "Copyright 2002 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3POR",X1$="E/C to POR Gateway"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0310 IOLIST SM7$,SM7[0],SM7[1],SM7[2],SM7[3],SM7[4],SM7[5],SM7[6],SM7[7],SM7[8],SM7[9],SM7[10],SM7[11],SM7[12]
0320 IOLIST PO1$
0330 IOLIST FS2$
0360 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32]
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O SM7...  02O PO1...  03O FS2...  04O API...  05O APQ...  06O IC"+"0...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0560 READ (Z[13],KEY=X3$(9,3)+"S/H",DOM=0561)SH_PARM$
0590 READ (Z[13],KEY=X3$(9,3)+"I/C")IC_PARM$
0591 P8=NUM(IC_PARM$(40,2)),P9=NUM(IC_PARM$(42,1))
0600 REM "Build search strings
1000 REM "Process DATA array
1005 DATA_TAGS$="001<po_number>002<po_line>003<ship_to_seq>004<ship_to_code"+">005<invoice_number>006<invoice_date>007<receipt_date>008<fiscal_year"+">009<acct_period>010<factory_job_no>011<factory_job_date>012<ending_n"+"o>013<complete>014<um>015<qty_per_um>016<receive_qty>017<backordered>"+"018<carton_pack>019<freight>020<unit_cost>021<ext_cost>022<customer>0"+"23<tracking_no>024<carrier_id>025<carrier_name>026<pickup_no>027<zip_"+"code>028<zone>029<ship_date>030<ship_time>031<est_arrival>032<templat"+"e>"
1008 DIM SM7$(345),SM7[12],UOM$(4); ERR_FOUND=0,MESSAGE$="",QTY_PER_UM=0,QTY_REC=0,UNIT_COST=0,EXT_COST=0; REM "Init variables
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1090
1021 SM7$(1,9)=VALUE$; GOTO 1090; REM "po_number
1022 SM7$(10,3)=VALUE$; GOTO 1090; REM "po_line
1023 SM7$(13,1)=VALUE$; GOTO 1090; REM "ship_to_seq
1024 GOTO 1090; REM "SM7$()=VALUE$;      GOTO 01090;      REM "SHIP_TO_CODE
1025 SM7$(266,10)=VALUE$; GOTO 1090; REM "invoice_number
1026 Q$=VALUE$; GOSUB 7500; SM7$(276,6)=Q0$; GOTO 1090; REM "invoice_date
1027 Q$=VALUE$; GOSUB 7500; SM7$(282,6)=Q0$; GOTO 1090; REM "receipt_date
1028 SM7$(288,4)=VALUE$; GOTO 1090; REM "fiscal_year
1029 SM7$(292,2)=VALUE$; GOTO 1090; REM "acct_period
1030 SM7$(294,12)=VALUE$; GOTO 1090; REM "factory_job_no
1031 Q$=VALUE$; GOSUB 7500; SM7$(306,6)=Q0$; GOTO 1090; REM "factory_job_date
1032 SM7$(147,9)=VALUE$; GOTO 1090; REM "ending_no
1033 SM7$(312,1)=VALUE$; GOTO 1090; REM "Complete
1034 SM7$(174,4)=VALUE$; GOTO 1090; REM "um
1035 QTY_PER_UM=NUM(VALUE$,ERR=1090); GOTO 1090; REM "qty_per_um
1036 QTY_REC=NUM(VALUE$,ERR=1090); GOTO 1090; REM "receive_qty
1037 A[11]=NUM(VALUE$,ERR=1090); GOTO 1090; REM "backordered
1038 A[12]=NUM(VALUE$,ERR=1090); GOTO 1090; REM "carton_pack
1039 A[4]=NUM(VALUE$,ERR=1090); GOTO 1090; REM "freight
1040 UNIT_COST=NUM(VALUE$,ERR=1090); GOTO 1090; REM "unit_cost
1041 EXT_COST=NUM(VALUE$,ERR=1090); GOTO 1090; REM "ext_cost
1042 GOTO 1090; REM "SM7$()=VALUE$;GOTO 01090;REM "CUSTOMER
1043 SM7$(49,20)=VALUE$; GOTO 1090; REM "tracking_no
1044 SM7$(31,6)=VALUE$; GOTO 1090; REM "carrier_id
1045 SM7$(37,12)=VALUE$; GOTO 1090; REM "carrier_name
1046 SM7$(69,16)=VALUE$; GOTO 1090; REM "pickup_no
1047 SM7$(85,9)=VALUE$; GOTO 1090; REM "zip_code
1048 SM7$(94,3)=VALUE$; GOTO 1090; REM "zone
1049 Q$=VAULE$; GOSUB 7500; SM7$(15,6)=Q0$; GOTO 1090; REM "ship_date
1050 SM7$(21,4)=VALUE$; GOTO 1090; REM "ship_time
1051 SM7$(25,6)=VALUE$; GOTO 1090; REM "est_arrival
1052 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1090 NEXT I
1100 REM "Now that SM7$ is loaded, perform checks and defaulting
1101 VERSION$="EV",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1120 GOSUB 4000
1500 REM "Use template$ to open file, read line by line and insert
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<po_number>002<status_code>003<message>"
1510 READ (100,END=1595)LINE$; GOSUB 7550
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2090
2001 LINE$=LINE1$+SM7$(1,9)+LINE2$; GOTO 2095; REM "po_number
2002 LINE$=LINE1$+STR(ERR_FOUND)+LINE2$; GOTO 2095; REM "status_code 0=OK
2003 LINE$=LINE1$+MESSAGE$+LINE2$; GOTO 2095; REM "message
2090 LINE$=LINE1$+"?"+LINE2$; GOTO 2095; REM "tag not found, replace with '?'
2095 RETURN 
3000 REM "Read
3045 RETURN 
4000 REM "Check and/or default fields in SM7$, we will leave if we find any"+" errors
4010 IF STP(SM7$(1,9),3," ")="" THEN ERR_FOUND=1,MESSAGE$="ERROR [  1] - No P/O Number Given ["+SM7$(1,9)+"]."; GOTO 4095
4015 IF STP(SM7$(10,3),3," ")="" THEN ERR_FOUND=2,MESSAGE$="ERROR [  2] - No P/O Line Number  ["+SM7$(10,3)+"]."; GOTO 4095
4020 IF LEN(STP(SM7$(1,9),1))=7 THEN SM7$(1,9)="00"+STP(SM7$(1,9),1)
4025 DIM PO1$(383); FIND (Z[2],KEY=SM7$(1,9),DOM=4026)IOL=0320; GOTO 4027
4026 ERR_FOUND=3,MESSAGE$="ERROR [  3] - Invalid P/O Number ["+SM7$(1,9)+"]."; GOTO 4095
4030 DIM FS2$(228); FIND (Z[3],KEY=SM7$(1,8)+SM7$(10,3),DOM=4031)IOL=0330; GOTO 4032
4031 ERR_FOUND=4,MESSAGE$="ERROR [  4] - Invalid P/O Line Number ["+SM7$(1,8)+SM7$(10,3)+"]."; GOTO 4095
4035 IF STP(SM7$(266,10),3," ")="" THEN ERR_FOUND=5,MESSAGE$="ERROR [  5] - No Vendor Invoice Number ["+SM7$(266,10)+"]"+"."; GOTO 4095
4040 FIND (Z[4],KEY=PO1$(7,10)+SM7$(1,9),DOM=4041); ERR_FOUND=6,MESSAGE$="ERROR [  6] - Vendor/Invoice Number in use ["+PO1$(7,10)+SM7$(1,9)+"]."; GOTO 4095
4045 FIND (Z[5],KEY=PO1$(7,10)+SM7$(1,9),DOM=4046); ERR_FOUND=7,MESSAGE$="ERROR [  7] - Vendor/Invoice Number in use ["+PO1$(7,10)+SM7$(1,9)+"]."; GOTO 4095
4050 IF QTY_REC=0 THEN ERR_FOUND=8,MESSAGE$="ERROR [  8] - Missing Quantity Received ["+STR(0:"0")+"]."; GOTO 4095
4060 IF STP(SM7$(276,6),1)="" THEN SM7$(276,6)=X3$(15,6); REM "invoice_date or default to acct date
4062 IF STP(SM7$(282,6),1)="" THEN SM7$(282,6)=X3$(21,6); REM "receipt_date or default to today
4064 IF STP(SM7$(15,6),1)="" THEN SM7$(15,6)=X3$(21,6); REM "ship_date or default to today
4070 SM7$(97,3)="NNN"; REM "Order updated? P/O received? Don't Bill?
4072 REM "Set if shipping parameters is Yes = Don't update
4073 GOTO 4079
4074 IF SH_PARM$(199,1)="Y" THEN SM7$(97,1)="Y"; REM "Order
4076 IF SH_PARM$(201,1)="Y" THEN SM7$(98,1)="Y"; REM "P/O Recv
4078 IF SH_PARM$(200,1)="Y" THEN SM7$(100,1)="Y"; REM "Invoice
4080 GOSUB 7000
4085 IF ERR_FOUND THEN GOTO 4095 ELSE GOSUB 7600
4090 IF ERR_FOUND=0 THEN MESSAGE$="POR record ["+SM7$(1,13)+"] created successfully."
4095 RETURN 
7000 REM "Format Variables
7020 DIM PARM_UM$(22),PARM_UM[2]; READ (Z[13],KEY="U/M"+UOM$,DOM=7021)PARM_UM$,PARM_UM[0],PARM_UM[1]; REM "Read for U/M info
7025 IF PARM_UM$(20,1)="Y" THEN QTY_PER_UM=PARM_UM[0]; REM "Qty per U/M
7030 IF STP(UOM$,1)="" THEN GOSUB 7100
7050 REM "Calculate Extension
7060 IF EXT_COST<>0 THEN GOTO 7080; REM "Calc total cost if not given
7070 CALL "FM2EXT",Z[13],0,UOM$,QTY_PER_UM,QTY_REC,UNIT_COST,EXT_COST,P9
7080 SM7$(174,4)=UOM$,SM7[0]=QTY_REC,SM7[3]=EXT_COST,SM7[8]=QTY_PER_UM
7090 RETURN 
7100 REM "Get Item Information
7105 DIM IC0$(188),IC0[32]
7110 IF FS2$(14,1)="Y" THEN CUST_CODE$=PO1$(179,10) ELSE DIM CUST_CODE$(10)
7120 READ (Z[6],KEY=CUST_CODE$+FS2$(19,10),DOM=7121)IOL=0360
7130 UOM$=IC0$(124,4),QTY_PER_UM=IC0[15]; REM "If U/M is blank, get Inv U/M and Inv Qty/Unit from IC0
7140 IF UNIT_COST=0 THEN UNIT_COST=IC0[18]; REM "If unit cost 0 default from avg cost; used to calc ext cost if 0
7150 RETURN 
7500 REM "Convert date Q$ into Q0$
7501 REM "Q$ in YYYYMMDD format or YYMMDD
7505 Q0$=""
7506 IF STP(Q$,3," ")="" THEN GOTO 7545
7510 IF LEN(Q$)=8 THEN GOTO 7520 ELSE IF LEN(Q$)=6 THEN D1$=STR(NUM(Q$(1,2)):"00") ELSE GOTO 7545
7515 IF D1$<"50" THEN Q$="20"+Q$ ELSE Q$="19"+Q$
7520 Q0$=CHR(NUM(Q$(1,3),ERR=7521)-125)+Q$(4,1)+Q$(5,2)+Q$(7,2)
7545 RETURN 
7550 REM "Send LINE$ to EC3BYB for generic fields processing
7560 CALL "EC3BYB",ERR=7561,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$
7595 RETURN 
7600 REM "Verify write to SM7$, check & see if it exists, or create next se"+"qset ERR_FOUND and message$
7602 SM7$(124,3)="001"
7604 F9=0; IF SM7$(9,1)=" " THEN SM7$(9,1)=FS2$(9,1),F9=1; REM "Get P/O code from S/O # & Line # if blank
7605 WRITE (Z[1],KEY=SM7$(1,13)+SM7$(124,3),DOM=7606)IOL=0310; GOTO 7640
7609 REM "Increment sequence number and try again until no dup
7612 SM7$(124,3)=STR(NUM(SM7$(124,3))+1:"000"); GOTO 7605
7640 IF F9=1 THEN SM7$(9,1)=" "; REM "F9=1 means the p/o code was blank and we fixed it for this lin"+             "eso set it back to blank for further processing
7645 RETURN 
7700 REM "Given PTMP$, remove all but numbers
7705 PTMP$=STP(PTMP$,2); IF PTMP$="" THEN GOTO 7745 ELSE MY_TMP$=PTMP$,LEN_MY_TMP=LEN(MY_TMP$),PTMP$=""
7710 FOR MY_INDEX=1 TO LEN_MY_TMP; IF POS(MY_TMP$(MY_INDEX,1)="0123456789")<>0 THEN PTMP$=PTMP$+MY_TMP$(MY_INDEX,1) END_IF ; NEXT MY_INDEX
7745 RETURN 
8900 REM "Define functions
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "Error processing
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9003 PRINT (OUTPUT)"Content-type: text/html",EOL$,EOL$,
9005 PRINT (OUTPUT,ERR=9010)"ERR=",STR(J)," LINE = ",STR(K),"<BR>",EOL$,
9006 PRINT (OUTPUT)"VALUE$=",VALUE$,EOL$,
9007 PRINT (OUTPUT)"HTA(VALUE$)=",HTA(VALUE$),EOL$,
9010 GOTO 9900
9900 REM "End
9905 REM FOR I=1 TO 20;IF Z[I]<>0CLOSE (Z[I])FI;NEXT I
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
