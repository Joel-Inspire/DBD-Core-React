0010 REM "EC Worksheet Shipping <EC3EEF>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 03/15/23 - 12.134838 - crg - SSP# 307420
0037 REM "307420-DBD-288:Dynamic companion message lines and special shipping                     
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0300 REM "IOLISTS
0310 IOL_EEF:IOLIST EEF$,EEF[0],EEF[1],EEF[2],EEF[3],EEF[4] ! SSP268892
0320 IOL_FM0:IOLIST SSFM0$
0330 IOL_ECE:IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
0340 IOL_PO3:IOLIST PO3$,PO3[0],PO3[1],PO3[2],PO3[3] ! SSP268437
0350 IOL_ECE_COMP:IOLIST ECE_COMP$,ECE_COMP[0],ECE_COMP[1],ECE_COMP[2],ECE_COMP[3],ECE_COMP[4],ECE_COMP[5],ECE_COMP[6],ECE_COMP[7],ECE_COMP[8] ! SSP268892
0360 IOL_EEF_COMP:IOLIST EEF_COMP$,EEF_COMP[0],EEF_COMP[1],EEF_COMP[2],EEF_COMP[3],EEF_COMP[4] ! SSP268892
0399 ! 
1000 REM "Initiliaze arrays and required variables
1005 INIT:
1010 DIM EEF_IN$(628),EEF_IN[4],EEF_SET[4],EEF_IN_DATA$[2000],EEF_IN_DATA[2000,4],EEF_SET_DATA[2000,4],EEF_DELETE_LINE[2000]
1095 RETURN 
1099 ! 
2000 REM "Set ship-to defaults
2010 SET_DEFAULTS:
2015 IF NUL(EEF_IN$(18,4)) AND (NOT(NUL(EEF_IN$(388,9))) OR NOT(NUL(EEF_IN$(397,20))) OR NOT(NUL(EEF_IN$(434,64)))) THEN GOSUB GET_LOC_FROM_OTHER ! SSP286528, if loc_code blank but cust_loc_code or recv_dept or long_recv_dept not blank then get from one of those DBD-237-SSP307410
2020 IF NUL(EEF_IN$(18,4)) THEN GOTO *RETURN
2030 GOSUB SET_READONLY; DIM SSFM0$(618); IF EEF_IN$(17,1)="C" THEN SSFM0_KEY$="C"+ECD$(26,10)+EEF_IN$(18,4) ELSE SSFM0_KEY$="D"+DIM(10)+EEF_IN$(18,4) END_IF ; READ (Z[8],KEY=SSFM0_KEY$,DOM=*NEXT)IOL=IOL_FM0
2040 GOSUB CLEAR_READONLY
2050 EEF$(116,87)=SSFM0$(51,87) ! Ship-to Address
2060 IF NUL(SSFM0$(248,35)) THEN EEF$(238,35)=SSFM0$(16,35) ELSE EEF$(238,35)=SSFM0$(248,35) ! Ship-to Customer Name
2070 EEF$(24,30)=EC$[2](561,30) ! Attention, initially set to default buyer attention field
2080 GOSUB GET_DEFAULT_SHIP_VIA; EEF$(69,1)=SS_SHIP_VIA$; EEF$(54,15)=SS_SHIP_VIA_DESC$ ! Default ship via code and description
2085 EEF$(324,4)=ECE$(107,4),EEF[1]=ECE[1]
2195 RETURN ! 
2199 ! 
2200 REM "Get ship via default
2205 GET_DEFAULT_SHIP_VIA:
2210 SS_SHIP_VIA$="",SS_SHIP_VIA_DESC$=""
2215 IF NOT(NUL(EEF_IN$(18,4))) AND EEF_IN$(17,1)="C" THEN READ (Z[8],KEY="C"+ECD$(26,10)+EEF_IN$(18,4),ERR=*NEXT)FM0TMP$; IF FM0TMP$(305,1)<>" " THEN SS_SHIP_VIA$=FM0TMP$(305,1); GOTO GET_SHIP_VIA_DESC
2220 READ (Z[9],KEY="D"+ECD$(26,10),ERR=*NEXT)FMPTMP$; IF FMPTMP$(45,1)<>" " THEN SS_SHIP_VIA$=FMPTMP$(45,1); GOTO GET_SHIP_VIA_DESC
2225 SHIP_VIA_NOT_FOUND:GOTO *RETURN
2230 GET_SHIP_VIA_DESC:
2235 DIM FMPS$(20); FIND (Z[9],KEY="S"+SS_SHIP_VIA$,DOM=*NEXT)FMPS$
2240 SS_SHIP_VIA_DESC$=MID(FMPS$,3,15)
2245 RETURN 
2249 ! 
2300 REM "Get how to ship code & description
2305 GET_HOW_TO_SHIP_DESC:
2310 HOW_TO_SHIP_DESC$=""
2315 DIM FMPH$(20); FIND (Z[9],KEY="H"+HOW_TO_SHIP$,DOM=*RETURN)FMPH$
2320 HOW_TO_SHIP_DESC$=FMPH$(3,15)
2345 RETURN 
2349 ! 
2350 GET_SHIP_VIA_FROM_MAP:! SSP286528, ss_ship_via_map, read EDM for corresponding ship via code, if found and valid then set it and the description
2355 DIM SS_EDM$(100); FIND (Z[32],KEY=EEF_IN$(417,15),DOM=*RETURN)SS_EDM$(1)
2360 DIM SS_FMPS$(20); FIND (Z[9],KEY="S"+SS_EDM$(16,1),DOM=*RETURN)SS_FMPS$(1)
2365 EEF_IN$(69,1)=SS_EDM$(16,1),EEF_IN$(54,15)=SS_FMPS$(3,15)
2390 RETURN 
2399 ! 
7000 ! SSP268437 - read PO3 record for corresponding EEF record
7005 READ_PO3:! opened in EC3WS1 on Z[55]
7010 DIM PO3$(428),PO3[3]
7015 IF EEF$(378,4)=DIM(4) THEN RETURN 
7020 IF ECD$(235,8)=DIM(8) OR ECD$(235,8)="No Order" OR ECD$(235,8)="To Aprvl" OR ECD$(235,8)="9999zzzz" THEN RETURN 
7025 READ (Z[55],KEY=ECD$(235,8)+DIM(1)+EEF$(378,4),DOM=*RETURN)IOL=IOL_PO3
7045 RETURN 
7049 ! 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7445 ! 
8250 REM "Convenience function to parse tag data and set arrays
8260 SET_TAG_DATA:
8265 IF NOT(HAS_EO) THEN RETURN ! SSP268892
8270 GOSUB PARSE_DATA; GOSUB SET_DATA
8295 RETURN 
8299 ! 
8300 REM "Parse incoming special shipping tag data
8301 PARSE_DATA:
8305 DIM EEFVAL$[2000]; EEF_VAL_COUNT=0
8310 IF EEF_VAL_COUNT=2000 THEN GOTO 8340 ELSE VP=POS(", "=VALUE$); IF VP=0 THEN GOTO 8335
8315 EEF_VAL_COUNT=EEF_VAL_COUNT+1; IF VP=1 THEN EEFVAL$[EEF_VAL_COUNT]="",VALUE$=VALUE$(3); GOTO 8310 ELSE EEFVAL$[EEF_VAL_COUNT]=VALUE$(1,VP-1); IF VP=LEN(VALUE$) THEN VALUE$=""; GOTO 8340 ELSE VALUE$=VALUE$(VP+2); GOTO 8310
8335 REM "finish up last one
8337 EEF_VAL_COUNT=EEF_VAL_COUNT+1; EEFVAL$[EEF_VAL_COUNT]=VALUE$
8340 IF EEF_VAL_COUNT>HIGHEST_EEF_VAL_COUNT THEN FOR TMP_INDEX=HIGHEST_EEF_VAL_COUNT+1 TO EEF_VAL_COUNT; EEF_IN_DATA$[TMP_INDEX]=DIM(LEN(EEF_IN$)); NEXT TMP_INDEX; HIGHEST_EEF_VAL_COUNT=EEF_VAL_COUNT
8345 RETURN 
8349 ! 
8350 REM "Transfer parsed tag data into input arrays to write to EEF record later
8355 SET_DATA:
8360 IF EEF_VAL_COUNT=0 THEN GOTO *RETURN
8365 FOR VAL_INDEX=1 TO EEF_VAL_COUNT
8370 IF NOT(NUL(EEFVAL$[VAL_INDEX])) THEN {
8372 IF EEF_FTYPE=0 THEN {! String field
8375 IF NOT(NUL(EEF_MASK$)) THEN EEF_IN_DATA$[VAL_INDEX](EEF_OFFSET,EEF_FLDLEN)=STR(NUM(EEFVAL$[VAL_INDEX],ERR=*CONTINUE):EEF_MASK$) ELSE IF NOT(NUL(EEF_STPCHAR$)) THEN EEF_IN_DATA$[VAL_INDEX](EEF_OFFSET,EEF_FLDLEN)=STP(STP(EEFVAL$[VAL_INDEX],3,*EEF_STPCHAR$,ERR=*PROCEED),3,",") ELSE EEF_IN_DATA$[VAL_INDEX](EEF_OFFSET,EEF_FLDLEN)=STP(EEFVAL$[VAL_INDEX],3,",") ! 249773
8377  } ELSE {! Number field
8380 EEF_IN_DATA[VAL_INDEX,EEF_OFFSET]=NUM(EEFVAL$[VAL_INDEX],ERR=*CONTINUE),EEF_SET_DATA[VAL_INDEX,EEF_OFFSET]=1
8382  }
8385  } ! NOT(NUL(EEFVAL$[VAL_INDEX]))
8390 NEXT VAL_INDEX
8393 IF NOT(NUL(EEF_STPCHAR$)) THEN EEF_STPCHAR$="" ! Clear stpchar string - 249773
8395 RETURN 
8399 ! 
8400 REM "Display special shipping section for worksheet. SSP268437 add tag logic, etc.
8402 DISPLAY_SPECIAL_SHIP:
8403 IF NOT(HAS_EO) THEN RETURN ! SSP268892
8404 SS_TAGS$="001<ss_line_number>002<ss_seq_number>003<ss_loc_type>004<ss_loc_code>005<ss_perm_ship_addr>006<ss_perm_ship_attn>007<ss_attention>008<ss_ship_via>009<ss_ship_via_code>010<ss_how_to_ship_code>011<ss_how_to_ship_desc>012<ss_ship_with>013<ss_man_ship_addr_1>014<ss_man_ship_addr_2>015<ss_man_ship_city>016<ss_man_ship_state>017<ss_man_ship_zip>018<ss_mark_for>019<ss_man_ship_cust>020<ss_inside_delivery>021<ss_acct_num>022<ss_bill_m>023<ss_shipper_id>024<ss_quantity>025<ss_email_addr>026<ss_sales_tax_code>027<ss_order_line_num>028<ss_shipto_seq_num>029<ss_po3_key>030<ss_ext_line_number>031<ss_ext_seq_number>032<ss_cust_loc_code>033<ss_recv_dept>034<ss_ship_via_map>035<ss_man_country>036<ss_long_recv_dept>"
8405 ! 
8406 SS_SECTION$=""
8407 SS_END=POS("?tf?sslineend"=LS2$),SS_TEMPLATE$=LS2$(1,SS_END-1); LS2$=LS2$(SS_END+15)
8410 READ (Z[48],KEY=ECE$(1,10)+ECE$(25,3),DOM=*NEXT)
8415 DIM EEF$(628),EEF[4]; EEF_KEY$=KEY(Z[48],END=8595); IF EEF_KEY$(1,13)<>ECE$(1,10)+ECE$(25,3) THEN GOTO 8595 ELSE READ (Z[48],KEY=EEF_KEY$)IOL=IOL_EEF; GOSUB READ_PO3
8423 SS$=SS_TEMPLATE$
8425 SS_INDEX=POS("?tf?"=SS$); IF SS_INDEX=0 THEN GOTO 8590
8430 SSEND_INDEX=POS("?"=SS$(SS_INDEX+4)),SS_TAG$=SS$(SS_INDEX+4,SSEND_INDEX-1),SS1$=SS$(1,SS_INDEX-1),SS2$=SS$(SS_INDEX+SSEND_INDEX+4),SS_POS=POS("<"+SS_TAG$+">"=SS_TAGS$); IF SS_POS=0 THEN SS$=SS1$+SS2$,SS_INDEX=0 ELSE SS_INDEX=NUM(SS_TAGS$(SS_POS-3,3))
8435 ON SS_INDEX GOTO 8579,8441,8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475,8476,8579
8441 SS$=SS1$+FN%HTML_ESC$(EEF$(11,3))+SS2$; GOTO 8580 ! ss_line_number 
8442 SS$=SS1$+FN%HTML_ESC$(EEF$(14,3))+SS2$; GOTO 8580 ! ss_seq_number 
8443 SS$=SS1$+FN%HTML_ESC$(EEF$(17,1))+SS2$; GOTO 8580 ! ss_loc_type 
8444 SS$=SS1$+FN%HTML_ESC$(EEF$(18,4))+SS2$; GOTO 8580 ! ss_loc_code 
8445 SS$=SS1$+FN%HTML_ESC$(EEF$(22,1))+SS2$; GOTO 8580 ! ss_perm_ship_addr
8446 SS$=SS1$+FN%HTML_ESC$(EEF$(23,1))+SS2$; GOTO 8580 ! ss_perm_ship_attn
8447 SS$=SS1$+FN%HTML_ESC$(EEF$(24,30))+SS2$; GOTO 8580 ! ss_attention
8448 SS$=SS1$+FN%HTML_ESC$(EEF$(54,15))+SS2$; GOTO 8580 ! ss_ship_via
8449 SS$=SS1$+FN%HTML_ESC$(EEF$(69,1))+SS2$; GOTO 8580 ! ss_ship_via_code
8450 SS$=SS1$+FN%HTML_ESC$(EEF$(70,1))+SS2$; GOTO 8580 ! ss_how_to_ship_code
8451 SS$=SS1$+FN%HTML_ESC$(EEF$(71,15))+SS2$; GOTO 8580 ! ss_how_to_ship_desc
8452 SS$=SS1$+FN%HTML_ESC$(EEF$(86,30))+SS2$; GOTO 8580 ! ss_ship_with
8453 SS$=SS1$+FN%HTML_ESC$(EEF$(116,30))+SS2$; GOTO 8580 ! ss_man_ship_addr_1
8454 SS$=SS1$+FN%HTML_ESC$(EEF$(146,30))+SS2$; GOTO 8580 ! ss_man_ship_addr_2
8455 SS$=SS1$+FN%HTML_ESC$(EEF$(176,16))+SS2$; GOTO 8580 ! ss_man_ship_city
8456 SS$=SS1$+FN%HTML_ESC$(EEF$(192,2))+SS2$; GOTO 8580 ! ss_man_ship_state
8457 SS$=SS1$+FN%HTML_ESC$(STP(FN%ZZDISP$(EEF$(194,9),"ZIP"),1))+SS2$; GOTO 8580 ! ss_man_ship_zip
8458 SS$=SS1$+FN%HTML_ESC$(EEF$(203,35))+SS2$; GOTO 8580 ! ss_mark_for
8459 SS$=SS1$+FN%HTML_ESC$(EEF$(238,35))+SS2$; GOTO 8580 ! ss_man_ship_cust
8460 SS$=SS1$+FN%HTML_ESC$(EEF$(273,15))+SS2$; GOTO 8580 ! ss_inside_delivery
8461 SS$=SS1$+FN%HTML_ESC$(EEF$(288,15))+SS2$; GOTO 8580 ! ss_acct_num
8462 SS$=SS1$+FN%HTML_ESC$(EEF$(303,1))+SS2$; GOTO 8580 ! ss_bill_m
8463 SS$=SS1$+FN%HTML_ESC$(EEF$(304,20))+SS2$; GOTO 8580 ! ss_shipper_id
8464 SS$=SS1$+FN%HTML_ESC$(STR(EEF[0]/QTY_DIVISOR:"#,###,##0"))+SS2$; GOTO 8580 ! ss_quantity
8465 SS$=SS1$+FN%HTML_ESC$(EEF$(328,40))+SS2$; GOTO 8580 ! ss_email_addr
8466 SS$=SS1$+FN%HTML_ESC$(FN%ZZDISP$(EEF$(368,10),"AR5"))+SS2$; GOTO 8580 ! ss_sales_tax_code
8467 SS$=SS1$+FN%HTML_ESC$(EEF$(378,3))+SS2$; GOTO 8580 ! ss_order_line_num
8468 SS$=SS1$+FN%HTML_ESC$(EEF$(381,1))+SS2$; GOTO 8580 ! ss_shipto_seq_num
8469 SS$=SS1$+FN%HTML_ESC$(ECD$(235,8)+EEF$(378,4))+SS2$; GOTO 8580 ! ss_po3_key
8470 SS$=SS1$+FN%HTML_ESC$(STP(EEF$(382,3),1))+SS2$; GOTO 8580 ! ss_ext_line_number, SSP268892, SSP270946 add STP
8471 SS$=SS1$+FN%HTML_ESC$(STP(EEF$(385,3),1))+SS2$; GOTO 8580 ! ss_ext_seq_number, SSP270946
8472 SS$=SS1$+FN%HTML_ESC$(STP(EEF$(388,9),1))+SS2$; GOTO 8580 ! ss_cust_loc_code, SSP286528
8473 SS$=SS1$+FN%HTML_ESC$(STP(EEF$(397,20),1))+SS2$; GOTO 8580 ! ss_recv_dept, SSP286528
8474 SS$=SS1$+FN%HTML_ESC$(STP(EEF$(417,15),1))+SS2$; GOTO 8580 ! ss_ship_via_map, SSP286528
8475 SS$=SS1$+FN%HTML_ESC$(STP(EEF$(432,2),1))+SS2$; GOTO 8580 ! ss_man_country, SSP307210 
8476 SS$=SS1$+FN%HTML_ESC$(STP(EEF$(434,64),1))+SS2$; GOTO 8580 ! ss_long_recv_dept, SSP286528
8579 SS$=SS1$+SS2$; GOTO 8580
8580 GOTO 8425
8590 SS_SECTION$=SS_SECTION$+SS$; GOTO 8415
8595 RETURN 
8599 ! 
8600 REM "Process special shipping input and create EEF records
8605 PROCESS_SPECIAL_SHIP:
8606 IF NOT(HAS_EO) THEN RETURN ! SSP268892
8610 IF HIGHEST_EEF_VAL_COUNT>0 THEN IF NUL(EEF_IN_DATA$[1](11,3)) THEN IF NOT(NUL(EEF_IN_DATA$[1](382,3))) THEN GOSUB USE_EXT_FOR_LINE_NUM ELSE GOSUB SHUFFLE_SS_LINES END_IF END_IF ELSE RETURN ! SSP268892, external line set, use it to get to matching ECE line 
8620 FOR EEF_INDEX=1 TO HIGHEST_EEF_VAL_COUNT
8621 ! 
8650 EEF_IN$=EEF_IN_DATA$[EEF_INDEX]; FOR EEF_INDEX2=0 TO 3; EEF_IN[EEF_INDEX2]=EEF_IN_DATA[EEF_INDEX,EEF_INDEX2],EEF_SET[EEF_INDEX2]=EEF_SET_DATA[EEF_INDEX,EEF_INDEX2]; NEXT EEF_INDEX2
8659 ! 
8660 DIM EEF$(628),EEF[4]; EEF$(1,10)=ECD$(1,10),EEF$(11,3)=EEF_IN$(11,3),EEF$(14,3)=EEF_IN$(14,3)
8670 DIM ECE$(499),ECE[8]; FIND (Z[43],KNO=0,KEY=EEF$(1,13),DOM=*CONTINUE)IOL=IOL_ECE ! SSP268892, add KNO=0
8680 ! 
8690 EEF_EXISTS:
8700 EXISTING_EEF_LINE$="N"; IF NOT(NUL(EEF$(14,3))) THEN EXTRACT (Z[48],KEY=EEF$(1,16),DOM=EEF_WRITE)IOL=IOL_EEF; EXISTING_EEF_LINE$="Y"; GOTO EEF_UPDATE
8710 ! 
8720 EEF_NEWKEY:
8730 READ (Z[48],KEY=EEF$(1,13)+$FFFFFF$,DOM=*NEXT)
8740 KEY_4$="",KEY_4$=KEP(Z[48],END=*NEXT)
8750 IF KEY_4$="" OR KEY_4$(1,13)<>EEF$(1,13) THEN EEF$(14,3)="001" ELSE EEF$(14,3)=STR(NUM(KEY_4$(14,3))+1:"000")
8760 ! 
8770 EEF_WRITE:
8780 WRITE (Z[48],KEY=EEF$(1,16),DOM=EEF_NEWKEY)IOL=IOL_EEF; EXTRACT (Z[48],KEY=EEF$(1,16),DOM=EEF_NEWKEY)IOL=IOL_EEF
8781 ! 
8785 EEF_UPDATE:
8787 IF EXISTING_EEF_LINE$<>"Y" THEN GOSUB SET_DEFAULTS
8789 IF NOT(NUL(EEF_IN$(417,15))) THEN GOSUB GET_SHIP_VIA_FROM_MAP ! SSP286528
8790 IF NOT(NUL(EEF_IN$(69,1))) AND NUL(EEF_IN$(54,15)) THEN SS_SHIP_VIA$=EEF_IN$(69,1); GOSUB GET_SHIP_VIA_DESC; EEF_IN$(54,15)=SS_SHIP_VIA_DESC$
8792 IF NOT(NUL(EEF_IN$(70,1))) AND NUL(EEF_IN$(71,15)) THEN HOW_TO_SHIP$=EEF_IN$(70,1); GOSUB GET_HOW_TO_SHIP_DESC; EEF_IN$(71,15)=HOW_TO_SHIP_DESC$
8815 EEFSTR$="017001|018004|022001|023001|024030|054015|069001|070001|071015|086030|116030|146030|176016|192002|194009|203035|238035|273015|288015|303001|304020|324004|328040|368010|382003|385003|388009|397020|417015|432002|434064|" ! WO232721, add missing and new stax code fields. SSP268892, add SS_EXT_LINE_NUM, SSP270946 SS_EXT_SEQ_NUM, SSP286528, SS_CUST_LOC_CODE, SS_RECV_DEPT, SS_SHIP_VIA_MAP, SSP307210, SS_MAN_COUNTRY, DBD-273-SSP307410, ss_long_recv_dept     
8820 FOR II=1 TO LEN(EEFSTR$)-6 STEP 7
8830 XX=NUM(EEFSTR$(II,3)),YY=NUM(EEFSTR$(II+3,3)); IF NOT(NUL(EEF_IN$(XX,YY))) THEN EEF$(XX,YY)=EEF_IN$(XX,YY)
8840 NEXT II
8850 ! 
8860 FOR II=0 TO 3
8870 IF EEF_SET[II] THEN EEF[II]=EEF_IN[II]
8880 NEXT II
8881 ! 
8890 WRITE (Z[48],KEY=EEF$(1,16))IOL=IOL_EEF
8895 ! 
8990 NEXT EEF_INDEX
8995 RETURN 
8999 ! 
9999 END 
10000 REM "If special ship data does not have line numbers (possibly from an XML order), try assigning as best we can from ECE line numbers (master item lines only).
10001 REM "Assume there is one ship line per master ECE line. 
10005 SHUFFLE_SS_LINES:
10010 ! MESS$="SHUFFLING SPECIAL SHIP LINES"; GOSUB LOG_IT
10015 GOSUB ASSIGN_GENERAL_SHIPPING
10025 READ (Z[43],KNO=0,KEY=ECD$(1,10),DOM=*NEXT) ! Reset ECE channel. SSP268892, add KNO=0 
10030 FOR EEF_INDEX=1 TO HIGHEST_EEF_VAL_COUNT
10035 IF NOT(NUL(EEF_IN_DATA$[EEF_INDEX](11,3))) THEN CONTINUE
10040 SSS_NEXT_ECE:
10045 KEYECE$=""; KEYECE$=KEY(Z[43],KNO=0,END=*NEXT); IF MID(KEYECE$,1,10)<>ECD$(1,10) THEN GOTO *BREAK ELSE GOTO SSS_ECE_FOUND ! SSP268892, add KNO=0
10050 EXITTO SSS_DONE
10055 SSS_ECE_FOUND:DIM ECE$(499),ECE[8]; READ (Z[43],KNO=0,KEY=KEYECE$)IOL=IOL_ECE; IF NOT(NUL(ECE$(259,3))) OR POS(ECE$(28,1)="CI")=0 THEN GOTO SSS_NEXT_ECE ! SSP268892, add KNO=0
10060 ! MESS$="ASSIGNING ECE LINE# "+ECE$(25,3)+" TO SPECIAL SHIP LINE INDEX# "+STR(EEF_INDEX); GOSUB LOG_IT
10065 EEF_IN_DATA$[EEF_INDEX](11,3)=ECE$(25,3)
10085 NEXT EEF_INDEX
10090 SSS_DONE:
10095 RETURN 
10099 ! 
10100 LOG_IT:
10105 MESS$="SESSION ID|"+EC$[1](1,7)+"|WORKSHEET|"+EC$[1](97,10)+"|"+MESS$+"|"; MX=FN%_LOG_MESSAGE_WITH_FLUSH("MESG",MESS$)
10145 RETURN 
10149 ! 
10150 REM "Assign general shipping for XML type orders intelligently from among one of the available special shipping customer locations; this sub must/will not kick in for interactive orders!  
10155 ASSIGN_GENERAL_SHIPPING:
10160 SMART_GENSHIP_CODE$="",SGC_LIST$="",SGC_REPEAT_LIST$=""
10170 FOR EEF_INDEX=1 TO HIGHEST_EEF_VAL_COUNT
10190 MESS$="SPECIAL SHIP LINE INDEX# "+STR(EEF_INDEX)+"|LOC: "+EEF_IN_DATA$[EEF_INDEX](17,1)+" "+EEF_IN_DATA$[EEF_INDEX](18,4); GOSUB LOG_IT
10200 REM "Consider "C" type locations only
10210 IF EEF_IN_DATA$[EEF_INDEX](17,1)<>"C" THEN CONTINUE
10220 REM "Add to list if first time seeing this location
10230 IF POS((EEF_IN_DATA$[EEF_INDEX](17,5))=SGC_LIST$)=0 THEN SGC_LIST$+=EEF_IN_DATA$[EEF_INDEX](17,5)
10240 REM "Add to occurances list to track its repetitions 
10250 SGC_REPEAT_LIST$+=EEF_IN_DATA$[EEF_INDEX](17,5)
10260 NEXT EEF_INDEX
10270 REM "Now we figure out which location code is best for general shipping
10280 SGC_TIMES=0
10290 WHILE SGC_LIST$<>""
10300 IF POS(MID(SGC_LIST$,1,5)=SGC_REPEAT_LIST$,5,0)>SGC_TIMES THEN {
10310 SGC_TIMES=POS(MID(SGC_LIST$,1,5)=SGC_REPEAT_LIST$,5,0)
10320 SMART_GENSHIP_CODE$=MID(SGC_LIST$,1,5)
10330 MESS$="LOC CODE|"+SMART_GENSHIP_CODE$+" SEEN "+STR(SGC_TIMES)+" TIMES|SELECTED AS GENERAL SHIPPING LOCATION"; GOSUB LOG_IT
10340  }
10345 SGC_LIST$=MID(SGC_LIST$,6)
10350 WEND 
10355 REM "Update selected location code to worksheet header
10360 IF NOT(NUL(SMART_GENSHIP_CODE$)) THEN {
10370 ECD_IN$(36,4)=MID(SMART_GENSHIP_CODE$,2),ECD$(36,4)=ECD_IN$(36,4),LOCATION_CHANGED=1
10380 PERFORM "EC3WS1;UPDATE_SHIPTO_LOCATION"
10390  }
10445 RETURN 
10449 ! 
10500 USE_EXT_FOR_LINE_NUM:! SSP268892, use SS_EXT_LINE_NUM with alt key 1 of ECE to find matching ECE line, use ECE LINE_NUMBER as EEF LINE_NUMBER
10510 FOR EEF_INDEX=1 TO HIGHEST_EEF_VAL_COUNT
10515 IF NOT(NUL(EEF_IN_DATA$[EEF_INDEX](11,3))) THEN CONTINUE
10520 IF NUL(EEF_IN_DATA$[EEF_INDEX](382,3)) THEN CONTINUE
10525 ALTKEYECE$=""; READ (Z[43],KNO=1,KEY=ECD$(1,10)+EEF_IN_DATA$[EEF_INDEX](382,3),DOM=*NEXT)
10530 ALTKEYECE$=KEY(Z[43],KNO=1,END=*NEXT); IF MID(ALTKEYECE$,1,13)<>ECD$(1,10)+EEF_IN_DATA$[EEF_INDEX](382,3) THEN GOTO *NEXT ELSE EEF_IN_DATA$[EEF_INDEX](11,3)=MID(ALTKEYECE$,14,3) ! set EEF line number to ECE line number
10540 NEXT EEF_INDEX
10595 RETURN 
10599 ! 
10600 CHECK_FOR_COMPANIONS:! SSP268892, see if worksheet has EEF records and if so then see if any ECE records are for companion items (not M or S types), if so then see any master lines have EEF records and these are not for D types, if so then use master's EEFs to create EEFs for companions.
10605 IF NOT(HAS_EO) THEN RETURN ! SSP268892
10606 ! 
10610 READ (Z[48],KEY=ECD$(1,10),DOM=*NEXT)
10615 EEFKEY$=KEY(Z[48],END=*RETURN); IF EEFKEY$(1,10)<>ECD$(1,10) THEN RETURN ! if no EEF records for this worksheet we are done
10616 ! 
10620 NUM_COMP=0,ECEKEY$=""; READ (Z[43],KNO=0,KEY=ECD$(1,10),DOM=*NEXT)
10625 NEXT_ECE_CHECK: ECEKEY$=KEY(Z[43],KNO=0,END=NEXT_COMP_CHECK); IF ECEKEY$(1,10)<>ECD$(1,10) THEN GOTO NEXT_COMP_CHECK
10630 DIM ECE_CHECK$(499); READ (Z[43],KNO=0,KEY=ECEKEY$)ECE_CHECK$(1); IF ECE_CHECK$(259,3)<>DIM(3) AND POS(ECE_CHECK$(28,1)="MS")=0 THEN NUM_COMP+=1
10635 GOTO NEXT_ECE_CHECK
10640 NEXT_COMP_CHECK:
10645 IF NOT(NUM_COMP) THEN GOTO *RETURN
10649 ! 
10650 DIM ECE$(499),ECE[8]; READ (Z[43],KEY=ECD$(1,10),KNO=0,DOM=*NEXT)
10655 NEXT_ECE: ECEKEY$=KEY(Z[43],KNO=0,END=DONE_ECE); IF ECEKEY$(1,10)<>ECD$(1,10) THEN GOTO DONE_ECE ELSE READ (Z[43],KNO=0,KEY=ECEKEY$)IOL=IOL_ECE
10660 IF ECE$(297,1)<>"Y" THEN GOTO NEXT_ECE ! not a master line with companions
10665 IF ECE[0]<=0 THEN GOTO NEXT_ECE ! check quantity of master line
10670 EEF_KEY$=""; READ (Z[48],KEY=ECEKEY$,DOM=*NEXT)
10675 EEF_KEY$=KEY(Z[48],END=NEXT_ECE); IF EEF_KEY$(1,13)<>ECEKEY$ THEN GOTO NEXT_ECE
10680 ! have a master line and it has EEF records
10685 GOSUB CHECK_FOR_D_TYPES; IF D_TYPES THEN GOTO NEXT_ECE ELSE IF NOT(EEF_COUNT) THEN GOTO NEXT_ECE ! if this master's EEF recs have any D types then bypass copy
10690 MASTER_LINE$=ECE$(25,3)
10695 ! ready to gather data and copy
10700 NEXT_ECE_COMP:DIM ECE_COMP$(499),ECE_COMP[8]; ECEKEY$=KEY(Z[43],KNO=0,END=DONE_ECE); IF ECEKEY$(1,10)<>ECD$(1,10) THEN GOTO DONE_ECE ELSE READ (Z[43],KNO=0,KEY=ECEKEY$)IOL=IOL_ECE_COMP
10705 IF ECE_COMP$(259,3)<>MASTER_LINE$ THEN GOTO NEXT_ECE
10710 IF POS(ECE_COMP$(28,1)="MS")>0 OR ECE_COMP[0]<=0 THEN GOTO NEXT_ECE_COMP
10715 DIM EEF_COMP$(628),EEF_COMP[4]
10720 FOR X=1 TO EEF_COUNT
10725 EEF_COMP$=EEF_REC$[X]
10730 EEF_COMP$(11,3)=ECE_COMP$(25,3) ! line number
10735 EEF_COMP$(324,4)=ECE_COMP$(107,4) ! U/M
10740 EEF_COMP$(382,3)=DIM(3) ! external line number
10745 EEF_COMP[1]=ECE_COMP[1] ! quantity per U/M
10750 IF ECE[0]=ECE_COMP[0] THEN EEF_COMP[0]=EEF_QTY[X] ELSE IF NUM(EEF_PERCENT$[X])=100 THEN EEF_COMP[0]=ECE_COMP[0] ELSE EEF_COMP[0]=INT(ECE_COMP[0]*NUM(EEF_PERCENT$[X])/100) ! If quantity for master line is same as companion line then use the same qty in EEF else if percent calculated is 100 (only one EEF) then use quantity in ECE for EEF, else calculate EEF qty based on percent.
10755 EEF_COMP_KEY$=EEF_COMP$(1,16)
10760 WRITE (Z[48],KEY=EEF_COMP_KEY$)IOL=IOL_EEF_COMP
10765 NEXT X
10770 GOTO NEXT_ECE_COMP
10775 ! 
10790 DONE_ECE:
10795 RETURN 
10799 ! 
10800 CHECK_FOR_D_TYPES:! read all this ECE lines EEF recs and if any are D types then we will not proceed with the special shipping copy, also gather EEF data for this ECE line for possible use later
10805 D_TYPES=0,EEF2_KEY$=EEF_KEY$,EEF_COUNT=0; DIM EEF_REC$[100],EEF_PERCENT$[100],EEF_QTY[100]
10810 READ_EEF2:DIM EEF$(628),EEF[4]; READ (Z[48],KEY=EEF2_KEY$,DOM=*NEXT)IOL=IOL_EEF
10815 IF EEF$(17,1)="D" THEN D_TYPES=1; GOTO *RETURN ELSE EEF_COUNT+=1,EEF_REC$[EEF_COUNT]=EEF$,EEF_QTY[EEF_COUNT]=EEF[0]; PRECISION 5; EEF_PERCENT$[EEF_COUNT]=STR(EEF[0]/ECE[0]*100:"000.00000"); PRECISION 2
10820 EEF2_KEY$=KEY(Z[48],END=*RETURN); IF EEF2_KEY$(1,13)<>ECEKEY$ THEN GOTO *RETURN ELSE GOTO READ_EEF2
10845 RETURN 
10849 ! 
10900 CHECK_RELEASE_SHIPPING:! SSP272505, if worksheet has release lines which are special shipping to multiple locations then "correct" the situation by spinning off additional ECE lines until there is a one-to-one ECE-EEF situation.
10905 IF NOT(HAS_EO) THEN RETURN ! If EO module not available we are done
10910 READ (Z[48],KEY=ECD$(1,10),DOM=*NEXT)
10915 EEFKEY$=KEY(Z[48],END=*RETURN); IF EEFKEY$(1,10)<>ECD$(1,10) THEN RETURN ! if no EEF records for this worksheet we are done
10919 ! 
10920 ECEKEY$=""; READ (Z[43],KNO=0,KEY=ECD$(1,10),DOM=*NEXT)
10930 NEXT_ECEREL_CHECK: ECEKEY$=KEY(Z[43],KNO=0,END=NEXT_ECEREL_CHECK_DONE); IF ECEKEY$(1,10)<>ECD$(1,10) THEN GOTO NEXT_ECEREL_CHECK_DONE
10940 DIM ECE$(499),ECE[8]; READ (Z[43],KNO=0,KEY=ECEKEY$)IOL=IOL_ECE
10950 IF POS(ECE$(28,1)="MS")>0 OR NOT(NUL(ECE$(129,1))) THEN GOTO NEXT_ECEREL_CHECK ! If Message or Special charge line, or if PO line, skip it
10960 EEF_KEY$=""; READ (Z[48],KEY=ECEKEY$,DOM=*NEXT)
10970 EEF_KEY$=KEY(Z[48],END=NEXT_ECEREL_CHECK); IF EEF_KEY$(1,13)<>ECEKEY$ THEN GOTO NEXT_ECEREL_CHECK ELSE READ (Z[48],KEY=EEF_KEY$)* ! Found first special shipping line for our release line
10980 NEXT_EEFREL_CHECK: EEF_KEY$=KEY(Z[48],END=NEXT_ECEREL_CHECK); IF EEF_KEY$(1,13)<>ECEKEY$ THEN GOTO NEXT_ECEREL_CHECK ! No second special shipping line for this release line
10990 DIM EEF$(628),EEF[4]; READ (Z[48],KEY=EEF_KEY$)IOL=IOL_EEF ! If here, we have more than one special shipping line for our release line, adjust it
11010 IOL_NEW_ECE:IOLIST NEW_ECE$,NEW_ECE{ALL}
11020 DIM NEW_ECE$(499),NEW_ECE[8]; NEW_ECE$=ECE$; NEW_ECE{ALL}=ECE{ALL} ! Save off existing ECE line for making a new one later
11030 READ (Z[3],KEY=ECD$(1,10)+$FFFFFF$,DOM=*NEXT) ! Get last ECE line number in use
11040 KEY_3$="",KEY_3$=KEP(Z[3],END=*NEXT)
11050 IF KEY_3$="" OR KEY_3$(1,10)<>ECD$(1,10) THEN NEXT_ECE_LINE$="001" ELSE NEXT_ECE_LINE$=STR(NUM(KEY_3$(11,3))+1:"000") ! Found next ECE line number to use
11060 NEW_ECE$(25,3)=NEXT_ECE_LINE$; NEW_ECE[0]=EEF[0]; ECE[0]-=EEF[0]; NEW_EEF_KEY$=EEF$(1,10)+NEXT_ECE_LINE$+"001"; EEF$(1,16)=NEW_EEF_KEY$ ! Adjust variables and keys
11070 ! Now perform updates of all ECE and EEF records
11080 WRITE (Z[3],KEY=ECD$(1,10)+NEXT_ECE_LINE$)IOL=IOL_NEW_ECE ! Insert new ECE line for this special ship line
11090 WRITE (Z[3],KEY=ECEKEY$)IOL=IOL_ECE ! Update old ECE line after decreasing original quantity by above shipping amount
11100 REMOVE (Z[56],KEY=EEF_KEY$) ! Delete old EEF shipping entry referencing the old ECE line
11110 WRITE (Z[56],KEY=NEW_EEF_KEY$)IOL=IOL_EEF ! Insert new EEF shipping entry referencing the new ECE line, now EEF has been relinked to new ECE record
11115 MESS$="RELEASE|ADJUST ECE|"+MID(ECEKEY$,11,3)+"|TO|"+NEXT_ECE_LINE$+"|EEF|"+EEF_KEY$(11,3)+" "+EEF_KEY$(14,3)+"|TO|"+NEW_EEF_KEY$(11,3)+" "+NEW_EEF_KEY$(14,3); GOSUB LOG_IT
11117 GOSUB CHECK_FOR_COMPANIONS_SPLSHIP
11120 GOTO NEXT_EEFREL_CHECK ! See if there are any more split shipping entries for this ECE release line
11130 NEXT_ECEREL_CHECK_DONE:
11140 RETURN 
11149 ! 
11150 CHECK_FOR_COMPANIONS_SPLSHIP:! 307420
11151 OPEN (HFN)"ECE"+%C$; SSCOMPCHN=LFO
11152 IF MID(ECE$,297,1)<>"Y" THEN GOTO 11190 ! Line does not have any companions, nothing to do
11153 READ (Z[3],KEY=ECD$(1,10),DOM=*NEXT) ! Find all companions for the current line
11154 SSCOMPKEY$=KEY(Z[3],END=11190); IF MID(SSCOMPKEY$,1,10)<>ECD$(1,10) THEN GOTO 11190
11155 READ RECORD (Z[3],KEY=SSCOMPKEY$)SSCOMP_ECE$; IF MID(SSCOMP_ECE$,259,3)=ECE$(25,3) AND SSCOMP_ECE$(28,1)="M" THEN GOTO *NEXT ELSE GOTO 11154 ! Is this a companion for our current line and a "M" line, otherwise does not qualify
11160 SSCOMP_ECE$(259,3)=NEW_ECE$(25,3); NEXT_ECE_LINE$=STR(NUM(NEXT_ECE_LINE$)+1:"000"); SSCOMP_ECE$(25,3)=NEXT_ECE_LINE$
11170 WRITE RECORD (SSCOMPCHN,KEY=SSCOMP_ECE$(1,10)+SSCOMP_ECE$(25,3))SSCOMP_ECE$
11175 MESS$="RELEASE|COMPANIONS|"+MID(ECE$,259,3)+"|TO|"+NEXT_ECE_LINE$; GOSUB LOG_IT
11180 GOTO 11154
11190 CLOSE (SSCOMPCHN)
11195 RETURN 
11199 ! 
11200 GET_LOC_FROM_OTHER:! SSP286528, get loc_code from cust_loc_code or recv_dept when not blank DBD-237-SSP307410 add long_recv_dept
11210 CUST_LOC_CODE:
11215 IF NUL(EEF_IN$(388,9)) THEN GOTO RECV_DEPT
11220 FMM_PREFIX$="C"+EC$[2](51,10)+EEF_IN$(388,9)
11225 READ (Z[16],KEY=FMM_PREFIX$,DOM=*NEXT)
11230 FMM$=KEY(Z[16],END=RECV_DEPT); IF MID(FMM$,1,LEN(FMM_PREFIX$))<>FMM_PREFIX$ THEN GOTO RECV_DEPT
11235 IF NOT(NUL(MID(FMM$,21,4))) THEN EEF_IN$(18,4)=MID(FMM$,21,4); RETURN 
11249 ! 
11250 RECV_DEPT:
11255 IF NUL(EEF_IN$(397,20)) THEN GOTO LONG_RECV_DEPT
11260 FTD_PREFIX$="C"+EC$[2](51,10)+EEF_IN$(397,20)
11265 READ (Z[38],KEY=FTD_PREFIX$,DOM=*NEXT)
11270 FTD$=KEY(Z[38],END=LONG_RECV_DEPT); IF MID(FTD$,1,LEN(FTD_PREFIX$))<>FTD_PREFIX$ THEN GOTO LONG_RECV_DEPT
11275 IF NOT(NUL(MID(FTD$,32,4))) THEN EEF_IN$(18,4)=MID(FTD$,32,4)
11290 RETURN 
11295 ! 
11300 LONG_RECV_DEPT:! DBD-273-SSP307410
11305 IF NUL(EEF_IN$(434,64)) THEN GOTO *RETURN
11310 LONG_RECV_DEPT$=STP(EEF_IN$(434,64))
11315 LOC_CODE$=""; CALL "FMGLAA;FIND_LOC_FROM_LONG_RECVG_DEPT",EC$[2](51,10),LONG_RECV_DEPT$,"",LOC_CODE$
11320 IF NOT(NUL(LOC_CODE$)) THEN EEF_IN$(18,4)=LOC_CODE$
11345 RETURN 
11349 ! 
56000 ! WO224917-Noosh - DB Distributor integration for item/order creation.
56002 REM "232721-Add sales_tax_code tag to EC Order Entry program, if valid
56003 REM "242069-General shipping to customer location needs to match one of the special shipping locations
56004 REM "268437-Sourcing Bench; need special shipping details in response.  
56006 REM "268892-WO263664; ss_ext_line_number tag, check for companions and  
56008 REM "270946-WO263664; need EEF field to capture raw ss_seq_number.      
56009 REM "272505-Release lines cannot be split ship
56010 REM "286528-FlowPoint; ss_cust_loc_code,ss_recv_dept,ss_ship_via_map
56012 REM "307210-DBD-75-International shipping address - add country code           
56014 REM "307410-DBD-273 - Long receiving dept field changes using ZYR file  
56015 REM "307420-DBD-288:Dynamic companion message lines and special shipping                     
