0010 REM "Buyer Information Profile <EC3BYA>
0020 SETESC 9300; SETERR 9000
0035 REM "4.5 - 12/22/00 - 15.96 - kmc - SSP# 131928
0040 REM "Copyright 2000 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3BYA",X1$="E/C Product Catalog-Item Info"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0130 REM 'STD MASKS
0132 UMASK$="#,###,##0-"
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1... 02O FM1... 03O FM3... 04O FM4... 13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM "Build search strings
1000 REM "Process DATA array
1005 DATA_TAGS$="001<template>002<user>003<password>004<session_id>005<item_key>006<cust_location>"
1006 MAX_ROWS=25,POSITION_ITEM$="",DIRECTION$="F",CUST_LOCATION$=""
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 USER$=VALUE$; GOSUB 3000; GOTO 1090; REM "user
1023 PASSWORD$=VALUE$; GOTO 1090; REM "password
1024 SESSION_ID$=VALUE$; GOTO 1090; REM "Get session id
1025 ITEM_KEY$=VALUE$; GOTO 1090; REM "Get item key
1026 CUST_LOCATION$=VALUE$; GOTO 1090; REM 'CUSTOMER LOCATION CODE
1090 NEXT I
1100 REM "Get item based on item key
1110 DIM FM1$(450),FM1[31]; READ (Z[2],KEY=ITEM_KEY$,DOM=1111)IOL=0320; GOTO 1115
1111 REM " form missing
1112 FM1$(1,20)=ITEM_KEY$,FM1$(42,40)="Item requested not found"
1200 REM 'IF CUSTOMER LOCATION ALL OR SINGLE IDENTIFIED THEN GET USAGE FIGURES
1202 IF CUST_LOCATION$="" THEN GOTO 1250; REM 'NULL MEANS NOT TO GET LOCATION INFO
1204 DIM FM3$(30),FM3ALL$(30),FM3[13],FM3ALL[13]
1206 IF UCS(CUST_LOCATION$)<>"ALL" THEN READ (Z[3],KEY=ITEM_KEY$+CUST_LOCATION$+YEAR$+"U",DOM=1250)IOL=0332
1208 READ (Z[3],KEY=ITEM_KEY$,DOM=1209); REM 'POSITIONAL FOR ALL FORM LOCATIONS
1209 REM 'LOAD ALL USAGE FIGURES INTO FM3ALL(X)
1210 FM3KEY$=KEY(Z[3],END=1220); IF FM3KEY$(1,LEN(FM3KEY$))<>FM3KEY$ THEN GOTO 1220
1212 READ (Z[3],KEY=FM3KEY$)IOL=0330
1214 FOR INDEX3=1 TO 12; FM3ALL[INDEX3]=FM3ALL[INDEX3]+FM3[INDEX3]; NEXT INDEX3
1216 GOTO 1210
1220 REM 'IF SINGLE LOCATION THEN RETRIEVE SCREEN 8 RECORD (FM4)
1222 DIM FM4$(216),FM4[15]; READ (Z[4],KEY=ITEM_KEY$+CUST_LOCATION$,DOM=1223)IOL=0340
1500 REM "Use template$ to open file, read line by line and insert
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<user>002<cust_code>003<password>004<cust_name>005<ec_company>006<session_id>007<cic_code>008<desc>009<left_right>010<top-bottom>011<plies>012<rev_date>013<function_code>014<spec_code>015<carton_pack>016<carton_weight>017<fms_price>018<sell_unit>019<numbered>020<last_ord_date>021<ending_number>022<previous_form_code>023<alt_unit_of_issue>024<form_memo>025<sell_price>026<sell_qty_unit>"
1510 READ (100,END=1595)LINE$
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2090
2001 LINE$=LINE1$+USER$+LINE2$; GOTO 2095; REM "user
2002 LINE$=LINE1$+CUST_CODE$+LINE2$; GOTO 2095; REM "cust_code
2003 LINE$=LINE1$+PASSWORD$+LINE2$; GOTO 2095; REM "password
2004 LINE$=LINE1$+STP(AR1$(11,35),1)+LINE2$; GOTO 2095; REM "cust_name
2005 LINE$=LINE1$+STP(EC_PARM$(7,50),1)+LINE2$; GOTO 2095; REM "ec_company
2006 LINE$=LINE1$+STP(SESSION_ID$,1)+LINE2$; GOTO 2095; REM "session_id
2007 LINE$=LINE1$+STP(FM1$(350,20),1)+LINE2$; GOTO 2095; REM "cic_code
2008 LINE$=LINE1$+STP(FM1$(42,40),1)+LINE2$; GOTO 2095; REM "desc = description
2009 LINE$=LINE1$+STP(FM1$(24,8),1)+LINE2$; GOTO 2095; REM "left_right
2010 LINE$=LINE1$+STP(FM1$(32,8),1)+LINE2$; GOTO 2095; REM "top_bottom
2011 LINE$=LINE1$+STP(FM1$(40,2),1)+LINE2$; GOTO 2095; REM "Number of plies
2012 LINE$=LINE1$+STP(FM1$(167,6),1)+LINE2$; GOTO 2095; REM "rev_date
2013 LINE$=LINE1$+STP(FM1$(173,6),1)+LINE2$; GOTO 2095; REM "function_code
2014 LINE$=LINE1$+STP(FM1$(370,10),1)+LINE2$; GOTO 2095; REM "spec_code
2015 LINE$=LINE1$+STR(FM1[0]:"###,###")+LINE2$; GOTO 2095; REM "carton_pack
2016 LINE$=LINE1$+STR(FM1[18]:"###.##")+LINE2$; GOTO 2095; REM "carton_weight
2017 LINE$=LINE1$+STR(FM1[29]:"$###,###.00")+LINE2$; GOTO 2095; REM "fms_price
2018 LINE$=LINE1$+STP(FM1$(100,4),1)+LINE2$; GOTO 2095; REM 'SELL_UNIT
2019 LINE$=LINE1$+STP(FM1$(104,1),1)+LINE2$; GOTO 2095; REM 'NUMBERED
2020 DATEIN$=FM1$(126,6); GOSUB 7500; LINE$=LINE1$+DATEOUT$+LINE2$; GOTO 2095; REM 'LAST_ORD_DATE
2021 LINE$=LINE1$+STP(FM1$(140,9),1)+LINE2$; GOTO 2095; REM 'ENDING_NUMBER
2022 LINE$=LINE1$+STP(FM1$(199,10),1)+LINE2$; GOTO 2095; REM 'PREVIOUS_FORM_CODE
2023 LINE$=LINE1$+STP(FM1$(238,4),1)+LINE2$; GOTO 2095; REM 'ALT_UNIT_OF_ISSUE
2024 LINE$=LINE1$+STP(FM1$(389,60),1)+LINE2$; GOTO 2095; REM 'FORM_MEMO
2025 LINE$=LINE1$+STP(STR(FM1[3]:"$#,##0.00-"),1)+LINE2$; GOTO 2095; REM 'SELL_PRICE
2026 LINE$=LINE1$+STP(STR(FM1[4]:"#,##0"),1)+LINE2$; GOTO 2095; REM 'SELL_QTY_UNIT
2027 LINE$=LINE1$+STP(STR(FM1[16]:"##,###,##0"),1)+LINE2$; GOTO 2095; REM 'LAST_ORD_QTY
2028 LINE$=LINE1$+STP(STR(FM1[21]:"###,##0"),1)+LINE2$; GOTO 2095; REM 'DESIRED_STOCKING_LEVEL
2029 LINE$=LINE1$+STP(STR(FM1[22]:"##0"),1)+LINE2$; GOTO 2095; REM 'ROP_DAYS
2030 LINE$=LINE1$+STP(STR(FM1[23]:"###,##0"),1)+LINE2$; GOTO 2095; REM 'ROP_QTY
2031 LINE$=LINE1$+STP(STR(FM1[25]:"#,##0"),1)+LINE2$; GOTO 2095; REM 'ALT_QTY_UNIT
2032 LINE$=LINE1$+STP(STR(FM1[24]:"###,##0-"),1)+LINE2$; GOTO 2095; REM 'FORM_MOS_AVG_USAGE
2033 LINE$=LINE1$+STP(STR(FM3ALL[1]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 1
2034 LINE$=LINE1$+STP(STR(FM3ALL[2]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 2
2035 LINE$=LINE1$+STP(STR(FM3ALL[3]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 3
2036 LINE$=LINE1$+STP(STR(FM3ALL[4]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 4
2037 LINE$=LINE1$+STP(STR(FM3ALL[5]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 5
2038 LINE$=LINE1$+STP(STR(FM3ALL[6]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 6
2039 LINE$=LINE1$+STP(STR(FM3ALL[7]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 7
2040 LINE$=LINE1$+STP(STR(FM3ALL[8]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 8
2041 LINE$=LINE1$+STP(STR(FM3ALL[9]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 9                                                                                                                                                                                                                          2040
2042 LINE$=LINE1$+STP(STR(FM3ALL[10]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 10
2043 LINE$=LINE1$+STP(STR(FM3ALL[11]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 11
2044 LINE$=LINE1$+STP(STR(FM3ALL[12]:UMASK$),1)+LINE2$; GOTO 2095; REM 'ALL FORM USAGE PERIOD 12
2045 LINE$=LINE1$+STP(STR(FM3[1]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 1
2046 LINE$=LINE1$+STP(STR(FM3[2]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 2
2047 LINE$=LINE1$+STP(STR(FM3[3]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 3
2048 LINE$=LINE1$+STP(STR(FM3[4]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 4
2049 LINE$=LINE1$+STP(STR(FM3[5]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 5
2050 LINE$=LINE1$+STP(STR(FM3[6]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 6
2051 LINE$=LINE1$+STP(STR(FM3[7]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 7
2052 LINE$=LINE1$+STP(STR(FM3[8]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 8
2053 LINE$=LINE1$+STP(STR(FM3[9]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 9
2054 LINE$=LINE1$+STP(STR(FM3[10]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 10
2055 LINE$=LINE1$+STP(STR(FM3[11]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 11
2056 LINE$=LINE1$+STP(STR(FM3[12]:UMASK$),1)+LINE2$; GOTO 2095; REM 'SINGLE LOCATION FORM USAGE PERIOD 12
2057 LINE$=LINE1$+STP(FM4$(21,4),1)+LINE2$; GOTO 2095; REM 'FM4 CUST_LOCATINO
2058 LINE$=LINE1$+STP(FM4$(26,1),1)+LINE2$; GOTO 2095; REM 'FM4_IS_ITEM_COUNTED
2059 LINE$=LINE1$+STP(FM4$(27,1),1)+LINE2$; GOTO 2095; REM 'FM4_AUTRESTOCK_METHOD
2060 DATEIN$=FM4$(75,6); GOSUB 7500; LINE$=LINE1$+STP(DATEOUT$,1)+LINE2$; GOTO 2095; REM 'FM4_LAST_COUNT_DATE
2061 DATEIN$=FM4$(83,6); GOSUB 7500; LINE$=LINE1$+STP(DATEOUT$,1)+LINE2$; GOTO 2095; REM 'FM4_USAGE_START_DATE
2062 DATEIN$=FM4$(89,6); GOSUB 7500; LINE$=LINE1$+STP(DATEOUT$,1)+LINE2$; GOTO 2095; REM 'FM4_LAST_SHIP_DATE
2063 LINE$=LINE1$+STP(FM4$(180,20),1)+LINE2$; GOTO 2095; REM 'FM4_BILLING_DEPT
2064 LINE$=LINE1$+STP(STR(FM4[0]:UMASK$),1)+LINE2$; GOTO 2095; REM 'FM4_AVG_MONTHLY_USAGE
2065 LINE$=LINE1$+STP(STR(FM4[1]:"##0"),1)+LINE2$; GOTO 2095; REM 'FM4_RESUPLY_MIN_DAYS
2066 LINE$=LINE1$+STP(STR(FM4[2]:"#,###,##0"),1)+LINE2$; GOTO 2095; REM 'FM4_RESUPPLY_MIN_QTY
2067 LINE$=LINE1$+STP(STR(FM4[3]:"#,###,##0-"),1)+LINE2$; GOTO 2095; REM 'FM4_LAST_COUNT_QTY
2068 LINE$=LINE1$+STP(STR(FM4[4]:"#,###,##0-"),1)+LINE2$; GOTO 2095; REM 'FM4_DIRECT_SHIPMENTS
2069 LINE$=LINE1$+STP(STR(FM4[5]:"#,###,##0-"),1)+LINE2$; GOTO 2095; REM 'FM4_WHSE_SHIPMENTS
2070 LINE$=LINE1$+STP(STR(FM4[10]:"#,###,##0-"),1)+LINE2$; GOTO 2095; REM 'FM4_REQ_MAX
2071 LINE$=LINE1$+STP(STR(FM4[12]:"##0-"),1)+LINE2$; GOTO 2095; REM 'FM4_RESTOCK_DAYS
2072 LINE$=LINE1$+STP(STR(FM4[13]:"#,###,##0"),1)+LINE2$; GOTO 2095; REM 'FM4_RESTOCK_QTY
2073 LINE$=LINE1$+STP(FM3$(25,4),1)+LINE2$; GOTO 2095; REM 'USAGE_YEAR FROM FM3
2074 LINE$=LINE1$+STP(FM3$(29,1),1)+LINE2$; GOTO 2095; REM 'USAGE_BAL_TYPE FROM FM3
2075 LINE$=LINE1$+STP(STR(FM4[4]+FM4[5]:"#,###,##0"),1)+LINE2$; GOTO 2095; REM 'DIRECT + WHSE SHIPMENTS
2090 LINE$=LINE1$+"?"+LINE2$; GOTO 2095; REM "tag not found, replace with '?'
2095 RETURN 
3000 REM "Read customer data into AR1$
3010 DIM AR1$(600); READ (Z[1],KEY="0000"+USER$+"000",DOM=3011)AR1$
3015 CALL "ZZDISP","AX",AR1$(1,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$
3045 RETURN 
3200 REM "Output entries, using ENTRY_TEMPLATE$ to pass information, create TABLE$ to output
3202 ENTRY_TAGS$="001<item_code>002<cic_code>003<desc>004<um_ext>005<price>"
3203 REM "Setup ENTRY_TEMPLATE$
3204 ENTRY_TEMPLATE$=LINE$,TABLE$=""
3205 READ (100,END=3206)LINE$; ENTRY_TEMPLATE$=ENTRY_TEMPLATE$+LINE$+EOL$; IF POS("?tf?entryend?"=LINE$)=0 THEN GOTO 3205
3209 REM "Now read order$, if B direction do it backwards
3210 IF DIRECTION$="B" THEN START_PT=TOTAL_RECORDS,END_PT=1,STEP_SIZE=-1 ELSE START_PT=1,END_PT=TOTAL_RECORDS,STEP_SIZE=1
3215 FOR ENTRY_INDEX=START_PT TO END_PT STEP STEP_SIZE
3220 DIM FM1$(550),FM1[31]; FIND (Z[2],KEY=AR1$(1,10)+ITEM$[ENTRY_INDEX],DOM=3245)IOL=0320
3225 ENTRY$=ENTRY_TEMPLATE$
3230 GOSUB 3300
3235 TABLE$=TABLE$+ENTRY$
3245 NEXT ENTRY_INDEX
3295 RETURN 
3300 REM "Given FM1$, create row in table
3305 EINDEX=POS("?tf?"=ENTRY$); IF EINDEX=0 THEN GOTO 3395
3306 EEND_INDEX=POS("?"=ENTRY$(EINDEX+4)),ETAG$=ENTRY$(EINDEX+4,EEND_INDEX-1),ENTRY1$=ENTRY$(1,EINDEX-1),ENTRY2$=ENTRY$(EINDEX+EEND_INDEX+4),EPOS=POS("<"+ETAG$+">"=ENTRY_TAGS$); IF EPOS=0 THEN EINDEX=0 ELSE EINDEX=NUM(ENTRY_TAGS$(EPOS-3,3))
3310 ON EINDEX GOTO 3389,3311,3312,3313,3314,3315,3389
3311 ENTRY$=ENTRY1$+STP(FM1$(11,10),1)+ENTRY2$; GOTO 3390; REM "item_code
3312 ENTRY$=ENTRY1$+STP(FM1$(350,20),1)+ENTRY2$; GOTO 3390; REM "cic_code
3313 ENTRY$=ENTRY1$+STP(FM1$(42,40),1)+ENTRY2$; GOTO 3390; REM "item description
3314 UM_EXT$=STP(FM1$(100,4),2)+"/"+STP(STR(FM1[4]:"#####"),2); ENTRY$=ENTRY1$+UM_EXT$+ENTRY2$; GOTO 3390; REM "um_ext, selling u/m & u/per extended
3315 ENTRY$=ENTRY1$+STR(FM1[3]:"$###,###.00")+ENTRY2$; GOTO 3390; REM "sell price
3389 ENTRY$=ENTRY1$+"?"+ENTRY2$; GOTO 3390; REM "tag not found, replace with '?'
3390 GOTO 3305
3395 RETURN 
3400 REM "fill order$[] with orders, using position_item$ and direction$, if direction$='B'(ackwards) then 1->total_records is in reverse order, so read it later as total_records-> 1
3404 GOSUB 3450
3405 IF POSITION_ITEM$="" AND DIRECTION$="B" THEN POSITION_ITEM$=$FFFFFFFFFFFF$; REM "if in backwards order, start at end of file
3410 FIRST_ITEM$="",LAST_ITEM$="",TOTAL_RECORDS=0,INDEX=1; DIM ITEM$[100]
3415 READ (Z[3],KEY=AR1$(1,10)+POSITION_ITEM$,DOM=3416)
3420 IF DIRECTION$="B" THEN KEY_3$=KEP(Z[3],END=3435) ELSE KEY_3$=KEY(Z[3],END=3435)
3425 IF KEY_3$(1,10)<>AR1$(1,10) THEN GOTO 3435 ELSE READ (Z[3],KEY=KEY_3$,DOM=3420); ITEM$[INDEX]=KEY_3$(31,10),TOTAL_RECORDS=TOTAL_RECORDS+1,INDEX=INDEX+1; IF MAX_ROWS<>0 AND TOTAL_RECORDS>=MAX_ROWS THEN GOTO 3435; REM "skip to correct place to exit
3430 GOTO 3420
3440 IF DIRECTION$="B" THEN FIRST_ITEM$=ITEM$[TOTAL_RECORDS],LAST_ITEM$=ITEM$[1] ELSE FIRST_ITEM$=ITEM$[1],LAST_ITEM$=ITEM$[TOTAL_RECORDS]
3445 RETURN 
3450 REM "Set VERY_FIRST_ITEM$ and VERY_LAST_ITEM$. These will be used to determine when to NOT show prev and next buttons
3455 VERY_FIRST_ITEM$="",VERY_LAST_ITEM$=""
3460 READ (Z[3],KEY=AR1$(1,10),DOM=3461)
3465 VK$=KEY(Z[3],END=3466); IF VK$(1,10)=AR1$(1,10) THEN VERY_FIRST_ITEM$=VK$(31)
3470 READ (Z[3],KEY=AR1$(1,10)+$FF$,DOM=3471)
3471 VK$=KEP(Z[3],END=3472); IF VK$(1,10)=AR1$(1,10) THEN VERY_LAST_ITEM$=VK$(31)
3495 RETURN 
3500 REM "Output next button, using BUTTON_NEXT_TEMPLATE$ to pass information, creating BUTTON$, if needed
3502 BUTTON$="",BUTTON_NEXT_TAGS$="001<position_item>002<user>003<password>004<session_id>"
3503 REM "Setup BUTTON_NEXT_TEMPLATE$
3505 READ (100,END=3506)LINE$; BUTTON_NEXT_TEMPLATE$=BUTTON_NEXT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonnextend?"=LINE$)=0 THEN GOTO 3505
3510 IF LAST_ITEM$=VERY_LAST_ITEM$ THEN BUTTON$=""; GOTO 3595 ELSE BUTTON$=BUTTON_NEXT_TEMPLATE$
3515 BNINDEX=POS("?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3591
3516 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_NEXT_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_NEXT_TAGS$(BNPOS-3,3))
3520 ON BNINDEX GOTO 3590,3521,3522,3523,3524,3590
3521 BUTTON$=BUTTON1$+LAST_ITEM$+BUTTON2$; GOTO 3590; REM "position_item
3522 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3590; REM "User
3523 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3590; REM "password
3524 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3590; REM "session_id
3590 GOTO 3515
3595 RETURN 
3600 REM "Output previous button, using BUTTON_PREV_TEMPLATE$ to pass information, creating BUTTON$, if needed
3602 BUTTON$="",BUTTON_PREV_TAGS$="001<position_item>002<user>003<password>004<session_id>"
3605 READ (100,END=3606)LINE$; BUTTON_PREV_TEMPLATE$=BUTTON_PREV_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonprevend?"=LINE$)=0 THEN GOTO 3605
3610 IF FIRST_ITEM$=VERY_FIRST_ITEM$ THEN BUTTON$=""; GOTO 3695 ELSE BUTTON$=BUTTON_PREV_TEMPLATE$
3615 BNINDEX=POS("?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3691
3616 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_PREV_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_PREV_TAGS$(BNPOS-3,3))
3620 ON BNINDEX GOTO 3690,3621,3622,3623,3624,3690
3621 BUTTON$=BUTTON1$+FIRST_ITEM$+BUTTON2$; GOTO 3690; REM "position_item
3622 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3690; REM "User
3623 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3690; REM "password
3624 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3690; REM "session_id
3690 GOTO 3615
3695 RETURN 
7500 REM 'SUBS
7510 REM 'RETURN FORMATTED DATE
7520 CALL "ZZDISP","DX",DATEIN$,"",X3$,DATEOUT$,"",0,0,X4$
7521 DATEOUT$=STP(DATEOUT$,1)
7522 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 REM "FOR I=1 TO 20; IF Z[I]<>0 THEN CLOSE (Z[I]) FI; NEXT I
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
