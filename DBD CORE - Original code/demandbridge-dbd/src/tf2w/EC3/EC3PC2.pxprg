0010 REM "E/C Item search Criteria Page <EC3PC2>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 07/08/19 - 14.635 - dmm - SSP# 307179
0037 REM "307179-DBSPT-66337; Product Catalog Images not displaying correctly
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3PC2",X1$="E/C Item Search Criteria Page"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0320 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0340 IOLIST ECG$
0350 IOLIST ECH$
0360 IOLIST ECR$
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1... 020 FM1... 03O FT1... 04O ECG... 05O ECH... 06O ECR... 07O EDI... 08O ECB... 10O EDA... 13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM 'SET IMG SRC PREFIX/SUFFIX
0610 IMGSRC_PREFIX$=STP(EC_PARM$(311,20),2),IMGSRC_ATTRIB$=" "+STP(EC_PARM$(331,60),2)+">",IMGSRC_SUFFIX$=STP(EC_PARM$(391,20),2)
0800 GOSUB 3000
1000 REM "Process DATA array
1005 DATA_TAGS$="001<template>002<user>003<password>004<maxrows>005<position_item>006<direction>007<session_id>008<category>009<catalog>"
1006 MAX_ROWS=NUM(EC_PARM$(258,3)),POSITION_ITEM$="",DIRECTION$="F"
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 USER$=VALUE$; GOSUB 3000; GOTO 1090; REM "user
1023 PASSWORD$=VALUE$; GOTO 1090; REM "password
1024 MAX_ROWS=NUM(VALUE$,ERR=1090); GOTO 1090; REM "maxrows
1025 POSITION_ITEM$=VALUE$; GOTO 1090; REM "position_item
1026 IF VALUE$="backward" THEN DIRECTION$="B"; GOTO 1090; REM "direction, only set if it is 'backward'
1027 SESSION_ID$=VALUE$; GOTO 1090; REM "Get session id
1028 CATEGORY$=VALUE$; GOTO 1090; REM "single catalog category to display
1029 CATALOG$=VALUE$; GOTO 1090; REM "single catalog to display
1090 NEXT I
1100 REM "preprocessing
1101 VERSION$="51.0000.154559.156580.165654.173447.20040701",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1110 REM "set the active catalog
1111 IF STP(CATALOG$,1)="" THEN IF EC$[1](1115,10)=DIM(10) THEN CATALOG$=EC$[1](1105,10) ELSE CATALOG$=EC$[1](1115,10) END_IF END_IF ; IF STP(CATALOG$,1)="" THEN CATALOG$=EC$[2](325,10); REM "if last search catalog is blank then set to the last product catalog
1112 IF CATALOG$=EC$[1](1115,10) THEN GOTO 1115
1113 EXTRACT RECORD (Z[8],KEY=EC$[1](1,7))ECBREC$; ECBREC$(1115,10)=CATALOG$; WRITE RECORD (Z[8],KEY=EC$[1](1,7))ECBREC$; REM "update session record with current catalog
1114 CATEGORY$=""; REM "reset category with change in catalog
1115 REM "set active catalog
1118 DIM EDA$(128); FIND (Z[10],KEY=CATALOG$,DOM=1119)EDA$
1119 GOSUB 8050; REM "get category list
1125 REM 'CK FOR VALID MAXROWS
1126 IF MAX_ROWS=0 THEN MAX_ROWS=NUM(EC_PARM$(258,3))
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<user>002<cust_code>003<password>004<cust_name>005<ec_company>006<entrystart>007<buttonnext>008<buttonprev>009<session_id>010<buyer_id>011<buyer_name>012<date>013<time>014<category_list>015<category_search_list>016<catalog_search_list>017<search_catalog>"
1510 READ (100,END=1595)LINE$; GOSUB 7550
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2090
2001 LINE$=LINE1$+FN%HTML_ESC$(USER$)+LINE2$; GOTO 2095; REM "user SSP303115
2002 LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE$)+LINE2$; GOTO 2095; REM "cust_code SSP303115
2003 LINE$=LINE1$+FN%HTML_ESC$(PASSWORD$)+LINE2$; GOTO 2095; REM "password SSP303115
2004 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](23,35),1))+LINE2$; GOTO 2095; REM "cust_name SSP303115
2005 LINE$=LINE1$+FN%HTML_ESC$(STP(EC_PARM$(7,50),1))+LINE2$; GOTO 2095; REM "ec_company SSP303115
2006 GOSUB 3200; LINE$=TABLE$; GOTO 2095; REM "entrystart
2007 GOSUB 3500; LINE$=BUTTON$; GOTO 2095; REM "buttonnext
2008 GOSUB 3600; LINE$=BUTTON$; GOTO 2095; REM "buttonprev
2009 LINE$=LINE1$+FN%HTML_ESC$(STP(SESSION_ID$,1))+LINE2$; GOTO 2095; REM "session_id SSP303115
2010 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](8,15),1))+LINE2$; GOTO 2095; REM "buyer_id SSP303115
2011 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[2](16,35),1))+LINE2$; GOTO 2095; REM "buyer_name SSP303115
2012 LINE$=LINE1$+FN%HTML_ESC$(EC$[4])+LINE2$; GOTO 2095; REM " date SSP303115
2013 LINE$=LINE1$+FN%HTML_ESC$(EC$[5])+LINE2$; GOTO 2095; REM "time SSP303115
2014 SEARCH_LIST$="N"; GOSUB 2150; LINE$=LINE1$+CATEGORY_LIST$+LINE2$; GOTO 2095; REM "catalog category list
2015 SEARCH_LIST$="Y"; GOSUB 2150; LINE$=LINE1$+CATEGORY_LIST$+LINE2$; GOTO 2095; REM "category_search_list
2016 GOSUB 2250; LINE$=LINE1$+CATALOG_LIST$+LINE2$; GOTO 2095; REM "catalog_search_list
2017 LINE$=LINE1$+FN%HTML_ESC$(CATALOG$)+LINE2$; GOTO 2095; REM "search_catalog   (needs to be placed in the form posted to the PC3 to identify the catalog being searched) SSP303115
2090 LINE$=LINE1$+"?"+LINE2$; GOTO 2095; REM "tag not found, replace with '?'
2095 RETURN 
2150 REM "Return CATEGORY_LIST$ as HTML for drop down list
2152 FIRST$="",TEMP_PUBLISHED$=""; IF STP(CATALOG$,3," ")="" THEN TEMP_PUBLISHED$=EC$[6]; GOTO 2155 ELSE READ (Z[7],KEY=CATALOG$,DOM=2153)
2153 EDIKEY$=KEY(Z[7],END=2155); READ (Z[7]); IF EDIKEY$(1,10)<>CATALOG$ THEN GOTO 2155 ELSE GOSUB 8000; IF CAT_OK$="N" THEN GOTO 2153 ELSE TEMP_PUBLISHED$=TEMP_PUBLISHED$+EDIKEY$(11,10); GOTO 2153 ! SSP165654, added check secure codes
2155 CATEGORY_LIST$="",PUBLISHED$=TEMP_PUBLISHED$
2156 IF SEARCH_LIST$="Y" THEN CATEGORY_LIST$="<option selected value="+QUO+"**********"+QUO+" SELECTED>ALL Categories</option>"
2157 IF LEN(STP(PUBLISHED$,2))=0 THEN GOTO 2195
2159 FOR PP=0 TO LEN(PUBLISHED$)/10-1; CURRCAT$=PUBLISHED$(PP*10+1,10); IF CURRCAT$=DIM(10) THEN GOTO 2180
2160 READ (Z[4],KEY=CURRCAT$,DOM=2180)IOL=0340
2161 IF FIRST$="Y" THEN FIRST$="N" ! SSP173447
2162 IF MID(ECG$,107,1)="Y" THEN GOTO 2180 ELSE IF FIRST$="" THEN FIRST$="Y" ! SSP173447, restrict from category DDL
2164 IF FIRST$="Y" THEN IF SEARCH_LIST$="Y" THEN SELECTED$=" " ELSE SELECTED$="selected " ! SSP173477, was checking for PP=0, changed to FIRST$="Y"
2165 CATEGORY_LIST$=CATEGORY_LIST$+"<option"+SELECTED$+"value="+QUO+CURRCAT$+QUO; IF PP=0 AND SEARCH_LIST$<>"Y" THEN CATEGORY_LIST$=CATEGORY_LIST$+" SELECTED>"+ECG$(11,30)+"</option>" ELSE CATEGORY_LIST$=CATEGORY_LIST$+">"+ECG$(11,30)+"</option>"; REM "if first item in list (pp=0) then set to be SELECTED as the initial value in the dd list
2180 NEXT PP
2185 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN CATEGORY_LIST$=CATEGORY_LIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2186 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2195 SEARCH_LIST$=""; RETURN 
2200 REM "Store category header template into CAT_TEMPLATE$, it will be used in the entry section
2204 CAT_TEMPLATE$=LINE$,LINE$=""
2205 READ (100,END=2206)LINE$; GOSUB 7550
2206 IF POS("?tf?categoryend?"=LINE$)<>0 THEN GOTO 2209 END_IF ; INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN GOTO 2209; REM "searching for tags within the category heading section
2207 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
2208 GOSUB 2000; REM "process tags within the category section
2209 CAT_TEMPLATE$=CAT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?categoryend?"=LINE$)=0 THEN GOTO 2205
2230 LINE$=""
2245 RETURN 
2250 REM "Return CATALOG_LIST$ as HTML for drop down list
2253 CATALOG_LIST$="",TEMP_PUBLISHED$=EC$[1](565,180),PUBLISHED$=""
2256 FOR PP=0 TO 17; IF TEMP_PUBLISHED$(PP*10+1,10)<>DIM(10) THEN PUBLISHED$=PUBLISHED$+TEMP_PUBLISHED$(PP*10+1,10) END_IF ; NEXT PP
2257 IF LEN(STP(PUBLISHED$,2))=0 THEN GOTO 2295
2258 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "Remove start of comment if there
2259 FOR PP=0 TO LEN(PUBLISHED$)/10-1; CURRCATALOG$=PUBLISHED$(PP*10+1,10); IF CURRCATALOG$=DIM(10) THEN GOTO 2280
2260 DIM EDA_REC$(125); FIND (Z[10],KEY=CURRCATALOG$,DOM=2280)EDA_REC$; IF EDA_REC$(74,1)="Y" THEN GOTO 2280 ! SSP173477, Restrict catalog from DDL
2262 IF TEXT_OPT THEN CATALOG_LIST$=CATALOG_LIST$+CURRCATALOG$+" "+EC$[1](745+PP*20,20)+EOL$; GOTO 2280; REM "137648
2263 IF CATALOG$="" THEN IF PP=0 THEN SELECTED$="<option selected"; GOTO 2265 ELSE SELECTED$="<option"; GOTO 2265
2264 IF CATALOG$<>"" THEN IF CURRCATALOG$=CATALOG$ THEN SELECTED$="<option selected" ELSE SELECTED$="<option"
2265 CATALOG_LIST$=CATALOG_LIST$+SELECTED$+" value="+QUO+CURRCATALOG$+QUO+">"+EC$[1](745+PP*20,20)+"</option>"; REM "if first item in list (pp=0) then set to be SELECTED as the initial value in the dd list
2280 NEXT PP
2285 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN CATALOG_LIST$=CATALOG_LIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2286 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2295 RETURN 
3000 REM "Read customer data into AR1$
3010 DIM AR1$(600); READ (Z[1],KEY=EC$[2](51,10),DOM=3011)AR1$
3015 CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$
3045 RETURN 
3200 REM "Output entries, using ENTRY_TEMPLATE$ to pass information, create TABLE$ to output
3202 ENTRY_TAGS$="001<item_code>002<cic_code>003<desc>004<um_ext>005<price>006<item_key>007<user>008<password>009<session_id>010<catalog_code>011<catalog_addl>012<catalog_image>013<fms_price>014<alt_um_ext>015<price_in_alt_um>016<flagged_fms_price>017<image_form1>018<image_form2>019<image_form3>020<image_form4>021<image_form5>022<image_form1_link>023<image_form2_link>024<image_form3_link>025<image_form4_link>026<image_form5_link>"
3203 REM "Setup ENTRY_TEMPLATE$
3204 ENTRY_TEMPLATE$=LINE$,TABLE$="",PREV_CATEGORY$=""
3205 READ (100,END=3206)LINE$; GOSUB 7550; ENTRY_TEMPLATE$=ENTRY_TEMPLATE$+LINE$+EOL$; IF POS("?tf?entryend?"=LINE$)=0 THEN GOTO 3205
3209 REM "Now read catalog,if B direction do it backwards
3210 IF DIRECTION$="B" THEN START_PT=TOTAL_RECORDS,END_PT=1,STEP_SIZE=-1 ELSE START_PT=1,END_PT=TOTAL_RECORDS,STEP_SIZE=1
3215 FOR ENTRY_INDEX=START_PT TO END_PT STEP STEP_SIZE
3217 FIND (Z[5],KEY=EC$[2](325,10)+ITEM$[ENTRY_INDEX],DOM=3245)IOL=0350
3220 DIM ECR$(500); FIND (Z[6],KEY=ECH$(41,20),DOM=3221)IOL=0360; REM "get form webec parms
3223 DIM FM1$(550),FM1[31]; FIND (Z[2],KEY=ECH$(41,20),DOM=3245)IOL=0320
3225 ENTRY$=ENTRY_TEMPLATE$
3228 IF ITEM$[ENTRY_INDEX](1,10)<>PREV_CATEGORY$ THEN GOSUB 4000
3230 GOSUB 3300
3235 TABLE$=TABLE$+ENTRY$
3245 NEXT ENTRY_INDEX
3295 RETURN 
3300 REM "Given FM1$, create row in table
3305 EINDEX=POS("?tf?"=ENTRY$); IF EINDEX=0 THEN GOTO 3395
3306 EEND_INDEX=POS("?"=ENTRY$(EINDEX+4)),ETAG$=ENTRY$(EINDEX+4,EEND_INDEX-1),ENTRY1$=ENTRY$(1,EINDEX-1),ENTRY2$=ENTRY$(EINDEX+EEND_INDEX+4),EPOS=POS("<"+ETAG$+">"=ENTRY_TAGS$); IF EPOS=0 THEN EINDEX=0 ELSE EINDEX=NUM(ENTRY_TAGS$(EPOS-3,3))
3310 ON EINDEX GOTO 3389,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3389
3311 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(FM1$(11,10),1))+ENTRY2$; GOTO 3390; REM "item_code SSP303115
3312 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(FM1$(350,20),1))+ENTRY2$; GOTO 3390; REM "cic_code SSP303115
3313 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(FM1$(42,40),1))+ENTRY2$; GOTO 3390; REM "item description SSP303115
3314 UM_EXT$=STP(FM1$(100,4),2)+"/"+STP(STR(FM1[4]:"#####"),2); ENTRY$=ENTRY1$+FN%HTML_ESC$(UM_EXT$)+ENTRY2$; GOTO 3390; REM "um_ext, selling u/m & u/per extended SSP303115
3315 ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(FM1[3]:"$###,###.00"))+ENTRY2$; GOTO 3390; REM "sell price SSP303115
3316 ENTRY$=ENTRY1$+FN%HTML_ESC$(FM1$(1,20))+ENTRY2$; GOTO 3390; REM "item_key - key to Form master SSP303115
3317 ENTRY$=ENTRY1$+FN%HTML_ESC$(USER$)+ENTRY2$; GOTO 3390; REM "user SSP303115
3318 ENTRY$=ENTRY1$+FN%HTML_ESC$(PASSWORD$)+ENTRY2$; GOTO 3390; REM "password SSP303115
3319 ENTRY$=ENTRY1$+FN%HTML_ESC$(SESSION_ID$)+ENTRY2$; GOTO 3390; REM "session id SSP303115
3320 ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(ECH$(21,20),1))+ENTRY2$; GOTO 3390; REM "catalog_code from ECH SSP303115
3321 IF LEN(ECH$)<121 THEN ECH$=ECH$+DIM(60) END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(ECH$(61,60),1))+ENTRY2$; GOTO 3390; REM "catalog_addl from ECH SSP303115
3322 IF LEN(ECH$)<181 THEN ECH$=ECH$+DIM(180) END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STP(ECH$(121,60),1))+ENTRY2$; GOTO 3390; REM "catalog_image from ECH SSP303115
3323 IF FM1[29]=0 THEN FMS_PRICE=FM1[3] ELSE FMS_PRICE=FM1[29] END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(FMS_PRICE:"$###,###.00"))+ENTRY2$; GOTO 3390; REM "fms_price SSP303115
3324 IF FM1$(238,4)=DIM(4) OR FM1[25]=0 THEN ALT_UM$=FM1$(100,4),ALT_UM=FM1[4] ELSE ALT_UM$=FM1$(238,4),ALT_UM=FM1[25] END_IF ; UM_EXT$=STP(ALT_UM$,2)+"/"+STP(STR(ALT_UM:"#####"),2); ENTRY$=ENTRY1$+FN%HTML_ESC$(UM_EXT$)+ENTRY2$; GOTO 3390; REM "alt_um_ext, alternate unit of issue  u/m & u/per extended SSP303115
3325 IF FM1[25]=0 THEN ALT_PRICE=FM1[3] ELSE IF FM1[3]=0 OR FM1[4]=0 THEN ALT_PRICE=0 ELSE ALT_PRICE=FM1[3]*FM1[25]/FM1[4] END_IF END_IF ; ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(ALT_PRICE:"$###,###.00"))+ENTRY2$; GOTO 3390; REM "price_in_alt_um, calculated from sell price, sell u/m and alt iss #1 um SSP303115
3326 IF FM1[29]=0 THEN FMS_PRICE=FM1[3] ELSE FMS_PRICE=FM1[29] END_IF ; IF EC$[2](322,1)="Y" THEN ENTRY$=ENTRY1$+ENTRY2$ ELSE ENTRY$=ENTRY1$+FN%HTML_ESC$(STR(FMS_PRICE:"$###,###.00 per "))+ENTRY2$ END_IF ; GOTO 3390; REM "flagged_fms_price,shown unless don't show flag in buyer is set SSP303115
3327 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(31,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form1 SSP303115 SSP307179
3328 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(61,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form2 SSP303115 SSP307179
3329 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(31,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form3 SSP303115 SSP307179
3330 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(31,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form4 SSP303115 SSP307179
3331 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+FN%HTML_ESC$(EC$[8]+STP(ECR$(31,30),2))+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form5 SSP303115 SSP307179
3332 ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(31,30),2))+ENTRY2$; GOTO 3390; REM "image_form1_link SSP303115
3333 ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(61,30),2))+ENTRY2$; GOTO 3390; REM "image_form2_link SSP303115
3334 ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(91,30),2))+ENTRY2$; GOTO 3390; REM "image_form3_link SSP303115
3335 ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(121,30),2))+ENTRY2$; GOTO 3390; REM "image_form4_link SSP303115
3336 ENTRY$=ENTRY1$+FN%HTML_ESC$(EC$[8]+STP(ECR$(151,30),2))+ENTRY2$; GOTO 3390; REM "image_form5_link SSP303115
3389 ENTRY$=ENTRY1$+"?"+ENTRY2$; GOTO 3390; REM "tag not found, replace with '?'
3390 GOTO 3305
3395 RETURN 
3500 REM "Output next button, using BUTTON_NEXT_TEMPLATE$ to pass information, creating BUTTON$, if needed
3502 BUTTON$="",BUTTON_NEXT_TAGS$="001<position_item>002<user>003<password>004<session_id>005<category>"
3503 REM "Setup BUTTON_NEXT_TEMPLATE$
3505 READ (100,END=3506)LINE$; GOSUB 7550; BUTTON_NEXT_TEMPLATE$=BUTTON_NEXT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonnextend?"=LINE$)=0 THEN GOTO 3505
3510 IF LAST_ITEM$=VERY_LAST_ITEM$ THEN BUTTON$=""; GOTO 3595 ELSE BUTTON$=BUTTON_NEXT_TEMPLATE$
3515 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3591
3516 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_NEXT_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_NEXT_TAGS$(BNPOS-3,3))
3520 ON BNINDEX GOTO 3590,3521,3522,3523,3524,3525,3590
3521 BUTTON$=BUTTON1$+LAST_ITEM$+BUTTON2$; GOTO 3590; REM "position_item
3522 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3590; REM "User
3523 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3590; REM "password
3524 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3590; REM "session_id
3525 BUTTON$=BUTTON1$+CATEGORY$+BUTTON2$; GOTO 3590; REM "category
3590 GOTO 3515
3595 RETURN 
3600 REM "Output previous button, using BUTTON_PREV_TEMPLATE$ to pass information, creating BUTTON$, if needed
3602 BUTTON$="",BUTTON_PREV_TAGS$="001<position_item>002<user>003<password>004<session_id>005<category>"
3605 READ (100,END=3606)LINE$; GOSUB 7550; BUTTON_PREV_TEMPLATE$=BUTTON_PREV_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonprevend?"=LINE$)=0 THEN GOTO 3605
3610 IF FIRST_ITEM$=VERY_FIRST_ITEM$ THEN BUTTON$=""; GOTO 3695 ELSE BUTTON$=BUTTON_PREV_TEMPLATE$
3615 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3691
3616 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_PREV_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_PREV_TAGS$(BNPOS-3,3))
3620 ON BNINDEX GOTO 3690,3621,3622,3623,3624,3625,3690
3621 BUTTON$=BUTTON1$+FIRST_ITEM$+BUTTON2$; GOTO 3690; REM "position_item
3622 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3690; REM "User
3623 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3690; REM "password
3624 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3690; REM "session_id
3625 BUTTON$=BUTTON1$+CATEGORY$+BUTTON2$; GOTO 3690; REM "category
3690 GOTO 3615
3695 RETURN 
3700 REM "*** NOT YET IMPLEMENTED ***MOUSEDBOX1: Output entries, using MOUSEDBOX1_TEMPLATE$ to pass information, create "+MOUSEDBOX1$ TO OUTPUT
3702 ENTRY_TAGS$="001<category_code>002<category_desc>"
3703 REM "set up MOUSEDBOX1_TEMPLATE$
3704 MOUSEDBOX1_TEMPLATE$=LINE$,MOUSEDBOX1$=""
3705 READ (100,END=3706)LINE$; GOSUB 7750; MOUSEDBOX1_TEMPLATE$=MOUSEDBOX1_TEMPLATE$+LINE$+EOL$; IF POS("?tf?ddbox1end?"=LINE$)=0 THEN GOTO 3705
3709 REM "now read catalog for active descriptions
4000 REM "Category has changed, output a category header (if categorystart was supplied and we have html to do so), then update PREV_CATEGORY$
4002 CAT_TAGS$="001<category_code>002<category_desc>003<category_addl>"
4003 DIM ECG$(100); ECG$(1,10)=ITEM$[ENTRY_INDEX](1,10); FIND (Z[4],KEY=ECG$(1,10),DOM=4004)IOL=0340
4004 PREV_CATEGORY$=ITEM$[ENTRY_INDEX](1,10)
4005 IF CAT_TEMPLATE$="" THEN GOTO 4095 ELSE CAT$="",TMP_CAT$=CAT_TEMPLATE$; REM "Skip if no template supplied, else setup for starting
4006 CINDEX=POS("?tf?"=TMP_CAT$); IF CINDEX=0 THEN CAT$=CAT$+TMP_CAT$; GOTO 4093
4007 CEND_INDEX=POS("?"=TMP_CAT$(CINDEX+4)),CTAG$=TMP_CAT$(CINDEX+4,CEND_INDEX-1),CAT$=CAT$+TMP_CAT$(1,CINDEX-1),TMP_CAT$=TMP_CAT$(CINDEX+CEND_INDEX+4),CPOS=POS("<"+CTAG$+">"=CAT_TAGS$); IF CPOS=0 THEN CINDEX=0 ELSE CINDEX=NUM(CAT_TAGS$(CPOS-3,3))
4010 ON CINDEX GOTO 4089,4011,4012,4013,4089
4011 CAT$=CAT$+STP(ECG$(1,10),1); GOTO 4090; REM "category_code
4012 CAT$=CAT$+STP(ECG$(11,30),1); GOTO 4090; REM "category_desc
4013 CAT$=CAT$+STP(ECG$(41,60),1); GOTO 4090; REM "category_addl
4089 CAT$=CAT$+"?"; GOTO 4090; REM "tag not found, replace with '?'
4090 GOTO 4006
4093 TABLE$=TABLE$+CAT$
4095 RETURN 
7550 REM "Send LINE$ to EC3BYB for generic fields processing
7560 CALL "EC3BYB",ERR=7561,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100 ! 227154
7595 RETURN 
8000 ! Building list of categories, need to check secure codes, used similar logic from EC3SRV, 1100's, SSP165654
8005 IF EC$[2](86,1)="Y" THEN CAT_OK$="Y"; GOTO 8045 ! Buyer is su, accept all categories
8010 CAT_OK$="N"; DIM CGY$(106); READ (Z[4],KEY=EDIKEY$(11,10),DOM=8045)CGY$
8015 CAT_SCODES$=STP(CGY$(101,6),2)
8020 IF CAT_SCODES$="" THEN CAT_OK$="Y"; GOTO 8045
8025 FOR X=0 TO LEN(CAT_SCODES$)/2-1
8027 CODE$=CAT_SCODES$(X*2+1,2); IF POS(CODE$=EC$[2](233,20)+EC$[2](898,40),2)<>0 THEN CAT_OK$="Y"; EXITTO 8045
8030 NEXT X
8035 CAT_OK$="N"
8045 RETURN 
8049 ! 
8050 REM "return list of categories based on EDI
8051 IF EC$[2](325,10)=CATALOG$ THEN EDI_CATEGORY_LIST$=EC$[6]; GOTO 8061
8052 EDI_CATEGORY_LIST$=""
8053 READ (Z[7],KEY=CATALOG$,DOM=8054)
8060 EDIKEY$=KEY(Z[7],END=8061); IF EDIKEY$(1,10)=CATALOG$ THEN GOSUB 8000; IF CAT_OK$="Y" THEN EDI_CATEGORY_LIST$=EDI_CATEGORY_LIST$+EDIKEY$(11,10); READ (Z[7]); GOTO 8060 ELSE READ (Z[7]); GOTO 8060 ! SSP165654, added check secure codes
8070 IF LEN(EDI_CATEGORY_LIST$)=0 THEN DIM EDI_CATEGORY_LIST$(10)
8090 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 REM FOR I=1 TO 20; IF Z[I]<>0 THEN CLOSE (Z[I]) FI; NEXT I
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56000 REM "192407-Buyer needs 20 additional secure codes.                     
56002 REM "227154-Modify EC3BYB to support a condition tag : ?tf?if?[expr]    
56004 REM "303115-FN%HTML_ESC$ additions in EC programs                       
56006 REM "307179-DBSPT-66337; Product Catalog Images not displaying correctly
