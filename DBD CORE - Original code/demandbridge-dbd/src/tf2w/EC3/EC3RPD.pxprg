0010 REM "E/C PDF Report Selection Page <EC3RPD>
0020 SETESC 9300; SETERR 9000
0035 REM "5.4 - 06/29/05 - 15.678888 - jme - SSP# 178627
0040 REM "Copyright 2005 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3RPD",X1$="E/C PDF Report Selection Page"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0310 IOLIST EML$
0320 IOLIST FM1$,FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0340 IOLIST ECG$
0350 IOLIST ECH$
0360 IOLIST ECR$
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O AR1... 020 FM1... 03O FT1... 04O ECG... 05O ECH... 06O ECR... 07O ECS... 08O ECB... 09O EDI... 10O EDA... 11O EML... 13O ZZPARM "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0600 REM 'SET IMG SRC PREFIX/SUFFIX
0610 IMGSRC_PREFIX$=STP(EC_PARM$(311,20),2),IMGSRC_ATTRIB$=" "+STP(EC_PARM$(331,60),2)+">",IMGSRC_SUFFIX$=STP(EC_PARM$(391,20),2)
0800 GOSUB 3000
0850 DOC_CNT=0; READ (Z[11],KNO=1,KEY="CR"+EC$[2](51,10),DOM=*NEXT)
0855 KYZ11$=KEY(Z[11],END=*NEXT); IF MID(KYZ11$,1,12)="CR"+EC$[2](51,10) THEN DOC_CNT=1
1000 REM "Process DATA array
1005 DATA_TAGS$="001<template>002<user>003<password>004<maxrows>005<position_item>006<direction>007<session_id>"
1006 MAX_ROWS=NUM(EC_PARM$(258,3)),POSITION_ITEM$="",DIRECTION$="F"
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 USER$=VALUE$; GOSUB 3000; GOTO 1090; REM "user
1023 PASSWORD$=VALUE$; GOTO 1090; REM "password
1024 MAX_ROWS=NUM(VALUE$,ERR=1090); GOTO 1090; REM "maxrows
1025 POSITION_ITEM$=VALUE$; GOTO 1090; REM "position_item
1026 IF VALUE$="backward" THEN DIRECTION$="B"; GOTO 1090; REM "direction, only set if it is 'backward'
1027 SESSION_ID$=VALUE$; GOTO 1090; REM "Get session id
1090 NEXT I
1100 REM "preprocessing
1101 VERSION$="178627.20050629",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1125 REM 'CK FOR VALID MAXROWS
1126 IF MAX_ROWS=0 THEN MAX_ROWS=NUM(EC_PARM$(258,3))
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<user>002<cust_code>003<password>004<cust_name>005<ec_company>006<session_id>007<buyer_id>008<buyer_name>009<date>010<time>011<cust_pdf_rpt_start>"
1510 READ (100,END=1595)LINE$; GOSUB 7550
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2090
2001 LINE$=LINE1$+USER$+LINE2$; GOTO 2095; REM "user
2002 LINE$=LINE1$+CUST_CODE$+LINE2$; GOTO 2095; REM "cust_code
2003 LINE$=LINE1$+PASSWORD$+LINE2$; GOTO 2095; REM "password
2004 LINE$=LINE1$+STP(EC$[1](23,35),1)+LINE2$; GOTO 2095; REM "cust_name
2005 LINE$=LINE1$+STP(EC_PARM$(7,50),1)+LINE2$; GOTO 2095; REM "ec_company
2006 LINE$=LINE1$+STP(SESSION_ID$,1)+LINE2$; GOTO 2095; REM "session_id
2007 LINE$=LINE1$+STP(EC$[1](8,15),1)+LINE2$; GOTO 2095; REM "buyer_id
2008 LINE$=LINE1$+STP(EC$[2](16,35),1)+LINE2$; GOTO 2095; REM "buyer_name
2009 LINE$=LINE1$+EC$[4]+LINE2$; GOTO 2095; REM " date
2010 LINE$=LINE1$+EC$[5]+LINE2$; GOTO 2095; REM "time
2011 PDF_DETAIL=0; GOSUB 2100; GOTO 2095; REM display reports
2090 LINE$=LINE1$+"?"+LINE2$; GOTO 2095; REM "tag not found, replace with '?'
2095 RETURN 
2100 WKLINE$=""
2102 READ (100,END=*NEXT)LINE$; GOSUB 7550; IF POS("?tf?cust_pdf_rpt_end?"=LINE$)=0 THEN WKLINE$=WKLINE$+LINE$+EOL$; GOTO *SAME
2110 NEXT_EML=0; KYZ11$=KEY(Z[11],END=*NEXT); IF MID(KYZ11$,1,12)="CR"+EC$[2](51,10) THEN NEXT_EML=1
2120 WHILE NEXT_EML ! 2980 wend
2130 NEXT_EML2=0,NEXT_EML=0; KYZ11$=KEY(Z[11],END=*NEXT); IF MID(KYZ11$,1,12)="CR"+EC$[2](51,10) THEN NEXT_EML2=1; NEXT_EML=1
2135 IF NEXT_EML2=1 THEN {! 2975 }
2190 VAL_READ=0; XP=PRM('XI'); SET_PARAM 'XI'; READ (Z[11],KEY=KYZ11$,DOM=*NEXT)IOL=0310; SET_PARAM 'XI'=XP; FROM_DIR$="< ls "+STP(EML$(137,60),3," "); CMD_CHAN=HFN; OPEN (CMD_CHAN,ERR=*NEXT)FROM_DIR$; VAL_READ=1
2195 IF VAL_READ THEN {! 2970 }
2196 IF POS("/"=FROM_DIR$)<>0 THEN SEP$="/" ELSE SEP$="\" END_IF ; IF FROM_DIR$(LEN(FROM_DIR$),1)=SEP$ THEN SEP$=""
2197 NOF_EOF=0; READ (CMD_CHAN,ERR=*NEXT)NEXT_FILE$; NOF_EOF=1
2198 IF NOF_EOF=0 THEN {
2199 CLOSE (CMD_CHAN) } ELSE {! 2965
2200 LINE$=WKLINE$
2210 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1 THEN CHKTAG=1 ELSE CHKTAG=0
2250 WHILE CHKTAG ! 2700 wend
2260 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
2270 TAG$=LINE$(P1,MSL)
2280 LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
2300 SWITCH TAG$ ! 2650 end switch
2310 CASE "?tf?file_name?"
2320 LINE$=LINE1$+STP(EML$(137,60),3," ")+SEP$+NEXT_FILE$+LINE2$
2324 BREAK
2330 CASE "?tf?cust_pdf_title?"
2335 LINE$=LINE1$+STP(EML$(261,60),3," ")+LINE2$
2340 BREAK
2640 DEFAULT 
2645 LINE$=LINE1$+LINE2$
2650 END SWITCH 
2700 WEND ! 2250
2750 PRINT (OUTPUT)LINE$,EOL$,
2755 LINE$=""
2965  } ! 2198
2970  } ! 2195
2975  }
2980 WEND ! 2120 ! read eml file
2990 RETURN 
3000 REM "Read customer data into AR1$
3010 DIM AR1$(600); READ (Z[1],KEY=EC$[2](51,10),DOM=3011)AR1$
3015 CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$
3045 RETURN 
3300 REM "Given FM1$, create row in table
3305 EINDEX=POS("?tf?"=ENTRY$); IF EINDEX=0 THEN GOTO 3395
3306 EEND_INDEX=POS("?"=ENTRY$(EINDEX+4)),ETAG$=ENTRY$(EINDEX+4,EEND_INDEX-1),ENTRY1$=ENTRY$(1,EINDEX-1),ENTRY2$=ENTRY$(EINDEX+EEND_INDEX+4),EPOS=POS("<"+ETAG$+">"=ENTRY_TAGS$); IF EPOS=0 THEN EINDEX=0 ELSE EINDEX=NUM(ENTRY_TAGS$(EPOS-3,3))
3310 ON EINDEX GOTO 3389,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3389
3311 ENTRY$=ENTRY1$+STP(FM1$(11,10),1)+ENTRY2$; GOTO 3390; REM "item_code
3312 ENTRY$=ENTRY1$+STP(FM1$(350,20),1)+ENTRY2$; GOTO 3390; REM "cic_code
3313 ENTRY$=ENTRY1$+STP(FM1$(42,40),1)+ENTRY2$; GOTO 3390; REM "item description
3314 UM_EXT$=STP(FM1$(100,4),2)+"/"+STP(STR(FM1[4]:"#####"),2); ENTRY$=ENTRY1$+UM_EXT$+ENTRY2$; GOTO 3390; REM "um_ext, selling u/m & u/per extended
3315 ENTRY$=ENTRY1$+STR(FM1[3]:"$###,###.00")+ENTRY2$; GOTO 3390; REM "sell price
3316 ENTRY$=ENTRY1$+FM1$(1,20)+ENTRY2$; GOTO 3390; REM "item_key - key to Form master
3317 ENTRY$=ENTRY1$+USER$+ENTRY2$; GOTO 3390; REM "user
3318 ENTRY$=ENTRY1$+PASSWORD$+ENTRY2$; GOTO 3390; REM "password
3319 ENTRY$=ENTRY1$+SESSION_ID$+ENTRY2$; GOTO 3390; REM "session id
3320 ENTRY$=ENTRY1$+STP(ECH$(21,20),1)+ENTRY2$; GOTO 3390; REM "catalog_code from ECH
3321 IF LEN(ECH$)<121 THEN ECH$=ECH$+DIM(60) END_IF ; ENTRY$=ENTRY1$+STP(ECH$(61,60),1)+ENTRY2$; GOTO 3390; REM "catalog_addl from ECH
3322 IF LEN(ECH$)<181 THEN ECH$=ECH$+DIM(180) END_IF ; ENTRY$=ENTRY1$+STP(ECH$(121,60),1)+ENTRY2$; GOTO 3390; REM "catalog_image from ECH
3323 IF FM1[29]=0 THEN FMS_PRICE=FM1[3] ELSE FMS_PRICE=FM1[29] END_IF ; ENTRY$=ENTRY1$+STR(FMS_PRICE:"$###,###.00")+ENTRY2$; GOTO 3390; REM "fms_price
3324 IF FM1$(238,4)=DIM(4) OR FM1[25]=0 THEN ALT_UM$=FM1$(100,4),ALT_UM=FM1[4] ELSE ALT_UM$=FM1$(238,4),ALT_UM=FM1[25] END_IF ; UM_EXT$=STP(ALT_UM$,2)+"/"+STP(STR(ALT_UM:"#####"),2); ENTRY$=ENTRY1$+UM_EXT$+ENTRY2$; GOTO 3390; REM "alt_um_ext, alternate unit of issue  u/m & u/per extended
3325 IF FM1[25]=0 THEN ALT_PRICE=FM1[3] ELSE IF FM1[3]=0 OR FM1[4]=0 THEN ALT_PRICE=0 ELSE ALT_PRICE=FM1[3]*FM1[25]/FM1[4] END_IF END_IF ; ENTRY$=ENTRY1$+STR(ALT_PRICE:"$###,###.00")+ENTRY2$; GOTO 3390; REM "price_in_alt_um, calculated from sell price, sell u/m and alt iss #1 um
3326 IF FM1[29]=0 THEN FMS_PRICE=FM1[3] ELSE FMS_PRICE=FM1[29] END_IF ; IF EC$[2](322,1)="Y" THEN ENTRY$=ENTRY1$+ENTRY2$ ELSE ENTRY$=ENTRY1$+STR(FMS_PRICE:"$###,###.00 per ")+ENTRY2$ END_IF ; GOTO 3390; REM "flagged_fms_price,shown unless don't show flag in buyer is set
3327 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(31,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form1
3328 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(61,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form2
3329 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(31,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form3
3330 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(31,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form4
3331 ENTRY$=ENTRY1$+IMGSRC_PREFIX$+EC$[8]+STP(ECR$(31,30),2)+IMGSRC_ATTRIB$+IMGSRC_SUFFIX$+ENTRY2$; GOTO 3390; REM "image_form5
3332 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(31,30),2)+ENTRY2$; GOTO 3390; REM "image_form1_link
3333 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(61,30),2)+ENTRY2$; GOTO 3390; REM "image_form2_link
3334 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(91,30),2)+ENTRY2$; GOTO 3390; REM "image_form3_link
3335 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(121,30),2)+ENTRY2$; GOTO 3390; REM "image_form4_link
3336 ENTRY$=ENTRY1$+EC$[8]+STP(ECR$(151,30),2)+ENTRY2$; GOTO 3390; REM "image_form5_link
3389 ENTRY$=ENTRY1$+"?"+ENTRY2$; GOTO 3390; REM "tag not found, replace with '?'
3390 GOTO 3305
3395 RETURN 
3500 REM "Output next button, using BUTTON_NEXT_TEMPLATE$ to pass information, creating BUTTON$, if needed
3502 BUTTON$="",BUTTON_NEXT_TAGS$="001<position_item>002<user>003<password>004<session_id>005<category>"
3503 REM "Setup BUTTON_NEXT_TEMPLATE$
3505 READ (100,END=3506)LINE$; GOSUB 7550; BUTTON_NEXT_TEMPLATE$=BUTTON_NEXT_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonnextend?"=LINE$)=0 THEN GOTO 3505
3510 IF LAST_ITEM$=VERY_LAST_ITEM$ THEN BUTTON$=""; GOTO 3595 ELSE BUTTON$=BUTTON_NEXT_TEMPLATE$
3515 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3591
3516 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_NEXT_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_NEXT_TAGS$(BNPOS-3,3))
3520 ON BNINDEX GOTO 3590,3521,3522,3523,3524,3525,3590
3521 BUTTON$=BUTTON1$+LAST_ITEM$+BUTTON2$; GOTO 3590; REM "position_item
3522 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3590; REM "User
3523 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3590; REM "password
3524 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3590; REM "session_id
3525 BUTTON$=BUTTON1$+CATEGORY$+BUTTON2$; GOTO 3590; REM "category
3590 GOTO 3515
3595 RETURN 
3600 REM "Output previous button, using BUTTON_PREV_TEMPLATE$ to pass information, creating BUTTON$, if needed
3602 BUTTON$="",BUTTON_PREV_TAGS$="001<position_item>002<user>003<password>004<session_id>005<category>"
3605 READ (100,END=3606)LINE$; GOSUB 7550; BUTTON_PREV_TEMPLATE$=BUTTON_PREV_TEMPLATE$+LINE$+EOL$; IF POS("?tf?buttonprevend?"=LINE$)=0 THEN GOTO 3605
3610 IF FIRST_ITEM$=VERY_FIRST_ITEM$ THEN BUTTON$=""; GOTO 3695 ELSE BUTTON$=BUTTON_PREV_TEMPLATE$
3615 BNINDEX=POS("?tf?"=BUTTON$); IF BNINDEX=0 THEN GOTO 3691
3616 BNEND_INDEX=POS("?"=BUTTON$(BNINDEX+4)),BNTAG$=BUTTON$(BNINDEX+4,BNEND_INDEX-1),BUTTON1$=BUTTON$(1,BNINDEX-1),BUTTON2$=BUTTON$(BNINDEX+BNEND_INDEX+4),BNPOS=POS("<"+BNTAG$+">"=BUTTON_PREV_TAGS$); IF BNPOS=0 THEN BUTTON$=BUTTON1$+BUTTON2$,BNINDEX=0 ELSE BNINDEX=NUM(BUTTON_PREV_TAGS$(BNPOS-3,3))
3620 ON BNINDEX GOTO 3690,3621,3622,3623,3624,3625,3690
3621 BUTTON$=BUTTON1$+FIRST_ITEM$+BUTTON2$; GOTO 3690; REM "position_item
3622 BUTTON$=BUTTON1$+USER$+BUTTON2$; GOTO 3690; REM "User
3623 BUTTON$=BUTTON1$+PASSWORD$+BUTTON2$; GOTO 3690; REM "password
3624 BUTTON$=BUTTON1$+SESSION_ID$+BUTTON2$; GOTO 3690; REM "session_id
3625 BUTTON$=BUTTON1$+CATEGORY$+BUTTON2$; GOTO 3690; REM "category
3690 GOTO 3615
3695 RETURN 
3700 REM "*** NOT YET IMPLEMENTED ***MOUSEDBOX1: Output entries, using MOUSEDBOX1_TEMPLATE$ to pass information, create "+MOUSEDBOX1$ TO OUTPUT
3702 ENTRY_TAGS$="001<category_code>002<category_desc>"
3703 REM "set up MOUSEDBOX1_TEMPLATE$
3704 MOUSEDBOX1_TEMPLATE$=LINE$,MOUSEDBOX1$=""
3705 READ (100,END=3706)LINE$; GOSUB 7750; MOUSEDBOX1_TEMPLATE$=MOUSEDBOX1_TEMPLATE$+LINE$+EOL$; IF POS("?tf?ddbox1end?"=LINE$)=0 THEN GOTO 3705
3709 REM "now read catalog for active descriptions
4000 REM "Category has changed, output a category header (if categorystart was supplied and we have html to do so), then update PREV_CATEGORY$
4002 CAT_TAGS$="001<category_code>002<category_desc>003<category_addl>"
4003 DIM ECG$(100); ECG$(1,10)=ITEM$[ENTRY_INDEX](1,10); FIND (Z[4],KEY=ECG$(1,10),DOM=4004)IOL=0340
4004 PREV_CATEGORY$=ITEM$[ENTRY_INDEX](1,10)
4005 IF CAT_TEMPLATE$="" THEN GOTO 4095 ELSE CAT$="",TMP_CAT$=CAT_TEMPLATE$; REM "Skip if no template supplied, else setup for starting
4006 CINDEX=POS("?tf?"=TMP_CAT$); IF CINDEX=0 THEN CAT$=CAT$+TMP_CAT$; GOTO 4093
4007 CEND_INDEX=POS("?"=TMP_CAT$(CINDEX+4)),CTAG$=TMP_CAT$(CINDEX+4,CEND_INDEX-1),CAT$=CAT$+TMP_CAT$(1,CINDEX-1),TMP_CAT$=TMP_CAT$(CINDEX+CEND_INDEX+4),CPOS=POS("<"+CTAG$+">"=CAT_TAGS$); IF CPOS=0 THEN CINDEX=0 ELSE CINDEX=NUM(CAT_TAGS$(CPOS-3,3))
4010 ON CINDEX GOTO 4089,4011,4012,4013,4089
4011 CAT$=CAT$+STP(ECG$(1,10),1); GOTO 4090; REM "category_code
4012 CAT$=CAT$+STP(ECG$(11,30),1); GOTO 4090; REM "category_desc
4013 CAT$=CAT$+STP(ECG$(41,60),1); GOTO 4090; REM "category_addl
4089 CAT$=CAT$+"?"; GOTO 4090; REM "tag not found, replace with '?'
4090 GOTO 4006
4093 TABLE$=TABLE$+CAT$
4095 RETURN 
7550 REM "Send LINE$ to EC3BYB for generic fields processing
7560 CALL "EC3BYB",ERR=7561,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$
7595 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
