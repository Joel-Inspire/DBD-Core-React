0010 REM "E/C Buyer On-Line Admin <EC3AC0>
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 07/23/09 - 8.993055 - dmm - SSP# 231577
0037 REM "231577-See 231473 and 231512 also.  Add tag for shipto name, EC3AC0
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3AC0",X1$=""
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0310 IOLIST ECA$,ECA2$
0320 IOLIST FM0$
0330 IOLIST AR1$,AR1[0],AR1[1],AR1[2],AR1[3],AR1[4],AR1[5],AR1[6],AR1[7],AR1[8],AR1[9],AR1[10],AR1[11],AR1[12],AR1[13],AR1[14],AR1[15]
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O ECA... 02O AR1... 03O FM0... 04O FMP... 05O FMM... 06O ASR... 07O ASH... 08O AR5...  09O FTD...  10O EE2...  11O EDA...  13O ZZPARM  15O ARE...  16O ARU...  17O ARW...  18O AS8...  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0525 READ (Z[13],KEY=X3$(9,3)+"F/M")OP_PARM$
0530 IF POS(X3$(9,3)="060338363364365366476",3)<>0 THEN ARWPHONELEN=12 ELSE ARWPHONELEN=10 ! 209901, UK companies have 12 char phone numbers
0600 REM 'SET IMG SRC PREFIX/SUFFIX
0610 IMGSRC_PREFIX$=STP(EC_PARM$(311,20),2),IMGSRC_ATTRIB$=" "+STP(EC_PARM$(331,60),2)+">",IMGSRC_SUFFIX$=STP(EC_PARM$(391,20),2)
0800 CUST_CODE$=EC$[2](51,10); GOSUB 3000
1000 REM "Process DATA array
1005 DATA_TAGS$="001<template>002<action>003<new_buyer_password>004<new_buyer_name>005<new_buyer_email>006<new_buyer_email_actions>007<new_cc_number>008<new_cctype>009<new_ccname>010<new_cc_expire_month>011<new_cc_expire_year>012<new_attention>013<new_billto_name>014<new_billto_address1>015<new_billto_address2>016<new_billto_city>017<new_billto_state>018<new_billto_zip>019<new_default_po>020<dupfound_template>021<requested_buyer_id>022<new_shipto_address1>023<new_shipto_address2>024<new_shipto_city>025<new_shipto_state>026<new_shipto_zip>027<new_shipto_phone>028<new_shipto_attn>029<new_shipto_email>030<new_shipto_salestaxcode>031<new_buyer_color_scheme>032<new_buyer_num_rows>033<new_buyer_use_image_view>034<error_template>035<catalog_list>036<template_buyer_id>037<new_buyer_is_admin>038<new_cust_name>039<new_cust_address1>040<new_cust_address2>041<new_cust_city>042<new_cust_state>043<new_cust_zip>044<new_cust_lookup>045<new_cust_phone>046<new_buyer_webcode>047<new_shipto_name>"
1006 MAX_ROWS=NUM(EC_PARM$(258,3)),POSITION_ITEM$="",DIRECTION$="F"
1007 IS_ADMIN$=EC$[2](324,1) ! WO 201034 - "Y"=Buyer is a WebEC admin
1008 TEMPLATE_BUYERID$=EC$[2](1,15) ! WO 201034 - Default template buyer
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 ACTION$=UCS(VALUE$); ACTION$=STP(ACTION$,3," "); GOTO 1090; REM "action
1023 NEW_PASSWORD$=VALUE$; GOTO 1090; REM "new_buyer_password
1024 NEW_BUYER_NAME$=VALUE$; GOTO 1090; REM "new_buyer_name
1025 NEW_BUYER_EMAIL$=VALUE$; GOTO 1090; REM "new_buyer_email
1026 NEW_BUYER_EMAIL_ACTIONS$=VALUE$; GOTO 1090; REM "new_buyer_email_actions
1027 NEW_CC_NUMBER$=VALUE$; GOTO 1090; REM "new_cc_number
1028 NEW_CCTYPE$=VALUE$; GOTO 1090; REM "new_cctype
1029 NEW_CCNAME$=VALUE$; GOTO 1090; REM "new_ccname
1030 NEW_CC_EXPIRE_MONTH$=STR(NUM(VALUE$,ERR=1090):"00"); GOTO 1090; REM "new_cc_expire_month
1031 NEW_CC_EXPIRE_YEAR$=STR(NUM(VALUE$,ERR=1090):"00"); GOTO 1090; REM "new_cc_expire_year
1032 NEW_ATTENTION$=VALUE$; GOTO 1090; REM "new_attention
1033 NEW_BILLTO_NAME$=VALUE$; GOTO 1090; REM "new_billto_name
1034 NEW_BILLTO_ADDRESS1$=VALUE$; GOTO 1090; REM "new_billto_address1
1035 NEW_BILLTO_ADDRESS2$=VALUE$; GOTO 1090; REM "new_billto_address2
1036 NEW_BILLTO_CITY$=VALUE$; GOTO 1090; REM "new_billto_city
1037 NEW_BILLTO_STATE$=UCS(VALUE$); GOTO 1090; REM "new_billto_state
1038 NEW_BILLTO_ZIP$=VALUE$; GOTO 1090; REM "new_billto_zip
1039 NEW_DEFAULT_PO$=VALUE$; GOTO 1090; REM "new_default_po
1040 DUPFOUND_TEMPLATE$=VALUE$; GOTO 1090; REM "dupfound_template
1041 REQUESTED_BUYERID$=STP(VALUE$,2); IF LEN(REQUESTED_BUYERID$)>15 THEN REQUESTED_BUYERID$=REQUESTED_BUYERID$(1,15) ELSE REQUESTED_BUYERID$=PAD(REQUESTED_BUYERID$,15) END_IF ; GOTO 1090; REM "requested_buyer_id
1042 NEW_SHIPTO_ADDRESS1$=VALUE$; IF STP(NEW_SHIPTO_ADDRESS1$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_address1
1043 NEW_SHIPTO_ADDRESS2$=VALUE$; IF STP(NEW_SHIPTO_ADDRESS2$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_address2
1044 NEW_SHIPTO_CITY$=VALUE$; IF STP(NEW_SHIPTO_CITY$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_city
1045 NEW_SHIPTO_STATE$=VALUE$; IF STP(NEW_SHIPTO_STATE$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_state
1046 NEW_SHIPTO_ZIP$=VALUE$; IF STP(NEW_SHIPTO_ZIP$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_zip
1047 NEW_SHIPTO_PHONE$=VALUE$; IF STP(NEW_SHIPTO_PHONE$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_phone
1048 NEW_SHIPTO_ATTN$=VALUE$; IF STP(NEW_SHIPTO_ATTN$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_attn
1049 NEW_SHIPTO_EMAIL$=VALUE$; IF STP(NEW_SHIPTO_EMAIL$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_email
1050 NEW_SHIPTO_SALESTAXCODE$=VALUE$; IF STP(NEW_SHIPTO_SALESTAXCODE$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_salestaxcode
1051 NEW_BUYER_COLOR_SCHEME$=VALUE$; GOTO 1090 ! WO189770, new_buyer_color_scheme
1052 NEW_BUYER_NUM_ROWS_SET=1; NEW_BUYER_NUM_ROWS$=VALUE$; GOTO 1090 ! WO189770, new_buyer_run_rows
1053 NEW_BUYER_USE_IMAGE_VIEW$=VALUE$; GOTO 1090 ! WO189770, new_buyer_use_image_view
1054 ERR_TEMPLATE$=VALUE$; GOTO 1090; REM "201034, error_template
1055 CATALOG_LIST$=VALUE$; GOTO 1090; REM "201034, catalog_list
1056 IF IS_ADMIN$="Y" AND NOT(NUL(VALUE$)) THEN TEMPLATE_BUYERID$=PAD(STP(VALUE$,2),15); END_IF ; GOTO 1090; REM "201034, template_buyer_id
1057 IF IS_ADMIN$="Y" THEN NEW_BUYER_IS_ADMIN$=PAD(STP(VALUE$,2),1),ADMIN_SET=1; END_IF ; GOTO 1090; REM "201034, new_buyer_is_admin
1058 NEW_CUST_NAME$=VALUE$; GOTO 1090; REM "new_cust_name - 209900
1059 NEW_CUST_ADDRESS1$=VALUE$; GOTO 1090; REM "new_cust_address1 - 209900
1060 NEW_CUST_ADDRESS2$=VALUE$; GOTO 1090; REM "new_cust_address2 - 209900
1061 NEW_CUST_CITY$=VALUE$; GOTO 1090; REM "new_cust_city - 209900
1062 NEW_CUST_STATE$=VALUE$; GOTO 1090; REM "new_cust_state - 209900
1063 NEW_CUST_ZIP$=VALUE$; GOTO 1090; REM "new_cust_zip - 209900
1064 NEW_CUST_LOOKUP$=VALUE$; GOTO 1090; REM "new_cust_lookup - 209900
1065 NEW_CUST_PHONE$=VALUE$; GOTO 1090; REM "new_cust_phone - 209900
1066 NEW_BUYER_WEBCODE$=VALUE$; NEW_BUYER_WEBCODE=1; GOTO 1090; REM "new_buyer_webcode - 209900
1067 NEW_SHIPTO_NAME$=VALUE$; IF STP(NEW_SHIPTO_NAME$,3)>"" THEN ST$="Y" END_IF ; GOTO 1090 ! new_shipto_name, SSP231577
1090 NEXT I
1100 REM "preprocessing
1101 VERSION$="52.0000.162912.176408.177696.181091.189770.20060228",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1110 REM "preprocessing
1115 ! READ (Z(1),KEY=EC$[2](1,15))IOL=0310
1117 DIM FM0$(618) ! FM0$(1,15)="C"+EC$[2](51,10)+ECA$(61,4); READ (Z[3],KEY=FM0$(1,15),DOM=*NEXT)IOL=0320
1120 ON POS(ACTION$="CNURST") GOTO 1500,1130,1130,1200,1300,1400,1400 ! Setup Cust, New, Update, Retrieve, Admin Retrieve (201034), Admin Update (201034)
1130 REM "new user
1131 IF ACTION$="C" THEN ACTION$="N"; SETUP_NEW_CUSTOMER=1
1132 READ (Z(1),KEY=REQUESTED_BUYERID$,DOM=1135)IOL=0310
1134 TEMPLATE$=DUPFOUND_TEMPLATE$; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},TEMPLATE$; ERR_MSG$="The buyer id specified already exists. Please use a different id."; GOTO 1500
1135 IF SETUP_NEW_CUSTOMER THEN GOSUB SETUP_CUSTOMER; GOSUB 3000
1140 REM "set up new buyer
1141 READ (Z(1),KEY=TEMPLATE_BUYERID$)IOL=0310; IF IS_ADMIN$="Y" AND ACTION$="T" THEN IF EC$[2](51,10)<>ECA$(51,10) THEN GOTO 1430 ELSE ECA$(61,4)=DIM(4); SETUP_NEW_SHIPTO=1
1142 ECA$(1,15)=REQUESTED_BUYERID$
1143 IF STP(NEW_PASSWORD$,3," ")<>"" THEN ECA$(65,15)=NEW_PASSWORD$
1144 IF STP(NEW_BUYER_NAME$,3," ")<>"" THEN ECA$(16,35)=NEW_BUYER_NAME$
1145 IF STP(NEW_BUYER_EMAIL$,3," ")<>"" THEN ECA$(109,60)=NEW_BUYER_EMAIL$
1146 ECA$(256,10)=DIM(10); IF STP(NEW_BUYER_EMAIL_ACTIONS$,3," ")<>"" THEN ECA$(256,10)=NEW_BUYER_EMAIL_ACTIONS$
1147 IF STP(NEW_CC_NUMBER$,3," ")<>"" THEN ECA$(497,20)=NEW_CC_NUMBER$
1148 IF STP(NEW_CCTYPE$,3," ")<>"" THEN ECA$(493,4)=NEW_CCTYPE$
1149 IF STP(NEW_CCNAME$,3," ")<>"" THEN ECA$(521,40)=NEW_CCNAME$
1150 IF STP(NEW_CC_EXPIRE_MONTH$,3," ")<>"" THEN ECA$(517,2)=NEW_CC_EXPIRE_MONTH$
1151 IF STP(NEW_CC_EXPIRE_YEAR$,3," ")<>"" THEN ECA$(519,2)=NEW_CC_EXPIRE_YEAR$
1152 IF STP(NEW_ATTENTION$,3," ")<>"" THEN ECA$(561,30)=NEW_ATTENTION$
1153 IF STP(NEW_BILLTO_NAME$,3," ")<>"" THEN ECA$(745,35)=NEW_BILLTO_NAME$
1154 IF STP(NEW_BILLTO_ADDRESS1$,3," ")<>"" THEN ECA$(780,30)=NEW_BILLTO_ADDRESS1$
1155 IF STP(NEW_BILLTO_ADDRESS2$,3," ")<>"" THEN ECA$(810,30)=NEW_BILLTO_ADDRESS2$
1156 IF STP(NEW_BILLTO_CITY$,3," ")<>"" THEN ECA$(840,16)=NEW_BILLTO_CITY$
1157 IF STP(NEW_BILLTO_STATE$,3," ")<>"" THEN ECA$(856,2)=NEW_BILLTO_STATE$
1158 IF STP(NEW_BILLTO_ZIP$,3," ")<>"" THEN ECA$(858,9)=NEW_BILLTO_ZIP$
1159 IF STP(NEW_DEFAULT_PO$,3," ")<>"" THEN ECA$(307,15)=NEW_DEFAULT_PO$
1160 IF NEW_BUYER_COLOR_SCHEME$=DIM(6) THEN ECA$(1029,6)=DIM(6) ELSE IF STP(NEW_BUYER_COLOR_SCHEME$,3)<>"" THEN ECA$(1029,6)=NEW_BUYER_COLOR_SCHEME$ ! WO189770
1161 IF NEW_BUYER_NUM_ROWS_SET THEN IF STP(NEW_BUYER_NUM_ROWS$,3)="" THEN ECA$(1035,3)=DIM(3) ELSE NEW_BUYER_NUM_ROWS=NUM(NEW_BUYER_NUM_ROWS$,ERR=*NEXT); IF NEW_BUYER_NUM_ROWS>0 AND NEW_BUYER_RUN_ROWS<999 THEN ECA$(1035,3)=STR(NEW_BUYER_NUM_ROWS:"000") ! WO189770
1162 IF STP(NEW_BUYER_USE_IMAGE_VIEW$,3)="" THEN GOTO *NEXT ELSE IF POS(NEW_BUYER_USE_IMAGE_VIEW$="YN",1)>0 THEN ECA$(1038,1)=NEW_BUYER_USE_IMAGE_VIEW$ ! WO189770
1165 IF IS_ADMIN$="Y" THEN GOSUB SET_CATALOG_LIST ! WO 201034
1166 ECA$(324,1)="N"; IF IS_ADMIN$="Y" AND ADMIN_SET THEN ECA$(324,1)=NEW_BUYER_IS_ADMIN$ ! WO 201034
1167 IF SETUP_NEW_CUSTOMER THEN ECA$(51,10)=NEW_CUST_CODE$ ! WO 209900
1168 IF NEW_BUYER_WEBCODE THEN ECA$(276,15)=NEW_BUYER_WEBCODE$ ! SSP 209900
1180 WRITE (Z(1),KEY=ECA$(1,15))IOL=0310
1181 GOSUB 7500; REM "publish catalog
1185 IF (ACTION$="N" OR SETUP_NEW_SHIPTO=1) AND ST$="Y" THEN DIM FM0$(618); FM0$(1,11)="C"+ECA$(51,10); GOSUB SETUP_SHIPTO; EXTRACT (Z[1],KEY=ECA$(1,15),DOM=*NEXT)IOL=0310; ECA$(61,4)=FM0$(12,4); WRITE (Z[1],KEY=ECA$(1,15))IOL=0310
1186 IF SETUP_NEW_SHIPTO=1 THEN GOTO 1188 ! New buyer ship-to was setup by admin, skip update
1187 IF (ACTION$="U" OR ACTION$="T") AND ECA$(61,4)<>DIM(4) AND ST$="Y" THEN DIM FM0$(618); FM0$(1,15)="C"+ECA$(51,10)+ECA$(61,4); EXTRACT (Z[3],KEY=FM0$(1,15),DOM=*NEXT,ERR=*NEXT)IOL=0320; GOSUB REMOVE_SORTS; GOSUB SET_BUYER_ENTERED_FIELDS
1190 GOTO 1500
1200 REM "update existing buyer
1210 READ (Z(1),KEY=EC$[2](1,15))IOL=0310; GOTO 1143
1300 REM "retrieve information on current buyer
1310 READ (Z(1),KEY=EC$[2](1,15))IOL=0310
1320 DIM FM0$(618); FM0$(1,15)="C"+EC$[2](51,10)+ECA$(61,4); READ (Z[3],KEY=FM0$(1,15),DOM=*NEXT)IOL=0320
1345 GOTO 1500
1400 REM "Retrieve or update buyer information; request allowed only for a super-user; WO 201034
1405 IF IS_ADMIN$<>"Y" THEN GOTO 1430
1410 READ (Z(1),KEY=PAD(REQUESTED_BUYERID$,15),DOM=1435,ERR=9000)IOL=0310
1415 IF EC$[2](51,10)<>ECA$(51,10) THEN GOTO 1430
1420 DIM FM0$(618); FM0$(1,15)="C"+ECA$(51,10)+ECA$(61,4); READ (Z[3],KEY=FM0$(1,15),DOM=*NEXT)IOL=0320
1425 ON POS(ACTION$="ST") GOTO 1440,1449,1426; REM "Invalid action, View buyer info, Update buyer info 
1426 IF NUL(ECA$(61,4)) THEN SETUP_NEW_SHIPTO=1
1427 GOTO 1143
1430 ERR_MSG$="ERR: You do not have sufficient priveleges to access this information"; ECA$(1)="",FM0$(1)=""; TEMPLATE$=ERR_TEMPLATE$; GOTO 1449
1435 IF ACTION$="T" THEN GOTO 1140 END_IF ; ERR_MSG$="ERR: The requested user does not exist"; ECA$(1)="",FM0$(1)=""; TEMPLATE$=ERR_TEMPLATE$; GOTO 1449
1440 ERR_MSG$="ERR: Invalid action specified : "+ACTION$; TEMPLATE$=ERR_TEMPLATE$; GOTO 1449
1450 GOTO 1500
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" THEN GOTO 1995; REM "156580
1503 BYBINFO$[3]=TEMPLATE$ ! Reset in case template changed if dup found
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<buyer_name>002<password>003<buyer_email>004<buyer_email_actions>005<cc_number>006<cc_type>007<cc_name>008<cc_expire_month>009<cc_expire_year>010<attention>011<billto_name>012<billto_address1>013<billto_address2>014<billto_city>015<billto_state>016<billto_zip>017<default_po>018<new_buyer_password>019<new_buyer_name>020<new_buyer_email>021<new_buyer_email_actions>022<new_cc_number>023<new_cctype>024<new_ccname>025<new_cc_expire_month>026<new_cc_expire_year>027<new_attention>028<new_billto_name>029<new_billto_address1>030<new_billto_address2>031<new_billto_city>032<new_billto_state>033<new_billto_zip>034<new_default_po>035<requested_buyer_id>036<new_shipto_address1>037<new_shipto_address2>038<new_shipto_city>039<new_shipto_state>040<new_shipto_zip>041<new_shipto_phone>042<new_shipto_attn>043<new_shipto_email>044<new_shipto_salestaxcode>045<shipto_address1>046<shipto_address2>047<shipto_city>048<shipto_state>049<shipto_zip>050<shipto_phone>051<buyer_color_scheme>052<new_buyer_color_scheme>053<buyer_num_rows>054<new_buyer_num_rows>055<buyer_image_view>056<buyer_list_view>057<color_scheme_list>058<new_buyer_use_image_view>059<err_msg>060<catalog_list>061<new_shipto_name>"
1510 READ (100,END=1595)LINE$; GOSUB 7550
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1995 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2090
2001 LINE$=LINE1$+STP(ECA$(16,25),3," ")+LINE2$; GOTO 2095; REM "buyer_name
2002 LINE$=LINE1$+STP(ECA$(65,15),3," ")+LINE2$; GOTO 2095; REM "password
2003 LINE$=LINE1$+STP(ECA$(109,60),3," ")+LINE2$; GOTO 2095; REM "buyer_email
2004 LINE$=LINE1$+STP(ECA$(256,10),3," ")+LINE2$; GOTO 2095; REM "buyer_email_actions
2005 LINE$=LINE1$+STP(ECA$(497,20),3," ")+LINE2$; GOTO 2095; REM "cc_number"
2006 LINE$=LINE1$+ECA$(493,4)+LINE2$; GOTO 2095; REM "cc_type
2007 LINE$=LINE1$+STP(ECA$(521,40),3," ")+LINE2$; GOTO 2095; REM "cc_name
2008 LINE$=LINE1$+ECA$(517,2)+LINE2$; GOTO 2095; REM "cc_expire_month
2009 LINE$=LINE1$+ECA$(519,2)+LINE2$; GOTO 2095; REM "cc_expire_year
2010 LINE$=LINE1$+STP(ECA$(561,30),3," ")+LINE2$; GOTO 2095; REM "attention
2011 LINE$=LINE1$+STP(ECA$(745,35),3," ")+LINE2$; GOTO 2095; REM "billto_name
2012 LINE$=LINE1$+STP(ECA$(780,30),3," ")+LINE2$; GOTO 2095; REM "billto_address1
2013 LINE$=LINE1$+STP(ECA$(810,30),3," ")+LINE2$; GOTO 2095; REM "billto_address2"
2014 LINE$=LINE1$+STP(ECA$(840,16),3," ")+LINE2$; GOTO 2095; REM "billto_city
2015 LINE$=LINE1$+ECA$(856,2)+LINE2$; GOTO 2095; REM "billto_state
2016 LINE$=LINE1$+ECA$(858,9)+LINE2$; GOTO 2095; REM "billto_zip
2017 LINE$=LINE1$+ECA$(291,15)+LINE2$; GOTO 2095; REM "default_po
2018 LINE$=LINE1$+NEW_PASSWORD$+LINE2$; GOTO 2095; REM "new_buyer_password
2019 LINE$=LINE1$+NEW_BUYER_NAME$+LINE2$; GOTO 2095; REM "new_buyer_name
2020 LINE$=LINE1$+NEW_BUYER_EMAIL$+LINE2$; GOTO 2095; REM "new_buyer_email
2021 LINE$=LINE1$+NEW_BUYER_EMAIL_ACTIONS$+LINE2$; GOTO 2095; REM "new_buyer_email_actions
2022 LINE$=LINE1$+NEW_CC_NUMBER$+LINE2$; GOTO 2095; REM "new_cc_number
2023 LINE$=LINE1$+NEW_CCTYPE$+LINE2$; GOTO 2095; REM "new_cctype"
2024 LINE$=LINE1$+NEW_CCNAME$+LINE2$; GOTO 2095; REM "new_ccname
2025 LINE$=LINE1$+NEW_CC_EXPIRE_MONTH$+LINE2$; GOTO 2095; REM "new_cc_expire_month
2026 LINE$=LINE1$+NEW_CC_EXPIRE_YEAR$+LINE2$; GOTO 2095; REM "new_cc_expire_year
2027 LINE$=LINE1$+NEW_ATTENTION$+LINE2$; GOTO 2095; REM "new_attention
2028 LINE$=LINE1$+NEW_BILLTO_NAME$+LINE2$; GOTO 2095; REM "new_billto_name
2029 LINE$=LINE1$+NEW_BILLTO_ADDRESS1$+LINE2$; GOTO 2095; REM "new_billto_address1
2030 LINE$=LINE1$+NEW_BILLTO_ADDRESS2$+LINE2$; GOTO 2095; REM "new_billto_address2
2031 LINE$=LINE1$+NEW_BILLTO_CITY$+LINE2$; GOTO 2095; REM "new_billto_city
2032 LINE$=LINE1$+NEW_BILLTO_STATE$+LINE2$; GOTO 2095; REM "new_billto_state
2033 LINE$=LINE1$+NEW_BILLTO_ZIP$+LINE2$; GOTO 2095; REM "new_billto_zip
2034 LINE$=LINE1$+NEW_DEFAULT_PO$+LINE2$; GOTO 2095; REM "new_default_po
2035 LINE$=LINE1$+REQUESTED_BUYERID$+LINE2$; GOTO 2095; REM "requested_buyer_id
2036 LINE$=LINE1$+NEW_SHIPTO_ADDRESS1$+LINE2$; GOTO 2095 ! new_shipto_address1
2037 LINE$=LINE1$+NEW_SHIPTO_ADDRESS2$+LINE2$; GOTO 2095 ! new_shipto_address2
2038 LINE$=LINE1$+NEW_SHIPTO_CITY$+LINE2$; GOTO 2095 ! new_shipto_city
2039 LINE$=LINE1$+NEW_SHIPTO_STATE$+LINE2$; GOTO 2095 ! new_shipto_state
2040 LINE$=LINE1$+NEW_SHIPTO_ZIP$+LINE2$; GOTO 2095 ! new_shipto_zip
2041 LINE$=LINE1$+NEW_SHIPTO_PHONE$+LINE2$; GOTO 2095 ! new_shipto_phone
2042 LINE$=LINE1$+NEW_SHIPTO_ATTN$+LINE2$; GOTO 2095 ! new_shipto_attn
2043 LINE$=LINE1$+NEW_SHIPTO_EMAIL$+LINE2$; GOTO 2095 ! new_shipto_email
2044 LINE$=LINE1$+NEW_SHIPTO_SALESTAXCODE$+LINE2$; GOTO 2095 ! new_shipto_salestaxcode
2045 LINE$=LINE1$+STP(FM0$(51,30),1)+LINE2$; GOTO 2095 ! shipto_address1
2046 LINE$=LINE1$+STP(FM0$(81,30),1)+LINE2$; GOTO 2095 ! shipto_address2
2047 LINE$=LINE1$+STP(FM0$(111,16),1)+LINE2$; GOTO 2095 ! shipto_city
2048 LINE$=LINE1$+STP(FM0$(127,2),1)+LINE2$; GOTO 2095 ! shipto_state
2049 LINE$=LINE1$+STP(FN%ZZDISP$(FM0$(129,9),"ZIP"),1)+LINE2$; GOTO 2095 ! shipto_zip
2050 IF STP(FM0$(200,10),1)="" THEN PTMP$="" ELSE PTMP$=FM0$(200,3)+"-"+FM0$(203,3)+"-"+FM0$(206,4) END_IF ; LINE$=LINE1$+PTMP$+LINE2$; GOTO 2095 ! shipto_phone
2051 LINE$=LINE1$+STP(ECA$(1029,6),1)+LINE2$; GOTO 2095 ! WO189770, buyer_color_scheme
2052 LINE$=LINE1$+NEW_BUYER_COLOR_SCHEME$+LINE2$; GOTO 2095 ! WO189770, new_buyer_color_scheme
2053 LINE$=LINE1$+STP(ECA$(1035,3),1)+LINE2$; GOTO 2095 ! WO189770, buyer_num_rows
2054 LINE$=LINE1$+NEW_BUYER_NUM_ROWS$+LINE2$; GOTO 2095 ! WO189770, new_buyer_num_rows
2055 IMAGE_VIEW$=""; IF ECA$(1038,1)="Y" THEN IMAGE_VIEW$="Checked" END_IF ; LINE$=LINE1$+IMAGE_VIEW$+LINE2$; GOTO 2095 ! WO189770, buyer_image_view
2056 LIST_VIEW$=""; IF ECA$(1038,1)<>"Y" THEN LIST_VIEW$="Checked" END_IF ; LINE$=LINE1$+LIST_VIEW$+LINE2$; GOTO 2095 ! WO189770, buyer_list_view
2057 GOSUB CREATE_COLOR_SCHEME_LIST; LINE$=LINE1$+CS_LIST$+LINE2$; GOTO 2095 ! WO189770, color_scheme_list
2058 LINE$=LINE1$+NEW_BUYER_USE_IMAGE_VIEW$+LINE2$; GOTO 2095 ! WO189770, new_buyer_use_image_view
2059 LINE$=LINE1$+ERR_MSG$+LINE2$; GOTO 2095; REM "err_msg
2060 IF IS_ADMIN$="Y" THEN GOSUB GET_CATALOG_LIST; END_IF ; LINE$=LINE1$+CAT_DESC_LIST$+LINE2$; GOTO 2095; REM "catalog_list
2061 LINE$=LINE1$+NEW_SHIPTO_NAME$+LINE2$; GOTO 2095 ! new_shipto_name, SSP231577
2090 LINE$=LINE1$+"?"+LINE2$; GOTO 2095; REM "tag not found, replace with '?'
2095 RETURN 
3000 REM "Read customer data into AR1$
3010 DIM AR1$(600); READ (Z[2],KEY=CUST_CODE$,DOM=*NEXT)AR1$
3015 CALL "ZZDISP","AX",CUST_CODE$,"A/R",X3$,CUST_CODE$,"",0,0,X4$
3020 DIM FMP$(243); READ (Z[4],KEY="D"+CUST_CODE$,DOM=*NEXT)FMP$; REM "Customer default record
3045 RETURN 
7500 REM "publish catalog
7501 EXTRACT (Z(1),KEY=ECA$(1,15),DOM=7540)IOL=0310
7502 DIM UT4OPTIONS$(50)
7504 IF ECA$(61,4)=DIM(4) THEN UT4OPTIONS$(16,1)="Y"
7505 UT4OPTIONS$(1,1)="N"
7506 CALL "EC3UT4",X3$,X4$,ECA$(1,15),CATEGORIES$,UT4OPTIONS$
7508 ECA2$=CATEGORIES$
7530 WRITE (Z(1),KEY=ECA$(1,15))IOL=0310
7540 RETURN 
7550 REM "Send LINE$ to EC3BYB for generic fields processing
7560 CALL "EC3BYB",ERR=7561,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100 ! 227154
7595 RETURN 
7600 SETUP_SHIPTO:! If new buyer setup successful, and they entered shipto info, then get next shipto code for this customer and setup new shipto
7605 READ (Z[3],KEY=FM0$(1,11)+$FF$,DOM=*NEXT)
7610 PREV_KEY_1$=KEP(Z[3],END=*NEXT); GOTO 7620
7615 FM0$(12,4)="0001"; GOTO WRITE_NEW_SHIPTO; REM "if here, we found beginning of file so assign first number
7620 IF PREV_KEY_1$(1,11)<>FM0$(1,11) THEN FM0$(12,4)="0001"; GOTO WRITE_NEW_SHIPTO; REM "if here there are no shiptos for this customer so use the first one
7625 REM "if here we have the last one used in prev_key_1$(12,4), increment it
7630 IF PREV_KEY_1$(12,4)="ZZZZ" THEN RET_CODE=4,MESSAGE$="No higher shipto code can be generated."; GOTO *RETURN ELSE FM0$(12,4)=PREV_KEY_1$(12,4)
7650 FM0$(12,4)=FN%NEXT_SEQ$(FM0$(12,4),6) ! SSP181091, use function to get next shipto code, seq_type=6, 0-9, A-Z
7655 ! 
7660 WRITE_NEW_SHIPTO:! Figured out a shipto code to use, now do the setup
7665 WRITE (Z[3],KEY=FM0$(1,15),DOM=7605)IOL=0320
7670 EXTRACT (Z[3],KEY=FM0$(1,15))IOL=0320
7674 SET_BUYER_ENTERED_FIELDS:
7675 IF STP(NEW_SHIPTO_ADDRESS1$,3)>"" THEN FM0$(51,30)=STP(NEW_SHIPTO_ADDRESS1$,2)
7680 IF STP(NEW_SHIPTO_ADDRESS2$,3)>"" THEN FM0$(81,30)=STP(NEW_SHIPTO_ADDRESS2$,2)
7685 IF STP(NEW_SHIPTO_CITY$,3)>"" THEN FM0$(111,16)=STP(NEW_SHIPTO_CITY$,2)
7690 IF STP(NEW_SHIPTO_STATE$,3)>"" THEN FM0$(127,2)=UCS(STP(NEW_SHIPTO_STATE$,2))
7695 IF STP(NEW_SHIPTO_ZIP$,3)>"" THEN FM0$(129,9)=STP(NEW_SHIPTO_ZIP$,3,"-")
7700 IF STP(NEW_SHIPTO_PHONE$,3)>"" THEN FM0$(200,14)=STP(NEW_SHIPTO_PHONE$,3,"-")
7705 IF STP(NEW_SHIPTO_ATTN$,3)>"" THEN FM0$(160,20)=STP(NEW_SHIPTO_ATTN$,2) ELSE IF ACTION$="N" THEN FM0$(160,20)=STP(NEW_BUYER_NAME$,2)
7710 IF STP(NEW_SHIPTO_EMAIL$,3)>"" THEN FM0$(522,40)=STP(NEW_SHIPTO_EMAIL$,2) ELSE IF ACTION$="N" THEN FM0$(522,40)=NEW_BUYER_EMAIL$
7715 IF STP(NEW_SHIPTO_SALESTAXCODE$,3)>"" THEN STC$=PAD(STP(NEW_SHIPTO_SALESTAXCODE$,3,"-"),10); READ (Z[8],KEY=STC$,DOM=*NEXT); FM0$(224,10)=STC$
7719 IF ACTION$="U" THEN GOTO DONE_FILLING_OUT_FM0
7720 FM0$(16,35)=AR1$(11,35) ! Description
7725 IF STP(NEW_SHIPTO_NAME$,3)>"" THEN FM0$(248,35)=STP(NEW_SHIPTO_NAME$,2) ELSE FM0$(248,35)=AR1$(11,35) ! Name, SSP231577, new tag for name
7730 FM0$(214,9)=FM0$(12,4) ! Location code
7735 FM0$(288,1)=FMP$(28,1) ! FOB
7740 FM0$(289,1)=FMP$(29,1) ! How to ship
7745 FM0$(290,15)=FMP$(30,15) ! Inside delivery
7750 FM0$(305,1)=FMP$(45,1) ! Ship via code
7755 IF FM0$(305,1)<>DIM(1) THEN READ (Z[4],KEY="S"+FM0$(305,1),DOM=*NEXT)SV$; FM0$(306,15)=SV$(3,15) ! Ship via description
7760 IF FMP$(24,1)="Y" THEN FM0$(223,1)="I" ! FMS method
7765 FM0$(150,10)=AR1$(155,10) ! Lookup sequence
7770 FM0$(382,20)=FM0$(12,4) ! Receiving department
7780 DONE_FILLING_OUT_FM0:
7785 GOSUB WRITE_SHIPTO_RECORDS
7790 RETURN 
7795 ! 
8000 WRITE_SHIPTO_RECORDS:
8005 WRITE (Z[3],KEY=FM0$(1,15))IOL=0320
8010 WRITE (Z[5],KEY=FM0$(1,11)+FM0$(214,9)+FM0$(12,4)); REM "FMM
8015 WRITE (Z[6],KEY=FM0$(200,10)+FM0$(1,15)); REM "ASR
8020 WRITE (Z[7],KEY=FM0$(129,9)+FM0$(2,10)+FM0$(12,4)); REM "ASH
8025 IF POS(OP_PARM$(279,1)="YF")<>0 THEN WRITE (Z[9],KEY=FM0$(1,11)+FM0$(382,20)+FM0$(12,4)) ! FTD
8030 RETURN 
8035 ! 
8050 REMOVE_SORTS:
8055 REMOVE (Z[6],KEY=FM0$(200,10)+FM0$(1,15),DOM=*NEXT) ! ASR
8060 REMOVE (Z[7],KEY=FM0$(129,9)+FM0$(2,10)+FM0$(12,4),DOM=*NEXT) ! ASH
8065 REMOVE (Z[5],KEY=FM0$(1,11)+FM0$(214,9)+FM0$(12,4),DOM=*NEXT) ! FMM
8070 REMOVE (Z[9],KEY=FM0$(1,11)+FM0$(382,20)+FM0$(12,4),DOM=*NEXT) ! FTD
8090 RETURN 
8095 ! 
8100 CREATE_COLOR_SCHEME_LIST:
8105 CS_LIST$=""
8110 IF POS("<!"=LINE1$,-1)>1 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1) ! Remove start of comment if there
8115 ! 
8120 IF ECA$(1029,6)=DIM(6) THEN CS_LIST$="<option selected value="+QUO+DIM(6)+QUO+">Default</option>" ELSE CS_LIST$="<option value="+QUO+DIM(6)+QUO+">Default</option>" ! Standard is blank, this needs to be the first on the list, if this matches the current for the buyer, then select
8125 READ (Z[10],KEY="",DOM=*NEXT,END=DONE_WITH_EE2)
8130 GET_EE2: K$=KEY(Z[10],END=DONE_WITH_EE2); READ (Z[10],KEY=K$)EE2$
8135 IF K$=ECA$(1029,6) THEN CS_LIST$+="<option selected value="+QUO+EE2$(1,6)+QUO+">"+STP(EE2$(7,35),1)+"</option>" ELSE CS_LIST$+="<option value="+QUO+EE2$(1,6)+QUO+">"+STP(EE2$(7,35),1)+"</option>"
8140 GOTO GET_EE2
8145 ! 
8150 DONE_WITH_EE2:
8160 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN CS_LIST$=CS_LIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
8170 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2) ! if token was part of a comment, then remove the end of the comment.
8195 RETURN 
8199 ! 
8200 SET_CATALOG_LIST:
8204 IF NUL(CATALOG_LIST$) THEN GOTO *RETURN
8205 CAT_COUNT=0,CAT_LAST=0,CAT_START=1; DIM CAT_LIST$[100]
8210 CAT_START=CAT_START+CAT_END; CAT_END=POS(","=CATALOG_LIST$(CAT_START))
8215 IF CAT_END=0 THEN CAT_LAST=1,CAT_CURR$=CATALOG_LIST$(CAT_START) ELSE CAT_CURR$=MID(CATALOG_LIST$,CAT_START,CAT_END-1)
8220 CAT_CURR$=PAD(STP(CAT_CURR$,2),10); FIND (Z[11],KEY=CAT_CURR$,DOM=*NEXT); CAT_LIST$[++CAT_COUNT]=CAT_CURR$
8230 IF CAT_LAST THEN GOTO *NEXT ELSE GOTO 8210
8235 ECA_CAT_COUNT=0
8240 IF CAT_COUNT>0 THEN ECA$(325,10)=CAT_LIST$[1]; ECA$(626,100)="" ELSE GOTO *RETURN
8245 FOR I=1 TO CAT_COUNT
8250 IF ECA_CAT_COUNT>=10 THEN GOTO *BREAK
8255 IF POS(CAT_LIST$[I]=ECA$(626,100),10)=0 THEN ++ECA_CAT_COUNT; ECA$(626+((ECA_CAT_COUNT-1)*10),10)=CAT_LIST$[I]
8260 NEXT I
8285 IF ECA_CAT_COUNT<10 THEN FOR I=ECA_CAT_COUNT+1 TO 10; ECA$(626+((I-1)*10),10)=DIM(10); NEXT I
8295 RETURN 
8299 ! 
8300 GET_CATALOG_LIST:
8315 IF NUL(MID(ECA$,626,100)) THEN GOTO *RETURN
8320 FOR I=1 TO 10
8325 DIM EDA$(113); FIND (Z[11],KEY=ECA$(626+((I-1)*10),10),DOM=*NEXT)EDA$
8330 IF NOT(NUL(EDA$(11,30))) THEN CAT_DESC_LIST$=CAT_DESC_LIST$+", "+STP(EDA$(11,30),2)
8335 NEXT I
8340 CAT_DESC_LIST$=STP(CAT_DESC_LIST$,0,",")
8345 RETURN 
8349 ! 
8400 REM "Setup new customer, use current customer for template
8401 SETUP_CUSTOMER:
8402 FIND (Z[13],KEY=X3$(9,3)+"A/R",DOM=ERR_PARM,ERR=ERR_PARM)ARPARM$; CODE_LEN=NUM(ARPARM$(14,1),ERR=ERR_PARM)
8403 GOSUB CHECK_DUP_CUSTOMER; IF DUP_CUST$="Y" THEN GOTO ERR_DUP_CUST ! 209901
8405 READ (Z[2],KEY=CUST_CODE$(1,2)+"EC"+$FF$,DOM=*NEXT)
8410 PREV_KEY_2$=KEP(Z[2],END=*NEXT); GOTO 8420
8415 PREV_KEY_2$=PAD(CUST_CODE$(1,2)+"EC",CODE_LEN,"0")
8420 IF PREV_KEY_2$(1,4)<>CUST_CODE$(1,2)+"EC" THEN PREV_KEY_2$=CUST_CODE$(1,2)+PAD("EC",CODE_LEN,"0") REM "if here there are no "EC" customers so use the first one
8425 REM "if here we have the last one used in prev_key_2$(5,..), increment it
8430 IF PREV_KEY_2$(5,CODE_LEN-2)=DIM(CODE_LEN-2,"Z") THEN GOTO ERR_CUST_CODE
8450 PREV_KEY_2$(5,CODE_LEN-2)=FN%NEXT_SEQ$(PREV_KEY_2$(5,CODE_LEN-2),6) ! Get next customer code, seq_type=6, 0-9, A-Z
8460 NEW_CUST_CODE$=PAD(PREV_KEY_2$,10,"0")
8465 CUST_OPTIONS$=CUST_CODE$+NEW_CUST_CODE$
8470 CALL "AR2MCP",ERR=ERR_COPY_CUST,X3$,X4$,CUST_OPTIONS$,"EC3AC0"
8475 DIM AR1$(600),AR1[15]; READ (Z[2],KEY=NEW_CUST_CODE$,ERR=ERR_COPY_CUST)IOL=0330
8480 GOSUB REMOVE_CUST_SORTS
8490 EXTRACT (Z[2],KEY=NEW_CUST_CODE$,ERR=ERR_COPY_CUST)IOL=0330
8494 AR1$(229,6)=X3$(21,6),AR1$(373,6)=X3$(21,6),AR1$(379,6)=X3$(21,6),AR1$(385,6)=X3$(21,6),AR1$(391,6)=X3$(21,6) ! Account setup date, Credit limit date, Last active date, High credit date,Aged as of date
8495 FOR II=6 TO 13 ! Clear open and account balances
8496 AR1[II]=0
8497 NEXT II
8501 IF NOT(NUL(NEW_CUST_NAME$)) THEN AR1$(11,35)=NEW_CUST_NAME$
8502 IF NOT(NUL(NEW_CUST_ADDRESS1$)) THEN AR1$(56,30)=NEW_CUST_ADDRESS1$
8503 IF NOT(NUL(NEW_CUST_ADDRESS2$)) THEN AR1$(86,30)=NEW_CUST_ADDRESS2$
8504 IF NOT(NUL(NEW_CUST_CITY$)) THEN AR1$(116,16)=NEW_CUST_CITY$
8505 IF NOT(NUL(NEW_CUST_STATE$)) THEN AR1$(132,2)=NEW_CUST_STATE$
8506 IF NOT(NUL(NEW_CUST_ZIP$)) THEN AR1$(134,9)=NEW_CUST_ZIP$
8507 IF NOT(NUL(NEW_CUST_LOOKUP$)) THEN AR1$(155,10)=UCS(NEW_CUST_NAME$)
8508 IF NOT(NUL(NEW_CUST_PHONE$)) THEN AR1$(205,14)=NEW_CUST_PHONE$
8580 GOSUB WRITE_CUST_RECORDS
8585 CUST_CODE$=NEW_CUST_CODE$
8589 RETURN 
8590 ERR_PARM: ERR_MSG$="ERR: System parameters not found."; TEMPLATE$=ERR_TEMPLATE$; EXITTO 1500
8591 ERR_CUST_CODE: ERR_MSG$="ERR: No higher customer code can be generated."; TEMPLATE$=ERR_TEMPLATE$; EXITTO 1500
8592 ERR_COPY_CUST: ERR_MSG$="ERR: Could not setup a new customer profile. Error was - "+CUST_OPTIONS$; TEMPLATE$=ERR_TEMPLATE$; EXITTO 1500
8593 ERR_DUP_CUST: ERR_MSG$="ERR: Customer already exists for given zip code and phone number."; TEMPLATE$=ERR_TEMPLATE$; EXITTO 1500 ! 209901
8599 ! 
8600 WRITE_CUST_RECORDS:
8603 WRITE (Z[2],KEY=NEW_CUST_CODE$)IOL=0330
8605 WRITE (Z[15],KEY=AR1$(155,10)+NEW_CUST_CODE$); REM "ARE
8610 WRITE (Z[16],KEY=AR1$(278,4)+NEW_CUST_CODE$); REM "ARU
8615 WRITE (Z[17],KEY=AR1$(205,ARWPHONELEN)+NEW_CUST_CODE$); REM "ARW
8620 WRITE (Z[7],KEY=AR1$(134,9)+NEW_CUST_CODE$+DIM(4)); REM "ASH
8625 WRITE (Z[18],KEY=AR1$(411,20)+NEW_CUST_CODE$); REM "AS8
8695 RETURN 
8699 ! 
8700 REMOVE_CUST_SORTS:
8705 REMOVE (Z[15],KEY=AR1$(155,10)+NEW_CUST_CODE$,DOM=*NEXT); REM "ARE
8710 REMOVE (Z[16],KEY=AR1$(278,4)+NEW_CUST_CODE$,DOM=*NEXT); REM "ARU
8715 REMOVE (Z[17],KEY=AR1$(205,ARWPHONELEN)+NEW_CUST_CODE$,DOM=*NEXT); REM "ARW
8720 REMOVE (Z[7],KEY=AR1$(134,9)+NEW_CUST_CODE$+DIM(4),DOM=*NEXT); REM "ASH
8725 REMOVE (Z[18],KEY=AR1$(411,20)+NEW_CUST_CODE$,DOM=*NEXT); REM "AS8
8745 RETURN 
8749 ! 
8750 CHECK_DUP_CUSTOMER:
8751 REM "Checks if a customer already exists with given phone number and zip code - 209901
8755 DUP_CUST$="N"
8760 IF NUL(NEW_CUST_PHONE$) OR NUL(NEW_CUST_ZIP$) THEN GOTO CHECK_DC_DONE
8762 READ (Z[17],KEY=MID(NEW_CUST_PHONE$,1,ARWPHONELEN),DOM=*NEXT)
8764 NEXT_ARW_REC: KARW$=KEY(Z[17],END=CHECK_DC_DONE); READ (Z[17],KEY=KARW$); IF MID(KARW$,1,ARWPHONELEN)<>MID(NEW_CUST_PHONE$,1,ARWPHONELEN) THEN GOTO CHECK_DC_DONE
8766 ARWCUSTCD$=MID(KARW$,ARWPHONELEN+1,10)
8768 FIND (Z[7],KEY=PAD(NEW_CUST_ZIP$,9)+ARWCUSTCD$+DIM(4),DOM=*NEXT); DUP_CUST$="Y"; GOTO CHECK_DC_DONE
8770 GOTO NEXT_ARW_REC
8790 CHECK_DC_DONE:
8795 RETURN 
8799 ! 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 REM FOR I=1 TO 20; IF Z[I]<>0 THEN CLOSE (Z[I]) FI; NEXT I
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56000 ! Program changes starting 02/16/06
56010 REM "189770-Buyer ability to change new settings using On-Line Account
56012 REM "201034-Get buyer info from Harley Webservice, setup buyer and ship 
56013 REM "209900- Modify Webec to allow user to browse catalog
56014 REM "209901-System check to prevent duplicate customer registration
56015 REM "227154-Modify EC3BYB to support a condition tag : ?tf?if?[expr]    
56016 REM "231577-See 231473 and 231512 also.  Add tag for shipto name, EC3AC0
