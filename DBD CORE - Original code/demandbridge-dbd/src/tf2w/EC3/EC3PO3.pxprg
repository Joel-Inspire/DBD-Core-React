0010 REM "EC Order Shipping Info <EC3PO3>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 09/17/20 - 17.441388 - dmm - SSP# 307302
0037 REM "307302-DBD-126;EC3PO1/3; if country is blank, use default          
0040 REM "Copyright 2020 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0085 SWITCH TCB(20) ! Number of param in CALL
0090 CASE 7; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT; BREAK ! Standard Webec call entry point, from EC3SRV
0091 CASE 8; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},PO3_KEY$,OPTIONS$,LINE$; BREAK ! Internal program call entry point, from non-EC3SRV programs
0095 CASE 11; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},PO3_KEY$,OPTIONS$,LINE_START_TAG$,LINE$,LINE_END_TAG$,SHIP_STAT${ALL}; BREAK ! Internal program call entry point, from non-EC3SRV programs
0099 END SWITCH 
0100 SETERR 9000
0110 X0$="EC3PO3",X1$="EC Order Shipping Info"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0140 DIM MESS_INFO$[20]
0299 ! 
0300 REM "IOLISTS
0310 IOL_PO3:IOLIST PO3$,PO3{ALL}
0320 IOL_UOM:IOLIST UM$,UM{ALL}
0330 IOL_FS2:IOLIST FS2$,FS2{ALL}
0399 ! 
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O PO3...  02O FS2...  03O PO2...  04O FMP...  05O XM0...  06O FM0...  07O FS1...  08O SH5...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0570 DIM OP_PARM$(513); FIND (Z[13],KEY=X3$(9,3)+"F/M",DOM=*NEXT)OP_PARM$(1) ! SSP307302-DBD-126
0571 DEFAULT_COUNTRY$=MID(OP_PARM$,344,2) ! SSP307302-DBD-126
0572 IF STP(DEFAULT_COUNTRY$)="" THEN DEFAULT_COUNTRY$="US" ! SSP307302-DBD-126
0600 ! Set Masks
0610 COUNT_MASK$="###",M0$="########0",SELL_DIVISOR=1
0699 ! 
1000 REM "Process DATA array
1005 IF NOT(OUTPUT) THEN GOTO 1200 ! called mode, skip to main processing
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1025 SWITCH TAG$ ! 1185 end switch
1180 DEFAULT ; VIA TAG$=VALUE$; BREAK ! Set to same name variable as TAG$
1185 END SWITCH ! 1050
1190 NEXT I
1195 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="2569047.20140318",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1199 ! 
1200 ! Get info
1205 GOSUB SET_READONLY
1295 MX=FN%_LOG_MESSAGE("MESG","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|EC3PO3|PO3 KEY|"+PO3_KEY$+"|")
1495 IF NOT(OUTPUT) THEN GOTO 1515 ! called mode, skip reading in the template file from disk, use passed in template snippet line$ instead
1499 ! 
1500 ! Fill out template
1504 IF NOT(NUL(%BASIC2$)) THEN GOTO 2990 ! Skip outputting template if additional program to be done
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1510 READ (100,END=*NEXT)TMP_LINE$; LINE$+=FNBYB$(TMP_LINE$)+EOL$; GOTO *SAME
1595 ! 
1600 IF NUL(LINE_START_TAG$) THEN LINE_START_TAG$="?tf?sslinestart?"
1602 IF NUL(LINE_END_TAG$) THEN LINE_END_TAG$="?tf?sslineend?"
1615 CHKTAG=1
1620 WHILE CHKTAG ! 2800 wend
1622 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
1630 TAG$=LINE$(P1,MSL); LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
1633 T_IN=POS("."=TAG$); IF T_IN THEN TAG_PARM$=MID(TAG$,T_IN+1),TAG$=MID(TAG$,1,T_IN-1) ELSE TAG_PARM$=""
1700 SWITCH TAG$ ! 2790 end switch
1730 CASE LINE_START_TAG$; GOSUB PROCESS_PO3_LINE; PP=FNP(PO3_SECTION$); BREAK
2785 DEFAULT ; LINE$=LINE1$+LINE2$ ! didn't match existing tag, so discard it
2790 END SWITCH ! 1700
2800 WEND ! 1620
2955 IF (OUTPUT) THEN PRINT (OUTPUT)LINE$
2985 GOSUB CLEAR_READONLY
2990 GOTO 9900
2999 ! 
6000 PROCESS_PO3_LINE:
6003 PO3_TAGS$="001<ctn_label_item_code>002<exported_to_ship>003<whse_code>004<order_line_num>005<seq_num>006<loc_type>007<loc_code>008<loc_attn>009<loc_addr_1>010<loc_addr_2>011<loc_city>012<loc_st>013<loc_zip_code>014<fob_code>015<how_to_ship_code>016<inside_delivery>017<ship_via_code>018<ship_with>019<po_div>020<po_num>021<mark_for>022<ship_via_desc>023<loc_cust_name>024<cost_code>025<stax_code>026<tax>027<carton_label_2>028<number_carton_2nd_lbl>029<vendor_div>030<vendor_code>031<plant_code>032<email_address>033<drop_ship>034<will_call>035<ship_acct_num>036<acct_num>037<bill_m>038<shipper_id>039<ship_qty_in_eaches>040<num_of_labels>041<recvd_to_date>042<recv_now_amt>043<how_to_ship_desc>044<fob_desc>045<ship_qty>046<order_num>047<ship_state_code>048<ship_state_msg>049<ship_change_status>050<ship_change_status_msg>051<vendor_ship_via>052<cust_loc_code>053<recvg_dept>054<sh5_shipper_id>055<loc_country>"
6005 PO3_SECTION$="",PO3_TEMPLATE$=LINE2$,SS_I=0,SS_S=0
6010 PO3_END=POS(LINE_END_TAG$=PO3_TEMPLATE$),PO3_TEMPLATE$=PO3_TEMPLATE$(1,PO3_END-1),LINE2$=LINE2$(PO3_END+LEN(LINE_END_TAG$))
6013 READ (Z[1],KEY=PAD(PO3_KEY$,13),DOM=*NEXT); GEN_SHIP_MODE=1; NEXT_PO3K$=KEC(Z[1]); GOTO 6018 ! Position for first PO3 record for specified order line; If general shipping mode detected, then process only general shipping record
6016 NEXT_PO3K$=KEY(Z[1],END=6195); IF MID(NEXT_PO3K$,1,LEN(STP(PO3_KEY$)))<>STP(PO3_KEY$) THEN GOTO 6195 ! Done with all available PO3 records that match given PO3 key
6017 GOSUB GET_ORDER_LINE_INFO
6018 DIM PO3$(430),PO3[3]; READ (Z[1],KEY=NEXT_PO3K$,DOM=ERR_SHIP_POINT)IOL=IOL_PO3; GOSUB GET_ORDER_HEADER_INFO; GOSUB GET_FM0C; GOSUB GET_SH5_SHIPPER_ID ! SSP290559
6019 IF NOT(GEN_SHIP_MODE) THEN SS_I=NUM(PO3$(7,3)); SS_S=NUM(FNN$(PO3$(10,1)))
6020 PO3_LINE$=PO3_TEMPLATE$
6025 PO3_INDEX=POS("?tf?"=PO3_LINE$); IF PO3_INDEX=0 THEN GOTO 6185
6030 PO3END_INDEX=POS("?"=PO3_LINE$(PO3_INDEX+4)),PO3_TAG$=PO3_LINE$(PO3_INDEX+4,PO3END_INDEX-1),SS1$=PO3_LINE$(1,PO3_INDEX-1),SS2$=PO3_LINE$(PO3_INDEX+PO3END_INDEX+4),PO3_POS=POS("<"+PO3_TAG$+">"=PO3_TAGS$); IF PO3_POS=0 THEN PO3_LINE$=SS1$+SS2$,PO3_INDEX=0 ELSE PO3_INDEX=NUM(PO3_TAGS$(PO3_POS-3,3))
6035 ON PO3_INDEX GOTO 6179,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6179
6041 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(1,1)))+SS2$; GOTO 6180; REM "ctn_label_item_code
6042 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(2,1)))+SS2$; GOTO 6180; REM "exported_to_ship
6043 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(3,4)))+SS2$; GOTO 6180; REM "whse_code
6044 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(7,3)))+SS2$; GOTO 6180; REM "order_line_num
6045 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(10,1)))+SS2$; GOTO 6180; REM "seq_num
6046 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(11,1)))+SS2$; GOTO 6180; REM "loc_type
6047 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(12,4)))+SS2$; GOTO 6180; REM "loc_code
6048 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(16,30)))+SS2$; GOTO 6180; REM "loc_attn
6049 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(46,30)))+SS2$; GOTO 6180; REM "loc_addr_1
6050 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(76,30)))+SS2$; GOTO 6180; REM "loc_addr_2
6051 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(106,16)))+SS2$; GOTO 6180; REM "loc_city
6052 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(122,2)))+SS2$; GOTO 6180; REM "loc_st
6053 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(124,9)))+SS2$; GOTO 6180; REM "loc_zip_code
6054 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(133,1)))+SS2$; GOTO 6180; REM "fob_code
6055 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(134,1)))+SS2$; GOTO 6180; REM "how_to_ship_code
6056 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(135,15)))+SS2$; GOTO 6180; REM "inside_delivery
6057 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(150,1)))+SS2$; GOTO 6180; REM "ship_via_code
6058 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(151,15)))+SS2$; GOTO 6180; REM "ship_with
6059 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(166,2)))+SS2$; GOTO 6180; REM "po_div
6060 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(168,7)))+SS2$; GOTO 6180; REM "po_num
6061 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(175,35)))+SS2$; GOTO 6180; REM "mark_for
6062 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(210,15)))+SS2$; GOTO 6180; REM "ship_via_desc
6063 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(225,35)))+SS2$; GOTO 6180; REM "loc_cust_name
6064 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(260,9)))+SS2$; GOTO 6180; REM "cost_code
6065 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(269,10)))+SS2$; GOTO 6180; REM "stax_code
6066 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(279,1)))+SS2$; GOTO 6180; REM "tax
6067 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(280,1)))+SS2$; GOTO 6180; REM "carton_label_2
6068 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(281,4)))+SS2$; GOTO 6180; REM "number_carton_2nd_lbl
6069 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(285,2)))+SS2$; GOTO 6180; REM "vendor_div
6070 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(287,8)))+SS2$; GOTO 6180; REM "vendor_code
6071 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(295,4)))+SS2$; GOTO 6180; REM "plant_code
6072 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(299,40)))+SS2$; GOTO 6180; REM "email_address
6073 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(339,1)))+SS2$; GOTO 6180; REM "drop_ship
6074 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(340,1)))+SS2$; GOTO 6180; REM "will_call
6075 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(341,6)))+SS2$; GOTO 6180; REM "ship_acct_num
6076 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(347,15)))+SS2$; GOTO 6180; REM "acct_num
6077 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(362,1)))+SS2$; GOTO 6180; REM "bill_m
6078 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(363,20)))+SS2$; GOTO 6180; REM "shipper_id
6079 PO3_LINE$=SS1$+STR(PO3[0])+SS2$; GOTO 6180; REM "ship_qty_in_eaches
6080 PO3_LINE$=SS1$+STR(PO3[1])+SS2$; GOTO 6180; REM "num_of_labels
6081 PO3_LINE$=SS1$+STR(PO3[2])+SS2$; GOTO 6180; REM "recvd_to_date
6082 PO3_LINE$=SS1$+STR(PO3[3])+SS2$; GOTO 6180; REM "recv_now_amt
6083 HTS_CODE$=PO3$(134,1); GOSUB GET_HOW_TO_SHIP_DESC; PO3_LINE$=SS1$+FN%HTML_ESC$(STP(HTS_DESC$))+SS2$; GOTO 6180; REM "how_to_ship_desc
6084 FOB_CODE$=PO3$(133,1); GOSUB GET_FOB_DESC; PO3_LINE$=SS1$+FN%HTML_ESC$(STP(FOB_DESC$))+SS2$; GOTO 6180; REM "fob_desc
6085 PO3_LINE$=SS1$+STR(PO3[0]/SELL_DIVISOR)+SS2$; GOTO 6180; REM "ship_qty
6086 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(PO3$(1,8)))+SS2$; GOTO 6180; REM "order_num
6087 IF NUL(SHIP_STAT$[SS_I,SS_S,0]) THEN SHIP_STAT$[SS_I,SS_S,0]="0" END_IF ; PO3_LINE$=SS1$+SHIP_STAT$[SS_I,SS_S,0]+SS2$; GOTO 6180; REM "ship_state_code
6088 IF NUL(SHIP_STAT$[SS_I,SS_S,1]) THEN SHIP_STAT$[SS_I,SS_S,1]="Open" END_IF ; PO3_LINE$=SS1$+SHIP_STAT$[SS_I,SS_S,1]+SS2$; GOTO 6180; REM "ship_state_msg
6089 PO3_LINE$=SS1$+SHIP_STAT$[SS_I,SS_S,2]+SS2$; GOTO 6180; REM "ship_change_status
6090 PO3_LINE$=SS1$+SHIP_STAT$[SS_I,SS_S,3]+SS2$; GOTO 6180; REM "ship_change_status_msg
6091 GOSUB GET_VENDOR_SHIP_VIA; PO3_LINE$=SS1$+FN%HTML_ESC$(STP(VENDOR_SHIP_VIA$))+SS2$; GOTO 6180 ! SSP289557, vendor_ship_via
6092 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(FM0C$(214,9)))+SS2$; GOTO 6180 ! SSP290559, cust_loc_code
6093 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(FM0C$(382,20)))+SS2$; GOTO 6180 ! SSP290559, recvg_dept
6094 PO3_LINE$=SS1$+FN%HTML_ESC$(STP(SH5$(16,20)))+SS2$; GOTO 6180 ! WO290352, sh5_shipper_id
6095 COUNTRY$=STP(PO3$(383,2)); IF STP(COUNTRY$)="" THEN COUNTRY$=DEFAULT_COUNTRY$ END_IF ; PO3_LINE$=SS1$+FN%HTML_ESC$(STP(COUNTRY$))+SS2$; GOTO 6180; REM "loc_country SSP307210-DBD-63 SSP307302-DBD-126
6179 SS$=SS1$+"?tf?"+PO3_TAG$+"?"+SS2$; GOTO 6180 ! Leave unknown tags unchanged
6180 GOTO 6025
6185 PO3_SECTION$+=PO3_LINE$
6190 IF NOT(GEN_SHIP_MODE) THEN GOTO 6015
6195 RETURN 
6199 ! 
7000 GET_VENDOR_SHIP_VIA:! Look up ship via (REAL_SHIP_VIA$) in XM0 to get vendor's ship via code. SSP289557, same as EC3PO1
7005 VENDOR_SHIP_VIA$="",REAL_SHIP_VIA$=PO3$(150,1),FS2_VENDOR$=FS2$(94,10)
7010 DIM XM0$:IOL(Z[5]); READ DATA FROM DIM(LEN(XM0$)),REC=XM0$ TO IOL=IOL(XM0$); FIND (Z[5],KEY=FS2_VENDOR$+REAL_SHIP_VIA$,KNO=1,DOM=*RETURN,REC=XM0$)
7040 VENDOR_SHIP_VIA$=STP(XM0.VEND_SHIP_VIA_CODE$)
7045 RETURN 
7049 ! ***********************************************************
7050 GET_FM0C:! SSP290559
7060 DIM FM0C$(618)
7065 IF PO3$(11,1)<>"C" THEN RETURN 
7070 FIND (Z[6],KEY="C"+FS1$(6,10)+PO3$(12,4),DOM=*RETURN)FM0C$(1)
7095 RETURN 
7099 ! 
7100 GET_ORDER_HEADER_INFO:! SSP290559
7110 DIM FS1$(606); FIND (Z[7],KEY=MID(NEXT_PO3K$,1,8),DOM=*RETURN)FS1$(1)
7145 RETURN 
7149 ! 
7150 GET_SH5_SHIPPER_ID:! WO290352
7160 DIM SH5$(36); FIND (Z[8],KEY=FS1$(6,10)+PO3$(12,4)+PO3$(150,1),DOM=*RETURN)SH5$(1)
7195 RETURN 
7199 ! 
7600 SET_READONLY:
7610 SET_PARAM 'XI'
7620 SET_READONLY_END:RETURN 
7630 CLEAR_READONLY:
7640 SET_PARAM -'XI'
7645 CLEAR_READONLY_END:RETURN 
7649 ! 
8000 ! Caught errors
8010 ERR_SHIP_POINT: MX=FN%_LOG_MESSAGE("EXCP","SESSION_ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|EC3PO3|SHIP POINT NOT FOUND|PO3 KEY|"+NEXT_PO3K$+"|"); GOTO 9900
8099 ! 
8400 GET_ORDER_LINE_INFO:
8405 SELL_DIVISOR=1
8415 DIM UM$(22),UM[5]; FIND (Z[13],KEY="U/M"+PAD(SELL_UNIT$,4),DOM=*NEXT)IOL=IOL_UOM
8425 DIM FS2$(300),FS2[29]; READ (Z[2],KEY=MID(NEXT_PO3K$,1,8)+MID(NEXT_PO3K$,10,3),DOM=*NEXT)IOL=IOL_FS2
8440 SELL_DIVISOR=1; IF UM$(20,1)="Y" OR UM$(21,1)="Y" OR FS2[5]=0 THEN SELL_DIVISOR=1 ELSE SELL_DIVISOR=FS2[5]
8445 RETURN 
8449 ! 
8550 GET_HOW_TO_SHIP_DESC:
8551 HTS_DESC$=""; IF NUL(HTS_CODE$) THEN RETURN 
8555 GOSUB SET_READONLY
8560 DIM HTS$(20); READ (Z[4],KEY="H"+HTS_CODE$,DOM=*NEXT)HTS$
8565 HTS_DESC$=STP(HTS$(3,15),1)
8570 GOSUB CLEAR_READONLY
8590 RETURN 
8595 ! 
8650 GET_FOB_DESC:
8651 FOB_DESC$=""; IF NUL(FOB_CODE$) THEN RETURN 
8655 GOSUB SET_READONLY
8660 DIM FOB$(20); READ (Z[4],KEY="F"+FOB_CODE$,DOM=*NEXT)FOB$
8665 FOB_DESC$=STP(FOB$(3,15),1)
8670 GOSUB CLEAR_READONLY
8690 RETURN 
8695 ! 
8750 FNP:
8751 DEF FNP(LOCAL DATA$)
8760 LINE$=LINE1$+DATA$+LINE2$
8790 RETURN 0
8799 ! ********************************************************
8800 FNBYB:
8801 DEF FNBYB$(LOCAL DATA$)
8802 ! Send DATA$ through EC3BYB
8820 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,DATA$,BYBINFO${ALL},BYBOPTIONS$
8840 RETURN DATA$
8845 END DEF
8899 ! **********************************************************
8915 FNT:DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8930 DEF FNN$(Z9$)=TBL(Z9$<"A",STR(ASC(Z9$)-ASC("A")+10:"000"),STR(NUM(Z9$):"000")) ! CHAR(1) SEQ# (1-9,A-Z) => CHAR(3) SEQ# (1-35)
8949 ! *****************************
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 GOSUB CLEAR_READONLY
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
10000 REM "Initiliaze arrays and required variables
10005 INIT:
10010 DIM PO3_IN$(628),PO3_IN[4],PO3_SET[4],PO3_IN_DATA$[2000],PO3_IN_DATA[2000,4],PO3_SET_DATA[2000,4],GEN_PO3_IN$(628) ! ,PO3_DELETE_LINE[2000]
10025 RETURN 
10029 ! 
10130 REM "Convenience function to parse tag data and set arrays
10135 SET_TAG_DATA:
10140 GOSUB PARSE_DATA; GOSUB SET_DATA
10145 RETURN 
10149 ! 
10200 REM "Parse incoming special shipping tag data
10201 PARSE_DATA:
10205 DIM PO3VAL$[2000]; PO3_VAL_COUNT=0
10210 IF PO3_VAL_COUNT=2000 THEN GOTO 10240 ELSE VP=POS(", "=VALUE$); IF VP=0 THEN GOTO 10235
10215 PO3_VAL_COUNT=PO3_VAL_COUNT+1; IF VP=1 THEN PO3VAL$[PO3_VAL_COUNT]="",VALUE$=VALUE$(3); GOTO 10210 ELSE PO3VAL$[PO3_VAL_COUNT]=VALUE$(1,VP-1); IF VP=LEN(VALUE$) THEN VALUE$=""; GOTO 10240 ELSE VALUE$=VALUE$(VP+2); GOTO 10210
10235 REM "finish up last one
10237 PO3_VAL_COUNT=PO3_VAL_COUNT+1; PO3VAL$[PO3_VAL_COUNT]=VALUE$
10240 IF PO3_VAL_COUNT>HIGHEST_PO3_VAL_COUNT THEN FOR TMP_INDEX=HIGHEST_PO3_VAL_COUNT+1 TO PO3_VAL_COUNT; PO3_IN_DATA$[TMP_INDEX]=DIM(LEN(PO3_IN$)); NEXT TMP_INDEX; HIGHEST_PO3_VAL_COUNT=PO3_VAL_COUNT
10245 RETURN 
10249 ! 
10250 REM "Transfer parsed tag data into input arrays to write to PO3 record later
10255 SET_DATA:
10260 IF PO3_VAL_COUNT=0 THEN GOTO *RETURN
10265 FOR VAL_INDEX=1 TO PO3_VAL_COUNT
10270 IF NOT(NUL(PO3VAL$[VAL_INDEX])) THEN {
10272 IF PO3_FTYPE=0 THEN {! String field
10275 IF NOT(NUL(PO3_MASK$)) THEN PO3_IN_DATA$[VAL_INDEX](PO3_OFFSET,PO3_FLDLEN)=STR(NUM(PO3VAL$[VAL_INDEX],ERR=*CONTINUE):PO3_MASK$) ELSE IF NOT(NUL(PO3_STPCHAR$)) THEN PO3_IN_DATA$[VAL_INDEX](PO3_OFFSET,PO3_FLDLEN)=STP(STP(PO3VAL$[VAL_INDEX],3,*PO3_STPCHAR$,ERR=*PROCEED),3,",") ELSE PO3_IN_DATA$[VAL_INDEX](PO3_OFFSET,PO3_FLDLEN)=STP(PO3VAL$[VAL_INDEX],3,",") ! 249773
10277  } ELSE {! Number field
10280 PO3_IN_DATA[VAL_INDEX,PO3_OFFSET]=NUM(PO3VAL$[VAL_INDEX],ERR=*CONTINUE),PO3_SET_DATA[VAL_INDEX,PO3_OFFSET]=1
10282  }
10285  } ! NOT(NUL(PO3VAL$[VAL_INDEX]))
10290 NEXT VAL_INDEX
10293 IF NOT(NUL(PO3_STPCHAR$)) THEN PO3_STPCHAR$="" ! Clear stpchar string - 249773
10295 RETURN 
10299 ! 
56001 REM "269047-SB Change Order API Next Phase : Ref 263664                 
56002 REM "289557-FlowPoint; additional to EC3PO3 special shipping PO output  
56004 REM "290559-FlowPoint; 3p_full_url tag, ADD LOCATION CODE FIELDS   
56006 REM "307210-DBD-63-International shipping address - add country code           
56008 REM "307302-DBD-126;EC3PO1/3; if country is blank, use default          
