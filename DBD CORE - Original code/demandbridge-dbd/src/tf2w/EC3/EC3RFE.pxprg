0010 REM "EC RFQ Email notifier<EC3RFE>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 08/24/09 - 13.627222 - crg - SSP# 232226
0037 REM "232226-Programming changes to allow customized interfacing with    
0040 REM "Copyright 2009 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3RFE",X1$="RFQ Email Notifier"
0120 EOL$=$0D0A$; REM EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0130 MASK1$="#,###,###.00-"
0150 REM "EC$[1]=ESB session record, EC$[2]=client number        , ec$[3]=message from server to called program, EC$[4]=formatted date, EC$[5]=formatted time EC$[6]=ECA2$ available web catalogs (concatonated string) EC$[7]=customer webec parms (ECS)  EC$[8]=image path (customer if set otherwise from ec_parm) EC$[9]=ST_LIST sort code record EC$[10]=reporting whse list EC$[11]=(1,4)warehouse code to use for o/e FM2RT0  (5,4)=would contain the 'other'warehouse for availability checking o/e messaging <not passed to FM2RT0, EC$[12]=email params,see 8000s [13] UNUSED ,[14]=ECY$, [15]=inventory system parameters [16]=Credict Card code/desc list [17]=active webcode [18-20] unused                                                                 
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O QSA... 02O QSB... 03O QSC... 04O QSD... 05OSECA... 06O EML... 07OSQSD... 13O ZZPARM " ! need S on ECA open to make sure we get it opened with IOL=* option
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1025 SWITCH TAG$ ! 1185 end switch
1035 CASE "template"; TEMPLATE$=VALUE$; BREAK
1040 CASE "qsd_key"; QSD_KEY$=VALUE$; BREAK
1045 CASE "buyer"; BUYER_ID$=VALUE$; BREAK
1050 CASE "email_type"; EMAIL_TYPE$=VALUE$; BREAK ! Values are VENDOR or CSR
1185 END SWITCH ! 1050
1190 NEXT I
1195 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="181797.20050329",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1200 ! Get QSD info and read corresponding buyer info
1205 DIM QSD$:IOL(Z[4]); READ DATA FROM DIM(LEN(QSD$)),REC=QSD$ TO IOL=IOL(QSD$); FIND (Z[4],KEY=QSD_KEY$,DOM=QSD_NOT_FOUND,REC=QSD$)
1210 DIM QSA$:IOL(Z[1]); READ DATA FROM DIM(LEN(QSA$)),REC=QSA$ TO IOL=IOL(QSA$); FIND (Z[1],KEY=QSD.QUOTE_DIV$+QSD.QUOTE_NUM$,DOM=*NEXT,REC=QSA$)
1212 DIM QSB$:IOL(Z[2]); READ DATA FROM DIM(LEN(QSB$)),REC=QSB$ TO IOL=IOL(QSB$); FIND (Z[2],KEY=QSD.QUOTE_DIV$+QSD.QUOTE_NUM$+QSD.QUOTE_LINE_NUM$,DOM=*NEXT,REC=QSB$)
1214 DIM QSC$:IOL(Z[3]); READ DATA FROM DIM(LEN(QSC$)),REC=QSC$ TO IOL=IOL(QSC$); FIND (Z[3],KEY=QSD.QUOTE_DIV$+QSD.QUOTE_NUM$+QSD.QUOTE_LINE_NUM$,DOM=*NEXT,REC=QSC$) ! 229740
1215 IF EMAIL_TYPE$="VENDOR" THEN {
1220 DIM ECA$:IOL(Z[5]); READ DATA FROM DIM(LEN(ECA$)),REC=ECA$ TO IOL=IOL(ECA$)
1225 FIND (Z[5],KEY=BUYER_ID$,REC=ECA$,DOM=*NEXT)
1230 EMAIL_ADDR$=STP(ECA.EMAIL_BUYER$); IF NUL(EMAIL_ADDR$) THEN GOTO BLANK_EMAIL
1231 DIM EML$:IOL(Z[6]); READ DATA FROM DIM(LEN(EML$)),REC=EML$ TO IOL=IOL(EML$)
1232 FIND (Z[6],KNO=2,KEY="CS"+PAD(QSA.CUST_SERV_REP$,20)+PAD("RFQ",10),DOM=*NEXT,REC=EML$)
1233 CSR_EMAIL_ADDRESS$=STP(EML.EMAIL_ADDRESS$)
1235  } ELSE {
1236 DIM EML$:IOL(Z[6]); READ DATA FROM DIM(LEN(EML$)),REC=EML$ TO IOL=IOL(EML$)
1240 FIND (Z[6],KNO=2,KEY="CS"+PAD(QSA.CUST_SERV_REP$,20)+PAD("RFQ",10),DOM=BLANK_EMAIL,REC=EML$)
1243 EMAIL_ADDR$=STP(EML.EMAIL_ADDRESS$),CSR_EMAIL_ADDRESS$=STP(EML.EMAIL_ADDRESS$); IF NUL(EMAIL_ADDR$) THEN GOTO BLANK_EMAIL
1245  }
1250 TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|EC3RFE|Requested RFQ email|EMAIL TYPE|"+EMAIL_TYPE$+"|QSD_KEY|"+QSD_KEY$+"|EMAIL ADDRESS|"+EMAIL_ADDR$+"|VEND_QUOTE_NUM|"+STP(QSD.VEND_QUOTE_NUM$)+"|")
1262 ! Get RFQ subject line in RFQ_TEXT$[1] and RFQ email body in RFQ_TEXT$[2], based on whether email to VENDOR or to CSR
1263 IF EMAIL_TYPE$="VENDOR" THEN EKEY$=PAD("RFQ_VENDOR",10) ELSE EKEY$=PAD("RFQ_CSR",10)
1264 DIM RFQ_TEXT$[4]; BYF_OPTIONS$="Y",ETEXT_NEEDED$=EKEY$+"00001"+EKEY$+"00002"+EKEY$+"00003"+EKEY$+"00004"; CALL "EC3BYF",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,ETEXT_NEEDED$,RFQ_TEXT${ALL},BYF_OPTIONS$; REM "RFQ_TEXT$ 1=header, 2=subject line, 3=email body, 4=footer
1266 ! Get Email start and Email end text
1268 ! Process RFQ_TEXT$, setting SUBJECT$ to results of RFQ_TEXT$[1], then process EMAIL_TEXT, then write out to temp file, and send 
1270 TEXT_TO_DO$=RFQ_TEXT$[2]; GOSUB PROCESS_TEXT; SUBJECT$=TEXT_DONE$
1272 TEXT_TO_DO$=RFQ_TEXT$[3]; GOSUB PROCESS_TEXT; EMAIL_BODY$=TEXT_DONE$
1274 TEXT_TO_DO$=RFQ_TEXT$[1]; GOSUB PROCESS_TEXT; EMAIL_HEADER$=TEXT_DONE$ ! requires SUBJECT$ to be set by now
1276 TEXT_TO_DO$=RFQ_TEXT$[4]; GOSUB PROCESS_TEXT; EMAIL_FOOTER$=TEXT_DONE$
1279 ! 
1280 IF STP(RFQ_TEXT$[2],2)="" THEN TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|EC3RFE|Either no ECS, T1/T2 records, or file missing for subject for "+EKEY$+" 00002")
1282 IF STP(RFQ_TEXT$[3],2)="" THEN TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|EC3RFE|Either no ECS, T1/T2 records, or file missing for body for "+EKEY$+" 00003")
1284 IF STP(RFQ_TEXT$[1],2)="" THEN TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|EC3RFE|Either no ECS, T1/T2 records, or file missing for header for "+EKEY$+" 00001")
1300 ! Create email file
1305 TMP_CHAN=HFN
1310 PRECISION 5; TMP_FILE$=%SERVER_DIR$+"RFQ_"+STR(INT(RND*100000)); PRECISION 2; SERIAL TMP_FILE$,ERR=*SAME
1315 OPEN (TMP_CHAN)TMP_FILE$
1319 TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|EC3RFE|Requested RFQ email|EMAIL TYPE|"+EMAIL_TYPE$+"|QSD_KEY|"+QSD_KEY$+"|TEMP FILE NAME|"+TMP_FILE$+"|")
1320 WRITE RECORD (TMP_CHAN)EMAIL_HEADER$
1325 WRITE RECORD (TMP_CHAN)EMAIL_BODY$
1330 WRITE RECORD (TMP_CHAN)EMAIL_FOOTER$
1345 CLOSE (TMP_CHAN)
1350 ! Send the email
1355 ! CMD$="/usr/lib/sendmail -t < "+TMP_FILE$
1360 ! INVOKE CMD$
1361 CALL "EC3EML",X3$,X4$,EC_PARM$,TMP_FILE$ ! 232226
1363 TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|EC3RFE|Requested RFQ email|EMAIL TYPE|"+EMAIL_TYPE$+"|QSD_KEY|"+QSD_KEY$+"|TEMP FILE NAME|"+TMP_FILE$+"|SEND_DONE|")
1365 ! ERASE TMP_FILE$,ERR=*NEXT ! 232226
1480 EMAIL_COMPLETE:
1495 GOTO 9900
1499 ! *********************************************************
1500 PROCESS_TEXT:
1501 ! Modified to call routine, will take in TEXT_TO_DO$ and return TEXT_DONE$ with tags replaced by values
1503 ! status and status_msg are given as examples
1510 LINE$=FNBYB$(TEXT_TO_DO$),TEXT_TO_DO$=""
1512 SELL_BREAK_MASK$="##,###,###",COST_MASK$="##,###,###.00",DAYS_MASK$="##,###" ! WO229740
1515 CHKTAG=1
1520 WHILE CHKTAG ! 2800 wend
1522 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
1530 TAG$=LINE$(P1,MSL); LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
1600 SWITCH TAG$ ! 2790 end switch
1610 CASE "?tf?status?"
1615 LINE$=LINE1$+STR(STATUS)+LINE2$
1619 BREAK
1620 CASE "?tf?status_msg?"
1625 LINE$=LINE1$+STR(STATUS_MSG$)+LINE2$
1629 BREAK
1630 CASE "?tf?subject?"
1632 LINE$=LINE1$+SUBJECT$+LINE2$
1634 BREAK
1635 CASE "?tf?email?"
1637 LINE$=LINE1$+EMAIL_ADDR$+LINE2$
1639 BREAK
1640 CASE "?tf?rfq?"; LINE$=LINE1$+FN%ZZDISP$(QSD.QUOTE_DIV$+QSD.QUOTE_NUM$,"O/P")+LINE2$; BREAK
1645 CASE "?tf?rfq_line?"; LINE$=LINE1$+QSD.QUOTE_LINE_NUM$+LINE2$; BREAK
1650 CASE "?tf?vendor?"; LINE$=LINE1$+FN%ZZDISP$(QSD.VEND_DIV$+QSD.VEND_CODE$,"A/P")+LINE2$; BREAK
1655 CASE "?tf?delivery?"; LINE$=LINE1$+QSD.DELIVERY$+LINE2$; BREAK
1660 CASE "?tf?comment?"; LINE$=LINE1$+QSD.TF_COMMENT$+QSD.COMMENT_2$+LINE2$; BREAK ! 229136
1665 CASE "?tf?um?"; LINE$=LINE1$+STP(STP(QSB.SELL_UM$)+"/"+STP(STR(QSB.SELL_QTY_PER:"###,###"),2))+LINE2$; BREAK
1667 CASE "?tf?cost_um?"; LINE$=LINE1$+STP(STP(QSC.COST_UM$)+"/"+STP(STR(QSC.COST_QTY_PER:"###,###"),2))+LINE2$; BREAK ! SSP 229740
1670 CASE "?tf?sell_break_start?"; GOSUB PROCESS_BREAKS; LINE$=LINE1$+BREAK_SECTION$+LINE2$; BREAK
1745 CASE "?tf?item_code?"; LINE$=LINE1$+QSB.ITEM_CODE$+LINE2$; BREAK
1750 CASE "?tf?prod_code?"; LINE$=LINE1$+QSB.PROD_CODE$+LINE2$; BREAK
1755 CASE "?tf?left_right?"; LINE$=LINE1$+STP(QSB.LEFT_RIGHT$)+LINE2$; BREAK
1760 CASE "?tf?top_bottom?"; LINE$=LINE1$+STP(QSB.TOP_BOTTOM$)+LINE2$; BREAK
1765 CASE "?tf?plys?"; LINE$=LINE1$+STP(QSB.PLYS$)+LINE2$; BREAK
1770 CASE "?tf?item_desc?"; LINE$=LINE1$+STP(QSB.ITEM_DESC$)+LINE2$; BREAK
1775 CASE "?tf?rfq_key?"; LINE$=LINE1$+QSD.QUOTE_DIV$+QSD.QUOTE_NUM$+LINE2$; BREAK
1780 CASE "?tf?qsd_key?"; LINE$=LINE1$+QSD.QUOTE_DIV$+QSD.QUOTE_NUM$+QSD.QUOTE_LINE_NUM$+QSD.VEND_NUM_ON_SCREEN$+LINE2$; BREAK
1785 CASE "?tf?vend_quote_num?"; LINE$=LINE1$+STP(QSD.VEND_QUOTE_NUM$)+LINE2$; BREAK
1790 CASE "?tf?csr?"; LINE$=LINE1$+STP(QSA.CUST_SERV_REP$)+LINE2$; BREAK
1795 CASE "?tf?quotes_done?"; LINE$=LINE1$+FNQ$(QSD.QUOTE_DIV$+QSD.QUOTE_NUM$)+LINE2$; BREAK
1800 CASE "?tf?csr_email_address?"; LINE$=LINE1$+CSR_EMAIL_ADDRESS$+LINE2$; BREAK
2785 DEFAULT ; LINE$=LINE1$+LINE2$
2790 END SWITCH ! 1600
2800 WEND ! 1520
2990 TEXT_DONE$=LINE$,LINE$=""
2995 RETURN 
2999 ! ********************************************************
3000 PROCESS_BREAKS:! add code for the sell break section called from PROCESS_Text
3005 BREAK_SECTION$="",SELL_BREAK_MASK$="##,###,###",COST_MASK$="##,###,###.00"
3010 TMP=POS("?tf?sell_break_end?"=LINE2$); PB_TEMPLATE$=FNBYB$(MID(LINE2$,1,TMP-1)),LINE2$=MID(LINE2$,TMP)
3050 FOR BREAK_NUMBER=1 TO 5
3055 BREAK_NUMBER$=STR(BREAK_NUMBER)
3060 IF VIN(QSB$,"sell_break_"+BREAK_NUMBER$,ERR=*BREAK)<=0 THEN BREAK ! leave after finding first break without quantity 
3070 PB_LINE$=PB_TEMPLATE$,PB_CHKTAG=1
3075 WHILE PB_CHKTAG
3090 P1=MSK(PB_LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN PB_CHKTAG=0; BREAK
3095 TAG$=PB_LINE$(P1,MSL); PB1$=PB_LINE$(1,P1-1),PB2$=MID(PB_LINE$,P1+MSL)
3100 SWITCH TAG$
3110 CASE "?tf?sell_break?"; PB_LINE$=PB1$+FNM$(VIN(QSB$,"SELL_BREAK_"+BREAK_NUMBER$,ERR=*PROCEED),SELL_BREAK_MASK$)+PB2$; BREAK
3115 CASE "?tf?cost?"; PB_LINE$=PB1$+FNM$(VIN(QSD$,"COST_QTY_BREAK_"+BREAK_NUMBER$,ERR=*PROCEED),COST_MASK$)+PB2$; BREAK
3120 CASE "?tf?break_number?"; PB_LINE$=PB1$+BREAK_NUMBER$+PB2$; BREAK
3130 CASE "?tf?working_days?"; PB_LINE$=PB1$+FNM$(VIN(QSD$,"WORKING_DAYS_"+BREAK_NUMBER$,ERR=*PROCEED),DAYS_MASK$)+PB2$; BREAK ! WO229740
3340 DEFAULT ; PB_LINE$=PB1$+PB2$
3345 END SWITCH 
3350 WEND 
3360 BREAK_SECTION$+=PB_LINE$
3395 NEXT BREAK_NUMBER
3495 RETURN 
3499 ! ****************************************************
5100 ADD_MSG_TO_LOG:! Add message to log file
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+ECD$(1,10)+"|LINE|"+ECE$(25,3)+"|MESSAGE NO|"+STR(MESSAGE_NO:"00000")+"|MESSAGE|"+MESSAGE$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
8600 DEF FNQ$(LOCAL RFQ$)
8601 ! given RFQ$, look thru QSD records and determine how many done/to do, done is has vendor quote number or non-zero first bucket
8602 ! Use separate QSD file open on Z[7]
8605 RETURN$="",TODO=0,DONE=0
8610 DIM QSD2$:IOL(Z[7]); READ DATA FROM DIM(LEN(QSD2$)),REC=QSD2$ TO IOL=IOL(QSD2$)
8620 SELECT *,REC=QSD2$ FROM Z[7] BEGIN RFQ$ END RFQ$+$FE$
8625 IF NOT(NUL(QSD2.VEND_QUOTE_NUM$)) OR QSD2.COST_QTY_BREAK_1>0 THEN DONE+=1
8630 TODO+=1
8640 NEXT RECORD 
8660 RETURN$=STR(DONE)+" OF "+STR(TODO)
8690 RETURN RETURN$
8695 END DEF
8699 ! ************************************************************
8700 DEF FNM$(LOCAL AMOUNT, LOCAL MASK$)
8705 ! if AMOUNT is 0 then return null string, else STR AMOUNT with MASK and strip leading and trailing blanks
8715 IF AMOUNT=0 THEN RETURN "" ELSE RETURN STP(STR(AMOUNT:MASK$),2)
8745 END DEF
8749 ! **********************************************************
8800 DEF FNBYB$(LOCAL DATA$)
8801 ! Send DATA$ through EC3BYB
8820 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,DATA$,BYBINFO${ALL},BYBOPTIONS$
8840 RETURN DATA$
8845 END DEF
8849 ! *****************************************************
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9200 ! Handle exceptions
9210 QSD_NOT_FOUND: TMP=FN%_LOG_MESSAGE("EXCP","SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|EC3RFE|Requested RFQ email|EMAIL TYPE|"+EMAIL_TYPE$+"|QSD INFORMATION NOT FOUND|QSD_KEY|"+QSD_KEY$+"|"); GOTO 9900
9220 BLANK_EMAIL: TMP=FN%_LOG_MESSAGE("MESG","SESSION ID|"+EC$[1](1,7)+"|BUYER ID|"+STP(EC$[1](8,15))+"|EC3RFE|Requested RFQ email|EMAIL TYPE|"+EMAIL_TYPE$+"|BUYER(VENDOR) EMAIL IS BLANK|QSD_KEY|"+QSD_KEY$+"|"); GOTO 9900
9900 REM "End
9905 IF MEM>0 THEN CLOSE (MEM)
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56002 REM "229136-When the vendor enters comments in the online quote         
56004 REM "229740-Create RFQ Working Days field, collect online from vendors
56006 REM "232226-Programming changes to allow customized interfacing with    
56008 REM "271095-Delete the hardcoded "$" symbol in the masks that format costs;
