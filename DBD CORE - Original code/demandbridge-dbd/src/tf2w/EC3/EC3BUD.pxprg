0010 REM "EC Location Budgets <EC3BUD>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 06/24/14 - 23.144444 - crg - SSP# 270590
0037 REM "270590-Budget Annual Budget Details Page                           
0040 REM "Copyright 2014 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0110 X0$="EC3BUD",X1$="EC Location Budget                     "
0120 EOL$=$0D0A$; REM EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0140 DIM MESS_INFO$[20],PERIOD_SET[13],PERIOD_VALUE[13]
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01O FTW...  02O FM0...  03O EDA...  04O ECH...  05O FM3...  13O ZZPARM"
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0800 REM "Read required records, initialize variables
0805 IF NOT(FN%HAS_MODULE("EB")) OR EC$[2](1064,1)<>"Y" THEN GOTO 9900
0810 FIND (Z[13],KEY="STAT"+"FM0")F9$
0815 FIND (Z[13],KEY="STAT"+"F/M")F10$ ! 250680
0820 LOC_LIST$=""; IF NOT(NUL(EC$[2](61,4))) OR NOT(NUL(EC$[2](726,9))) THEN GOSUB GET_BUYER_LOCATIONS ! Buyer is location specific or has a ship-to group assigned, restricted to specific location(s)
0830 FMS_YEAR$=EC$[1](171,4)
0835 FMS_PD=NUM(EC$[1](175,2),ERR=*NEXT); IF FMS_PD+1>12 THEN FMS_YEAR$=STR(NUM(EC$[1](171,4),ERR=*NEXT)+1) ! 252381
0840 FMS_YEAR_WINDOW=4
0850 SUCCESS_MSG$="Done!"
1000 REM "Process DATA array
1010 FOR I=1 TO NUM_ENTRIES
1015 TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1020 T_IN=POS("."=TAG$); IF T_IN THEN TAG_PARM$=MID(TAG$,T_IN+1),TAG$=MID(TAG$,1,T_IN-1) ELSE TAG_PARM$=""
1025 SWITCH TAG$ ! 1185 end switch
1035 CASE "template"; TEMPLATE$=VALUE$; BREAK
1040 CASE "fms_year"; FMS_YEAR$=PAD(VALUE$,4); BREAK
1050 CASE "location"; LOCATION$=PAD(VALUE$,4); BREAK
1060 CASE "edit"; IF UCS(VALUE$)="Y" THEN EDIT_BUDGET=1; END_IF ; BREAK
1061 CASE "display_mode"; DISPLAY_MODE$=PAD(UCS(VALUE$),1); BREAK ! 270590
1065 CASE "success_msg"; SUCCESS_MSG$=STP(VALUE$,2); BREAK
1071 CASE "period_1"; PERIOD_VALUE[1]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[1]=1; BREAK
1072 CASE "period_2"; PERIOD_VALUE[2]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[2]=1; BREAK
1073 CASE "period_3"; PERIOD_VALUE[3]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[3]=1; BREAK
1074 CASE "period_4"; PERIOD_VALUE[4]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[4]=1; BREAK
1075 CASE "period_5"; PERIOD_VALUE[5]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[5]=1; BREAK
1076 CASE "period_6"; PERIOD_VALUE[6]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[6]=1; BREAK
1077 CASE "period_7"; PERIOD_VALUE[7]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[7]=1; BREAK
1078 CASE "period_8"; PERIOD_VALUE[8]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[8]=1; BREAK
1079 CASE "period_9"; PERIOD_VALUE[9]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[9]=1; BREAK
1080 CASE "period_10"; PERIOD_VALUE[10]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[10]=1; BREAK
1081 CASE "period_11"; PERIOD_VALUE[11]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[11]=1; BREAK
1082 CASE "period_12"; PERIOD_VALUE[12]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[12]=1; BREAK
1083 CASE "period_13"; PERIOD_VALUE[13]=NUM(VALUE$,ERR=*BREAK); PERIOD_SET[13]=1; BREAK
1180 ! DEFAULT ; VIA TAG$=VALUE$; BREAK ! Set to same name variable as TAG$
1185 END SWITCH ! 1050
1190 NEXT I
1195 DIM BYBINFO$[5]; BYBINFO$[1]=PGN,BYBINFO$[2]="20090125",BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1210 ! perform any data creation function here - update a worksheet, etc
1220 IF EDIT_BUDGET THEN GOSUB EDIT_LOCATION_BUDGET
1503 ! status and status_msg are given as examples
1504 IF NOT(NUL(%BASIC2$)) THEN GOTO 2990 ! Skip outputting template if additional program to be done
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1510 READ (100,END=2950)LINE$; LINE$=FNBYB$(LINE$)
1515 CHKTAG=1
1520 WHILE CHKTAG ! 2800 wend
1522 P1=MSK(LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN CHKTAG=0; BREAK
1530 TAG$=LINE$(P1,MSL); LINE1$=LINE$(1,P1-1),LINE2$=MID(LINE$,P1+MSL)
1600 SWITCH TAG$ ! 2790 end switch
1610 CASE "?tf?err_msg?"; NN=FNL(ERR_MSG$); BREAK
1620 CASE "?tf?fms_year_ddl?"; GOSUB PROCESS_FMS_YEAR_DDL; LINE$=FMS_YEAR_DDL$; BREAK
1621 CASE "?tf?fms_year?"; PP=FNL(FMS_YEAR$); BREAK
1630 CASE "?tf?location_line_start?"; GOSUB PROCESS_LOCATION; LINE$=LOCATION_SECTION$; BREAK
1701 CASE "?tf?b_all_period_1?"; PP=FNL(FNM$(TOT_PERIOD[1,0],MASK$)); BREAK
1702 CASE "?tf?b_all_period_2?"; PP=FNL(FNM$(TOT_PERIOD[2,0],MASK$)); BREAK
1703 CASE "?tf?b_all_period_3?"; PP=FNL(FNM$(TOT_PERIOD[3,0],MASK$)); BREAK
1704 CASE "?tf?b_all_period_4?"; PP=FNL(FNM$(TOT_PERIOD[4,0],MASK$)); BREAK
1705 CASE "?tf?b_all_period_5?"; PP=FNL(FNM$(TOT_PERIOD[5,0],MASK$)); BREAK
1706 CASE "?tf?b_all_period_6?"; PP=FNL(FNM$(TOT_PERIOD[6,0],MASK$)); BREAK
1707 CASE "?tf?b_all_period_7?"; PP=FNL(FNM$(TOT_PERIOD[7,0],MASK$)); BREAK
1708 CASE "?tf?b_all_period_8?"; PP=FNL(FNM$(TOT_PERIOD[8,0],MASK$)); BREAK
1709 CASE "?tf?b_all_period_9?"; PP=FNL(FNM$(TOT_PERIOD[9,0],MASK$)); BREAK
1710 CASE "?tf?b_all_period_10?"; PP=FNL(FNM$(TOT_PERIOD[10,0],MASK$)); BREAK
1711 CASE "?tf?b_all_period_11?"; PP=FNL(FNM$(TOT_PERIOD[11,0],MASK$)); BREAK
1712 CASE "?tf?b_all_period_12?"; PP=FNL(FNM$(TOT_PERIOD[12,0],MASK$)); BREAK
1713 CASE "?tf?b_all_period_13?"; PP=FNL(FNM$(TOT_PERIOD[13,0],MASK$)); BREAK
1714 CASE "?tf?b_all_ytd?"; PP=FNL(FNM$(B_ALL_YTD,MASK$)); BREAK
1715 CASE "?tf?v_all_period_1?"; PP=FNL(FNM$(TOT_PERIOD[1,1],MASK$)); BREAK
1716 CASE "?tf?v_all_period_2?"; PP=FNL(FNM$(TOT_PERIOD[2,1],MASK$)); BREAK
1717 CASE "?tf?v_all_period_3?"; PP=FNL(FNM$(TOT_PERIOD[3,1],MASK$)); BREAK
1718 CASE "?tf?v_all_period_4?"; PP=FNL(FNM$(TOT_PERIOD[4,1],MASK$)); BREAK
1719 CASE "?tf?v_all_period_5?"; PP=FNL(FNM$(TOT_PERIOD[5,1],MASK$)); BREAK
1720 CASE "?tf?v_all_period_6?"; PP=FNL(FNM$(TOT_PERIOD[6,1],MASK$)); BREAK
1721 CASE "?tf?v_all_period_7?"; PP=FNL(FNM$(TOT_PERIOD[7,1],MASK$)); BREAK
1722 CASE "?tf?v_all_period_8?"; PP=FNL(FNM$(TOT_PERIOD[8,1],MASK$)); BREAK
1723 CASE "?tf?v_all_period_9?"; PP=FNL(FNM$(TOT_PERIOD[9,1],MASK$)); BREAK
1724 CASE "?tf?v_all_period_10?"; PP=FNL(FNM$(TOT_PERIOD[10,1],MASK$)); BREAK
1725 CASE "?tf?v_all_period_11?"; PP=FNL(FNM$(TOT_PERIOD[11,1],MASK$)); BREAK
1726 CASE "?tf?v_all_period_12?"; PP=FNL(FNM$(TOT_PERIOD[12,1],MASK$)); BREAK
1727 CASE "?tf?v_all_period_13?"; PP=FNL(FNM$(TOT_PERIOD[13,1],MASK$)); BREAK
1728 CASE "?tf?v_all_ytd?"; PP=FNL(FNM$(V_ALL_YTD,MASK$)); BREAK
1729 CASE "?tf?f_all_period_1?"; PP=FNL(FNM$(TOT_PERIOD[1,2],MASK$)); BREAK
1730 CASE "?tf?f_all_period_2?"; PP=FNL(FNM$(TOT_PERIOD[2,2],MASK$)); BREAK
1731 CASE "?tf?f_all_period_3?"; PP=FNL(FNM$(TOT_PERIOD[3,2],MASK$)); BREAK
1732 CASE "?tf?f_all_period_4?"; PP=FNL(FNM$(TOT_PERIOD[4,2],MASK$)); BREAK
1733 CASE "?tf?f_all_period_5?"; PP=FNL(FNM$(TOT_PERIOD[5,2],MASK$)); BREAK
1734 CASE "?tf?f_all_period_6?"; PP=FNL(FNM$(TOT_PERIOD[6,2],MASK$)); BREAK
1735 CASE "?tf?f_all_period_7?"; PP=FNL(FNM$(TOT_PERIOD[7,2],MASK$)); BREAK
1736 CASE "?tf?f_all_period_8?"; PP=FNL(FNM$(TOT_PERIOD[8,2],MASK$)); BREAK
1737 CASE "?tf?f_all_period_9?"; PP=FNL(FNM$(TOT_PERIOD[9,2],MASK$)); BREAK
1738 CASE "?tf?f_all_period_10?"; PP=FNL(FNM$(TOT_PERIOD[10,2],MASK$)); BREAK
1739 CASE "?tf?f_all_period_11?"; PP=FNL(FNM$(TOT_PERIOD[11,2],MASK$)); BREAK
1740 CASE "?tf?f_all_period_12?"; PP=FNL(FNM$(TOT_PERIOD[12,2],MASK$)); BREAK
1741 CASE "?tf?f_all_period_13?"; PP=FNL(FNM$(TOT_PERIOD[13,2],MASK$)); BREAK
1742 CASE "?tf?f_all_ytd?"; PP=FNL(FNM$(F_ALL_YTD,MASK$)); BREAK
1743 CASE "?tf?open_ord_balance_all_loc?"; PP=FNL(FNM$(OPEN_ORD_ALL_LOC,MASK$)); BREAK
1744 CASE "?tf?cat_all_period_1?"; PP=FNL(FNM$(TOT_CAT_PERIOD[1,0],MASK$)); BREAK
1745 CASE "?tf?cat_all_period_2?"; PP=FNL(FNM$(TOT_CAT_PERIOD[2,0],MASK$)); BREAK
1746 CASE "?tf?cat_all_period_3?"; PP=FNL(FNM$(TOT_CAT_PERIOD[3,0],MASK$)); BREAK
1747 CASE "?tf?cat_all_period_4?"; PP=FNL(FNM$(TOT_CAT_PERIOD[4,0],MASK$)); BREAK
1748 CASE "?tf?cat_all_period_5?"; PP=FNL(FNM$(TOT_CAT_PERIOD[5,0],MASK$)); BREAK
1749 CASE "?tf?cat_all_period_6?"; PP=FNL(FNM$(TOT_CAT_PERIOD[6,0],MASK$)); BREAK
1750 CASE "?tf?cat_all_period_7?"; PP=FNL(FNM$(TOT_CAT_PERIOD[7,0],MASK$)); BREAK
1751 CASE "?tf?cat_all_period_8?"; PP=FNL(FNM$(TOT_CAT_PERIOD[8,0],MASK$)); BREAK
1752 CASE "?tf?cat_all_period_9?"; PP=FNL(FNM$(TOT_CAT_PERIOD[9,0],MASK$)); BREAK
1753 CASE "?tf?cat_all_period_10?"; PP=FNL(FNM$(TOT_CAT_PERIOD[10,0],MASK$)); BREAK
1754 CASE "?tf?cat_all_period_11?"; PP=FNL(FNM$(TOT_CAT_PERIOD[11,0],MASK$)); BREAK
1755 CASE "?tf?cat_all_period_12?"; PP=FNL(FNM$(TOT_CAT_PERIOD[12,0],MASK$)); BREAK
1756 CASE "?tf?cat_all_period_13?"; PP=FNL(FNM$(TOT_CAT_PERIOD[13,0],MASK$)); BREAK
1757 CASE "?tf?cat_all_ytd?"; FOR AA=1 TO 13; ECH_ALL_YTD+=TOT_CAT_PERIOD[AA,0]; NEXT AA; PP=FNL(FNM$(ECH_ALL_YTD,MASK$)); BREAK
2785 DEFAULT ; LINE$=LINE1$+LINE2$ ! didn't match existing tag, so remove it
2790 END SWITCH ! 1600
2800 WEND ! 1520
2810 IF LINE$<>"" THEN PRINT (OUTPUT)LINE$
2900 GOTO 1510; REM next read
2990 GOTO 9900
3000 PROCESS_LOCATION:! Add location budget info based on location line section
3005 DIM TOT_PERIOD[13,2],TOT_CAT_PERIOD[13,18]; LOCATION_SECTION$=""; LOC_LINE_TEMPLATE$=LINE$,MASK$="########0.00-",LOC_SPECIFIC$=MID(LOC_LIST$,1,4)
3010 READ (100,END=*NEXT)LOC_LINE$; LOC_LINE_TEMPLATE$+=FNBYB$(SUB(LOC_LINE$,$0D$,""))+EOL$; IF POS("?tf?location_line_end?"=LOC_LINE$)=0 THEN GOTO *SAME
3020 GOSUB SET_READONLY
3030 READ (Z[2],KEY="C"+EC$[2](51,10)+LOC_SPECIFIC$,DOM=*NEXT); FM0KEY$="C"+EC$[2](51,10)+LOC_SPECIFIC$; GOTO 3055
3040 NEXT_LOCATION:
3050 FM0KEY$=KEY(Z[2],END=3495)
3055 GOSUB CLEAR_READONLY; IF FM0KEY$(1,11)<>"C"+EC$[2](51,10) THEN GOTO 3495
3059 GOSUB SET_READONLY
3060 READ (Z[2],KEY=FM0KEY$,DOM=NEXT_LOCATION)FM0$; IF NOT(NUL(LOC_LIST$)) AND POS(FM0KEY$(12,4)=LOC_LIST$,4)=0 OR MID(FM0$,235,1)="Y" THEN GOTO NEXT_LOCATION ! SSP 232030
3061 GOSUB CLEAR_READONLY
3064 IS_BUDGETED$="N"; FIND (Z[1],KEY=FM0KEY$(2,14)+FMS_YEAR$+"B",DOM=*NEXT); IS_BUDGETED$="Y" ! 270590
3070 IF IS_BUDGETED$="N" AND DISPLAY_MODE$="B" THEN GOTO NEXT_LOCATION ! 270590
3072 DIM B[24]; CALL "ZZPACK",ERR=*NEXT,X3$,"R","","",0,0,B{ALL},Z[1],"B",FM0KEY$(2,14)+FMS_YEAR$,F9$
3073 DIM V[24]; CALL "ZZPACK",ERR=*NEXT,X3$,"R","","",0,0,V{ALL},Z[1],"V",FM0KEY$(2,14)+FMS_YEAR$,F9$ ! 250680
3074 DIM F[24]; CALL "ZZPACK",ERR=*NEXT,X3$,"R","","",0,0,F{ALL},Z[1],"F",FM0KEY$(2,14)+FMS_YEAR$,F9$ ! 250680
3075 B_YTD=0; FOR B=1 TO 13; B_YTD+=B[B]; NEXT B; B_ALL_YTD+=B_YTD ! Accumulate total budget for this location
3076 V_YTD=0; FOR V=1 TO 13; V_YTD+=V[V]; NEXT V; V_ALL_YTD+=V_YTD; OPEN_ORD_ALL_LOC+=V[0] ! Accumulate total value for this location
3077 F_YTD=0; FOR F=1 TO 13; F_YTD+=F[F]; NEXT F; F_ALL_YTD+=F_YTD ! Accumulate total freight for this location - 250680
3079 FOR TOT=0 TO 13; TOT_PERIOD[TOT,0]+=B[TOT]; TOT_PERIOD[TOT,1]+=V[TOT]; TOT_PERIOD[TOT,2]+=F[TOT]; NEXT TOT ! Accumulate total budget, value and freight for each period for all locations - 250680
3080 LOC_LINE$=LOC_LINE_TEMPLATE$,POL_CHKTAG=1
3085 WHILE POL_CHKTAG
3090 P1=MSK(LOC_LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN POL_CHKTAG=0; BREAK
3095 TAG$=LOC_LINE$(P1,MSL); LOC_LINE1$=MID(LOC_LINE$,1,P1-1),LOC_LINE2$=MID(LOC_LINE$,P1+MSL)
3100 SWITCH TAG$
3135 CASE "?tf?loccode?"; PP=FNP(STP(MID(FM0$,12,4))); BREAK
3136 CASE "?tf?locdesc?"; PP=FNP(STP(MID(FM0$,16,35))); BREAK
3137 CASE "?tf?fms_year?"; PP=FNP(FMS_YEAR$); BREAK
3138 CASE "?tf?is_budgeted?"; PP=FNP(IS_BUDGETED$); BREAK ! 270590
3140 CASE "?tf?catalog_line_start?"; GOSUB PROCESS_CATALOG; PP=FNP(CATALOG_SECTION$); BREAK
3141 CASE "?tf?b_period_1?"; PP=FNP(FNM$(B[1],MASK$)); BREAK
3142 CASE "?tf?b_period_2?"; PP=FNP(FNM$(B[2],MASK$)); BREAK
3143 CASE "?tf?b_period_3?"; PP=FNP(FNM$(B[3],MASK$)); BREAK
3144 CASE "?tf?b_period_4?"; PP=FNP(FNM$(B[4],MASK$)); BREAK
3145 CASE "?tf?b_period_5?"; PP=FNP(FNM$(B[5],MASK$)); BREAK
3146 CASE "?tf?b_period_6?"; PP=FNP(FNM$(B[6],MASK$)); BREAK
3147 CASE "?tf?b_period_7?"; PP=FNP(FNM$(B[7],MASK$)); BREAK
3148 CASE "?tf?b_period_8?"; PP=FNP(FNM$(B[8],MASK$)); BREAK
3149 CASE "?tf?b_period_9?"; PP=FNP(FNM$(B[9],MASK$)); BREAK
3150 CASE "?tf?b_period_10?"; PP=FNP(FNM$(B[10],MASK$)); BREAK
3151 CASE "?tf?b_period_11?"; PP=FNP(FNM$(B[11],MASK$)); BREAK
3152 CASE "?tf?b_period_12?"; PP=FNP(FNM$(B[12],MASK$)); BREAK
3153 CASE "?tf?b_period_13?"; PP=FNP(FNM$(B[13],MASK$)); BREAK
3154 CASE "?tf?b_ytd?"; PP=FNP(FNM$(B_YTD,MASK$)); BREAK
3161 CASE "?tf?v_period_1?"; PP=FNP(FNM$(V[1],MASK$)); BREAK
3162 CASE "?tf?v_period_2?"; PP=FNP(FNM$(V[2],MASK$)); BREAK
3163 CASE "?tf?v_period_3?"; PP=FNP(FNM$(V[3],MASK$)); BREAK
3164 CASE "?tf?v_period_4?"; PP=FNP(FNM$(V[4],MASK$)); BREAK
3165 CASE "?tf?v_period_5?"; PP=FNP(FNM$(V[5],MASK$)); BREAK
3166 CASE "?tf?v_period_6?"; PP=FNP(FNM$(V[6],MASK$)); BREAK
3167 CASE "?tf?v_period_7?"; PP=FNP(FNM$(V[7],MASK$)); BREAK
3168 CASE "?tf?v_period_8?"; PP=FNP(FNM$(V[8],MASK$)); BREAK
3169 CASE "?tf?v_period_9?"; PP=FNP(FNM$(V[9],MASK$)); BREAK
3170 CASE "?tf?v_period_10?"; PP=FNP(FNM$(V[10],MASK$)); BREAK
3171 CASE "?tf?v_period_11?"; PP=FNP(FNM$(V[11],MASK$)); BREAK
3172 CASE "?tf?v_period_12?"; PP=FNP(FNM$(V[12],MASK$)); BREAK
3173 CASE "?tf?v_period_13?"; PP=FNP(FNM$(V[13],MASK$)); BREAK
3174 CASE "?tf?v_ytd?"; PP=FNP(FNM$(V_YTD,MASK$)); BREAK
3175 CASE "?tf?f_period_1?"; PP=FNP(FNM$(F[1],MASK$)); BREAK
3176 CASE "?tf?f_period_2?"; PP=FNP(FNM$(F[2],MASK$)); BREAK
3177 CASE "?tf?f_period_3?"; PP=FNP(FNM$(F[3],MASK$)); BREAK
3178 CASE "?tf?f_period_4?"; PP=FNP(FNM$(F[4],MASK$)); BREAK
3179 CASE "?tf?f_period_5?"; PP=FNP(FNM$(F[5],MASK$)); BREAK
3180 CASE "?tf?f_period_6?"; PP=FNP(FNM$(F[6],MASK$)); BREAK
3181 CASE "?tf?f_period_7?"; PP=FNP(FNM$(F[7],MASK$)); BREAK
3182 CASE "?tf?f_period_8?"; PP=FNP(FNM$(F[8],MASK$)); BREAK
3183 CASE "?tf?f_period_9?"; PP=FNP(FNM$(F[9],MASK$)); BREAK
3184 CASE "?tf?f_period_10?"; PP=FNP(FNM$(F[10],MASK$)); BREAK
3185 CASE "?tf?f_period_11?"; PP=FNP(FNM$(F[11],MASK$)); BREAK
3186 CASE "?tf?f_period_12?"; PP=FNP(FNM$(F[12],MASK$)); BREAK
3187 CASE "?tf?f_period_13?"; PP=FNP(FNM$(F[13],MASK$)); BREAK
3188 CASE "?tf?f_ytd?"; PP=FNP(FNM$(F_YTD,MASK$)); BREAK
3189 CASE "?tf?open_ord_balance?"; PP=FNP(FNM$(V[0],MASK$)); BREAK
3340 DEFAULT ; PP=FNP("")
3345 END SWITCH 
3350 WEND 
3390 LOCATION_SECTION$+=LOC_LINE$
3392 IF LEN(LOCATION_SECTION$)>16000 THEN PRINT (OUTPUT)LOCATION_SECTION$; LOCATION_SECTION$=""
3394 END_OF_LOC_LINE:
3395 GOTO NEXT_LOCATION
3497 GOSUB CLEAR_READONLY
3498 RETURN 
3499 ! ****************************************************
4000 ! Add catalog budget usage info based on catalog line section
4005 PROCESS_CATALOG:
4006 DIM TOT_CAT_PERIOD[13,18] ! 252381
4010 TOT_CAT_COUNT=0; CATALOG_SECTION$=""; MASK$="########0.00-"
4015 CL_END=POS("?tf?catalog_line_end?"=LOC_LINE2$); IF CL_END=0 THEN GOTO *RETURN ELSE CAT_LINE_TEMPLATE$=LOC_LINE2$(1,CL_END-1),LOC_LINE2$=LOC_LINE2$(CL_END+21)
4020 FOR BC_CAT=565 TO 735 STEP 10
4025 TOT_CAT_COUNT++; ECH_YTD=0
4030 GOSUB CLEAR_READONLY; IF NOT(NUL(EC$[1](BC_CAT,10))) THEN BC_CATALOG$=EC$[1](BC_CAT,10); GOSUB GET_CATALOG ELSE GOTO *CONTINUE
4035 GOSUB SET_READONLY
4040 READ (Z[4],KEY=PAD(BC_CATALOG$,10),DOM=*NEXT) ! Position at beginning of catalog
4045 NEXT_ECH_REC:
4047 ECHK$=KEY(Z[4],END=DONE_ECH); READ (Z[4],KEY=ECHK$)ECH$
4050 GOSUB CLEAR_READONLY
4055 IF MID(ECHK$,1,10)<>PAD(BC_CATALOG$,10) THEN GOTO DONE_ECH
4057 DIM ECH_VAL[24]; CALL "ZZPACK",ERR=*NEXT,X3$,"R","","",0,0,ECH_VAL{ALL},Z[5],"V",MID(ECH$,41,20)+FM0KEY$(12,4)+FMS_YEAR$,F10$
4060 FOR ECH=1 TO 13; ECH_YTD+=ECH_VAL[ECH]; NEXT ECH ! Accumulate total value for this catalog
4062 FOR TOT=1 TO 13; TOT_CAT_PERIOD[TOT,TOT_CAT_COUNT]+=ECH_VAL[TOT]; TOT_CAT_PERIOD[TOT,0]+=ECH_VAL[TOT]; NEXT TOT ! Accumulate total value for each period for all items
4065 GOTO NEXT_ECH_REC
4070 DONE_ECH:
4075 GOSUB CLEAR_READONLY
4080 CAT_LINE$=CAT_LINE_TEMPLATE$,COL_CHKTAG=1
4085 WHILE COL_CHKTAG
4090 P1=MSK(CAT_LINE$,"\?tf\?[^?]*\?"); IF P1=0 THEN COL_CHKTAG=0; BREAK
4095 TAG$=CAT_LINE$(P1,MSL); CAT_LINE1$=MID(CAT_LINE$,1,P1-1),CAT_LINE2$=MID(CAT_LINE$,P1+MSL)
4100 SWITCH TAG$
4137 CASE "?tf?fms_year?"; PP=FNC(FMS_YEAR$); BREAK
4138 CASE "?tf?budget_catalog_id?"; PP=FNC(STP(MID(EDA$,1,10),2)); BREAK
4139 CASE "?tf?budget_catalog_desc?"; PP=FNC(STP(MID(EDA$,11,30),2)); BREAK
4161 CASE "?tf?cat_period_1?"; PP=FNC(FNM$(TOT_CAT_PERIOD[1,TOT_CAT_COUNT],MASK$)); BREAK
4162 CASE "?tf?cat_period_2?"; PP=FNC(FNM$(TOT_CAT_PERIOD[2,TOT_CAT_COUNT],MASK$)); BREAK
4163 CASE "?tf?cat_period_3?"; PP=FNC(FNM$(TOT_CAT_PERIOD[3,TOT_CAT_COUNT],MASK$)); BREAK
4164 CASE "?tf?cat_period_4?"; PP=FNC(FNM$(TOT_CAT_PERIOD[4,TOT_CAT_COUNT],MASK$)); BREAK
4165 CASE "?tf?cat_period_5?"; PP=FNC(FNM$(TOT_CAT_PERIOD[5,TOT_CAT_COUNT],MASK$)); BREAK
4166 CASE "?tf?cat_period_6?"; PP=FNC(FNM$(TOT_CAT_PERIOD[6,TOT_CAT_COUNT],MASK$)); BREAK
4167 CASE "?tf?cat_period_7?"; PP=FNC(FNM$(TOT_CAT_PERIOD[7,TOT_CAT_COUNT],MASK$)); BREAK
4168 CASE "?tf?cat_period_8?"; PP=FNC(FNM$(TOT_CAT_PERIOD[8,TOT_CAT_COUNT],MASK$)); BREAK
4169 CASE "?tf?cat_period_9?"; PP=FNC(FNM$(TOT_CAT_PERIOD[9,TOT_CAT_COUNT],MASK$)); BREAK
4170 CASE "?tf?cat_period_10?"; PP=FNC(FNM$(TOT_CAT_PERIOD[10,TOT_CAT_COUNT],MASK$)); BREAK
4171 CASE "?tf?cat_period_11?"; PP=FNC(FNM$(TOT_CAT_PERIOD[11,TOT_CAT_COUNT],MASK$)); BREAK
4172 CASE "?tf?cat_period_12?"; PP=FNC(FNM$(TOT_CAT_PERIOD[12,TOT_CAT_COUNT],MASK$)); BREAK
4173 CASE "?tf?cat_period_13?"; PP=FNC(FNM$(TOT_CAT_PERIOD[13,TOT_CAT_COUNT],MASK$)); BREAK
4174 CASE "?tf?cat_ytd?"; PP=FNC(FNM$(ECH_YTD,MASK$)); BREAK
4340 DEFAULT ; PP=FNC("")
4345 END SWITCH 
4350 WEND 
4390 CATALOG_SECTION$+=CAT_LINE$
4394 END_OF_CAT_LINE:
4395 NEXT BC_CAT
4497 GOSUB CLEAR_READONLY
4498 RETURN 
4499 ! ****************************************************
4500 GET_CATALOG:
4510 DIM EDA$(106); FIND (Z[3],KEY=BC_CATALOG$,DOM=*NEXT)EDA$
4545 RETURN 
4549 ! 
5100 ADD_MSG_TO_LOG:! Add message to log file
5105 ! Add other info as needed here
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
5150 PROCESS_FMS_YEAR_DDL:
5160 FMS_YEAR=NUM(FMS_YEAR$,ERR=*NEXT); FMS_YEAR-=FMS_YEAR_WINDOW
5161 IF FMS_YEAR<=0 THEN FMS_YEAR$=DTE(0:"%Y"); FMS_YEAR=NUM(FMS_YEAR$); FMS_YEAR-=FMS_YEAR_WINDOW
5170 FOR YCOUNT=1 TO 10
5171 SELECTED$=""; IF STR(FMS_YEAR+YCOUNT:"0000")=FMS_YEAR$ THEN SELECTED$=" selected"
5180 FMS_YEAR_DDL$+="<option value="+QUO+STR(FMS_YEAR+YCOUNT:"0000")+QUO+SELECTED$+">"+STR(FMS_YEAR+YCOUNT:"0000")+"</option>"
5190 NEXT YCOUNT
5195 RETURN 
5199 ! 
5200 REM "Edit location budget information
5205 EDIT_LOCATION_BUDGET:
5210 IF NOT(EDIT_BUDGET) THEN GOTO ERR_PARAM
5211 IF NUL(LOCATION$) THEN GOTO ERR_NO_LOC
5212 IF NOT(NUL(LOC_LIST$)) AND POS(LOCATION$=LOC_LIST$,4)=0 THEN GOTO ERR_NO_LOC_ACCESS
5230 DIM B[24]; CALL "ZZPACK",ERR=ERR_READ_FTW,X3$,"R","","",0,0,B{ALL},Z[1],"B",EC$[2](51,10)+LOCATION$+FMS_YEAR$,F9$
5240 FOR B=1 TO 13
5245 IF PERIOD_SET[B] THEN B[B]=PERIOD_VALUE[B]
5270 NEXT B
5280 CALL "ZZPACK",ERR=ERR_WRITE_FTW,X3$,"W","","",0,0,B{ALL},Z[1],"B",EC$[2](51,10)+LOCATION$+FMS_YEAR$,F9$
5285 ERR_MSG$=SUCCESS_MSG$
5295 RETURN 
5299 ! 
5300 ERR_PARAM: ERR_MSG$="Error: Missing required parameter 'edit'"; GOTO *RETURN
5301 ERR_NO_LOC: ERR_MSG$="Error: Missing location"; GOTO *RETURN
5302 ERR_NO_LOC_ACCESS: ERR_MSG$="Error: Location specified not allowed for buyer"; GOTO *RETURN
5303 ERR_READ_FTW: ERR_MSG$="Error: Reading budget information"; GOTO *RETURN
5304 ERR_WRITE_FTW: ERR_MSG$="Error: Writing budget information"; GOTO *RETURN
5349 ! 
5500 REM "Return LOC_LIST$ filled with allowed locations for this buyer
5501 GET_BUYER_LOCATIONS:
5505 LOC_LIST$="",ALL$="T"
5510 IF EC$[9]="" THEN PGMNAME$="EC3SCS" ELSE PGMNAME$=STP(EC$[9](57,6),2)
5520 CALL PGMNAME$,X3$,X4$,EC_PARM$,EC${ALL},ST_LIST$,SELECTED$,ALL$,""
5522 IF NOT(NUL(ST_LIST$)) THEN LOCLEN=POS($0D$=ST_LIST$),TOTLOC=POS($0D$=ST_LIST$,1,0)
5523 IF NOT(LOCLEN) OR NOT(TOTLOC) THEN LOC_LIST$="****"; GOTO *RETURN
5525 FOR L=1 TO TOTLOC; LOC_LIST$=LOC_LIST$+MID(ST_LIST$,(LOCLEN+1)*(L-1)+1,4); NEXT L ! Get just the loc codes
5545 RETURN 
5549 ! 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
8734 ! 
8735 DEF FNC(LOCAL DATA$)
8740 CAT_LINE$=CAT_LINE1$+DATA$+CAT_LINE2$
8745 RETURN 0
8749 ! *****************************
8799 ! 
8800 DEF FNBYB$(LOCAL DATA$)
8801 ! Send DATA$ through EC3BYB
8820 CALL "EC3BYB",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,DATA$,BYBINFO${ALL},BYBOPTIONS$,100
8840 RETURN DATA$
8845 END DEF
8849 ! *****************************************************
8850 DEF FNM$(LOCAL AMOUNT, LOCAL MASK$)
8855 ! if AMOUNT is 0 then return null string, else STR AMOUNT with MASK and strip leading and trailing blanks
8860 IF AMOUNT=0 THEN RETURN "" ELSE RETURN STP(STR(AMOUNT:MASK$),2)
8895 END DEF
8899 ! **********************************************************
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNP(LOCAL DATA$)
8925 LOC_LINE$=LOC_LINE1$+DATA$+LOC_LINE2$
8930 RETURN 0
8934 ! 
8935 DEF FNL(LOCAL DATA$)
8940 LINE$=LINE1$+DATA$+LINE2$
8945 RETURN 0
8949 ! *****************************
8950 ! FND$ - Standard date routine
8955 DEF FND$(LOCAL DATE_IN$, LOCAL SPECIAL_FORMAT$)
8960 LOCAL DATE_OUT$
8965 IF NUL(DATE_IN$) THEN DATE_OUT$="" ELSE IF NOT(NUL(SPECIAL_FORMAT$)) THEN DATE_OUT$=FN%FMT_TFDATE$(DATE_IN$,SPECIAL_FORMAT$) ELSE CALL "ZZDISP","DX",DATE_IN$,"",X3$,DATE_OUT$,"",0,0,X4$
8970 RETURN DATE_OUT$
8975 END DEF
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
56001 REM "215368-Create Monthly Budget feature by customer location in WebEC
56002 REM "232030-Ship to locations that are excluded from showing on the web 
56004 REM "250680-Budget display tags to include freight and catalog based values
56006 REM "252381-Questions on budget data recorded for Jan 2012 budgeted locs
56007 REM "270590-Budget Annual Budget Details Page                           
