0010 REM ""EC Worksheet Processing <EC3WS1>"
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 01/17/25 - 11.972644 - crg - SSP# 307514
0037 REM "307514-CSPT-1255: Essendant POs failing if item has no FM1 record  
0040 REM "Copyright 2025 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT
0100 SETERR 9000
0105 ! IF EC$[7](1,10)="0000100000" THEN CALL "EC3LOG.2",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT ! SSP225697 - dmm added as root, temporary to test .dbg files
0110 X0$="EC3WS1",X1$="EC Worksheet Processing"
0120 EOL$=$0D0A$; EOL$=ATH(STP(EC_PARM$(57,8),1))
0127 HTML_TEXT$="Content-type: text/html"
0130 NY$="NY"
0135 FIRST_TIME$="Y" ! SSP167917, will be used in 7550's
0140 DIM MESS_INFO$[20]
0145 NUM_WK_ITEMS=0,NUM_ITEMS=0,DISP_SUBTOTAL=0 ! WO215367
0310 IOLIST ECD$,ECD2$
0320 IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
0330 IOLIST ECE$,ECE[0],ECE[1],ECE[2],ECE[3],ECE[4],ECE[5],ECE[6],ECE[7],ECE[8]
0340 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24],FS2[25],FS2[26],FS2[27],FS2[28],FS2[29]
0352 IOLIST FMPT$
0360 IOLIST IC0$,IC0[0],IC0[1],IC0[2],IC0[3],IC0[4],IC0[5],IC0[6],IC0[7],IC0[8],IC0[9],IC0[10],IC0[11],IC0[12],IC0[13],IC0[14],IC0[15],IC0[16],IC0[17],IC0[18],IC0[19],IC0[20],IC0[21],IC0[22],IC0[23],IC0[24],IC0[25],IC0[26],IC0[27],IC0[28],IC0[29],IC0[30],IC0[31],IC0[32],IC0[33],IC0[34],IC0[35],IC0[36],IC0[37],IC0[38],IC0[39],IC0[40]
0370 IOLIST FM1$(1),FM1[0],FM1[1],FM1[2],FM1[3],FM1[4],FM1[5],FM1[6],FM1[7],FM1[8],FM1[9],FM1[10],FM1[11],FM1[12],FM1[13],FM1[14],FM1[15],FM1[16],FM1[17],FM1[18],FM1[19],FM1[20],FM1[21],FM1[22],FM1[23],FM1[24],FM1[25],FM1[26],FM1[27],FM1[28],FM1[29],FM1[30],FM1[31]
0371 IOLIST FM1_COMP$(1),FM1_COMP[0],FM1_COMP[1],FM1_COMP[2],FM1_COMP[3],FM1_COMP[4],FM1_COMP[5],FM1_COMP[6],FM1_COMP[7],FM1_COMP[8],FM1_COMP[9],FM1_COMP[10],FM1_COMP[11],FM1_COMP[12],FM1_COMP[13],FM1_COMP[14],FM1_COMP[15],FM1_COMP[16],FM1_COMP[17],FM1_COMP[18],FM1_COMP[19],FM1_COMP[20],FM1_COMP[21],FM1_COMP[22],FM1_COMP[23],FM1_COMP[24],FM1_COMP[25],FM1_COMP[26],FM1_COMP[27],FM1_COMP[28],FM1_COMP[29],FM1_COMP[30],FM1_COMP[31]
0380 IOLIST FM0$
0390 IOLIST FMPS$
0391 IOLIST FMPH$
0392 IOLIST FMPX$,FMPX(0),FMPX(1),FMPX(2)
0395 IOL_EEN:IOLIST EEN$
0410 IOLIST EEB$,EEB[0],EEB[1],EEB[2],EEB[3],EEB[4],EEB[5] ! WO215367
0420 IOLIST EC7$,EC7[0],EC7[1]
0430 IOLIST UM$,UM[0],UM[1],UM[2],UM[3],UM[4],UM[5]
0450 IOLIST ECR$
0460 IOLIST EDD$,EDD[0],EDD[1],EDD[2],EDD[3],EDD[4],EDD[5],EDD[6]
0470 IOLIST GRB$,GRB(0),GRB(1),GRB(2),GRB(3),GRB(4),GRB(5),GRB(6),GRB(7),GRB(8),GRB(9),GRB(10),GRB(11),GRB(12),GRB(13),GRB(14),GRB(15),GRB(16),GRB(17),GRB(18),GRB(19),GRB(20)
0490 IOLIST INVOICE_LINE_INDEX,GRT$,GRT(0),GRT(1),GRT(2),GRT(3),GRT(4),GRT(5),GRT(6),GRT(7),GRT(8),GRT(9),GRT(10)
0491 IOLIST EDS1$,EDS2$
0492 IOLIST OFG$,OFG[0],OFG[1],OFG[2],OFG[3],OFG[4],OFG[5],OFG[6],OFG[7]
0493 IOLIST EDV$,EDV[0],EDV[1],EDV[2],EDV[3],EDV[4],EDV[5],EDV[6],EDV[7]
0495 IOLIST INV_ECE$,INV_ECE[0],INV_ECE[1],INV_ECE[2],INV_ECE[3],INV_ECE[4],INV_ECE[5],INV_ECE[6],INV_ECE[7],INV_ECE[8]
0497 IOLIST ECER$,ECER[0],ECER[1],ECER[2],ECER[3],ECER[4],ECER[5],ECER[6],ECER[7],ECER[8]
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))],FS6[7],BLGRBNKS$(100)
0510 Z$="020 ECD... 03O ECE... 04O ECF... 06O IC0... 07O FM1... 08O FM0... 09O FMP... 10O ECJ... 11O ECK... 12O ECL... 13O ZZPARM 14O ECG... 15O ECH... 16O FMM... 17O ECO... 18O ECI... 19O IC1... 20O FM3... 21O FM4... 22O EC7... 23O ECV... 24O EC0... 25O ECR... 26O EDD... 27O EC6... 28O GRB... 29O GRT... 30O GRD... 31O IC2... 32O EDM... 33O EDN... 34O EDO... 35O EDS... 36O OFG...  37O EDV...  38O FTD... 39O FS2...  40O FM5...  41O EDQ...  42O EC8... 43OSECE...  44O EDU...  45O AP4...  46O EEB...  47O EEE...  48O EEF...  49O AR5...  50O EEG...  51O EEI...  52O EEJ...  53O FT1...  54O EDT...  55O PO3...  56OSEEF...  57O EEK...  58O EEL...  59O FTS...  60O AR3...  61O EEN...  62O EEO...  63O EEP...  64O EEQ...  "
0511 IF EC$[1](1318,1)="Y" THEN Z$=SUB(Z$,"ECD...","EDN..."); Z$=SUB(Z$,"ECE...","EDO...") ! 255476 - Approval Edit Mode
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0525 IF FILERETURN$="Y" THEN RETURN 
0535 READ (Z[13],KEY=X3$(9,3)+"I/C")ICPARM$
0540 DIM M6[1]; M6$="###,###.00-",M6[0]=621,M6[1]=2; IF ICPARM$(45,1)>"2" THEN DIM M6$(11,"0"); M6[1]=NUM(ICPARM$(45,1)),M6$(1,10-M6[1])="##########",M6$(POS("0"=M6$),1)=".",M6[0]=(10-M6[1])*100+M6[1]*10
0550 IF (FN%HAS_MODULE("EO")) THEN HAS_EO=1 ! SSP268892, Extended Order Features
0560 DIM OPPARM$(512); FIND (Z[13],KEY=X3$(9,3)+"F/M")OPPARM$(1) ! SSP307210
1000 REM "Process DATA array
1001 REM "Set ECD_IN$ and ECE_IN$ and any other variables
1003 DIM CC_BILLADDR$(87)
1004 DIM ECD_IN$(1580),ECE_IN$(499),ECE_IN[8],ECE_SET[8],ECE_IN_DATA$[2000],ECE_IN_DATA[2000,8],ECE_SET_DATA[2000,8],REAL_ITEM_KEY_DATA$[2000],DELETE_LINE[2000],QUANTITY_MULTIPLIER[2000],ALT_IN_DATA$[2000],EEC$(510),EEG_IN_DATA$[2000],EEG_OUT_DATA$[2000,2],CIC_IN_DATA$[2000],FROM_CIC_IN_DATA$[2000],FROM_EQD_CUST_IN_DATA$[2000],EEL_IN_DATA$[2000,99],LINE_SPEC_URL_IN_DATA$[2000],CC_DATA$[4],EEO_IN$(126),EEO_IN_DATA$[2000]; HAVE_ORDER_LINE_ID_3P$="N",EEG_INDEX=0,DELETED_LINES$="",BASIC2_OK$="Y",HAVE_EEL$="N"; PERFORM "EC3EEF;INIT" ! 155076. SSP167489, added DELETED_LINES$, WO168683, added BASIC2_OK$. WO215369/WO224138, WO 224917, WO234315, WO251794, WO277813, SSP290559, SSP293539, WO300154, SSP307244-DBD-88, DBD-191-DBSPT-117328-SSP307365, DBD-272-SSP307406
1005 DATA_TAGS$="001<template>002<purchase>003<delete>004<new>005<worksheet>006<customer>007<location>008<cust_req>009<req_date>010<attention>011<ship_via>012<needed_by>013<line_number>014<line_type>015<from_customer>016<item_code>017<cost_center>018<cost_code>019<item_desc>020<um>021<ship_from>022<quantity>023<qty_per_um>024<ordered_by>025<ship_via_code>026<how_to_ship>027<ship_with>028<man_name>029<man_addr_1>030<man_addr_2>031<man_city>032<man_state>033<man_zip>034<mark_for>035<reset>036<delete_line>037<item_key>038<3p_id>039<3p_info_1>040<3p_info_2>041<man_addr_n>042<cc_type>043<cc_number>044<cc_expire>045<cc_name>046<print_flags>047<recv_dept>048<order_review>049<display_line_number>050<quantity_multiplier>051<po_code>052<vendor_code>053<vendor_plant>054<cctemplate>055<ccaction>056<item_source>057<update_cc_onbuyer>058<line_unit_price>059<line_unit_cost>060<cc_expire_month>061<cc_expire_year>062<ship_via_map>063<permanent_address_change_shipto>064<permanent_attn_change_shipto>065<cc_required>066<approvaltemplate>067<approval_purchase>068<rc_number>069<respmsg>070<cc0template>071<alternate_item_code>072<cc_aprvl_ref>073<order_comment>074<testing_template>075<3p_info_3>076<order_email_addr>077<save_wk_action>078<save_wk_template>079<req_tf_order_no>080<inside_delivery>081<acct_number>082<worksheet_line_action>083<worksheet_line>084<orig_order_quantity>085<new_order_quantity>086<bill_m>087<shipper_id>088<create_po>089<retrieve_worksheet>090<m1000_extend>091<fmn_note1>092<fmn_note2>093<fmn_note3>094<fmn_note4>095<fmn_note5>096<fmn_note6>097<fmn_note7>098<fmn_note8>099<fmn_note9>100<fmn_note10>101<cust_inv_vendor>102<warehouse_xref>103<po_action>104<line_external_ref1>"
1006 DATA_TAGS$+="105<regional_sls_mngr>106<regional_sls_mngr_email>107<dist_acct_billto_num>108<dist_acct_billto_name>109<dist_acct_billto_addr>110<dist_acct_billto_city>111<dist_acct_billto_state>112<dist_acct_billto_zip>113<dist_acct_billto_country>114<cust_inv_vendor_div>115<cc_bill_addr1>116<cc_bill_addr2>117<cc_bill_city>118<cc_bill_state>119<cc_bill_zip>120<old_session_id>121<merch_acct>122<ext_line_number>123<primary_function>124<primary_function_addtl_1>125<primary_function_addtl_2>126<3p_order_id>127<3p_sender_id>128<cc_cvv>129<ss_line_number>130<ss_seq_number>131<ss_loc_type>132<ss_loc_code>133<ss_perm_ship_addr>134<ss_perm_ship_attn>135<ss_attention>136<ss_ship_via>137<ss_ship_via_code>138<ss_how_to_ship_code>139<ss_how_to_ship_desc>140<ss_ship_with>141<ss_man_ship_addr_1>142<ss_man_ship_addr_2>143<ss_man_ship_city>144<ss_man_ship_state>145<ss_man_ship_zip>146<ss_mark_for>147<ss_man_ship_cust>148<ss_inside_delivery>149<ss_acct_num>150<ss_bill_m>151<ss_shipper_id>152<ss_quantity>153<ss_email_addr>154<3pm_id>155<3pm_info_1>156<3pm_info_2>157<3pm_info_3>158<sales_tax_code>159<ss_sales_tax_code>160<3p_order_line_id>161<suspend_pl>162<3p_freight>163<suspend_po>164<order_cust_ref_1>165<order_cust_ref_2>166<order_cust_ref_3>167<order_cust_ref_4>168<order_cust_ref_5>169<order_cust_ref_6>170<order_cust_ref_7>171<order_cust_ref_8>172<order_cust_ref_9>173<order_cust_ref_10>174<cic_code>175<3p_from_id>176<3p_to_id>177<3p_other_1>178<3p_other_2>179<3p_other_3>180<pl_alt_selection>181<ext_field_1>182<ext_field_2>183<3p_freight_special_code>184<3p_freight_line_number>185<3p_freight_display_line>186<3p_freight_po_code>187<3p_freight_vendor_code>188<3p_freight_vendor_plant>189<job_costing>190<item_line_type>191<ss_ext_line_number>192<bypass_order_email_addr_conf>193<vault_id>194<from_cic_code>"
1007 DATA_TAGS$+="195<bt_name_override>196<bt_addr1_override>197<bt_addr2_override>198<bt_city_override>199<bt_state_override>200<bt_zip_override>201<bt_addrn_override>202<smart_addr_n>203<cust_loc_code>204<ss_cust_loc_code>205<ss_recv_dept>206<ss_ship_via_map>207<3p_full_url>208<contract_number>209<csr>210<po_comments>211<order_comment_mesglines>212<plant_quote_number>213<ec_source>214<terms_code>215<man_country>216<ss_man_country>217<line_spec_url>218<3p_order_id_2>219<cust_profile_id>220<from_eqd_customer>221<long_recv_dept>222<ss_long_recv_dept>223<comp_master_line_number>224<comp_is_master_line>225<line_unit_imsprice>"
1010 I=0; REPEAT ! FOR I=1 TO NUM_ENTRIES
1015 I++; TAG$=DATA$[I,0],VALUE$=DATA$[I,1]
1016 ! MESS$="|DEBUG|NUM_ENTRIES|"+STR(NUM_ENTRIES)+"|TAG|"+DATA$[I,0]+"|VALUE|"+DATA$[I,1]+"|"; MX=FN%_LOG_MESSAGE_WITH_FLUSH("MESG",MESS$) ! Debug log message
1017 T_IN=POS("."=TAG$); IF T_IN THEN TAG_PARM$=MID(TAG$,T_IN+1),TAG$=MID(TAG$,1,T_IN-1) ELSE TAG_PARM$="" ! DBD-191-DBSPT-117328-SSP307365
1018 DPOS=POS("<"+TAG$+">"=DATA_TAGS$); IF DPOS=0 THEN GOTO 1090 ELSE DINDEX=NUM(DATA_TAGS$(DPOS-3,3),ERR=1090)
1019 ON DINDEX GOTO 1090,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020,6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036,6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100,6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6116,6117,6118,6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,6132,6133,6134,6135,6136,6137,6138,6139,6140,6141,6142,6143,6144,6145,6146,6147,6148,6149,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,6164,6165,1090
1021 TEMPLATE$=VALUE$; GOTO 1090; REM "template
1022 IF POS("Y"=VALUE$)=1 THEN PURCHASE=1 END_IF ; IF PURCHASE THEN GOSUB ON_PURCHASE_TASKS END_IF ; GOTO 1090; REM "Purchase ! 257291
1023 IF VALUE$="Y" THEN DELETE_WORKSHEET=1 END_IF ; GOTO 1090; REM "Delete
1024 IF VALUE$="Y" THEN NEW=1 END_IF ; GOTO 1090; REM "New
1025 ECD_IN$(1,10)=VALUE$,ECE_IN$(1,10)=VALUE$,WORKSHEET$=VALUE$,%WORKSHEET$=VALUE$; GOTO 1090; REM "worksheet (will touch up later
1026 ECD_IN$(26,10)=VALUE$; GOTO 1090; REM "customer - will add check for permission and cleanuplater
1027 VALUE$=MID(SUB(VALUE$,",","    "),1,4); IF NOT(NUL(VALUE$)) THEN ECD_IN$(36,4)=VALUE$; END_IF ; GOTO 1090; REM "location - will add check for permision & cleanup code later; 204180-Replace comma with blank chars and pad with trailing blanks
1028 ECD_IN$(40,10)=FN%CVT4$(STP(STP(VALUE$,1),0)); IF LEN(VALUE$)>10 THEN ECD_IN$(163,5)=VALUE$(11) END_IF ; GOTO 1090; REM "cust_req
1029 Q$=VALUE$; GOSUB 8000; ECD_IN$(58,6)=Q$; GOTO 1090; REM "req_date
1030 ECD_IN$(64,30)=VALUE$,ATTENTION_VALUE_SUBMITTED$="Y"; GOTO 1090; REM "attention / 158233
1031 ECD_IN$(94,15)=VALUE$; IF MSK(VALUE$,"[^,]*,",ERR=*NEXT)>0 THEN ECD_IN$(94,15)=STP(MID(VALUE$,MSK(VALUE$,"[^,]*,"),MSL-1,ERR=*NEXT),2); END_IF ; GOTO 1090; REM "Ship via
1032 Q$=VALUE$; GOSUB 8000; ECD_IN$(109,6)=Q$; GOTO 1090; REM "needed_by
1033 IF STP(LINE_NUMBERS$,1)="" THEN LINE_NUMBERS$=VALUE$ END_IF ; GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](25,3)=STR(NUM(VAL$[VAL_INDEX],ERR=8950):"000"); NEXT VAL_INDEX END_IF ; GOTO 1090; REM "line_number
1034 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](28,1)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "line_type,will have to add check logic
1035 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](29,10)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "from_customer, will have to add check logic
1036 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](228,20)=UCS(VAL$[VAL_INDEX]); NEXT VAL_INDEX END_IF ; GOTO 1090; REM "item_code, will be checked later, ssp#146902
1037 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](49,9)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "cost_center
1038 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](58,9)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "cost_code
1039 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](67,40)=STP(VAL$[VAL_INDEX],3,","); NEXT VAL_INDEX END_IF ; GOTO 1090; REM "item_desc
1040 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](107,4)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "um -add check logic later
1041 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](111,4)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "ship_from - add check logic & permissions
1042 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX; GOTO 1090 ELSE ECE_IN_DATA[VAL_INDEX,0]=NUM(VAL$[VAL_INDEX],ERR=8950),ECE_SET_DATA[VAL_INDEX,0]=1; NEXT VAL_INDEX; GOTO 1090; REM "quantity, set ece_set[0] so we know it should be changed
1043 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX; GOTO 1090 ELSE ECE_IN_DATA[VAL_INDEX,1]=NUM(VAL$[VAL_INDEX],ERR=8950),ECE_SET_DATA[VAL_INDEX,1]=1; NEXT VAL_INDEX; GOTO 1090; REM "qty_per_um, set ece_set[1] so we know it should be changed
1044 ECD_IN$(168,20)=VALUE$; GOTO 1090; REM "ordered_by
1045 GOSUB 7650; GOTO 1090; REM "ship_via_code
1046 GOSUB 7700; GOTO 1090; REM "how_to_ship
1047 ECD_IN$(205,30)=VALUE$; GOTO 1090; REM "ship_with
1048 ECD_IN$(376,35)=STP(VALUE$,2); GOTO 1090; REM "man_name
1049 ECD_IN$(243,30)=STP(VALUE$,2),SMART_SHIPTO_ADDR_1$=STP(VALUE$,2); GOTO 1090; REM "man_addr_1 WO278424, save off original value for later in case smart_addr_n=Y
1050 ECD_IN$(273,30)=STP(VALUE$,2),SMART_SHIPTO_ADDR_2$=STP(VALUE$,2); GOTO 1090; REM "man_addr_2 WO278424, save off original value for later in case smart_addr_n=Y
1051 ECD_IN$(303,16)=STP(VALUE$,2); GOTO 1090; REM "man_city
1052 ECD_IN$(319,2)=UCS(VALUE$); GOTO 1090; REM "man_state
1053 GOSUB 7750; GOTO 1090; REM "man_zip
1054 ECD_IN$(330,35)=VALUE$; GOTO 1090; REM "mark_for
1055 IF VALUE$="Y" THEN DO_RESET=1 END_IF ; GOTO 1090; REM "reset  will reset order
1056 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF POS("Y"=VAL$[VAL_INDEX])>0 THEN DELETE_LINE[VAL_INDEX]=1 END_IF ; NEXT VAL_INDEX; GOTO 1090; REM "delete_line
1057 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF POS(" "<>VAL$[VAL_INDEX])>0 THEN REAL_ITEM_KEY_DATA$[VAL_INDEX]=UCS(VAL$[VAL_INDEX]),ECE_IN_DATA$[VAL_INDEX](29,20)=REAL_ITEM_KEY_DATA$[VAL_INDEX] END_IF ; NEXT VAL_INDEX; GOTO 1090; REM "item_key
1058 IF STP(P_IDS$,1)="" THEN P_IDS$=VALUE$ END_IF ; P_ID$=VALUE$; GOTO 1090; REM "3p_id
1059 P_INFO_1$=VALUE$; GOTO 1090; REM "3p_info_1
1060 P_INFO_2$=VALUE$; GOTO 1090; REM "3p_info_2
1061 IF ADDR_N=273 THEN GOTO 1090 ELSE IF ADDR_N=243 THEN ADDR_N=273,SMART_SHIPTO_ADDR_2$=STP(VALUE$,2) ELSE ADDR_N=243,SMART_SHIPTO_ADDR_1$=STP(VALUE$,2) END_IF ; ECD_IN$(ADDR_N,30)=STP(VALUE$,2); GOTO 1090; REM "man_addr_n, add first to addr_1, then addr_2, 154001>only do first two WO278424, save off original values for later in case smart_addr_n=Y      
1062 ECD_IN$(411,4)=STP(VALUE$,2); GOTO 1090; REM "cc_type
1063 ECD_IN$(415,20)=STP(VALUE$,2); GOTO 1090; REM "cc_number
1064 ECD_IN$(435,4)=STP(VALUE$,2); GOTO 1090; REM "cc_expire
1065 ECD_IN$(439,40)=STP(VALUE$,2); GOTO 1090; REM "cc_name
1066 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](13,5)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "print_flags
1067 RDTMP=POS(","=VALUE$); IF RDTMP=0 THEN ECD_IN$(479,20)=STP(VALUE$,1); GOSUB GET_LOC_FROM_RECV_DEPT; GOTO 1090 ELSE IF RDTMP>1 THEN ECD_IN$(479,20)=STP(VALUE$(1,RDTMP-1),1); GOSUB GET_LOC_FROM_RECV_DEPT; GOTO 1090; REM "recv_dept take only 1 /166336
1068 IF POS(VALUE$="Yy")=0 THEN ORDER_REVIEW$="N"; GOTO 1090 ELSE ORDER_REVIEW$="Y"; GOTO 1090; REM "order_review
1069 DISPLAY_LINE_NUMBER$=STR(NUM(VALUE$,ERR=1090):"000"); GOTO 1090; REM "display_line_number - only valid if number, format for later use
1070 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF POS(" "<>VAL$[VAL_INDEX])>0 THEN QUANTITY_MULTIPLIER[VAL_INDEX]=NUM(VAL$[VAL_INDEX]) END_IF ; NEXT VAL_INDEX; GOTO 1090; REM "item_key
1071 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](129,1)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "po_code 
1072 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](115,10)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "vendor_code - no ref integrity check done
1073 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](125,4)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "vendor_plant - no ref integrity check done, 249773
1074 CCTEMPLATE$=VALUE$; IF EC$[1](1166,1)="Y" THEN TEMPLATE$=VALUE$; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},TEMPLATE$; GOTO 1090 ELSE GOTO 1090; REM "cctemplate - if credit card purchase then redirect template to credit card authorization template 159572.  SSP168448, set CCTEMPLATE$ in case we need if cc_required in sent in as Y on the fly.     
1075 CCACTION$=UCS(VALUE$); IF STP(CCACTION$,3," ")="B" THEN DELETE_INVOICE=1 END_IF ; GOTO 1090; REM "ccaction (I - invoice  B-Delete Order/temp invoice  C-Create order/temp invoice)
1076 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](18,1)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "item_source
1077 UPDATE_CC_ONBUYER$="Y"; GOTO 1090; REM "update_cc_onbuyer (to be used with check box - if line triggered then set flag to "Y"
1078 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX; GOTO 1090 ELSE ECE_IN_DATA[VAL_INDEX,2]=NUM(VAL$[VAL_INDEX],ERR=8950),ECE_SET_DATA[VAL_INDEX,2]=1; NEXT VAL_INDEX; GOTO 1090; REM "line_unit_price, set ece_set[2] so we know it should be changed 155076
1079 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX; GOTO 1090 ELSE ECE_IN_DATA[VAL_INDEX,3]=NUM(VAL$[VAL_INDEX],ERR=8950),ECE_SET_DATA[VAL_INDEX,3]=1; NEXT VAL_INDEX; GOTO 1090; REM "line_unit_cost, set ece_set[3] so we know it should be changed 155076
1080 CC_EXPIRE_MONTH$=VALUE$; GOTO 1090; REM "cc_expire_month
1081 CC_EXPIRE_YEAR$=VALUE$; GOTO 1090; REM "cc_expire_year
1082 IF STP(VALUE$,3)<>"" THEN GOSUB 8970; GOTO 1090 ELSE GOTO 1090 ! WO156839, Ship Via Map
1083 PADDRC$=UCS(VALUE$); IF PADDRC$="" THEN GOTO 1090 END_IF ; PERM_ADDR_CHANGE_SHIPTO$=PADDRC$,ECD_IN$(56,1)=PADDRC$; GOTO 1090; REM "permanent_addrss_change_shipto 154323
1084 PATTNC$=UCS(VALUE$); IF PATTNC$="" THEN GOTO 1090 END_IF ; PERM_ATTN_CHANGE_SHIPTO$=PATTNC$,ECD_IN$(57,1)=PATTNC$; GOTO 1090; REM "permanent_attn_change_shipto 154323
1085 CC_REQUIRED$=UCS(VALUE$); GOTO 1090; REM "cc_required; REM "160763
1086 APPROVAL_TEMPLATE$=VALUE$; GOTO 1090; REM "approvaltemplate; REM "148750
1087 APPROVAL_PURCHASE$="Y"; GOTO 1090; REM "approval_purchase 148750 (indicates that purchase if for previous order held for approval and this is the approval of that order
1088 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](262,20)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "RC number
1089 RESPMSG$=VALUE$; GOTO 1090; REM "verisign response
1090 UNTIL I>=NUM_ENTRIES ! NEXT I
1100 REM "Process order
1101 VERSION$="307410.20220728",PROGRAM$=PGN; DIM BYBINFO$[5]; BYBINFO$[1]=PROGRAM$,BYBINFO$[2]=VERSION$,BYBINFO$[3]=TEMPLATE$,BYBOPTIONS$=""
1102 DIM ECD$(1580),ECD[1],ECE$(499),ECE[8],P_INFO$[200]; USE_EXIST=0,ECD3$=""; IF P_ID$>"" THEN GOSUB 5300 ! 155076
1103 ITEM_PRICE_TOTAL=0,ORDER_LINE_TOTAL=0; IF STP(CC_EXPIRE$,3," ")="" THEN IF STP(CC_EXPIRE_MONTH$+CC_EXPIRE_YEAR$,3," ")<>"" THEN ECD_IN$(435,4)=CC_EXPIRE_MONTH$+CC_EXPIRE_YEAR$; REM "ssp 146577 "
1104 IF DO_RESET AND PURCHASE=0 THEN ECD_IN$(1)=""; GOSUB 8100; GOTO 1500; REM "If purchase is set then we want to buy it and THEN clearit, so wait to clear
1105 IF STP(CC_REQUIRED$,3," ")<>"" THEN EXTRACT RECORD (33005,KEY=EC$[1](1,7))ECBREC$; ECBREC$(1166,1)=CC_REQUIRED$; GOSUB 7450; WRITE RECORD (33005,KEY=EC$[1](1,7))ECBREC$; EC$[1]=ECBREC$; IF EC$[1](1166,1)="Y" THEN IF STP(CCTEMPLATE$,3)<>"" THEN TEMPLATE$=CCTEMPLATE$; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},TEMPLATE$; END_IF ; END_IF ; END_IF ; IF STP(TERMS_CODE_OVERRIDE$,3)<>"" THEN GOSUB UPDATE_TERMS_CODE; REM "160763. SSP168448, reset TEMPLATE$ to CCTEMPLATE$ on the fly. SSP170238, in 7450's reset terms code on the fly. WO306701, if terms code override then reset in session so correct at 7509
1106 IF STP(ECD_IN$(1,10),3," ")="" THEN IF STP(ECD_IN$(40,10)+ECD_IN$(163,5),3," ")="" THEN GOTO 1107; REM ELSE GOSUB 07850; REM "Check to see if cust_req given then can we lookup the worksheet number, we don't want to lookup the cust_req here, that should be a customer requested action
1107 IF DELETE_WORKSHEET THEN GOSUB 7000; GOSUB 7800; GOSUB 8100; GOTO 1500 ELSE FOR DEL_INDEX=1 TO HIGHEST_VAL_COUNT; IF DELETE_LINE[DEL_INDEX] THEN GOSUB 8200 END_IF ; NEXT DEL_INDEX; REM GOTO 01500; REM "Delete the worksheet. Will delete the current worksheet number if no worksheet number given. If delete_line then remove 1 line only
1108 IF NEW THEN GOTO 1110 ELSE IF STP(ECD_IN$(1,10),3," ")="" THEN IF STP(EC$[1](97,10),3," ")="" THEN GOTO 1110 ELSE ECD_IN$(1,10)=EC$[1](97,10); FIND (Z[2],KEY=ECD_IN$(1,10),DOM=1109); USE_EXIST=1; GOTO 1111 END_IF ELSE GOTO 1111; REM "if no ws# given, check current ws#, if there then we will use it
1109 ECD_IN$(1,10)=""; REM "didn't find worksheet so assume we need new
1110 IF (NEW OR STP(ECD_IN$(1,10),3," ")="") THEN IF EC$[2](88,1)="Y" THEN GOSUB 8050 ELSE GOTO 1150; REM "If NEW or no current worksheet,then create a worksheet If permitted to do so, else give error message
1111 IF DELETE_INVOICE THEN GOSUB 7000; GOTO 1500; REM "credit card: cancelling order with CCACTION$=B ssp 146930
1112 IF CCACTION$="R" THEN CCACTION$="B",DELETE_INVOICE=1; GOSUB 7000; CCACTION$="C",PURCHASE=1,DELETE_INVOICE=0 ! WO 233319
1115 WORKSHEET$=ECD_IN$(1,10); REM "Update worksheet number used in display section
1116 IF NOT(NUL(ECD_IN$(790,14))) THEN DEF_VENDOR$=ECD_IN$(790,14); GOSUB 6350; ECD_IN$(788,1)=CUST_SPLD_INV$; IF CUST_SPLD_INV$="Y" THEN ECD_IN$(789,1)="S" ELSE ECD_IN$(789,1)="B" ! ssp 198994
1117 IF WORKSHEET_LINE_ACTION$="C" THEN GOSUB 5900; GOTO 1500 ! WO189428, change order quantity on existing worksheet line
1120 GOSUB 7500; REM "Update header fields
1122 GOSUB 7100; REM "build invoice display routine
1145 GOSUB 1200; REM "Process line information
1146 PERFORM "EC3EEF;PROCESS_SPECIAL_SHIP" ! Process special shipping lines
1150 IF PURCHASE THEN GOSUB 7900; GOSUB 4400; GOSUB 8140; IF DO_RESET THEN ECD_IN$(1)="",ECD$(1)="",ECE_IN$(1)="",ECE$(1)="",WORKSHEET$=""; GOSUB 8100; REM "if reset is set , clear after purchase.  SSP191217, added GOSUB 8140, to remove TRO file      
1151 IF PURCHASE AND APPROVAL_ORDER$="Y" AND APPROVAL_PURCHASE$<>"Y" THEN TEMPLATE$=APPROVAL_TEMPLATE$; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},TEMPLATE$; REM "148750 if approval order then redirect to new order confirmation template for approval orders; WO242686 - Found this line is superfluous, overridden by line 1501
1160 REM "get invoice header information
1162 DIM GRB$(500),GRB(20); FIND (Z(28),KEY=ECD$(509,14),DOM=1163)IOL=0470
1163 ! IF EC_PARM$(950,1)<>"Y" THEN IF ECD$(509,14)=DIM(14) THEN GOTO 1165; REM "161854. SSP167843, 212974 - Commented line out, don't need it
1164 IF ECD$(507,1)="Y" THEN GOSUB 8650; REM "if cc order then update EDD with new information
1195 GOTO 1500; REM "Process output file
1200 REM "Process ECE_IN$ information if needed
1201 IF SAVE_WK_ACTION$="R" THEN GOSUB 5600; IF MAKE_RLINE$="Y" THEN GOTO 1204 ELSE GOTO *RETURN END_IF END_IF ; IF HIGHEST_VAL_COUNT=0 THEN GOTO 1299
1202 FOR ECE_INDEX=1 TO HIGHEST_VAL_COUNT
1203 ECE_IN$=ECE_IN_DATA$[ECE_INDEX],REAL_ITEM_KEY$=REAL_ITEM_KEY_DATA$[ECE_INDEX],QUANTITY_MULTIPLIER=QUANTITY_MULTIPLIER[ECE_INDEX],ALT_IN$=ALT_IN_DATA$[ECE_INDEX],FROM_CIC_CODE$=FROM_CIC_IN_DATA$[ECE_INDEX],FROM_EQD_CUSTOMER$=FROM_EQD_CUST_IN_DATA$[ECE_INDEX],LINE_SPEC_URL$=LINE_SPEC_URL_IN_DATA$[ECE_INDEX],EEO_IN$=EEO_IN_DATA$[ECE_INDEX]; FOR ECE_INDEX2=0 TO 3; ECE_IN[ECE_INDEX2]=ECE_IN_DATA[ECE_INDEX,ECE_INDEX2],ECE_SET[ECE_INDEX2]=ECE_SET_DATA[ECE_INDEX,ECE_INDEX2]; NEXT ECE_INDEX2; ECE_IN[7]=ECE_IN_DATA[ECE_INDEX,7],ECE_SET[7]=ECE_SET_DATA[ECE_INDEX,7]; IF HAVE_ORDER_LINE_ID_3P$="Y" THEN ORDER_LINE_ID_3P$=EEG_IN_DATA$[ECE_INDEX] ! 155076. WO175907, added setting for ALT_IN$. WO234315, added setting for EEG_IN_DATA$. WO277813, from_cic_code. SSP290559, 3p_full_url. WO300154 SSP307244-DBD-88, line_spec_url, DBD-191-DBSPT-117328-SSP307365, DBD-272-SSP307406 from_eqd_customer
1204 DIM ECE$(499),ECE[8],MESS_INFO$[20]; ECE$(1,10)=ECD$(1,10),ECE$(25,3)=ECE_IN$(25,3),ECE$(258,1)=PRINT_LINE$; ECE$(259,3)=MASTER_ITEM$,ECE$(13,5)=PRINT_FLAG_OVERRIDE$; IF EDV_SELL_PRICE<>0 THEN ECE[2]=EDV_SELL_PRICE,ECE_IN[2]=EDV_SELL_PRICE ! 155076, SSP171777, WO177695, SSP253927
1205 IF STP(REAL_ITEM_KEY$,3)="" AND STP(ECE_IN$(228,20),3)="" AND ECE$(25,3)<>DIM(3) THEN GOTO 1209 END_IF ; IF STP(FROM_EQD_CUSTOMER$)>"" THEN GOSUB FIND_CUST_FROM_EQD_CUST END_IF ; GOSUB GET_ITEM_CODE ! use real_item_key or ece_in$(228,20) to get item code loaded into ece_in$(29,20).  If coming from shopping cart and entered field (RC#) and we know the line number then skip around and find correct ECE record to change, SSP167120 DBD-272-SSP307406
1206 ECE$(262,20)=ECE_IN$(262,20)
1207 IF ECE_IN$(28,1)<>"M" THEN IF STP(ECE_IN$(39,10),3," ")="" OR (ECE_IN[0]=0 AND ECE_IN$(310,1)<>"C") THEN GOSUB 8350; GOTO 1297; REM "If no item code given, then don't create a line ssp#146902, ECE$(39,10)loaded in get_item_code 166502, WO 198994 - If order line being cancelled, qty is zero, allow it, reqd by EC3OE0 and OF2UAA later
1208 GOSUB SET_READONLY; DIM ECR$(1000); ECR$(1,20)=ECE_IN$(29,20); ECE$(165,48)=EC$[11]; FIND (Z[25],KEY=ECR$(1,20),DOM=*NEXT)ECR$; IF ECR$(256,48)<>DIM(48) THEN ECE$(165,48)=STP(ECR$(256,48),1) END_IF ; ECE$(248,10)=ECR$(243,10); REM "set up warehouse selection list on ECE line - override from item parameters if set / assign 3pid from item parms 148750
1209 REM "If line # <> blank then get that line to update non-blank fields. If specified line not found, or line # is blank, then create new line
1210 GOSUB CLEAR_READONLY; EXISTING_LINE$="N"; IF ECE$(25,3)<>DIM(3) THEN EXTRACT (Z[3],KEY=ECE$(1,10)+ECE$(25,3),DOM=1214)IOL=0330; EXISTING_LINE$="Y"; GOTO 1216 ! WO178946, need to know we are updating an existing line         
1211 READ (Z[3],KEY=ECE$(1,10)+$FFFFFF$,DOM=1212)
1212 KEY_3$="",KEY_3$=KEP(Z[3],END=1213)
1213 IF KEY_3$="" OR KEY_3$(1,10)<>ECE$(1,10) THEN ECE$(25,3)="001" ELSE ECE$(25,3)=STR(NUM(KEY_3$(11,3))+1:"000")
1214 IF POS(ECE$(25,3)=DELETED_LINES$,3)>0 THEN GOTO 1298 ELSE WRITE (Z[3],KEY=ECE$(1,10)+ECE$(25,3),DOM=1211)IOL=0330; EXTRACT (Z[3],KEY=ECE$(1,10)+ECE$(25,3),DOM=1211)IOL=0330; REM "159048.  SSP167489, added check to make sure we are not writing out a worksheet line that was just deleted
1215 IF MASTER_ITEM$<>DIM(3) THEN ECE$(259,3)=MASTER_ITEM$
1216 REM "Put non-blank ECE_IN$ values into ECE$
1217 OFG_KEY$=ECE$(29,20),OFG_ITEM$=ECE$(39,10),OF2_SELL_UM$=ECE$(107,4),OF2_SELL_UNIT=ECE[2],OF2_QTY=ECE[0]; REM "Set vars need in OFG processing @4000' s                                                                          
1218 ISTR$="011002|013012|028001|029010|039010|049009|058009|067040|107004|111004|228020|262020|129001|285010|115014|298001|299001|300010|310001|311010|321003|130035|324010|334020|354020|374050|424001|427020|447020|258001|467001|"
1220 FOR II=1 TO LEN(ISTR$)-6 STEP 7
1222 XX=NUM(ISTR$(II,3)),YY=NUM(ISTR$(II+3,3)); IF STP(ECE_IN$(XX,YY),3," ")="" THEN GOTO 1224 ELSE ECE$(XX,YY)=ECE_IN$(XX,YY)
1224 NEXT II
1225 REM "update numerics also
1228 FOR II=0 TO 3 ! 155076. WO300154, was line 1233
1229 IF ECE_SET[II] THEN ECE[II]=ECE_IN[II] ! WO300154, was line 1234
1230 NEXT II ! WO300154, was line 1235
1231 IF ECE_SET[7] THEN IF ECE_IN[7]=0 THEN ECE[7]=-999999999 ELSE ECE[7]=ECE_IN[7] ! 307487
1232 IF STP(EEO_IN$)>"" AND ECE$(129,1)<>DIM(1) THEN GOSUB WRITE_EEO ! WO300245
1236 IF ECE_SET[2]=1 AND ECE_IN[2]=0 THEN ECE[2]=-999999999; REM "15507 6 if really set to 0 then use special value to alert OF2UAA            
1237 IF ECE_SET[3]=1 AND ECE_IN[3]=0 THEN ECE[3]=-999999999; REM "15507 6 if really set to 0 then use special value to alert OF2UAA            
1238 IF QUANTITY_MULTIPLIER<>0 THEN ECE[0]=INT(ECE[0]*QUANTITY_MULTIPLIER)
1239 IF (QUANTITY_MULTIPLIER=0 AND ECE_IN$(28,1)="S") OR QTY_MULTIPLIER_OVERRIDE$="Y" THEN ECE[0]=1 ELSE IF ECE_IN$(28,1)="M" THEN ECE[0]=0 ! SSP237308
1240 REM "lookup FM1 and IC0 data, set up def_xxx$ strings to default if needed
1241 IF ECE$(28,1)="M" AND ECE$(67,40)=DIM(40) AND EDV_MESSAGE$<>"" THEN ECE$(67,40)=EDV_MESSAGE$ ! SSP171777/172173, changed from MESSAGE$ to EDV_MESSAGE$
1242 IF CHNG_QTY_MODE THEN ECE$(425,1)="N"; WRITE (Z[3],KEY=ECE$(1,10)+ECE$(25,3))IOL=0330; GOSUB CALCULATE_ITEM_PRICE; GOSUB UPDATE_DISP_EXT; GOSUB GET_CUST_LOC_BUDGET; BUDGET_SUBTOTAL=-(ITEMPRICEEXT) ! SSP 232851,242686
1243 IF EC$[1](1318,1)="Y" THEN IF CHNG_QTY_MODE THEN IF POS(ECE$(28,1)="MS")=0 THEN GOSUB LOG_APPR_LINE_CHANGE END_IF ELSE GOSUB LOG_APPR_LINE_ADD ! 255476 - Edit approval worksheet mode - add log messages
1244 IF ECE$(28,1)="M" THEN GOSUB 8500; GOSUB UPDATE_3P_MULTI_INFO; GOSUB WRITE_EEL2; GOSUB WRITE_EEQ; IF NOT(NUL(ECE_IN$(259,3))) THEN GOSUB UPDATE_DYNAMIC_COMP_LINE END_IF ; GOSUB 6700; GOTO 1297; REM "Skip checks if message line; REM "159048, 233818, 290559, 307244-DBD-88, DBD-191-DBSPT-117328-SSP307365, 307420
1245 IF ECE$(28,1)="S" THEN GOSUB 3100; GOTO 1297; REM "Processing for Special charge
1246 GOSUB 7550
1247 REM "If qty < 100 and < qty per, then up it to qty* qty per, BUT make exception for T types they are handled differently
1248 REM "IF X3$(9,3)<>"288" THEN IF ECE[0]<>0 AND ECE$(107,4)<>"T   " AND (ECE$(107,4)<>"M   " OR ECE[0]<1000) THEN LET ECETMP=ECE[0]*ECE[1]; IF FPT(ECETMP)<>0 THEN LET ECETMP=INT(ECETMP)+SGN(ECETMP) FI; IF ECETMP=0 THEN LET ECE[0]=1 ELSE LET ECE[0]=ECETMP; REM "133563
1250 IF HAVE_ORDER_LINE_ID_3P$="Y" AND STP(ORDER_LINE_ID_3P$,2)>"" THEN EEG_OUT_DATA$[EEG_INDEX,0]=ECE$(25,3),EEG_OUT_DATA$[EEG_INDEX,1]=ORDER_LINE_ID_3P$,EEG_OUT_DATA$[EEG_INDEX,2]=ECE$(39,10),EEG_INDEX+=1 ! WO234315, put EEG data in array with ECE line number for later retrieval if purchased 
1255 IF ECE$(25,3)="001" THEN GOSUB PROCESS_EEN
1295 IF MESSAGE_NO<>0 THEN GOSUB 8350; GOSUB 4700 ELSE GOSUB 8500; GOSUB UPDATE_3P_MULTI_INFO; GOSUB WRITE_EEL2; GOSUB WRITE_EEQ; GOSUB 6700; REM "WRITE (Z[3],KEY=ECE$(1,10)+ECE$(25,3))IOL=0330; REM "ssp 154319 - multiple message lines, SSP171185 - check dup with message_no>0 JME-4/23/04: GOSUB 4700 temp removed while still testing, 233818, 290559, 307244-DBD-88, DBD-191-DBSPT-117328-SSP307365
1296 IF MESSAGE_NO=2 THEN MESSAGE_NO=0 END_IF ; REM "148750
1297 IF CHNG_QTY_MODE THEN RETURN END_IF ; MAKE_LINE$=""; GOSUB 4500; IF MAKE_LINE$="Y" THEN GOTO 1204 ELSE IF MAKE_LINE$<>"Y" THEN MASTER_ITEM$="" END_IF ; IF MAKE_RLINE$="Y" THEN GOTO 1201 ! SSP167489, was MASTER_LINE$="", changed to the correct MASTER_ITEM$="".  WO181395, if retrieving saved worksheet lines, get ready to get the next one.  WO189428, if in change qty on worksheet line mode, then return to 5900's.
1298 NEXT ECE_INDEX; REM "148750
1299 RETURN 
1500 REM "Use template$ to open file, read line by line and insert
1501 IF %BASIC2$<>"" AND BASIC2_OK$="Y" THEN GOTO 1995 ELSE %BASIC2$=""; IF EC$[1](1166,1)="Y" AND STP(CC0TEMPLATE$,3)<>"" AND GRB[9]=0 THEN TEMPLATE$=CC0TEMPLATE$ END_IF ; IF PURCHASE AND APPROVAL_ORDER$="Y" AND APPROVAL_PURCHASE$<>"Y" THEN TEMPLATE$=APPROVAL_TEMPLATE$ END_IF ; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},TEMPLATE$; REM "156580, WO165819, WO168683 - never do BASIC2 if CC order/invoice action
1502 IF SAVE_WK_ACTION$="S" THEN GOSUB 5500 ! WO181395, save current worksheet
1503 IF TEMPLATE$="" THEN GOTO 1995 ELSE CALL "ZZDISP","AX",EC$[2](51,10),"A/R",X3$,CUST_CODE$,"",0,0,X4$; GOSUB 2100; BYBINFO$[3]=TEMPLATE$; GOSUB RETRIEVE_EEJ; GOSUB RETRIEVE_EEP ! SSP166022, TEMPLATE$ could have changed for CC or PA so reset just in case. WO247495 WO303296
1504 FIND (Z[2],KEY=WORKSHEET$,DOM=1505)IOL=0310; ECD3$=STP(ECD$(1185,396),1); IF ECD$(235,8)<>DIM(8) AND ECD$(235,8)<>"No Order" THEN GOSUB GET_NOTEPAD; REM "If no template, ok then we may be starting order, so display location info etc.  WO179030, set ECD3$ for 2nd range of PO codes.  SSP244339-get notepad data
1505 CLOSE (100); OPEN (100,OPT="TEXT",ERR=9000)TEMPLATE$
1506 REM "Setup line_tags$
1507 LINE_TAGS$="001<cust_code>002<cust_name>003<ec_company>004<session_id>005<buyer_id>006<buyer_name>007<worksheet>008<customer>009<location>010<cust_req>011<req_date>012<attention>013<ship_via>014<needed_by>015<wslinestart>016<cust_loc_code>017<address_1>018<address_2>019<city>020<state>021<zip>022<addr_1>023<addr_2>024<addr_3>025<cost_center>026<location_name>027<recv_dept>028<ship_via_list>029<date>030<time>031<tf_order_no>032<mark_for>033<location_list>034<locchangestart>035<man_name>036<man_addr_1>037<man_addr_2>038<man_city>039<man_state>040<man_zip>041<category_entry_start>042<message>043<message_start>044<ship_via_code>045<location_desc>046<addr_city>047<addr_state>048<addr_zip>049<addr_unformatted_1>050<addr_unformatted_2>051<addr_name>052<ship_via_text>053<location_text>054<cc_type>055<cc_number>056<cc_expire>057<cc_name>058<cc_type_list>059<ordered_by>060<item_price_total>061<weight_total_order>062<invoice_total_net>063<invoice_sales_tax>064<invoice_freight>065<invoice_total>066<invoicelinestart>067<cc_number_last4>068<qty_total_order>069<item_count>070<invoice_number>071<perm_addr_change_shipto_done>072<perm_attn_change_shipto_done>073<respmsg>074<order_line_total>075<cc_aprvl_ref>076<order_comment>077<wk_buyer_name>078<cc_id>079<calc_item_price_total>080<os_item_price_total>081<order_email_addr>082<buyer_email_40>083<ship_with>084<req_tf_order_no>085<inside_delivery>086<acct_number>087<approval_comments>088<bill_m>089<shipper_id>090<regional_sls_mngr>091<regional_sls_mngr_email>092<dist_acct_billto_num>093<dist_acct_billto_name>094<dist_acct_billto_addr>095<dist_acct_billto_city>096<dist_acct_billto_state>097<dist_acct_billto_zip>098<dist_acct_billto_country>099<cc_bill_addr1>100<cc_bill_addr2>101<cc_bill_city>102<cc_bill_state>103<cc_bill_zip>104<primary_function_ddl>105<primary_function_desc_ddl>106<pf_addtl_1>107<pf_addtl_2>"
1508 LINE_TAGS$+="108<primary_function>109<primary_function_addtl_1>110<primary_function_addtl_2>111<pf_addtl_1_label_1>112<pf_addtl_1_label_2>113<pf_addtl_2_label_1>114<pf_addtl_2_label_2>115<3p_order_id>116<3p_sender_id>117<cc_cvv>118<cc_expire_month>119<cc_expire_year>120<sales_tax_code>121<fmn_note1>122<fmn_note2>123<fmn_note3>124<fmn_note4>125<fmn_note5>126<fmn_note6>127<fmn_note7>128<fmn_note8>129<fmn_note9>130<fmn_note10>131<zip_code_destination>132<shipping_option>133<order_cust_ref_1>134<order_cust_ref_2>135<order_cust_ref_3>136<order_cust_ref_4>137<order_cust_ref_5>138<order_cust_ref_6>139<order_cust_ref_7>140<order_cust_ref_8>141<order_cust_ref_9>142<order_cust_ref_10>143<3p_from_id>144<3p_to_id>145<3p_other_1>146<3p_other_2>147<3p_other_3>148<pl_alt_selection>149<job_costing>150<contract_number>151<contract_date>152<csr>153<ec_source>154<man_country>155<3p_order_id_2>156<long_recv_dept>" ! WO215369, start entering output tags here
1510 READ (100,END=1595)LINE$; GOSUB 8150
1515 INDEX=POS("?tf?"=LINE$); IF INDEX=0 THEN PRINT (OUTPUT)LINE$,EOL$,; GOTO 1510
1517 REM "LET PGINDEX=POS("<!?TF?MESSAGE"=LINE$); IF PGINDEX=0 THEN GOTO 01518 ELSE ESCAPE ; IF PGINDEX=1 THEN LET LINE$=LINE$(3) ELSE LET LINE$=LINE$(1,PGINDEX-1)+LINE$(PGINDEX+2); REM "GET RID OF THE DARNED <! ON PAGE CONTROL TAGS - OTHERWISE THE WHOLE LINE GETS COMMENTED OUT IN THE HTML
1520 END_INDEX=POS("?"=LINE$(INDEX+4)),TAG$=LINE$(INDEX+4,END_INDEX-1),LINE1$=LINE$(1,INDEX-1),LINE2$=LINE$(INDEX+END_INDEX+4),LPOS=POS("<"+TAG$+">"=LINE_TAGS$); IF LPOS=0 THEN LINDEX=0 ELSE LINDEX=NUM(LINE_TAGS$(LPOS-3,3))
1530 GOSUB 2000; GOTO 1515
1595 ! Done filling out template
1600 GOSUB UPDATE_ECD_SHIPPING ! WO215367
1996 GOTO 9900
1999 REM "Get tag value & substitute
2000 ON LINDEX GOTO 2090,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2090
2001 LINE$=LINE1$+FN%HTML_ESC$(CUST_CODE$)+LINE2$; GOTO 2095; REM "cust_code
2002 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](23,35),1))+LINE2$; GOTO 2095; REM "cust_name
2003 LINE$=LINE1$+FN%HTML_ESC$(STP(EC_PARM$(7,50),1))+LINE2$; GOTO 2095; REM "ec_company
2004 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](1,7),1))+LINE2$; GOTO 2095; REM "session_id from EC$
2005 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[1](8,15),1))+LINE2$; GOTO 2095; REM "Buyer id
2006 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[2](16,35),1))+LINE2$; GOTO 2095; REM "Buyer name
2007 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1,10),1))+LINE2$; GOTO 2095; REM "worksheet
2008 CALL "ZZDISP","AX",ECD$(26,10),"A/R",X3$,TMP$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(TMP$)+LINE2$; GOTO 2095; REM "Customer code
2009 LINE$=LINE1$+FN%HTML_ESC$(ECD$(36,4))+LINE2$; GOTO 2095; REM "location code
2010 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(40,10)+ECD$(163,5),1))+LINE2$; GOTO 2095; REM "cust_req
2011 IF STP(ECD$(58,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",ECD$(58,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+FN%HTML_ESC$(TMP$)+LINE2$; GOTO 2095; REM "req_date
2012 GOSUB 6800; LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(64,30),1))+LINE2$; GOTO 2095; REM "attention "
2013 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(94,15),1))+LINE2$; GOTO 2095; REM "ship_via
2014 IF STP(ECD$(109,6),3," ")="" THEN TMP$="" ELSE CALL "ZZDISP","DX",ECD$(109,6),"",X3$,TMP$,"",0,0,X4$ END_IF ; LINE$=LINE1$+FN%HTML_ESC$(TMP$)+LINE2$; GOTO 2095; REM "needed by
2015 GOSUB 3500; LINE$=LINES_SECTION$; GOTO 2095; REM "wslinestart
2016 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(214,9),1))+LINE2$; GOTO 2095; REM "cust_loc_code
2017 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(51,30),1))+LINE2$; GOTO 2095; REM "address_1
2018 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(81,30),1))+LINE2$; GOTO 2095; REM "address_2
2019 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(111,16),1))+LINE2$; GOTO 2095; REM "city
2020 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(127,2),1))+LINE2$; GOTO 2095; REM "state
2021 LINE$=LINE1$+FN%HTML_ESC$(STP(LOC_ZIP$,1))+LINE2$; GOTO 2095; REM "zip
2022 LINE$=LINE1$+FN%HTML_ESC$(ADDR$[1])+LINE2$; GOTO 2095; REM "addr_1
2023 LINE$=LINE1$+FN%HTML_ESC$(ADDR$[2])+LINE2$; GOTO 2095; REM "addr_2
2024 LINE$=LINE1$+FN%HTML_ESC$(ADDR$[3])+LINE2$; GOTO 2095; REM "addr_3
2025 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(236,9),1))+LINE2$; GOTO 2095; REM "cost_center
2026 IF STP(FM0$(248,35),3," ")="" THEN LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(16,35),1))+LINE2$ ELSE LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(248,35),1))+LINE2$ END_IF ; GOTO 2095; REM "location_name
2027 LINE$=LINE1$+FN%HTML_ESC$(STP(FM0$(382,20),1))+LINE2$; GOTO 2095; REM "recv_dept
2028 GOSUB 2150; LINE$=LINE1$+SHIPVIA$+LINE2$; GOTO 2095; REM "ship_via_list
2029 LINE$=LINE1$+FN%HTML_ESC$(EC$[4])+LINE2$; GOTO 2095; REM "date
2030 LINE$=LINE1$+FN%HTML_ESC$(EC$[5])+LINE2$; GOTO 2095; REM "time
2031 CALL "ZZDISP","AX",ECD$(235,8),"O/P",X3$,TMP$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(TMP$)+LINE2$; GOTO 2095; REM "tf_order_no
2032 IF ECD_IN$(330,35)<>DIM(35) THEN ECD$(330,35)=ECD_IN$(330,35) END_IF ; IF ECD$(330,35)=DIM(35) AND EC$[2](591,35)<>DIM(35) THEN ECD$(330,35)=EC$[2](591,35) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(330,35),1))+LINE2$; GOTO 2095; REM "mark_for
2033 GOSUB 2200; LINE$=LINE1$+LOC_LIST$+LINE2$; GOTO 2095; REM "location_list
2034 GOSUB 3600; LINE$=LOC_CHG$; GOTO 2095; REM "locchangestart
2035 LINE$=LINE1$+FN%HTML_ESC$(ECD$(376,35))+LINE2$; GOTO 2095; REM "man_name
2036 LINE$=LINE1$+FN%HTML_ESC$(ECD$(243,30))+LINE2$; GOTO 2095; REM "man_addr_1
2037 LINE$=LINE1$+FN%HTML_ESC$(ECD$(273,30))+LINE2$; GOTO 2095; REM "man_addr_2
2038 LINE$=LINE1$+FN%HTML_ESC$(ECD$(303,16))+LINE2$; GOTO 2095; REM "man_city
2039 LINE$=LINE1$+FN%HTML_ESC$(ECD$(319,2))+LINE2$; GOTO 2095; REM "man_state
2040 CALL "ZZDISP","AX",ECD$(321,9),"ZIP",X3$,TMP_ZIP$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(TMP_ZIP$)+LINE2$; GOTO 2095; REM "man_zip
2041 GOSUB 3700; LINE$=CAT_ITEM_SECTION$; GOTO 2095; REM "category_entry_start
2042 LINE$=LINE1$+FN%HTML_ESC$(MESSAGE$)+LINE2$; GOTO 2095; REM "message
2043 GOSUB 3050; LINE$=LINE1$+MESSAGE_SECTION$+LINE2$; GOTO 2095; REM "message_start
2044 LINE$=LINE1$+FN%HTML_ESC$(ECD$(188,1))+LINE2$; GOTO 2095; REM "SHIP_VIA_CODE
2045 IF STP(FM0$(16,35),3," ")="" THEN LD$=FM0$(248,35) ELSE LD$=FM0$(16,35) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(LD$,2))+LINE2$; GOTO 2095; REM "location_desc
2046 LINE$=LINE1$+FN%HTML_ESC$(STP(SHIP$(111,16),1))+LINE2$; GOTO 2095; REM "addr_city
2047 LINE$=LINE1$+FN%HTML_ESC$(STP(SHIP$(127,2),1))+LINE2$; GOTO 2095; REM "addr_state
2048 LINE$=LINE1$+FN%HTML_ESC$(STP(FN%ZZDISP$(SHIP$(129,9),"ZIP"),1))+LINE2$; GOTO 2095; REM "addr_zip.  SSP169613, format zip
2049 LINE$=LINE1$+FN%HTML_ESC$(STP(SHIP$(51,30),1))+LINE2$; GOTO 2095; REM "addr_unformatted_1"
2050 LINE$=LINE1$+FN%HTML_ESC$(STP(SHIP$(81,30),1))+LINE2$; GOTO 2095; REM "addr_unformatted_2
2051 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(376,35),2))+LINE2$; GOTO 2095; REM "addr_name
2052 TEXT_OPT=1; GOSUB 2150; TEXT_OPT=0; LINE$=LINE1$+SHIPVIA$+LINE2$; GOTO 2095; REM "ship_via_text - 137648
2053 TEXT_OPT=1; GOSUB 2200; TEXT_OPT=0; LINE$=LINE1$+LOC_LIST$+LINE2$; GOTO 2095; REM "location_text  -137648
2054 IF ECD_IN$(411,4)<>DIM(4) THEN ECD$(411,4)=ECD_IN$(411,4) END_IF ; IF ECD$(411,4)=DIM(4) AND STP(CC_DATA$[1])>"" THEN CC_DATA1$=CC_DATA$[1] ELSE CC_DATA1$=ECD$(411,4) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(CC_DATA1$)+LINE2$; GOTO 2095; REM "cc_type SSP293539, CC Type may be blank if cleared so try using EDD data if we have it
2055 IF ECD_IN$(415,20)<>DIM(20) AND ECD_IN$(415,1)<>"*" THEN ECD$(415,20)=ECD_IN$(415,20) END_IF ; IF ECD_IN$(415,20)=DIM(20) OR ECD_IN$(415,20)=EC$[2](497,20) OR ECD_IN$(415,1)="*" THEN AST$="Y" ELSE AST$="N" END_IF ; IF ECD$(415,20)=DIM(20) OR ECD_IN$(415,1)="*" THEN ECD$(415,20)=EC$[2](497,20) END_IF ; CC_NUM$=STP(ECD$(415,20),2); IF AST$="Y" AND EC$[2](985,10)<>DIM(10) THEN CC_NUM$="************"+ECD$(427,4) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(CC_NUM$)+LINE2$; GOTO 2095; REM "cc_number. Asteriks logic added for WO174246
2056 IF ECD_IN$(435,4)<>DIM(4) THEN ECD$(435,4)=ECD_IN$(435,4) END_IF ; IF ECD$(435,4)=DIM(4) THEN ECD$(435,4)=EC$[2](517,4) END_IF ; IF ECD$(435,4)=DIM(4) AND STP(CC_DATA$[3])>"" THEN CC_DATA3$=CC_DATA$[3] ELSE CC_DATA3$=ECD$(435,4) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(CC_DATA3$,2))+LINE2$; GOTO 2095; REM "cc_expire SSP293539, CC Expire may be blank if cleared so try using EDD data if we have it
2057 IF ECD_IN$(439,40)<>DIM(40) THEN ECD$(439,40)=ECD_IN$(439,40) END_IF ; IF ECD$(439,40)=DIM(40) THEN ECD$(439,40)=EC$[2](521,40) END_IF ; IF ECD$(439,40)=DIM(40) AND STP(CC_DATA$[4])>"" THEN CC_DATA4$=CC_DATA$[4] ELSE CC_DATA4$=ECD$(439,40) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(CC_DATA4$,2))+LINE2$; GOTO 2095; REM "cc_name SSP293539 CC Name may be blank if cleared so try using EDD data if we have it
2058 GOSUB 2300; LINE$=LINE1$+CCLIST$+LINE2$; GOTO 2095; REM "cc_type_list
2059 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(168,20),1))+LINE2$; GOTO 2095; REM "ordered_by
2060 IF EC$[2](322,1)="Y" THEN LINE$=LINE1$+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+FN%HTML_ESC$(STP(STR(ITEM_PRICE_TOTAL:"###,###.00-"),1))+LINE2$; GOTO 2095; REM "item_price_total  ssp 146577, 154989
2061 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(ITEM_WGT_TOTAL:"###,###.00-"),1))+LINE2$; GOTO 2095; REM "weight_total_order  ssp 146577
2062 LINE$=LINE1$+FN%HTML_ESC$(X3$(69,1)+STP(STR(GRB(1)-FRT_INSALE:"###,###.00-"),1))+LINE2$; GOTO 2095; REM "invoice_total_net
2063 LINE$=LINE1$+FN%HTML_ESC$(X3$(69,1)+STP(STR(GRB(4)+GRB(6)+GRB(8):"###,###.00-"),1))+LINE2$; GOTO 2095; REM "invoice_sales_tax
2064 LINE$=LINE1$+FN%HTML_ESC$(X3$(69,1)+STP(STR(GRB(2)+FRT_INSALE:"###,###.00-"),1))+LINE2$; GOTO 2095; REM "invoice_freight
2065 LINE$=LINE1$+FN%HTML_ESC$(X3$(69,1)+STP(STR(GRB(9):"###,###.00-"),1))+LINE2$; GOTO 2095; REM "invoice_total
2066 GOSUB 3200; LINE$=INVOICE_SECTION$; GOTO 2095; REM "invoicelinestart
2067 IF ECD_IN$(415,20)<>DIM(20) AND ECD_IN$(415,1)<>"*" THEN ECD$(415,20)=ECD_IN$(415,20) END_IF ; IF ECD$(415,20)=DIM(20) OR ECD_IN$(415,1)="*" THEN ECD$(415,20)=EC$[2](497,20) END_IF ; CCNUMB$=STP(ECD$(415,20),3," "),CCNUMB$=STP(CCNUMB$,3,"-"),CCLEN=LEN(CCNUMB$); IF CCLEN>=4 THEN CCNUMB$="*********"+CCNUMB$(CCLEN-3,4) ELSE CCNUMB$="*********"+CCNUMB$ END_IF ; IF ECD$(415,20)=DIM(20) AND STP(CC_DATA$[2])>"" AND CC_DATA$[2](1,1)="*" THEN CC_DATA2$=STP(CC_DATA$[2]) ELSE CC_DATA2$=CCNUMB$ END_IF ; LINE$=LINE1$+FN%HTML_ESC$(CC_DATA2$)+LINE2$; GOTO 2095; REM "cc_number_last4 SSP293539, card number may be blank if cleared so try using EDD data if we have it
2068 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(QTY_TOTAL_ORDER:"#,###,##0"),1))+LINE2$; GOTO 2095; REM "qty_total_order
2069 LINE$=LINE1$+FN%HTML_ESC$(STP(STR(ITEM_COUNT:"##0"),1))+LINE2$; GOTO 2095; REM "item_count
2070 GOSUB GET_INVOICE_NUM; IF STP(INVOICE_HDR_KEY$,3)>"" THEN CALL "ZZDISP","A",INVOICE_HDR_KEY$(7,8),"AR6",X3$,INVOICE_NUMBER$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(INVOICE_NUMBER$)+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+LINE2$; GOTO 2095; REM "invoice_number - ssp210454, read from FS1 for permanent inv num
2071 IF ECD$(56,1)="Y" THEN TEMP$="Yes" ELSE TEMP$="No" END_IF ; LINE$=LINE1$+TEMP$+LINE2$; GOTO 2095; REM "perm_addr_change_shipto_done 154323
2072 IF ECD$(57,1)="Y" THEN TEMP$="Yes" ELSE TEMP$="No" END_IF ; LINE$=LINE1$+TEMP$+LINE2$; GOTO 2095; REM "perm_attn_change_shipto_done 154323
2073 LINE$=LINE1$+FN%HTML_ESC$(RESPMSG$)+LINE2$; GOTO 2095; REM " respmsg
2074 IF EC$[2](322,1)="Y" THEN LINE$=LINE1$+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+FN%HTML_ESC$(STP(STR(ORDER_LINE_TOTAL:"###,###.00"),1))+LINE2$; GOTO 2095 ! SSP165030, order_line_total
2075 IF ECD_IN$(646,30)<>DIM(30) THEN ECD$(646,30)=ECD_IN$(646,30) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(CC_APRVL_REF$)+LINE2$; GOTO 2095 ! SSP166601, cc_aprvl_ref
2076 LINE$=LINE1$+FN%HTML_ESC$(ORDER_COMMENT$)+LINE2$; GOTO 2095 ! WO169824, order_comment
2077 GOSUB 4650; LINE$=LINE1$+FN%HTML_ESC$(STP(ECA$(16,35),2))+LINE2$; GOTO 2095 ! SSP172214, wk_buyer_name
2078 GOSUB 4650; LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[2](985,10),1))+LINE2$; GOTO 2095 ! WO174246, cc_id
2079 IF EC$[2](322,1)="Y" THEN LINE$=LINE1$+LINE2$; GOTO 2095 ELSE LINE$=LINE1$+FN%HTML_ESC$(STP(STR(CALC_ITEM_PRICE_TOTAL:"###,###.00-"),1))+LINE2$; GOTO 2095 ! WO177343, calc_item_price_total
2080 IF OS_ITEM_PRICE_TOTAL=0 THEN OS_ITEM_PRICE_TOTAL$="" ELSE OS_ITEM_PRICE_TOTAL$=STP(STR(OS_ITEM_PRICE_TOTAL:"###,###.00-"),1) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(OS_ITEM_PRICE_TOTAL$)+LINE2$; GOTO 2095 ! WO176425, os_item_price_total, for TOPS items only, always show, even if buyer set to not see pricing.
2081 LINE$=LINE1$+FN%HTML_ESC$(ECD$(677,40))+LINE2$; GOTO 2095 ! WO179708, order_email_addr
2082 LINE$=LINE1$+FN%HTML_ESC$(STP(EC$[2](109,40),1))+LINE2$; GOTO 2095 ! WO179708, buyer_email_40
2083 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(205,30),1))+LINE2$; GOTO 2095 ! SSP182134, ship_with
2084 CALL "ZZDISP","AX",ECD$(499,8),"O/P",X3$,REQ_ORDER_NO$,"",0,0,X4$; LINE$=LINE1$+FN%HTML_ESC$(REQ_ORDER_NO$)+LINE2$; GOTO 2095 ! SSP185087, req_tf_order_no
2085 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(737,15),1))+LINE2$; GOTO 2095 ! SSP191554, inside_delivery
2086 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(752,15),1))+LINE2$; GOTO 2095 ! SSP191554, acct_number
2087 GOSUB 6500; LINE$=LINE1$+FN%HTML_ESC$(STP(EDU$(82,240),2))+LINE2$; GOTO 2095 ! WO191370, approval_comments
2088 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(767,1),1))+LINE2$; GOTO 2095 ! WO190633, bill_m
2089 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(768,20),1))+LINE2$; GOTO 2095 ! WO190633, shipper_id
2090 LINE$=LINE1$+LINE2$; GOTO 2095; REM "tag not found, replace with nothingg
2095 RETURN 
2100 REM "Get Location information & format addr$[] array with address
2101 UPDATE_SHIPTO_LOCATION:! 242069
2104 REM "OLD WAY ->DIM ADDR$[3],FM0$(521); READ (Z[8],KEY="C"+EC$[2](51,14),DOM=02106) IOL=00380
2106 GOSUB SET_READONLY; DIM ADDR$[3],FM0$(618); READ (Z[8],KEY="C"+ECD$(26,14),DOM=2107)IOL=0380
2107 GOSUB CLEAR_READONLY; IF EC_PARM$(1086,1)<>"Y" THEN GOTO 2108 ELSE IF LOCATION_CHANGED THEN GOSUB 8750; IF STP(FM0$(51,87),3," ")="" OR ECD$(243,87)<>DIM(87) AND (ORIGINAL_ECD_SHIPTO$=ECD$(36,4)) THEN GOTO 2109 ELSE ECD$(243,87)=FM0$(51,87); IF FM0$(248,35)=DIM(35) THEN ECD$(376,35)=FM0$(16,35); GOTO 2109 ELSE ECD$(376,35)=FM0$(248,35); GOTO 2109; REM "161537 / 161537
2108 IF LOCATION_CHANGED THEN GOSUB 8750; IF EC_PARM$(1088,1)="Y" THEN GOTO 2109 ELSE IF STP(FM0$(51,87),3," ")="" OR ECD$(243,87)<>DIM(87) AND (ORIGINAL_ECD_SHIPTO$=ECD$(36,4) OR ECD_IN$(243,87)<>DIM(87)) THEN GOTO 2109 ELSE ECD$(243,87)=FM0$(51,87),ECD$(1179,2)=FM0$(380,2); IF FM0$(248,35)=DIM(35) THEN ECD$(376,35)=FM0$(16,35) ELSE ECD$(376,35)=FM0$(248,35); REM "136662 / 153517 - use name if not blank / ssp 154600 (gosub 8750 to update active location) / 158233 / 153618.  SSP164755 SSP307429-DBD319 country from FM0
2109 DIM SHIP$(521); IF (ECD$(243,87)=DIM(87) AND EC_PARM$(1088,1)<>"Y") OR ORIGINAL_ECD_SHIPTO$<>ECD$(36,4) THEN SHIP$=FM0$; GOTO 2112 ELSE SHIP$=FM0$; IF (ECD_IN$(243,87)<>DIM(87) AND EC_PARM$(1088,1)<>"Y") THEN SHIP$(51,87)=ECD_IN$(243,87),ECD$(243,87)=ECD_IN$(243,87) ELSE SHIP$(51,87)=ECD$(243,87); REM "if ther is currently no address on the order or the selected shipto has changed then pull the address from FM0 otherwise maintain from the ECD record and allow manual overrides in 2111->136662 / 153618.  SSP164755          
2110 IF EC_PARM$(1088,1)="Y" THEN GOSUB 7200; GOTO 2112 ELSE IF ECD_IN$(273,30)<>DIM(30) THEN SHIP$(81,30)=ECD_IN$(273,30) ELSE IF ECD_IN$(243,87)<>DIM(87) THEN SHIP$(81,30)=ECD_IN$(273,30); REM "if the incoming 2nd address line is blank then if the remaining ecd_in is not blank assume that the user has entered in a blank in the 2nd address line and assign.  SSP164755 if allow blanks parm set them in 7200's it's allowed
2111 IF ECD_IN$(243,30)<>DIM(30) THEN SHIP$(51,30)=ECD_IN$(243,30) END_IF ; IF ECD_IN$(303,16)<>DIM(16) THEN SHIP$(111,16)=ECD_IN$(303,16) END_IF ; IF ECD_IN$(319,2)<>DIM(2) THEN SHIP$(127,2)=ECD_IN$(319,2) END_IF ; IF ECD_IN$(321,9)<>DIM(9) THEN SHIP$(129,9)=ECD_IN$(321,9) END_IF ; IF ECD_IN$(376,35)<>DIM(35) THEN SHIP$(248,35)=ECD_IN$(376,35)
2113 REM "IF X3$(9,3)="092" THEN IF LOCATION_CHANGED THEN IF FM0$(248,35)=DIM(35) THEN ECD$(376,35)=FM0$(16,35) ELSE ECD$(376,35)=FM0$(248,35); REM "153618
2119 LOC_ZIP$=""; CALL "ZZDISP","AX",SHIP$(129,9),"ZIP",X3$,LOC_ZIP$,"",0,0,X4$; REM "153619
2120 ADDRI=1; REM "153618
2121 IF STP(SHIP$(51,30),3," ")="" AND EC_PARM$(1088,1)<>"Y" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=STP(SHIP$(51,30),1),ADDRI=ADDRI+1; REM "153618. SSP164755
2122 IF STP(SHIP$(81,30),3," ")="" AND EC_PARM$(1088,1)<>"Y" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=STP(SHIP$(81,30),1),ADDRI=ADDRI+1; REM "153618. SSP164755
2123 IF STP(SHIP$(111,16),3," ")="" AND EC_PARM$(1088,1)<>"Y" THEN CSZ$=STP(SHIP$(127,2),1)+" "+STP(LOC_ZIP$,1) ELSE CSZ$=STP(SHIP$(111,16),1)+", "+STP(SHIP$(127,2),1)+" "+STP(LOC_ZIP$,1); REM "153618. SSP164755
2124 IF STP(CSZ$,3," ")="" AND EC_PARM$(1088,1)<>"Y" THEN GOTO *NEXT ELSE ADDR$[ADDRI]=CSZ$,ADDRI=ADDRI+1; REM "153618. SSP164755
2125 GOSUB 6800; IF LOCATION_CHANGED THEN LOCATION_CHANGED=0; REM "Set attention field if blank 158233
2140 IF ECD_IN$(411,68)<>DIM(68) THEN ECD$(411,68)=ECD_IN$(411,68); REM "credit card information
2141 IF ECD_IN$(646,30)<>DIM(30) THEN ECD$(646,30)=ECD_IN$(646,30) ! SSP166601
2142 GOSUB GET_CUST_LOC_BUDGET ! WO 215368
2145 RETURN 
2150 REM "Return SHIPVIA$ as HTML for drop down list
2151 IF EC$[7](587,1)="Y" AND EC$[1](259,1)<>" " THEN GOTO 2186; REM "ck if restriction to ship-to ship-via activated  ssp 145477
2152 IF EC$[2](735,10)=DIM(10) THEN BUYER_SPECIFIC_SHIPVIA$="N" ELSE BUYER_SPECIFIC_SHIPVIA$="Y"
2153 READ (Z[23],KEY=EC$[2](51,10)+"SHIP_VIA  ",DOM=2154); REM "ck for customer specific shipto's
2154 CUSTOMER_SPECIFIC_SHIPVIA$="N"; ECV_KEY$=KEY(Z[23],END=2155); IF ECV_KEY$(1,20)=EC$[2](51,10)+"SHIP_VIA  " THEN CUSTOMER_SPECIFIC_SHIPVIA$="Y"
2155 SHIPVIA$=""; IF ECD_IN$(188,1)<>" " THEN SELECTED$=ECD_IN$(188,1) ELSE IF ECD$(188,1)<>" " THEN SELECTED$=ECD$(188,1) ELSE IF EC$[2](61,4)=DIM(4) THEN SELECTED$=EC$[1](155,1) ELSE SELECTED$=FM0$(305,1)
2158 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "If in comment remove the start of the comment
2159 IF CUSTOMER_SPECIFIC_SHIPVIA$="N" AND BUYER_SPECIFIC_SHIPVIA$="N" THEN READ (Z[9],KEY="S",DOM=2160) ELSE IF BUYER_SPECIFIC_SHIPVIA$="Y" THEN READ (Z[23],KEY=DIM(10)+EC$[2](735,10),DOM=2180) ELSE GOTO 2170
2160 READ (Z[9],END=2190)IOL=0390; IF FMPS$(1,1)<>"S" THEN GOTO 2190 ELSE IF FMPS$(18,1)="Y" THEN GOTO 2160; REM "Skip ship via's marked with an yes
2163 IF TEXT_OPT THEN SHIPVIA$=SHIPVIA$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2160; REM "137648
2165 IF FMPS$(2,1)=SELECTED$ THEN SHIPVIA$=SHIPVIA$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE SHIPVIA$=SHIPVIA$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2167 GOTO 2160
2170 REM "build ship-vias from customer specific list
2171 GOSUB 6950; REM get defaults
2172 CUST_SHIPVIA$=KEY(Z[23],END=2180); READ (Z[23]); IF CUST_SHIPVIA$(1,20)<>EC$[2](51,10)+"SHIP_VIA  " THEN GOTO 2180
2174 READ (Z[9],KEY="S"+CUST_SHIPVIA$(21,1),DOM=2172)IOL=0390; IF FMPS$(18,1)="Y" THEN GOTO 2171; REM "skip ship via's marked w/a yes
2175 IF TEXT_OPT THEN {
2176 IF FMPS$(2,1)=DEF_SHIP_VIA$ THEN SHIPVIA$=FMPS$(2,1)+" "+FMPS$(3,15)+EOL$+SHIPVIA$; GOTO 2172 ELSE SHIPVIA$=SHIPVIA$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2172
2177  } ELSE {
2178 IF FMPS$(2,1)=DEF_SHIP_VIA$ THEN SHIPVIA$="<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"+SHIPVIA$ ELSE IF FMPS$(2,1)=SELECTED$ THEN SHIPVIA$=SHIPVIA$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE SHIPVIA$=SHIPVIA$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2179 GOTO 2172 }
2180 REM "build ship-vias from buyer assigned code set
2181 BUYER_SHIPVIA$=KEY(Z[23],END=2190); READ (Z[23]); IF BUYER_SHIPVIA$(1,20)<>DIM(10)+EC$[2](735,10) THEN GOTO 2190
2182 READ (Z[9],KEY="S"+BUYER_SHIPVIA$(21,1),DOM=2181)IOL=0390
2183 IF FMPS$(18,1)="Y" THEN GOTO 2181; REM "Skip ship via's marked with an yes
2184 IF TEXT_OPT THEN SHIPVIA$=SHIPVIA$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2181 ELSE IF FMPS$(2,1)=SELECTED$ THEN SHIPVIA$=SHIPVIA$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE SHIPVIA$=SHIPVIA$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2185 GOTO 2181
2186 REM "restricted to ship-via on shipto
2187 IF TEXT_OPT THEN SHIPVIA$=EC$[1](259,1)+" "+EC$[1](260,15)+EOL$ ELSE SHIPVIA$="<option selected value="+QUO+EC$[1](259,1)+QUO+">"+EC$[1](260,15)+"</option>"; REM "ssp 145477
2190 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN SHIPVIA$=SHIPVIA$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2191 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2192 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1) ! SSP167106/166109
2195 RETURN 
2200 REM "Return LOC_LIST$ as HTML for drop down listwhen called from lines section
2205 LOC_LIST$=""; IF ECD_IN$(36,4)<>DIM(4) THEN SELECTED$=ECD_IN$(36,4) ELSE IF ECD$(36,4)<>DIM(4) THEN SELECTED$=ECD$(36,4) ELSE SELECTED$=EC$[2](61,4)
2206 IF SELECTED$=DIM(4) THEN LOC_LIST$="<option selected value="+QUO+QUO+"></option>"; REM "if no pre selected value, default to blank so we don't overwrite with the first one.
2210 IF EC$[9]="" THEN PGMNAME$="EC3SCS" ELSE PGMNAME$=STP(EC$[9](57,6),2)
2211 IF TEXT_OPT THEN ALL$="T" ELSE ALL$=""
2212 CALL PGMNAME$,X3$,X4$,EC_PARM$,EC${ALL},ST_LIST$,SELECTED$,ALL$,""
2214 LOC_LIST$=LOC_LIST$+ST_LIST$
2234 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "If in comment remove the start of the comment
2235 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN LOC_LIST$=LOC_LIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2236 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2245 RETURN 
2250 REM "Return LOC_LIST$ as HTML for drop down list when called from loc change section
2255 LOC_LIST$=""; IF ECD_IN$(36,4)<>DIM(4) THEN SELECTED$=ECD_IN$(36,4) ELSE IF ECD$(36,4)<>DIM(4) THEN SELECTED$=ECD$(36,4) ELSE SELECTED$=EC$[2](61,4)
2260 IF EC$[9]="" THEN PGMNAME$="EC3SCS" ELSE PGMNAME$=STP(EC$[9](57,6),2)
2262 CALL PGMNAME$,X3$,X4$,EC_PARM$,EC${ALL},ST_LIST$,SELECTED$,"",""
2264 LOC_LIST$=LOC_LIST$+ST_LIST$
2284 IF POS("<!"=LC1$,-1)<>0 THEN LC1$=LC1$(1,POS("<!"=LC1$,-1)-1); REM "If in comment remove the start of the comment
2285 STMP=POS("</select>"=LC1$,-1); IF STMP<>0 THEN LOC_LIST$=LOC_LIST$+"</select>"; IF STMP=1 THEN LC1$="" ELSE LC1$=LC1$(1,STMP-1)
2286 IF LC2$>"" THEN IF LC2$(1,1)=">" THEN LC2$=LC2$(2); REM "if token was part of a comment, then remove the end of the comment.
2295 RETURN 
2350 REM "Return CCLIST$ as HTML for drop down list
2355 CCLIST$=""; IF EC$[2](493,4)<>DIM(4) THEN SELECTED$=EC$[2](493,4) ELSE SELECTED$=EC$[1](327,4) END_IF ; IF ECD_IN$(411,4)<>DIM(4) THEN SELECTED$=ECD_IN$(411,4)
2358 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1); REM "If in comment remove the start of the comment
2360 FOR CCCOUNT=0 TO 6; CCCODE$=EC$[1](CCCOUNT*4+327,4),CCDESC$=EC$[1](CCCOUNT*30+355,30); IF CCCODE$=DIM(4) THEN GOTO 2367
2365 IF CCCODE$=SELECTED$ THEN CCLIST$=CCLIST$+"<option selected value="+QUO+CCCODE$+QUO+">"+CCDESC$+"</option>" ELSE CCLIST$=CCLIST$+"<option value="+QUO+CCCODE$+QUO+">"+CCDESC$+"</option>"
2367 NEXT CCCOUNT
2370 GOTO 2376; REM "build credit cards from customer specific list   *** FUTURE ***
2371 CUST_CCLIST$=KEY(Z[23],END=2376); READ (Z[23]); IF CUST_CCLIST$(1,20)<>EC$[2](51,10)+"SHIP_VIA  " THEN GOTO 2376
2372 READ (Z[9],KEY="S"+CUST_CCLIST$(21,1),DOM=2371)IOL=0390
2373 IF FMPS$(18,1)="Y" THEN GOTO 2371; REM "Skip ship via's marked with an yes
2374 IF TEXT_OPT THEN CCLIST$=CCLIST$+FMPS$(2,1)+" "+FMPS$(3,15)+EOL$; GOTO 2371 ELSE IF FMPS$(2,1)=SELECTED$ THEN CCLIST$=CCLIST$+"<option selected value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>" ELSE CCLIST$=CCLIST$+"<option value="+QUO+FMPS$(2,1)+QUO+">"+FMPS$(3,15)+"</option>"
2375 GOTO 2371
2385 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN CCLIST$=CCLIST$+"</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
2386 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2); REM "if token was part of a comment, then remove the end of the comment.
2395 RETURN 
2400 REM "Check Office Supply Parameters SSP 170082
2401 READ (Z[13],KEY=X3$(9,3)+"OSP",DOM=2405)OSP_PARMS$
2402 IF OSP_PARMS$(449,5)=DIM(5) THEN GOTO 2405
2403 IF ECE$(18,1)="O" THEN ECE$(13,5)=OSP_PARMS$(449,5)
2405 RETURN 
2500 ! Start coming here for output tags, ran out of room in 2000's, WO202501
2510 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(804,35),1))+LINE2$; GOTO 2095 ! WO202501, regional_sls_mngr
2511 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(839,40),1))+LINE2$; GOTO 2095 ! WO202501, regional_sls_mngr_email
2512 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(879,20),1))+LINE2$; GOTO 2095 ! WO202501, dist_acct_billto_num
2513 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(899,35),1))+LINE2$; GOTO 2095 ! WO202501, dist_acct_billto_name
2514 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(934,30),1))+LINE2$; GOTO 2095 ! WO202501, dist_acct_billto_addr
2515 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(964,16),1))+LINE2$; GOTO 2095 ! WO202501, dist_acct_billto_city
2516 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(980,2),1))+LINE2$; GOTO 2095 ! WO202501, dist_acct_billto_state
2517 LINE$=LINE1$+FN%HTML_ESC$(STP(FN%ZZDISP$(ECD$(982,9),"ZIP"),1))+LINE2$; GOTO 2095 ! WO202501, dist_acct_billto_zip
2518 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(991,6),1))+LINE2$; GOTO 2095 ! WO202501, dist_acct_billto_country
2519 LINE$=LINE1$+FN%HTML_ESC$(STP(CC_BILLADDR$(1,30),1))+LINE2$; GOTO 2095 ! cc_bill_addr1 - SSP 211130
2520 LINE$=LINE1$+FN%HTML_ESC$(STP(CC_BILLADDR$(31,30),1))+LINE2$; GOTO 2095 ! cc_bill_addr2 - SSP 211130 
2521 LINE$=LINE1$+FN%HTML_ESC$(STP(CC_BILLADDR$(61,16),1))+LINE2$; GOTO 2095 ! cc_bill_city - SSP 211130 
2522 LINE$=LINE1$+FN%HTML_ESC$(STP(CC_BILLADDR$(77,2),1))+LINE2$; GOTO 2095 ! cc_bill_state - SSP 211130 
2523 LINE$=LINE1$+FN%HTML_ESC$(STP(CC_BILLADDR$(79,9),1))+LINE2$; GOTO 2095 ! cc_bill_zip - SSP 211130 
2524 EC3EEC_ACTION$="L"; GOSUB PRIMARY_FUNCTION_LIST; LINE$=LINE1$+PF_LIST$+LINE2$; GOTO 2095 ! WO215369, primary_function_ddl
2525 EC3EEC_ACTION$="D"; GOSUB PRIMARY_FUNCTION_LIST; LINE$=LINE1$+PF_LIST$+LINE2$; GOTO 2095 ! WO215369, primary_function_desc_ddl
2526 PFA1$="N"; IF EEC$(79,1)="Y" THEN PFA1$="Y" END_IF ; LINE$=LINE1$+PFA1$+LINE2$; GOTO 2095 ! WO215369, pf_addtl_1
2527 PFA2$="N"; IF EEC$(80,1)="Y" THEN PFA2$="Y" END_IF ; LINE$=LINE1$+PFA2$+LINE2$; GOTO 2095 ! WO215369, pf_addtl_2
2528 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1009,30),1))+LINE2$; GOTO 2095 ! WO215369, primary_function
2529 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1039,30),1))+LINE2$; GOTO 2095 ! WO215369, primary_function_addtl_1
2530 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1069,30),1))+LINE2$; GOTO 2095 ! WO215369, primary_function_addtl_2
2531 LINE$=LINE1$+FN%HTML_ESC$(STP(EEC$(81,30),1))+LINE2$; GOTO 2095 ! WO224138, pf_addtl_1_label_1
2532 LINE$=LINE1$+FN%HTML_ESC$(STP(EEC$(111,30),1))+LINE2$; GOTO 2095 ! WO224138, pf_addtl_1_label_2
2533 LINE$=LINE1$+FN%HTML_ESC$(STP(EEC$(141,30),1))+LINE2$; GOTO 2095 ! WO224138, pf_addtl_2_label_1
2534 LINE$=LINE1$+FN%HTML_ESC$(STP(EEC$(171,30),1))+LINE2$; GOTO 2095 ! WO224138, pf_addtl_2_label_2
2535 LINE$=LINE1$+FN%HTML_ESC$(STP(ORDER_ID_3P$,1))+LINE2$; GOTO 2095 ! WO224137, 3p_order_id. WO251794 FIX
2536 LINE$=LINE1$+FN%HTML_ESC$(STP(SENDER_ID_3P$,1))+LINE2$; GOTO 2095 ! WO224137, 3p_sender_id. WO251794 FIX
2537 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1099,4),1))+LINE2$; GOTO 2095 ! WO227413, cc_cvv
2538 IF ECD_IN$(435,2)<>DIM(2) THEN ECD$(435,2)=ECD_IN$(435,2) END_IF ; IF ECD$(435,2)=DIM(2) THEN ECD$(435,2)=EC$[2](517,2) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(435,2),2))+LINE2$; GOTO 2095; REM "cc_expire_month
2539 IF ECD_IN$(437,2)<>DIM(2) THEN ECD$(437,2)=ECD_IN$(437,2) END_IF ; IF ECD$(437,2)=DIM(2) THEN ECD$(437,2)=EC$[2](519,2) END_IF ; LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(437,2),2))+LINE2$; GOTO 2095; REM "cc_expire_year
2540 LINE$=LINE1$+FN%HTML_ESC$(FN%ZZDISP$(ECD$(1103,10),"AR5"))+LINE2$; GOTO 2095 ! WO232721, sales_tax_code
2541 LINE$=LINE1$+STP(FMN1$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note1
2542 LINE$=LINE1$+STP(FMN2$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note2
2543 LINE$=LINE1$+STP(FMN3$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note3
2544 LINE$=LINE1$+STP(FMN4$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note4
2545 LINE$=LINE1$+STP(FMN5$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note5
2546 LINE$=LINE1$+STP(FMN6$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note6
2547 LINE$=LINE1$+STP(FMN7$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note7
2548 LINE$=LINE1$+STP(FMN8$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note8
2549 LINE$=LINE1$+STP(FMN9$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note9
2550 LINE$=LINE1$+STP(FMN10$,1)+LINE2$; GOTO 2095 ! WO233493, fmn_note10
2551 LINE$=LINE1$+FN%HTML_ESC$(STP(FN%ZZDISP$(SHIP$(129,9),"ZIP"),1))+LINE2$; GOTO 2095 ! WO237271, zip_code_destination, same as addr_zip
2552 GOSUB GET_EEI_INFO; LINE$=LINE1$+FN%HTML_ESC$(SHIPPING_OPTION$)+LINE2$; GOTO 2095 ! WO237271, shipping_option
2553 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR1$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_1
2554 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR2$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_2
2555 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR3$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_3
2556 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR4$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_4
2557 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR5$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_5
2558 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR6$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_6
2559 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR7$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_7
2560 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR8$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_8
2561 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR9$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_9
2562 LINE$=LINE1$+FN%HTML_ESC$(STP(OCR10$,1))+LINE2$; GOTO 2095 ! WO245891, order_cust_ref_10
2563 LINE$=LINE1$+FN%HTML_ESC$(STP(FROM_ID_3P$,1))+LINE2$; GOTO 2095 ! WO251794, 3p_from_id
2564 LINE$=LINE1$+FN%HTML_ESC$(STP(TO_ID_3P$,1))+LINE2$; GOTO 2095 ! WO251794, 3p_to_id
2565 LINE$=LINE1$+FN%HTML_ESC$(STP(OTHER_1_3P$,1))+LINE2$; GOTO 2095 ! WO251794, 3p_other_1
2566 LINE$=LINE1$+FN%HTML_ESC$(STP(OTHER_2_3P$,1))+LINE2$; GOTO 2095 ! WO255400, 3p_other_2
2567 LINE$=LINE1$+FN%HTML_ESC$(STP(OTHER_3_3P$,1))+LINE2$; GOTO 2095 ! WO255400, 3p_other_3 
2568 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1125,12),1))+LINE2$; GOTO 2095 ! WO257735, pl_alt_selection
2569 TMP_JC$="N"; IF ECD$(1137,1)="Y" THEN TMP_JC$="Y" END_IF ; LINE$=LINE1$+TMP_JC$+LINE2$; GOTO 2095 ! WO267129, job_costing
2570 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1139,20),1))+LINE2$; GOTO 2095 ! WO291781, contract_number
2571 CALL "ZZDISP","DX",ECD$(1159,6),"",X3$,DATE1$,"",0,0,X4$; LINE$=LINE1$+DATE1$+LINE2$; GOTO 2095 ! WO291781, contract_date
2572 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1165,4),1))+LINE2$; GOTO 2095 ! WO294934, csr
2573 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1169,10),1))+LINE2$; GOTO 2095 ! SSP306664, ec_source
2574 LINE$=LINE1$+FN%HTML_ESC$(STP(ECD$(1179,2),1))+LINE2$; GOTO 2095 ! SSP307210, man_country
2575 LINE$=LINE1$+FN%HTML_ESC$(STP(ORDER_ID_3P_2$,1))+LINE2$; GOTO 2095 ! DBD-185-DBSPT-115417-SSP307358, 3p_order_id_2
2576 LINE$=LINE1$+FN%HTML_ESC$(STP(LONG_RECV_DEPT_IN$,1))+LINE2$; GOTO 2095 ! DBD-273-SSP307410, long_recv_dept
3000 REM "message processing, lookup up message in ECO, return in MESSAGE_SECTION
3005 IF ORDER_MESSAGE_NO=0 THEN MESSAGE_SECTION$=""; DIM ECO$(300); GOTO 3045; REM "discard message section HTML
3010 DIM ECO$(300); ECO$(1,10)=ECD$(26,10),ECO$(11,10)=X0$,ECO$(21,5)=STR(ORDER_MESSAGE_NO:"00000")
3011 FIND (Z[17],KEY=ECO$(1,25),DOM=3012)ECO$; GOTO 3013
3012 ECO$(1,10)=DIM(10); FIND (Z[17],KEY=ECO$(1,25),DOM=3016)ECO$
3016 REM "PRINT ECO$; ESCAPE
3017 IF ECO$(26,1)="Y" AND ECO$(301,1)<>"Y" THEN GOTO 3045; REM "If don't display, then skip this section 166502
3020 MTMP$=STP(ECO$(30,240),1)
3025 MS2_INDEX=POS("?tf?"=MTMP$); IF MS2_INDEX=0 THEN GOTO 3040
3026 MSEND2_INDEX=POS("?"=MTMP$(MS2_INDEX+4)),MTMP_TAG$=MTMP$(MS2_INDEX+4,MSEND2_INDEX-1),MTMP1$=MTMP$(1,MS2_INDEX-1),MTMP2$=MTMP$(MS2_INDEX+MSEND2_INDEX+4)
3030 MINFO$=""; IF NUM(MTMP_TAG$,ERR=3031)<=15 THEN MINFO$=MESS_INFO$[NUM(MTMP_TAG$,ERR=3031)]
3032 MTMP$=MTMP1$+MINFO$+MTMP2$
3035 GOTO 3025
3041 MLINE$=""
3042 IF MTMP$="" THEN GOTO 3043 ELSE MPOS=POS(" "=MTMP$); IF MPOS=0 OR MPOS=LEN(MTMP$) THEN INLINE$=MTMP$,MTMP$="" ELSE INLINE$=MTMP$(1,MPOS),MTMP$=MTMP$(MPOS+1) END_IF ; IF LEN(MLINE$)+LEN(INLINE$)>60 THEN MESSAGE$=MESSAGE$+MLINE$+EOL$,MLINE$=INLINE$ ELSE MLINE$=MLINE$+INLINE$ END_IF ; GOTO 3042
3043 MESSAGE$=MESSAGE$+MLINE$
3044 REM "DIM MESS_INFO$[FN%NEA("MESS_INFO$",1)]
3045 RETURN 
3050 REM "Get lines section in MS_TEMPLATE$ and generate MESSAGE_SECTION$ containing the message
3052 MESSAGE_SECTION$="",MS_TAGS$="001<message>"
3053 MS_TEMPLATE$=LINE$
3055 READ (100,END=3056)LINE$; GOSUB 8150; MS_TEMPLATE$=MS_TEMPLATE$+LINE$+EOL$; IF POS("?tf?message_end?"=LINE$)=0 THEN GOTO 3055
3056 MSTART=POS("<!?tf?message_start?>"=MS_TEMPLATE$),MSTARTEND=POS("start?>"=MS_TEMPLATE$); IF MSTARTEND<>0 THEN MS_TEMPLATE$=MS_TEMPLATE$(MSTARTEND+8); REM "get rid of leading tag
3057 MSEND=POS("<!?tf?message_end"=MS_TEMPLATE$); IF MSEND<>0 THEN MS_TEMPLATE$=MS_TEMPLATE$(1,MSEND-1)
3064 MS$=MS_TEMPLATE$
3065 MS_INDEX=POS("?tf?"=MS$); IF MS_INDEX=0 THEN GOTO 3091
3066 MSEND_INDEX=POS("?"=MS$(MS_INDEX+4)),MS_TAG$=MS$(MS_INDEX+4,MSEND_INDEX-1),MS1$=MS$(1,MS_INDEX-1),MS2$=MS$(MS_INDEX+MSEND_INDEX+4),MS_POS=POS("<"+MS_TAG$+">"=MS_TAGS$); IF MS_POS=0 THEN MS$=MS1$+MS2$,MS_INDEX=0 ELSE MS_INDEX=NUM(MS_TAGS$(MS_POS-3,3))
3070 ON MS_INDEX GOTO 3089,3071,3089
3071 GOSUB 3000; MS$=MS1$+MESSAGE$+MS2$; GOTO 3090; REM "message
3089 MS$=MS1$+MS2$; GOTO 3090; REM "Not found
3090 GOTO 3065
3091 MESSAGE_SECTION$=MS$
3092 IF ORDER_MESSAGE_NO=0 THEN MESSAGE_SECTION$=""; REM "discard message section if no message
3095 IF POS("<!"=LINE1$)<>0 THEN LINE1$=""; REM "**wab qbf
3096 IF POS(">"=LINE2$)<>0 THEN LINE2$=""; REM "**wab qbf
3099 RETURN 
3100 REM "Lookup info for Special Charge
3105 DIM FMPX$(61),FMPX[3]; FIND (Z[9],KEY="X"+ECE$(39,10),DOM=3106)FMPX$,FMPX[0],FMPX[1],FMPX[2],FMPX[3]; GOTO 3110
3106 ECE$(11,2)="01",MESSAGE_NO=1; MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 8350; GOTO 3145; REM "if not in Special charges,flag error
3110 IF ECE$(67,40)=DIM(40) THEN ECE$(67,40)=FMPX$(12,40); REM "Set description if not set
3112 IF ECE$(107,4)=DIM(4) THEN ECE$(107,4)=FMPX$(55,4),ECE[1]=FMPX[0]
3114 IF USING_EDV$="Y" THEN ECE[2]=EDV[1],ECE[3]=EDV[2],ECE[1]=EDV[5] ELSE IF ECE[2]=0 THEN ECE[2]=FMPX[1] END_IF ; IF ECE[3]=0 THEN ECE[3]=FMPX[2] END_IF ! SSP169609, added USING_EDV$ flag, SSP 232412 - need unit cost and price to default if not submitted
3115 IF ECE[1]=0 THEN ECE[1]=1 ! SSP224259, if qty per unit is 0, change to 1
3120 IF EDV_SELL_PRICE<>0 THEN ECE[2]=EDV_SELL_PRICE ! WO177695
3122 IF NOT(NUL(ECE_IN$(259,3))) THEN GOSUB UPDATE_DYNAMIC_COMP_LINE ! 307420
3125 ! Check to see if we should create a PO for this S type line 3126-3130
3126 IF ECE$(298,1)="Y" AND ECE$(115,10)<>DIM(10) THEN PROD_CODE$=FMPX$(52,3),SAVE_VEND$=ECE$(115,10) ELSE GOTO 3131 ! DBD-159-SSP307339, if create a PO and we have a vendor get a PO code and other for ECE$
3127 DIM FMPT$(30); IF LEN(PROD_CODE$)>=3 THEN READ (Z[9],KEY="T"+PROD_CODE$(1,3),DOM=*NEXT)IOL=0352 ! DBD-159-SSP307339
3128 IF MID(FMPT$,48,1)="Y" AND POS(MID(COMBINE$,1,3)=FMPT$(2,3))=0 THEN COMBINE$=COMBINE$+FMPT$(2,3) ! DBD-159-SSP307339
3129 IF (POS(PROD_CODE$(1,3)=COMBINE$))=0 THEN GOSUB 8800; GOTO 3131 ! DBD-159-SSP307339
3130 IF POS(SAVE_VEND$(1,10)=VENDOR$,10)>0 THEN ECE$(129,1)=POCODE$(POS(SAVE_VEND$(1,10)=VENDOR$),1); GOSUB VEND_WHSE_PRT_FLGS; GOTO 3131 ELSE GOSUB 8800; VENDOR$=VENDOR$+SAVE_VEND$(1,10); POCODE$=POCODE$+ECE$(129,1)+DIM(9) ! DBD-159-SSP307339
3135 IF ECE[0]<0 THEN ECE$(11,2)="08",MESSAGE_NO=8,MESS_INFO$[1]=STP(ECE$(39,10),2),MESS_INFO$[2]=STP(STR(ECE[0]),2); GOSUB 3000 ! DBD-159-SSP307339, check for negative quantity ordered and flag with message
3140 GOSUB 6700; REM "write line 159048
3145 RETURN 
3150 ! SSP167917, If not the first time in for this worksheet, then look for ECE records that may need to be in COMBINE$,VENDOR$,POCODE$ for logic at 7586,7594
3155 COMBINE$="",VENDOR$="",POCODE$=""; READ (Z[3],KEY=ECE$(1,10),DOM=*NEXT)
3160 K$=KEY(Z[3],END=*RETURN); READ RECORD (Z[3],KEY=K$)CHECK_ECE$
3165 IF K$(1,10)<>ECE$(1,10) OR K$(11,3)=ECE$(25,3) THEN GOTO *RETURN
3170 IF CHECK_ECE$(129,1)=DIM(1) THEN GOTO 3160
3175 READ (Z[7],KEY=CHECK_ECE$(29,20),DOM=*NEXT)CHECK_FM1$; PC$=CHECK_FM1$(21,3),VEN$=CHECK_FM1$(82,10); GOTO 3180
3176 READ (Z[6],KEY=CHECK_ECE$(29,20),DOM=3160)CHECK_IC0$; PC$=CHECK_IC0$(61,3),VEN$=CHECK_IC0$(82,10)
3180 DIM CHECK_PC$(48); READ (Z[9],KEY="T"+PC$,DOM=3160)CHECK_PC$(1); IF CHECK_PC$(48,1)<>"Y" THEN GOTO 3160 ELSE IF COMBINE$="" THEN COMBINE$=PC$ ELSE IF POS(PC$=COMBINE$,3)=0 THEN COMBINE$+=PC$
3185 IF VENDOR$="" THEN VENDOR$=VEN$,POCODE$=CHECK_ECE$(129,1)+DIM(9) ELSE IF POS(VEN$=VENDOR$,10)=0 THEN VENDOR$+=VEN$,POCODE$+=CHECK_ECE$(129,1)+DIM(9)
3190 GOTO 3160
3195 RETURN 
3199 ! 
3200 REM "Get lines section in LI_TEMPLATE$ and generate INVOICE_SECTION$ containing an entry for each order line from ESE
3202 INVOICE_SECTION$="",LI_TAGS$="001<order_line_number>002<line_type>003<item_code>004<item_desc>005<um>006<quantity_ordered>007<qty_per_um>008<session_id>009<worksheet>010<qty_in_eaches_ordered>011<cic_code>012<invoice_unit_price>013<invoice_unit_price_ext>014<qty_in_eaches_shipped>015<quantity_shipped>016<line_class>017<print_line>018<rc_number>019<3pinfostart>020<um_desc>021<item_desc_esc>022<item_code_esc>023<um_code>024<qty_per_um_esc>"
3203 REM "Setup LI_TEMPLATE$
3204 LI_TEMPLATE$=LINE$,INVOICE_LINE_READ=0,LINE_CLASS=0
3205 READ (100,END=3206)LINE$; GOSUB 8150; LI_TEMPLATE$=LI_TEMPLATE$+LINE$+EOL$; IF POS("?tf?invoicelineend?"=LINE$)=0 THEN GOTO 3205
3208 IF DISPLAY_LINE_NUMBER$<>"" THEN DIM ECE$(499),ECE[8]; READ (Z[3],KEY=WORKSHEET$+DISPLAY_LINE_NUMBER$,DOM=3295)IOL=0330; GOSUB 7600; GOSUB 8250; GOTO 3214 ! ssp #146692 #155076
3210 INVOICE_LINE_READ=INVOICE_LINE_READ+1; IF INVOICE_LINE_READ>INVOICE_LINE_COUNT THEN GOTO 3295 ELSE IF INVOICE$[INVOICE_LINE_READ,4]<>"Y" THEN GOTO 3210; REM "get next line and check print/display status
3211 GRT$=INVOICE$[INVOICE_LINE_READ,2],INVOICE_LINE_EXT=NUM(INVOICE$[INVOICE_LINE_READ,3]),PRINT_INVOICE_LINE$=INVOICE$[INVOICE_LINE_READ,4],QTY_PER=NUM(INVOICE$[INVOICE_LINE_READ,5]),INV_QTY_ORDERED=NUM(INVOICE$[INVOICE_LINE_READ,6]),INV_QTY_SHIPPED=NUM(INVOICE$[INVOICE_LINE_READ,7]),INV_UNIT_PRICE=NUM(INVOICE$[INVOICE_LINE_READ,8]),OE=NUM(INVOICE$[INVOICE_LINE_READ,9]),SE=NUM(INVOICE$[INVOICE_LINE_READ,10]); REM "set variables for invoice line being processed  "
3212 IF GRT$(47,3)<>DIM(3) THEN GOSUB 4800 ! Find corresponding worksheet line and get data needed for 3pinfo and other stuff
3214 LS$=LI_TEMPLATE$; LINE_CLASS++; IF LINE_CLASS>2 THEN LINE_CLASS=1 ! 262522
3215 LI_INDEX=POS("?tf?"=LS$); IF LI_INDEX=0 THEN GOTO 3291
3216 LSEND_INDEX=POS("?"=LS$(LI_INDEX+4)),LI_TAG$=LS$(LI_INDEX+4,LSEND_INDEX-1),LS1$=LS$(1,LI_INDEX-1),LS2$=LS$(LI_INDEX+LSEND_INDEX+4),LI_POS=POS("<"+LI_TAG$+">"=LI_TAGS$); IF LI_POS=0 THEN LS$=LS1$+LS2$,LI_INDEX=0 ELSE LI_INDEX=NUM(LI_TAGS$(LI_POS-3,3))
3220 ON LI_INDEX GOTO 3289,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3289
3221 TMP$=STR(NUM(GRT$(47,3),ERR=*PROCEED):"###"); IF GRT$(47,3)="FRT" THEN TMP$="FRT" END_IF ; LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3290; REM "order_line_number ! 262522
3222 LS$=LS1$+FN%HTML_ESC$(GRT$(1,1))+LS2$; GOTO 3290; REM "line_type
3223 GOSUB 4250; IF STP(IC2$(35,20),3," ")="" THEN IIC$=STP(GRT$(65,10),1) ELSE IIC$=STP(IC2$(35,20),1) END_IF ; LS$=LS1$+FN%HTML_ESC$(IIC$)+LS2$; GOTO 3290; REM "item_code - will use united stationers code if existing
3224 LS$=LS1$+FN%HTML_ESC$(STP(GRT$(7,40),1))+LS2$; GOTO 3290; REM "item_desc
3225 TMP$=STP(GRT$(50,4),1)+"/"+STP(STR(QTY_PER:"##,###"),2); IF TMP$="/" THEN LS$=LS1$+LS2$; GOTO 3290 ELSE LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3290; REM "um
3226 LS$=LS1$+FN%HTML_ESC$(STR(INV_QTY_ORDERED:"#,###,##0.00"))+LS2$; GOTO 3290; REM "quantity_ordered
3227 LS$=LS1$+FN%HTML_ESC$(STR(QTY_PER:"##,###"))+LS2$; GOTO 3290; REM "qty_per_um
3228 LS$=LS1$+FN%HTML_ESC$(EC$[1](1,7))+LS2$; GOTO 3290; REM "session_id
3229 LS$=LS1$+FN%HTML_ESC$(WORKSHEET$)+LS2$; GOTO 3290; REM "worksheet
3230 LS$=LS1$+FN%HTML_ESC$(STR(OE:"#,###,###"))+LS2$; GOTO 3290; REM "qty_in_eaches_ordered
3231 LS$=LS1$+FN%HTML_ESC$(TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1)))+LS2$; GOTO 3290; REM "cic_code, form code if cic_code is blank
3232 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3290 ELSE LS$=LS1$+FN%HTML_ESC$(STR(INV_UNIT_PRICE:X3$(69,1)+"###,##0.00"))+LS2$; GOTO 3290; REM "invoice_unit_price  154989
3233 IF EC$[2](322,1)="Y" THEN LS$=LS1$+LS2$; GOTO 3290 ELSE LS$=LS1$+FN%HTML_ESC$(STR(INVOICE_LINE_EXT:X3$(69,1)+"###,##0.00-"))+LS2$; GOTO 3290; REM "invoice_unit_price_ext 154989
3234 LS$=LS1$+FN%HTML_ESC$(STR(SE:"#,###,##0"))+LS2$; GOTO 3290; REM "qty_in_eaches_shipped  "
3235 LS$=LS1$+FN%HTML_ESC$(STR(INV_QTY_SHIPPED:"#,###,##0.00"))+LS2$; GOTO 3290; REM "quantity_shipped
3236 LS$=LS1$+STR(LINE_CLASS)+LS2$; GOTO 3290 ! LC=NUM(GRT$(47,3)),LC$=STR(MOD(LC,2)+1); LS$=LS1$+FN%HTML_ESC$(LC$)+LS2$; GOTO 3290; REM "line_class
3237 LC$="Y"; LS$=LS1$+FN%HTML_ESC$(LC$)+LS2$; GOTO 3290; REM "print_line
3238 LS$=LS1$+FN%HTML_ESC$(STP(INV_ECE$(262,20),1))+LS2$; GOTO 3290; REM "RC NUMBER. Added STP on SSP167120
3239 GOSUB 3950; LS$=LS1$+TPINFO_TEMPLATE$+LS2$; GOTO 3290; REM "3pinfostart
3240 UNIT$=GRT$(50,4); GOSUB 5050; LS$=LS1$+FN%HTML_ESC$(UNIT_DESC$)+LS2$; GOTO 3290 ! WO174426, um_desc
3241 LS$=LS1$+FN%HTML_ESC$(FN%HTML_ESC$(STP(GRT$(7,40),1)))+LS2$; GOTO 3290; REM "item_desc_esc
3242 GOSUB 4250; IF STP(IC2$(35,20),3," ")="" THEN IIC$=STP(GRT$(65,10),1) ELSE IIC$=STP(IC2$(35,20),1) END_IF ; LS$=LS1$+FN%HTML_ESC$(FN%HTML_ESC$(IIC$))+LS2$; GOTO 3290; REM "item_code_esc
3243 TMP$=STP(GRT$(50,4),1); LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3290; REM "um_code - 210688
3244 LS$=LS1$+FN%HTML_ESC$(STR(QTY_PER))+LS2$; GOTO 3290; REM "qty_per_um_esc - 210688
3289 LS$=LS1$+LS2$; GOTO 3290; REM "not found replace with a '?'
3290 GOTO 3215
3291 IF LEN(INVOICE_SECTION$)+LEN(LS$)>64000 THEN PRINT (OUTPUT)INVOICE_SECTION$,EOL$; INVOICE_SECTION$=""; REM "ssp#134905
3292 INVOICE_SECTION$=INVOICE_SECTION$+LS$; IF DISPLAY_LINE_NUMBER$<>"" THEN GOTO 3295 ELSE GOTO 3210; REM "add to lines section, then get next line if any ssp#146692
3295 RETURN 
3300 WRITE_EEE:! WO224137
3310 DIM EEE$(572); EEE$(1,8)=ECD$(235,8) ! order number DBD-185-DBSPT-115417-SSP307358 change DIM from 380 to 572
3315 EEE$(9,150)=ORDER_ID_3P$ ! 3p_order_id
3320 EEE$(159,10)=SENDER_ID_3P$ ! 3p_sender_id
3325 EEE$(169,20)=FROM_ID_3P$ ! 3p_from_id, WO251794
3330 EEE$(189,20)=TO_ID_3P$ ! 3p_to_id, WO251794
3335 EEE$(209,20)=OTHER_1_3P$ ! 3p_other_1, WO251794
3336 EEE$(229,20)=OTHER_2_3P$ ! 3p_other_2, WO255400
3337 EEE$(249,20)=OTHER_3_3P$ ! 3p_other_3, WO255400
3338 EEE$(269,150)=ORDER_ID_3P_2$ ! 3p_order_id_2, DBD-185-DBSPT-115417-SSP307358
3340 WRITE (Z[47],KEY=EEE$(1,8))EEE$
3345 RETURN 
3349 ! 
3350 DISPLAY_SPECIAL_SHIP:
3370 PERFORM "EC3EEF;DISPLAY_SPECIAL_SHIP"
3395 RETURN 
3399 ! 
3400 WRITE_EEG:! WO234315, write 3p Order Line ID info by order line
3405 FOR XEEG=0 TO EEG_INDEX
3410 EEG_ORDER$=ECD$(235,8),EEG_WSL$=EEG_OUT_DATA$[XEEG,0],EEG_OLI3P$=EEG_OUT_DATA$[XEEG,1],EEG_ITEM$=EEG_OUT_DATA$[XEEG,2]
3415 DIM ECE_EEG$(499); READ (Z[43],KEY=WORKSHEET$+EEG_WSL$,DOM=NEXT_XEEG)ECE_EEG$(1)
3420 IF ECE_EEG$(282,3)=DIM(3) THEN GOTO NEXT_XEEG
3425 DIM EEG$(380); EEG$(1,8)=EEG_ORDER$,EEG$(9,3)=ECE_EEG$(282,3)
3430 EEG$(12,100)=EEG_OLI3P$,EEG$(112,10)=EEG_ITEM$
3435 WRITE (Z[50],KEY=EEG$(1,11))EEG$
3440 NEXT_XEEG:NEXT XEEG
3445 RETURN 
3449 ! 
3500 REM "Get lines section in LS_TEMPLATE$ and generate LINES_SECTION$ containing an entry for each order line from ESE
3502 LINES_SECTION$="",LS_TAGS$="001<line_number>002<line_type>003<from_customer>004<item_code>005<cost_center>006<cost_code>007<item_desc>008<um>009<ship_from>010<quantity>011<qty_per_um>012<session_id>013<worksheet>014<3pinfostart>015<>016<3p_id>017<lotlinestart>018<qty_in_eaches>019<linemessage_start>020<cic_code>021<item_price>022<item_price_ext>023<vp_info_1>024<vp_info_2>025<vp_id>026<proof_url>027<po_code>028<vendor_code>029<vendor_plant>030<weight_total>031<form_memo>032<line_class>033<item_key>034<print_line>035<rc_number>036<3p_text>037<order_line_price>038<order_line_ext>039<calc_item_price>040<calc_item_price_ext>041<um_desc>042<os_item_price>043<os_item_price_ext>044<ic1_avail_in_stock_sell>045<item_key_ue>046<pod>047<linemessage_nobr_start>048<calc_item_price_num>049<item_desc_esc>050<item_code_esc>051<quantity_esc>052<um_code>053<qty_per_um_esc>054<item_source>055<ext_line_number>056<sslinestart>057<po_number>058<order_line_number>059<deletesectionstart>060<changeqtystart>061<ext_field_1>062<ext_field_2>063<item_line_type>064<item_line_type_desc>065<3p_full_url>066<line_spec_url>"
3503 REM "Setup LS_TEMPLATE$
3504 LS_TEMPLATE$=LINE$
3505 READ (100,END=3506)LINE$; GOSUB 8150; LS_TEMPLATE$=LS_TEMPLATE$+LINE$+EOL$; IF POS("?tf?wslineend?"=LINE$)=0 THEN GOTO 3505
3508 IF DISPLAY_LINE_NUMBER$<>"" THEN DIM ECE$(499),ECE[8]; READ (Z[3],KEY=WORKSHEET$+DISPLAY_LINE_NUMBER$,DOM=3595)IOL=0330; GOSUB 7600; GOSUB 8250; GOTO 3514 ! ssp #146692 155076
3509 READ (Z[3],KEY=WORKSHEET$,DOM=3510)
3510 DIM ECE$(499),ECE[8]; ECE_K$=KEY(Z[3],END=3595); IF ECE_K$(1,10)<>WORKSHEET$ THEN GOTO 3595 ELSE READ (Z[3],KEY=ECE_K$)IOL=0330; GOSUB 7600; GOSUB 8250 ! 155076, SSP242073, was doing READ without KEY check to see if same worksheet, sometimes causing error 0 when reading past to the next worksheet, so added key check up front before READ     
3512 IF ECE$(258,1)="N" THEN GOTO 3510
3514 LS$=LS_TEMPLATE$
3515 LS_INDEX=POS("?tf?"=LS$); IF LS_INDEX=0 THEN GOTO 3591
3516 LSEND_INDEX=POS("?"=LS$(LS_INDEX+4)),LS_TAG$=LS$(LS_INDEX+4,LSEND_INDEX-1),LS1$=LS$(1,LS_INDEX-1),LS2$=LS$(LS_INDEX+LSEND_INDEX+4),LS_POS=POS("<"+LS_TAG$+">"=LS_TAGS$); IF LS_POS=0 THEN LS$=LS1$+LS2$,LS_INDEX=0 ELSE LS_INDEX=NUM(LS_TAGS$(LS_POS-3,3))
3518 T_IN=POS("."=LS_TAG$); IF T_IN THEN TAG_PARM$=MID(LS_TAG$,T_IN+1),LS_TAG$=MID(LS_TAG$,1,T_IN-1),LS_POS=POS("<"+LS_TAG$+">"=LS_TAGS$),LS_INDEX=NUM(LS_TAGS$(LS_POS-3,3)) ELSE TAG_PARM$="" ! DBD-191-DBSPT-117328-SSP307365
3520 ON LS_INDEX GOTO 3589,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,3581,3582,3583,3584,3585,3586,3589; REM "159423
3521 LS$=LS1$+FN%HTML_ESC$(ECE$(25,3))+LS2$; GOTO 3590; REM "line_number
3522 LS$=LS1$+FN%HTML_ESC$(ECE$(28,1))+LS2$; GOTO 3590; REM "line_type
3523 CALL "ZZDISP","AX",ECE$(29,10),"A/R",X3$,TMP$,"",0,0,X4$; LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3590; REM "from_customer
3524 IF ECE$(18,1)="O" THEN IC$=ECE$(228,20) ELSE IC$=ECE$(39,10) END_IF ; LS$=LS1$+FN%HTML_ESC$(STP(IC$,1))+LS2$; GOTO 3590; REM "item_code
3525 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(49,9),1))+LS2$; GOTO 3590; REM "cost_center
3526 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(58,9),1))+LS2$; GOTO 3590; REM "cost_code
3527 ITEM_COUNT=ITEM_COUNT+1; LS$=LS1$+FN%HTML_ESC$(STP(ECE$(67,40),1))+LS2$; GOTO 3590; REM "item_desc
3528 TMP$=STP(ECE$(107,4),1)+"/"+STP(STR(ECE[1]:"##,###"),2); IF TMP$="/" THEN LS$=LS1$+LS2$; GOTO 3590 ELSE LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3590; REM "um
3529 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(111,4),1))+LS2$; GOTO 3590; REM "ship_from
3530 QTY_TOTAL_ORDER=QTY_TOTAL_ORDER+(ECE(0)/QTY_DIVISOR); IF ECE$(28,1)="M" THEN QTY$="" ELSE QTY$=STR(ECE[0]/QTY_DIVISOR:"#,###,##0") END_IF ; LS$=LS1$+FN%HTML_ESC$(QTY$)+LS2$; GOTO 3590; REM "quantity. SSP186170, if msg line, make it ""
3531 LS$=LS1$+FN%HTML_ESC$(STR(ECE[1]:"##,###"))+LS2$; GOTO 3590; REM "qty_per_um
3532 LS$=LS1$+FN%HTML_ESC$(STP(EC$[1](1,7),1))+LS2$; GOTO 3590; REM "session_id
3533 LS$=LS1$+FN%HTML_ESC$(WORKSHEET$)+LS2$; GOTO 3590; REM "worksheet
3534 GOSUB 3950; LS$=LS1$+TPINFO_TEMPLATE$+LS2$; GOTO 3590; REM "3pinfostart
3535 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(44,20),1))+LS2$; GOTO 3590; REM "** not used **
3536 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(14,10),1))+LS2$; GOTO 3590; REM "3p_id
3537 GOSUB 3900; LS$=LS1$+LOT_SECTION$+LS2$; GOTO 3590; REM "lotlinestart - output of lotted information
3538 GOSUB 7300; IF ECE$(28,1)="M" THEN QTY$="" ELSE QTY$=STR(QTY_IN_EACHES:"#,###,###") END_IF ; LS$=LS1$+FN%HTML_ESC$(QTY$)+LS2$; GOTO 3590; REM "qty_in_eaches.  SSP166123. SSP186170, if msg line, make it ""
3539 LINEMSG_NOBR=0; GOSUB 3850; LS$=LS1$+LINEMSG_SECTION$+LS2$; GOTO 3590; REM "linemessage_start
3540 LS$=LS1$+FN%HTML_ESC$(TBL(SGN(LEN(STP(FM1$(350,20)))),STP(FM1$(11,10),1),STP(FM1$(350,20),1)))+LS2$; GOTO 3590; REM "cic_code, form code if cic_code is blank
3541 GOSUB 8246; GOSUB 7880; LS$=LS1$+FN%HTML_ESC$(RETURNED_PRICE$)+LS2$; GOTO 3590; REM "item_price 154989/162539
3542 GOSUB 8246; GOSUB 7880; GOSUB 7350; ITEM_PRICE_TOTAL+=ITEMPRICEEXT; LS$=LS1$+FN%HTML_ESC$(STP(STR(ITEMPRICEEXT:"###,###.00-"),2))+LS2$; GOTO 3590; REM "item_price_ext 154989 / 162539 / 166123
3543 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(24,20),1))+LS2$; GOTO 3590; REM "vp_info_1 ssp#148607
3544 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(44,20),1))+LS2$; GOTO 3590; REM "vp_info_2 ssp#148607
3545 LS$=LS1$+FN%HTML_ESC$(STP(EC7$(14,10),1))+LS2$; GOTO 3590; REM "vp_id ssp#148607
3546 GOSUB 4100; LS$=LS1$+FN%HTML_ESC$(PROOF_URL$)+LS2$; GOTO 3590; REM "proof_url ssp#148607
3547 LS$=LS1$+FN%HTML_ESC$(ECE$(129,1))+LS2$; GOTO 3590; REM "po_code
3548 CALL "ZZDISP","AX",ECE$(115,10),"A/P",X3$,TMP$,"",0,0,X4$; LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3590; REM "vendor_code
3549 LS$=LS1$+FN%HTML_ESC$(ECE$(125,4))+LS2$; GOTO 3590; REM "vendor_plant
3550 GOSUB 8246; IF FM1(18)=0 THEN ITEMWGT=0 ELSE ITEMWGT=FM1(18) END_IF ; ITEMWGTEXT=ITEMWGT*ECE(0); ITEM_WGT_TOTAL+=ITEMWGTEXT; IF ITEMWGTEXT=0 THEN WGT$="n/a" ELSE WGT$=STP(STR(ITEMWGTEXT:"###,###.00-"),2) END_IF ; LS$=LS1$+FN%HTML_ESC$(WGT$)+LS2$; GOTO 3590; REM "weight_total "
3551 GOSUB 8246; LS$=LS1$+FN%HTML_ESC$(STP(FM1$(389,60),2))+LS2$; GOTO 3590; REM "form_memo
3552 LC=NUM(ECE$(25,3)),LC$=STR(MOD(LC,2)+1); LS$=LS1$+FN%HTML_ESC$(LC$)+LS2$; GOTO 3590; REM "line_class"
3553 LS$=LS1$+FN%HTML_ESC$(ECE$(29,20))+LS2$; GOTO 3590; REM "item_key
3554 LS$=LS1$+"Y"+LS2$; GOTO 3590; REM "print_line
3555 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(262,20),1))+LS2$; GOTO 3590; REM "RC NUMBER. Added STP on SSP 167120
3556 GOSUB 4300; LS$=LS1$+VAR_TEXT$+LS2$; GOTO 3590 ! 3p_text 166342
3557 GOSUB 7250; LS$=LS1$+FN%HTML_ESC$(ORDER_PRICE$)+LS2$; GOTO 3590 ! SSP165030, order_line_price
3558 GOSUB 7250; ORDER_LINE_TOTAL+=ORDERPRICEEXT; LS$=LS1$+FN%HTML_ESC$(STP(STR(ORDERPRICEEXT:"###,###.00"),2))+LS2$; GOTO 3590 ! SSP165030, order_line_ext
3559 GOSUB 8246; GOSUB 7880; IF ECE$(18,1)<>"O" AND POS(ECE$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; GOSUB UPDATE_DISP_PRICE; LS$=LS1$+FN%HTML_ESC$(RETURNED_PRICE$)+LS2$; GOTO 3590 ! WO177343, calc_item_price. SSP182135, added check to use FMS price if not 0, also SSP182425.  WO215367, update display price to ECE, WO 227556
3560 GOSUB 8246; GOSUB 7880; IF ECE$(18,1)<>"O" AND POS(ECE$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; GOSUB 7350; CALC_ITEM_PRICE_TOTAL+=ITEMPRICEEXT; GOSUB UPDATE_DISP_EXT; LS$=LS1$+FN%HTML_ESC$(STP(STR(ITEMPRICEEXT:"###,###.00-"),2))+LS2$; GOTO 3590 ! WO177343, calc_item_price_ext. SSP182135, added check to use FMS price if not 0, also SSP182425.  WO215367, update display price extension to ECE, WO 227556
3561 UNIT$=ECE$(107,4); GOSUB 5050; LS$=LS1$+FN%HTML_ESC$(UNIT_DESC$)+LS2$; GOTO 3590 ! WO174426, um_desc
3562 IF ECE$(18,1)<>"O" THEN RETURNED_PRICE$="" ELSE GOSUB 7882 END_IF ; LS$=LS1$+FN%HTML_ESC$(RETURNED_PRICE$)+LS2$; GOTO 3590 ! WO176425, os_item_price, TOPS price, always show, even if buyer set to not see pricing.
3563 IF ECE$(18,1)<>"O" THEN ITEMPRICEEXT=0,OS_ITEMPRICEEXT$="" ELSE GOSUB 7882; GOSUB 7350; OS_ITEMPRICEEXT$=STP(STR(ITEMPRICEEXT:"###,###.00-"),2),OS_ITEM_PRICE_TOTAL+=ITEMPRICEEXT END_IF ; LS$=LS1$+FN%HTML_ESC$(OS_ITEMPRICEEXT$)+LS2$; GOTO 3590 ! WO176425, os_item_price_ext, TOPS price, always show, even if buyer set to not see pricing.
3564 IF POS(ECE$(28,1)="CI")=0 THEN LS$=LS1$+LS2$; GOTO 3590 ELSE GOSUB 5750; LS$=LS1$+FN%HTML_ESC$(STP(STR(IC1INFO[31]/PACKDIV:"#,###,##0-"),1))+LS2$; GOTO 3590 ! WO184982, ic1_avail_in_stock_sell, only for C or I type worksheet lines
3565 GOSUB 5850; LS$=LS1$+FN%HTML_ESC$(ITEM_KEY_UE$)+LS2$; GOTO 3590 ! SSP186532, item_key_ue
3566 IF ECR$(255,1)="Y" OR ECE$(298,1)="Y" THEN LS$=LS1$+"*"+LS2$; GOTO 3590 ELSE LS$=LS1$+LS2$; GOTO 3590 ! pod, SSP189526, WO191991
3567 LINEMSG_NOBR=1; GOSUB 3850; LS$=LS1$+LINEMSG_SECTION$+LS2$; GOTO 3590; REM "linemessage_nobr_start
3568 GOSUB 8246; GOSUB 7880; IF ECE$(18,1)<>"O" AND POS(ECE$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; GOSUB UPDATE_DISP_PRICE; LS$=LS1$+FN%HTML_ESC$(STP(STP(RETURNED_PRICE$,3,X3$(69,1)),2))+LS2$; GOTO 3590 ! WO210688, calc_item_price_num, same as calc_item_price without the $ symbol.  WO215367, update display price to ECE, WO 227556 
3569 ITEM_COUNT=ITEM_COUNT+1; LS$=LS1$+FN%HTML_ESC$(FN%HTML_ESC$(STP(ECE$(67,40),1)))+LS2$; GOTO 3590; REM "item_desc_esc
3570 IF ECE$(18,1)="O" THEN IC$=ECE$(228,20) ELSE IC$=ECE$(39,10) END_IF ; LS$=LS1$+FN%HTML_ESC$(FN%HTML_ESC$(STP(IC$,1)))+LS2$; GOTO 3590; REM "item_code_esc
3571 QTY_TOTAL_ORDER=QTY_TOTAL_ORDER+(ECE(0)/QTY_DIVISOR); IF ECE$(28,1)="M" THEN QTY$="0.00" ELSE QTY$=STR(ECE[0]/QTY_DIVISOR:"#########0.00") END_IF ; LS$=LS1$+FN%HTML_ESC$(STP(QTY$,2))+LS2$; GOTO 3590; REM "quantity_esc
3572 TMP$=STP(ECE$(107,4),1); LS$=LS1$+FN%HTML_ESC$(TMP$)+LS2$; GOTO 3590; REM "um_code - 210688
3573 LS$=LS1$+FN%HTML_ESC$(STR(ECE[1]))+LS2$; GOTO 3590; REM "qty_per_um_esc - 210688
3574 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(18,1),1))+LS2$; GOTO 3590; REM "item_source,ssp 221621
3575 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(321,3),1))+LS2$; GOTO 3590 ! SSP221299, ext_line_number
3576 GOSUB DISPLAY_SPECIAL_SHIP; LS$=LS1$+SS_SECTION$+LS2$; GOTO 3590; REM "sslinestart
3577 IF ECD$(235,8)=DIM(8) OR ECD$(235,8)="No Order" OR ECE$(129,1)=DIM(1) THEN PO_NUMBER$="" ELSE PO_NUMBER$=FN%ZZDISP$(ECD$(235,8)+ECE$(129,1),"P/O") END_IF ; LS$=LS1$+FN%HTML_ESC$(PO_NUMBER$)+LS2$; GOTO 3590 ! SSP239515, po_number
3578 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(282,3),1))+LS2$; GOTO 3590 ! SSP239515, order_line_number
3579 GOSUB DISPLAY_DELETE_SECTION; LS$=LS1$+DD_SECTION$+LS2$; GOTO 3590; REM "deletesectionstart
3580 GOSUB DISPLAY_CHGQTY_SECTION; LS$=LS1$+CQ_SECTION$+LS2$; GOTO 3590; REM "changeqtystart
3581 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(427,20),1))+LS2$; GOTO 3590 ! SSP257735, ext_field_1
3582 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(447,20),1))+LS2$; GOTO 3590 ! SSP257735, ext_field_2
3583 LS$=LS1$+FN%HTML_ESC$(STP(ECE$(467,1),1))+LS2$; GOTO 3590 ! SSP268433, item_line_type
3584 GOSUB ITEM_LINE_TYPE_DESC; LS$=LS1$+FN%HTML_ESC$(STP(ILTD$,1))+LS2$; GOTO 3590 ! SSP268433, item_line_type_desc
3585 GOSUB RETRIEVE_EEL; LS$=LS1$+FN%HTML_ESC$(FULL_URL_N$)+LS2$; GOTO 3590 ! SSP290559, 3p_full_url, DBD-191-DBSPT-117328-SSP307365
3586 GOSUB RETRIEVE_EEQ; LS$=LS1$+FN%HTML_ESC$(STP(EEQ$(14,256),1))+LS2$; GOTO 3590 ! SSP307244-DBD-88, line_spec_url
3589 LS$=LS1$+LS2$; GOTO 3590; REM "not found replace with a '?'
3590 GOTO 3515
3591 IF LEN(LINES_SECTION$)+LEN(LS$)>64000 THEN PRINT (OUTPUT)LINES_SECTION$,EOL$; LINES_SECTION$=""; REM "ssp#134905
3592 LINES_SECTION$=LINES_SECTION$+LS$; IF DISPLAY_LINE_NUMBER$<>"" THEN GOTO 3595 ELSE GOTO 3510; REM "add to lines section, then get next line if any ssp#146692
3595 RETURN 
3600 REM "Location change section, template in LC_TEMPLATE$ and generate LOC_CHG$ containing the section with location change info. HOWEVER, if buyer id location field is filled in the skip this section, they can't change it.
3602 LOC_CHG$="",LC_TAGS$="001<location_list>"
3603 REM "Setup LC_TEMPLATE$
3604 LC_TEMPLATE$=LINE$+EOL$
3605 READ (100,END=3606)LINE$; GOSUB 8150; LC_TEMPLATE$=LC_TEMPLATE$+LINE$+EOL$; IF POS("?tf?locchangeend?"=LINE$)=0 THEN GOTO 3605
3609 IF EC$[2](61,4)<>DIM(4) THEN GOTO 3695; REM "If location code of buyer record is not blank, then they are not allowed to change their shipto location.
3614 LC$=LC_TEMPLATE$
3615 LC_INDEX=POS("?tf?"=LC$); IF LC_INDEX=0 THEN GOTO 3691
3616 LCEND_INDEX=POS("?"=LC$(LC_INDEX+4)),LC_TAG$=LC$(LC_INDEX+4,LCEND_INDEX-1),LC1$=LC$(1,LC_INDEX-1),LC2$=LC$(LC_INDEX+LCEND_INDEX+4),LC_POS=POS("<"+LC_TAG$+">"=LC_TAGS$); IF LC_POS=0 THEN LC$=LC1$+LC2$,LC_INDEX=0 ELSE LC_INDEX=NUM(LC_TAGS$(LC_POS-3,3))
3620 ON LC_INDEX GOTO 3689,3621,3689
3621 GOSUB 2250; LC$=LC1$+LOC_LIST$+LC2$; GOTO 3690; REM "location_list
3689 LC$=LC1$+LC2$; GOTO 3690; REM "not found replace with a BLANK
3690 GOTO 3615
3691 LOC_CHG$=LC$; REM "Put in loc_chg$ and leave
3695 RETURN 
3700 REM "Get cat item entry in CI_TEMPLATE$ and generate CAT_ITEM_SECTION$ containing an entry for each item in the catalog
3702 CAT_ITEM_SECTION$="",CI_TAGS$="001<category_desc>002<category_addl_desc>003<category_item_list>004<category_item_um_list>"
3703 REM "Setup CI_TEMPLATE$
3704 CI_TEMPLATE$=LINE$
3705 READ (100,END=3706)LINE$; GOSUB 8150; CI_TEMPLATE$=CI_TEMPLATE$+LINE$+EOL$; IF POS("?tf?category_entry_end?"=LINE$)=0 THEN GOTO 3705
3706 IF LEN(EC$[6])<10 THEN GOTO 3795
3708 FOR CAT_I=1 TO LEN(EC$[6])-9 STEP 10
3709 CATALOG_ID$=EC$[2](51,10); READ (Z[15],KEY=CATALOG_ID$+EC$[6](CAT_I,10),DOM=3710); REM "Position catalog
3710 DIM ECH$(60); READ (Z[15],END=3791)ECH$; IF ECH$(1,10)<>CATALOG_ID$ OR ECH$(11,10)<>EC$[6](CAT_I,10) THEN GOTO 3791
3712 DIM ECG$(100); READ (Z[14],KEY=ECH$(11,10),DOM=3710)ECG$
3714 CI$=CI_TEMPLATE$
3715 CI_INDEX=POS("?tf?"=CI$); IF CI_INDEX=0 THEN GOTO 3791
3716 CIEND_INDEX=POS("?"=CI$(CI_INDEX+4)),CI_TAG$=CI$(CI_INDEX+4,CIEND_INDEX-1),CI1$=CI$(1,CI_INDEX-1),CI2$=CI$(CI_INDEX+CIEND_INDEX+4),CI_POS=POS("<"+CI_TAG$+">"=CI_TAGS$); IF CI_POS=0 THEN CI$=CI1$+CI2$,CI_INDEX=0 ELSE CI_INDEX=NUM(CI_TAGS$(CI_POS-3,3))
3720 ON CI_INDEX GOTO 3789,3721,3722,3723,3724,3789
3721 CI$=CI1$+FN%HTML_ESC$(STP(ECG$(11,30),1))+CI2$; GOTO 3790; REM "category_desc
3722 CI$=CI1$+FN%HTML_ESC$(STP(ECG$(41,60),1))+CI2$; GOTO 3790; REM "category_addl_desc
3723 UM=0; GOSUB 3800; CI$=CI1$+CI_LIST$+CI2$; GOTO 3790; REM "category_item_list
3724 UM=1; GOSUB 3800; CI$=CI1$+CI_LIST$+CI2$; GOTO 3790; REM "catetory_item_um_list adds u/m to descriptions
3789 CI$=CI1$+CI2$; GOTO 3790; REM "tag not found
3790 GOTO 3715
3791 IF LEN(CAT_ITEM_SECTION$)+LEN(CI$)>64000 THEN PRINT (OUTPUT)CAT_ITEM_SECTION$,EOL$,; CAT_ITEM_SECTION$=""; REM "ssp# 130807
3792 CAT_ITEM_SECTION$=CAT_ITEM_SECTION$+CI$; NEXT CAT_I; REM "Add to cat item section, then get next category if any, moved from 3791 by ssp#130807
3795 RETURN 
3800 REM "Process list of items for a category, when we come in, ECH$ holds the first item for the list
3805 CI_LIST$="<option value="+QUO+QUO+">"
3809 CURR_CATEGORY$=ECH$(11,10); GOTO 3811; REM "First time thru, skip read we already have ECH$
3810 DIM ECH$(60); READ (Z[15],END=3830)ECH$; IF ECH$(1,10)<>CATALOG_ID$ OR ECH$(11,10)<>CURR_CATEGORY$ THEN GOTO 3830
3811 DIM FM1$(449),FM1[31]; FIND (Z[7],KEY=ECH$(41,20),DOM=3812)IOL=0370
3813 IF UM THEN CI_UM$=" - "+STP(FM1$(100,4),2)+"/"+STP(STR(FM1[4]:"#####"),2) ELSE CI_UM$=""
3815 CI_LIST$=CI_LIST$+"<option value="+QUO+FN%HTML_ESC$(FM1$(11,10))+QUO+">"+FN%HTML_ESC$(STP(ECH$(21,20),1)+"-"+STP(FM1$(42,40),1)+CI_UM$)+"</option>"
3820 GOTO 3810
3830 REM "Clean up CI_LIST$, etc,
3832 CTMP=POS("</select>"=CI1$,-1); IF CTMP<>0 THEN CI_LIST$=CI_LIST$+"</select>"; IF CTMP=1 THEN CI1$="" ELSE CI1$=CI1$(1,CTMP-1)
3833 IF CI2$>"" THEN IF CI2$(1,1)=">" THEN CI2$=CI2$(2); REM "if token was part of a comment, then remove the end of the comment
3845 RETURN 
3850 REM "get line message section (linemessage_start)
3851 LINEMSG_END_TAG$="<!?tf?linemessage_end"; IF LINEMSG_NOBR THEN LINEMSG_END_TAG$="<!?tf?linemessage_nobr_end"
3852 LINEMSG_SECTION$="",LM_TEMPLATE$=LS2$(2); IF LS1$(LEN(LS1$)-1,2)="<!" THEN LS1$=LS1$(1,LEN(LS1$)-2)
3853 LINEMSG_END=POS(LINEMSG_END_TAG$=LM_TEMPLATE$),LM_TEMPLATE$=LM_TEMPLATE$(1,LINEMSG_END-1)
3854 LINEMSG_END=POS(LINEMSG_END_TAG$=LS2$); IF LEN(LS2$)=LINEMSG_END+LEN(LINEMSG_END_TAG$)+2 THEN LS2$="" ELSE LS2$=LS2$(LINEMSG_END+LEN(LINEMSG_END_TAG$)+2); REM "strip out the line message section from LS2$
3858 DIM OPTIONS$(20); REM "OPTIONS$(1,1)=ORDER_REVIEW$
3859 IF LINEMSG_NOBR THEN OPTIONS$(3,1)="Y"
3860 CALL "EC3MG0",X3$,X4$,EC_PARM$,EC${ALL},LM_TEMPLATE$,ECE$,MESS_INFO${ALL},OPTIONS$; REM "process messages for line
3891 LINEMSG_SECTION$=LM_TEMPLATE$
3895 RETURN 
3900 REM "Get lotted lines section in LOT_TEMPLATE$ and generate LOT_SECTION$ containing an entry for each order line from ICF for the corresponding line section item
3903 REM "Setup LOT_TEMPLATE$
3904 LOT_TEMPLATE$=LS2$(2)
3905 LOT_END=POS("<!?tf?lotlineend"=LOT_TEMPLATE$),LOT_TEMPLATE$=LOT_TEMPLATE$(1,LOT_END-1)
3906 LS2$=LS2$(2); REM "get rid of trailing > from opening <!?tf?lotlinstart>
3907 LOT_END=POS("<!?tf?lotlineend"=LS2$); IF LEN(LS2$)=LOT_END+18 THEN LS2$="" ELSE LS2$=LS2$(LOT_END+18); REM "strip out the lot section from LS2$
3910 DIM ECR$(1000); FIND (Z[25],KEY=ECE$(29,20),DOM=3911)ECR$
3912 IF STP(ECR$(256,48),1)="" THEN WHSE_LIST$=EC$[11] ELSE WHSE_LIST$=STP(ECR$(256,48),1)
3915 IF POS(ECE$(28,1)="MS")<>0 THEN LOT_SECTION$=""; GOTO 3940 ! 182377 if message or special charge, don't even look for lots
3920 REM "get lot records
3922 CALL "EC3IC1",X3$,X4$,EC_PARM$,EC${ALL},ECE$(29,20),WHSE_LIST$,ECE[0]*ECE[1],ECE[1],ICF_INFO${ALL},NEXT_ICF_INDEX,ECD$(235,8)+ECE$(282,3) ! SSP164844, added ECE$(282,3), FS2 line number
3925 REM "IF NEXT_ICF_INDEX=1 THEN LET LOT_TEMPLATE$=""; GOTO 03933; REM "NO LOT RECORDS
3930 REM "output lot section
3932 CALL "EC3IC2",X3$,X4$,EC_PARM$,EC${ALL},LOT_TEMPLATE$,ICF_INFO${ALL},NEXT_ICF_INDEX-1,""
3933 IF ECE$(129,1)=" " THEN LOT_SECTION$=LOT_TEMPLATE$ ELSE LOT_SECTION$=""; REM "if po being issued then eliminate lot section completely
3940 RETURN 
3950 REM "Get lines section in TPINFO_TEMPLATE$ and generate TPINFO_SECTION$ containing an entry for each order line from ESE
3951 IF LEN(LS1$)<=2 THEN LS1$="" ELSE LS1$=LS1$(1,LEN(LS1$)-2); REM "get rid of <!
3952 TPINFO_SECTION$="",TPINFO_TAGS$="001<3p_info_1>002<3p_info_2>003<3p_text>004<3p_info_3>005<3p_proof_url>"
3953 REM "Setup TPINFO_TEMPLATE$
3954 TPINFO_TEMPLATE$=LS2$(2)
3955 TPINFO_END=POS("<!?tf?3pinfoend"=TPINFO_TEMPLATE$),TPINFO_TEMPLATE$=TPINFO_TEMPLATE$(1,TPINFO_END-1)
3956 LS2$=LS2$(2); REM "get rid of trailing > from opening <!?tf?3pinfostart>
3957 TPINFO_END=POS("<!?tf?3pinfoend"=LS2$); IF LEN(LS2$)=TPINFO_END+17 THEN LS2$="" ELSE LS2$=LS2$(TPINFO_END+17); REM "strip out the lot section from LS2$
3959 IF NUL(MID(ECR$,243,10)) AND NUL(MID(EC7$,14,10)) THEN TPINFO_TEMPLATE$=""; GOTO 3995; REM "if no 3pinfo in both ECR AND EC7 record, eliminate section; used to be, check only ECR and eliminate section
3965 TPINFO_INDEX=POS("?tf?"=TPINFO_TEMPLATE$); IF TPINFO_INDEX=0 THEN GOTO 3991
3966 TPINFOEND_INDEX=POS("?"=TPINFO_TEMPLATE$(TPINFO_INDEX+4)),TPINFO_TAG$=TPINFO_TEMPLATE$(TPINFO_INDEX+4,TPINFOEND_INDEX-1),TP1$=TPINFO_TEMPLATE$(1,TPINFO_INDEX-1),TP2$=TPINFO_TEMPLATE$(TPINFO_INDEX+TPINFOEND_INDEX+4),TPINFO_POS=POS("<"+TPINFO_TAG$+">"=TPINFO_TAGS$); IF TPINFO_POS=0 THEN TPINFO_TEMPLATE$=TP1$+TP2$,TPINFO_INDEX=0 ELSE TPINFO_INDEX=NUM(TPINFO_TAGS$(TPINFO_POS-3,3))
3970 ON TPINFO_INDEX GOTO 3989,3971,3972,3973,3974,3975,3989
3971 TPINFO_TEMPLATE$=TP1$+FN%HTML_ESC$(STP(EC7$(24,20),1))+TP2$; GOTO 3990; REM "3p_info_1
3972 TPINFO_TEMPLATE$=TP1$+FN%HTML_ESC$(STP(EC7$(44,20),2))+TP2$; GOTO 3990; REM "3p_info_2. SSP176753, was previously setting to EC7$(24,20)
3973 GOSUB 4350; TPINFO_TEMPLATE$=TP1$+VAR_TEXT$+TP2$; GOTO 3990; REM "3p_text 166342
3974 TPINFO_TEMPLATE$=TP1$+FN%HTML_ESC$(STP(EC7$(64,50),2))+TP2$; GOTO 3990 ! WO178946, 3p_info_3
3975 THREEPTEMP$=THREEPKEY$,THREEPKEY$=TBL(NUL(MID(ECR$,243,10)),ECR$(243,10),EC7$(14,10)); GOSUB 4130; THREEPKEY$=THREEPTEMP$; TPINFO_TEMPLATE$=TP1$+STP(EC6$(141,60),2)+TP2$; GOTO 3990 ! SSP215913, 3p_proof_url
3989 TPINFO_TEMPLATE$=TP1$+"?"+TP2$; GOTO 3990; REM "not found replace with a '?'
3990 GOTO 3965
3995 RETURN 
4000 REM "delete all message lines for order
4002 READ (Z[24],KEY=WORKSHEET$,DOM=4003)
4004 EC0_KEY$=KEY(Z[24],END=4005); IF EC0_KEY$(1,10)<>WORKSHEET$ THEN GOTO 4005 ELSE REMOVE (Z[24],KEY=EC0_KEY$); GOTO 4004
4045 RETURN 
4050 REM "remove single line message
4051 IF LEN(ECE$)=0 THEN GOTO 4055
4052 READ (Z[24],KEY=ECE$(1,10)+ECE$(25,3),DOM=4053)
4053 REM "ssp 154319 - do not clear message lines since shipto may now change
4054 EC0_KEY$=KEY(Z[24],END=4055); IF EC0_KEY$(1,13)<>ECE$(1,10)+ECE$(25,3) THEN GOTO 4055 ELSE REMOVE (Z[24],KEY=EC0_KEY$); GOTO 4054
4095 RETURN 
4100 ! get PROOF_URL$ - this is only the url to directory you must tack on the actual proof file name ssp#148607
4105 PROOF_URL$=""
4110 DIM EC6$(900); FIND (Z[27],KEY=MID(EC7$,14,10),DOM=*NEXT)EC6$
4120 PROOF_URL$=STP(EC6$(141,60))
4125 RETURN 
4130 REM "get 3p id master record 148750
4140 IF THREEPKEY$=DIM(10) THEN THREEPKEY$=MID(ECR$,243,10) END_IF ; IF THREEPKEY$=DIM(10) THEN DIM EC6$(900); GOTO 4149 ! SSP166300, was getting error 47 at 8447, added DIM for EC6$
4141 DIM EC6$(900); FIND (Z(27),KEY=THREEPKEY$,DOM=*NEXT)EC6$
4149 RETURN 
4200 REM "Adding P/O code, set vendor if not blank, and update ECD2 info
4205 IF ECE$(115,14)=DIM(14) THEN ECE$(115,14)=FM1$(82,14) ! SSP232244, was line 4215
4207 GOSUB VEND_WHSE_PRT_FLGS ! WO253441
4210 CHECK$=ECE$(115,14)+ECE$(129,1); IF POS(CHECK$=ECD2$,15)>0 THEN GOTO *RETURN ! SSP232244
4215 EXTRACT (Z[2],KEY=ECD$(1,10),DOM=4240)IOL=0310 ! SSP232244, was line 4210
4220 ECD2$=ECD2$+ECE$(115,14)+ECE$(129,1)
4230 WRITE (Z[2],KEY=ECD$(1,10))IOL=0310
4245 RETURN 
4250 REM "get TOPS united stationers item code
4252 DIM IC2$(100); FIND (Z(31),KEY=GRT$(55,20)+EC_PARM$(936,10)+DIM(4),DOM=4253)IC2$
4254 RETURN 
4300 REM "3p_text handling, LS2$ should have [x] in it
4305 REM "Extract [x] part from LS2, if not found then ignore
4310 VAR_TEXT$=""
4315 BRACKET_POS=POS("]"=LS2$); IF MID(LS2$,1,1)<>"[" OR BRACKET_POS=0 THEN RETURN ELSE VAR_CODE$=LS2$(1,BRACKET_POS),LS2$=LS2$(BRACKET_POS+1)
4320 VAR_CODE$=VAR_CODE$(2,LEN(VAR_CODE$)-2); VAR_CODE$=STR(NUM(VAR_CODE$,ERR=4318):"00000")
4325 VAR_CODE_KEY$=ECR$(243,10)+VAR_CODE$; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,VAR_CODE_KEY$,VAR_TEXT${ALL}
4330 VAR_TEXT$=VAR_TEXT$[1]
4335 RETURN 
4340 ! 
4350 REM "3p_text handling, TP2$ should have [x] in it
4355 REM "Extract [x] part from TP2, if not found then ignore
4360 VAR_TEXT$=""
4365 BRACKET_POS=POS("]"=TP2$); IF MID(TP2$,1,1)<>"[" OR BRACKET_POS=0 THEN RETURN ELSE VAR_CODE$=TP2$(1,BRACKET_POS),TP2$=TP2$(BRACKET_POS+1)
4370 VAR_CODE$=VAR_CODE$(2,LEN(VAR_CODE$)-2); VAR_CODE$=STR(NUM(VAR_CODE$,ERR=4368):"00000")
4375 VAR_CODE_KEY$=TBL(NUL(MID(ECR$,243,10)),ECR$(243,10),EC7$(14,10))+VAR_CODE$; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,VAR_CODE_KEY$,VAR_TEXT${ALL}
4380 VAR_TEXT$=VAR_TEXT$[1]
4385 RETURN 
4390 ! 
4400 REM " CREATE REORDER NOTICES 161117
4401 IF EC$[2](338,1)="Y" OR ECD$(235,8)=DIM(8) THEN RETURN ; REM 216471
4402 CLOSE (1005)
4403 ROTMP_FILE$=FILE_PATH$+"TRO"+WORKSHEET$
4404 OPEN (1005,ERR=4437)ROTMP_FILE$; GOTO 4405 ! If file can be opened then already in use, try again.  
4405 READ RECORD (1005,END=4437)RON$
4406 IF RON$(1,10)<>WORKSHEET$ THEN CLOSE (1005); GOTO 4437
4407 READ (Z[43],KEY=WORKSHEET$,DOM=*NEXT); REM SSP 216471
4408 RO_ECE_KEY$=KEY(Z[43],END=4437); REM 216471
4409 IF RO_ECE_KEY$(1,10)<>WORKSHEET$ THEN GOTO 4405; REM 216471, SSP220252, GOTO was 4005, s/b 4405
4410 READ RECORD (Z[43],KEY=RO_ECE_KEY$)RO_ECE$; REM 216471
4411 IF RO_ECE$(29,20)<>RON$(24,20) THEN GOTO 4408; REM 216471
4412 IF RO_ECE$(282,3)=DIM(3) THEN GOTO 4408; REM 216471
4413 ! SSP220252 CALL "FM2UZC",X3$,FROM_CUST$+ITEM_CODE$,"\"+RCODE$+"",1
4414 REM " Generate the Email
4415 RON_MSG$="|LINE 4415 CHECK FM5 KEY=|"+"R"+RON$(45,1)+RON$(14,10)+"    "+RON$(34,10)+"|"; GOSUB LOG_RON_MSG; READ (Z[40],KEY="R"+RON$(45,1)+RON$(14,10)+"    "+RON$(34,10),DOM=*NEXT)FM5$; RON_MSG$="|FOUND FM5 REC LINE 4415|"+FM5$(1,50)+"|"; GOSUB LOG_RON_MSG; GOTO 4405; REM 216471, SSP231499
4416 FROM_CUST$=RON$(14,10),CUST_DIV$=RON$(24,2),CUST_CODE$=RON$(26,8),ITEM_CODE$=RON$(34,10),RON_LINE$=RON$(11,3),RCODE$=RON$(44,1); REM 216471
4417 IF ITEM_CODE$=DIM(10) THEN GOTO 4405; REM 216471
4418 CALL "FM2UZC",X3$,FROM_CUST$+ITEM_CODE$,"\"+RCODE$+"",1; REM 216471
4419 REM " Generate the Email     216471
4420 ESUBJECT$="Reorder Notice"; BASIC_PGN$="EC3RN0"; ETEMPLATE$=%SERVER_TEMPLATE_DIR$+"reorder.htm"; BUYER$=ECD$(11,15); SESSION_ID$=EC$[1](1,7); WORKSHEET$=ECD$(1,10); EACTION$="R"; REM 216471, SSP247856, was BUYER$=EC$[1](8,15) but we always need the buyer from the worksheet to get the correct email addresses
4421 SERVERID$=EC$[14](1,15); REM " ID OF SERVER THAT IS BEING RUN 
4423 OTHER$="customer="+CUST_DIV$+CUST_CODE$+"|"+"item_code="+STP(ITEM_CODE$)+"|"+"create_email=Y|"+"remove_file=Y|"+"session_id="+EC$[1](1213,64)+"|"+"from_customer="+FROM_CUST$+"|"+"worksheet="+WORKSHEET$+RON_LINE$+"|" ! ssp 201193
4430 REM " SEND THE EMAIL
4431 CALL "EC3EMA",X3$,X4$,EACTION$,BUYER$,ETEMPLATE$,BASIC_PGN$,ESUBJECT$,SERVERID$,OTHER$,RETURN_CODE
4432 GOTO 4405
4437 RETURN 
4440 REM "READ FILE AND FLAG TO DELTE
4441 IF EC$[2](338,1)="Y" THEN RETURN 
4442 CLOSE (1005); ROTMP_FILE$=FILE_PATH$+"TRO"+WORKSHEET$
4444 OPEN (1005,ERR=4450)ROTMP_FILE$
4445 REMOVE (1005,KEY=WORKSHEET$+MASTER_TO_DELETE$,DOM=4450)
4450 RETURN 
4482 REM " ADD TO GLOBAL LIST      
4483 FROM_CUST$=ECE$(29,10),CUST_DIV$=ECD$(26,2),CUST_CODE$=ECD$(28,8),ITEM_CODE$=ECE$(39,10)
4484 GOTO 4486; REM "%RON$=%RON$+ECE$(25,3)+FROM_CUST$+CUST_DIV$+CUST_CODE$+ITEM_CODE$+STR(Q)
4486 ECE$(296,1)="Y"
4487 CLOSE (1005)
4488 ROTMP_FILE$=FILE_PATH$+"TRO"+WORKSHEET$
4489 OPEN (1005,ERR=*NEXT)ROTMP_FILE$; CLOSE (1005); GOTO 4491 ! If file can be opened then already in use, try again.  
4490 DIRECT ROTMP_FILE$,13,0,46,0,0
4491 OPEN (1005)ROTMP_FILE$
4492 WRITE (1005,KEY=WORKSHEET$+ECE$(25,3))WORKSHEET$+ECE$(25,3)+FROM_CUST$+CUST_DIV$+CUST_CODE$+ITEM_CODE$+STR(Q)+FMPD$(108,1)
4493 CLOSE (1005)
4495 RON_MSG$="|LINE|"+ECE$(25,3)+"|WRITE TRO LINE 4492|"+WORKSHEET$+ECE$(25,3)+FROM_CUST$+CUST_DIV$+CUST_CODE$+ITEM_CODE$+STR(Q)+FMPD$(108,1)+"|"; GOSUB LOG_RON_MSG ! SSP231499
4496 RON_MSG$="|ROP_DAYS|"+STR(ROP_DAYS)+"|ROP_QTY|"+STR(ROP_QTY)+"|RON_IC1_AVAIL|"+STR(RON_IC1_AVAIL)+"|QTY_IN_EACHES|"+STR(QTY_IN_EACHES)+"|BELOW_DAYS|"+STR(BELOW_DAYS)+"|BELOW_QTY|"+STR(BELOW_QTY)+"|Q|"+STR(Q)+"|QUANTITY_MULTIPLIER|"+STR(QUANTITY_MULTIPLIER)+"|"; GOSUB LOG_RON_MSG ! SSP231499, SSP232324
4498 ! RON_OUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+ECD$(1,10)+"|LINE|"+ECE$(25,3)+"|TROENTRY|"+WORKSHEET$+FROM_CUST$+CUST_DIV$+CUST_CODE$+ITEM_CODE$+STR(Q)+FMPD$(108,1)+"|VARIABLES|"+STR(ROP_DAYS)+"|"+STR(ROP_QTY)+"|"+STR(IC1_AVAIL)+"|"+STR(QTY_IN_EACHES)+"|"+STR(BELOW_DAYS)+"|"+STR(BELOW_QTY)+"|"+STR(Q)+"|"+STR(QUANTITY_MULTIPLIER); MX=FN%_LOG_MESSAGE("RONM",RON_OUT$) ! SSP218987, if you un-remark this line, it will help in troubleshooting problems with RONs, it writes a message to the EC log file.
4499 RETURN 
4500 REM " Companion Products SSP # 158464
4501 EDV_PRICE=0,EDV_COST=0,QUANTITY_MULTIPLIER=0,QTY_MULTIPLIER_OVERRIDE$="",USING_EDV$="N",PRINT_LINE$="",PRINT_FLAG_OVERRIDE$="",EDV_MESSAGE$="",EDV_SELL_PRICE=0,ECE_IN[2]=0,ECE_IN[3]=0,ECE_SET[2]=0,ECE_SET[3]=0 ! SSP169609, added USING_EDV$ flag, SSP171777/172173, added clearing of PRINT_LINE$ and PRINT_FLAG_OVERRIDE$ and EDV_MESSAGE$. SSP237308. SSP275350, clear unit price and cost from master
4502 IF LOOPING$="YES" THEN ECE_READ$=HOLD_KEY$; GOTO 4510
4503 IF ECE_IN[0]=0 OR EDSACTION$="D" THEN GOTO 4599 ! SSP172263, added check for EDSACTION$="D" which means the master line was deleted so don't add any companion items.
4504 IF ECE$(11,2)="01" OR ECE$(11,2)="21" THEN GOTO 4599 ! SSP173081, don't add comp lines if invalid item code, WO215368, or if budget audited and exeeds budget
4505 IF ECE$(28,1)="C" THEN ECE_READ$=ECE$(29,10)+ECE$(39,10) ELSE IF ECE$(28,1)="I" THEN ECE_READ$=DIM(10)+ECE$(39,10); ELSE GOTO 4599 ! SSP182239, for C types it was using ECD$(26,10) for the cust part, changed to ECE$(29,10)
4506 MASTER_ITEM$=ECE$(25,3),MASTER_PO_CODE$=ECE$(129,1),MASTER_VEND$=ECE$(115,14)
4510 GOSUB SET_READONLY; DIM EDV(7); READ (Z[37],KEY=ECE_READ$,DOM=*NEXT) ! SSP254967
4511 GOSUB CLEAR_READONLY ! SSP254967
4515 EDV_KEY$=KEY(Z[37],END=4516); GOTO 4521 ! SSP188727
4516 LOOPING$="",HOLD_KEY$=""; GOTO 4599 ! SSP188727
4521 IF EDV_KEY$(1,20)<>ECE_READ$(1,20) THEN LOOPING$="",HOLD_KEY$=""; GOTO 4599
4522 EXTRACT (Z[3],KEY=ECD$(1,10)+MASTER_ITEM$,DOM=*NEXT)IOL=0330; ECE$(297,1)="Y"; WRITE (Z[3],KEY=ECD$(1,10)+MASTER_ITEM$)IOL=0330 ! SSP192375, set flag in master item worksheet line, has companion items.
4525 GOSUB SET_READONLY; DIM EDV[7]; READ (Z[37],KEY=EDV_KEY$)IOL=0493; GOSUB CLEAR_READONLY ! SSP254967
4526 LOOPING$="YES"; HOLD_KEY$=EDV$(1,23); USING_EDV$="Y" ! SSP169609, added USING_EDV$ flag
4527 DIM ECE_IN$(499)
4528 ECE_IN$(25,3)=DIM(3),READ_ITEM_KEY$=EDV$(38,20),ECE_IN$(28,1)=EDV$(35,1)
4529 ECE_IN$(39,10)=EDV$(48,10),REAL_ITEM_KEY$=EDV$(38,20),ECE_IN$(29,10)=EDV$(38,10) ! SSP170371, added setting for customer code of cust specific item
4530 MAKE_LINE$="Y"
4531 LEFT_OVER=0
4532 GOSUB SET_READONLY; DIM FM1_COMP$(449),FM1_COMP[31]; FIND (Z[7],KEY=ECE$(29,20),DOM=4534)IOL=0371 ! SSP250080, add READONLY
4533 IF STP(FM1_COMP$(185,10),3," ")="" THEN GOTO 4534 ELSE ECE$(29,10)=FM1_COMP$(185,10); REM "ssp110406
4534 GOSUB CLEAR_READONLY; QUANTITY_MULTIPLIER=EDV[5],QTY_MULTIPLIER_OVERRIDE$=EDV$(65,1) ! SSP 201270. SSP237308. SSP250080, clear READONLY.
4535 IF QUANTITY_MULTIPLIER<>0 THEN QUANTITY_MULTIPLIER=INT(QUANTITY_MULTIPLIER+.9999)
4537 IF ECE_IN$(28,1)="M" THEN QUANTITY_MULTIPLIER=0
4538 EDV_PRICE=EDV[1],EDV_COST=EDV[2]
4540 IF ECE_IN$(28,1)="M" THEN EDV_MESSAGE$=EDV$(169,40); GOSUB 4850; IF DONT_WRITE_COMP THEN EDV_PRICE=0,EDV_COST=0,QUANTITY_MULTIPLIER=0,QTY_MULTIPLIER_OVERRIDE$="",USING_EDV$="N",PRINT_LINE$="",PRINT_FLAG_OVERRIDE$="",EDV_MESSAGE$="",EDV_SELL_PRICE=0,MAKE_LINE$=""; DIM ECE_IN$(499); GOTO 4515 ! SSP171777/172173, changed from MESSAGE$ to EDV_MESSAGE$. WO175907, see if token needs to be replaced. SSP186118, if we have token but no data, don't write companion line. SSP237308
4541 ECE$(258,1)="Y"
4545 IF EDV$(168,1)<>DIM(1) THEN PRINT_LINE$=EDV$(168,1) ELSE PRINT_LINE$="N" ! #215221
4546 LINE_UNIT_COST=EDV[3]
4548 PRINT_FLAG_OVERRIDE$=EDV$(58,5) ! SSP171777. SSP188118, changed variable name from PRINT_FLAGS$ to PRINT_FLAG_OVERRIDE$, conflict with data dict for EDV
4549 IF MASTER_PO_CODE$(1,1)<>DIM(1) AND POS(ECE_IN$(28,1)="MS")>0 AND EDV$(63,1)="Y" THEN ECE_IN$(129,1)=MASTER_PO_CODE$(1,1),ECE_IN$(115,14)=MASTER_VEND$; IF NOT(NUL(EDV$(66,14))) THEN ECE_IN$(129,1)="",ECE_IN$(298,1)="Y",ECE_IN$(115,14)=EDV$(66,14) ! SSP176348, if master line has a po code and this is a message or special line and the comp prod setup says so, then set the po code to the same one as is on the master line; DBD-288: Multi-vendor feature, assign specific vendor/plant and new PO code instead
4555 IF EDV$(64,1)="Y" THEN EDV_SELL_PRICE=-999999999 ! WO177695, set sell price to zero.  Use special logic developed for 288
4599 RETURN 
4600 ! Alternate email confirmation template, WO166006
4610 EACTION$="O",ETEMPLATE$=STP(ALT_ETEMPLATE$,3) ! SSP219608
4615 BASIC_PGN$="EC3WS1",SERVERID$=EC$[14](1,15)
4620 IF EC_PARM$(1177,1)="Y" THEN SESSION$=EC$[1](1,7) ELSE SESSION$=EC$[1](1213,64) END_IF ; RETURN_CODE=0 ! ssp 201193 SSP307267-DBSPT-83252
4625 OTHER$="worksheet="+ECD$(1,10)+"|email_results=Y|order_comment="+ORDER_COMMENT$+"|" ! SSP222527, add passing of order_comment
4630 CALL "EC3EMB",X3$,X4$,EACTION$,ETEMPLATE$,BASIC_PGN$,SERVERID$,SESSION$,OTHER$,RETURN_CODE
4640 RETURN 
4645 ! 
4650 ! Get buyer record for buyer on worksheet, SSP172214
4660 DIM ECA$(1540); ECAFSLOT=FN%FFN("ECA"+X3$(9,3)); IF ECAFSLOT<0 THEN GOTO 4690
4665 GOSUB SET_READONLY; READ (ECAFSLOT,KEY=ECD$(11,15),DOM=*NEXT)ECA$
4666 GOSUB CLEAR_READONLY
4690 RETURN 
4695 ! 
4700 REM 'check dupl order , SSP171185
4701 REM 'and not current line
4702 EDSACTION$="A"
4710 IF EC$[7](588,1)="Y" THEN IF ECR$(528,1)<>"Y" THEN DIM EDS1$(1910),EDS2$(95); FIND (Z(35),KEY=ECE$(1,10),DOM=*NEXT)IOL=0491; EDSCK=POS(ECE$(29,20)=EDS1$(11,1900),20),PL=(NUM(ECE$(25,3))-1)*20+1; IF EDSCK<>0 AND EDSCK<>PL THEN EDSACTION$="D"
4715 IF EDSACTION$="D" THEN REMOVE (Z[3],KEY=ECE$(1,10)+ECE$(25,3),DOM=*NEXT)
4717 PROCESSLINE$=ECE$(25,3)
4720 GOSUB 6850
4745 RETURN 
4750 REM "ck item secure codes against buyer record.  Brought code in from EC3PC0, 8000's, SSP173081.  Quick products entry, if buyer enters item they do not have access to, ITEM_OK$="N", then set message 01, invalid item.
4752 IF EC$[2](86,1)="Y" THEN GOTO 4784; REM "bypass if secure code super user
4754 ITEM_OK$="Y"
4756 IF ECR$(233,10)=DIM(10) THEN GOTO 4768
4758 ITEM_OK$="N"
4760 FOR ITEM_OK=0 TO 4
4762 TEMP$=ECR$(ITEM_OK*2+233,2); IF TEMP$=DIM(2) THEN GOTO 4766
4764 IF POS(TEMP$=EC$[2](233,20)+EC$[2](898,40),2)<>0 THEN EXITTO 4784
4766 NEXT ITEM_OK
4768 IF EC_PARM$(554,1)<>"Y" THEN GOTO 4786
4770 REM "ck for unlimited secure codes 153058
4772 DIM EDQ$(1000); EDQ$(1,20)=ECR$(1,20),EDQ$(21,2)="01"; READ (Z[41],KEY=EDQ$(1,22),DOM=4786)EDQ$
4774 CODES$=STP(EDQ$(23,978),3," "); IF CODES$="" THEN GOTO 4786
4775 ITEM_OK$="N"
4776 FOR ITEM_OK=0 TO LEN(CODES$)/2-1; CURRCODE$=CODES$(ITEM_OK*2+1,2)
4778 IF POS(CURRCODE$=EC$[2](233,20)+EC$[2](898,40),2)<>0 THEN EXITTO 4784
4780 NEXT ITEM_OK
4782 GOTO 4786
4784 ITEM_OK$="Y"
4786 RETURN 
4790 ! 
4800 ! Find worksheet line for this invoice line and get data needed for 3pinfo and other stuff
4805 DIM INV_ECE$(499),INV_ECE[8]; READ (Z[3],KEY=WORKSHEET$,DOM=*NEXT)
4810 READ (Z[3],END=*RETURN)IOL=0495
4815 IF INV_ECE$(1,10)<>WORKSHEET$ THEN GOTO *RETURN
4820 IF INV_ECE$(282,3)<>GRT$(47,3) THEN GOTO 4810
4825 DIM EC7$(200),EC7[1]; EC7$(1,13)=INV_ECE$(1,10)+INV_ECE$(25,3)
4830 FIND (Z[22],KEY=EC7$(1,13),DOM=*NEXT)IOL=0420
4835 GOSUB SET_READONLY; DIM FM1$(449),FM1[31]; FM1$(1,20)=INV_ECE$(29,20); FIND (Z[7],KEY=INV_ECE$(29,20),DOM=*NEXT)IOL=0370
4840 DIM ECR$(1000); FIND (Z[25],KEY=INV_ECE$(29,20),DOM=*NEXT)IOL=0450
4845 GOSUB CLEAR_READONLY
4848 RETURN 
4849 ! 
4850 ! Insert data into messge text if token is present, first use of token for data from alternate_item_code, WO175907
4855 DONT_WRITE_COMP=0 ! SSP277725/277828
4860 P=POS("&001"=EDV_MESSAGE$); IF P=0 THEN GOTO *RETURN
4865 IF STP(ALT_IN$,2)="" THEN DONT_WRITE_COMP=1; GOTO *RETURN
4870 IF P=1 THEN EDV_MESSAGE$=ALT_IN$+EDV_MESSAGE$(5); EDV_MESSAGE$=PAD(EDV_MESSAGE$,40); GOTO *RETURN
4875 IF P>1 THEN EDV_MESSAGE$=EDV_MESSAGE$(1,P-1)+ALT_IN$+EDV_MESSAGE$(P+4); EDV_MESSAGE$=PAD(EDV_MESSAGE$,40); GOTO *RETURN
4890 RETURN 
4895 ! 
4900 ! WO177343, calc_item_price, get sell price by checking for quantity breaks and pricing tables, similar to OF2UAA logic, load pricing array (7600), then pick a price (8000)
4905 GOSUB SET_READONLY; DIM AR1$(599),FMPD$(243); READ (33007,KEY=EC$[2](51,10),DOM=*NEXT)AR1$; FIND (Z[9],KEY="D"+EC$[2](51,10),DOM=*NEXT)FMPD$ ! WO226583, need customer default parms
4910 DIM IC0$(187),IC0[40]; FIND (Z[6],KEY=ECE$(29,20),DOM=*NEXT)IOL=0360; GOSUB CLEAR_READONLY; GOTO 4915
4911 GOSUB CLEAR_READONLY; GOTO *RETURN ! No IC0 record for this item
4915 PRECISION M6[1]
4920 DIM P[12,1]; P[0,1]=IC0[0]
4925 FOR I=1 TO 6; P[I,0]=IC0[1+(I-1)*2],P[I,1]=IC0[2+(I-1)*2],P[I+6,0]=IC0[21+(I-1)*2],P[I+6,1]=IC0[22+(I-1)*2]; NEXT I
4930 IF POS(" "<>IC0$(109,3)+AR1$(398,3))>0 THEN X$=$7E$+IC0$(109,3)+AR1$(398,3)+IC0$(1,20); DIM Q[35]; CALL "IC2ICF",X3$,Z[9],X$,ECE[1],IC0[15],IC0[14],IC0[0],IC0[18],IC0[17],IC0[20],Q{ALL} ! Pricing table calculation
4935 PRECISION 2
4940 IF X$="" THEN GOTO 4950
4942 DIM P[12,1]; P[0,1]=Q[0]
4945 FOR I=0 TO 11; P[I+1,0]=Q[I*2+1],P[I+1,1]=Q[I*2+2]; NEXT I
4950 ! Calculate price
4952 LOWEST_QBG=0; IF MID(FMPD$,107,1)="Y" AND MID(IC0$,113,3)<>DIM(3) THEN LOWEST_QBG=1 ! WO226583, if parm Customer always gets lowest QBG price? set to Y and item has QBG set then see line 4970 for logic to always use lowest non-zero break
4955 PRECISION M6[1]
4960 CALC_ITEM_PRICE=P[0,1]*ECE[1]/IC0[14]; IF P[1,0]=0 THEN GOTO 4985
4963 GOSUB 7300 ! Calculate QTY_IN_EACHES
4965 FOR I=1 TO 12
4970 IF ABS(QTY_IN_EACHES)<P[I,0] AND LOWEST_QBG=0 THEN I=99; GOTO 4980 ! WO226583, if always give lowest then don't exit if qty is lower than break
4975 IF P[I,0]<>0 THEN CALC_ITEM_PRICE=P[I,1]*ECE[1]/IC0[14]
4980 NEXT I
4985 PRECISION 2
4988 IF ECE[2]=-999999999 THEN RETURNED_PRICE$=STR(0:X3$(69,1)+"###,###.00"),ITEM_PRICE=0; GOTO 4990 ! SSP 232412
4989 RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
4990 RETURN 
4995 ! 
5000 GET_LOC_FROM_RECV_DEPT:! Given receiving dept in 479,20 set 36,4 to matching shipto code if found / 166336
5005 FTD_PREFIX$="C"+EC$[2](51,10)+ECD_IN$(479,20)
5010 READ (Z[38],KEY=FTD_PREFIX$,DOM=*NEXT)
5015 FTD$=KEY(Z[38],END=*RETURN); IF MID(FTD$,1,LEN(FTD_PREFIX$))<>FTD_PREFIX$ THEN RETURN 
5020 IF NOT(NUL(MID(FTD$,32,4))) THEN ECD_IN$(36,4)=MID(FTD$,32,4)
5045 RETURN 
5049 ! 
5050 ! Get unit of measure description, um_desc, WO174426
5055 UNIT_DESC$=""
5060 DIM UM$(22),UM[5]; FIND (Z[13],KEY="U/M"+UNIT$,DOM=*RETURN)IOL=0430
5065 UNIT_DESC$=STP(UM$(8,12),1)
5090 RETURN 
5095 ! 
5100 ADD_MSG_TO_LOG:! Add message to log file
5110 MOUT$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+ECD$(1,10)+"|LINE|"+ECE$(25,3)+"|MESSAGE NO|"+STR(MESSAGE_NO:"00000")+"|MESSAGE|"+MESSAGE$+"|"
5135 MX=FN%_LOG_MESSAGE("MESG",MOUT$)
5145 RETURN 
5149 ! 
5150 PROCESS_OLD_SESSION:
5152 IF LEN(OLD_SESSION_ID$)=64 THEN SESS_KNO=1 ELSE GOTO *RETURN
5155 READ (33005,KEY=OLD_SESSION_ID$,KNO=SESS_KNO,DOM=*NEXT) ! Seek the right ECB record
5157 OLDEDBKEY$=KEY(33005,KNO=SESS_KNO,END=5190); READ (33005,KEY=OLDEDBKEY$,KNO=SESS_KNO,DOM=5190,ERR=5190)OLDECBREC$
5160 IF (SESS_KNO=1 AND OLD_SESSION_ID$=OLDECBREC$(1213,64)) THEN GOTO *NEXT ELSE GOTO 5190 ! If no matching record, then abort
5165 EXTRACT RECORD (Z[2],KEY=OLDECBREC$(97,10),DOM=5190)OLDECDREC$
5170 OLDECDREC$(11,15)=EC$[2](1,15) ! Buyer id
5171 OLDECDREC$(26,10)=EC$[2](51,10) ! customer id
5175 SAVE_WK_ACTION$="R",RETRIEVE_WORKSHEET$=OLDECDREC$(1,10),SAVE_WK_OPTIONS$="A" ! 229235 - Option "A" - Means do not clobber current ECD rec, only process ECE lines
5180 WRITE RECORD (Z[2],KEY=OLDECDREC$(1,10),ERR=*NEXT)OLDECDREC$
5190 READ (33005,KEY="",KNO=0,DOM=*NEXT) ! Reset kno to 0 on ECB channel
5195 RETURN 
5199 ! 
5200 PROCESS_VENDOR_EMAILS:! 174532 - if Variable Print proofs, then send vendor emails if needed
5205 VP_EMAIL_REQ$=""
5210 READ (Z[42],KEY=ECD$(235,8),DOM=*NEXT)
5215 NEXT_EC8: EC8$=PAD(KEY(Z[42],END=DONE_WITH_EC8),11); READ (Z[42])EC8_REC$
5220 IF EC8$(1,8)<>ECD$(235,8) THEN GOTO DONE_WITH_EC8
5225 DIM EC6_REC$(900); FIND (Z[27],KEY=EC8_REC$(12,10),DOM=NEXT_EC8)EC6_REC$(1); IF EC6_REC$(283,1)="Y" THEN GOTO NEXT_EC8 ! SSP177561, only add to list if valid 3rd party ID. SSP244590, Suppress vendor email notifications.
5230 VP_EMAIL_REQ$+=EC8$(1,11)
5240 GOTO NEXT_EC8
5260 DONE_WITH_EC8:
5280 IF NOT(NUL(VP_EMAIL_REQ$)) THEN CALL "EC3VP0",ERR=*PROCEED,X3$,X4$,EC_PARM$,EC${ALL},VP_EMAIL_REQ$,""; VP_EMAIL_REQ$=""
5295 RETURN 
5299 ! ************************************************************
5300 ! Have 3p info, put into array, WO178946
5310 IF LINE_NUMBERS$="" OR P_INFO_3S$="" THEN GOTO *RETURN
5315 P=POS(", "=LINE_NUMBERS$); IF P=0 THEN I=NUM(LINE_NUMBERS$,ERR=*RETURN) ELSE I=NUM(LINE_NUMBERS$(1,P-1),ERR=*RETURN),LINE_NUMBERS$=LINE_NUMBERS$(P+2)
5320 IF P=0 THEN P_INFO$[I]=STP(P_IDS$,1)+"|"+STP(P_INFO_3S$,1); GOTO *RETURN
5325 P1=POS(", "=P_IDS$),P2=POS(", "=P_INFO_3S$),P_INFO$[I]=STP(P_IDS$(1,P1-1),1)+"|"+STP(P_INFO_3S$(1,P2-1),1)
5330 P_IDS$=P_IDS$(P1+2),P_INFO_3S$=P_INFO_3S$(P2+2)
5335 GOTO 5310
5345 RETURN 
5349 ! 
5350 GET_INVOICE_NUM:! Get real invoice number for live credit card order - 210454
5355 OPEN (HFN,ERR=*RETURN)"FS1"+%C$; FS1CHAN=LFO
5360 INVOICE_HDR_KEY$=""; FIND (FS1CHAN,KEY=ECD$(235,8),ERR=*NEXT,DOM=*NEXT)INVFS1$; INVOICE_HDR_KEY$=MID(INVFS1$,299,14)
5370 CLOSE (FS1CHAN)
5395 RETURN 
5400 PROCESS_COUPON:! 177733 check to see if processing coupons and need to for this customer.
5405 IF NUL(MID(EC_PARM$,1138,10)) THEN GOTO PC_DONE ! if next coupon not set then don't process coupons
5440 CALL "EC3CPN;ADD_TO_BALANCE",ERR=*NEXT,X3$,X4$,EC${ALL},ECD$
5445 CALL "EC3CPN;UPDATE_COUPONS",ERR=*NEXT,X3$,X4$,EC${ALL},ECD$
5485 PC_DONE:
5495 RETURN 
5499 ! ************************************
5500 ! Save current worksheet number in buyer record, WO181395
5510 ECAFSLOT=FN%FFN("ECA"+X3$(9,3)); IF ECAFSLOT<0 THEN GOTO *RETURN
5515 EXTRACT (ECAFSLOT,KEY=EC$[2](1,15),DOM=*RETURN)ECA$,ECA2$
5520 ECA$(998,10)=ECD$(1,10); EC$[2](998,10)=ECD$(1,10)
5525 WRITE (ECAFSLOT,KEY=EC$[2](1,15))ECA$,ECA2$
5530 IF STP(SAVE_WK_TEMPLATE$,3)>"" THEN TEMPLATE$=SAVE_WK_TEMPLATE$; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},TEMPLATE$
5540 RETURN 
5545 ! 
5550 ! Retrieve a saved worksheet header, then clear number from buyer record, WO181395
5555 IF STP(RETRIEVE_WORKSHEET$,3)>"" THEN KEY_WK$=RETRIEVE_WORKSHEET$ ELSE IF EC$[2](998,10)<>DIM(10) THEN KEY_WK$=EC$[2](998,10) ELSE GOTO *RETURN
5560 READ (Z[2],KEY=KEY_WK$,DOM=*RETURN)SAVED_WK$,SAVED_WK2$
5565 IF WORKSHEET$=SAVED_WK$(1,10) OR SAVED_WK$(11,15)<>EC$[1](8,15) THEN GOTO *RETURN
5569 IF POS("A"=SAVE_WK_OPTIONS$)<>0 THEN GOTO *RETURN ! 229235 - Allow for new option to Retrieve mode that leaves current ECD record alone and processes ECE lines only.
5570 EXTRACT (Z[2],KEY=WORKSHEET$,DOM=*NEXT)WK$,WK2$
5575 WK$=SAVED_WK$,WK2$=SAVED_WK2$,WK$(1,10)=WORKSHEET$
5580 WK$(51,1)=DIM(1),WK$(55,1)=DIM(1),WK$(126,8)=DAY,WK$(134,5)=STR(TIM:"00.00"),WK$(235,8)=DIM(8),WK$(508,1)=DIM(1),WK$(509,14)=DIM(14),WK$(645,1)=DIM(1),WK$(646,30)=DIM(30),WK$(676,1)=DIM(1),WK2$="",WK$(1185,396)=DIM(396) ! SSP215879, need to clear the 2nd po code range info
5582 GOSUB SYSTEM_DATE; WK$(58,6)=SYSTEM_DATE$ ! SSP307314-DBD-135-DBSPT-100495 Set requisition date to current system date
5585 WRITE (Z[2],KEY=WK$(1,10))WK$,WK2$
5586 FIND (Z[52],KEY=KEY_WK$,DOM=*NEXT)SAVED_EEJ$; NEW_EEJ$=SAVED_EEJ$,NEW_EEJ$(1,10)=WORKSHEET$; WRITE (Z[52],KEY=NEW_EEJ$(1,10))NEW_EEJ$ ! WO247495
5590 ECAFSLOT=FN%FFN("ECA"+X3$(9,3)); IF ECAFSLOT<0 THEN GOTO *RETURN ELSE EXTRACT (ECAFSLOT,KEY=EC$[2](1,15),DOM=*RETURN)ECA$,ECA2$
5591 ECA$(998,10)=DIM(10); IF EC_PARM$(1150,1)="Y" THEN ECA$(998,10)=WORKSHEET$ END_IF ; WRITE (ECAFSLOT,KEY=EC$[2](1,15))ECA$,ECA2$; EC$[2](998,10)=ECA$(998,10) ! WO186837, if auto save current worksheet when saved worksheet retrieved set to Y, then set saved wk to current wk
5592 IF STP(SAVE_WK_TEMPLATE$,3)>"" THEN TEMPLATE$=SAVE_WK_TEMPLATE$; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},TEMPLATE$
5595 RETURN 
5599 ! 
5600 ! Retrieve saved worksheet lines, WO181395
5610 IF STP(SAVED_WK$,3)="" OR SAVED_WK$(1,10)=WORKSHEET$ THEN MAKE_RLINE$=""; GOSUB 5592; GOTO *RETURN
5615 IF LOOPING_RLINE$="Y" THEN GOTO *NEXT ELSE READ (Z[43],KEY=SAVED_WK$(1,10),DOM=*NEXT)
5620 MAKE_RLINE$="",LOOPING_RLINE$=""; ECER_KEY$=KEY(Z[43],END=*RETURN)
5625 DIM ECER$(499),ECER[8],ECE_IN$(499),ECE_IN[8]; READ (Z[43],KEY=ECER_KEY$)IOL=0497
5626 IF ECER_KEY$(1,10)<>SAVED_WK$(1,10) THEN GOTO *RETURN
5630 IF ECER$(259,3)<>DIM(3) THEN GOTO 5620 ! companion line
5635 ECE_IN$(28,1)=ECER$(28,1),ECE_IN$(29,20)=ECER$(29,20),ECE_IN$(67,40)=ECER$(67,40),ECE_IN[0]=ECER[0],REAL_ITEM_KEY$=ECE_IN$(29,20),ECE_IN$(262,20)=ECER$(262,20),ECE_SET[0]=1
5636 ECE_IN$(13,5)=ECER$(13,5),ECE_IN$(18,1)=ECER$(18,1),ECE_IN$(228,20)=ECER$(228,20) ! SSP186397, need for TOPS items
5637 IF ECE_IN$(18,1)="O" THEN ECE_IN$(29,20)=ECER$(39,10) ! SSP186397, to help with line 8852 later
5638 ECE_IN$(130,35)=ECER$(130,35),ECE_IN$(285,10)=ECER$(285,10); IF NOT(NUL(ECER$(130,35))) THEN ALT_IN$=STP(ECER$(130,35),1) ELSE IF NOT(NUL(ECER$(285,10))) THEN ALT_IN$=STP(ECER$(285,10),1) ! SSP 229472 - Set message token string for replacement, see 4850-4895
5640 LOOPING_RLINE$="Y",MAKE_RLINE$="Y"
5645 RETURN 
5649 ! 
5650 ! Retrieving saved worksheet lines, write EC7 rec if applicable, WO181395
5660 READ RECORD (Z[22],KEY=ECER$(1,10)+ECER$(25,3),DOM=*RETURN)SAVED_EC7$
5665 SAVED_EC7$(1,13)=ECE$(1,10)+ECE$(25,3)
5670 WRITE RECORD (Z[22],KEY=SAVED_EC7$(1,13))SAVED_EC7$
5695 RETURN 
5699 ! 
5700 ! Get inventory figures, don't need usage, copied from EC3AP1, WO184982
5710 DIM CHANNELS[4]; CHANNELS[1]=Z[19],CHANNELS[4]=Z[25] ! IC1/ECR channels
5715 DIM OPTIONS$(20); OPTIONS$(1,2)="RI"; REM "R-reported warehouses I-inventory figures only
5720 OPTIONS$(3,1)=NO_INVUSAGE$; REM "controls wether inventory /usage figures are needed - if not Y will return dimensioned variables only
5725 OPTIONS$(6,10)=FM1$(185,10) ! from customer
5730 FINDITEMKEY$=ECE$(29,20); CALL "EC3IC0",X3$,X4$,EC_PARM$,EC${ALL},FINDITEMKEY$,USAGE_KEYS$,CHANNELS{ALL},IC1INFO{ALL},FM3{ALL},FM3ALL{ALL},FM4$,FM4{ALL},FM4ALL{ALL},FORM_OTHER{ALL},FORM_OTHERALL{ALL},OPTIONS$
5745 RETURN 
5749 ! 
5750 REM "get active uom.  Copied from EC3AP1, WO184982
5760 ON POS(ECE$(28,1)="CI")-1 GOTO 5765,5775
5765 REM "not stock sot it's custom - items FM1
5770 IF STP(FM1$(238,4),3," ")="" OR FM1[25]=0 THEN UM$=STP(FM1$(100,4),1),PACK=FM1[4]; GOTO 5785 ELSE UM$=STP(FM1$(238,4),1),PACK=FM1[25]; GOTO 5785
5775 REM "stock item - items IC0
5780 UM$=IC0$(120,4),PACK=IC0[14]
5785 UM$=STP(UM$,1),EXT_UM$=STP(UM$,1)+"/"+STR(PACK:"##,##0")
5790 IF PACK=0 THEN PACKDIV=1 ELSE PACKDIV=PACK
5795 RETURN 
5799 ! 
5800 ! Worksheet delete, remove saved worksheet number from buyer record, SSP185932
5810 ECAFSLOT=FN%FFN("ECA"+X3$(9,3)); IF ECAFSLOT<0 THEN GOTO *RETURN
5815 EXTRACT (ECAFSLOT,KEY=EC$[2](1,15),DOM=*RETURN)ECA$,ECA2$
5820 ECA$(998,10)=DIM(10); EC$[2](998,10)=DIM(10)
5825 WRITE (ECAFSLOT,KEY=EC$[2](1,15))ECA$,ECA2$
5845 RETURN 
5849 ! 
5850 REM "Netscape and other may require URL encoded item code to hide spaces, slashes, etc. we will encode the whole string rather than just the special chars, because its easier.  Copied from EC3PC0, 7700's, SSP186532
5855 ITEM_KEY_UE$=""
5860 ITEMKEY$=ECE$(29,20)
5870 FOR JJ=1 TO 20; ITEM_KEY_UE$=ITEM_KEY_UE$+"%"+HTA(ITEMKEY$(JJ,1)); NEXT JJ
5890 RETURN 
5895 ! 
5900 ! Change quantity on existing worksheet line, WO189428
5910 IF ORIG_ORDER_QUANTITY=0 OR ORIG_ORDER_QUANTITY=NEW_ORDER_QUANTITY OR NEW_ORDER_QUANTITY<0 THEN GOTO *RETURN ! Don't allow qty change if original quantity is zero, or the new qty is same as original qty or new qty is invalid (negative)
5915 IF WORKSHEET$="" OR WORKSHEET_LINE$="" THEN GOTO *RETURN
5920 DIM ECD$(1580),ECD[1],ECE$(499),ECE[8]; READ (Z[2],KEY=WORKSHEET$,DOM=*RETURN)IOL=0310
5925 ECE$(1,10)=WORKSHEET$,ECE$(25,3)=WORKSHEET_LINE$; READ (Z[3],KEY=ECE$(1,10)+ECE$(25,3),DOM=*RETURN)IOL=0330
5930 IF POS(ECE$(28,1)="MS")>0 OR ECE$(259,3)<>DIM(3) THEN GOTO *RETURN ! If message line or companion item to another line, no change allowed. SSP224598, added check for special charge line.
5935 ECE_IN$(1,10)=ECE$(1,10),ECE_IN$(25,3)=ECE$(25,3),ECE_SET[0]=1,ECE_IN[0]=NEW_ORDER_QUANTITY
5940 GOSUB 4050 ! Remove existing message lines
5945 CHNG_QTY_MODE=1; GOSUB 1204
5950 ! Check for any worksheet lines that are companion items to this line, may need to change those qtys as well
5955 READ (Z[3],KEY=WORKSHEET$,DOM=*NEXT)
5960 ECE_KEY$=KEY(Z[3],END=*RETURN); IF ECE_KEY$(1,10)<>WORKSHEET$ THEN GOTO *RETURN ELSE DIM ECE$(499),ECE[8]; READ (Z[3],KEY=ECE_KEY$)IOL=0330
5965 IF ECE$(259,3)=DIM(3) OR ECE$(259,3)<>WORKSHEET_LINE$ THEN GOTO 5960
5970 IF POS(ECE$(28,1)="M")>0 THEN GOTO 5960 ! SSP224259, was ignoring S types but may need to change those 
5971 IF ECE[0]=1 AND ORIG_ORDER_QUANTITY<>1 THEN GOTO 5960 ! SSP224259, if original companion qty is 1 but original master qty is not 1, this is force to 1, don't change
5972 DIM ECE_IN$(499),ECE_IN[8],ECE_SET[8] ! SSP224259
5974 IF NEW_ORDER_QUANTITY=0 THEN ECE_IN$(1,10)=ECE$(1,10),ECE_IN$(25,3)=ECE$(25,3),ECE_SET[0]=1,ECE_IN[0]=0; GOTO 5980 ! SSP224259, if new qty is 0 then set companions to 0
5975 ECE_IN$(1,10)=ECE$(1,10),ECE_IN$(25,3)=ECE$(25,3),ECE_SET[0]=1,ECE_IN[0]=(ECE[0]/ORIG_ORDER_QUANTITY)*NEW_ORDER_QUANTITY
5980 GOSUB 4050; CHNG_QTY_MODE=1; GOSUB 1204; GOTO 5960
5990 RETURN 
5995 ! 
6000 ! Start coming here for tags, ran out of room in 1000's
6010 IF EC$[1](1166,1)="Y" THEN IF STP(VALUE$,3)="" THEN CC0TEMPLATE$=TEMPLATE$; GOTO 1090 ELSE CC0TEMPLATE$=VALUE$; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},CC0TEMPLATE$; GOTO 1090 ELSE GOTO 1090 ! Set template to use if we have a credit card purchase but later find out the invoice total is zero. If nothing is passed in to use then use the cctemplate from line 1074. WO165819
6011 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](285,10)=UCS(VAL$[VAL_INDEX]),ECE_IN_DATA$[VAL_INDEX](130,35)=VAL$[VAL_INDEX],ALT_IN_DATA$[VAL_INDEX]=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090 ! alternate_item_code, WO167983/WO167984. WO175907, keep data for possible use with a companion product message line, SSP 229472
6012 ECD_IN$(646,30)=VALUE$,CC_APRVL_REF$=VALUE$; GOTO 1090 ! SSP166601, cc_aprvl_ref
6013 ORDER_COMMENT$=VALUE$; GOTO 1090 ! WO169824, order_comment, display only
6014 TESTING_TEMPLATE$=VALUE$; GOTO 1090 ! SSP173332, testing_template
6015 IF STP(P_INFO_3S$,1)="" THEN P_INFO_3S$=VALUE$ END_IF ; P_INFO_3$=VALUE$; GOTO 1090 ! WO178946, 3p_info_3
6016 ECD_IN$(677,40)=STP(VALUE$,1); GOTO 1090 ! WO179708, order_email_addr
6017 SAVE_WK_ACTION$=UCS(PAD(VALUE$,1)); IF POS(SAVE_WK_ACTION$="SR")=0 THEN SAVE_WK_ACTION$="" END_IF ; GOTO 1090 ! WO181395, save_wk_action
6018 SAVE_WK_TEMPLATE$=VALUE$; GOTO 1090 ! WO181395, save_wk_template
6019 ECD_IN$(499,8)=STP(VALUE$,2); GOTO 1090 ! SSP185087, req_tf_order_no
6020 ECD_IN$(737,15)=VALUE$; GOTO 1090 ! SSP191554, inside_delivery
6021 ECD_IN$(752,15)=VALUE$; GOTO 1090 ! SSP191554, acct_number
6022 WORKSHEET_LINE_ACTION$=UCS(VALUE$); GOTO 1090 ! WO189428, worksheet_line_action
6023 WORKSHEET_LINE$=VALUE$; GOTO 1090 ! WO189428, worksheet_line
6024 ORIG_ORDER_QUANTITY=NUM(VALUE$,ERR=1090); GOTO 1090 ! WO189428, orig_order_quantity
6025 NEW_ORDER_QUANTITY=NUM(VALUE$,ERR=1090); GOTO 1090 ! WO189428, new_order_quantity
6026 ECD_IN$(767,1)=VALUE$; GOTO 1090 ! WO190633, bill_m
6027 ECD_IN$(768,20)=VALUE$; GOTO 1090 ! WO190633, shipper_id
6028 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](298,1)=UCS(VAL$[VAL_INDEX]); NEXT VAL_INDEX END_IF ; GOTO 1090 ! WO191991, create_po
6029 RETRIEVE_WORKSHEET$=VALUE$; GOTO 1090 ! SSP193883, retrieve_worksheet
6030 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](299,1)=UCS(VAL$[VAL_INDEX]); NEXT VAL_INDEX END_IF ; GOTO 1090 ! WO193685, m1000_extend
6031 FMN1$=STP(VALUE$,1); IF FMN1$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something
6032 FMN2$=STP(VALUE$,1); IF FMN2$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something
6033 FMN3$=STP(VALUE$,1); IF FMN3$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something
6034 FMN4$=STP(VALUE$,1); IF FMN4$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something 
6035 FMN5$=STP(VALUE$,1); IF FMN5$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something
6036 FMN6$=STP(VALUE$,1); IF FMN6$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something
6037 FMN7$=STP(VALUE$,1); IF FMN7$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something
6038 FMN8$=STP(VALUE$,1); IF FMN8$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something
6039 FMN9$=STP(VALUE$,1); IF FMN9$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something
6040 FMN10$=STP(VALUE$,1); IF FMN10$>"" THEN FMN_NOTE$="Y" END_IF ; GOTO 1090 ! SSP244339, make sure we have something
6041 ECD_IN$(792,12)=STP(VALUE$,2); GOTO 1090 ! "cust_inv_vendor, plant_code(optional)
6042 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](300,10)=UCS(VAL$[VAL_INDEX]); NEXT VAL_INDEX END_IF ; GOTO 1090 ! "warehouse_xref
6043 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](310,1)=UCS(VAL$[VAL_INDEX]); NEXT VAL_INDEX END_IF ; GOTO 1090 ! "po_action - "A" add, "C" - cancel
6044 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](311,10)=UCS(VAL$[VAL_INDEX]); NEXT VAL_INDEX END_IF ; GOTO 1090 ! "line_external_ref1
6045 ECD_IN$(804,35)=STP(VALUE$,2); GOTO 1090 ! WO202501, regional_sls_mngr
6046 ECD_IN$(839,40)=STP(VALUE$,2); GOTO 1090 ! WO202501, regional_sls_mngr_email
6047 ECD_IN$(879,20)=STP(VALUE$,2); GOTO 1090 ! WO202501, dist_acct_billto_num
6048 ECD_IN$(899,35)=STP(VALUE$,2); GOTO 1090 ! WO202501, dist_acct_billto_name
6049 ECD_IN$(934,30)=STP(VALUE$,2); GOTO 1090 ! WO202501, dist_acct_billto_addr
6050 ECD_IN$(964,16)=STP(VALUE$,2); GOTO 1090 ! WO202501,dist_acct_billto_city
6051 ECD_IN$(980,2)=UCS(STP(VALUE$,2)); GOTO 1090 ! WO202501, dist_acct_billto_state
6052 ECD_IN$(982,9)=STP(VALUE$,3,"-"); GOTO 1090 ! WO202501, dist_acct_billto_zip
6053 ECD_IN$(991,6)=STP(VALUE$,2); GOTO 1090 ! WO202501, dist_acct_billto_country
6054 ECD_IN$(790,2)=STP(VALUE$,2); GOTO 1090 ! WO 198994, cust_inv_vendor_div
6055 CC_BILLADDR$(1,30)=STP(VALUE$,2); GOTO 1090 ! cc_bill_addr1 - SSP 211130
6056 CC_BILLADDR$(31,30)=STP(VALUE$,2); GOTO 1090 ! cc_bill_addr2 - SSP 211130
6057 CC_BILLADDR$(61,16)=STP(VALUE$,2); GOTO 1090 ! cc_bill_city - SSP 211130 
6058 CC_BILLADDR$(77,2)=STP(VALUE$,2); GOTO 1090 ! cc_bill_state - SSP 211130 
6059 CC_BILLADDR$(79,9)=STP(VALUE$,2); GOTO 1090 ! cc_bill_zip - SSP 211130 
6060 OLD_SESSION_ID$=VALUE$; GOSUB PROCESS_OLD_SESSION; GOTO 1090 ! old_session_id - SSP 209900
6061 MERCH_ACCT$=VALUE$; GOTO 1090 ! WO215237, merch_acct
6062 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](321,3)=UCS(VAL$[VAL_INDEX]); NEXT VAL_INDEX END_IF ; GOTO 1090 ! SSP221299, ext_line_number
6063 ECD_IN$(1009,30)=STP(VALUE$,2); DIM EEC$(510); CALL "EC3EEC",X3$,X4$,EC_PARM$,EC${ALL},"R",ECD_IN$(1009,30),RETURN_EEC$,EC3EEC_OTHER$; EEC$(1)=RETURN_EEC$; GOTO 1090 ! WO215369/WO224138, primary_function
6064 ECD_IN$(1039,30)=STP(VALUE$,2); GOTO 1090 ! WO215369, primary_function_addtl_1
6065 ECD_IN$(1069,30)=STP(VALUE$,2); GOTO 1090 ! WO215369, primary_function_addtl_2
6066 ORDER_ID_3P$=STP(VALUE$,2); IF STP(ORDER_ID_3P$)>"" THEN EEP_3P$="Y" END_IF ; GOTO 1090 ! WO224137, 3p_order_id WO303296
6067 SENDER_ID_3P$=STP(VALUE$,2); IF STP(SENDER_ID_3P$)>"" THEN EEP_3P$="Y" END_IF ; GOTO 1090 ! WO224137, 3p_sender_id WO303296
6068 ECD_IN$(1099,4)=STP(VALUE$,2); GOTO 1090 ! WO227413, cc_cvv
6069 EEF_FTYPE=0,EEF_OFFSET=11,EEF_FLDLEN=3,EEF_MASK$="000"; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_line_number , WO 224917
6070 SAVE_VALUE$=VALUE$; EEF_FTYPE=0,EEF_OFFSET=14,EEF_FLDLEN=3,EEF_MASK$="000"; PERFORM "EC3EEF;SET_TAG_DATA"; VALUE$=SAVE_VALUE$; EEF_FTYPE=0,EEF_OFFSET=385,EEF_FLDLEN=3,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_seq_number , WO 224917, SSP270946
6071 EEF_FTYPE=0,EEF_OFFSET=17,EEF_FLDLEN=1,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_loc_type , WO 224917
6072 EEF_FTYPE=0,EEF_OFFSET=18,EEF_FLDLEN=4,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_loc_code , WO 224917
6073 EEF_FTYPE=0,EEF_OFFSET=22,EEF_FLDLEN=1,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_perm_ship_addr , WO 224917
6074 EEF_FTYPE=0,EEF_OFFSET=23,EEF_FLDLEN=1,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_perm_ship_attn , WO 224917
6075 EEF_FTYPE=0,EEF_OFFSET=24,EEF_FLDLEN=30,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_attention , WO 224917
6076 EEF_FTYPE=0,EEF_OFFSET=54,EEF_FLDLEN=15,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_ship_via , WO 224917
6077 EEF_FTYPE=0,EEF_OFFSET=69,EEF_FLDLEN=1,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_ship_via_code , WO 224917
6078 EEF_FTYPE=0,EEF_OFFSET=70,EEF_FLDLEN=1,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_how_to_ship_code , WO 224917
6079 EEF_FTYPE=0,EEF_OFFSET=71,EEF_FLDLEN=15,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_how_to_ship_desc , WO 224917
6080 EEF_FTYPE=0,EEF_OFFSET=86,EEF_FLDLEN=30,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_ship_with , WO 224917
6081 EEF_FTYPE=0,EEF_OFFSET=116,EEF_FLDLEN=30,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_man_ship_addr_1 , WO 224917
6082 EEF_FTYPE=0,EEF_OFFSET=146,EEF_FLDLEN=30,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_man_ship_addr_2 , WO 224917
6083 EEF_FTYPE=0,EEF_OFFSET=176,EEF_FLDLEN=16,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_man_ship_city , WO 224917
6084 EEF_FTYPE=0,EEF_OFFSET=192,EEF_FLDLEN=2,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_man_ship_state , WO 224917
6085 EEF_FTYPE=0,EEF_OFFSET=194,EEF_FLDLEN=9,EEF_MASK$="",EEF_STPCHAR$="- "; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_man_ship_zip , WO 224917
6086 EEF_FTYPE=0,EEF_OFFSET=203,EEF_FLDLEN=35,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_mark_for , WO 224917
6087 EEF_FTYPE=0,EEF_OFFSET=238,EEF_FLDLEN=35,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_man_ship_cust , WO 224917
6088 EEF_FTYPE=0,EEF_OFFSET=273,EEF_FLDLEN=15,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_inside_delivery , WO 224917
6089 EEF_FTYPE=0,EEF_OFFSET=288,EEF_FLDLEN=15,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_acct_num , WO 224917
6090 EEF_FTYPE=0,EEF_OFFSET=303,EEF_FLDLEN=1,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_bill_m , WO 224917
6091 EEF_FTYPE=0,EEF_OFFSET=304,EEF_FLDLEN=20,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_shipper_id , WO 224917
6092 EEF_FTYPE=1,EEF_OFFSET=0,EEF_FLDLEN=0,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_quantity , WO 224917
6093 EEF_FTYPE=0,EEF_OFFSET=328,EEF_FLDLEN=40,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090; REM "ss_email_addr , WO 224917
6094 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](324,10)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "3pm_id - 233818
6095 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](334,20)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "3pm_info_1 - 233818
6096 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](354,20)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "3pm_info_2 - 233818
6097 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](374,50)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "3pm_info_3 - 233818
6098 GOSUB CHECK_STAX_CODE; ECD_IN$(1103,10)=VALUE$; GOTO 1090 ! WO232721, sales_tax_code
6099 EEF_FTYPE=0,EEF_OFFSET=368,EEF_FLDLEN=10,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090 ! WO232721, ss_sales_tax_code
6100 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE EEG_IN_DATA$[VAL_INDEX]=VAL$[VAL_INDEX],HAVE_ORDER_LINE_ID_3P$="Y"; NEXT VAL_INDEX END_IF ; GOTO 1090 ! WO234315, 3p_order_line_id
6101 IF STP(VALUE$,2)="Y" OR STP(VALUE$,2)="N" THEN ECD_IN$(1113,1)=STP(VALUE$,2) END_IF ; GOTO 1090 ! WO233493, suspend_pl
6102 ECD_IN$(1114,11)=STP(VALUE$,2); GOTO 1090 ! WO237271, 3p_freight
6103 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](424,1)=UCS(VAL$[VAL_INDEX]); NEXT VAL_INDEX END_IF ; GOTO 1090 ! SSP244424, suspend_po
6104 OCR1$=STP(VALUE$,1); IF OCR1$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_1
6105 OCR2$=STP(VALUE$,1); IF OCR2$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_2
6106 OCR3$=STP(VALUE$,1); IF OCR3$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_3
6107 OCR4$=STP(VALUE$,1); IF OCR4$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_4 
6108 OCR5$=STP(VALUE$,1); IF OCR5$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_5 
6109 OCR6$=STP(VALUE$,1); IF OCR6$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_6 
6110 OCR7$=STP(VALUE$,1); IF OCR7$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_7 
6111 OCR8$=STP(VALUE$,1); IF OCR8$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_8
6112 OCR9$=STP(VALUE$,1); IF OCR9$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_9
6113 OCR10$=STP(VALUE$,1); IF OCR10$>"" THEN FV1$="Y" END_IF ; GOTO 1090 ! WO245891, order_cust_ref_10
6114 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE CIC_IN_DATA$[VAL_INDEX]=VAL$[VAL_INDEX]; CIC_CODE$=UCS(VAL$[VAL_INDEX]); GOSUB GET_ITEM_FROM_CIC; ECE_IN_DATA$[VAL_INDEX](228,20)=FOUND_ITEM$; NEXT VAL_INDEX END_IF ; GOTO 1090 ! WO251794, cic_code
6115 FROM_ID_3P$=STP(VALUE$,2); IF STP(FROM_ID_3P$)>"" THEN EEP_3P$="Y" END_IF ; GOTO 1090 ! WO251794, 3p_from_id WO303296
6116 TO_ID_3P$=STP(VALUE$,2); IF STP(TO_ID_3P$)>"" THEN EEP_3P$="Y" END_IF ; GOTO 1090 ! WO251794, 3p_to_id WO303296
6117 OTHER_1_3P$=STP(VALUE$,2); IF STP(OTHER_1_3P$)>"" THEN EEP_3P$="Y" END_IF ; GOTO 1090 ! WO251794, 3p_other_1 WO303296
6118 OTHER_2_3P$=STP(VALUE$,2); IF STP(OTHER_2_3P$)>"" THEN EEP_3P$="Y" END_IF ; GOTO 1090 ! WO255400, 3p_other_2 WO303296
6119 OTHER_3_3P$=STP(VALUE$,2); IF STP(OTHER_3_3P$)>"" THEN EEP_3P$="Y" END_IF ; GOTO 1090 ! WO255400, 3p_other_3 WO303296
6120 ECD_IN$(1125,12)=UCS(STP(VALUE$,2)); GOTO 1090 ! WO257735, pl_alt_selection
6121 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](427,20)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090 ! SSP257735, ext_field_1
6122 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](447,20)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090 ! SSP257735, ext_field_2   
6123 FRT_3P_SPC_CODE$=PAD(UCS(VALUE$),10); FRT_3P_IN_LINE$="Y"; GOTO 1090 ! WO 262732, 3p_freight_special_code
6124 IF NOT(NUL(VALUE$)) THEN FRT_3P_LINE_NUM$=STR(NUM(VALUE$,ERR=1090):"000") END_IF ; GOTO 1090 ! WO 262732, 3p_freight_line_number
6125 FRT_3P_DISPLAY_LINE$=UCS(VALUE$); GOTO 1090 ! WO 262732, 3p_freight_display_line
6126 FRT_3P_PO_CODE$=PAD(UCS(VALUE$),1); GOTO 1090 ! WO 262732, 3p_freight_po_code
6127 FRT_3P_VENDOR_CODE$=PAD(UCS(VALUE$),10); GOTO 1090 ! WO 262732, 3p_freight_vendor_code
6128 FRT_3P_VENDOR_PLANT$=PAD(UCS(VALUE$),4); GOTO 1090 ! WO 262732, 3p_freight_vendor_plant
6129 ECD_IN$(1137,1)=PAD(UCS(VALUE$),1); GOTO 1090 ! 267129, job_costing
6130 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF POS(VAL$[VAL_INDEX]="NECSB")>0 THEN ECE_IN_DATA$[VAL_INDEX](467,1)=VAL$[VAL_INDEX] END_IF ; NEXT VAL_INDEX; GOTO 1090 ! SSP268433, item_line_type
6131 EEF_FTYPE=0,EEF_OFFSET=382,EEF_FLDLEN=3,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090 ! ss_ext_line_number, SSP268892
6132 ECD_IN$(1138,1)=PAD(UCS(VALUE$),1); GOTO 1090 ! WO271988, bypass_order_email_addr_conf
6133 EEK_VAULT_ID$=STP(VALUE$,2); GOTO 1090 ! SSP229993, vault_id
6134 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE FROM_CIC_IN_DATA$[VAL_INDEX]=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090 ! WO277813, from_cic_code
6135 ECD_IN$(523,35)=STP(VALUE$,2); GOTO 1090 ! WO278444, bt_name_override
6136 ECD_IN$(558,30)=STP(VALUE$,2); GOTO 1090 ! WO278444, bt_addr1_override
6137 ECD_IN$(588,30)=STP(VALUE$,2); GOTO 1090 ! WO278444, bt_addr2_override
6138 ECD_IN$(618,16)=STP(VALUE$,2); GOTO 1090 ! WO278444, bt_city_override
6139 ECD_IN$(634,2)=PAD(UCS(VALUE$),2); GOTO 1090 ! WO278444, bt_state_override
6140 ECD_IN$(636,9)=STP(VALUE$,3,"-"); GOTO 1090 ! WO278444, bt_zip_override
6141 IF ADDRN=588 THEN GOTO 1090 ELSE IF ADDRN=558 THEN ADDRN=588 ELSE ADDRN=558 END_IF ; ECD_IN$(ADDRN,30)=STP(VALUE$,2); GOTO 1090 ! WO278444, bt_addrn_override, add first to bt_addr1_override, then bt_addr2_override, only do first two
6142 IF UCS(MID(VALUE$,1,1))="Y" THEN SMART_ADDR_N$="Y" END_IF ; GOTO 1090 ! WO278424, smart_addr_n
6143 RDTMP=POS(","=VALUE$); IF RDTMP=0 THEN INPUT_CUST_LOC_CODE$=PAD(VALUE$,9); GOSUB GET_LOC_FROM_CUST_LOC_CODE; GOTO 1090 ELSE IF RDTMP>1 THEN INPUT_CUST_LOC_CODE$=PAD(STP(VALUE$(1,RDTMP-1),1),9); GOSUB GET_LOC_FROM_CUST_LOC_CODE; GOTO 1090 ! SSP286528, cust_loc_code
6144 EEF_FTYPE=0,EEF_OFFSET=388,EEF_FLDLEN=9,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090 ! SSP286528, ss_cust_loc_code
6145 EEF_FTYPE=0,EEF_OFFSET=397,EEF_FLDLEN=20,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090 ! SSP286528, ss_recv_dept
6146 EEF_FTYPE=0,EEF_OFFSET=417,EEF_FLDLEN=15,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090 ! SSP286528, ss_ship_via_map
6147 TAG_PARM=1; IF TAG_PARM$>"" THEN TAG_PARM=NUM(TAG_PARM$,ERR=*PROCEED) END_IF ; GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE EEL_IN_DATA$[VAL_INDEX,TAG_PARM]=VAL$[VAL_INDEX],HAVE_EEL$="Y"; NEXT VAL_INDEX END_IF ; GOTO 1090 ! SSP290559, 3p_full_url DBD-191-DBSPT-117328-SSP307365 support more EEL sequences per line
6148 TST_CONTRACT_NUMBER$=UCS(VALUE$); GOSUB CHECK_CONTRACT_NUM; ECD_IN$(1139,20)=VALID_CONTRACT_NUMBER$,ECD_IN$(1159,6)=VALID_CONTRACT_DATE$; GOTO 1090 ! WO291781
6149 TST_CSR$=PAD(UCS(VALUE$),4); GOSUB CHECK_CSR; ECD_IN$(1165,4)=VALID_CSR$; GOTO 1090 ! WO294934
6150 GOSUB PARSE_PO_COMMENTS; GOTO 1090 ! 298437 - po_comments
6151 GOSUB PARSE_ORDER_COMMENTS; GOTO 1090 ! 299085 - order_comment_mesglines
6152 EEO_VALUE$=VALUE$; GOSUB EEO_VALUES; IF EEO_VAL_COUNT=0 THEN GOTO 1090 ELSE FOR EEO_VAL_INDEX=1 TO EEO_VAL_COUNT; IF STP(EEO_VAL$[EEO_VAL_INDEX],3," ")="" THEN NEXT EEO_VAL_INDEX ELSE EEO_IN_DATA$[EEO_VAL_INDEX](15,12)=EEO_VAL$[EEO_VAL_INDEX]; NEXT EEO_VAL_INDEX END_IF ; GOTO 1090 ! WO300154, plant_quote_number
6153 ECD_IN$(1169,10)=STP(VALUE$,2); GOTO 1090 ! SSP306664, ec_source
6154 VALUE$=PAD(UCS(VALUE$),2); GOSUB TERMS_CODE_OVERRIDE; GOTO 1090 ! WO306701, terms_code
6155 COUNTRY_IN$=STP(UCS(VALUE$),2); GOSUB GET_COUNTRY; ECD_IN$(1179,2)=COUNTRY_OUT$; GOTO 1090 ! SSP307210, man_country
6156 SS_COUNTRY_IN_VALUE$=VALUE$; GOSUB SS_COUNTRY_IN_VALUES; VALUE$=SS_COUNTRY_OUT_VAL$; EEF_FTYPE=0,EEF_OFFSET=432,EEF_FLDLEN=2,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090 ! SSP307210, ss_man_country
6157 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE LINE_SPEC_URL_IN_DATA$[VAL_INDEX]=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090 ! SSP307244-DBD-88, line_spec_url
6158 ORDER_ID_3P_2$=STP(VALUE$,2); IF STP(ORDER_ID_3P_2$)>"" THEN EEP_3P$="Y" END_IF ; GOTO 1090 ! DBD-185-DBSPT-115417-SSP307358, 3p_order_id_2
6159 EEK_CUST_PROFILE_ID$=STP(VALUE$,2); GOTO 1090 ! SSP307309-DBD-113, cust_profile_id
6160 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE FROM_EQD_CUST_IN_DATA$[VAL_INDEX]=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090 ! DBD-272-SSP307406, from_eqd_customer
6161 LRDTMP=POS(","=VALUE$); IF LRDTMP=0 THEN LONG_RECV_DEPT_IN$=STP(VALUE$,1); GOSUB GET_LOC_FROM_LONG_RECV_DEPT; GOTO 1090 ELSE IF LRDTMP>1 THEN LONG_RECV_DEPT_IN$=STP(VALUE$(1,LRDTMP-1),1); GOSUB GET_LOC_FROM_LONG_RECV_DEPT; GOTO 1090 ! DBD-273-SSP307410 long_recv_dept
6162 EEF_FTYPE=0,EEF_OFFSET=434,EEF_FLDLEN=64,EEF_MASK$=""; PERFORM "EC3EEF;SET_TAG_DATA"; GOTO 1090 ! DBD-273-SSP307410, ss_long_recv_dept
6163 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](259,3)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "comp_master_line_number - 307420-DBD-288
6164 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX ELSE ECE_IN_DATA$[VAL_INDEX](297,1)=VAL$[VAL_INDEX]; NEXT VAL_INDEX END_IF ; GOTO 1090; REM "comp_is_master_line - 307420-DBD-288
6165 GOSUB 8300; IF VAL_COUNT=0 THEN GOTO 1090 ELSE FOR VAL_INDEX=1 TO VAL_COUNT; IF STP(VAL$[VAL_INDEX],3," ")="" THEN NEXT VAL_INDEX; GOTO 1090 ELSE ECE_IN_DATA[VAL_INDEX,7]=NUM(VAL$[VAL_INDEX],ERR=8950),ECE_SET_DATA[VAL_INDEX,7]=1; NEXT VAL_INDEX; GOTO 1090; REM "line_unit_imsprice, set ece_set[7] so we know it should be changed 307487
6199 ! Save
6345 ! 
6350 GOSUB SET_READONLY; FIND (Z[45],KEY=DEF_VENDOR$(1,10),DOM=6355)AP4$; GOSUB CLEAR_READONLY; GOTO 6360
6355 GOSUB CLEAR_READONLY; GOTO *RETURN
6360 IF MID(AP4$,402,1)="Y" THEN CUST_SPLD_INV$="Y"
6361 ! PRINT "CUST_SPLD_INV: ",DEF_VENDOR$," ",CUST_SPLD_INV$
6370 RETURN 
6380 ! 
6400 ! For C type line without PO code, make sure IC0 exists, if not set it up, SSP193094
6405 GOSUB SET_READONLY; FIND (Z[6],KEY=ECE$(29,20),DOM=*NEXT); GOSUB CLEAR_READONLY; GOTO *RETURN
6410 GOSUB CLEAR_READONLY
6415 IF SET_BY_FM1<>1 THEN GOTO *RETURN
6420 CALL "FM2UII",X3$,X4$,"","*",FM1$,FM1{ALL}
6440 RETURN 
6445 ! 
6450 UPDATE_ECD_SHIPPING:! WO215367
6455 GOSUB SET_READONLY; ECD_SHIPPING=0; DIM EEB[5]; READ (Z[46],KEY=ECD$(26,10),DOM=*NEXT)IOL=0410; GOSUB CLEAR_READONLY; GOTO 6457 ! found EED record, clear READONLY and go on to calculation
6456 GOSUB CLEAR_READONLY; GOTO *RETURN ! No EEB record for this customer
6460 IF EEB[0]=0 AND EEB[1]=0 AND EEB[2]=0 THEN GOTO *RETURN
6465 CALL "EC3WSL",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,NUM_WK_ITEMS,NUM_ITEMS,DISP_SUBTOTAL,TOTAL_CARTON_WEIGHT ! similar to line 2332 in EC3BYB, need total of worksheet lines price extension and number of items to use for shipping calculation, WO237271 
6470 IF EEB[0]<>0 THEN ECD_SHIPPING+=DISP_SUBTOTAL*EEB[0]/100 ! Percent of sale
6475 IF EEB[1]<>0 AND NUM_ITEMS<>0 THEN ECD_SHIPPING+=EEB[1] ! Flat amount per worksheet provided at least one item in worksheet
6480 IF EEB[2]<>0 THEN ECD_SHIPPING+=NUM_ITEMS*EEB[2] ! Flat amount per worksheet line
6490 EXTRACT RECORD (Z[2],KEY=ECD$(1,10),DOM=*RETURN)ECDREC$; ECDREC$(997,12)=STR(ECD_SHIPPING:"###,##0.00-"); WRITE RECORD (Z[2],KEY=ECD$(1,10))ECDREC$
6495 RETURN 
6499 ! 
6500 ! Check EDU for this worksheet, need approval comments
6510 DIM EDU$(511)
6520 READ (Z[44],KEY=ECD$(1,10),DOM=*RETURN)EDU$
6540 RETURN 
6545 ! 
6550 PRIMARY_FUNCTION_LIST:! WO215369
6555 PF_LIST$="",EC3EEC_RETURN$="",SELECTED_VALUE$=""; IF ECD$(1009,30)<>DIM(30) THEN SELECTED_VALUE$=ECD$(1009,30) ELSE PF_LIST$="<option selected value="+QUO+QUO+"></option>"
6560 CALL "EC3EEC",X3$,X4$,EC_PARM$,EC${ALL},EC3EEC_ACTION$,SELECTED_VALUE$,EC3EEC_RETURN$,EC3EEC_OTHER$
6565 PF_LIST$+=EC3EEC_RETURN$
6570 IF POS("<!"=LINE1$)<>0 THEN LINE1$=LINE1$(1,POS("<!"=LINE1$)-1) ! If in comment remove the start of the comment.
6575 STMP=POS("</select>"=LINE1$,-1); IF STMP<>0 THEN PF_LIST$+="</select>"; IF STMP=1 THEN LINE1$="" ELSE LINE1$=LINE1$(1,STMP-1)
6580 IF LINE2$>"" THEN IF LINE2$(1,1)=">" THEN LINE2$=LINE2$(2) ! If token was part of a comment, then remove the end of the comment.
6595 RETURN 
6599 ! 
6600 REM "Create email request file 148750.  DMM-DON'T THINK THIS IS USED
6601 REM "Use port 1001 and 1002
6602 DIM ETEXT_NEEDED$(30); ETEXT_NEEDED$(1,10)="email",ETEXT_NEEDED$(16,10)="email",ETEXT_NEEDED$(11,5)="00001",ETEXT_NEEDED$(26,5)="00002"; CALL "EC3BYC",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,ETEXT_NEEDED$,ETEXT${ALL}
6605 CLOSE (1001); CLOSE (1002)
6610 PRECISION 5; EMAIL_FILE$=%SERVER_DIR$+"TMP"+EMAIL_ACTION$+STR(INT(RND*100000)); PRECISION 2
6611 OPEN (1002,ERR=6615)EMAIL_FILE$; CLOSE (1002); GOTO 6610; REM "if we can open the file then it is in use, try again
6615 REM "Create file, then open files and copy
6620 SERIAL EMAIL_FILE$,DISK_NO,0,ERR=6610
6621 OPEN (1001,ERR=6645)TMP_NAME$; OPEN (1002)EMAIL_FILE$; MESS$="Creating temp HTML e-mail file "+EMAIL_FILE$,MTYPE$="EMAIL"; GOSUB 7500
6622 TEXT_IN$=ETEXT$[1]; GOSUB 6650
6623 WRITE RECORD (1002)TEXT_IN$; REM "write out email header
6625 READ RECORD (1001,SIZ=6692,END=6629)COPY$; COPY$=COPY$(1,POS(DIM(512,$00$)=COPY$+DIM(512,$00$))-1); IF MID(COPY$,1,LEN(HTML_TEXT$))=HTML_TEXT$ THEN COPY$=MID(COPY$,LEN(HTML_TEXT$)+1) END_IF ; WRITE RECORD (1002,SIZ=LEN(COPY$))COPY$; GOTO 6625 ! strip off html_header if here, it is covered in email open
6629 WRITE RECORD (1002)ETEXT$[2]; REM "write out email closing
6630 PRECISION 5; EMAIL_ACTION_FILE$=%SERVER_DIR$+STR(INT(RND*100000))+".em"; PRECISION 2; CLOSE (1003); OPEN (1003,ERR=6631)EMAIL_ACTION_FILE$; GOTO 6630; REM "find unused tmp file name for email control file
6631 SERIAL EMAIL_ACTION_FILE$,DISK_NO,0,ERR=6640; OPEN (1003)EMAIL_ACTION_FILE$
6632 WRITE RECORD (1003)"basic=EC3EM0"; WRITE RECORD (1003)"template="+EMAIL_FILE$; WRITE RECORD (1003)"session_id="+EC$[1](1213,64); WRITE RECORD (1003)"remove_file=Y" ! ssp 201193
6633 MESS$="Posting e-mail to send : "+EMAIL_ACTION_FILE$,MTYPE$="EMAIL"; GOSUB 7500
6640 CLOSE (1001); CLOSE (1002); CLOSE (1003)
6645 RETURN 
6649 ! 
6650 UPDATE_FS1:! SSP224985 - update credit card type to order header
6655 OPEN (HFN,ERR=*RETURN)"FS1"+%C$; FS1CHAN=LFO
6660 EXTRACT RECORD (FS1CHAN,KEY=ECD$(235,8),ERR=*NEXT,DOM=*NEXT)FS1$; FS1$(285,4)=ECD$(411,4); WRITE RECORD (FS1CHAN,KEY=ECD$(235,8))FS1$
6670 CLOSE (FS1CHAN)
6695 RETURN 
6699 ! 
6700 REM "central write for ECE - 159048
6701 REM "PRINT "DUP CK: ",ECE$(1,10),"-",ECE$(25,3),"  ",ECE$(29,20)," ",ECE$(28,1)
6702 REM "PRINT ECR$(1,80)
6710 ECEDUPFOUND$="N"; IF EC$[7](588,1)<>"Y" OR POS(ECE$(28,1)="SM")<>0 OR EXISTING_LINE$="Y" OR UPDATE_PRICE$="Y" THEN GOTO 6730; REM "write line if message line/special charge/ or feature not activated. Don't do checking if updating existing line. WO215367, need to update display price info to ECE
6712 DIM EDS1$(1910),EDS2$(95); FIND (Z(35),KEY=ECE$(1,10),DOM=*NEXT)IOL=0491
6713 IF POS(ECE$(29,20)=EDS1$(11,1900),20)=0 THEN GOTO 6730 ELSE ECEDUPFOUND$="Y"
6714 IF ECR$(528,1)="Y" THEN ECEDUPFOUND$="N"; GOTO 6730; REM "item allowed to be ordered multiple times
6717 REMOVE (Z(3),KEY=ECE$(1,10)+ECE$(25,3),DOM=*NEXT); EDSACTION$="D"; GOSUB 6850; GOTO 6745
6718 GOTO 6745
6730 GOSUB 2400; WRITE (Z(3),KEY=ECE$(1,10)+ECE$(25,3))IOL=0330; REM " SSP 170082
6731 IF SET_BY_IC0<>1 AND ECE$(28,1)="C" AND ECE$(29,10)<>DIM(10) AND ECE$(129,1)=DIM(1) AND MID(FM1$,105,1)<>"Y" THEN GOSUB 6400 ! SSP193094, if release type line make sure there is an IC0 record, if not then set it up; SSP205006, do not setup IC0 if Stock? is "Y"
6732 IF POS(ECE$(28,1)="MS")=0 THEN EDSACTION$="A"; GOSUB 6850
6735 IF MAKE_RLINE$="Y" AND ECE$(248,10)<>DIM(10) THEN GOSUB 5650
6736 IF MAKE_RLINE$="Y" THEN GOSUB RETRIEVE_SAVED_EEL ! SSP290559
6745 RETURN 
6749 ! 
6750 UPDATE_DISP_PRICE:! WO215367, display unit price
6755 ECE[4]=ITEM_PRICE ! set display price into ECE
6760 UPDATE_PRICE$="Y"; GOSUB 6700; UPDATE_PRICE$="N" ! write ECE record
6770 RETURN 
6771 ! 
6775 UPDATE_DISP_EXT:! WO215367, display price extension
6780 ECE[5]=ITEMPRICEEXT ! set display price extension into ECE
6785 UPDATE_PRICE$="Y"; GOSUB 6700; UPDATE_PRICE$="N" ! write ECE record
6795 RETURN 
6799 ! 
6800 REM "process attention field  - 158233
6801 IF ATTN_ROUTINE_DONE$="Y" THEN GOTO 6825 ELSE ATTN_ROUTINE_DONE$="Y"
6802 IF NEW_WORKSHEET$<>"Y" AND (ECD$(64,30)=DIM(30) AND EC_PARM$(1088,1)<>"Y") THEN GOTO 6815; REM "if not initial set up then assume simple display - do not change values.  SSP164755, allow blank attn if parameter set saying it's ok
6804 IF EC$[2](561,30)=DIM(30) THEN GOTO 6810
6806 IF ECD_IN$(64,30)=DIM(30) AND (ATTENTION_VALUE_SUBMITTED$="Y" OR ECD$(64,30)=DIM(30)) AND EC_PARM$(1088,1)<>"Y" THEN ECD_IN$(64,30)=EC$[2](561,30),ECD$(64,30)=EC$[2](561,30) ELSE GOTO 6820; REM "if no value initially set then default to buyer attention field.  SSP164755, allow blank attn if parameter set saying it's ok 
6810 IF NEW_WORKSHEET$="Y" THEN GOTO 6815
6811 IF ATTENTION_VALUE_SUBMITTED$="Y" AND EC_PARM$(1088,1)="Y" THEN GOTO *NEXT ELSE IF LOCATION_CHANGED<>1 THEN GOTO 6820 ! SSP164755
6812 IF EC_PARM$(560,1)<>"Y" AND (ECD_IN$(64,30)<>DIM(30) OR EC_PARM$(1088,1)="Y") THEN ECD$(64,30)=ECD_IN$(64,30); GOTO 6816; REM "after initially setting - always accept changes.  SSP164755 Allow blank if parameter set saying it's ok
6815 IF STP(SHIP$,3," ")="" THEN SHIP$=FM0$ END_IF ; ECD$(64,30)=SHIP$(160,20); REM "do not retain - set to shipto attn if exists "
6825 RETURN 
6830 REM "permanet address / attention change
6832 EXTRACT (Z(8),KEY="C"+ECD$(26,10)+ECD$(36,4),DOM=6849)IOL=0380
6834 IF ECD$(57,1)<>"Y" THEN GOTO 6840
6836 FM0$(160,20)=ECD$(64,20)
6838 IF ECD$(56,1)<>"Y" THEN GOTO 6845
6840 FM0$(51,87)=ECD$(243,87)
6841 IF FM0$(248,35)=DIM(35) THEN FM0$(16,35)=ECD$(376,35) ELSE FM0$(248,35)=ECD$(376,35)
6845 WRITE (Z(8),KEY="C"+ECD$(26,10)+ECD$(36,4))IOL=0380
6849 RETURN 
6850 REM "update ECS worksheet stats file 159048
6852 IF PROCESSLINE$="" THEN PROCESSLINE$=ECE$(25,3); REM "if not passed in the use line
6853 PL=NUM(PROCESSLINE$)-1; IF PL<0 OR PL>94 THEN GOTO 6895 END_IF ; DIM EDS1$(1910),EDS2$(95); IF PROCESSWKSHEET$<>"" THEN EDS1$(1,10)=PROCESSWKSHEET$; GOTO 6854 END_IF ; IF ECD$(1,10)<>DIM(10) THEN EDS1$(1,10)=ECD$(1,10) ELSE EDS1$(1,10)=EC$[1](97,10)
6855 EXTRACT (Z(35),KEY=EDS1$(1,10),DOM=*NEXT)IOL=0491
6857 ON POS(EDSACTION$="AD") GOTO 6880,6860,6870
6860 REM "line addition
6861 EDS1$(PL*20+11,20)=ECE$(29,20),EDS2$(PL*1+1,1)=ECE$(129,1)
6869 GOTO 6880
6870 REM "line deletion
6871 EDS1$(PL*20+11,20)=DIM(20),EDS2$(PL*1+1,1)=" "; GOSUB 4050; GOTO 6880
6885 WRITE (Z(35),KEY=EDS1$(1,10))IOL=0491
6895 PROCESSLINE$=""; RETURN 
6900 REM "update warehouse on session record
6901 REM "routine called if the shipto location has changed and no-elogisitics on customer (update whse list based on shipto default warehouse) ssp 155399
6902 IF %LOGOFF$="Y" THEN GOTO *RETURN ! SSP177437
6905 IF UPDATE_SESSION_WHSE<>1 THEN GOTO 6949; REM "exit if no location change or no whse default by shipto SSP 148750
6906 IF FM0$(284,4)=DIM(4) THEN DFLTWHSE$=EC$[1](178,4) ELSE DFLTWHSE$=FM0$(284,4); REM "if selected shipto has no whse then reset to customer default
6910 IF EC$[7](233,1)<>"Y" THEN GOTO 6912; REM "ck if opposite warehouse set
6911 IF DFLTWHSE$(1,1)="0" THEN NEXTWHSE$="9"+DFLTWHSE$(2,3) ELSE NEXTWHSE$="0"+DFLTWHSE$(2,3) END_IF ; DFLTWHSE$=DFLTWHSE$+NEXTWHSE$; REM "set opposite warehouse
6912 DFLTWHSE$=PAD(DFLTWHSE$,48)
6915 EXTRACT RECORD (33005,KEY=EC$[1](1,7))ECB$; ECB$(279,48)=DFLTWHSE$; WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
6916 EC$[11]=DFLTWHSE$,EC$[10]=EC$[11],EC$[1](279,48)=DFLTWHSE$; REM "reset current session variable
6919 READ (Z(3),KEY=WORKSHEET$,DOM=6920)
6920 ECEKEY$=KEY(Z(3),END=6930); IF ECEKEY$(1,LEN(WORKSHEET$))<>WORKSHEET$ THEN GOTO 6930 ELSE EXTRACT (Z(3),KEY=ECEKEY$)IOL=0330
6921 ECE$(165,48)=DFLTWHSE$
6922 IF LEN(FM1$)<499 THEN DIM FM1$(499),FM1(31); FIND (Z(7),KEY=ECE$(29,20),DOM=*NEXT)IOL=0370
6923 IF LEN(ECR$)<1000 THEN DIM ECR$(1000); FIND (Z(25),KEY=ECE$(29,20),DOM=*NEXT)IOL=0450
6925 ECE$(11,2)=DIM(2),MESSAGE_NO=0; WOLINE$=ECE$(1,10)+ECE$(25,3); REM "reset order line messages
6927 GOSUB 8400; IF ECE$(11,2)<>DIM(2) THEN WRITE (Z(3),KEY=ECEKEY$)IOL=0330; GOSUB 8350; REM "reprocess line for exceptions
6929 IF ECE$(11,2)=DIM(2) THEN WRITE (Z(3),KEY=ECEKEY$)IOL=0330; GOTO 6920 ELSE GOTO 6920
6949 RETURN 
6950 REM ' get ship via default
6955 DEF_SHIP_VIA$=""
6960 IF EC$[2](61,4)<>DIM(4) THEN READ (Z[8],KEY="C"+ECD$(26,10)+EC$[2](61,4),ERR=*NEXT)FM0TMP$; IF FM0TMP$(305,1)<>" " THEN DEF_SHIP_VIA$=FM0TMP$(305,1); GOTO *RETURN
6970 READ (Z[9],KEY="D"+ECD$(26,10),ERR=*NEXT)FMPTMP$; IF FMPTMP$(45,1)<>" " THEN DEF_SHIP_VIA$=FMPTMP$(45,1); GOTO *RETURN
6995 RETURN 
7000 REM "credit card processing (create / invoice / delete)
7001 IF DELETE_WORKSHEET=1 OR DELETE_INVOICE=1 THEN READ (Z(2),KEY=WORKSHEET$,DOM=7049)IOL=0310; REM "if deleting worksheet/invoice then read - 157676
7002 IF ECD$(235,8)=DIM(8) OR STP(CCACTION$,3," ")="" THEN GOTO 7045
7003 IF ECD$(507,1)<>"Y" THEN GOTO 7045; REM "if transaction not a credit card purchase then exit
7004 IF DELETE_WORKSHEET=1 THEN CLOSE (1005); ROTMP_FILE$=FILE_PATH$+"TRO"+WORKSHEET$; ERASE ROTMP_FILE$,ERR=*NEXT; REM CLEAR FOR REORDER NOTICES IF DELETED SSP 171417
7008 IF ECD$(508,1)=CCACTION$ THEN GOTO 7023 END_IF ; REM "if worksheet shows that invoiceing has either been created/deleted/invoiced then do not repeat
7010 CALL "AR2WAA",X3$,X4$,"","N",ECD$(235,8),EC$[14](1,15),CCACTION$,INVOICE_HDR_KEY$,""
7011 IF CCACTION$="I" OR CCACTION$="O" THEN MESS$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+ECD$(1,10)+"|MESSAGE|ACTION:"+CCACTION$+":CREDIT CARD INVOICE NO|"+INVOICE_HDR_KEY$(7,8); MX=FN%_LOG_MESSAGE_WITH_FLUSH("MESG",MESS$) ! SSP182127, ssp198208
7012 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
7015 FILERETURN$="Y",Y0$=""; GOSUB 0500; FILERETURN$="N"
7016 IF DELETE_WORKSHEET=1 THEN GOTO 7049
7020 REM "update worksheet header with credit card invoicing status
7022 EXTRACT (Z(2),KEY=ECD$(1,10))IOL=0310; ECD$(508,1)=CCACTION$; IF POS(CCACTION$="DB")<>0 THEN ECD$(509,14)=DIM(14),ECD$(235,8)=DIM(8) ELSE IF CCACTION$="C" THEN ECD$(509,14)=INVOICE_HDR_KEY$; REM "only update header if Creating invoice - if updated on invoicing loses reference to temporary invoice in GRB
7025 WRITE (Z(2),KEY=ECD$(1,10))IOL=0310; IF STP(EEK_VAULT_ID$,2)>"" THEN GOSUB WRITE_EEK ! SSP229993
7045 IF INVOICE_LINE_COUNT=0 THEN GOSUB 7100
7049 RETURN 
7050 REM "get ccinformation
7055 DIM GRB(500),GRB(20)
7060 IF POS(CCACTION$="CIO")=0 THEN GOTO 7090 ELSE INVCHAN=Z(28)
7070 FIND (INVCHAN,KEY=ECD$(509,14),DOM=7071)IOL=0470
7098 RETURN 
7100 REM "build invoice display array
7101 IF ECD$(509,14)=DIM(14) THEN GOTO 7145
7102 INVHDR=Z(28),INVLINE=Z(29); REM "set invoice header and lin channels
7103 INVOICE_LINE_COUNT=0,FRT_INSALE=0; DIM INVOICE$[200,10]; REM "200 lines  (index 4) 1=order line #  2=ART string var$  3=extended sell amt  4=display/print line 5=qty per um 6=order qty  7=shipped qty   8=unit price  9=qty ordered eaches  10=qty shipped eaches
7105 DIM GRB(20),GRB$(500),GRT$(500),GRT(10); FIND (INVHDR,KEY=ECD$(509,14),DOM=7145)IOL=0470
7108 INVOICE_LINE_INDEX=GRB(20)
7110 IF INVOICE_LINE_INDEX=0 THEN GOTO 7145 ELSE READ (INVLINE,IND=INVOICE_LINE_INDEX)IOL=0490
7112 INVOICE_LINE_COUNT=INVOICE_LINE_COUNT+1
7115 INVOICE$[INVOICE_LINE_COUNT,1]=GRT$(47,3),INVOICE$[INVOICE_LINE_COUNT,2]=GRT$,INVOICE$[INVOICE_LINE_COUNT,3]=STR(GRT(4)),INVOICE$[INVOICE_LINE_COUNT,4]=GRT$(6,1),INVOICE$[INVOICE_LINE_COUNT,5]=STR(GRT(6)),INVOICE$[INVOICE_LINE_COUNT,8]=STR(GRT(2)),INVOICE$[INVOICE_LINE_COUNT,9]=STR(GRT(0)),INVOICE$[INVOICE_LINE_COUNT,10]=STR(GRT(1)); REM "assign invoice line values
7116 QTY_PER=GRT(6); IF QTY_PER=0 OR GRT$(50,4)="M   " THEN QTY_PER=1
7117 INVOICE$[INVOICE_LINE_COUNT,6]=STR(GRT(0)/QTY_PER),INVOICE$[INVOICE_LINE_COUNT,7]=STR(GRT(1)/QTY_PER)
7119 IF GRT$(1,1)<>"S" THEN GOTO 7110; REM "if not special charge then get next line
7120 REM "special charge line 
7121 IF GRT$(47,3)="FRT" THEN INVOICE$[INVOICE_LINE_COUNT,4]="N",FRT_INSALE+=GRT(4); GOTO 7110 ! 262522 - Add freight markup to FRT_INSALE amount and set line to not display
7122 DIM FMPX$(100),FMPX(2); FIND (Z(9),KEY="X"+GRT$(65,10),DOM=7125)IOL=0392
7123 IF FMPX$(60,1)="Y" AND MID(FMPX$,73,1)<>"Y" THEN INVOICE$[INVOICE_LINE_COUNT,4]="N",FRT_INSALE=FRT_INSALE+GRT(4); REM "if special charge is freight type then turn off display and add to frt in net sale. WO229728, if special charge is set to print line on invoice then don't set to not display and don't add to FRT_INSALE amount.
7129 GOTO 7110
7145 RETURN 
7150 REM "set up IC0/ECR records for office supply item
7155 OSTMP=NUM(ECE_IN$(228,20),ERR=*NEXT); GOTO 7160
7156 OSITEM$=ECE_IN$(228,20)
7160 CALL "OS2C02",X3$,X4$,OSITEM$,ITEM_ADDED$,ITEM_ADDED_DESC$ ! 280607
7165 ECE_IN$(39,10)=OSITEM$,ECE_IN$(228,20)=OSITEM$ ! 307428
7170 DIM ECR$(1000); ECR$(11,10)=OSITEM$
7172 EXTRACT (Z(25),KEY=ECR$(1,20),DOM=*NEXT)IOL=0450
7174 ECR$(255,1)="Y"
7176 WRITE (Z(25),KEY=ECR$(1,20))IOL=0450
7195 RETURN 
7200 ! Allow blank shipto address information if parm say ok, SSP164755
7205 IF STP(ECD_IN$(11),3)="" THEN GOTO *RETURN
7210 SHIP$(51,30)=ECD_IN$(243,30),SHIP$(81,30)=ECD_IN$(273,30)
7215 SHIP$(111,16)=ECD_IN$(303,16),SHIP$(127,2)=ECD_IN$(319,2)
7220 SHIP$(129,9)=ECD_IN$(321,9),SHIP$(248,35)=ECD_IN$(376,35)
7225 ECD$(243,87)=SHIP$(51,87),ECD$(376,35)=SHIP$(248,35)
7245 RETURN 
7249 ! 
7250 ! Set order_line_price, order_line_ext SSP165030
7255 ORDER_PRICE$="",ORDERPRICEEXT=0; IF EC$[2](322,1)="Y" THEN GOTO *RETURN
7260 IF STP(ECD$(235,8),3)="" THEN GOTO *RETURN ! Order number
7265 IF STP(ECE$(282,3),3)="" THEN GOTO *RETURN ! FS2 line number
7270 DIM FS2$(228),FS2[29]; READ (Z[39],KEY=ECD$(235,8)+ECE$(282,3),DOM=7295)IOL=0340
7275 ORDER_PRICE$=STR(FS2[4]:X3$(69,1)+"###,###.00")
7280 ORDERPRICEEXT=FS2[6]
7295 RETURN 
7299 ! 
7300 ! If parm says so then don't extend quantity in eaches for M/1000, SSP166123                                                                        
7305 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4) ! SSP167126
7310 QTY_IN_EACHES=ECE[0]*ECE[1]
7315 IF ECE$(107,4)<>THOUSANDS$ THEN GOTO *RETURN
7320 IF (EC_PARM$(948,1)<>"Y" AND ECE$(299,1)=" ") OR ECE$(299,1)="Y" THEN GOTO *RETURN
7325 QTY_IN_EACHES=ECE[0]
7340 RETURN 
7345 ! 
7350 ! If parm says so then don't extend item_price_ext for M/1000, SSP166123
7354 IF ITEM_PRICE=-999999999 THEN ITEM_PRICE=0 ! SSP 232412
7355 THOUSANDS$="M   "; IF STP(EC_PARM$(1089,4),3)>"" THEN THOUSANDS$=EC_PARM$(1089,4) ! SSP167126
7360 ITEMPRICEEXT=ITEM_PRICE*ECE[0]
7365 IF ECE$(107,4)<>THOUSANDS$ THEN GOTO *RETURN
7370 IF (EC_PARM$(948,1)<>"Y" AND ECE$(299,1)=" ") OR ECE$(299,1)="Y" THEN GOTO *RETURN
7375 ITEMPRICEEXT=ITEM_PRICE*ECE[0]/1000
7390 RETURN 
7395 ! 
7400 SET_READONLY:
7410 SET_PARAM 'XI'
7420 SET_READONLY_END:RETURN 
7430 CLEAR_READONLY:
7435 SET_PARAM -'XI'
7440 CLEAR_READONLY_END:RETURN 
7450 ! Changing CC_REQUIRED$ on the fly, need to make sure terms code is set accordingly
7455 IF CC_REQUIRED$="N" THEN IF STP(EC$[7](589,2),3)>"" THEN ECBREC$(1164,2)=EC$[7](589,2)
7460 IF CC_REQUIRED$="Y" THEN READ (33007,KEY=EC$[2](51,10),DOM=*NEXT)AR1$; ECBREC$(1164,2)=AR1$(359,2)
7490 RETURN 
7495 ! 
7500 REM "If order has not been moved yet, then extract worksheet header and update the non-blank data
7502 IF SAVE_WK_ACTION$="R" THEN GOSUB 5550 ! WO181395
7503 IF SMART_ADDR_N$="Y" AND LEN(SMART_SHIPTO_ADDR_1$)>30 THEN GOSUB SMART_SHIPTO_ADDR ! WO278424, if trigger tag is Y and saved shipto addr1 is greater than 30
7505 ECD_ON_FILE=0; DIM ECD$(1580),ECD[1],ORIGINAL_ECD_SHIPTO$(4); EXTRACT (Z[2],KEY=ECD_IN$(1,10),DOM=7506)IOL=0310; ECD3$=STP(ECD$(1185,396),1); ECD_ON_FILE=1,ORIGINAL_ECD_SHIPTO$=ECD$(36,4); GOTO 7509; REM "if not on file, default fields in ECD$ starting at 7506.  SSP168448, was GOTO 7510, changed to GOTO7509 for existing, needed to make sure 507,1 gets set if using cc_required on the fly.  WO179030, set ECD3$ for 2nd range of PO codes.
7506 ECD$(1,10)=ECD_IN$(1,10),ECD$(11,15)=EC$[1](8,15),ECD$(26,10)=EC$[2](51,10); IF EC$[2](61,4)<>DIM(4) THEN ECD$(36,4)=EC$[2](61,4) ELSE ECD$(36,4)=EC$[1](1167,4) END_IF ; GOSUB 8126; REM "Worksheet #,buyer id, customer code, location code - ssp 154600 (set from session record if non-location based buyer
7507 NEW_WORKSHEET$="Y"; GOSUB 6800; ECD$(523,122)=EC$[2](745,122),ECD$(330,35)=EC$[2](591,35); REM "default bill-to address override from buyers record ssp: 151620 & place in default attn/mark for / 158233
7508 ECD$(115,8)=EC$[1](8,15),ECD$(126,8)=DAY,ECD$(134,5)=STR(TIM:"00.00"); REM "login (1st 8), 1st day, 1st tim
7509 ECD$(507,1)=EC$[1](1166,1),ECD$(53,2)=EC$[1](1164,2); REM "credit card order? get from session defaults , 1164,2=terms code for session based on buyer settings
7510 ECD$(139,8)=EC$[1](8,15),ECD$(150,8)=DAY,ECD$(158,5)=STR(TIM:"00.00"); REM "Last modified info
7511 CUSTPO$=ECD$(40,10)+ECD$(163,5); IF STP(CUSTPO$,3," ")="" THEN BUYER_DEFAULT_PO$=STP(EC$[2](307,15),2); IF LEN(BUYER_DEFAULT_PO$)<=10 THEN ECD$(40,10)=BUYER_DEFAULT_PO$ ELSE ECD$(40,10)=BUYER_DEFAULT_PO$(1,10),ECD$(163,5)=BUYER_DEFAULT_PO$(11); REM "162727
7512 IF ECD$(51,1)="Y" THEN GOTO 7545; REM "If moved to order file, then we can't change anything in the header
7513 IF ECD_ON_FILE=0 OR ECD_IN$(36,4)<>ECD$(36,4) AND ECD_IN$(36,4)<>DIM(4) OR STP(ECD$(243,87),3," ")="" THEN LOCATION_CHANGED=1 ELSE LOCATION_CHANGED=0
7514 IF LOCATION_CHANGED AND EC$[7](515,21)=DIM(21) AND EC$[2](1008,21)=DIM(21) THEN UPDATE_SESSION_WHSE=1 ELSE UPDATE_SESSION_WHSE=0; REM "155399 - only set if change in location and e-logisitics not set for customer. SSP278864, and buyer whse group not set either
7515 REM "If field in ECD_IN$ is non-blank, then overwrite info in ECD$
7516 ISTR$="026010|036004|040010|058006|064030|094015|109006|163005|168020|188001|189001|190015|205030|235008|243030|273030|303016|319002|321009|330035|365010|375001|376035|479020|499008|056001|057001|677040|737015|752015|767001|768020|788001|789001|790014|804035|839040|879020|899035|934030|964016|980002|982009|991006|"; REM "154323
7520 FOR II=1 TO LEN(ISTR$)-6 STEP 7
7522 XX=NUM(ISTR$(II,3)),YY=NUM(ISTR$(II+3,3)); IF STP(ECD_IN$(XX,YY),3," ")="" THEN GOTO 7524 ELSE ECD$(XX,YY)=ECD_IN$(XX,YY)
7524 NEXT II
7525 IF ECD$(56,1)="Y" OR ECD$(57,1)="Y" THEN GOSUB 6830; REM "154323
7526 IF EC$[2](1156,1)="Y" THEN IF STP(ECD_IN$(523,122),3)>"" THEN ECD$(523,122)=ECD_IN$(523,122) ! WO278444, override bill-to name and address if buyer parm says ok to do.
7527 IF STP(ECD_IN$(40,10),2)>"" THEN ECD$(163,5)=ECD_IN$(163,5) ! SSP166694, if buyer set first part of cust po to something, then always set second part, even if blank
7528 IF FRT_3P_IN_LINE$="Y" THEN GOSUB PROCESS_3P_FREIGHT_LINE ! WO 262732
7529 IF ECD$(1009,30)<>DIM(30) THEN IF ECD_IN$(1009,30)<>DIM(30) AND ECD_IN$(1009,30)<>ECD$(1009,30) THEN ECD$(1009,90)=DIM(90) ! WO215369, if primary function populated previously, and the currently input primary function is not blank and it's different, then clear the primary function and additional fields 1 and 2 from ECD$
7530 IF ECD_IN$(243,87)<>DIM(87) THEN ECD$(243,87)=ECD_IN$(243,87); REM "144949 - if manual shiptos then override here
7531 ISTR$="1009030|1039030|1069030|1099004|1103010|1113001|1114011|1125012|1137001|1138001|1139020|1159006|1165004|1169010|1179002|" ! WO215369, ECD fields starting in a position past 1000
7532 FOR II=1 TO LEN(ISTR$)-7 STEP 8 ! WO215369
7533 XX=NUM(ISTR$(II,4)),YY=NUM(ISTR$(II+4,3)); IF STP(ECD_IN$(XX,YY),3," ")="" THEN GOTO 7534 ELSE ECD$(XX,YY)=ECD_IN$(XX,YY) ! WO215369
7534 NEXT II ! WO215369
7535 GOSUB 2100; REM "Reset location related fields
7536 GOSUB 6900; REM "update worksheet session if shipto has dflt whse and no-elogistics
7537 IF MLINES_IN>0 THEN GOSUB PROCESS_ORDER_COMMENTS ! 299085
7539 IF STP(ECD3$,3)>"" THEN ECD$(1185,396)=PAD(ECD3$,396) ! WO179030, 2nd range of vendor/plant/po used
7540 WRITE (Z[2],KEY=ECD$(1,10))IOL=0310; IF STP(EEK_VAULT_ID$,2)>"" THEN GOSUB WRITE_EEK ! SSP229993
7541 WRITE (Z[4],KEY=ECD$(26,10)+ECD$(11,15)+ECD$(1,10)); REM "ECF sort
7542 WRITE (Z[10],KEY=ECD$(11,15)+ECD$(40,10)+ECD$(163,5)+ECD$(1,10)); REM "ECJ sort by buyer id, customer req & worksheet number
7543 IF FMN_NOTE$="Y" OR FV1$="Y" THEN GOSUB CREATE_EEJ ! WO247495
7544 IF EEP_3P$="Y" THEN GOSUB CREATE_EEP ! WO303296
7545 RETURN 
7550 REM "find FM1 and IC0 records, setup def_xx$ if needed for defaulting, use FM1 first then IC0 data
7551 TRY_ALT$="N" ! SSP168816
7552 IF FIRST_TIME$="Y" THEN FIRST_TIME$="N"; IF ECE$(25,3)<>"001" THEN GOSUB 3150 ! SSP167917
7553 DEF_UM$="",DEF_QTY_UM=1,DEF_DESC$="",SET_BY_FM1=0,SET_BY_IC0=0
7554 IF ECE$(28,1)=" " THEN ECE$(28,1)="C"; IF ECE$(29,10)=DIM(10) THEN ECE$(28,1)="I"; REM "For now, if blank default to custom.  SSP177200, if stock item then set line type to I
7558 IF ECE$(11,2)="02" THEN GOTO 7595 ! set in get_item_code, if item missing then skip the rest
7559 GOSUB SET_READONLY; DIM ECR$(1000),FM1$(449),FM1[31]; FIND (Z[7],KEY=ECE$(29,20),DOM=*NEXT)IOL=0370; GOTO 7561
7560 GOSUB 8248; GOSUB SET_READONLY; IF STOCK$<>"Y" THEN GOTO 7564 ! SSP171511, since product catalog shows alt u/m if found in FM1 for items marked as Stock? Y, we need to also check for alter u/m here, otherwise qty buyer enters won't make sense to the u/m we end up using. SSP236926, need to reset - READONLY, it was cleared at 8249
7561 SET_BY_FM1=1,DEF_DESC$=FM1$(42,40),DEF_UM$=FM1$(100,4),DEF_QTY_UM=FM1[4],ECE[6]=FM1[18] ! WO237271, set carton weight from FM1
7562 IF STP(FM1$(238,4),3," ")="" THEN GOTO 7563 ELSE DEF_UM$=FM1$(238,4),DEF_QTY_UM=FM1[25]; REM "Use alternate unit of issue
7563 IF STP(FM1$(185,10),3," ")="" THEN GOTO 7564 ELSE ECE$(29,10)=FM1$(185,10); REM "ssp110406
7564 DIM ECR$(1000); FIND (Z[25],KEY=ECE$(29,20),DOM=7565)IOL=0450; IF ECR$(256,48)<>DIM(48) THEN ECE$(165,48)=STP(ECR$(256,48),1) ! SSP279566, we may have used an alternate item code so check for I type whse list again
7565 IF (ECR$(255,1)<>"Y" OR ECE$(298,1)="N") AND ECE$(129,1)<>" " THEN GOSUB 4200 ELSE IF ECE$(129,1)<>DIM(1) AND ECE$(115,14)=DIM(14) THEN GOSUB 4200; REM "Update p/o codes info used if not auto generating po_info.  WO191991 SSP277223, may send in po_code but not vendor_code and vendor_plant, need to populated from FM1
7566 GOSUB CLEAR_READONLY
7570 GOSUB SET_READONLY; DIM IC0$(187),IC0[40]; FIND (Z[6],KEY=ECE$(29,20),DOM=7572)IOL=0360
7571 SET_BY_IC0=1; IF DEF_DESC$="" THEN DEF_DESC$=IC0$(21,40) END_IF ; IF DEF_UM$="" THEN DEF_UM$=IC0$(120,4),DEF_QTY_UM=IC0[14] END_IF ; ECE[6]=IC0[16] ! WO237271, set carton weight from IC0
7572 GOSUB CLEAR_READONLY
7575 IF SET_BY_FM1=0 AND SET_BY_IC0=0 AND STP(ECE$(285,10),3)>"" AND TRY_ALT$<>"Y" THEN ECE$(39,10)=ECE$(285,10),TRY_ALT$="Y"; GOTO 7552 ! WO167983/167984, alternate_item_code. SSP168816
7576 IF SET_BY_FM1=0 AND SET_BY_IC0=0 THEN ECE$(11,2)="01",MESSAGE_NO=1; MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 3000; GOTO 7595; REM "if not in FM1 or IC0 then flag error
7577 GOSUB 4750; IF ITEM_OK$="N" THEN ECE$(11,2)="01",MESSAGE_NO=1; MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 3000; GOTO 7595 ! SSP173081, check secure codes as this item may have been entered via the quick products entry on the shopping cart
7578 IF STP(ECE$(67,40),3," ")="" THEN ECE$(67,40)=DEF_DESC$
7579 IF STP(ECE$(107,4),3," ")="" THEN ECE$(107,4)=DEF_UM$,ECE[1]=DEF_QTY_UM
7580 IF ECE[1]=0 THEN ECE[1]=DEF_QTY_UM
7586 ! Check for combine PO feature, set if applicable or get new PO code if ECR say so.  Original work on SSP162604, corrected on SSP167917
7587 IF ECE$(298,1)="Y" THEN GOTO *NEXT ELSE IF ECR$(255,1)<>"Y" OR ECE$(129,1)<>DIM(1) OR ECE$(298,1)="N" THEN GOTO 7595 ! SSP182696, add check of PO code on line, if already set then must be updating into to existing line, don't do any PO code logic.  WO191991, if we say Y in new field, then go on to PO logic no matter what
7588 IF SET_BY_IC0=1 THEN PROD_CODE$=IC0$(61,3),SAVE_VEND$=IC0$(82,10)
7589 IF SET_BY_FM1=1 THEN PROD_CODE$=FM1$(21,3),SAVE_VEND$=FM1$(82,10)
7590 DIM FMPT$(30); IF LEN(PROD_CODE$)>=3 THEN READ (Z[9],KEY="T"+PROD_CODE$(1,3),DOM=*NEXT)IOL=0352
7591 IF MID(FMPT$,48,1)="Y" AND POS(MID(COMBINE$,1,3)=FMPT$(2,3))=0 THEN COMBINE$=COMBINE$+FMPT$(2,3); REM " SSP# 162604                                  
7592 IF (POS(PROD_CODE$(1,3)=COMBINE$))=0 THEN GOSUB 8800; GOTO 7595
7593 IF POS(SAVE_VEND$(1,10)=VENDOR$,10)>0 THEN ECE$(129,1)=POCODE$(POS(SAVE_VEND$(1,10)=VENDOR$),1); IF ECE$(115,14)=DIM(14) THEN IF SET_BY_FM1 THEN ECE$(115,14)=MID(FM1$,82,14) ELSE ECE$(115,14)=MID(IC0$,82,14) END_IF END_IF ; GOSUB VEND_WHSE_PRT_FLGS; GOTO 7595 ELSE GOSUB 8800; VENDOR$=VENDOR$+SAVE_VEND$(1,10); POCODE$=POCODE$+ECE$(129,1)+DIM(9) ! SSP281513 check vendor for print flag override and warehouse for PL printing; 307514
7595 ITEM_CODE_END:! 238095
7597 IF ECE[0]<0 THEN ECE$(11,2)="08",MESSAGE_NO=8,MESS_INFO$[1]=STP(ECE$(39,10),2),MESS_INFO$[2]=STP(STR(ECE[0]),2); GOSUB 3000 ! 238095-Check and flag negative quantities in the shopping cart with line code "08"
7598 GOSUB 8400
7599 RETURN 
7600 REM "Do calculations for worksheet line
7603 QTY_DIVISOR=1; GOTO 7645; REM "ECE[0] should be in the correct units already so we will just set QTY_DIVISOR to one, unless compn 101, later will be a parameter.  SSP237835, removed reference to company 101, nobody know why this logic is in here, when 487 and 101 merged, issues with quantity display
7604 REM "Set qty_divisor
7605 DIM UM$(22),UM[5]; FIND (Z[13],KEY="U/M"+ECE$(107,4),DOM=7606)IOL=0430
7607 IF UM$(20,1)="Y" OR UM$(21,1)="Y" OR ECE[1]=0 THEN QTY_DIVISOR=1 ELSE QTY_DIVISOR=ECE[1]
7645 RETURN 
7650 REM "Given VALUE$ set ship via code &description
7654 ECD_IN$(188,1)=" "
7655 VALUE$=STP(VALUE$,2); IF VALUE$="" THEN GOTO 7695 ELSE IF LEN(VALUE$)>1 THEN VALUE$=VALUE$(1,1)
7660 DIM FMPS$(20); FIND (Z[9],KEY="S"+VALUE$,DOM=7695)IOL=0390
7665 ECD_IN$(188,1)=VALUE$,ECD_IN$(94,15)=FMPS$(3,15)
7695 RETURN 
7700 REM "Given VALUE$ set how to ship code & description
7704 ECD_IN$(189,1)=" ",ECD_IN$(190,15)=""
7705 VALUE$=STP(VALUE$,2); IF VALUE$="" THEN GOTO 7745 ELSE IF LEN(VALUE$)>1 THEN VALUE$=VALUE$(1,1)
7710 DIM FMPH$(20); FIND (Z[9],KEY="H"+VALUE$,DOM=7745)IOL=0391
7715 ECD_IN$(189,1)=VALUE$,ECD_IN$(190,15)=FMPH$(3,15)
7745 RETURN 
7750 REM "Given VALUE$ fill in zip code, removing any dashes
7755 P=POS("-"=VALUE$); IF P>0 THEN IF P=LEN(VALUE$) THEN VALUE$=VALUE$(1,P-1); GOTO 7755 ELSE IF P=1 THEN VALUE$=VALUE$(2); GOTO 7755 ELSE IF P<>0 THEN VALUE$=VALUE$(1,P-1)+VALUE$(P+1)
7790 ECD_IN$(321,9)=VALUE$
7795 RETURN 
7800 REM "DELETE_WORKSHEET worksheet, remove from ECD,ECE & ECF, if current worksheet then clear current worksheet info. if no worksheet # given, delete the current worksheet
7802 IF EC$[1](1318,1)="Y" THEN RETURN ! SSP#255476 - Do not allow worksheet deletion if in Edit Approval Worksheet mode 
7805 IF STP(ECD_IN$(1,10),3," ")="" THEN ECD_IN$(1,10)=EC$[1](97,10); REM "If worksheet blank, substitute current worksheet
7810 EXTRACT (Z[2],KEY=ECD_IN$(1,10),DOM=7833)IOL=0310; REM "If not found then make sure not in other files then leave SSP22993 DOM TO 7833
7820 CALL "EC3CPN;DELETE_FROM_WORKSHEET",ERR=*NEXT,X3$,X4$,ECD_IN$(1,10) ! 183445
7830 REMOVE (Z[2],KEY=ECD_IN$(1,10),DOM=7831); PROCESSWKSHEET$=ECD_IN$; REM "159048
7831 GOSUB 8100
7832 GOSUB 4000; REM "clear message lines
7833 REM "Remove from other files SSP229993 WAS 7835
7834 EEK_VAULT_ID$=""; REMOVE (Z[57],KEY=ECD_IN$(1,10),DOM=*NEXT) ! SSP229993
7836 REMOVE (Z[4],KEY=ECD$(26,10)+ECD$(11,15)+ECD$(1,10),DOM=7837)
7837 REMOVE (Z[4],KEY=ECD_IN$(26,10)+ECD_IN$(11,15)+ECD_IN$(1,10),DOM=7838); REM "Try with both ecd and ecd_in in case we didn't find ecd$
7838 READ (Z[3],KEY=ECD_IN$(1,10),DOM=7839)
7839 KEY_3$=KEY(Z[3],END=7840); IF KEY_3$(1,10)=ECD_IN$(1,10) THEN REMOVE (Z[3],KEY=KEY_3$,DOM=7839); EDSACTION$="D",PROCESSLINE$=KEY_3$(11,3); GOSUB 6850; GOTO 7839; REM "159048
7840 PROCESSWKSHEET$=""; REMOVE (Z[10],KEY=ECD$(11,15)+ECD$(40,10)+ECD$(163,5)+ECD$(1,10),DOM=7841); REM "159048
7841 REMOVE (Z[10],KEY=ECD_IN$(11,15)+ECD_IN$(40,10)+ECD_IN$(163,5)+ECD_IN$(1,10),DOM=7842); REM "try both in case we didn't find ECD record
7842 IF EC$[2](998,10)<>DIM(10) AND EC$[2](998,10)=ECD_IN$(1,10) THEN GOSUB 5800 ! SSP185932, remove saved worksheet number. WO186837, make sure worksheet being deleted is the saved one, if not then we don't want to remove it.
7843 REMOVE (Z[52],KEY=ECD_IN$(1,10),DOM=*NEXT) ! WO247495
7844 ECD_IN$(1)="",ECE_IN$(1)="",ECD$(1)="",ECE$(1)=""; REM "clear input buffers and records
7845 RETURN 
7850 REM "If worksheet # blank, but not customer req number blank then lookup worksheet number via ECJ
7855 BUYER_REQ$=EC$[1](8,15)+ECD_IN$(40,10)+ECD_IN$(163,5)
7860 READ (Z[10],KEY=BUYER_REQ$,DOM=7861)
7865 KEY_10$=KEY(Z[10],END=7895); IF KEY_10$(1,30)<>BUYER_REQ$ THEN GOTO 7895
7875 ECD_IN$(1,10)=KEY_10$(31,10); REM "Found matching req for this buyer, so use its worksheet number
7878 RETURN 
7880 REM "item_price 162539
7881 RETURNED_PRICE$=""; IF EC$[2](322,1)="Y" AND ORD_TOT_OVERRIDE$<>"Y" THEN GOTO 7895 ELSE ORD_TOT_OVERRIDE$=""; REM "153032; 192510 - Force calculation using overide flag from 8600s
7882 IF ECE$(18,1)="O" THEN DIM I[30]; REQ_DATE$=ECD$(58,6); IF STP(REQ_DATE$,3)="" THEN REQ_DATE$=X3$(15,6) END_IF ; CALL "OS2OBC",X3$,X4$,ECE$(39,10),I{ALL},ECD$(26,10)+DIM(5)+REQ_DATE$,"EC3WS1",RETURNED_PRICE,"",COST,ECE[0]; GOTO 7888
7883 IF ECE$(28,1)="S" THEN RETURNED_PRICE$=STR(ECE[2]:"###,###.00"); ITEM_PRICE=ECE[2]; IF ITEM_PRICE=-999999999 THEN RETURNED_PRICE$="      .00",ITEM_PRICE=0 END_IF ; ECE[3]=EDV_COST; RETURN ! SSP 232412
7884 IF STOCK$="Y" OR (FM1[29]=0 AND FM1[3]=0) THEN GOTO 7885 ELSE GOTO 7887 ! SSP170941
7885 GOSUB SET_READONLY; DIM IC0$(187),IC0[40]; FIND (Z[6],KEY=ECE$(29,20),DOM=*NEXT)IOL=0360; GOSUB CLEAR_READONLY; ITEM_PRICE=IC0[0]; RETURNED_PRICE$=STR(ITEM_PRICE:X3$(69,1)+"###,###.00"); GOTO 7889 ! SSP170971, price from item master
7886 GOSUB CLEAR_READONLY
7887 IF FM1(29)=0 THEN BASE_PRICE=FM1(3) ELSE BASE_PRICE=FM1(29) END_IF ; IF FM1[25]=0 THEN ITEM_PRICE=BASE_PRICE ELSE IF BASE_PRICE=0 OR FM1[4]=0 THEN ITEM_PRICE=0 ELSE IF EC_PARM$(1182,1)="Y" THEN ITEM_PRICE=BASE_PRICE ELSE ITEM_PRICE=BASE_PRICE*FM1[25]/FM1[4] END_IF END_IF END_IF ; RETURNED_PRICE$=STR(ITEM_PRICE:X3$(69,1)+"###,###.00"); GOTO 7889; REM "item_price, calculated from fms or sell price, sell u/m and alt iss #1 um. SSP182135, was checking if FM1[3]=0 and setting to 0, changed to if BASE_PRICE is 0, then set to 0. SSP244503 - when using both FMS price and first alt U/M, calc was wrong. SSP248001 - put line back to way it was prior to SSP244503. SSP248043, new parameter to associate FMS price with alternate UM quantity.
7888 IF ECE$(18,1)="O" THEN RETURNED_PRICE$=STR(RETURNED_PRICE:"###,###.00"); ITEM_PRICE=RETURNED_PRICE; ECE[2]=RETURNED_PRICE
7889 ! RETURN ! SSP 232412
7890 IF ITEM_PRICE=-999999999 OR ECE[2]=-999999999 THEN ITEM_PRICE=0,RETURNED_PRICE$="      .00" ! SSP 232412
7895 RETURN 
7900 REM "purchase order routine
7902 IF ECD$(235,8)<>DIM(8) THEN GOTO 7921; REM "if order exists -bypass creation
7903 GOSUB DO_OVERBUDGET_CHECKS ! WO 242686 - Perform overbudget checks and processing
7904 APPROVAL_ORDER$="N"; IF APPROVAL_PURCHASE$="Y" OR EC$[2](868,1)="Y" OR EC_PARM$(946,1)<>"Y" OR CC_REQUIRED$="Y" THEN GOTO *NEXT ELSE GOSUB 8600; IF STP(APPROVAL_LINES$,3)>"" THEN HDR_FILE$="To Aprvl",ECD$(235,8)=HDR_FILE$; APPROVAL_ORDER$="Y"; GOTO 7913; REM "order/approval 148750 ". SSP180412, was checking for no NONAPPROVAL_LINES$, but there could be some of each, so check for at least one APPROVAL_LINES$ line number being set, if so then it's an approval order.WO242686-If cc required flag is on, then kick over to credit card ordering mode
7905 IF ECD$(235,8)<>DIM(8) THEN GOTO 7921; REM "if order exists -bypass creation
7906 IF STP(ECD$(168,20),3," ")="" THEN ECD$(168,20)=ECD$(11,15); REM "If ordered by not set, then put in buyer id. SSP166022, was setting with EC$[1](8,15), changed to ECD$(11,15), if this is purchase approval, was setting to purchasing agent rather than original buyer.
7907 IF STP(ECD$(40,10)+ECD$(163,5),3," ")="" THEN ECD$(40,10)=EC$[2](307,10),ECD$(163,5)=EC$[2](317,5); REM "If cust p/o blank add in default cust/po from buyer info ssp#124432
7908 IF NUL(ECD$(58,6)) THEN GOSUB SYSTEM_DATE; ECD$(58,6)=SYSTEM_DATE$ END_IF ; ORIG_ECD$=ECD$,ECD$(40,10)=FN%CVT4$(ECD$(40,10)),ECD$(163,5)=FN%CVT4$(ECD$(163,5)) ! 299049, SSP307202 DBD-66 current system date for requisition date
7910 IF EC$[2](338,1)="Y" THEN HDR_FILE$="9999zzzz",ECD$(235,8)=HDR_FILE$,BASIC2_OK$="N"; IF STP(TESTING_TEMPLATE$,3)>"" THEN TEMPLATE$=TESTING_TEMPLATE$; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},TEMPLATE$; REM "buyer set for testing, ssp 146555. SSP173332, use testing_template if set, needed for 524, they use EC3OS1 for order confirmation but that won't work if in testing mode.
7913 IF STP(ECD3$,3)>"" THEN ECD$(1185,396)=PAD(ECD3$,396) END_IF ; WRITE (Z(2),KEY=ECD$(1,10))IOL=0310; IF STP(EEK_VAULT_ID$,2)>"" THEN GOSUB WRITE_EEK END_IF ; IF EC$[2](338,1)="Y" THEN GOTO 7980 ELSE IF EC_PARM$(946,1)="Y" AND APPROVAL_ORDER$="Y" THEN GOTO 7980; REM "testing flag ck / or no non-approval lines.  WO179030, set field in ECD$ for 2nd range of PO codes. SSP229993      
7915 PERFORM "EC3EEF;CHECK_FOR_COMPANIONS" ! SSP268892
7916 PERFORM "EC3EEF;CHECK_RELEASE_SHIPPING" ! 272505 - Releases from warehouse can only support one special shipment per order line, split ships not allowed
7920 CALL "EC3OE0",X3$,X4$,EC_PARM$,EC${ALL},ECD$(1,10),RET; READ (Z[2],KEY=ECD$(1,10))IOL=0310; ECD3$=STP(ECD$(1185,396),1); REM "create order and reload ECD$ information.  WO179030, set ECD3$ for 2nd range of PO codes
7922 IF ECD$(235,8)<>DIM(8) AND ECD$(235,8)<>"No Order" AND ECD$(235,8)<>"To Aprvl" THEN GOSUB RETRIEVE_EEJ; IF FMN_NOTE$="Y" THEN FMN_ORDER$=ECD$(235,8) ! SSP263818, put logic in EC3OE0 to retrieve EEJ and write to OFF so OF2UAA will write the FMN records, resolve timing issue with repeat record FT6 not being created. CALL "UPDFMN;ADD_FROM_WEBEC",ERR=*NEXT,FMN_ORDER$,FMN1$,FMN2$,FMN3$,FMN4$,FMN5$,FMN6$,FMN7$,FMN8$,FMN9$,FMN10$ ! WO247495.  SSP252671, add check to make sure it's a real order at this point
7923 IF ECD$(235,8)<>DIM(8) AND ECD$(235,8)<>"No Order" THEN IF HAVE_ORDER_LINE_ID_3P$="Y" THEN GOSUB WRITE_EEG END_IF ; GOSUB RETRIEVE_EEP; IF EEP_3P$="Y" THEN GOSUB WRITE_EEE ! WO224137, WO234315, WO303296
7924 IF ECD$(235,8)<>DIM(8) AND ECD$(235,8)<>"No Order" AND ECD$(235,8)<>"To Aprvl" THEN GOSUB RETRIEVE_EEJ; IF FV1$="Y" THEN CALL "OPGFV1;OPEN_WRITE_CLOSE_FV1",X3$,X4$,ECD$(235,8),ECD$(1,10),OCR1$,OCR2$,OCR3$,OCR4$,OCR5$,OCR6$,OCR7$,OCR8$,OCR9$,OCR10$,OPGFV1_MSG$; IF STP(OPGFV1_MSG$)>"" THEN MX=FN%_LOG_MESSAGE_WITH_FLUSH("MESG",OPGFV1_MSG$) END_IF ; GOSUB READ_AR1; IF MID(AR1$,499,4)<>DIM(4) THEN GOSUB CALL_SH2EXP ! WO245891, FV1 Order Customer References.  WO247495. WO248159, check for cust parms, if set call SH2EXP to write SH9 with FV1 data. SSP252671, add check for To Aprvl
7925 %DISPLAY_ORDER$=ECD$(235,8) ! WO168683
7928 IF NOT(NUL(ECD$(235,8))) AND (ECD$(507,1)<>"Y" OR CCACTION$="I" OR CCACTION$="O" OR (ECD$(507,1)="Y" AND EC$[7](597,1)="Y")) THEN GOSUB PROCESS_VENDOR_EMAILS; GOSUB PROCESS_COUPON; IF ECD$(411,4)<>DIM(4) THEN GOSUB UPDATE_FS1 END_IF ; IF EC_PARM$(1180,1)="Y" AND ECD$(235,8)<>"No Order" THEN CALL "EC3OS3",X3$,X4$,ECD$(235,8),EC3OS3_OTHER$ END_IF ! 174532 - if we have an order and this is not credit card or it is credit card but is "I" type action then see if variable print vendor emails needed, 177733 - Check to see if coupon needed and update coupon balance,ssp198208 - "O" type action also sends email, 221159. SSP224985 - update FS1 with cc type. WO233389, generate request for 3rd party order confirmation
7930 REM "ck if credit card purchase
7932 IF ECD$(507,1)<>"Y" THEN GOTO 7984; REM "if order not credit card purchase then skip 159819
7933 IF EC_PARM$(950,1)="Y" THEN GOTO 7980; REM "161190 - cc capture only (no ccaction)
7937 REM "determine credit card action
7938 REM "**IF ECD$(508,1)=" " THEN CCACTION$="C"; REM "if no action yet taken then set to create
7939 BASIC2_OK$="N"; ON POS(CCACTION$="CDI")-1 GOTO 7940,7950,7960 ! WO168683, added BASIC2_OK$ setting, if doing ccaction then don't leave this program to fill out template
7940 REM "create temp invoice
7943 GOSUB 7000; GOTO 7975
7950 REM "delete temp invoice
7952 GOSUB 7000; GOTO 7975
7960 REM "invoice the temp invoice
7962 GOSUB 7000; GOTO 7975
7975 REM "get invoice information
7977 GOSUB 7050
7980 REM "transaction completed? (close worksheet/send email)
7982 IF ECD$(507,1)<>"Y" THEN GOTO 7984 ELSE IF (EC_PARM$(950,1)="Y" OR EC$[7](597,1)="Y") AND ECD$(507,1)="Y" THEN GOTO 7984; REM "161190 cc capture only - no ccaction, 221159
7983 IF ECD$(508,1)<>"I" AND ECD$(508,1)<>"O" THEN GOTO 7990; REM "if ccpurchase not invoiced then not complete, spp198208 - "O" indicates order complete
7984 IF ECD$(676,1)="Y" THEN SNDEMAIL$="N" ELSE SNDEMAIL$="Y"; IF NOT(NUL(ECD$(235,8))) THEN IF CCACTION$="" OR POS(CCACTION$=" IO")<>0 OR ECD$(507,1)<>"Y" THEN EXTRACT (Z[2],KEY=ECD$(1,10),DOM=*NEXT)IOL=0310; ECD$(676,1)="Y"; WRITE (Z[2],KEY=ECD$(1,10))IOL=0310
7985 IF NOT(NUL(ECD$(235,8))) AND SNDEMAIL$="Y" THEN REQUESTED_EMAIL_ACTION$="O"; IF CCACTION$="" OR POS(CCACTION$=" IO")<>0 OR ECD$(507,1)<>"Y" THEN GOSUB 8550; REM "Send 'O'rder emails if needed - ssp 146930 - only send email if no credit card or if credit card action is to do final invoicing
7986 REM "Clear current worksheet # in session record on disk & in memory
7987 EC$[1](97,10)="",EC$[1](1178,20)=""; EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=7987)ECB$
7988 ECB$(97,10)="",ECB$(1178,20)=""; WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
7998 RETURN 
8000 REM "take Q$, try to figure out date and return in Q$
8001 REM "assume MM?DD?YY(YY) format where we don't care about ?'s. if only YY then pivot on 60
8004 IF LEN(Q$)=7 AND Q$(2,1)="/" THEN Q$="0"+Q$; REM "135234
8005 IF LEN(Q$)<6 THEN GOTO 8045 ELSE IF LEN(Q$)>=8 THEN Q$=Q$(1,2)+Q$(4,2)+Q$(7); IF LEN(Q$)>8 THEN Q$=Q$(1,8)
8009 REM "NOW in MMDDYY.. format
8010 IF LEN(Q$(5))>2 THEN YY$=Q$(5) ELSE IF Q$(5)<"60" THEN YY$="20"+Q$(5) ELSE YY$="19"+Q$(5)
8015 TMP$=Q$,Q$=DIM(6),Q$=CHR(NUM(YY$(1,3),ERR=8016)-125,ERR=8016)+YY$(4,1)+TMP$(1,4); REM "135884
8045 RETURN 
8050 REM "New order, get new worksheet number
8055 DIM ECTMP$(256); EXTRACT (Z[13],KEY=X3$(9,3)+"E/C",DOM=8056)ECTMP$
8057 IF STP(ECTMP$(115,10),3," ")="" THEN ECD_IN$(1,10)=DIM(9,"0")+"1",ECTMP$(115,10)=DIM(9,"0")+"2" ELSE ECD_IN$(1,10)=ECTMP$(115,10),ECTMP$(115,10)=STR(NUM(ECTMP$(115,10))+1:"0000000000") END_IF ; WRITE (Z[13],KEY=X3$(9,3)+"E/C")ECTMP$
8060 FIND (Z[2],KEY=ECD_IN$(1,10),DOM=8061); GOTO 8055; REM "if already exists then try another number
8065 EC$[1](97,10)=ECD_IN$(1,10); EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=8067)ECB$
8066 ECB$(97,10)=ECD_IN$(1,10); WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
8095 RETURN 
8100 REM "Clear current worksheet
8105 EC$[1](97,10)="",EC$[1](1178,20)=""; EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=8111)ECB$
8110 ECB$(97,10)="",ECB$(1178,20)=""; WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$
8115 REM "Default values in ECD$ for display etc.
8120 DIM ECD$(1580),ECD[1],ECE$(499),ECE[1]; ECD3$=""
8125 ECD$(26,14)=EC$[2](51,14); REM "Set customer & ship to from buyer
8126 GOSUB SET_READONLY; DIM FMPD$(243); FIND (Z[9],KEY="D"+ECD$(26,10),DOM=8127)FMPD$ ! SSP191723, add READONLY
8127 IF STP(ECD$(36,4),3," ")="" THEN ECD$(36,4)=EC$[1](1167,4); REM "if blank, set from active shipto on session record ssp# 154600
8130 DIM FM0$(618); READ (Z[8],KEY="C"+ECD$(26,14),DOM=8131)IOL=0380
8132 ECD$(243,87)=FM0$(51,87); IF FM0$(248,35)<>DIM(35) THEN ECD$(376,35)=FM0$(248,35) ELSE ECD$(376,35)=FM0$(16,35)
8133 REM "** what is this? removed with 154600 **IF FM0$(284,4)<>DIM(4) THEN ECD$(36,4)=FM0$(284,4); REM "set warehouse from shipto if not blank
8134 ECD$(1179,2)=FM0$(380,2) ! SSP307429-DBD319 Country
8135 GOSUB CLEAR_READONLY
8140 CLOSE (1005)
8141 ROTMP_FILE$=FILE_PATH$+"TRO"+WORKSHEET$
8142 IF APPROVAL_ORDER$<>"Y" THEN ERASE ROTMP_FILE$,ERR=8143 ! SSP247956, if this is an order going for approval then don't erase because if order approved later we need this.
8145 RETURN 
8150 REM "Send LINE$ to EC3BYB for generic fields processing
8160 CALL "EC3BYB",ERR=8161,X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,LINE$,BYBINFO${ALL},BYBOPTIONS$,100
8195 RETURN 
8200 REM "DELETE_LINE, delete a single line given DEL_INDEX. We expect the corresponding line number in ECE_IN_DATA$[] array in (25,3).If line_number not given, don't delete anything.
8202 MASTER_TO_DELETE$=ECE_IN_DATA$[DEL_INDEX](25,3)
8205 IF NUM(ECE_IN_DATA$[DEL_INDEX](25,3),ERR=8245)=0 THEN GOTO 8245
8206 IF STP(ECD_IN$(1,10),3," ")="" THEN ECD_IN$(1,10)=EC$[1](97,10); REM "If worksheet blank, substitute current worksheet
8207 IF EC$[7](292,1)="Y" AND ECE$(296,1)<>"Y" THEN GOSUB 4440
8210 REMOVE (Z[3],KEY=ECD_IN$(1,10)+ECE_IN_DATA$[DEL_INDEX](25,3),DOM=8211); DELETED_LINES$+=ECE_IN_DATA$[DEL_INDEX](25,3),PROCESSLINE$=ECE_IN_DATA$[DEL_INDEX](25,3),EDSACTION$="D"; GOSUB 6850; IF EC$[1](1318,1)="Y" THEN GOSUB LOG_APPR_LINE_DELETE; REM "159048.  SSP167489, added DELETED_LINES$ logic; SSP255476 - If line was deleted in edit approval worksheet mode add message to approval log
8211 WLINE$=ECD_IN$(1,10)+ECE_IN_DATA$[DEL_INDEX](25,3); READ (Z(24),KEY=WLINE$,DOM=8212); REM "154319 - multiple message lines
8212 WLINEKEY$=KEY(Z(24),END=8213); IF WLINEKEY$(1,LEN(WLINE$))<>WLINE$ THEN GOTO 8213 ELSE REMOVE (Z(24),KEY=WLINEKEY$); GOTO 8212; REM "154319 - multiple message lines
8213 REMOVE (Z[22],KEY=WLINE$,ERR=*NEXT) ! SSP 229612, Remove VP line in EC7 if exists
8214 GOSUB REMOVE_EEL ! DBD-191-DBSPT-117328-SSP307365 MULTIPLE SEQUENCES SUPPORT REMOVE (Z[58],KEY=WLINE$+"01",ERR=*NEXT) ! SSP290559, remove EEL record if exists
8215 WORKSHEET$=ECD_IN$(1,10); REM "Update worksheet number used in display
8216 REMOVE (Z[62],KEY=WLINE$,ERR=*NEXT) ! WO300154, remove EEO record if exists
8217 READ (Z[3],END=8245)NEXT_LINE$
8218 IF NEXT_LINE$(1,10)<>ECD_IN$(1,10) THEN GOTO 8245
8219 IF NEXT_LINE$(259,3)=MASTER_TO_DELETE$ THEN DELETE_LINE[DEL_INDEX]=NUM(NEXT_LINE$(25,3)) ELSE GOTO 8245
8220 ECE_IN_DATA$[DEL_INDEX](25,3)=NEXT_LINE$(25,3)
8225 GOTO 8205
8245 RETURN 
8246 REM "get fm1 record
8247 GOSUB SET_READONLY; STOCK$="N"; DIM FM1$(449),FM1(31); READ (Z(7),KEY=ECE$(29,20),DOM=8248)IOL=0370; IF EC$[7](598,1)="Y" THEN FM1(29)=FM1(3); GOTO 8249 ELSE GOTO 8249; REM "162539. SSP186391, added reset of STOCK$ to N, if coming to 8248 from 7560, was set for last item. SSP236926 - set READONLY
8248 STOCK$="N"; READ (Z(7),KEY=EC$[2](51,10)+ECE$(39,10),DOM=8249)IOL=0370; IF FM1$(105,1)="Y" THEN STOCK$="Y" ! SSP170971
8249 GOSUB CLEAR_READONLY; RETURN ! SSP236926 - clear READONLY 
8250 REM "Reads for a worksheet line
8265 DIM EC7$(200),EC7[1]; EC7$(1,13)=ECE$(1,10)+ECE$(25,3); REM "Worksheet #, line #
8270 FIND (Z[22],KEY=EC7$(1,13),DOM=8271)IOL=0420
8275 GOSUB SET_READONLY; DIM FM1$(449),FM1[31]; FM1$(1,20)=ECE$(29,20); FIND (Z[7],KEY=ECE$(29,20),DOM=*NEXT)IOL=0370
8277 DIM IC0$(187),IC0[40]; IC0$(1,20)=ECE$(29,20); FIND (Z[6],KEY=ECE$(29,20),DOM=*NEXT)IOL=0360 ! WO184982
8280 DIM ECR$(1000); FIND (Z[25],KEY=ECE$(29,20),DOM=*NEXT)IOL=0450 ! SSP#153121
8285 GOSUB CLEAR_READONLY
8287 IF POS(ECE$(28,1)="CI")>0 THEN GOSUB 5700 ! WO184982, get inventory figures
8295 RETURN 
8300 REM "Retreive 1 or more values in VALUE$ place in VAL$[] and set VAL_COUNT-Values seperated by ', 's (that is comma + blank), current max of 200 values, 132667
8301 REM "We will add all values blank or not
8305 DIM VAL$[2000]; VAL_COUNT=0
8310 IF VAL_COUNT=2000 THEN GOTO 8340 ELSE VP=POS(", "=VALUE$); IF VP=0 THEN GOTO 8335
8315 VAL_COUNT=VAL_COUNT+1; IF VP=1 THEN VAL$[VAL_COUNT]="",VALUE$=VALUE$(3); GOTO 8310 ELSE VAL$[VAL_COUNT]=VALUE$(1,VP-1); IF VP=LEN(VALUE$) THEN VALUE$=""; GOTO 8340 ELSE VALUE$=VALUE$(VP+2); GOTO 8310
8335 REM "finish up last one
8337 VAL_COUNT=VAL_COUNT+1; VAL$[VAL_COUNT]=VALUE$
8340 IF VAL_COUNT>HIGHEST_VAL_COUNT THEN FOR TMP_INDEX=HIGHEST_VAL_COUNT+1 TO VAL_COUNT; ECE_IN_DATA$[TMP_INDEX]=DIM(LEN(ECE_IN$)); NEXT TMP_INDEX; HIGHEST_VAL_COUNT=VAL_COUNT; REM "If new higher val count value then initialize corresponding strings in ECE_IN_DATA$[]
8345 RETURN 
8350 REM "ck to see if worksheet line to be printed
8352 ORDER_MESSAGE_NO=0; DIM ECX$(512); IF STP(ECE_IN$(11),3," ")="" THEN GOTO 8393 ELSE IF NUM(ECE$(11,2))=0 THEN GOTO 8380; REM "159048
8353 DIM MSGKEY$(25),MSGTMP$(512); MSGKEY$(1,10)=ECD$(26,10),MSGKEY$(11,10)="EC3WS1",MSGKEY$(21,5)=STR(NUM(ECE$(11,2)):"00000"); FIND (Z[17],KEY=MSGKEY$,DOM=8354)MSGTMP$; GOTO 8356
8354 MSGKEY$(1,10)=DIM(10); FIND (Z[17],KEY=MSGKEY$,DOM=8380)MSGTMP$
8356 IF MSGTMP$(301,1)="Y" THEN ORDER_MESSAGE_NO=MESSAGE_NO; GOSUB 3000; WROTE_MSG$="Y"; GOSUB ADD_MSG_TO_LOG ! 166502
8357 IF MSGTMP$(300,1)="Y" THEN ORDER_MESSAGE_NO=MESSAGE_NO,ORDER_MESSSAGE$=MESSAGE$; GOTO 8370 ELSE ORDER_MESSAGE_NO=MESSAGE_NO,ORDER_MESSAGE$=MESSAGE$; REM "ck flag to prevent order line addition /166502
8358 IF MSGTMP$(27,1)="Y" THEN ECE[0]=0 ELSE IF MSGTMP$(302,1)="Y" THEN ECE(0)=INT(QTYREMAIN/ECE(1)); GOSUB 7300; REM "add line but zero quantity(27,1) or (302,1) change qty to qty reamining below max. SSP218034, if changing qty for order max, need to do GOSUB 7300 to recalculate QTY_IN_EACHES used in avail check.
8359 IF MSGTMP$(28,1)="Y" THEN ECE$(295,1)="Y"; REM "if set to remove at purchase then add to ECE line. SSP168408, was ECE$(228,1), but in pvx 228,20 used for item code starting with SSP146902
8368 GOTO 8380
8370 REMOVE (Z[3],KEY=ECE$(1,10)+ECE$(25,3),DOM=8393); EDSACTION$="D"; GOSUB 6850; GOTO 8393; REM "159048
8380 GOSUB 8500; GOSUB UPDATE_3P_MULTI_INFO; GOSUB WRITE_EEL2; GOSUB WRITE_EEQ; GOSUB 2400; IF NOT(NUL(ECE$(25,3))) THEN WRITE (Z(3),KEY=ECE$(1,10)+ECE$(25,3))IOL=0330; IF MAKE_RLINE$="Y" AND ECE$(248,10)<>DIM(10) THEN GOSUB 5650 END_IF ; IF MAKE_RLINE$="Y" THEN GOSUB RETRIEVE_SAVED_EEL; REM "159048, SSP166502 191069 2400 WILL CAUSE THE TOPS PRINT ON FLAGS TO BE SET PROPERLY. SSP194841, if we have a message, we are writing ECE here, so do check then if in retrieve saved worksheet mode, see if we need to write out the proof record. 233818, 290559, 307244-DBD-88, DBD-191-DBSPT-117328-SSP307365
8381 IF WROTE_MSG$="Y" THEN WROTE_MSG$="N" ELSE GOSUB 3000
8383 REM "write message to EC0 file
8384 IF ORDER_MESSAGE_NO=0 THEN GOTO 8393
8385 DIM EC0$(295); EC0$(1,10)=ECE$(1,10),EC0$(11,3)=ECE$(25,3),EC0$(14,3)="001",EC0$(17,10)="EC3WS1",EC0$(27,5)=STR(MESSAGE_NO:"00000")
8386 EC0$(32,240)=MESSAGE$,EC0$(272,4)=ECO$(26,4)
8389 READ (Z[24],KEY=EC0$(1,16),DOM=8390)EC0_CHECK$; IF EC0_CHECK$(1,13)=EC0$(1,13) AND EC0_CHECK$(27,5)=EC0$(27,5) THEN GOTO 8393 ! SSP172218, if we already have a message for this worksheet line with the same message number then don't write another one.
8390 WRITE (Z[24],KEY=EC0$(1,16),DOM=8391)EC0$; GOTO 8393
8391 EC0$(14,3)=STR(NUM(EC0$(14,3))+1:"000"); GOTO 8389
8393 MESSAGE_NO=0,MESSAGE$=""
8395 RETURN 
8400 REM "ck other things about the product to see if message required (messages > "00002"
8401 ACTIVE_LINE_MESSAGES$=""; IF MESSAGE_NO<>0 THEN GOTO 8495 ELSE DIM MESS_INFO$[20]; REM "if message situation already exists (invalid item) then don't check for further situations / 148750
8402 DIM CHANNELS[4]; CHANNELS[1]=Z[19],CHANNELS[2]=Z[20],CHANNELS[3]=Z[21],CHANNELS[4]=Z[25]
8403 DIM OPTIONS$(20),USAGE_KEYS$(10); OPTIONS$(1,1)="O",OPTIONS$(4,1)=FM1$(105,1); IF EC$[7](586,1)="Y" THEN OPTIONS$(2,1)="B",USAGE_KEYS$(7,4)=ECD$(36,4) ELSE OPTIONS$(2,1)="I"; REM "ck if order maximums activated on customer parms - if so request usage figures ! ssp#153083
8404 IF STP(ECE$(39,10),3," ")="" THEN GOTO 8445; REM "no item code entered
8405 DIM IC1INFO[1],FM3[1],FM3ALL[1],FM4[1],FM4ALL[1],FORM_OTHER[1],FORM_OTHERALL[1]; REM "need to set dimensions to avoid err 42 on call - EC3IC0 dimensions to necessary sizes
8406 OPTIONS$(6,10)=FM1$(185,10) ! ssp# 153083
8407 IC0_ITEM_KEY$=ECE$(29,20)
8408 GOSUB 7300 ! SSP185470, get QTY_IN_EACHES to use instead of ECE[0]*ECE[1] since the u/m may be thousands and parm may be set to suppress extending.
8410 CALL "EC3IC0",X3$,X4$,EC_PARM$,EC${ALL},IC0_ITEM_KEY$,USAGE_KEYS$,CHANNELS{ALL},IC1INFO{ALL},FM3{ALL},FM3ALL{ALL},FM4$,FM4{ALL},FM4ALL{ALL},FORM_OTHER{ALL},FORM_OTHERALL{ALL},OPTIONS$
8411 APPROVAL_MESSAGE_SET$="N"; IF APPROVAL_PURCHASE$="Y" THEN GOTO *NEXT END_IF ; IF EC$[7](593,1)="A" AND EC$[2](868,1)<>"Y" THEN APPROVAL_MESSAGE_SET$="Y",ECE$(11,2)="60",MESSAGE_NO=60,ECE$(19,1)="Y"; IF ECE[1]=0 THEN QTYPERSELL=1 ELSE QTYPERSELL=ECE[1] END_IF ; DIM MESS_INFO$[20]; MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 8350; REM "Set message, 1=itemcode 148750
8413 ON_HAND=IC1INFO[30],IC1_AVAIL=IC1INFO[31],IC1_BO=IC1INFO[11]; IF ECE[1]=0 OR (ECE$(107,4)=THOUSANDS$ AND EC_PARM$(948,1)="Y") THEN IC1_AVAIL_UM=IC1_AVAIL ELSE IC1_AVAIL_UM=IC1_AVAIL/ECE[1] ! SSP185470, if u/m is thousands and parm says suppress extending, then use avail. Was line 8435, moved to 8413, order max was using these vars, but not set yet when line was at 8435.
8414 IF BUDGET_ENABLED$="Y" THEN GOSUB APPLY_BUDGET; IF ECE$(11,2)="21" THEN GOTO 8495 ! WO 215368 - Check if above budget. Err 21 if audit kicks in, other messages do not apply so bypass
8415 REM "order maximum check
8416 IF EC$[7](586,1)<>"Y" OR EC$[2](87,1)="Y" OR MID(FM0$,601,1)="Y" THEN GOTO 8434 ELSE IF NUM(EC$[7](591,2))=0 THEN MAX_MULT=1 ELSE MAX_MULT=NUM(EC$[7](591,2)) END_IF ; REM "bypass if a) not activated on customer parm 586,1  b) overriden on buyer record 87,1/(ssp 154319 max_mult). WO176437, ignore max by shipto
8417 PERCENT_AMU=NUM(EC$[2](229,4))/100; IF FM4[10]=0 AND NUM(ECR$(520,8))=0 AND PERCENT_AMU=0 THEN GOTO 8434; REM "if all max limits zero then bypass max ck
8418 LOC_MONTHLY_MAX=FM4[10]; IF LOC_MONTHLY_MAX=0 THEN LOC_MONTHLY_MAX=NUM(ECR$(520,8)) END_IF ; IF LOC_MONTHLY_MAX=0 THEN LOC_MONTHLY_MAX=FM4[0]*PERCENT_AMU
8419 LOC_ONORDER_QTY=0,LOC_ONORDER_QTY_STOCK=0; DIM XXX(20); CALL "FM2UZR",X3$,ECE$(29,20),"C"+ECD$(36,4),0,0,0,0,LOC_ONORDER_QTY,0,XXX{ALL},ECD$(26,10); REM "get on order qty for location - 135041. SSP175399, pass in customer code to make sure any orders found are for this customer
8420 ORDER_QTY=QTY_IN_EACHES; IF (ORDER_QTY+FM4(4)+FM4(5)+LOC_ONORDER_QTY)<=(LOC_MONTHLY_MAX*MAX_MULT) THEN GOTO 8434 ELSE QTYREMAIN=(LOC_MONTHLY_MAX*MAX_MULT)-(FM4(4)+FM4(5)+LOC_ONORDER_QTY); IF QTYREMAIN<0 THEN QTYREMAIN=0 ! SSP185470
8422 INT_MASK$="-#,###,##0",DEC_MASK$="-#,###,##0.00" ! SSP185470
8423 ECE$(11,2)="05",MESSAGE_NO=5; IF ECE[1]=0 OR (ECE$(107,4)=THOUSANDS$ AND EC_PARM$(948,1)="Y") THEN QTYPERSELL=1 ELSE QTYPERSELL=ECE[1] END_IF ; MESS_INFO$[1]=STP(ECE$(39,10),2),MESS_INFO$[2]=STP(STR(IC1_AVAIL:INT_MASK$),2),MESS_INFO$[3]=STP(STR(QTY_IN_EACHES:INT_MASK$),2),MESS_INFO$[4]=STP(STR(IC1_AVAIL-QTY_IN_EACHES:INT_MASK$),2),MESS_INFO$[5]=STP(ECE$(107,4),2),MESS_INFO$[6]=STP(STR(ECE[1]:INT_MASK$),2),MESS_INFO$[10]=STP(STR(LOC_MONTHLY_MAX*MAX_MULT:INT_MASK$),2); OMAX_SU=LOC_MONTHLY_MAX*MAX_MULT/QTYPERSELL; IF FPT(OMAX_SU)=0 THEN MESS_INFO$[11]=STP(STR(OMAX_SU:INT_MASK$),2) ELSE MESS_INFO$[11]=STP(STR(OMAX_SU:DEC_MASK$),2); REM "Set message, 1=itemcode, 2=qty avail/eaches 3=qty ordered eaches, 4=qty remaining eaches,5=u/m,6=qty per u /m  10=location ordering max in eaches  11=ordering max in selling units 12=order max less mtd shipments.  SSP185470
8424 IF FPT(IC1_AVAIL_UM)=0 THEN MESS_INFO$[7]=STP(STR(IC1_AVAIL_UM:INT_MASK$),2) ELSE MESS_INFO$[7]=STP(STR(IC1_AVAIL_UM:DEC_MASK$),2) END_IF ; MESS_INFO$[8]=STP(STR(ECE[0]:INT_MASK$),2),MESS_INFO$[13]=STP(STR(QTYREMAIN/QTYPERSELL:DEC_MASK$),2); TMPQTY=IC1_AVAIL_UM-ECE[0]; IF FPT(TMPQTY)=0 THEN MESS_INFO$[9]=STP(STR(TMPQTY:INT_MASK$),2) ELSE MESS_INFO$[9]=STP(STR(TMPQTY:DEC_MASK$),2) END_IF ; REM "7=qty avail/in um, 8=qty ordered in um, 9=calculated remaining inventory in um, 13=max reamin in um.  SSP185470
8425 MESS_INFO$[12]=STP(STR(QTYREMAIN:INT_MASK$),2); TMPQTY=QTYREMAIN/QTYPERSELL; IF FPT(TMPQTY)=0 THEN MESS_INFO$[13]=STP(STR(TMPQTY:INT_MASK$),2) ELSE MESS_INFO$[13]=STP(STR(TMPQTY:DEC_MASK$),2) END_IF ; MESS_INFO$[14]=STP(STR(MAX_MULT:INT_MASK$),2); REM "12-max remain in eaches, 13=max remain in sellum, 14=number of months total max accumulated over
8428 ! GOSUB 8350; REM "154319 - multiple messages.  SSP166022, moved to 8429, and only do if not PA situation.
8429 IF APPROVAL_MESSAGE_SET$<>"Y" AND EC$[2](868,1)<>"Y" AND EC$[7](593,1)="Y" AND EC$[7](595,1)="Y" THEN GOTO 8430 ELSE GOSUB 8350; GOTO 8433; REM "148750- only generate message if over max and not other situations.  SSP166022, moved GOSUB 8350 from 8428 to 8429 and only do it if we will not be using message 00062 for PA, want to only display one message, not both.
8430 APPROVAL_MESSAGE_SET$="Y",ECE$(11,2)="62",MESSAGE_NO=62,ECE$(19,1)="Y"; IF ECE[1]=0 THEN QTYPERSELL=1 ELSE QTYPERSELL=ECE[1] END_IF ! DIM MESS_INFO$[20]; MESS_INFO$[1]=STP(ECE$(39,10),2); REM "Set message, 1=itemcode 148750. SSP166022, don't DIM MESS_INFO$, want to have all those set for message 00005 to apply here
8431 GOSUB 8350; REM "148750
8433 REM "ck availability
8434 IF ECR$(255,1)="Y" OR ECE$(298,1)="Y" OR ECE$(129,1)<>DIM(1) THEN ECE$(11,2)="07",MESSAGE_NO=7,MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 8350; GOTO 8445; REM "If p/o item then skip avail checks. WO186506, create message 00007 if item set to create PO. WO191991. SSP224259, changed GOSUB 3000 to GOSUB 8350. SSP277030, if PO code not blank (SB) then skip avail checks.
8436 REORDER_CK_POINT=IC1INFO[32]; REM " SSP 161117
8437 IF QTY_IN_EACHES<=IC1_AVAIL THEN GOTO 8445; REM "adequate stock.  SSP185470
8438 IF IC1_AVAIL<=0 THEN ECE$(11,2)="03",MESSAGE_NO=3,ACTIVE_LINE_MESSAGES$=ACTIVE_LINE_MESSAGES$+"03"; MESS_INFO$[1]=ECE$(39,10) ELSE ECE$(11,2)="04",MESSAGE_NO=4,ACTIVE_LINE_MESSAGES$=ACTIVE_LINE_MESSAGES$+"04"; REM "not enough stock & 154319 multiple message lines / 148750
8439 REM "IF here then ic1_avail>0 (or 8418 sends to 8445) and ece[0]*ece[1]>ic1_avail (or 8437 sends to 8445)
8440 INT_MASK$="#,###,###",DEC_MASK$="#,###,###.00"
8441 MESS_INFO$[1]=STP(ECE$(39,10),2),MESS_INFO$[2]=STP(STR(IC1_AVAIL:INT_MASK$),2),MESS_INFO$[3]=STP(STR(QTY_IN_EACHES:INT_MASK$),2),MESS_INFO$[4]=STP(STR(IC1_AVAIL-QTY_IN_EACHES:INT_MASK$),2),MESS_INFO$[5]=STP(ECE$(107,4),2),MESS_INFO$[6]=STP(STR(ECE[1]:INT_MASK$),2); REM "Set message, 1=itemcode, 2=qty avail/eaches 3=qty ordered eaches, 4=qty remaining eaches,5=u/m,6=qty per u /m ; REM "158856.  SSP185470
8442 IF FPT(IC1_AVAIL_UM)=0 THEN MESS_INFO$[7]=STP(STR(IC1_AVAIL_UM:INT_MASK$),2) ELSE MESS_INFO$[7]=STP(STR(IC1_AVAIL_UM:DEC_MASK$),2) END_IF ; MESS_INFO$[8]=STP(STR(ECE[0]:INT_MASK$),2); TMPQTY=IC1_AVAIL_UM-ECE[0]; IF FPT(TMPQTY)=0 THEN MESS_INFO$[9]=STP(STR(TMPQTY:INT_MASK$),2) ELSE MESS_INFO$[9]=STP(STR(TMPQTY:DEC_MASK$),2) END_IF ; REM "7=qty avail/in um, 8=qty ordered in um, 9=calculated remaining in um.  SSP185470
8443 GOSUB 8350; REM "154319 - multiple messages per line
8444 ! GOTO 8495; REM "Done with setting messages for EC3WS1-00004 error, so leave
8445 REM "order approval variable print check
8446 IF APPROVAL_PURCHASE$="Y" THEN GOTO 8449 END_IF ; IF APPROVAL_MESSAGE_SET$<>"Y" AND EC$[2](868,1)<>"Y" AND EC$[7](593,1)="Y" AND EC$[7](594,1)="Y" THEN THREEPKEY$=ECE$(248,10); GOSUB 4130 ELSE GOTO 8448
8447 IF EC6$(261,1)<>"V" THEN GOTO 8448 ELSE APPROVAL_MESSAGE_SET$="Y",ECE$(11,2)="61",MESSAGE_NO=61,ECE$(19,1)="Y"; IF ECE[1]=0 THEN QTYPERSELL=1 ELSE QTYPERSELL=ECE[1] END_IF ; DIM MESS_INFO$[20]; MESS_INFO$[1]=STP(ECE$(39,10),2); GOSUB 8350; REM "Set message, 1=itemcode 148750
8449 ORDER$=""; CALL "FM2UZP",X3$,ECE$(29,20),"*",0,0,0,0,A0,A1,A{ALL},ORDER$,ERR=8450; REM SSP 191286
8450 IF ECR$(255,1)="Y" OR ECE$(298,1)="Y" OR ECE$(129,1)<>DIM(1) OR ORDER$<>"" OR IC1INFO[8]>0 THEN Q=0; GOTO 8495 ELSE IF FM1$(108,1)<>"Y" THEN Q=0; GOTO 8495 ! SSP181396, if non-FMS item, then no RON SSP 191286.  WO191991 SSP307259-DBD-103, if PO code is not blank then bypass
8451 Q=0; IF FM1$(109,6)=BLGRBNKS$(1,6) AND FM1[22]=0 AND FM1[23]=0 THEN Q=0; GOTO 8460 ELSE DIM CHANNELS[5]; CHANNELS[1]=Z[19],CHANNELS[4]=Z[25],CHANNELS[5]=Z[8]; DIM OPTIONS$(20); OPTIONS$(1,2)="RI",OPTIONS$(3,1)=NO_INVUSAGE$,OPTIONS$(6,10)=FM1$(185,10),OPTIONS$(17,1)="A"; DIM RON_IC1INFO[1],RON_FM3[1],RON_FM3ALL[1],RON_FM4[1],RON_FM4ALL[1],RON_FORM_OTHER[1],RON_FORM_OTHERALL[1]; FINDITEMKEY$=ECE$(29,20); CALL "EC3IC0",X3$,X4$,EC_PARM$,EC${ALL},FINDITEMKEY$,USAGE_KEYS$,CHANNELS{ALL},RON_IC1INFO{ALL},RON_FM3{ALL},RON_FM3ALL{ALL},RON_FM4$,RON_FM4{ALL},RON_FM4ALL{ALL},RON_FORM_OTHER{ALL},RON_FORM_OTHERALL{ALL},OPTIONS$; RON_IC1_AVAIL=RON_IC1INFO[31] ! SSP232324, get IC1INFO for all warehouses, excluding hidden, for RON trigger purposes
8452 ROP_DAYS=0; IF FM1[22]>0 THEN ROP_DAYS=FM1[22]/30*FM1[24]
8453 ROP_QTY=0; IF FM1[23]>0 THEN ROP_QTY=FM1[23]
8454 BELOW_DAYS=0; IF ROP_DAYS>0 THEN BELOW_DAYS=ROP_DAYS-(RON_IC1_AVAIL-QTY_IN_EACHES) ! SSP185470, SSP232324
8455 BELOW_QTY=0; IF ROP_QTY>0 THEN BELOW_QTY=ROP_QTY-(RON_IC1_AVAIL-QTY_IN_EACHES) ! SSP185470, SSP232324
8456 IF BELOW_DAYS<=0 AND BELOW_QTY<=0 THEN Q=0; GOTO 8495
8457 IF BELOW_DAYS>0 THEN Q=2; RO_REASON$="below ROP using ROP in days from the custom item master."; REM ELSE Q=3,RO_REASON$="below ROP using ROP quantity from custom item master."; REM SSP 209971,216471
8458 IF BELOW_QTY>0 THEN Q=3,RO_REASON$="below ROP using ROP quantity from custom item master."; REM SSP 216471
8459 ECE$(11,2)="06",MESSAGE_NO=6,ACTIVE_LINE_MESSAGES$=ACTIVE_LINE_MESSAGES$+"06"; MESS_INFO$[1]=STP(ECE$(39,10),2),MESS_INFO$[2]=RO_REASON$; REM " SSP#  161117
8460 IF Q=2 OR Q=3 OR Q=4 THEN GOTO 8462
8461 IF Q=0 THEN GOTO 8495
8462 IF EC$[7](292,1)<>"Y" OR ECE$(296,1)="Y" THEN GOTO 8495
8463 DIM FMPD$(243); GOSUB SET_READONLY; FIND (Z[9],KEY="D"+ECD$(26,10),DOM=8464)FMPD$; GOSUB CLEAR_READONLY; GOTO 8465 ! SSP259411, avoid error 0
8464 GOSUB CLEAR_READONLY; GOTO 8495 ! SSP259411, got the DOM, need to clear readonly, then get out 
8467 RON_MSG$="|LINE 8467 CHECK FM5 KEY=|"+"R"+FMPD$(108,1)+ECE$(29,10)+"    "+ECE$(39,10)+"|"; GOSUB LOG_RON_MSG; READ (Z[40],KEY="R"+FMPD$(108,1)+ECE$(29,10)+"    "+ECE$(39,10),DOM=8470)FM5$; RON_MSG$="|FOUND FM5 REC LINE 8467|"+FM5$(1,50)+"|"; GOSUB LOG_RON_MSG; GOTO 8495 ! SSP231499
8470 GOSUB 4482
8495 RETURN 
8500 REM "Update 3rd party info if needed
8505 IF P_ID$="" OR MID(ECE$,259,3)<>DIM(3) THEN GOTO 8545 ! SSP177898, if companion item line then don't write EC7 record
8507 IF EXISTING_LINE$="Y" THEN I=NUM(ECE$(25,3)); IF STP(P_INFO$[I],1)="" THEN GOTO *RETURN ELSE P=POS("|"=P_INFO$[I]); P_ID$=P_INFO$[I](1,P-1),P_INFO_3$=P_INFO$[I](P+1)
8510 DIM EC7$(200),EC7[1]
8515 EC7$(1,13)=ECE$(1,10)+ECE$(25,3); REM "Worksheet #, line #
8516 READ (Z[22],KEY=EC7$(1,13),DOM=*NEXT)IOL=0420 ! WO178946, may need to update an existing record.
8517 IF STP(P_ID$,1)>"" THEN EC7$(14,10)=P_ID$
8518 IF STP(P_INFO_1$,1)>"" THEN EC7$(24,20)=P_INFO_1$
8519 IF STP(P_INFO_2$,1)>"" THEN EC7$(44,20)=P_INFO_2$
8520 IF STP(P_INFO_3$,1)>"" THEN EC7$(64,50)=P_INFO_3$ ! WO178946, 3p_info_3
8530 WRITE (Z[22],KEY=EC7$(1,13))IOL=0420
8545 RETURN 
8550 ! NOT TRUE, THIS IS REALLY USED, FOUND OUT WORKING ON SSP 166022 REM "** CURRENTLY NOT USED - PROCESSED IN EC3OE0 - Add email addresses, if any, to EC$[12]
8551 REM "REQUESTED_EMAIL_ACTION$ = this is the action to process
8552 EC$[12]=""; APPROVER_EMAIL_ADDR$=""; IF APPROVAL_PURCHASE$="Y" AND EC$[7](748,1)="Y" AND POS("O"=EC$[2](256,10))>0 THEN APPROVER_EMAIL_ADDR$=STP(EC$[2](109,60),2) ! WO244587, capture the approver's email address, customer option to send order conf toapprover;REM "to prevent duplicate emails OLD 3194/SSP 144537
8553 GOSUB GET_ALT_ETEMPLATE; IF STP(ALT_ETEMPLATE$,3)<>"" AND APPROVAL_ORDER$<>"Y" THEN GOSUB 4600; GOTO 8595 ! WO166006, using a different template for the email order confirmation. SSP219608, if we are in the process of designating a worksheet for approval, don't check for an alternate template.  It's possible the buyer on the worksheet is different than the session buyer, like in approved purchase approval order, so figure this out and set into ALT_ETEMPLATE$.
8555 CALL "ZZDISP","AX",ECD$(235,8),"O/P",X3$,ORDER_NO$,"",0,0,X4$
8557 B_EMAIL$=STP(EC$[2](109,60),2),B_ACTIONS$=STP(EC$[2](256,10),2),P_EMAIL$=STP(EC$[2](169,60),2),P_ACTIONS$=STP(EC$[2](266,10),2),S_EMAIL$=STP(EC$[2](340,60),2),S_ACTIONS$=STP(EC$[2](460,10),2),C_EMAIL$=STP(EC$[2](400,60),2),C_ACTIONS$=STP(EC$[2](470,10),2) ! SSP166022
8558 IF ECD$(11,15)<>EC$[2](1,15) THEN GOSUB 8760 ! SSP166022
8560 FOR EI=0 TO 3; ON EI GOTO 8561,8562,8563,8564
8561 EMAIL_ADDR$=B_EMAIL$,EMAIL_ACTIONS$=B_ACTIONS$; GOTO 8565
8562 EMAIL_ADDR$=P_EMAIL$,EMAIL_ACTIONS$=P_ACTIONS$; GOTO 8565
8563 EMAIL_ADDR$=S_EMAIL$,EMAIL_ACTIONS$=S_ACTIONS$; GOTO 8565
8564 EMAIL_ADDR$=C_EMAIL$,EMAIL_ACTIONS$=C_ACTIONS$; GOTO 8565
8565 IF POS(REQUESTED_EMAIL_ACTION$=EMAIL_ACTIONS$)=0 THEN GOTO 8580; REM "If the action being requested is not in current email then skip
8567 IF EMAIL_ADDR$="" THEN GOTO 8580; REM "Skip if address blank
8570 ETMP$="{[email]"+EMAIL_ADDR$; REM "Email address
8572 CALL "EC3SEM",X3$,X4$,EC_PARM$,EC${ALL},"EMAILSUB_"+REQUESTED_EMAIL_ACTION$,ECD$(1,10),SUBJECT$; ETMP$=ETMP$+"[subject]"+SUBJECT$
8579 ETMP$=ETMP$+"}",EC$[12]=EC$[12]+ETMP$
8580 NEXT EI
8585 ORDER_EMAIL$=STP(ECD$(677,40),2); IF ECD$(1138,1)="Y" THEN GOTO *NEXT ELSE IF ORDER_EMAIL$="" THEN GOTO *NEXT ELSE IF ORDER_EMAIL$=B_EMAIL$ OR ORDER_EMAIL$=P_EMAIL$ OR ORDER_EMAIL$=S_EMAIL$ OR ORDER_EMAIL$=C_EMAIL$ THEN GOTO *NEXT ELSE EMAIL_ADDR$=ORDER_EMAIL$,EMAIL_ACTIONS$="O"; ETMP$="{[email]"+EMAIL_ADDR$; CALL "EC3SEM",X3$,X4$,EC_PARM$,EC${ALL},"EMAILSUB_"+REQUESTED_EMAIL_ACTION$,ECD$(1,10),SUBJECT$; ETMP$=ETMP$+"[subject]"+SUBJECT$; ETMP$=ETMP$+"}",EC$[12]=EC$[12]+ETMP$ ! WO179708, send email to entered email address if not blank and not a match to any of the buyer email addresses. WO271988, if bypass tag set to Y then bypass sending conf to the entered email address
8587 IF APPROVER_EMAIL_ADDR$="" THEN GOTO *NEXT ELSE IF APPROVER_EMAIL_ADDR$=B_EMAIL$ OR APPROVER_EMAIL_ADDR$=P_EMAIL$ OR APPROVER_EMAIL_ADDR$=S_EMAIL$ OR APPROVER_EMAIL_ADDR$=C_EMAIL$ THEN GOTO *NEXT ELSE EMAIL_ADDR$=APPROVER_EMAIL_ADDR$,EMAIL_ACTIONS$="O"; ETMP$="{[email]"+EMAIL_ADDR$; CALL "EC3SEM",X3$,X4$,EC_PARM$,EC${ALL},"EMAILSUB_"+REQUESTED_EMAIL_ACTION$,ECD$(1,10),SUBJECT$; ETMP$=ETMP$+"[subject]"+SUBJECT$; ETMP$=ETMP$+"}",EC$[12]=EC$[12]+ETMP$ ! WO244587, send email to approver's email address if set at line 8763 and not a match to any of the buyer email addresses.
8595 RETURN 
8600 REM "ck if order has approval lines 148750; Max order amounts ssp192510
8601 APPROVAL_LINES$="",NONAPPROVAL_LINES$=""; IF EC_PARM$(946,1)<>"Y" THEN GOTO 8645 ELSE IF POS(EC$[7](593,1)="AY")=0 THEN NONAPPROVAL_LINES$="*"; GOTO 8645 ELSE MAX_ORD_AMOUNT=NUM(EC$[2](1039,10)); REM "if not activated for customer or at all set nonapproval list to not null else check if max order amount set for buyer
8602 READ (Z(3),KEY=WORKSHEET$,DOM=*NEXT)
8603 DIM ECE$(499),ECE[8]; ECE_KEY$=KEY(Z(3),END=8606); IF ECE_KEY$(1,LEN(WORKSHEET$))<>WORKSHEET$ THEN GOTO 8606 ELSE READ (Z(3),KEY=ECE_KEY$)IOL=0330
8604 GOSUB 8246; ORD_TOT_OVERRIDE$="Y"; GOSUB 7880; IF ECE$(18,1)<>"O" AND POS(ECE$(28,1)="CI")>0 AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; GOSUB 7350; APP_ITEM_PRICE_TOTAL+=ITEMPRICEEXT; REM "SSP192510 - same logic as for calc_item_price_ext, if buyer has max order amount (>0) set,keep track of order total for later approval check; SSP205923 - Removed "IF MAX_ORD_AMOUNT > 0" check, will calculate total every time, WO 227556
8605 IF ECE$(19,1)<>"Y" THEN NONAPPROVAL_LINES$=NONAPPROVAL_LINES$+ECE$(25,3); GOTO 8603 ELSE APPROVAL_LINES$=APPROVAL_LINES$+ECE$(25,3); GOTO 8603
8610 REM "ck status
8611 IF MAX_ORD_AMOUNT>0 AND APP_ITEM_PRICE_TOTAL>MAX_ORD_AMOUNT THEN IF NUL(APPROVAL_LINES$) THEN APPROVAL_LINES$="001"; REM "Set approval lines to trigger approval if order total greater than max order amount; SSP205923 - Added (> 0) check to make sure apprvl triggered only if MAX_ORD_AMOUNT is set for this buyer.  SSP247532, if customer is set to "A" all order approval, when APPROVAL_LINES$="001" done it was killing all worksheet lines with 19,1="Y" from the list but 001 and lines would be missing when the approver sees the worksheet.
8616 IF APPROVAL_LINES$="" THEN GOTO 8645; REM "no approval situation (exit)
8618 EXTRACT (Z(2),KEY=WORKSHEET$)IOL=0310; ECD$(55,1)="Y"; WRITE (Z(33),KEY=WORKSHEET$)IOL=0310; WRITE (Z(2),KEY=WORKSHEET$)IOL=0310; REM "flag order for approval and copy to approval hdr EDN
8620 REM "process lines.  SSP180412, all worksheet lines, requiring approval or not, go to the EDO file, the whole order needs approval.
8622 FOR MM=0 TO LEN(APPROVAL_LINES$)/3-1; DIM ECEKEY$(13); ECEKEY$(1,10)=WORKSHEET$,ECEKEY$(11,3)=APPROVAL_LINES$(MM*3+1,3)
8624 DIM ECE(8); READ (Z(3),KEY=ECEKEY$,DOM=8630)IOL=0330; WRITE (Z(34),KEY=ECEKEY$)IOL=0330 ! GOSUB 4050; REM "copy lines to approval file.  SSP172214, take out removal of messages, want to be able to show these on the PA status page.
8625 NEXT MM
8626 IF STP(NONAPPROVAL_LINES$,3)="" THEN GOTO 8630
8627 FOR MM=0 TO LEN(NONAPPROVAL_LINES$)/3-1; DIM ECEKEY$(13); ECEKEY$(1,10)=WORKSHEET$,ECEKEY$(11,3)=NONAPPROVAL_LINES$(MM*3+1,3)
8628 DIM ECE(8); READ (Z(3),KEY=ECEKEY$,DOM=8630)IOL=0330; WRITE (Z(34),KEY=ECEKEY$)IOL=0330
8629 NEXT MM
8631 APP_BUYER_ID$=""; IF NOT(NUL(EC$[2](1049,14))) THEN IF EC$[2](1049,1)="T" THEN CALL "UPDEE9;GET_TIERED_APPROVER_ID",ERR=*NEXT,0,EC$[2](1049,14),APP_ITEM_PRICE_TOTAL,APP_BUYER_ID$,ENTRY_EXISTS
8632 APP_OPTIONS$="B{"+APP_BUYER_ID$+"}"
8633 CALL "EC3EM2",X3$,X4$,EC_PARM$,EC${ALL},WORKSHEET$,"AN",APP_OPTIONS$; REM "create process request file to generate email
8635 CALL "EC3AP2",X3$,X4$,EC_PARM$,EC${ALL},WORKSHEET$,"N",EC$[2](1,15),"",APP_OPTIONS$; REM "update approval status
8640 BASIC2_OK$="N" ! SSP172454, if order approval, don't leave this program to fill out template
8645 RETURN 
8650 REM "write credit card tracking file intopform ! 170507, LMS, sequence number added to key
8651 IF ECD$(415,1)="*" THEN ECD$(415,20)=EC$[2](497,20) END_IF ; IF ECD$(235,8)=DIM(8) THEN GOTO 8660 ! WO174246, check for *
8652 WRITE_SEQ$=STR(1:"000")
8653 DIM EDD$(476),EDD[6]; READ (Z[26],KEY=ECD$(235,8)+WRITE_SEQ$,DOM=8655)IOL=0460; IF NUL(CC_BILLADDR$) THEN CC_BILLADDR$(1,87)=EDD$(126,87); END_IF ; IF NOT(NUL(ECD$(411,68))) THEN GOTO 8654 ELSE CC_DATA$[1]=EDD$(12,4),CC_DATA$[2]="************"+EDD$(28,4),CC_DATA$[3]=EDD$(36,4),CC_DATA$[4]=EDD$(40,40); GOTO 8660 ! 213120,239471, SSP293539 add CC_DATA$ setting for type,last4,exp,name, SSP307309-DBD-113 change DIM to 476
8654 IF EDD$(80,8)<>DIM(8) THEN WRITE_SEQ$=STR(NUM(WRITE_SEQ$)+1:"000"); GOTO 8653 ELSE GOTO 8656
8655 DIM EDD$(476),EDD[6]; EDD$(1,8)=ECD$(235,8),EDD$(9,3)=WRITE_SEQ$ ! SSP307309-DBD-113 change DIM to 476
8656 EDD$(12,68)=ECD$(411,68),EDD$(126,87)=ECD$(558,87),EDD(0)=GRB(9),EDD$(231,4)=ECD$(1099,4); IF STP(ECD$(646,30),2)<>"" AND STP(EDD$(213,8),2)="" THEN EDD$(213,8)=MID(INVOICE_HDR_KEY$,7,8); EDD[2]=GRB[9] END_IF ; IF STP(EEK_VAULT_ID$,2)>"" THEN EDD$(235,64)=PAD(EEK_VAULT_ID$,64) ELSE READ (Z[57],KEY=ECD$(1,10),DOM=*NEXT)EEK$; EDD$(235,64)=PAD(MID(EEK$,14,64),64) ! WO227413, added cvv. SSP229993
8657 EDD$(88,30)=ECD$(646,30),EDD$(119,1)="W",EDD$(221,10)=MERCH_ACCT$; IF NOT(NUL(CC_BILLADDR$)) THEN EDD$(126,87)=CC_BILLADDR$(1,87) END_IF ; IF STP(EEK_CUST_PROFILE_ID$,2)>"" THEN EDD$(299,40)=PAD(EEK_CUST_PROFILE_ID$,40) ELSE READ (Z[57],KEY=ECD$(1,10),DOM=*NEXT)EEK$; EDD$(299,40)=PAD(MID(EEK$,78,40),40) ! SSP166604, cc_aprvl_ref - W=FROM WEBEC, SSP 211130 - credit card billing address, WO215237, merchant account, SSP307309-DBD-113 cust profile ID 
8658 IF CCACTION$="D" THEN REMOVE (Z(26),KEY=EDD$(1,8)+WRITE_SEQ$,DOM=8690); GOTO 8690 ELSE WRITE (Z[26],KEY=EDD$(1,8)+WRITE_SEQ$)IOL=0460
8659 IF NOT(NUL(ECD$(235,8))) AND (CCACTION$="" OR POS(CCACTION$=" IO")<>0) AND SNDEMAIL$="Y" THEN EXTRACT (Z[2],KEY=ECD$(1,10),DOM=*NEXT)IOL=0310; GOSUB CLEAR_CC_INFO; WRITE (Z[2],KEY=ECD$(1,10))IOL=0310 ! WO239471, if SNDEMAIL$="Y" then we are in the final step mode, so we don't need the CC info in ECD anymore, clear it out.
8660 REM "ck if credit card to be added to buyer profile
8662 IF UPDATE_CC_ONBUYER$<>"Y" OR STP(EC$[2](985,10),3)<>"" THEN GOTO 8670 ! WO174246, if buyer has CC ID then don't allow update of CC info
8664 ECAFSLOT=FN%FFN("ECA"+X3$(9,3)); IF ECAFSLOT<0 THEN GOTO 8690
8666 EXTRACT (ECAFSLOT,KEY=EC$[2](1,15),DOM=8690)ECA$,ECA2$
8667 ECA$(493,68)=ECD$(411,68)
8668 WRITE (ECAFSLOT,KEY=EC$[2](1,15))ECA$,ECA2$
8690 RETURN 
8700 REM "given VAL_INDEX, load from VAL$[VAL_INDEX] into ECE_IN_DATA[VAL_INDEX,ECE_BUCKET(will be 0 or 1 right now)] if VAL$[VAL_INDEX] is blank, then no value is loaded, otherwise load it (if it is numeric) and set ECE_SET_DATA[VAL_INDEX,ECE _BUCKET] to 1
8710 IF STP(VAL$[VAL_INDEX],3," ")="" OR VAL$[VAL_INDEX]="" THEN GOTO 8745
8715 ECE_IN_DATA[VAL_INDEX,ECE_BUCKET]=NUM(VAL$[VAL_INDEX],ERR=8716),ECE_SET_DATA[VAL_INDEX,ECE_BUCKET]=1
8745 RETURN 
8750 REM "update session record with new active shipto
8752 EXTRACT RECORD (33005,KEY=EC$[1](1,7),DOM=8755)ECB$; ECB$(1167,4)=ECD$(36,4); WRITE RECORD (33005,KEY=EC$[1](1,7))ECB$; EC$[1](1167,4)=ECD$(36,4) ! 274361
8753 DIM OPTIONS$(50); OPTIONS$(1,1)="N",OPTIONS$(12,4)=ECB$(1167,4); CALL "EC3UT4",X3$,X4$,EC$[2](1,15),XXXX$,OPTIONS$; REM "ssp 154600
8755 RETURN 
8760 ! SSP166022, need to get email addresses/actions for ordering buyer
8765 ECAFSLOT=FN%FFN("ECA"+X3$(9,3)); IF ECAFSLOT<0 THEN GOTO 8790
8770 DIM ECA$(1540); READ (ECAFSLOT,KEY=ECD$(11,15),DOM=8790)ECA$
8775 B_EMAIL$=STP(ECA$(109,60),2),B_ACTIONS$=STP(ECA$(256,10),2)
8780 P_EMAIL$=STP(ECA$(169,60),2),P_ACTIONS$=STP(ECA$(266,10),2)
8782 S_EMAIL$=STP(ECA$(340,60),2),S_ACTIONS$=STP(ECA$(460,10),2)
8785 C_EMAIL$=STP(ECA$(400,60),2),C_ACTIONS$=STP(ECA$(470,10),2)
8790 RETURN 
8795 ! 
8800 REM "ECR says to setup P/O information so do it. SSP166124, PO codes by form parameters
8801 IF EXISTING_LINE$="Y" AND ECE$(129,1)<>DIM(1) THEN GOTO *RETURN ! WO178946, if po code already assigned don't change
8802 REM "Assume FM1$ is correct, need to get ECD$ and ECD2$
8803 IF EC_PARM$(707,1)=" " THEN GOTO 8845 ELSE EXTRACT (Z[2],KEY=ECD$(1,10),DOM=8845)IOL=0310; ECD3$=STP(ECD$(1185,396),1) ! WO179030, set ECD3$ for 2nd range of PO codes
8804 REM "Always create new p/o - only 1 custom form per p/o allowed
8805 IF ECE$(115,14)<>DIM(14) THEN VEND_PLANT$=ECE$(115,14) ELSE IF SET_BY_FM1 THEN VEND_PLANT$=MID(FM1$,82,14) ELSE VEND_PLANT$=MID(IC0$,82,14) ! SSP268213, if O type then always use ECE vend/plant, else if we have vend/plant populated in ECE then use it, else use FM1 vend/plant IF ECE$(18,1)<>"O" THEN VEND_PLANT$=FM1$(82,14) ELSE VEND_PLANT$=ECE$(115,14); 307514
8810 ! SSP168421, NO LONGER NEEDED AFTER 167917 CHANGES CONCERNING COMBINE PO IF POS(PO_CODE$=POCODE$)=0 AND LEN(PO_CODE$)>0 THEN GOTO 8825
8811 IF LEN(STP(ECD2$,2))>=390 AND LEN(STP(ECD3$,2))>=390 THEN MX=FN%_LOG_MESSAGE("WARN","PO CODE RANGE STRINGS AT LIMIT"); GOTO 8845 ! SSP307164-DBD-43
8812 START_PO$=EC_PARM$(706,1),END_PO$=EC_PARM$(707,1),SECOND_START_PO$=EC_PARM$(1148,1),SECOND_END_PO$=EC_PARM$(1149,1); IF ECR$(529,1)<>" " AND ECR$(530,1)<>" " THEN START_PO$=ECR$(529,1),END_PO$=ECR$(530,1),SECOND_START_PO$=ECR$(574,1),SECOND_END_PO$=ECR$(575,1) ! SSP166124, Starting ending PO codes by item. WO179030, add second range of PO codes
8815 FOR ECD2=0 TO LEN(STP(ECD2$,2)+STP(ECD3$,2))/15; TMP_ECD2$+=MID(STP(ECD2$,2)+STP(ECD3$,2),15*(ECD2+1),1); NEXT ECD2 ! SSP307164-DBD-43
8819 PO_CODE_FOUND=1; FOR NEXT_PO=0 TO ASC(END_PO$)-ASC(START_PO$); PO_CODE$=CHR(ASC(START_PO$)+NEXT_PO); IF POS(PO_CODE$=TMP_ECD2$)=0 THEN EXITTO 8820 ELSE CONTINUE END_IF ; NEXT NEXT_PO; PO_CODE_FOUND=0 ! SSP307164-DBD-43
8820 IF PO_CODE_FOUND THEN ECD2$=ECD2$+VEND_PLANT$+PO_CODE$; GOTO 8825 ELSE GOTO 8821 ! SSP307164-DBD-43
8821 IF STP(SECOND_START_PO$,3)="" OR STP(SECOND_END_PO$,3)="" THEN GOTO 8845 ELSE PO_CODE_FOUND=1; FOR NEXT_PO=0 TO ASC(SECOND_END_PO$)-ASC(SECOND_START_PO$); PO_CODE$=CHR(ASC(SECOND_START_PO$)+NEXT_PO); IF POS(PO_CODE$=TMP_ECD2$)=0 THEN EXITTO 8822 ELSE CONTINUE END_IF ; NEXT NEXT_PO; PO_CODE_FOUND=0 ! SSP307164-DBD-43
8822 IF PO_CODE_FOUND THEN ECD3$=ECD3$+VEND_PLANT$+PO_CODE$; GOTO 8825 ELSE GOTO 8845 ! SSP307164-DBD-43
8825 REM "Set fields in ECE$ & write out
8826 IF LEN(ECD2$)>390 THEN ECD3$=STP(ECD3$,2)+STP(MID(ECD2$,391),2),ECD2$=MID(ECD2$,1,390) ELSE IF LEN(ECD3$)>390 THEN ECD2$=STP(ECD2$,2)+STP(MID(ECD3$,391),2),ECD3$=MID(ECD3$,1,390) ! SSP307164-DBD-43
8830 ECE$(115,14)=VEND_PLANT$,ECE$(129,1)=PO_CODE$
8835 GOSUB VEND_WHSE_PRT_FLGS ! WO253441
8839 IF STP(ECD3$,3)>"" THEN ECD$(1185,396)=PAD(ECD3$,396) ! WO179030, 2nd range of vendor/plant/po used
8840 WRITE (Z[2],KEY=ECD$(1,10))IOL=0310
8845 RETURN 
8850 GET_ITEM_CODE:REM "if given real_item_key, then put into ECE$(29,20) else take itemcode entered in ECE_in$(228,20) and if dont_check_catalog then put into ECE_in$(39,10),cust_code in ECE_in$(29,10) if appropriate, if check in catalog, lookup (give error if not found), then substitute from catalog item info. "
8851 IF ECE_IN$(18,1)="O" AND STP(ECE_IN$(29,20),3," ")="" AND STP(ECE_IN$(228,20),3," ")<>"" THEN ECE_IN$(29,20)=ECE_IN$(228,20); REM 188375
8852 IF ECE_IN$(18,1)="O" THEN ECE_IN$(29,20)=DIM(10)+ECE_IN$(29,10); IF ECE_IN$(28,1)=" " THEN ECE_IN$(28,1)="I" END_IF ; OSITEM$=ECE_IN$(39,10); GOSUB 7150; IF NUL(ECE_IN$(228,20)) THEN ECE_IN$(228,20)=ITEM_ADDED$; END_IF ; ECE_IN$(67,40)=ITEM_ADDED_DESC$; DIM I[30]; REQ_DATE$=ECD$(58,6); IF STP(REQ_DATE$,3)="" THEN REQ_DATE$=X3$(15,6) END_IF ; FROM_PLAN$="EC3WS1"; CALL "OS2OBC",X3$,X4$,ECE_IN$(39,10),I{ALL},ECD$(26,10)+DIM(5)+REQ_DATE$,FROM_PLAN$,RETURNED_PRICE,"",COST,ECE_IN[0]; IF NUL(FROM_PLAN$) AND RETURNED_PRICE=0 THEN GOTO NOT_IN_CATALOG ELSE GOTO DONE_CHECKING; REM "if source of item is office supply OS0 then set as IC0 type <blank>+item code / Set line type to I / SSP 226534 - Check if it has valid pricing, if not, mark with error "02"; SSP 229672; SSP 280607
8853 IF STP(FROM_CIC_CODE$,3)>"" THEN GOSUB GET_ITEM_FROM_FROM_CIC; ECE_IN$(228,20)=FROM_FOUND_ITEM$ ! WO277813
8854 TRY_ALT_CAT$="N"; REM "207754
8855 IF REAL_ITEM_KEY$<>"" THEN ECE$(29,20)=REAL_ITEM_KEY$; GOTO DONE_CHECKING
8860 IF STP(ECE_IN$(29,10),3)="" THEN IF POS(ECE_IN$(28,1)=" C")<>0 THEN ECE_IN$(29,10)=ECD$(26,10) ! if no customer given and blank or custom type then set to customer from worksheet header
8862 IF EC$[14](441,1)="Y" THEN ECE_IN$(39,10)=ECE_IN$(228,20); GOTO DONE_CHECKING ! if don't check catalog option, then just set it and continue, it will have to fit in 39,10 or get chopped off
8863 CATALOG_LIST$=EC$[1](565,180) ! Will check all buyer's active catalogs to see if they have access to this item code, SSP181650
8864 FOR X=0 TO 17
8865 CATALOG$=CATALOG_LIST$(X*10+1,10); IF CATALOG$=DIM(10) THEN GOTO 8867 ELSE READ (Z[18],KEY=CATALOG$+ECE_IN$(228,20),DOM=*NEXT)
8866 ECI$=KEY(Z[18],END=8867); IF MID(ECI$,1,30)<>CATALOG$+ECE_IN$(228,20) THEN GOTO 8867 ELSE ECE_IN$(29,20)=MID(ECI$,31,20); EXITTO DONE_WITH_CATALOG
8867 NEXT X
8868 NOT_IN_CATALOG:IF NOT(NUL(ECE_IN$(285,10))) AND TRY_ALT_CAT$<>"Y" THEN ECE_IN$(228,20)=ECE_IN$(285,10),TRY_ALT_CAT$="Y"; GOTO 8863 ELSE ECE_IN$(11,2)="02",ECE$(11,2)="02",MESSAGE_NO=2,MESS_INFO$[1]=STP(ECE_IN$(228,20),2) ! if not in Catalog then flag error; SSP 207754 - Try alt item before error "02"
8869 IF STP(ECE_IN$(228,20),3)>"" AND STP(ECE_IN$(39,10),3)="" THEN ECE_IN$(39,10)=ECE_IN$(228,10) ! SSP170570
8870 DONE_WITH_CATALOG:
8895 DONE_CHECKING:
8899 RETURN 
8910 DEF FND$(Z9$)=Z9$(1*2+1,2)+"/"+Z9$(7-1*2,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNR$(X$)=STR(10000000-NUM(STR(ASC(X$(1,1)))+X$(2)):"0000000")
8950 REM "This line here to avoid error 28 when exiting loops inside 1000's
8960 EXITTO 1090
8970 ! Ship Via Map, WO156839
8972 KMC=POS(","=VALUE$); IF KMC<>0 THEN VALUE$=MID(VALUE$,1,KMC-1)
8975 VALUE$=PAD(VALUE$,15)
8980 DIM EDM$(100); READ (Z[32],KEY=VALUE$,DOM=8990)EDM$
8985 VALUE$=EDM$(16,1); GOSUB 7650 ! Set ship via code and desc
8990 RETURN 
9000 REM "ERROR PROCESSING
9002 J=ERR,K=TCB(5); SETERR 0000; ENDTRACE 
9010 LAST_WEBEC_ERR$="ERR: "+STR(J)+" AT: "+STR(K); LAST_WEBEC_ERR$=GBL("LAST_WEBEC_ERR",LAST_WEBEC_ERR$); REM "131928
9090 GOTO 9900
9900 REM "End
9905 %LOGOFF$=""
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9950 EXIT 
9999 END 
10000 REM "Gets cust/loc budget data; must be called if location changes
10005 GET_CUST_LOC_BUDGET:
10010 BUDGET_ENABLED$="N",BUDGET_AUDIT$="N",B_VAL=0,V_VAL=0,ERR_VAL=0,ERR_MSG$="",BDGOPT$=""
10011 IF NOT(FN%HAS_MODULE("EB")) THEN GOTO *RETURN
10015 IF BUDGET_LOC$<>ECD$(1,10)+ECD$(36,4) THEN BUDGET_LOC$=ECD$(1,10)+ECD$(36,4) ELSE GOTO *RETURN ! Saw this location once already
10020 CALL "FMGFTW;GET_BUDGET_STATS",X3$,X4$,EC$[2](51,10),ECD$(36,4),BUDGET_ENABLED$,BUDGET_AUDIT$,B_VAL,V_VAL,O_VAL,ERR_VAL,ERR_MSG$,BDGOPT$ ! 249071
10025 V_VAL=V_VAL+O_VAL ! 249071 - Adjust budget used with open order balance
10030 IF BUDGET_ENABLED$="Y" THEN CALL "EC3WSL",X3$,X4$,EC_PARM$,EC${ALL},DATA${ALL},NUM_ENTRIES,OUTPUT,NUM_WK_ITEMS,NUM_ITEMS,DISP_SUBTOTAL,TOTAL_CARTON_WEIGHT ! WO237271
10040 DEBUGMESS$="CUSTOMER|"+EC$[2](51,10)+"|LOCATION|"+ECD$(36,4)+"|BUDGET|ENABLED|"+BUDGET_ENABLED$+"|AUDIT|"+BUDGET_AUDIT$+"|LIMIT $|"+STP(STR(B_VAL:"###,###,##0.00"),2)+"|USED $|"+STP(STR(V_VAL:"###,###,##0.00"),2)+"|SUBTOTAL $|"+STP(STR(DISP_SUBTOTAL:"###,###,##0.00"),2)+"|"; IF ERR_VAL<>0 OR NOT(NUL(ERR_MSG$)) THEN DEBUGMESS$+="ERRMSG|"+ERR_MSG$
10042 GOSUB LOG_THIS_REQUEST
10045 RETURN 
10049 ! 
10050 REM "Apply budget settings - called from line message section
10055 APPLY_BUDGET:
10056 IF BUDGET_ENABLED$<>"Y" THEN GOTO *RETURN ! Budgets not enabled
10062 GOSUB CALCULATE_ITEM_PRICE; BUDGET_SUBTOTAL+=ITEMPRICEEXT ! SSP 232851
10063 DEBUGMESS$="LINE|"+ECE$(25,3)+"|LIMIT $|"+STP(STR(B_VAL:"###,###,##0.00"),2)+"|USED $|"+STP(STR(V_VAL:"###,###,##0.00"),2)+"|SUBTOTAL $|"+STP(STR(DISP_SUBTOTAL:"###,###,##0.00"),2)+"|PRICE EXT $|"+STP(STR(ITEMPRICEEXT:"###,###,##0.00"),2)+"|"; GOSUB LOG_THIS_REQUEST
10065 IF (V_VAL+DISP_SUBTOTAL+BUDGET_SUBTOTAL)<=B_VAL THEN GOTO *RETURN ! Go no further if line is under budget, SSP 232851
10070 ECE$(11,2)="20",MESSAGE_NO=20; IF BUDGET_AUDIT$="Y" THEN ECE$(11,2)="21",MESSAGE_NO=21 END_IF ; IF EC$[7](749,1)="Y" THEN ECE$(11,2)="63",MESSAGE_NO=63,ECE$(19,1)="Y",APPROVAL_MESSAGE_SET$="Y" ! 242686 - If budgets enabled and if approvals enabled for over budget orders, it has highest precedence:63 >> 21 >> 20
10072 IF EC$[7](750,1)="Y" AND ECE$(11,2)="20" THEN ECE$(425,1)="Y" ! 242686 - Over budget, payment by credit card is required, set flag on this line for use later
10073 IF EC$[2](1078,1)="Y" AND (ECE$(11,2)="20" OR ECE$(11,2)="21" OR ECE$(11,2)="63") THEN ECE$(426,1)="Y" ! 242686 - Over budget, buyer is set to be locked for further ordering, flag line for use later
10075 MESS_INFO$[1]=STP(ECE$(39,10),2),MESS_INFO$[2]=STP(STR(B_VAL:INT_MASK$),2),MESS_INFO$[3]=STP(STR(V_VAL:INT_MASK$),2),MESS_INFO$[4]=STP(STR(ITEMPRICEEXT:INT_MASK$),2),MESS_INFO$[5]=ECD$(36,4),MESS_INFO$[6]=STP(STR(B_VAL-V_VAL:INT_MASK$),2) ! REM "Set message, 1=itemcode, 2=budget val 3=recorded usage val, 4=calc item price ext, 5=location, 6=Remaining value - SSP 232260
10080 GOSUB 8350
10095 RETURN 
10099 ! 
10100 LOG_THIS_REQUEST:
10105 MESS$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+EC$[1](97,10)+"|TEMPLATE|"+TEMPLATE$+"|DEBUG|"+DEBUGMESS$; MX=FN%_LOG_MESSAGE_WITH_FLUSH("MESG",MESS$)
10145 RETURN 
10149 ! 
10150 CALCULATE_ITEM_PRICE:
10160 GOSUB 8246; GOSUB 7880; IF ECE$(18,1)<>"O" AND POS(ECE$(28,1)="CI")>0 AND EC$[2](322,1)<>"Y" AND (EC$[7](598,1)="Y" OR FM1[29]=0) THEN GOSUB 4900 END_IF ; GOSUB GET_PRICE_FROM_LOTS; GOSUB LINE_UNIT_PRICE_OVERRIDE; GOSUB 7350 ! Calculated line price values will be in ITEM_PRICE and ITEMPRICEEXT, WO 227556
10195 RETURN 
10199 ! 
10200 LOG_RON_MSG:! SSP231499
10205 MESS$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|WORKSHEET|"+EC$[1](97,10)+RON_MSG$
10240 MX=FN%_LOG_MESSAGE_WITH_FLUSH("RONM",MESS$)
10245 RETURN 
10249 ! 
10250 REM "Update EC7 3rd party info lines, multi-line support - 233818. Also see 8500s for original tags
10255 UPDATE_3P_MULTI_INFO:
10260 IF NUL(MID(ECE$,324,10)) OR NOT(NUL(MID(ECE$,259,3))) THEN GOTO U3PI_END ! If no 3pm_id present, or is companion item line, then don't make or update EC7 record
10265 DIM EC7$(200),EC7[1]
10270 EC7$(1,13)=ECE$(1,10)+ECE$(25,3); REM "Worksheet #, line #
10275 READ (Z[22],KEY=EC7$(1,13),DOM=*NEXT)IOL=0420 ! May need to update an existing record.
10280 IF NOT(NUL(ECE$(324,10))) THEN EC7$(14,10)=ECE$(324,10) ! 3pm_id
10281 IF NOT(NUL(ECE$(334,20))) THEN EC7$(24,20)=ECE$(334,20) ! 3pm_info_1
10282 IF NOT(NUL(ECE$(354,20))) THEN EC7$(44,20)=ECE$(354,20) ! 3pm_info_2
10283 IF NOT(NUL(ECE$(374,50))) THEN EC7$(64,50)=ECE$(374,50) ! 3pm_info_3
10285 WRITE (Z[22],KEY=EC7$(1,13))IOL=0420
10290 U3PI_END:
10295 RETURN 
10299 ! 
10300 CHECK_STAX_CODE:! WO232721, incoming sales tax code, if not in AR5, change VALUE$ to ""
10310 IF STP(VALUE$,2)="" THEN VALUE$=""; GOTO *RETURN
10315 VALUE$=PAD(VALUE$,10)
10320 FIND (Z[49],KEY=VALUE$,DOM=*NEXT); GOTO *RETURN
10325 VALUE$=""
10345 RETURN 
10349 ! 
10350 GET_ALT_ETEMPLATE:! SSP219608, set the alternate email order confirmation template, this may be purchase approval, if so check the worksheet buyer, not the session buyer
10355 ALT_ETEMPLATE$=""
10360 IF ECD$(11,15)=EC$[2](1,15) THEN ALT_ETEMPLATE$=STP(EC$[2](944,40),3); GOTO *RETURN ! If the worksheet buyer and the session buyer are the same, set the alternate email order conf template and we're done
10365 GOSUB 4650 ! Read ECA record for buyer on worksheet into ECA$
10370 ALT_ETEMPLATE$=STP(ECA$(944,40),3)
10395 RETURN 
10399 ! 
10400 REM "Item price to be retrieved from lots, only if parameter enabled for EC customer - WO 227556
10405 GET_PRICE_FROM_LOTS:
10410 LOT_PRICE=0,LOT_PRICE_FOUND=0,LOT_PRICE_OPTIONS$="W"
10415 IF EC$[7](747,1)<>"Y" OR POS(ECE$(28,1)="CI")=0 THEN GOTO DONE_GPL
10420 LOT_ITEMKEY$=ECE$(29,20); IF NUL(ECE$(29,20)) OR NOT(NUL(ECE$(129,1))) THEN GOTO DONE_GPL ! Abort if no valid item code on line or set to create a PO
10425 DIM ECE_WHSE_LIST$(48); ECE_WHSE_LIST$=STP(ECE$(165,48),2)
10430 CALL "FM2ICF",ERR=*NEXT,X3$,X4$,EC_PARM$,EC${ALL},LOT_ITEMKEY$,ECE_WHSE_LIST$,"",0,LOT_PRICE,LOT_PRICE_FOUND,LOT_PRICE_OPTIONS$
10435 DONE_GPL:
10440 IF LOT_PRICE_FOUND AND LOT_PRICE<>0 THEN CALC_ITEM_PRICE=LOT_PRICE,RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
10445 RETURN 
10449 ! 
10450 CLEAR_CC_INFO:! WO239471, if CC order and we are about to send order confirmation email, then we no longer need CC info in ECD so clear it
10460 ECD$(411,68)=DIM(68) ! CC type, number, expiration, name
10465 ECD$(1099,4)=DIM(4) ! CVV
10495 RETURN 
10499 ! 
10500 GET_EEI_INFO:! WO237271, read EEI with ship via code
10505 SHIPPING_OPTION$=""
10510 IF ECD$(188,1)=DIM(1) THEN GOTO *RETURN
10515 DIM EEI$(127); READ (Z[51],KEY=ECD$(188,1),DOM=*RETURN)EEI$(1)
10520 SHIPPING_OPTION$=STP(EEI$(2,50),1)
10545 RETURN 
10549 ! 
10550 DISPLAY_DELETE_SECTION:
10552 DD_SECTION$="",DD_TAGS$="001<line_number>"
10554 DD_TEMPLATE$=LS2$; DD_END=POS("?tf?deletesectionend?"=DD_TEMPLATE$); IF DD_END>0 THEN LS2$=MID(DD_TEMPLATE$,DD_END+LEN("?tf?deletesectionend?")); DD_TEMPLATE$=DD_TEMPLATE$(1,DD_END-1)
10558 DDS$=DD_TEMPLATE$
10559 IF NOT(NUL(ECE$(259,3))) THEN GOTO *RETURN ! Companion item, suppress delete section
10562 DD_NEXT_TAG: DD_INDEX=POS("?tf?"=DDS$); IF DD_INDEX=0 THEN GOTO DD_SECTION_END
10564 DDSEND_INDEX=POS("?"=DDS$(DD_INDEX+4)),DD_TAG$=DDS$(DD_INDEX+4,DDSEND_INDEX-1),DDS1$=DDS$(1,DD_INDEX-1),DDS2$=DDS$(DD_INDEX+DDSEND_INDEX+4),DD_POS=POS("<"+DD_TAG$+">"=DD_TAGS$); IF DD_POS=0 THEN DDS$=DDS1$+DDS2$,DD_INDEX=0 ELSE DD_INDEX=NUM(DD_TAGS$(DD_POS-3,3))
10570 ON DD_INDEX GOTO DD_NOT_FOUND,DD_TAG_1,DD_NOT_FOUND
10571 DD_TAG_1: DDS$=DDS1$+FN%HTML_ESC$(ECE$(25,3))+DDS2$; GOTO DD_NEXT_TAG; REM "line_number
10589 DD_NOT_FOUND: DDS$=DDS1$+DDS2$; GOTO DD_NEXT_TAG; REM "not found, eliminate tag
10590 GOTO DD_NEXT_TAG
10591 DD_SECTION_END:
10594 DD_SECTION$+=DDS$
10595 RETURN 
10599 ! 
10600 DISPLAY_CHGQTY_SECTION:
10602 CQ_SECTION$="",CQ_TAGS$="001<line_number>002<quantity>003<rc_number>"
10604 CQ_TEMPLATE$=LS2$; CQ_END=POS("?tf?changeqtyend?"=CQ_TEMPLATE$); IF CQ_END>0 THEN LS2$=MID(CQ_TEMPLATE$,CQ_END+LEN("?tf?changeqtyend?")); CQ_TEMPLATE$=CQ_TEMPLATE$(1,CQ_END-1)
10608 CQS$=CQ_TEMPLATE$
10609 IF NOT(NUL(ECE$(259,3))) OR POS(ECE$(28,1)="MS") THEN GOTO *RETURN ! Companion item or message line or special charge, suppress change qty section
10612 CQ_NEXT_TAG: CQ_INDEX=POS("?tf?"=CQS$); IF CQ_INDEX=0 THEN GOTO CQ_SECTION_END
10614 CQSEND_INDEX=POS("?"=CQS$(CQ_INDEX+4)),CQ_TAG$=CQS$(CQ_INDEX+4,CQSEND_INDEX-1),CQS1$=CQS$(1,CQ_INDEX-1),CQS2$=CQS$(CQ_INDEX+CQSEND_INDEX+4),CQ_POS=POS("<"+CQ_TAG$+">"=CQ_TAGS$); IF CQ_POS=0 THEN CQS$=CQS1$+CQS2$,CQ_INDEX=0 ELSE CQ_INDEX=NUM(CQ_TAGS$(CQ_POS-3,3))
10620 ON CQ_INDEX GOTO CQ_NOT_FOUND,CQ_TAG_1,CQ_TAG_2,CQ_TAG_3,CQ_NOT_FOUND
10621 CQ_TAG_1: CQS$=CQS1$+FN%HTML_ESC$(ECE$(25,3))+CQS2$; GOTO CQ_NEXT_TAG; REM "line_number
10622 CQ_TAG_2: QTY_TOTAL_ORDER=QTY_TOTAL_ORDER+(ECE(0)/QTY_DIVISOR); IF ECE$(28,1)="M" THEN QTY$="0" ELSE QTY$=STR(ECE[0]/QTY_DIVISOR:"#########0") END_IF ; CQS$=CQS1$+FN%HTML_ESC$(STP(QTY$,2))+CQS2$; GOTO CQ_NEXT_TAG; REM "quantity
10623 CQ_TAG_3: CQS$=CQS1$+FN%HTML_ESC$(STP(ECE$(262,20),1))+CQS2$; GOTO CQ_NEXT_TAG; REM "rc_number
10639 CQ_NOT_FOUND: CQS$=CQS1$+CQS2$; GOTO CQ_NEXT_TAG; REM "not found, eliminate tag
10640 GOTO CQ_NEXT_TAG
10641 CQ_SECTION_END:
10644 CQ_SECTION$+=CQS$
10645 RETURN 
10649 ! 
10650 GET_NOTEPAD:! SSP244339
10660 CALL "UPDFMN;READBYKEY",-99,0,ECD$(235,8),"","","","",FMN$,FMN{ALL},FOUND
10670 IF NOT(FOUND) THEN GOTO *RETURN
10675 FMN1$=MID(FMN$,9,50),FMN2$=MID(FMN$,59,50),FMN3$=MID(FMN$,109,50)
10680 FMN4$=MID(FMN$,159,50),FMN5$=MID(FMN$,209,50),FMN6$=MID(FMN$,259,50)
10685 FMN7$=MID(FMN$,309,50),FMN8$=MID(FMN$,359,50),FMN9$=MID(FMN$,409,50),FMN10$=MID(FMN$,459,50)
10695 RETURN 
10699 ! 
10700 CHECK_FOR_OVERBUDGET_LINES:! WO 242646 - Check if worksheet line has "require payment by cc" flag set because of an over budget situation
10705 OVERBUDGET_REQUIRE_CC$="N"; IF EC$[7](750,1)<>"Y" THEN RETURN 
10710 READ (Z(3),KEY=WORKSHEET$,DOM=*NEXT)
10720 NEXT_CFOL:DIM ECE$(499),ECE[8]; ECE_KEY$=KEY(Z[3],END=DONE_CFOL); IF ECE_KEY$(1,LEN(WORKSHEET$))<>WORKSHEET$ THEN GOTO DONE_CFOL ELSE READ (Z[3],KEY=ECE_KEY$)IOL=0330
10730 IF ECE$(425,1)="Y" THEN OVERBUDGET_REQUIRE_CC$="Y"
10735 GOTO NEXT_CFOL
10740 DONE_CFOL:
10745 RETURN 
10749 ! 
10750 UPDATE_CC_REQUIRED:! WO 242686 - Update the session and worksheet with appropriate cc required settings, on the fly
10760 IF NOT(NUL(CC_REQUIRED$)) THEN EXTRACT RECORD (33005,KEY=EC$[1](1,7))ECBREC$; ECBREC$(1166,1)=CC_REQUIRED$; GOSUB 7450; WRITE RECORD (33005,KEY=EC$[1](1,7))ECBREC$; EC$[1]=ECBREC$
10770 IF EC$[1](1166,1)="Y" THEN IF NOT(NUL(CCTEMPLATE$)) THEN TEMPLATE$=CCTEMPLATE$; CALL "EC3SVT",X3$,X4$,EC_PARM$,EC${ALL},TEMPLATE$; REM "Reset TEMPLATE$ to CCTEMPLATE$ on the fly. In 7450's reset terms code on the fly.
10780 ECD$(507,1)=EC$[1](1166,1),ECD$(53,2)=EC$[1](1164,2); REM "1166,1="credit card order?", 1164,2="terms code for session, based on buyer settings"
10795 RETURN 
10799 ! 
10800 OVERBUDGET_LINES_LOCK_BUYER:! WO 242646 - Check if worksheet line has "lock buyer" flag set because of an over budget situation
10805 OVERBUDGET_LOCK_BUYER$="N"; IF EC$[2](1078,1)<>"Y" THEN RETURN 
10810 READ (Z(3),KEY=WORKSHEET$,DOM=*NEXT)
10820 NEXT_OLLB:DIM ECE$(499),ECE[8]; ECE_KEY$=KEY(Z[3],END=DONE_OLLB); IF ECE_KEY$(1,LEN(WORKSHEET$))<>WORKSHEET$ THEN GOTO DONE_OLLB ELSE READ (Z[3],KEY=ECE_KEY$)IOL=0330
10830 IF ECE$(426,1)="Y" THEN OVERBUDGET_LOCK_BUYER$="Y"
10835 GOTO NEXT_OLLB
10840 DONE_OLLB:
10841 IF OVERBUDGET_LOCK_BUYER$<>"Y" THEN GOTO DONE_OLLB_2
10842 ECAFSLOT=FN%FFN("ECA"+X3$(9,3)); IF ECAFSLOT<0 THEN GOTO *RETURN
10843 EXTRACT (ECAFSLOT,KEY=EC$[2](1,15),DOM=*RETURN)ECA$,ECA2$
10844 ECA$(88,1)="N" ! Set "Allow O/E=N"
10845 WRITE (ECAFSLOT,KEY=EC$[2](1,15))ECA$,ECA2$
10847 DONE_OLLB_2:
10848 RETURN 
10849 ! 
10850 DO_OVERBUDGET_CHECKS:! WO 242686 - Perform overbudget related checks here
10860 IF EC$[7](750,1)="Y" THEN GOSUB CHECK_FOR_OVERBUDGET_LINES; IF OVERBUDGET_REQUIRE_CC$="Y" THEN CC_REQUIRED$="Y"; GOSUB UPDATE_CC_REQUIRED ! WO242686 - Check for over budget lines if directed to do so, if one is found then force credit card order mode.
10870 IF EC$[2](1078,1)="Y" THEN GOSUB OVERBUDGET_LINES_LOCK_BUYER ! WO242686 - Check for over budget lines if directed to do so, if one is found then lock buyer, set "Allow O/E=N".
10895 RETURN 
10899 ! 
10900 CREATE_EEJ:! WO247495, if notepad or ord cust refs then write EEJ
10905 DIM EEJ$(1210); EEJ$(1,10)=ECD$(1,10)
10910 EEJ$(11,50)=FMN1$,EEJ$(61,50)=FMN2$,EEJ$(111,50)=FMN3$,EEJ$(161,50)=FMN4$,EEJ$(211,50)=FMN5$
10915 EEJ$(261,50)=FMN6$,EEJ$(311,50)=FMN7$,EEJ$(361,50)=FMN8$,EEJ$(411,50)=FMN9$,EEJ$(461,50)=FMN10$
10920 EEJ$(511,60)=OCR1$,EEJ$(571,60)=OCR2$,EEJ$(631,60)=OCR3$,EEJ$(691,60)=OCR4$,EEJ$(751,60)=OCR5$
10925 EEJ$(811,60)=OCR6$,EEJ$(871,60)=OCR7$,EEJ$(931,60)=OCR8$,EEJ$(991,60)=OCR9$,EEJ$(1051,60)=OCR10$
10935 IF STP(EEJ$(1,1210),3)="" THEN RETURN 
10940 WRITE (Z[52],KEY=EEJ$(1,10))EEJ$
10945 RETURN 
10949 ! 
10950 RETRIEVE_EEJ:! WO247495, get notepad and ord cust refs info
10955 DIM EEJ$(1210); FIND (Z[52],KEY=ECD$(1,10),DOM=*RETURN)EEJ$(1)
10960 FMN1$=EEJ$(11,50),FMN2$=EEJ$(61,50),FMN3$=EEJ$(111,50),FMN4$=EEJ$(161,50),FMN5$=EEJ$(211,50)
10965 FMN6$=EEJ$(261,50),FMN7$=EEJ$(311,50),FMN8$=EEJ$(361,50),FMN9$=EEJ$(411,50),FMN10$=EEJ$(461,50)
10970 OCR1$=EEJ$(511,60),OCR2$=EEJ$(571,60),OCR3$=EEJ$(631,60),OCR4$=EEJ$(691,60),OCR5$=EEJ$(751,60)
10975 OCR6$=EEJ$(811,60),OCR7$=EEJ$(871,60),OCR8$=EEJ$(931,60),OCR9$=EEJ$(991,60),OCR10$=EEJ$(1051,60)
10985 IF STP(EEJ$(11,500),3)>"" THEN FMN_NOTE$="Y" ! Will trigger the call to write FMN at line 7922
10990 IF STP(EEJ$(511,600),3)>"" THEN FV1$="Y" ! Will trigger the call to write FV1 at line 7924
10995 RETURN 
10999 ! 
11000 READ_AR1:! WO248159 - read buyer's customer record
11010 READ (33007,KEY=EC$[2](51,10),DOM=*RETURN)AR1$
11040 RETURN 
11045 ! 
11050 CALL_SH2EXP:! WO248159
11060 CALL "SH2EXP",ERR=*RETURN,X3$,X4$,ECD$(235,8),SH2EXP_OPTIONS$,RET$
11090 RETURN 
11095 ! 
11100 GET_ITEM_FROM_CIC:! WO251794 - cic_code - read FT1 for item code
11105 DIM FOUND_ITEM$(10); FOUND_ITEM$(1)=CIC_CODE$,FT1_KEY$=EC$[2](51,10)+PAD(CIC_CODE$,20)
11110 READ (Z[53],KEY=FT1_KEY$,DOM=*NEXT)
11115 FT1$=KEY(Z[53],END=*RETURN)
11120 IF FT1$(1,30)=FT1_KEY$ THEN FOUND_ITEM$(1)=FT1$(31)
11140 RETURN 
11145 ! 
11150 VEND_WHSE_PRT_FLGS:! WO253441, if line has PO code then read vendor master for possible warehouse code and/or print flag override
11151 GOSUB SET_READONLY ! SSP261192
11155 IF MID(ECE$,115,10)=DIM(10) OR MID(ECE$,129,1)=DIM(1) THEN RETURN 
11160 DIM AP42$(426); READ (Z[45],KEY=ECE$(115,10),DOM=*RETURN)AP42$(1)
11165 IF AP42$(418,4)<>DIM(4) THEN ECE$(111,4)=AP42$(418,4) ! Warehouse code
11170 IF AP42$(413,5)<>DIM(5) THEN ECE$(13,5)=AP42$(413,5) ! Print flags
11190 GOSUB CLEAR_READONLY; RETURN ! SSP261192 
11195 ! 
11200 GET_DATE_AND_TIME:! SSP 255476 - Get formatted date and time to use in approval log messages
11210 CALL "EC3DAT",X3$,3,CURRTIME$,CURRDATE$,FORMATTED_DATE$
11220 INTIME$=CURRTIME$; IF INTIME$=DIM(4) THEN DIM OUTTIME$(0) ELSE CALL "EC3DAT",X3$,12,INTIME$,OUTTIME$,""
11230 FORMATTED_TIME$=OUTTIME$
11245 RETURN 
11249 ! 
11300 LOG_APPR_LINE_ADD:! SSP 255476 - New line added by approver - Add approval log message
11305 IF NUL(FORMATTED_DATE$) THEN GOSUB GET_DATE_AND_TIME
11310 DIM EDT$(295); EDT$(1,10)=ECD$(1,10),EDT$(11,3)=ECE$(25,3),EDT$(14,3)="001"
11315 IF POS(ECE$(28,1)="MS")=0 THEN EDT$(32,60)="Item "+STP(ECE$(39,10),2)+" was added to order " ELSE EDT$(32,60)="Line was added to order "
11320 EDT$(152,60)="on "+FORMATTED_DATE$+" at "+FORMATTED_TIME$+" by "+STP(EC$[2](16,35),2)
11325 WRITE (Z[54],KEY=EDT$(1,16),DOM=*NEXT)EDT$; GOTO 11331
11330 EDT$(14,3)=STR(NUM(EDT$(14,3))+1:"000"); GOTO 11325
11345 RETURN 
11349 ! 
11350 LOG_APPR_LINE_CHANGE:! SSP 255476 - Line quantity changed by approver - Add approval log message
11355 IF NUL(FORMATTED_DATE$) THEN GOSUB GET_DATE_AND_TIME
11360 DIM EDT$(295); EDT$(1,10)=ECD$(1,10),EDT$(11,3)=ECE$(25,3),EDT$(14,3)="001"
11365 EDT$(32,60)="Order quantity changed from "+STP(STR(ORIG_ORDER_QUANTITY),2)+" "+ECE$(107,4)+"/"+STR(ECE[1])
11370 EDT$(92,60)="to "+STP(STR(NEW_ORDER_QUANTITY),2)+" "+ECE$(107,4)+"/"+STR(ECE[1])
11375 EDT$(152,60)="on "+FORMATTED_DATE$+" at "+FORMATTED_TIME$+" by "+STP(EC$[2](16,35),2)
11380 WRITE (Z[54],KEY=EDT$(1,16),DOM=*NEXT)EDT$; GOTO 11386
11385 EDT$(14,3)=STR(NUM(EDT$(14,3))+1:"000"); GOTO 11380
11395 RETURN 
11399 ! 
11400 LOG_APPR_LINE_DELETE:! SSP 255476 - Line deleted by approver - Add approval log message
11405 IF NUL(FORMATTED_DATE$) THEN GOSUB GET_DATE_AND_TIME
11410 DIM EDT$(295); EDT$(1,13)=ECD_IN$(1,10)+ECE_IN_DATA$[DEL_INDEX](25,3),EDT$(14,3)="001"
11415 EDT$(32,60)="Line was deleted from order "
11420 EDT$(152,60)="on "+FORMATTED_DATE$+" at "+FORMATTED_TIME$+" by "+STP(EC$[2](16,35),2)
11425 WRITE (Z[54],KEY=EDT$(1,16),DOM=*NEXT)EDT$; GOTO 11431
11430 EDT$(14,3)=STR(NUM(EDT$(14,3))+1:"000"); GOTO 11425
11445 RETURN 
11449 ! 
11500 REM "Standard routine to perform all purchase time checking routines (come here if you need anything done or checked when "purchase=Y")
11505 ON_PURCHASE_TASKS:
11510 IF EC$[2](1089,1)="Y" THEN GOSUB DEFAULT_CC_RECORD ! 257291 - Check and do if buyer setup to have default cc record created
11595 RETURN 
11599 ! 
11600 REM "257291 - Buyer parameter to setup default CC record for web order
11605 DEFAULT_CC_RECORD:
11606 IF DEFAULT_CC_RECORD_DONE THEN GOTO *RETURN ! Only do this once per request
11608 DEBUGMESS$="CUSTOMER|"+EC$[2](51,10)+"|DEFAULT CC INFO INSERTED INTO REQUEST|"
11609 ! cc mode control parameters
11610 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_required"; DATA$[NUM_ENTRIES,1]="Y" ! "cc_required
11611 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="ccaction"; DATA$[NUM_ENTRIES,1]="O" ! "ccaction
11612 ! cc account information from ARZ
11615 IF FN%HAS_MODULE("CV") THEN {
11616 CALL "CVGMAD;GET_FIRST_CC",ERR=*NEXT,EC$[2](51,10),DEF_CC_TYPE$,DEF_CC_NUMBER$,DEF_CC_EXP_DATE$,DEF_CC_NAME$,DEF_VAULT_ID$
11617 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="vault_id"; DATA$[NUM_ENTRIES,1]=DEF_VAULT_ID$ ! "vault_id
11618  } ELSE {
11619 CALL "ECGMAD;GET_FIRST_CC",ERR=*NEXT,EC$[2](51,10),DEF_CC_TYPE$,DEF_CC_NUMBER$,DEF_CC_EXP_DATE$,DEF_CC_NAME$
11620  }
11621 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_type"; DATA$[NUM_ENTRIES,1]=DEF_CC_TYPE$; IF NUL(DEF_CC_TYPE$) THEN DEBUGMESS$+="CC_TYPE IS NULL|" ! "cc_type; ARZ.CREDIT_CARD_TYPE
11622 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_expire"; DATA$[NUM_ENTRIES,1]=DEF_CC_EXP_DATE$; IF NUL(DEF_CC_EXP_DATE$) THEN DEBUGMESS$+="CC_EXPDT IS NULL|" ! "cc_expire; ARZ.EXPIRATION_DATE
11623 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_number"; DATA$[NUM_ENTRIES,1]=DEF_CC_NUMBER$; IF NUL(DEF_CC_NUMBER$) THEN DEBUGMESS$+="CC_NUM IS NULL|" ! "cc_number; ARZ.CREDIT_CARD_NUMBER
11624 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_name"; DATA$[NUM_ENTRIES,1]=DEF_CC_NAME$; IF NUL(DEF_CC_NAME$) THEN DEBUGMESS$+="CC_NAME IS NULL|" ! "cc_name; ARZ.NAME_ON_CARD
11629 ! cc billing address
11630 DEF_CC_BILL_ADDR$=""; IF NOT(NUL(EC$[2](780,87))) THEN DEF_CC_BILL_ADDR$=EC$[2](780,87) ELSE GOSUB READ_AR1; DEF_CC_BILL_ADDR$=MID(AR1$,56,87)
11631 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_bill_addr1"; DATA$[NUM_ENTRIES,1]=MID(DEF_CC_BILL_ADDR$,1,30) ! "cc_bill_addr1
11632 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_bill_addr2"; DATA$[NUM_ENTRIES,1]=MID(DEF_CC_BILL_ADDR$,31,30) ! "cc_bill_addr2
11633 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_bill_city"; DATA$[NUM_ENTRIES,1]=MID(DEF_CC_BILL_ADDR$,61,16) ! "cc_bill_city
11634 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_bill_state"; DATA$[NUM_ENTRIES,1]=MID(DEF_CC_BILL_ADDR$,77,2) ! "cc_bill_state
11635 NUM_ENTRIES++; DATA$[NUM_ENTRIES,0]="cc_bill_zip"; DATA$[NUM_ENTRIES,1]=MID(DEF_CC_BILL_ADDR$,79,9) ! "cc_bill_zip
11638 IF NUL(DEF_CC_BILL_ADDR$) THEN DEBUGMESS$+="CC_BILL_ADDR IS NULL|"
11639 ! 
11643 DEFAULT_CC_RECORD_DONE=1
11644 GOSUB LOG_THIS_REQUEST
11645 RETURN 
11649 ! 
11700 PROCESS_3P_FREIGHT_LINE:! WO 262732
11705 IF FRT_3P_IN_LINE$<>"Y" THEN RETURN 
11710 FRT_3P_IN_LINE$="N" ! Reset flag, in case we pass through this routine again
11720 TMP_INDEX=HIGHEST_VAL_COUNT+1; ECE_IN_DATA$[TMP_INDEX]=DIM(LEN(ECE_IN$)) ! Prepare for an ECE line for freight
11725 IF NOT(NUL(FRT_3P_LINE_NUM$)) THEN ECE_IN_DATA$[TMP_INDEX](25,3)=STR(NUM(FRT_3P_LINE_NUM$,ERR=*NEXT):"000"); REM "3p_freight_line_number
11730 IF FRT_3P_DISPLAY_LINE$="Y" THEN ECE_IN_DATA$[TMP_INDEX](258,1)="Y" ELSE ECE_IN_DATA$[TMP_INDEX](258,1)="N"; REM "3p_freight_display_line
11735 ECE_IN_DATA$[TMP_INDEX](228,20)=FRT_3P_SPC_CODE$; REM "3p_freight_special_code
11740 ECE_IN_DATA$[TMP_INDEX](28,1)="S"; REM "line_type, hardcode to S-Special charge
11745 ECE_IN_DATA[TMP_INDEX,2]=NUM(ECD_IN$(1114,11),ERR=*NEXT),ECE_SET_DATA[TMP_INDEX,2]=1; ECD_IN$(1114,11)=""; REM "line_unit_price, populate with 3p_freight value from header and clear it at header level
11750 ECE_IN_DATA[TMP_INDEX,0]=1,ECE_SET_DATA[TMP_INDEX,0]=1; REM "quantity, hard code to 1
11755 IF NOT(NUL(FRT_3P_VENDOR_CODE$)) AND NOT(NUL(FRT_3P_PO_CODE$)) THEN {
11757 ECE_IN_DATA$[TMP_INDEX](129,1)=FRT_3P_PO_CODE$; REM "po_code
11759 ECE_IN_DATA$[TMP_INDEX](115,10)=FRT_3P_VENDOR_CODE$; REM "vendor_code
11761 ECE_IN_DATA$[TMP_INDEX](125,4)=FRT_3P_VENDOR_PLANT$; REM "vendor_plant
11765  }
11790 HIGHEST_VAL_COUNT=TMP_INDEX
11795 RETURN 
11799 ! 
11800 ITEM_LINE_TYPE_DESC:! SSP268433
11805 ILTD$=""
11810 ON POS(ECE$(467,1)="NECSB") GOTO 11845,11815,11820,11825,11830,11835
11815 ILTD$="New"; GOTO 11845
11820 ILTD$="Exact repeat"; GOTO 11845
11825 ILTD$="Copy change"; GOTO 11845
11830 ILTD$="Spec change"; GOTO 11845
11835 ILTD$="Copy+Spec change"; GOTO 11845
11845 RETURN 
11849 ! 
11850 WRITE_EEK:! SSP229993, vault_id
11860 DIM EEK$(255)
11865 EEK$(1,10)=ECD$(1,10)
11870 EEK$(11,3)="001" ! Sequence hardcoded to 001 for now
11875 EEK$(14,64)=PAD(EEK_VAULT_ID$,64)
11880 EEK$(78,40)=PAD(EEK_CUST_PROFILE_ID$,40) ! SSP307309-DBD-113
11890 WRITE (Z[57],KEY=EEK$(1,10))EEK$
11895 RETURN 
11899 ! 
11900 GET_ITEM_FROM_FROM_CIC:! WO277813, from_cic_code
11905 DIM FROM_FOUND_ITEM$(10); FROM_FOUND_ITEM$(1)=FROM_CIC_CODE$,FROM_CUSTOMER$=ECE_IN$(29,10),ORDER_CUSTOMER$=EC$[2](51,10)
11910 IF FROM_CUSTOMER$=DIM(10) THEN GOTO TRY_ORDER_CUST ELSE FT1_KEY$=FROM_CUSTOMER$+PAD(FROM_CIC_CODE$,20); READ (Z[53],KEY=FT1_KEY$,DOM=*NEXT)
11915 FT1$=KEY(Z[53],END=TRY_ORDER_CUST)
11920 IF FT1$(1,30)=FT1_KEY$ THEN FROM_FOUND_ITEM$(1)=FT1$(31); GOTO *RETURN ! found using from customer
11925 TRY_ORDER_CUST: FT1_KEY$=ORDER_CUSTOMER$+PAD(FROM_CIC_CODE$,20)
11930 READ (Z[53],KEY=FT1_KEY$,DOM=*NEXT)
11935 FT1$=KEY(Z[53],END=*RETURN)
11940 IF FT1$(1,30)=FT1_KEY$ THEN FROM_FOUND_ITEM$(1)=FT1$(31),ECE_IN$(29,10)=EC$[2](51,10) ! if found under ordering customer then change from customer to ordering customer
11945 RETURN 
11949 ! 
11950 SMART_SHIPTO_ADDR:! WO278424, rework addr1 and addr2 
11955 LEFTOVER$=""; IF LEN(SMART_SHIPTO_ADDR_1$)>60 THEN SMART_SHIPTO_ADDR_1$=SMART_SHIPTO_ADDR_1$(1,60) ! Addr1 is 30 and Addr2 is 30 so that is the max we can try for.
11960 P=POS(" "=SMART_SHIPTO_ADDR_1$,-1); IF P=0 THEN GOTO *RETURN ! if there isn't a space then can't do it.
11965 P=POS(" "=SMART_SHIPTO_ADDR_1$,-1); IF P=0 THEN GOTO 11980 ! if P=0 then use what we have at this point
11970 LEFTOVER$=SMART_SHIPTO_ADDR_1$(P+1)+DIM(1)+LEFTOVER$,SMART_SHIPTO_ADDR_1$=SMART_SHIPTO_ADDR_1$(1,P-1)
11975 IF LEN(SMART_SHIPTO_ADDR_1$)>30 THEN GOTO 11965
11980 ECD_IN$(243,30)=SMART_SHIPTO_ADDR_1$
11985 ECD_IN$(273,30)=LEFTOVER$+SMART_SHIPTO_ADDR_2$
11995 RETURN 
11999 ! 
12000 LINE_UNIT_PRICE_OVERRIDE:! 281341
12020 IF ECE[2]>0 THEN CALC_ITEM_PRICE=ECE[2],RETURNED_PRICE$=STR(CALC_ITEM_PRICE:X3$(69,1)+"###,###.00"),ITEM_PRICE=CALC_ITEM_PRICE
12045 RETURN 
12049 ! 
12050 GET_LOC_FROM_CUST_LOC_CODE:! SSP286528, get location into 36,4 from cust_loc_code if found
12055 FMM_PREFIX$="C"+EC$[2](51,10)+INPUT_CUST_LOC_CODE$
12060 READ (Z[16],KEY=FMM_PREFIX$,DOM=*NEXT)
12065 FMM$=KEY(Z[16],END=*RETURN); IF MID(FMM$,1,LEN(FMM_PREFIX$))<>FMM_PREFIX$ THEN RETURN 
12070 IF NOT(NUL(MID(FMM$,21,4))) THEN ECD_IN$(36,4)=MID(FMM$,21,4)
12095 RETURN 
12099 ! 
12100 WRITE_EEL:! SSP290559, 3p_full_url DBD-191-DBSPT-117328-SSP307365 DON'T COME HERE ANYMORE - SEE WRITE_EEL2 - MULTIPLE SEQUENCE SUPPORT
12110 IF STP(FULL_URL$,3)="" OR NOT(NUL(MID(ECE$,259,3))) THEN RETURN ! Don't write if blank or if this is a companion line
12115 DIM EEL$(311)
12120 EEL$(1,10)=ECD$(1,10),EEL$(11,3)=ECE$(25,3),EEL$(14,2)="01" ! Sequence hardcoded to 01 for now
12130 EEL$(16,256)=PAD(FULL_URL$,256)
12140 WRITE (Z[58],KEY=EEL$(1,15))EEL$
12145 RETURN 
12149 ! 
12150 RETRIEVE_EEL:! SSP290559, 3p_full_url, DBD-191-DBSPT-117328-SSP307365 REWORK FOR ADDITIONAL SEQUENCES
12154 FULL_URL_N$=""
12155 TAG_PARM=1; IF TAG_PARM$>"" THEN TAG_PARM=NUM(TAG_PARM$,ERR=*PROCEED) END_IF ; EEL_SEQ$=STR(TAG_PARM:"00")
12160 DIM EEL$(311)
12170 READ (Z[58],KEY=ECE$(1,10)+ECE$(25,3)+EEL_SEQ$,DOM=*RETURN)EEL$(1)
12175 FULL_URL_N$=STP(EEL$(16,256),1)
12195 RETURN 
12199 ! 
12200 RETRIEVE_SAVED_EEL:! SSP290559, retrieving saved wk, DBD-191-DBSPT-117328-SSP307365 REWORK FOR MULTIPLE SEQUENCE SUPPORT
12205 READ (Z[58],KEY=ECER$(1,10)+ECER$(25,3),DOM=*NEXT)
12207 SAVE_EEL_KEY$=KEY(Z[58],END=*RETURN); IF SAVE_EEL_KEY$(1,13)<>ECER$(1,10)+ECER$(25,3) THEN RETURN 
12210 READ RECORD (Z[58],KEY=SAVE_EEL_KEY$,DOM=*RETURN)SAVED_EEL$
12215 SAVED_EEL$(1,13)=ECE$(1,10)+ECE$(25,3)
12220 WRITE RECORD (Z[58],KEY=SAVED_EEL$(1,15))SAVED_EEL$
12225 GOTO 12207
12245 RETURN 
12249 ! 
12250 CHECK_CONTRACT_NUM:! WO291781
12255 VALID_CONTRACT_NUMBER$="",VALID_CONTRACT_DATE$=""
12260 PARTIAL_FTS$=EC$[2](51,10)+PAD(TST_CONTRACT_NUMBER$,20)
12265 READ (Z[59],KEY=PARTIAL_FTS$,DOM=*NEXT)
12270 NEXT_FTS:DIM FTS$(617); FTS_KEY$=KEY(Z[59],END=*RETURN); READ (Z[59],KEY=FTS_KEY$)FTS$(1)
12275 IF FTS$(1,30)<>PARTIAL_FTS$ THEN RETURN ! can't find valid contract
12280 IF FTS$(97,6)<X3$(21,6) THEN GOTO NEXT_FTS ! contract number matches but it's expired so look for another
12285 VALID_CONTRACT_NUMBER$=FTS$(11,20),VALID_CONTRACT_DATE$=FTS$(31,6) ! found a match and it's not expired
12295 RETURN 
12299 ! 
12300 CHECK_CSR:! WO294834
12305 VALID_CSR$=""
12310 FIND (Z[60],KEY=TST_CSR$,DOM=*RETURN)
12315 VALID_CSR$=TST_CSR$
12345 RETURN 
12349 ! 
12400 PROCESS_EEN:! 298437 - PO Comments
12405 IF EEN_IN<=0 THEN RETURN 
12410 FOR EENI=1 TO EEN_IN
12420 DIM EEN$(100); EEN$(1,10)=WORKSHEET$,EEN$(11,3)=ECE$(25,3),EEN$(14,3)=STR(EENI:"000"),EEN$(17,1)="Y"
12425 IF NOT(NUL(EEN_IN$[EENI])) THEN {
12430 EEN$(18,60)=EEN_IN$[EENI]
12440 WRITE (Z[61],KEY=EEN$(1,16))IOL=IOL_EEN
12445  }
12450 NEXT EENI
12495 RETURN 
12499 ! 
12500 PARSE_PO_COMMENTS:
12510 EEN_IN_MAX=100; DIM EEN_IN$[EEN_IN_MAX]; EEN_IN=0
12520 NEXT_EEN_TOKEN:IF NUL(VALUE$) OR EEN_IN>=100 THEN GOTO EEN_TOKEN_DONE
12530 NEXTNL=POS("\+"=VALUE$); IF NEXTNL=0 OR NEXTNL>=60 THEN NEXTEENTOK$=MID(VALUE$,1,60),VALUE$=MID(VALUE$,61) ELSE NEXTEENTOK$=MID(VALUE$,1,NEXTNL-1),VALUE$=MID(VALUE$,NEXTNL+2)
12540 IF NOT(NUL(NEXTEENTOK$)) THEN EEN_IN$[++EEN_IN]=NEXTEENTOK$
12580 GOTO NEXT_EEN_TOKEN
12590 EEN_TOKEN_DONE:
12595 RETURN 
12599 ! 
12600 PARSE_ORDER_COMMENTS:! 299085
12610 MLINES_IN_MAX=100; MLINE_MAX=40; DIM MLINES_IN$[MLINES_IN_MAX]; MLINES_IN=0
12620 NEXT_MLINES_TOKEN:IF NUL(VALUE$) OR MLINES_IN>=100 THEN GOTO MLINES_TOKEN_DONE
12630 NEXTNL=POS("\+"=VALUE$); IF NEXTNL=0 OR NEXTNL>=MLINE_MAX THEN IF LEN(VALUE$)>MLINE_MAX AND MID(VALUE$,MLINE_MAX,1)<>" " AND MID(VALUE$,MLINE_MAX+1,1)<>" " THEN BREAKSPACE=POS(" "=MID(VALUE$,1,MLINE_MAX),-1); IF BREAKSPACE<=0 THEN BREAKSPACE=MLINE_MAX END_IF ; NEXTMLINESTOK$=MID(VALUE$,1,BREAKSPACE),VALUE$=MID(VALUE$,BREAKSPACE+1) ELSE NEXTMLINESTOK$=MID(VALUE$,1,MLINE_MAX),VALUE$=MID(VALUE$,MLINE_MAX+1) END_IF ELSE NEXTMLINESTOK$=MID(VALUE$,1,NEXTNL-1),VALUE$=MID(VALUE$,NEXTNL+2)
12640 IF NOT(NUL(STP(NEXTMLINESTOK$,0))) THEN MLINES_IN$[++MLINES_IN]=STP(NEXTMLINESTOK$,0)
12680 GOTO NEXT_MLINES_TOKEN
12690 MLINES_TOKEN_DONE:
12695 RETURN 
12699 ! 
12700 PROCESS_ORDER_COMMENTS:! 299085
12710 IF MLINES_IN<=THEN THEN RETURN 
12720 FOR TMPI=1 TO MLINES_IN ! loop through the order comments array
12725 TMP_INDEX=HIGHEST_VAL_COUNT+1; ECE_IN_DATA$[TMP_INDEX]=DIM(LEN(ECE_IN$)) ! Prepare blank ECE "M" line
12730 ECE_IN_DATA$[TMP_INDEX](258,1)="Y" ! Show line in worksheet
12735 ECE_IN_DATA$[TMP_INDEX](28,1)="M" ! line type is "M"
12740 ECE_IN_DATA$[TMP_INDEX](67,40)=MLINES_IN$[TMPI] ! message line description
12785 HIGHEST_VAL_COUNT=TMP_INDEX
12790 NEXT TMPI ! End FOR loop
12795 RETURN 
12799 ! 
12800 EEO_VALUES:! WO300154, Retreive 1 or more values in EEO_VALUE$ place in EEO_VAL$[] and set EEO_VAL_COUNT-Values seperated by ', 's (that is comma + blank), current max of 200 values
12801 REM "We will add all values blank or not
12805 DIM EEO_VAL$[2000]; EEO_VAL_COUNT=0
12810 IF EEO_VAL_COUNT=2000 THEN GOTO 12840 ELSE EEO_VP=POS(", "=EEO_VALUE$); IF EEO_VP=0 THEN GOTO 12835
12815 EEO_VAL_COUNT=EEO_VAL_COUNT+1; IF EEO_VP=1 THEN EEO_VAL$[EEO_VAL_COUNT]="",EEO_VALUE$=EEO_VALUE$(3); GOTO 12810 ELSE EEO_VAL$[EEO_VAL_COUNT]=EEO_VALUE$(1,EEO_VP-1); IF EEO_VP=LEN(EEO_VALUE$) THEN EEO_VALUE$=""; GOTO 12840 ELSE EEO_VALUE$=EEO_VALUE$(EEO_VP+2); GOTO 12810
12835 REM "finish up last one
12837 EEO_VAL_COUNT=EEO_VAL_COUNT+1; EEO_VAL$[EEO_VAL_COUNT]=EEO_VALUE$
12840 IF EEO_VAL_COUNT>EEO_HIGHEST_VAL_COUNT THEN FOR EEO_TMP_INDEX=EEO_HIGHEST_VAL_COUNT+1 TO EEO_VAL_COUNT; EEO_IN_DATA$[EEO_TMP_INDEX]=DIM(LEN(EEO_IN$)); NEXT EEO_TMP_INDEX; EEO_HIGHEST_VAL_COUNT=EEO_VAL_COUNT; REM "If new higher val count value then initialize corresponding strings in EEO_IN_DATA$[]
12845 RETURN 
12849 ! 
12850 WRITE_EEO:! WO300245, PO data by worksheet line
12855 DIM EEO$(126)
12860 EEO$(1,13)=ECE$(1,10)+ECE$(25,3),EEO$(14,1)=ECE$(129,1)
12865 EEOSTR$="015012|"
12870 FOR II=1 TO LEN(EEOSTR$)-6 STEP 7
12875 XX=NUM(EEOSTR$(II,3)),YY=NUM(EEOSTR$(II+3,3)); IF STP(EEO_IN$(XX,YY),3," ")="" THEN GOTO 12880 ELSE EEO$(XX,YY)=EEO_IN$(XX,YY)
12880 NEXT II
12890 WRITE (Z[62],KEY=EEO$(1,13))EEO$
12895 RETURN 
12899 ! 
12900 CREATE_EEP:! WO 303296, Worksheet 3rd Party Order Info
12905 DIM EEP$(574); EEP$(1,10)=ECD$(1,10) ! DBD-185-DBSPT-115417-SSP307358, change DIM from 382 to 574
12910 EEP$(11,150)=ORDER_ID_3P$
12912 EEP$(161,10)=SENDER_ID_3P$
12914 EEP$(171,20)=FROM_ID_3P$
12916 EEP$(191,20)=TO_ID_3P$
12918 EEP$(211,20)=OTHER_1_3P$
12920 EEP$(231,20)=OTHER_2_3P$
12922 EEP$(251,20)=OTHER_3_3P$
12924 EEP$(271,150)=ORDER_ID_3P_2$ ! DBD-185-DBSPT-115417-SSP307358
12940 WRITE (Z[63],KEY=EEP$(1,10))EEP$
12945 RETURN 
12949 ! 
12950 RETRIEVE_EEP:! WO303296
12955 DIM EEP$(574); EEP_3P$="N"; FIND (Z[63],KEY=ECD$(1,10),DOM=*RETURN)EEP$(1); EEP_3P$="Y" ! DBD-185-DBSPT-115417-SSP307358, change DIM from 382 to 574
12960 ORDER_ID_3P$=EEP$(11,150)
12962 SENDER_ID_3P$=EEP$(161,10)
12964 FROM_ID_3P$=EEP$(171,20)
12966 TO_ID_3P$=EEP$(191,20)
12968 OTHER_1_3P$=EEP$(211,20)
12970 OTHER_2_3P$=EEP$(231,20)
12972 OTHER_3_3P$=EEP$(251,20)
12974 ORDER_ID_3P_2$=EEP$(271,150) ! DBD-185-DBSPT-115417-SSP307358
12995 RETURN 
12999 ! 
13000 TERMS_CODE_OVERRIDE:! WO306701
13005 TERMS_CODE_OVERRIDE$=""
13010 DIM AR2$(100); FIND (33017,KEY=VALUE$,DOM=*RETURN)AR2$(1)
13015 TERMS_CODE_OVERRIDE$=VALUE$
13045 RETURN 
13049 ! 
13050 UPDATE_TERMS_CODE:! WO306701
13060 EXTRACT RECORD (33005,KEY=EC$[1](1,7))ECBREC$
13065 ECBREC$(1164,2)=TERMS_CODE_OVERRIDE$
13070 WRITE RECORD (33005,KEY=EC$[1](1,7))ECBREC$
13075 EC$[1]=ECBREC$
13095 RETURN 
13099 ! 
13100 SYSTEM_DATE:! SSP307202, DBD-66 get system date for requisition date
13105 DTMP$=DTE(0:"%Y%Mz%Dz")
13110 SYSTEM_DATE$=CHR(INT((NUM(DTMP$(1,4))-1900)/10)+65)+DTMP$(4,5)
13145 RETURN 
13149 ! 
13150 GET_COUNTRY:! SS307210, DBD-75, get ZY8 country
13153 IF STP(COUNTRY_IN$,2)="" THEN COUNTRY_OUT$=DIM(2); RETURN 
13155 DEFAULT_COUNTRY$=OPPARM$(344,2); DIM ZY8$(450),ZY8[10]
13160 CALL "ZYGZY8;LOOKUP_COUNTRY",ERR=*NEXT,X3$,X4$,COUNTRY_IN$,ZY8$,ZY8{ALL}; GOTO 13165
13161 IF ERR=96 THEN DIM ZY8$(450); GOTO 13165 ELSE GOTO 9000 ! error 96 is country not found
13165 IF MID(ZY8$,1,2)=DIM(2) THEN COUNTRY_OUT$=DEFAULT_COUNTRY$ ELSE COUNTRY_OUT$=MID(ZY8$,1,2)
13195 RETURN 
13199 ! 
13200 SS_COUNTRY_IN_VALUES:! SSP307210 special shipping country values, need in array for lookup then back out later
13201 REM "We will add all values blank or not
13205 DIM SS_COUNTRY_IN_VAL$[2000]; SS_COUNTRY_IN_VAL_COUNT=0
13210 IF SS_COUNTRY_IN_VAL_COUNT=2000 THEN GOTO 13230 ELSE SS_COUNTRY_IN_VP=POS(", "=SS_COUNTRY_IN_VALUE$); IF SS_COUNTRY_IN_VP=0 THEN GOTO 13220
13215 SS_COUNTRY_IN_VAL_COUNT=SS_COUNTRY_IN_VAL_COUNT+1; IF SS_COUNTRY_IN_VP=1 THEN SS_COUNTRY_IN_VAL$[SS_COUNTRY_IN_VAL_COUNT]="",SS_COUNTRY_IN_VALUE$=SS_COUNTRY_IN_VALUE$(3); GOTO 13210 ELSE SS_COUNTRY_IN_VAL$[SS_COUNTRY_IN_VAL_COUNT]=SS_COUNTRY_IN_VALUE$(1,SS_COUNTRY_IN_VP-1); IF SS_COUNTRY_IN_VP=LEN(SS_COUNTRY_IN_VALUE$) THEN SS_COUNTRY_IN_VALUE$=""; GOTO 13230 ELSE SS_COUNTRY_IN_VALUE$=SS_COUNTRY_IN_VALUE$(SS_COUNTRY_IN_VP+2); GOTO 13210
13220 REM "finish up last one
13225 SS_COUNTRY_IN_VAL_COUNT=SS_COUNTRY_IN_VAL_COUNT+1; SS_COUNTRY_IN_VAL$[SS_COUNTRY_IN_VAL_COUNT]=SS_COUNTRY_IN_VALUE$
13230 ! lookup country based on input
13232 SS_COUNTRY_OUT_VAL$=""
13234 FOR SS_COUNTRY_INDEX=1 TO SS_COUNTRY_IN_VAL_COUNT
13236 COUNTRY_IN$=STP(UCS(SS_COUNTRY_IN_VAL$[SS_COUNTRY_INDEX]),2)
13238 GOSUB GET_COUNTRY
13240 SS_COUNTRY_OUT_VAL$+=COUNTRY_OUT$
13242 IF SS_COUNTRY_INDEX<SS_COUNTRY_IN_VAL_COUNT THEN SS_COUNTRY_OUT_VAL$+=", "
13244 NEXT SS_COUNTRY_INDEX
13248 RETURN 
13249 ! 
13300 WRITE_EEQ:! SSP307244-DBD-88, line_spec_url
13310 IF STP(LINE_SPEC_URL$,3)="" OR NOT(NUL(MID(ECE$,259,3))) THEN RETURN ! Don't write if blank or if this is a companion line
13315 DIM EEQ$(369)
13320 EEQ$(1,10)=ECD$(1,10),EEQ$(11,3)=ECE$(25,3)
13330 EEQ$(14,256)=PAD(LINE_SPEC_URL$,256)
13340 WRITE (Z[64],KEY=EEQ$(1,13))EEQ$
13345 RETURN 
13349 ! 
13350 RETRIEVE_EEQ:! SSP307244-DBD-88, line_spec_url
13360 DIM EEQ$(369)
13370 READ (Z[64],KEY=ECE$(1,10)+ECE$(25,3),DOM=*RETURN)EEQ$(1)
13395 RETURN 
13399 ! 
13400 WRITE_EEL2:! DBD-191-DBSPT-117328-SSP307365
13402 IF HAVE_EEL$<>"Y" OR NOT(NUL(MID(ECE$,259,3))) THEN RETURN 
13405 FOR EELX=1 TO 99
13410 IF STP(EEL_IN_DATA$[ECE_INDEX,EELX])="" THEN GOTO 13440
13415 DIM EEL$(311); EEL$(1,10)=ECD$(1,10),EEL$(11,3)=ECE$(25,3) ! WORKSHEET_LINE
13420 EEL$(14,2)=STR(EELX:"00") ! SEQ_NUM
13425 EEL$(16,256)=PAD(EEL_IN_DATA$[ECE_INDEX,EELX],256) ! URL
13430 WRITE (Z[58],KEY=EEL$(1,15))EEL$
13440 NEXT EELX
13445 RETURN 
13449 ! 
13450 REMOVE_EEL:! DBD-191-DBSPT-117328-SSP307365
13455 READ (Z[58],KEY=WLINE$,DOM=*NEXT)
13460 REMOVE_EEL_KEY$=KEY(Z[58],END=*RETURN)
13465 IF REMOVE_EEL_KEY$(1,13)<>WLINE$ THEN RETURN 
13470 REMOVE (Z[58],KEY=REMOVE_EEL_KEY$,DOM=*NEXT)
13475 GOTO 13460
13495 RETURN 
13499 ! 
13500 FIND_CUST_FROM_EQD_CUST:! DBD-272-SSP307406
13510 FROM_EQD_CUSTOMER$=PAD(FROM_EQD_CUSTOMER$,6)
13515 READ (33007,KNO=7,KEY=FROM_EQD_CUSTOMER$,DOM=*NEXT)
13520 EQD_KEY$=KEY(33007,KNO=7,END=*RETURN)
13525 IF EQD_KEY$(1,6)<>FROM_EQD_CUSTOMER$ THEN RETURN 
13530 ECE_IN$(29,10)=EQD_KEY$(7,10)
13535 READ (33007,KEY="",KNO=0,DOM=*NEXT) ! Reset kno to 0 on AR1 channel
13545 RETURN 
13549 ! 
13550 GET_LOC_FROM_LONG_RECV_DEPT:! DBD-273-SSP307410 use long receiving dept to look for ship-to code in ZYR
13555 IF STP(LONG_RECV_DEPT_IN$,3)="" THEN RETURN 
13560 LOC_CODE$=""; CALL "FMGLAA;FIND_LOC_FROM_LONG_RECVG_DEPT",EC$[2](51,10),LONG_RECV_DEPT_IN$,"",LOC_CODE$
13565 IF NOT(NUL(LOC_CODE$)) THEN ECD_IN$(36,4)=LOC_CODE$
13590 MESS$="SESSION ID|"+EC$[1](1,7)+"|FILE|"+%WEBEC_FILE_NAME$+"|BUYER|"+EC$[1](8,15)+"|LONG_RECVG_DEPT|"+LONG_RECV_DEPT_IN$+"|LOC_CODE|"+LOC_CODE$; MX=FN%_LOG_MESSAGE_WITH_FLUSH("MESG",MESS$)
13595 RETURN 
13599 ! 
13600 UPDATE_DYNAMIC_COMP_LINE:! 307420-Implement support for dynamic companion message lines
13610 READ (Z[43],KEY=ECD$(1,10)+ECE_IN$(259,3),KNO=1,DOM=*NEXT)
13615 DYNMASTKEY$=KEY(Z[43],END=*RETURN)
13620 EXTRACT RECORD (Z[43],KEY=ECD$(1,10)+MID(DYNMASTKEY$,14,3),KNO=0,DOM=*RETURN)DECE$; DECE$(297,1)="Y"; WRITE RECORD (Z[43],KEY=ECD$(1,10)+MID(DYNMASTKEY$,14,3))DECE$
13625 ECE$(259,3)=DECE$(25,3),ECE$(129,1)=DECE$(129,1),ECE$(115,14)=DECE$(115,14) ! Update master item settings to companion line
13630 ! WRITE (Z[3],KEY=ECD$(1,10)+ECE$(25,3))IOL=0330 ! Save companion line changes
13695 READ (Z[43],KEY="",KNO=0,DOM=*NEXT) ! Reset to KNO 0
13698 RETURN 
13699 ! 
56000 ! Program changes starting 10/19/05
56076 REM "278864-First Trust XML orders, have buyer whse grps, not working.  
56199 ! Program changes continued 02/11/2011
56200 REM "244339-Need order notepad EC tags added to DSSI email order conf
56202 REM "244590-Add parameter to 3rd Party ID record, Supress sending email.
56204 REM "244424-EC3WS1 line level input tag to indicate the PO should not be
56206 REM "244587-EC Customer Parameter - Send order confirmation to approver?
56208 REM "245891-Create new file/program, keyed by order number, EC tags to  
56210 REM "247532-Some ECE lines not making it to EDO if max order amt on.    
56212 REM "242686-Custom project using the EC Budget module.                  
56214 ! 248001/248043-Parameter to associate FMS price with alt UM qty
56216 ! 247495-EEJ file by worksheet to write notepad and FV1 data
56218 REM "248159-Add 2 Package Reference fields to SH9, 2 fields to customer 
56220 REM "250080-Testing 249924; (0-EC3WS1-4532) Item code extracted.        
56222 REM "249773-Sourcing Bench Support; Add tags to EC3PCG, trigger to setup
56224 REM "252671-Order approval confirmation displaying notepad from other   
56226 ! 251794 - EDI940 translation to XML order - cic_code
56228 REM "253927-Companion item code setup issue (RT 18558)                  
56230 REM "254967-DBE:  DBD error 000-EC3WS1-4525 Companion item extracted.   
56232 REM "253441-Add Vendor fields Print Flags and Whse for PL printing.     
56234 REM "255400-Inbound EDI943, Outbound EDI997. Custom program to translate
56235 REM "257740-RC Number tag support in Changeqty section          
56236 REM "257735-EDI940; Trigger alternate packing list format for one end   
56237 REM "255476-TVIINC workflow - Phase 1: Approver edit worksheets feature 
56238 REM "259411-EC error msg 000-EC3WS1-8463 on two DBE orders.             
56240 REM "247956-If order required Purchase approval not sending Reorder     
56241 REM "257291-Buyer Parm to trigger cust default CC info for DBE orders.  
56242 REM "262522-Credit card page error - FRT freight markup GRT rec
56244 REM "263818-Order Notepad data for EC orders is not in the Repeat Order 
56245 REM "262732-EC3WS1; Additional tags to support 3p_freight tag to trigger
56246 REM "267129-Webec development for supporting job costing on BAS orders. 
56248 REM "268213-Not accepting vendor sent in order file when item has       
56250 REM "268437-Sourcing Bench; need special shipping details in response.  
56252 REM "268433-Input/output tag item_line_type (NECSB) for Sourcing Bench  
56254 REM "268892-WO263664; ss_ext_line_number tag, check for companions and  
56256 REM "270946-WO263664; need EEF field to capture raw ss_seq_number.      
56258 REM "272505-Release lines cannot be split ship
56260 REM "271988-EC tag to bypass sending order confirmation to entered email
56262 REM "274361-Timing issue with active location update in session rec
56264 REM "275350-DB/e order, companion item picks up price from master item. 
56266 REM "229993-PCI/PA-DSS New CC Module                                    
56268 ! 277223/288-pass in po_code but not vendor_code/vendor_plant ECE blank
56270 REM "277813-New EC input tag, from_cic_code, like cic_code but use from 
56272 REM "278444-Four51; New tags for BillTo data, new buyer parm to use data
56274 REM "278424-Realty Captial XML orders; if first Street data exceeds 30  
56275 REM "280607-Update stock item descriptions to worksheet lines for OS items
56276 REM "281513-Internal Print Shop vendor PROCOPY IP print flag override   
56278 REM "286528-FlowPoint; need input tag cust_loc_code in EC3WS1           
56280 ! 286528 phase 2; ss_cust_loc_code,ss_recv_dept,ss_ship_via_map
56281 REM "289039-Third party artwork URLs not displayed through standard 3p  
56282 REM "290559-FlowPoint; 3p_full_url tag, files by worksheet and order.   
56284 REM "291781-Contract Number tag for WebEC order entry API.  For use with
56285 ! with 291781-293539 get cleared cc info from EDD for alt email conf
56286 REM "294934-csr tag for EC Orders, configure in FlowPoint for Noosh     
56288 REM "298964-Vault ID not defaulting for EC orders                       
56290 REM "298437-Implement support for parsing input block of text and import
56292 REM "299085-FlowPoint/Add order comments as message lines to Order     
56294 REM "300154-EC Input tag for Plant Quote Number, new EC file for PO data
56296 REM "303296-FlowPoint; Required changes to allow Propago order be an    
56298 REM "306664-EC input tag to describe the source.  EC_SOURCE ECD/OFA/FS1 
56300 REM "306701-EC Input Tag; terms_code to override Customer terms code    
56302 REM "307164-DBD-43; DBSPT-62761; Rework PO Code assignment in EC3WS1
56304 REM "307202-DBD-66; DBSPT-70530; default of req_date uses X3$(15,6) but 
56306 REM "307210-DBD-75-International shipping address - add country code           
56308 ! 307244-dbd-88-Line spec URL from DBA
56310 REM "307259-DBD-103-DBSPT-81093; EC3WS1 bypass RON trigger if PO code in
56312 REM "307314-DBD-135-DBSPT-100495;Retrieve Saved WK Req Date refresh     
56314 REM "307339-DBD-159;S lines need support for create_po=Y input tag      
56316 REM "307358-DBSPT-115417-DBD-185; Expand EEE/EEP for ORDER_ID_3P_2, add 
56318 REM "307365-DBD-191-DBSPT-117328; Additional Order Line URL support     
56320 REM "307309-DBD-113 - Authorize.Net support                             
56322 REM "307406-DBD-272; Add from_eqd_customer tag for EQLINK items          
56324 REM "307410-DBD-273 - Long receiving dept field changes using ZYR file  
56325 REM "307420-DBD-288:Dynamic companion message lines                     
56326 ! SSP307429-DBD319 Country (WITH 307420 CHANGES)
56327 REM "307440-DBD-339: Multi-vendor feature                               
56328 REM "307487-DBD-459: Webec order line tag for "line_unit_imsprice"      
56329 REM "307511-DBD-554: Issue with Essedant item lookup for >10 chars      
56330 REM "307514-CSPT-1255: Essendant POs failing if item has no FM1 record  
