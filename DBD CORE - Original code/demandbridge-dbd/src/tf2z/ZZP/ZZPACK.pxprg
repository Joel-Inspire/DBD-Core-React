0010 REM "Packed array module <ZZPACK>
0030 REM "(C) 1985,1986 Basic Ideas, Inc; Atlanta, Ga.
0035 REM "4.4 - 02/04/99 - 18.65 - kmc - SSP# 108692
0040 REM "Copyright 1999 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0410 IOLIST P9$,M[0],M[1],M[2],M[3],M[4],M[5],M[6],M[7],M[8],M[9],M[10],M[11],M[12],M[13],M[14]
0890 SETERR 9500
0900 REM "X3$=Control, Q$="READ,WRITE", M0$=Mask (default to "")
0901 REM "M1$=Packed array, M0=Array len (default to 13), M1=bytes/entry
0902 REM " M(all) is array, F0 is physical file to read/write
0903 REM "Q0$=stat type, Q1$=Key, S9$=Params
1000 SETERR 1005; ENTER X3$,Q$,M0$,M1$,M0,M1,M{ALL},F0,Q0$,Q1$,S9$; SETERR 9000; GOTO 1010
1005 IF X3$="?" THEN CALL "ZZPDOC","ZZPACK"; EXIT ELSE EXIT ERR
1010 DIM S$(20)
1011 P9$=Q1$+Q0$
1012 RT_PARM$=""; CALL "RT2PRM",ERR=1013,X3$,X4$,RT_PARM$
1013 IF M1=0 THEN M1=5
1014 IF M0$="" THEN M0$="92"
1015 IF M0=0 THEN M0=13
1020 M8=NUM(M0$(1,1)),M9=NUM(M0$(2,1)); PRECISION M9; M9=10^M9
1070 IF Q$="R" THEN GOSUB 7100; GOTO 1200
1071 IF Q$="E" THEN GOSUB 7100; GOTO 1200
1075 IF Q$="W" THEN GOSUB 7150
1080 IF Q$="U" THEN GOTO 1200
1090 GOTO 9900
1200 REM "unpack
1205 IF S9$(34,1)="U" THEN GOTO 9900; REM "86561
1210 M9=1/M9
1220 FOR X=0 TO M0
1225 SETERR 1240; M[X]=0; M[X]=DEC(M1$(X*M1+1,M1)); M[X]=M[X]*M9
1240 SETERR 0000; NEXT X
1250 SETERR 9000
1290 GOTO 9900
2000 REM "Pack Numerics to string m1$ (mask of m0$)
2010 M1$=""
2020 FOR X=0 TO M0
2025 Q0=0; SETERR 2030; Q0=M[X]
2030 SETERR 2031; M1$=M1$+BIN(INT(Q0*M9),M1); GOTO 2045
2035 REM "TOO BIG A NUMBER
2040 M1$=M1$+BIN(0,M1); CALL "ZZPROM",".4",X3$,0,"NOTE: Invalid usage record ("+P9$+") - BUCKET: "+STR(X),"","",0
2045 NEXT X
2050 SETERR 9000
2090 RETURN 
7000 REM "Update stats q0$ in period q1 with data q0
7005 IF Q0=0 OR POS(Q0$=F0$(22,10))=0 THEN GOTO 7090
7010 DIM K[14]; P9$=Q1$+Q0$
7020 GOSUB 7100
7040 K[Q1]=K[Q1]+Q0
7060 GOSUB 7150
7090 RETURN 
7100 REM "Read stats (Packed/Unpacked)
7104 FOR TMP=0 TO 14; M[TMP]=0; NEXT TMP; REM "ssp# 108692 clear buckets in case requested record not on file, buckets won't contain previous values
7105 Q=POS(Q0$=S9$(49),17); IF Q=0 THEN GOTO 7090 ELSE M0$=S9$(Q+48,17)
7110 ON POS(S9$(34,1)="UP")-1 GOTO 7111,7125
7115 IF Q$="E" THEN EXTRACT (F0,KEY=P9$,DOM=7116)IOL=0410 ELSE READ (F0,KEY=P9$,DOM=7116)IOL=0410
7120 GOTO 7190
7125 IF Q$="E" THEN EXTRACT RECORD (F0,KEY=P9$,DOM=7190)M1$; M1$=M1$(LEN(P9$)+1) ELSE READ RECORD (F0,KEY=P9$,DOM=7190)M1$; M1$=M1$(LEN(P9$)+1)
7135 GOTO 7190
7150 REM "Write stats
7155 ON POS(S9$(34,1)="UP")-1 GOTO 7156,7170
7160 WRITE (F0,KEY=P9$)IOL=0410
7165 IF RT_PARM$<>"" THEN FID_F0$=FID(F0); IF POS(FID_F0$(4,3)="AR9FM3FSW",3)<>0 THEN CUST$=P9$(1,10); CALL "RT2WOC",ERR=7166,X3$,X4$,CUST$,FID_F0$(4,3)+"...","U",P9$
7168 RETURN ; REM "86561
7170 GOSUB 2000
7175 M1$=P9$+M1$
7180 WRITE RECORD (F0,KEY=P9$)M1$
7185 IF RT_PARM$<>"" THEN FID_F0$=FID(F0); IF POS(FID_F0$(4,3)="AR9FM3FSW",3)<>0 THEN CUST$=P9$(1,10); CALL "RT2WOC",ERR=7186,X3$,X4$,CUST$,FID_F0$(4,3)+"...","U",P9$
7190 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9050 ON Y7 GOTO 9060,9100,9900,9070,9090
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9900
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM 
9510 IF ERR=36 THEN LIST 0010; LIST 0900,1010; EXIT 
9520 EXIT ERR
9920 EXIT 
9999 END 
