0010 ! UT2EQA - XML Assendant data upload from DBD to EQD for QNET customers 
0035 REM "5.7 - 07/07/21 - 14.374225 - jvv - SSP# 307362
0037 REM "307362-GUI Order Entry security enhancement                        
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,CAT_CUST$,ECUST$
0100 ! SETERR 9000
0110 X0$="UT2EQA",X1$="O/S upload to EQD"
0130 PRINT 'CS',@(0,3),"Creating XML files "
0163 X2=-1; X0=-1
0165 ! CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0170 DIM Y[NUM(X3$(60,3))]
0175 Y$="31O AR1...  32O OS0...  33O OS6...  35O OS1...  34O ZZPARM  37O IC0...  38O FMP...  "
0176 ESCAPE 
0180 CALL "ZZFLES",X3$,Y1$,Y0$,Y$,Y{ALL},Z0,Z1
0190 ! IO list
0200 DIM AR1[15],FS1[13],FS2[29]
0205 DIM FMPD$(300),FMPD[6]
0208 DIM FMPM$(241),FMPM[11]
0210 ! iolist for customer information
0220 AR1_IOL:IOLIST AR1$,AR1[0],AR1[1],AR1[2],AR1[3],AR1[4],AR1[5],AR1[6],AR1[7],AR1[8],AR1[9],AR1[10],AR1[11],AR1[12],AR1[13],AR1[14],AR1[15]
0225 ! iolist for Order
0230 IOLIST FS1$,FS1[0],FS1[1],FS1[2],FS1[3],FS1[4],FS1[5],FS1[6],FS1[7],FS1[8],FS1[9],FS1[10],FS1[11],FS1[12],FS1[13]
0240 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24],FS2[25],FS2[26],FS2[27],FS2[28],FS2[29]
0245 IOLIST FM0$(1)
0250 FMPD_IOL:IOLIST FMPD$(1),FMPD{ALL}
0252 FMPM_IOL:IOLIST FMPM$(1),FMPM{ALL} ! Freight Markup
0255 IC0_IOL:IOLIST IC0$,IC0{ALL}
0260 FM1_IOL:IOLIST FM1$,FM1{ALL}
0265 IC1_IOL:IOLIST IC1$,IC1{ALL}
0270 FSW_IOL:IOLIST FSW$,FSW{ALL}
0275 FM5_IOL:IOLIST FM5$,FM5{ALL}
0280 FM3_IOL:IOLIST FM3$,FM3{ALL}
0285 FM4_IOL:IOLIST FM4$,FM4{ALL}
0500 READ (Y[34],KEY=X3$(9,3)+"OSP")OSP_PARMS$
0510 PTYPE$=OSP_PARMS$(219,1)
0950 GOTO 2000
0999 ! 
1000 ! Routine to read data
1010 READ (Z[1],KEY="",ERR=*NEXT)
1020 READ_NEXT_CUST:
1030 K$=KEY(Z[1],END=9900); READ (Z[1],KEY=K$)IOL=AR1_IOL
1040 ! Check parameter to see if QNET customer
1042 ! IF K$="0000100000" THEN QNC$="1" ELSE QNC$=""
1043 IF K$(3,3)="EZ " OR K$(3,4)="EQLI" THEN QNC$="1" ELSE QNC$=""
1050 IF QNC$ THEN GOTO *NEXT ELSE GOTO READ_NEXT_CUST
1055 ESCAPE 
1060 CUSTID$=K$,CUST$=CUSTID$
1070 READ (Z[8],KEY="D"+CUSTID$,DOM=*NEXT)IOL=FMPD_IOL ! SSP 206525
1080 READ (Z[8],KEY="M"+FMPD$(50,2),DOM=*NEXT)IOL=FMPM_IOL ! SSP 206525
2000 CHDR$="",CDTL$="",CCNT=0
2010 CHG_FLG=1
2012 CUST$=CAT_CUST$
2015 ! 
2020 FIND (Y[33],KEY=CUST$,DOM=*NEXT)OS6$
2030 IF LEN(OS6$)<>0 THEN PTYPE$=OS6$(11,1) ELSE GOTO 9900 ! READ_NEXT_CUST
2100 IF FIRST=0 THEN FIRST=1; GOSUB CREATE_XML_FILE
2120 DD$=""; CALL "ZZWDTE;TF_TODAY",DD$
2130 GOSUB SUPPLY_CATALOG_XML
2140 GOSUB END_CREATE_XML
2150 GOTO 9900
4500 END 
5000 XML:
5020 HTML_TO_FLD$=HEADER$
5030 TF_VALUE$=TF_VALUE$+$09$
5090 XX=POS($09$=TF_VALUE$,-1),TF_VALUE$=TF_VALUE$(1,XX-1),XX=POS($09$=TF_VALUE$,-1),REC_KEY$=TF_VALUE$(XX+1),TF_VALUE$=TF_VALUE$(1,XX)
5100 REC_KEY$=SUB(SUB(SUB(SUB(SUB(REC_KEY$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
5110 YES=0
5120 XX=POS(CHR(127)<=REC_KEY$); IF XX<>0 THEN YES=1,TC$=REC_KEY$(XX,1); REC_KEY$=SUB(REC_KEY$,TC$,"&#"+STR(ASC(TC$))+";"); GOTO *SAME
5130 ! PRINT (TMP)"<Record Key="+QUO+REC_KEY$+QUO+">"
5140 B_HEADER$=HEADER$,B_HTML_TO_FLD$=HTML_TO_FLD$
5150 NXT_FLD: VAL1=POS($09$=TF_VALUE$); IF VAL1=0 THEN GOTO END_REC ELSE VAL1$=TF_VALUE$(1,VAL1-1),TF_VALUE$=TF_VALUE$(VAL1+1)
5160 VAL1=POS($09$=HTML_TO_FLD$); IF VAL1=0 THEN CONTINUE ELSE VAL2$=HTML_TO_FLD$(1,VAL1-1),HTML_TO_FLD$=HTML_TO_FLD$(VAL1+1)
5170 VAL1=POS($09$=HEADER$); IF VAL1=0 THEN CONTINUE ELSE VAL3$=HEADER$(1,VAL1-1),HEADER$=HEADER$(VAL1+1)
5180 VAL3$=SUB(SUB(SUB(SUB(SUB(VAL3$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
5185 IF TP=1 OR TP=2 THEN GOTO 5205
5190 VAL1$=SUB(SUB(SUB(SUB(SUB(VAL1$,"<","&lt;"),">","&gt;"),"&","&amp;"),"'","&apos;"),QUO,"&quot;")
5200 IF YES THEN XX=POS(CHR(127)<=VAL1$); IF XX<>0 THEN YES=1,TC$=VAL1$(XX,1); VAL1$=SUB(VAL1$,TC$,"&#"+STR(ASC(TC$))+";"); GOTO *SAME
5205 IF TP=1 THEN PRINT (TMP)DIM(GL)+"<"+VAL2$+DIM(1)+VAL1$+">"; GOTO NXT_FLD
5208 IF TP=2 THEN PRINT (TMP)DIM(GL)+"<"+VAL2$+DIM(1)+VAL1$+"/>"; GOTO NXT_FLD
5210 PRINT (TMP)DIM(GL)+"<"+VAL2$+">"+STP(VAL1$)+"</"+VAL2$+">"
5220 GOTO NXT_FLD
5230 END_REC:
5240 ! PRINT (TMP)"</Record>"
5250 HEADER$="",HTML_TO_FLD$="",TP=0
5255 ! HEADER$=B_HEADER$,HTML_TO_FLD$=B_HTML_TO_FLD$
5260 RETURN 
5290 ! 
6000 SUPPLY_CATALOG_XML:
6001 ESCAPE 
6002 DIM IC0[33],FM1[31],IC1[20]
6003 OS0_FOUND=0
6005 GHDG$="SUPPLY_CATALOG_SECTION"; GOSUB GRPSTART
6010 READ (Y[32],KEY="",ERR=*NEXT)
6012 CNT=0
6015 NEXT_OS0:
6020 KS$=KEY(Y[32],END=EXIT_SUPPLY_CATALOG); READ (Y[32],KEY=KS$)OS0$
6030 IF POS(MID(OS0$,124,1)="DI")<>0 THEN GOTO NEXT_OS0 ! Ignore deleted/inactive
6031 IF CNT>=100 THEN GOTO EXIT_SUPPLY_CATALOG
6032 GOTO 6100
6040 FIND (Y[35],KEY=KS$,DOM=*NEXT)IOL=FM1_IOL
6050 ! Check if QNET ITEMS AND IS TOPS
6100 CUST_PLANS:
6110 READ (Y[33],KEY=CUST$,DOM=*NEXT)OS6$
6120 IF LEN(OS6$)<>0 THEN PTYPE$=OS6$(11,1)
6130 IF PTYPE$="B" THEN PRICING_TYPE$="Best/Flyers/no Mat" ELSE IF PTYPE$="O" THEN PRICING_TYPE$="List Order" ELSE IF PTYPE$="C" THEN PRICING_TYPE$="Cust Best no Flyer" ELSE IF PTYPE$="L" THEN PRICING_TYPE$="List" ELSE IF PTYPE$="P" THEN PRICING_TYPE$="Cust Best/Flyer" ELSE IF PTYPE$="V" THEN PRICING_TYPE$="Very Best-Matrix/Flyers"; REM ssp 220569
6140 DIM I[20]
6145 ! DIM B$(100); B$(1,10)=A$(1,10); B$(16,6)=X3$(21,6)
6150 PROGRAM$="OS2TAA"
6155 ITEM$=OS0$(1,10)
6156 ESCAPE 
6160 NEW_COST=0,NEW_PRICE=0; DIM I[40]; CALL "OS2OBC",%X3$,%X4$,ITEM$,I{ALL},CUST$+DIM(5)+DD$,PROGRAM$,NEW_PRICE,PTYPE$,NEW_COST,1; ASELL=NEW_PRICE,PLAN$=PROGRAM$
6170 ! IF ASELL=0 THEN GOTO NEXT_OS0
6180 IF PRICING_TYPE$="List" THEN PLAN$="LIST"
6190 IF PLAN$="" THEN PLAN$="LIST"
6200 IF PLAN$="LIST" THEN GOTO NEXT_OS0
6210 IF OS0_FOUND=0 THEN OS0_FOUND=1; GOTO *NEXT ELSE GOTO OS0_ITEM
6220 HEADER$="",TF_VALUE$=""
6230 ITEM$=OS0$(1,10)
6235 ESSITEM$=STP(OS0$(548,20),2)
6240 HEADER$="SUPPLY_CATALOG"+$09$,TF_VALUE$="Client="+QUO+STP(CUST$,2)+QUO+" Type="+QUO+"1"+QUO+$09$; TP=1,GL=3; GOSUB XML
6250 ! CALL program OS2OBC FOR Tops items TO CALCULATE BEST PRICE based on price plans and priorities etc
6260 OS0_ITEM:
6270 ITEM$=OS0$(1,10)
6275 ESSITEM$=STP(OS0$(548,20),2)
6280 HEADER$="P"+$09$,TF_VALUE$="Item="+QUO+ESSITEM$+QUO+" Sell="+QUO+STR(ASELL)+QUO+$09$; TP=2,GL=5; GOSUB XML
6285 CNT=CNT+1
6290 GOTO NEXT_OS0
6300 RETURN 
6499 ! 
7000 GRPSTART:
7020 PRINT (TMP)"<"+GHDG$+">"
7030 RETURN 
7100 GRPEND:
7120 PRINT (TMP)"</"+GHDG$+">"
7130 RETURN 
7199 ! 
8000 CREATE_XML_FILE:
8005 ! Create XML document based on changes only
8020 ! IF CHG_FLG=0 THEN RETURN 
8025 DTS$=DTE(0:"%Yz%Mz%Dz%Hz%mz%s") ! add date/time
8030 LOG_FILE$="EQLINK",XFILE$=ECUST$+"_Assendent_"+DTS$
8040 TMP$="/tmp/"+XFILE$+".xml"; ERASE TMP$,ERR=*NEXT
8050 SERIAL TMP$; TMP=HFN; OPEN LOCK (TMP)TMP$ ! GOSUB CREATE_DEF
8060 PRINT (TMP)"<"+LOG_FILE$+">"
8070 RETURN 
8090 ! 
8100 END_CREATE_XML:
8110 PRINT (TMP)"</"+LOG_FILE$+">"
8120 CLOSE (TMP)
8130 ESCAPE 
8140 RETURN 
8190 ! 
8910 DEF FND$(Z9$)=Z9$(NUM(X3$(48,1))*2+1,2)+X3$(59,1)+Z9$(7-NUM(X3$(48,1))*2,2)+X3$(59,1)+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
9000 ESCAPE 
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Y{ALL},0,0
9920 EXIT 
9950 END 
9999 EXIT 
16499 ! 
16500 EXIT_SUPPLY_CATALOG:
16505 PRINT (TMP)DIM(3)+"</"+"SUPPLY_CATALOG"+">"
16510 GHDG$="SUPPLY_CATALOG_SECTION"; GOSUB GRPEND
17025 RETURN 
17029 ! 
