0035 REM "5.2 - 09/29/03 - 22.606388 - kmc - SSP# 164522
0040 REM "Copyright 2003 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0105 SETERR 0107
0106 ENTER F1$
0107 SETERR 0000
0108 IF DEC(MID(MSE,22,1))>3 THEN WINDX=1,WDX$="[wdx]" ELSE WINDX=0,WDX$=""
0110 F=HFN
0120 OPEN (F)"ZZPARM"
0130 FIND (F,DOM=0131,KEY=FID(0)+"      ")C0$; C0$=C0$(9,3)
0135 IF NUL(C0$) THEN C0$=%C$
0190 CLOSE (F); OPEN (F)"providex.ddf"
0200 IF WINDX THEN DIM Z0$(80,"0"); Z0$=MNM('GS')+Z0$+MNM('GE') ELSE DIM Z0$(80,"-")
0210 M0$="###,###,##0",L=8,L9=L
0220 F0$="IndexedSerial Direct Sort   Program5555555566666666777777778888888899999999Directry"
0230 IF F1$<>"" THEN GOTO 0930
0905 PRINT 'CS',"CSI File Layout Display & File Information Utility",'LF'
0910 PRINT 'LF',"Enter file name (with F2 doublespaces) -or- F1 for file index -or- F4 to exit: "
0920 INPUT F1$
0925 F1$=UCS(F1$)
0930 IF CTL=1 THEN GOTO 3000
0935 IF CTL=2 THEN L1=2 ELSE L1=1
0940 IF CTL=4 THEN GOTO 9800 ELSE IF F1$="" OR LEN(F1$)>6 THEN GOTO 0900
0960 READ (F,KEY=F1$,KNO=1,DOM=*NEXT)
0965 NAME$=""; READ (F,END=1000)IOL=10010; IF MID(NAME$,1,LEN(F1$))<>F1$ THEN GOTO 1000
0980 DDF$=KEC(F,KNO=0)
1000 IF LEN(F1$)=3 OR LEN(F1$)=4 THEN F3$=F1$(1,3)+C0$
1005 F1=HFN; OPEN (F1,ERR=1100)F3$
1006 FULL_PATH$=PTH(F1)
1007 CALL "ZZINFO",F1,Q,X3$,U,N,K,R,D,T,S0,""
1010 R=NUM(FIN(F1,"RECORD_SIZE"))
1040 GOTO 1180
1100 F3$=F1$
1110 OPEN (F1,ERR=1111)F3$; GOTO 1007
1170 E$="File not defined!!"
1180 PRINT 'CS',; GOSUB 6000; GOSUB 6200
1200 CLOSE (F1)
1280 DDE_FN=HFN; OPEN (DDE_FN)"providex.dde"
1285 DDE_REC_FN=HFN; OPEN (DDE_REC_FN,REC=DDE$)"providex.dde"
1290 DIM KDEF$[1:16](40,SEP)
1295 L1=1
1300 ! Read through elements
1303 DIM KDEF$[1:16](40,SEP); L1=1; KEYS_VALID=1
1304 DDF_KEY$=DDF$
1305 CALL "*dict/keys;GET_KEY_STR",DDE_REC_FN,DDF$,DD_KDEF$,NI$,NR,EXKEY,ERR$
1310 EXFLG=0; READ (DDE_FN,KEY=DDF$,ERR=1320)IOL=10020
1315 IF POS("X"=FLAGS$) THEN EXFLG=1; GOSUB SETUP_KEYS
1320 READ (DDE_FN,KEY=DDF$,DOM=*NEXT)
1330 L=L9; PRINT @(0,L),'CE',
1340 FLD_NO=1,FLD_OFS=1,PREV_FLD_NO=1
1400 EKEY$=KEY(DDE_FN,END=END_OF_FILE); IF MID(EKEY$,1,LEN(DDF$))<>DDF$ THEN GOTO END_OF_FILE ELSE READ (DDE_FN,KEY=EKEY$)IOL=10020
1410 IF FIND_BUCKETS THEN IF TYPE$<>"N" THEN GOTO 1605 ELSE FIND_BUCKETS=0
1440 IF L>20 THEN GOSUB 2000
1500 DIM D$(60,".")
1505 IF CLASS$="DATE-KKMMDD" THEN FTYPE$="D" ELSE FTYPE$=TYPE$
1507 IF NOT(NUL(KEYDEF$)) THEN KEY_IND$="*" ELSE KEY_IND$=" "
1520 D$(1,LEN(NAME$)+3)=NAME$+"...",D$(MAX(LEN(D$)-LEN(NOTES$)+1,LEN(NAME$)+4))=NOTES$
1540 PRINT @(0,L),D$,
1545 IF FTYPE$="N" THEN POS$=PAD(STR(FLD_NO-2),2,0) ELSE POS$=PAD(STR(FLD_OFS),4,0)
1565 PRINT @(62),STR(FLD_NO),@(66),FTYPE$,@(68),POS$,@(72),PAD(LEN$,5,0),@(78),KEY_IND$,
1570 PREV_FLD_NO=FLD_NO
1600 L=L+L1
1605 GOSUB GET_OCCURS
1610 IF POS("X"=FLAGS$)=0 THEN ACC_LEN+=INT(NUM(LEN$))*FLD_INC; IF POS(FORMAT$="DLZ") THEN FLD_NO=FLD_NO+FLD_INC,FLD_OFS=1,ACC_LEN+=FLD_INC ELSE FLD_OFS=FLD_OFS+INT(NUM(LEN$))*FLD_INC
1700 ! SETUP FOR KEYS
1705 K_DEF$=KEYDEF$
1710 GET_KEY:GOSUB NXT_KEY; IF K_NO=0 THEN GOTO KEYS_DONE
1715 AD$=STP(K_AD$,3,"A")
1720 IF K_SUB=0 THEN KSUB$="" ELSE KSUB$="("+STR(K_OFS)+","+STR(K_SUB)+")"
1725 K$=KDEF$[K_NO],O=POS(SEP=K$,1,K_SEQ); KDEF$[K_NO]=K$(1,O-1)+PAD(NAME$+KSUB$,36)+PAD(AD$,6)+DESC$+K$(O); GOTO GET_KEY
1790 KEYS_DONE:
1795 ! 
1990 GOTO 1400
2000 REM "EOP"
2010 PRINT @(5,21),"CR for next line -or- enter number of lines (up to",12/L1,") -or- F4: ",
2015 PRINT @(5,22),"Enter 'N' for start of numerics, R to restart",
2020 INPUT Q$,@(0,22),'CL',@(0,21),'CE',; Q$=UCS(Q$)
2021 IF Q$="N" THEN Q$="13"; FIND_BUCKETS=1,KEYS_VALID=0
2022 IF Q$="R" THEN GOTO 1300
2030 IF CTL=4 THEN GOTO 4010
2032 Q=ABS(INT(NUM(Q$,ERR=2033)))*L1
2035 IF Q<1 THEN Q=L1
2037 IF Q>13 THEN Q=13
2040 FOR I=1 TO Q; PRINT @(0,8),'LD',; NEXT I
2060 L=L-Q
2080 RETURN 
3000 REM "List providex.ddf"
3020 PRINT 'CS','SB',@(25,0),"CSI File Index from providex.ddf",@(0,1),"Table",@(35,1),"Last Updated",@(60,1),"Embedded I/O Proc",@(0,2),Z0$,'SF',
3080 L=3
3100 READ (F,END=0400,KNO=1)IOL=10010
3120 IF L>20 THEN GOTO 3200
3140 PRINT @(0,L),NAME$,@(35,L),LST_UPD$,@(60,L),MID(FILE_PROC$,2),
3160 L=L+2
3180 GOTO 3100
3200 REM "EOP
3220 INPUT @(10,22),"CR to continue -or- enter file name to start at -or- F4: ",Q$,@(0,22),'CL',
3240 IF CTL=4 THEN GOTO 4010
3250 L=3; PRINT @(0,L),'CE',
3260 IF LEN(Q$)>0 AND LEN(Q$)<7 THEN READ (F,KEY=UCS(Q$),DOM=3100)IOL=10010
3270 GOTO 3101
3900 END_OF_FILE:
3905 IF STP(KDEF$[1],2,SEP)="" OR NOT(KEYS_VALID) THEN GOTO 4000
3906 L1=3
3910 FOR KINDEX=1 TO 16
3915 K$=KDEF$[KINDEX]
3920 K$=STP(K$,2,SEP)+SEP; N=POS(SEP=K$,1,0)+1
3925 IF K$=SEP THEN EXITTO 4000
3926 L+=1
3927 IF L>20 THEN GOSUB 2000
3930 IF KINDEX<>1 THEN PRINT @(0,L),"Alternate key",KINDEX-1,":" ELSE PRINT @(0,L),"Primary/External key:" END_IF 
3950 O=POS(SEP=K$),X1$=K$(1,O-1),K$=K$(O+1)
3955 IF L>20 THEN GOSUB 2000
3960 PRINT @(25,L),STP(MID(X1$,1,POS("="=X1$)-1),1); L+=1
3970 IF K$<>"" THEN GOTO 3950
3990 NEXT KINDEX
4000 INPUT @(10,22),"End of file - CR to continue ",'RB',*
4010 F1$=""
4020 GOTO 0190
6000 REM "Background"
6010 IF WINDX THEN PRINT 'BLUE','_WHITE','DF','CS', ELSE PRINT 'SB','CS',
6020 PRINT @(0,1),Z0$,@(5,3),"File",@(13,3),"File Type   Key Size  Bytes/Rec         Records         Used"
6030 PRINT @(0,2),"Last updated:",@(51,2),"I/O Proc:",@(0,5),Z0$
6100 PRINT @(0,6),"Column",@(50),"Notes",@(61),"Fld Typ Pos Len Key",
6180 PRINT @(0,7),Z0$,
6190 IF WINDX THEN PRINT 'BLACK','_WHITE','DF',@(0,8),'CE', ELSE PRINT 'SF','YELLOW','DF',@(0,8),'CE',
6199 RETURN 
6202 PRINT @(4,4),F3$,
6205 IF NAME$="" THEN DIM A$(6); PRINT @(25,0),F1$,@(13,3),"File not in providex.ddf!!",; GOTO 6290
6210 PRINT @(0,0),PAD(NAME$+" - "+FULL_PATH$,80),
6220 Q=0; GOSUB 6500
6290 IF LEN(E$)>0 THEN PRINT @(13,4),E$,; RETURN 
6300 PRINT @(13,4),PAD(F0$(T*7+1,7),9,2),
6310 IF K<>0 THEN PRINT @(25),PAD(STR(K),8,2), ELSE PRINT @(25),PAD("n/a",8,2),
6320 IF R>0 THEN PRINT @(35),PAD(STR(R:"0000"),9,2), ELSE PRINT @(35),PAD("n/a",9,2),
6340 IF N=0 THEN PRINT @(52),"Unlimited", ELSE PRINT @(50),PAD(STR(N:M0$),11,2),
6350 IF T=2 OR T=3 THEN PRINT @(66),PAD(STP(STR(U:M0$),0),11,2),
6399 RETURN 
6500 REM "Display providex.ddf"
6510 PRINT @(14,2),LST_UPD$,
6520 FP$=MID(FILE_PROC$,2); IF NUL(FP$) THEN PRINT @(61,2),"None", ELSE PRINT @(61,2),FP$,
6545 RETURN 
7010 NXT_KEY:
7020 IF K_DEF$="" THEN K_NO=0; RETURN 
7030 O=POS(","=K_DEF$); IF O=0 THEN K_ENT$=K_DEF$,K_DEF$="" ELSE K_ENT$=K_DEF$(1,O-1),K_DEF$=K_DEF$(O+1)
7040 O=POS(":"=K_ENT$); K_NO=NUM(K_ENT$(1,O-1)),K_ENT$=K_ENT$(O+1)
7050 O=POS(":"=K_ENT$); K_SEQ=NUM(K_ENT$(1,O-1)),K_ENT$=K_ENT$(O+1)
7055 O=POS(":"=K_ENT$); IF O THEN K_AD$=K_ENT$(1,O-1),K_ENT$=K_ENT$(O+1) ELSE K_AD$=K_ENT$,K_ENT$=""
7060 IF K_ENT$="" THEN K_OFS=0,K_SUB=0; RETURN 
7070 O=POS(":"=K_ENT$); IF O=0 THEN K_OFS=1,K_SUB=NUM(K_ENT$) ELSE K_SUB=NUM(K_ENT$(1,O-1)),K_OFS=NUM(K_ENT$(O+1))
7080 RETURN 
7110 SETUP_KEYS:
7120 K_OFS$="",K_LEN$=""
7130 K$=KEY(DDE_FN,END=7230); IF K$(1,6)<>DDF_KEY$ THEN GOTO 7230
7140 READ (DDE_FN,KEY=K$)IOL=10020
7150 IF KEYDEF$="" OR KEYDEF$(1,2)<>"1:" THEN GOTO 7130
7160 KX$=KEYDEF$,P=POS(","=KX$); IF P<>0 THEN KX$=KX$(1,P-1)
7170 P=POS(":"=KX$,1,2),KSEG=NUM(KX$(3,P-3))
7180 P1=POS(":"=KX$,1,3); IF P1=0 THEN L=NUM(LEN$); GOTO 7200
7190 P2=POS(":"=KX$,1,4); IF P2=0 THEN L=NUM(KX$(P1+1)) ELSE L=NUM(KX$(P1+1,P2-P1-1))
7200 IF LEN(K_LEN$)<KSEG*5 THEN K_LEN$=PAD(K_LEN$,KSEG*5)
7210 K_LEN$(KSEG*5-4,5)=STR(L:"####0")
7220 GOTO 7130
7230 NUMKEYS=LEN(K_LEN$)/5,OFS=1; K_OFS$=DIM(LEN(K_LEN$))
7240 FOR IDX=1 TO NUMKEYS
7250 K_OFS$(IDX*5-4,5)=STR(OFS:"####0")
7260 OFS=OFS+NUM(K_LEN$(IDX*5-4,5))
7270 NEXT IDX
7280 READ (DDE_FN,KEY=DDF_KEY$,ERR=*NEXT)
7290 RETURN 
8900 PRINT @(0,20),
8920 ESCAPE 
9800 CLOSE (F,ERR=9801)
9810 SETERR 9900
9820 EXIT 
9900 RUN "ZMENU"
9999 END 
10000 ! 10000 - iolists
10010 IOLIST NAME$,PATH$,LST_UPD$,FILE_PROC$,NOT_USED1$,NOT_USED2$,NOT_USED3$,NOT_USED4$,NOT_USED5$,RFU1$,SEP$,RFU3$
10020 IOLIST IOLOBJ$,NAME$,DESC$,TYPE$,LEN$,OCC$,FORMAT$,VALID$,PRINT$,HELP$,NOTES$,KEYDEF$,QUERY$,CLASS$,FLAGS$,DFLT$,ALT_NAME$
11000 ! ^ 200
11005 GET_OCCURS:
11010 FLD_INC=1; IF OCC$="" OR POS(":"=OCC$)=0 THEN RETURN 
11015 OCC_X$=OCC$+","
11020 WHILE OCC_X$<>""
11025 PO=POS(":"=OCC_X$),PP=POS(","=OCC_X$)
11030 FLD_INC=FLD_INC*NUM(OCC_X$(PO+1,PP-PO))-NUM(OCC_X$(1,PO-1))+1
11035 OCC_X$=OCC_X$(PP+1)
11040 WEND 
11045 RETURN 
11050 GET_KEYS:
