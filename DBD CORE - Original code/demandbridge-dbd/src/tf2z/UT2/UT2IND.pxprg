0010 REM "Convert indexed file to direct file <UT2IND>
0035 REM "5.7 - 01/12/24 - 9.647042 - tma - SSP# 307470
0037 REM "307470-Increase string length for AR7 in UT2IND convert index to direct
0040 REM "Copyright 2024 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="UT2IND",X1$="Convert Indexed Files to Direct Files"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0140 LIST$="AR7APJ",FLIST$=""; REM " List of files to convert
0145 LIST1$="AR601API00",PRIMARY$=""; REM "Primary file to link to indexed file with field for link
0150 LIST2$="AR800APQ00",SECOND$=""; REM "Secondary file to link to indexed file with field for link, if none then 5 blanks
0160 Z9$=Z9$(1,POS("  "=Z9$+"  ")-1)
0200 REM "
0210 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0220 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0221)
0230 DIM Z0$(80,X3$(235,1)); Z0$=ESC+"BG"+Z0$+ESC+"EG"
0240 REM "Iolists and dims are created on the fly at 7000's so before
0241 REM "making changes make sure you do not use the lines that are
0242 REM "saved out for these, 310,320,330 and 7085
0243 REM " INDXF for the indexed file and DIRF for the direct file variables
0300 REM "IOLISTS
0305 REM " Iolists are created on the fly at line 7000
0310 IOLIST DIRF$,DIRF(0),DIRF(1)
0320 IOLIST I0,INDXF$,INDXF(0),INDXF(1)
0330 IOLIST REC$,INDXF(0),INDXF(1)
0510 DIM Z[NUM(X3$(60,3))]
0600 REM 
0605 GOSUB 7500
0610 GOSUB 6000
0640 IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 0641,9900
0900 REM "Set file name to process, rename and setup new direct file
0901 REM "1=Master file, 2=Old indexed file, 3=New direct file, 4=Secondary file
0910 FOR X=1 TO LEN(FLIST$)/3
0920 RENAME FLIST$(X*3-2,3)+X3$(9,3),FLIST$(X*3-2,3)+X3$(9,3)+".I"
0930 IF FLIST$(X*3-2,3)="AR7" THEN L1=1,KEY=28,BYTES=256,STRG=72,INV=8 ! ssp#307470
0935 IF FLIST$(X*3-2,3)="APJ" THEN L1=1,KEY=30,BYTES=256,STRG=54,INV=10
0950 DIRECT FLIST$(X*3-2,3)+X3$(9,3),KEY,0,-BYTES,0,0
0960 COUNT=0,FILE_ID=1,FILE_ID$=FLIST$(X*3-2,3),Z$="01C  02C  03C  04C  01L "+PRIMARY$(X*5-4,3)+"...  "+"02L "+FLIST$(X*3-2,3)+X3$(9,3)+".I  03L "+FLIST$(X*3-2,3)+"...  ",PLINK=NUM(PRIMARY$(X*5-1,2)); IF SECOND$(X*5-4,3)<>DIM(3) THEN Z$=Z$+"04L "+SECOND$(X*5-4,3)+"...  ",SLINK=NUM(SECOND$(X*5-1,2))
0965 GOSUB 9750; GOSUB 7000; GOSUB 8100
1000 REM "Main processing portion of program
1010 READ (Z[1],END=2000)IOL=0310
1020 COUNT=COUNT+1; IF MOD(COUNT,T0)=1 THEN GOSUB 8150
1030 I0=DIRF[PLINK]
1040 IF I0<=0 THEN GOTO 1000
1050 READ (Z[2],IND=I0)IOL=0320
1060 IF LEN(INDXF$)<KEY THEN GOTO 1040
1070 REC$=INDXF$; IF FLIST$(X*3-2,3)="AR7" THEN KEY$=REC$(1,KEY-3),KEY$=KEY$+"000",REC$=REC$(1,STRG)+"000" ELSE IF FLIST$(X*3-2,3)="APJ" THEN KEY$=REC$(1,20)+REC$(36,1)+REC$(49,6)+"000",REC$=REC$(1,STRG)+"000"
1075 IF POS(FLIST$(X*3-2,3)="AR7APJ",3)<>0 AND DIRF$(1,10)<>REC$(1,10) AND DIRF$(11,INV)=REC$(11,INV) THEN REC$(1,10)=DIRF$(1,10),KEY$(1,10)=DIRF$(1,10)
1076 ! IF FN%FFN("APQ"+%C$)>0 OR FN%FFN("AR8"+%C$)>0 THEN REC$=REC$+"H" ! SSP#209664
1080 IF DIRF$(1,10+INV)<>KEY$(1,10+INV) THEN ESCAPE ; REM "Link doesn't match call support
1090 WRITE (Z[3],KEY=KEY$,DOM=1100)IOL=0330; GOTO 1040
1100 REM "Duplicate Key - program IC2LCC is really generic program to find next available seq counter
1120 KEY_1$=KEY$; CALL "IC2LCC",X3$,X4$,Z[3],KEY+1-3,3,LAST_ONE$,KEY_1$; KEY$=KEY_1$(1,LEN(KEY$)),REC$(STRG+1,3)=KEY_1$(KEY+1-3,3)
1130 GOTO 1080
2000 REM "Process Secondary file if need be
2010 IF SECOND$(X*5-4,3)=DIM(3) THEN GOTO 2290
2020 FILE_ID=4,COUNT=0,FILE_ID$=SECOND$(X*5-4,3); GOSUB 8100
2050 READ (Z[4],END=2290)IOL=0310
2060 COUNT=COUNT+1; IF MOD(COUNT,T0)=1 THEN GOSUB 8150
2070 I0=DIRF[SLINK]
2080 IF I0<=0 THEN GOTO 2050
2090 READ (Z[2],IND=I0)IOL=0320
2100 IF LEN(INDXF$)<KEY THEN GOTO 2050
2110 REC$=INDXF$; IF FLIST$(X*3-2,3)="AR7" THEN KEY$=REC$(1,KEY-3),KEY$=KEY$+"000",REC$=REC$(1,STRG)+"000" ELSE IF FLIST$(X*3-2,3)="APJ" THEN KEY$=REC$(1,20)+REC$(36,1)+REC$(49,6)+"000",REC$=REC$(1,STRG)+"000"
2120 WRITE (Z[3],KEY=KEY$,DOM=2130)IOL=0330; GOTO 2080
2130 REM "Duplicate Key - program IC2LCC is really generic prog to find nex available seq counter
2140 KEY_1$=KEY$; CALL "IC2LCC",X3$,X4$,Z[3],KEY+1-3,3,LAST_ONE$,KEY_1$; KEY$=KEY_1$(1,LEN(KEY$)),REC$(STRG+1,3)=KEY_1$(KEY+1-3,3)
2150 GOTO 2120
2290 NEXT X
5000 REM "End of files
5020 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5040 GOTO 9900
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(1,4),"This Demandbridge utility program will convert Indexed files to Direct files",@(15,5),"Files to be converted are:"
6025 IF LEN(FLIST$)=0 THEN PRINT @(23,7),"No files found to convert"; GOTO 6090
6030 FOR X5=1 TO LEN(FLIST$) STEP 3; PRINT @(23,7+INT(X5/3)),FLIST$(X5,3); NEXT X5
6050 PRINT (0,ERR=6051)'SF',
6090 RETURN 
7000 REM "Create a iolist based on file name
7010 L0=310,L2=320,L3=330,L0$="DIRF",L2$="INDXF",L3$="REC"
7040 IOL1$=STR(L0)+"IOLIST "+L0$+"$"
7050 IF L1>0 THEN FOR X5=0 TO L1; IOL1$=IOL1$+","+L0$+"("+STR(X5)+")"; NEXT X5
7060 DIM$=STR(7085)+"DIM "+L0$+"("+STR(L1)+")"+","+L2$+"("+STR(L1)+")"
7085 DIM DIRF(1),INDXF(1)
7110 IOL2$=STR(L2)+"IOLIST "+"I0"+","+L2$+"$"
7120 IF L1>0 THEN FOR X5=0 TO L1; IOL2$=IOL2$+","+L2$+"("+STR(X5)+")"; NEXT X5
7130 IOL3$=STR(L3)+"IOLIST "+L3$+"$"
7140 IF L1>0 THEN FOR X5=0 TO L1; IOL3$=IOL3$+","+L2$+"("+STR(X5)+")"; NEXT X5; REM "New direct file has same number of buckets as old indexed file
7160 EXECUTE IOL1$
7170 EXECUTE IOL2$
7175 EXECUTE IOL3$
7180 EXECUTE DIM$
7190 RETURN 
7500 REM "Determine if files on list are still indexed
7510 FOR X6=1 TO LEN(LIST$)/3
7520 CLOSE (14); OPEN (14)LIST$(X6*3-2,3)+X3$(9,3)
7530 CALL "ZZINFO",14,X0,X3$,R0,R1,K,B,D,T0,S0,F$
7540 IF T0=0 THEN FLIST$=FLIST$+LIST$(X6*3-2,3),PRIMARY$=PRIMARY$+LIST1$(X6*5-4,5); SECOND$=SECOND$+LIST2$(X6*5-4,5)
7550 CLOSE (14)
7560 NEXT X6
7590 RETURN 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 CALL "ZZINFO",Z[FILE_ID],T9,X3$,T,T0,K,B,D,S0,S1,F$
8115 PRINT @(0,17),"File: ",FILE_ID$,", there are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and lookfor avalue of 1. IF T0 is 1, then nothing would get reported. We lookfor a result of 1 because this causes the first record to automaticallystart the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, COUNT, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,COUNT
8195 RETURN 
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,0
9790 RETURN 
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56000 REM "307470-Increase string length for AR7 in UT2IND convert index to direct
