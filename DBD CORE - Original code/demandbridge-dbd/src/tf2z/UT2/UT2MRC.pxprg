0010 REM "Compare utility for DIRect files (UT2MRC)
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 03/13/23 - 10.708165 - crg - SSP# 307439
0037 REM "307439-Dataset comparison utility for merge projects               
0040 REM "Copyright 2023 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000
0110 X0$="UT2MRC",X1$="File Compare Utility"
0120 DIM Z0$(80,"-"),BLANKS$(100)
0130 K0=20,K1=1
0135 C9=-1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0400 REM 'PROMPT FOR COMPANY
0401 GOSUB 6000
0405 DIM SOURCE$(3),TARGET$(3),A[10]
0409 X$="Company to copy data from"
0410 CALL "ZZENTR","SUX",A{ALL},SOURCE$,X4$,X3$,53,10,1,3,C0,"","{3"+X$,"","","","",""; IF ABS(C0)>6 THEN GOTO 0410
0420 IF ABS(C0)=4 THEN GOTO 9900
0440 REM TARGET COMPANY
0442 X$="Company to copy data to"
0450 CALL "ZZENTR","SUX",A{ALL},TARGET$,X4$,X3$,53,11,1,3,C0,"","{3"+X$,"","","","",""; IF ABS(C0)>6 THEN GOTO 0410
0460 IF ABS(C0)=4 THEN GOTO 9900
0490 ! X$="Overwrite existing records:  N=existing records uneffected"; DIM OPTIONS$(7); CALL "ZZENTR","Y",A{ALL},OPTIONS$,X4$,X3$,53,12,1,1,C0,"","{3"+X$,"","","","",""; IF ABS(C0)>6 THEN GOTO 0410
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ZZE...  13O ZZPARM  "
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 DDF=HFN; OPEN (DDF,ERR=END_PROGRAM)"providex.ddf"
0540 CALL "ZZGFLS",MEMCHN; IF MEMCHN=0 THEN MSGBOX "Error: Files could not be selected!"; GOTO END_PROGRAM
0640 IF Q1$="" THEN CALL "ZZPROM",".Y",X3$,Z,"Proceed?","","",0; ON Z GOTO 0641,9900
0699 ! 
0720 REM "Open logfile
0725 LOGNAME$="UT2MRC.FILES."+FID(0); ERASE LOGNAME$,ERR=0726
0728 SERIAL LOGNAME$,0,0; CLOSE (1001); OPEN LOCK (1001,OPT="TEXT")LOGNAME$
0729 ! 
0730 REM "Open diff file
0735 DIFFNAME$="UT2MRC.DIFFS."+FID(0); ERASE DIFFNAME$,ERR=0736
0738 SERIAL DIFFNAME$,0,0; CLOSE (1003); OPEN LOCK (1003,OPT="TEXT")DIFFNAME$
0799 ! 
0810 C1=0; PRINT @(10,18),"Compare file(s)...",
0850 READ (MEMCHN,KEY="",DOM=*NEXT) ! Reset to beginning of file list
0900 REM GET NEXT FILE AND START TO PROCESS
0906 FKEY$=KEY(MEMCHN,END=END_LOOP); READ (MEMCHN,KEY=FKEY$)LOGICAL_FILE$
0907 FILENAME$=MID(LOGICAL_FILE$,1,3)
0915 C1=0,T1=0,D1=0
0916 CLOSE (1002); OPEN (1002,ERR=0917)FILENAME$+SOURCE$; CLOSE (1002); GOTO 0918
0917 MTYPE$="ERR",MESS$="CANT OPEN|"+FILENAME$+SOURCE$+"|"; GOSUB 7500; GOTO 0900
0918 CLOSE (1002); OPEN (1002,ERR=0919)FILENAME$+TARGET$; CLOSE (1002); GOTO 0920
0919 MTYPE$="ERR",MESS$="CANT OPEN|"+FILENAME$+TARGET$+"|"; GOSUB 7500; GOTO 0900
0920 Z$="02CU 02O "+FILENAME$+SOURCE$+" 03CU 03O "+FILENAME$+TARGET$+" "
0925 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0930,0926
0926 REM "ERROR ON OPEN
0927 MTYPE$="ERR",MESS$="CANT OPEN|"+FILENAME$+"|"; GOSUB 7500
0929 GOTO 0900
0930 GOSUB 8100; GOSUB 8150
0932 IF K=0 AND B=0 THEN MTYPE$="ERR",MESS$="SYSTEM FILE|"+FILENAME$+"|SKIPPED|"; GOSUB 7500; GOTO 0900 ELSE IF K=0 AND B<>0 THEN MTYPE$="ERR",MESS$="INDEX FILE|"+FILENAME$+"|SKIPPED|"; GOSUB 7500; GOTO 0900 ELSE IF K<>0 AND B=0 THEN FTYPE$="S",FDESC$="SORT" ELSE FTYPE$="D",FDESC$="DIRECT"
0935 MTYPE$="STR",MESS$="START|"+FILENAME$+"|RECORDS|"+STR(T)+"|"; GOSUB 7500
0940 HEADERS=0 ! Reset file column headers
1000 REM "Process file
1010 K$=KEY(Z[2],END=2000); READ RECORD (Z[2],KEY=K$)SOURCEREC$
1020 C1=C1+1; IF MOD(C1,1000)=0 THEN C=C1; GOSUB 8150
1100 READ RECORD (Z[3],KEY=K$,DOM=1000)DESTREC$
1102 IF STP(SOURCEREC$,2,$00$)=STP(DESTREC$,2,$00$) THEN GOTO 1000 ! "Duplicate found, but rec contents same, so ignore
1103 MTYPE$="DUP",MESS$="DUPLICATE|"+FILENAME$+"|KEY|"+K$+"|"; GOSUB 7500; GOSUB 7600
1104 D1++
1105 REM "Continue processing
1150 GOTO 1000
2000 REM "End of file goto next file
2005 MTYPE$="STP",MESS$="FINISH|"+FILENAME$+"|DUPLICATES|"+STR(D1)+"|"; GOSUB 7500
2010 C=T; GOSUB 8150
2095 GOTO 0900
2099 ! 
5000 END_LOOP:
5005 MTYPE$="STP",MESS$="DONE|"; GOSUB 7500
5010 C=T; GOSUB 8150
5020 IF Q1$="" THEN CALL "ZZPROM",".4",X3$,Z,"Process complete!!","","",0
5040 GOTO 9900
5049 ! 
6000 REM "BACKGROUND
6010 PRINT @(0,3),"This program will compare the contents of specified files from the ",@(0,4),"specified companies."
6020 PRINT @(20,10),"Enter Source Company to process:",@(20,11),"Enter Target Company to process:", ! @(25,12),"Overwrite existing records?",
6190 RETURN 
7500 REM "Put MESS$ in log & display to screen
7501 REM "MTYPE$ is type, clear it after, if '' then say info
7502 REM "valid are INF,DUP,ERR,STR,STP
7505 IF MTYPE$="" THEN MTYPE$="INF"
7510 PRECISION 14; OUT$=DTE(0:"MM-DD-YYYY|%Hz:%mz:%sz")+"|"+MTYPE$+"|"+MESS$; PRECISION 2
7520 PRINT (1001)OUT$
7525 IF LEN(OUT$)>50 THEN TMP$=OUT$(1,50) ELSE TMP$=OUT$ END_IF ; PRINT @(10,20),'CL',@(10,20),TMP$,
7545 RETURN 
7549 ! 
7600 REM "Log differences
7602 IOL_HDR:IOLIST FILENAME$,",",LOC$,",",K$,","
7605 IF NOT(HEADERS) THEN {
7606 GOSUB GET_HEADERS
7607 PRINT (1003)"Filename: "+FN%GETDDFNAME$(FILENAME$)
7608 PRINT (1003)FILENAME$,",",",",",",HEADERS$
7609  }
7610 READ (Z[2],KEY=K$)IOL=PVX_IOL$
7620 LOC$=SOURCE$; PRINT (1003)IOL=IOL_HDR,IOL=ORA_IOL$
7630 READ (Z[3],KEY=K$)IOL=PVX_IOL$
7640 LOC$=TARGET$; PRINT (1003)IOL=IOL_HDR,IOL=ORA_IOL$
7645 RETURN 
7649 ! 
7650 DEF FN_TRANSLATE$(LOCAL X$)
7655 RETURN X$
7660 END DEF
7669 ! 
7670 DEF FN_TFDATE$(LOCAL TFDATE$, LOCAL DATE_FORMAT$, LOCAL MODE)
7675 LOCAL RET_VAL$
7680 IF TFDATE$<>"" AND NUL(TFDATE$) THEN IF MODE=0 THEN IF DB_TYPE$<>"O" AND DB_TYPE$<>"S" THEN RET_VAL$="NULL" ELSE RET_VAL$=TFDATE$ END_IF ; GOTO END_TFDATE ELSE TFDATE$="G00101" ! If tfdate is "" or all spaces, then return the same number of spaces if not a key column else return "1960-01-01"
7685 RET_VAL$=FN%PRINT_DATETIME$(FN%GET_DATETIME(TFDATE$,0),DATE_FORMAT$)
7690 END_TFDATE:RETURN RET_VAL$
7695 END DEF
7699 ! 
7700 GET_HEADERS:
7705 HEADERS=1
7710 CALL "DBSQLGEN",CTLSQL$,ERRMSG$,FN%GETDDFNAME$(FILENAME$),"*providex.ddf","","CTL","M"
7720 TMP=MSK(CTLSQL$,"\(.*\)"); IF TMP<>0 THEN HEADERS$=MID(CTLSQL$,TMP+1,MSL-2) ELSE HEADERS$="No column headers available"
7725 IF NOT(NUL(ERRMSG$)) THEN MSGBOX ERRMSG$
7730 HEADERS$=SUB(HEADERS$,SEP,"")
7735 CALL "DBSQLGEN",ORA_IOL$,ERRMSG$,FN%GETDDFNAME$(FILENAME$),"*providex.ddf","","IOL","M"
7736 IF NOT(NUL(ERRMSG$)) THEN MSGBOX ERRMSG$
7739 PVX_IOL$=IOL(Z[2])
7741 IF NUL(PVX_IOL$) THEN MSGBOX MSG(81)
7750 ORA_IOL$=CPL(ORA_IOL$)
7795 RETURN 
7799 ! 
8100 REM "GOSUB here, once, at the beginning, after the background is set and before the Proceed? question. Set T to total # to do (by calling ZZINFO) and T0 to the reporting interval (report every T0 number of records) this is typically 2% of total; This also prints a message (@8115),so adjust accordingly
8110 CALL "ZZINFO",Z[2],T9,X3$,T,T0,K,B,D,S0,S1,F$
8115 PRINT @(20,15),'CL',"Processing: "+FILENAME$,@(20,16),"There are "+STR(T)+" records to process"
8129 REM "Set T0, we make sure T0 is > 1, because later on we MOD and look for avalue of 1. IF T0 is 1, then nothing would get reported. We look for a result of 1 because this causes the first record to automatically start the reporting instead of waiting until the T0'th record to get the first report
8130 T0=INT(T*.02); IF T0<=1 THEN T0=2
8145 RETURN 
8150 REM "Call this each time to update the bar graph. Display horiz. bar graph given total #, T and current #, C, and time counter T1 (T1 is init'ed here and used here, just don't use it somewhere else)
8155 CALL "ZZBARG",X3$,"HG",19,10,50,T1,T,C
8195 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 END_PROGRAM:
9901 ERASE WORKFILE$,ERR=9902
9910 REM ENABLE (0)
9911 REM ENABLE (9)
9920 CLOSE (DDF),(1001),(1003)
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
56001 REM "307439-Dataset comparison utility for merge projects               
