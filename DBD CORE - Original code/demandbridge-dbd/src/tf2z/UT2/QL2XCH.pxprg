0010 ! QL2XCH - XML Data change file upload from DBD to EQD for QNET customers
0035 REM "5.7 - 07/07/21 - 14.374225 - jvv - SSP# 307362
0037 REM "307362-GUI Order Entry security enhancement                        
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 BEGIN 
0090 CLEAR ; SETERR 0100; ENTER 
0100 ! SETERR 9000
0110 X0$="UT2EQD",X1$="XML upload to EQD"
0130 PRINT 'CS',@(0,3),"Creating XML files "
0163 ! X2=-1; X0=-1
0165 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2
0300 ! IO list
0310 DIM AR1[15],FS1[13],FS2[29]
0315 DIM FMPD$(300),FMPD[6]
0320 DIM FMPM$(241),FMPM[11]
0325 ! iolist for customer information
0330 AR1_IOL:IOLIST AR1$,AR1[0],AR1[1],AR1[2],AR1[3],AR1[4],AR1[5],AR1[6],AR1[7],AR1[8],AR1[9],AR1[10],AR1[11],AR1[12],AR1[13],AR1[14],AR1[15]
0335 ! iolist for Order
0340 IOLIST FS1$,FS1[0],FS1[1],FS1[2],FS1[3],FS1[4],FS1[5],FS1[6],FS1[7],FS1[8],FS1[9],FS1[10],FS1[11],FS1[12],FS1[13]
0345 IOLIST FS2$,FS2[0],FS2[1],FS2[2],FS2[3],FS2[4],FS2[5],FS2[6],FS2[7],FS2[8],FS2[9],FS2[10],FS2[11],FS2[12],FS2[13],FS2[14],FS2[15],FS2[16],FS2[17],FS2[18],FS2[19],FS2[20],FS2[21],FS2[22],FS2[23],FS2[24],FS2[25],FS2[26],FS2[27],FS2[28],FS2[29]
0350 IOLIST FM0$(1)
0355 FMPD_IOL:IOLIST FMPD$(1),FMPD{ALL}
0360 FMPM_IOL:IOLIST FMPM$(1),FMPM{ALL} ! Freight Markup
0365 IC0_IOL:IOLIST IC0$,IC0{ALL}
0370 FM1_IOL:IOLIST FM1$,FM1{ALL}
0375 IC1_IOL:IOLIST IC1$,IC1{ALL}
0380 FSW_IOL:IOLIST FSW$,FSW{ALL}
0385 FM5_IOL:IOLIST FM5$,FM5{ALL}
0390 FM3_IOL:IOLIST FM3$,FM3{ALL}
0395 FM4_IOL:IOLIST FM4$,FM4{ALL}
0400 DRT_IOL:IOLIST TABLE_NAME$,DATA_KEY$,CHANGE_TYPE$,CHANGE_TS$,OPER_CODE$,FID$
0410 IOLIST MDATA$,MTYPE$
0500 REM "Open files
0505 DIM Z[NUM(X3$(60,3))]
0510?Z$="01O AR1...  02O FM0...  03O IC1...  040 FS1...  05O FM1...  06O FS2...  13O ZZPARM  07O IC0...  08O FMP...  09O PO1...  10O FM5...  11O ASW...  12O FSW...  14O FM3...  15O FM4...  16O AR3...  17O PO3...  18O AR5... "  ""
0520 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1; ON Z0 GOTO 0521,9900
0530 IF NOT(FN%ISOPEN(_DRT)) THEN _DRT=HFN; OPEN (_DRT,IOL=*,ERR=*NEXT)"DRT"+%C$; CALL "ZZWIOL",_DRT,"B",DRT_IOL$ ! GOSUB CHK_DRT_DATES:!; DIM GENERAL$:CPL(PO3_IOL$),SPECIAL$:CPL(PO3_IOL$) ! 256888
0550 _MEM=HFN; OPEN (_MEM)"*memory*"
0600 REM "
0700 ! Set Variables
0710 XHDG$="EQLINK"
0720 CURR_DATE$=DTE(0:"%Y%Mz%Dz%Hz%mz%sz")
0730 FIND (Z[13],KEY=X3$(9,3)+"XMLEQD",DOM=*NEXT)XMLDTE$
0735 IF STP(XMLDTE$,2)="" THEN XMLDTE$=CURR_DATE$
0740 RUN_MODE$="C" ! Only Change records from DRT file
0750 INCL_TAX$="Y"
0760 INCL_OS$="Y"
0780 ! RUNDATE$=STR(NUM(XMLDTE$)+1)
0800 FLNAME$="AR1XPDXPEFM0FM1IC0FSWIC1KTOFM3"
0820 FLTYPE$="CSTCSTCSTSHPITMITMITMITMITMUSG"
0825 FLNUM$="001001001002003003003003003004"
1000 ! Process DRT file by Date, to pick up all records sinc last run date (XMLDATE$ IN ZZPARM)
1020 READ (_DRT,KNO=1,KEY=XMLDATE$+"",DOM=*NEXT)
1040 READ_DRT:
1050 DKEY$=KEY(_DRT,KNO=1,END=END_DRT); READ (_DRT,KEY=DKEY$)IOL=DRT_IOL
1070 IF DKEY$(1,LEN(XMLDTE$))<=XMLDTE$ THEN GOTO READ_DRT
2000 FL$=TABLE_NAME$(1,3)
2010 XX=POS(FL$=FLNME$,3); IF XX=0 THEN GOTO READ_DRT
2020 XN$=FLNUM$(XX*3-2,3),XN=NUM(XN$)
2030 XF$=FLTYPE$(XX*3-2,3) ! IF Customer, shipt , item, usage record
2050 ON XN GOSUB READ_DRT,CUST_TYPE,SHIP_TYPE,ITEM_TYPE,USG_TYPE,READ_DRT
2060 GOTO READ_DRT
2100 END_DRT:
3000 CUST_TYPE:
3010 CUST$=DATA_KEY$(1,10)
3015 GOSUB CHECK_EQLINK_CUST; IF NOT(QCUST) THEN RETURN 
3020 IF POS(MID(AR1$,563,1)="YA")=0 THEN GOTO END_CUST_TYPE
3060 MEM_KEY$=CUST$+XF$+DKEY$,MDATA$=DATA_KEY$,MTYPE$=CHANGE_TYPE$
3070 WRITE (_MEM,KEY=MEM_KEY$)IOL=0410
3080 END_CUST_TYPE:RETURN 
3200 SHIP_TYPE:
3210 IF MID(DKEY$,11,1)<>"C" THEN RETURN 
3220 CUST$=DATA_KEY$(12,10)
3230 GOSUB CHECK_EQLINK_CUST; IF NOT(QCUST) THEN RETURN 
3260 MEM_KEY$=CUST$+XF$+DKEY$,MDATA$=DATA_KEY$,MTYPE$=CHANGE_TYPE$
3270 WRITE (_MEM,KEY=MEM_KEY$)IOL=0410
3280 END_SHIP_TYPE:RETURN 
3500 ITEM_TYPE:
3510 CUST$=DATA_KEY$(1,10)
3520 GOSUB CHECK_EQLINK_CUST; IF NOT(QCUST) THEN RETURN 
3530 ITEM$=DATA_KEY$(12,10)
3550 FIND (Z[5],KEY=CUST$+ITEM$,DOM=END_ITEM_TYPE)IOL=FM1_IOL
3555 IF POS(MID(FM1$,198,1)<>"YR") THEN GOTO END_ITEM_TYPE
3560 MEM_KEY$=CUST$+XF$+DKEY$,MDATA$=DATA_KEY$,MTYPE$=CHANGE_TYPE$
3570 WRITE (_MEM,KEY=MEM_KEY$)IOL=0410
3590 END_ITEM_TYPE:RETURN 
3700 USG_TYPE:
3710 CUST$=DATA_KEY$(1,10)
3720 GOSUB CHECK_EQLINK_CUST; IF NOT(QCUST) THEN RETURN 
3730 ITEM$=DATA_KEY$(12,10)
3750 FIND (Z[5],KEY=CUST$+ITEM$,DOM=END_USG_TYPE)IOL=FM1_IOL
3755 IF POS(MID(FM1$,198,1)<>"YR") THEN GOTO END_USG_TYPE
3760 MEM_KEY$=CUST$+XF$+DKEY$,MDATA$=DATA_KEY$,MTYPE$=CHANGE_TYPE$
3770 WRITE (_MEM,KEY=MEM_KEY$)IOL=0410
3790 END_USG_TYPE:RETURN 
5000 END_DRT:
5010 ESCAPE 
