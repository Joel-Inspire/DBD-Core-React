0010 ! ZXGMMA-Create Release Tape
0015 REM "Prog Type: IP-3.3.1
0020 SETESC 9300; SETERR 9000
0035 REM "4.1 - 12/01/97 - 10.72 - wmz;01/2000 tma 121555
0040 REM "Copyright 1997 Computer Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 PROCESS "ZXGMMA","../ZZX/ZX.EN"
0060 EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0095 INIT:
0096 ESCAPE 
0110 X0$="ZX2MMA",X1$="Create Release Tape"
0120 DIM Z0$(80,"-"),S$(50),C$(120)
0130 K0=9,K1=0
0135 C9=-1
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0250 K9$="SYSTEMMAP",K9=LEN(K9$)
0295 DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0300 REM "IOLISTS
0310 IOLIST A$(1)
0320 IOLIST B$
0321 IOLIST B1$
0322 IOLIST B2$
0330 IOLIST C$(1)
0340 IOLIST D$
0350 IOLIST E$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ZZPARM  02O SSA... 03O ZX0...  04O ZX1...  05O ZX2...  06O ZWZ...  07O SS1...  08O SS9...  09O ZWY...  13O ZZPARM  "
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
0610 L9=17
0680 GOSUB 6000
1000 REM "
1010 Y8=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1015 DIM V7$(2); V7$(1,1)="1"
1030 DIM B$(538)
1035 DIM A$(138)
1045 A$(1,LEN(A1$))=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1500
1200 REM "
1215 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1500 REM "
1505 Z9=-1,Z8=0,C9=0,A2$="",A3$="",A4$="",A5$=""
1510 A1$=A$(1,9)
1520 READ (Z[1],ERR=7200,KEY=A1$,DOM=1600)IOL=0310
1525 Z9=0,V7$=""; GOSUB 5800
1526 GOTO 2000
1530 GOSUB 8800
1590 GOTO 1700
1600 REM "
1615 IF X3$(185,1)="I" THEN CALL "ZZPROM","2A",X3$,0,"","","",0; GOTO 1630
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 GOTO 9800
1655 Z8=1
1680 GOSUB 7450
1690 GOTO 2000
1700 REM "
1710 A$(66,50)="/usr/lib/pvx/rel"
1790 GOSUB 6200
1800 REM "
1820 CALL "ZZPROM","6 ZX2MMA",X3$,S3,"","","",0
1825 ON S3 GOTO 1830,2000,6700
1840 GOTO 8000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 GOSUB 7400
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2035 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 SETERR 9000; X$="",Q$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2025 IF C0>3 OR X0<0 THEN GOTO 1800
2038 IF X0<LEN(V7$) THEN V7$(X0+1,1)=""
2040 ON X0 GOTO 2100,2150,2200,1800
2100 REM "Client
2110 CALL "ZZENTR","AUZX",A{ALL},A$,X4$,X3$,27,5,129,10,C0,"S/S","{3"+X$,"","ZX2MMA00","SS1","SS2MAA",""; IF C0=6 THEN GOSUB 6400; C0=1
2120 IF V9<>-2 THEN FIND (Z[2],KEY=A$(129,10),DOM=2110)IOL=0320; FIND (Z[7],KEY=A$(129,10),DOM=2110)IOL=0321; FIND (Z[8],KEY=A$(129,10),DOM=2110)IOL=0322; B2=NUM(B2$(11,5),ERR=2110)
2125 PRINT @(39,5),B1$(11,35),
2130 GOSUB 8800
2140 GOTO 2020
2150 REM "Destination of shellscript
2155 GOTO 2020
2160 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,27,7,16,50,C0,"","{3"+X$,"","ZX2MMA02","","",""
2190 GOTO 2020
2203 IF B$(11,1)="8" THEN A$(66,50)="/usr/lib/pvx/rel" ELSE A$(66,50)="/usr/lib/pvx/rel"
2205 PRINT @(27,9),A$(66,50),
2210 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,27,9,66,50,C0,"","{3"+X$,"","ZX2MMA04","","",""
2240 GOTO 2020
4000 REM "Given S1$ add lines to TF_TEMPLATE 
4005 CURR_LINE$="21",TMP=POS("[CLIENT]"=S1$); IF TMP=0 THEN MASTER$=S1$,CLIENT$="" ELSE MASTER$=S1$(1,TMP-1),CLIENT$=S1$(TMP)
4010 CLOSE (14); OPEN (14)"TF_TEMPLATE"; TEMPLATE$=PTH(14); CLOSE (14)
4012 TMP_NAME$="TF"+A$(134,3)+".tmp"; INVOKE "cp "+TEMPLATE$+" /usr/lib/pvx/"+TMP_NAME$
4014 TFCHAN=UNT; OPEN LOCK (TFCHAN)TMP_NAME$
4020 ! process master$
4022 CURR_SSN$=STR(NUM(MASTER$(37,9)))
4023 WRITE RECORD (TFCHAN)"10 ! Liscense for "+S1$(4,3)+"-"+S1$(7,30)
4024 WRITE RECORD (TFCHAN)"1210 PRINT @(5,6),"+QUO+"Created on "+DAY+QUO
4025 WRITE RECORD (TFCHAN)"80"+CURR_LINE$+" CASE "+CURR_SSN$+"; break"
4030 WRITE RECORD (TFCHAN)"10"+CURR_LINE$+" CASE "+CURR_SSN$+"; NUM_USERS="+MASTER$(47,3)+"; break"
4035 DIM SYS_STR$(120); SYS_STR$(1,7)="INSTALL",SYS_STR$(8,39)=MASTER$(7,30),SYS_STR$(47,9)=MASTER$(37,9) ! key, company name, serial number
4037 SYS_STR$(56,8)=MASTER$(50,8),SYS_STR$(64,3)="370",SYS_STR$(67,3)=MASTER$(47,3) ! auth code, version code, number of users
4039 SYS_STR$(72,1)=" ",SYS_STR$(73,12)="0110 0001511",SYS_STR$(85,2)="0 ",SYS_STR$(87,5)="00000" ! 72=sys type (set there), rest is default stuff
4045 WRITE RECORD (TFCHAN)"11"+CURR_LINE$+" CASE "+CURR_SSN$+"; sys_str$="+QUO+SYS_STR$+QUO+"; break"
4050 WRITE RECORD (TFCHAN)"12"+CURR_LINE$+" print @(0,8),"+QUO+S1$(4,3)+QUO+",@(8,8),"+QUO+S1$(7,30)+QUO+",@(40,8),"+QUO+S1$(37,9)+QUO+",@(55,8),"+QUO+MASTER$(47,3)+QUO+","
4055 WRITE RECORD (TFCHAN)"14"+CURR_LINE$+" CASE "+CURR_SSN$+"; APPS$="+QUO+MASTER$(58)+QUO+"; break"
4080 IF CLIENT$<>"" THEN GOSUB BUILD_CLIENTS
4084 ! Load tmp program and save as real program
4085 CLOSE (TFCHAN); PREINPUT "LOAD "+QUO+TMP_NAME$+QUO; PREINPUT "PASSWORD "+QUO+"ZULU"+QUO; PREINPUT "SAVE ""/usr/lib/pvx/TF"+A$(134,3)+QUO; PREINPUT "PASSWORD "+QUO+QUO; PREINPUT "LOAD "+QUO+PGN+QUO; PREINPUT "GOTO 8016"; PREINPUT "RUN"
4090 ESCAPE 
4095 RETURN 
4100 BUILD_CLIENTS:! build lines for clients
4105 REPEAT 
4110 TMP=POS("[CLIENT]"=CLIENT$(2)); IF TMP=0 THEN CURR_CLIENT$=CLIENT$,CLIENT$="" ELSE CURR_CLIENT$=CLIENT$(1,TMP),CLIENT$=CLIENT$(TMP+1) ! Skip the [CLIENT] on the front of the string
4120 GOSUB DO_CLIENT
4135 UNTIL CLIENT$=""
4145 RETURN 
4150 DO_CLIENT:! given curr_client$, increment curr_line$ and build client entry
4154 CURR_CLIENT$=CURR_CLIENT$(9) ! drop the [CLIENT]
4155 CURR_LINE$=STR(NUM(CURR_LINE$)+1:"00"),CURR_SSN$=STR(NUM(CURR_CLIENT$(37,9)))
4160 WRITE RECORD (TFCHAN)"80"+CURR_LINE$+" CASE "+CURR_SSN$+"; break"
4165 WRITE RECORD (TFCHAN)"10"+CURR_LINE$+" CASE "+CURR_SSN$+"; NUM_USERS="+CURR_CLIENT$(47,3)+"; break"
4170 DIM SYS_STR$(120); SYS_STR$(1,7)="INSTALL",SYS_STR$(8,39)=CURR_CLIENT$(7,30),SYS_STR$(47,9)=CURR_CLIENT$(37,9) ! key, company name, serial number
4172 SYS_STR$(56,8)=CURR_CLIENT$(50,8),SYS_STR$(64,3)="370",SYS_STR$(67,3)=CURR_CLIENT$(47,3) ! auth code, version code, number of users
4174 SYS_STR$(72,1)=" ",SYS_STR$(73,12)="0110 0001511",SYS_STR$(85,2)="0 ",SYS_STR$(87,5)="00000" ! 72=sys type (set there), rest is default stuff
4175 WRITE RECORD (TFCHAN)"11"+CURR_LINE$+" CASE "+CURR_SSN$+"; sys_str$="+QUO+SYS_STR$+QUO+"; break"
4179 PLINE$=STR(NUM(CURR_LINE$)-13)
4180 WRITE RECORD (TFCHAN)"12"+CURR_LINE$+" print @(8,"+PLINE$+"),"+QUO+"Client"+QUO+",@(40,"+PLINE$+"),"+QUO+CURR_CLIENT$(37,9)+QUO+",@(55,"+PLINE$+"),"+QUO+CURR_CLIENT$(47,3)+QUO+","
4185 WRITE RECORD (TFCHAN)"14"+CURR_LINE$+" CASE "+CURR_SSN$+"; APPS$="+QUO+CURR_CLIENT$(58)+QUO+"; break"
4195 RETURN 
5800 REM "Alt sort keys
5810 FIND (Z[2],KEY=A$(10,6),DOM=5811)IOL=0320
5890 RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6055 CALL "ZZVDTP",X3$,X0$,X1$,"",0
6060 PRINT @(14,5+V0),"Client code:",@(1,9),"Root directory for files:",@(0,10+V0),Z0$,
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6230 CALL "ZZDISP","AU",A$(1,10),"S/S",X3$,"","",27,5,X4$
6240 PRINT @(39,5),B1$(11,35),@(27,9),A$(66,50),
6390 RETURN 
6400 REM "WHOLE SCREEN
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6490 RETURN 
6500 REM "DELETE
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6590 A1$=""; GOTO 1630
6600 REM "ALT KEY DATA READS
6690 RETURN 
6700 REM "ADD ENTRY
6710 WRITE (Z[1],KEY=A1$)IOL=0310
6790 GOTO 9900
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 IF A1$="" THEN GOTO 6800 ELSE IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM "PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6856 CALL "ZZPROM","K0",X3$,S3,"","","",0; ON S3 GOTO 6857,9900
6860 PRINT 'RB',; CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6865 GOTO 1100
6870 GOTO 6895
6890 GOTO 1515
6895 CALL "ZZPROM","K1",X3$,S3,"","","",0; IF S3=1 THEN GOTO 9900 ELSE IF A1$="" THEN GOTO 6860 ELSE PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=6896)
6898 ON S9 GOTO 6810,1100
7200 REM "Forced read
7210 IF ERR<>0 THEN GOTO 9000
7220 CALL "ZZREAD",Z[1],A1$,A$,A{ALL},S8; ON S8 GOTO 7221,1630
7230 GOSUB 6200
7240 CALL "ZZPROM","E0",X3$,0,"","","",0; GOTO 7290
7250 CALL "ZZPROM","E0A",X3$,0,"","","",0; GOTO 7290
7290 GOTO 1630
7390 IF X0>0 THEN X0=X0-0
7400 REM "EXTRACT
7410 EXTRACT (Z[1],ERR=7200,KEY=A1$,DOM=7440)IOL=0310
7420 C9=1,Z9=1; GOSUB 5800
7440 RETURN 
7450 REM "EXTRACT NEW ENTRY
7460 WRITE (Z[1],KEY=A1$,DOM=7250)IOL=0310; GOTO 7400
7490 RETURN 
7500 REM "PARSE THE APPLICATIONS  - Q$ passed in.
7501 PRINT @(0,11),"Gathering Files Required:"
7502 S0$="cd "+FNS$(A$(66,50))+";",S3$=S0$,S0$=S0$+" find ",S1$=""
7503 S4$="/usr/lib/pvx/TF",S0$=S0$+S4$+A$(134,3)
7504 IF B2$(18,1)="Y" THEN S4$=S4$+A$(134,3)
7510 FIND (Z[6],KEY=Q$)V1$; GOSUB 7650
7520 S1$=B$(3,6)+B1$(11,30)+V1$(1,9)+" "+V1$(16,3)+V1$(139,8)+S1$
7565 REM "ADD REST
7590 PRINT @(26,11),"*Completed*"
7595 RETURN 
7650 REM FIRST SORT FROM ZWZ THEN GET MODULE CONTENTS
7655 GOSUB 8500
7657 E0$=E0$+"Z0370Z1370Z2370Z3370Z4370Z5370Z6370Z7370Z8370Z9370" ! Add on possible system files to include
7660 FOR X=1 TO LEN(E0$) STEP 5
7661 IF E0$(X,2)="  " THEN GOTO 7690
7662 FIND (Z[3],KEY=E0$(X,2),DOM=7690)IOL=0330
7665 Q$=E0$(X,5)
7668 P=POS(Q$=S1$,11); IF P>0 THEN GOTO 7690 ELSE S1$=S1$+Q$+X3$(21,6)+C$(41,6)
7670 FIND (Z[4],KEY=Q$,DOM=7671)IOL=0340; GOTO 7680
7671 IF Q$(1,1)="Z" AND POS(Q$(2,1)="0123456789")<>0 THEN GOTO 7690; REM "If system list, ok to skip
7675 CALL "ZZPROM","4",X3$,0,"Application/version "+Q$+" not defined","","",0; GOTO 7690
7680 GOSUB 7700
7690 NEXT X
7695 RETURN 
7700 REM "GET ACTUAL STUFF
7705 D$=D$(6)
7710 IF POS(" "<>D$)=0 THEN GOTO 7790 ELSE D0$=D$(1,60),D$=D$(61)
7715 D0$=FNS$(D0$); IF D0$(1,1)<>"/" THEN D0$="./"+D0$
7750 S0$=S0$+" "+D0$,S4$=S4$+" "+D0$
7760 GOTO 7710
7795 RETURN 
7800 REM "CREATE INSTALL FILE
7801 ESCAPE 
7802 CALL "ZZCRYP",X3$,"lightyears","","E",S1$,A{ALL},S9$,X9
7805 I9$=LWD+"/UTILS/tf.temp"
7810 INVOKE "umask 0; cp /dev/null "+I9$
7820 CLOSE (14); OPEN (14,ISZ=-1)I9$
7825 DIM X$(512,$00$); S9$=S9$+X$(1,512-MOD(LEN(S9$),512))
7827 FOR I=1 TO LEN(S9$) STEP 512
7830 WRITE RECORD (14)S9$(I,512)
7835 NEXT I
7840 CLOSE (14)
7850 INVOKE "umask 0; cp ./UTILS/tf.temp /usr/lib/pvx/tf"+A$(134,3)
7890 RETURN 
8000 REM 
8005 PRINT @(0,12),'CE',
8010 Q$=B$(172,9); GOSUB 7500
8012 GOSUB 8200
8015 GOSUB 4000
8017 PRINT @(0,12),'CE', ! this is the point we return to after 4000's
8020 PRINT @(0,12),"Checking number of files:",@(30),'BB',"...",'EB',@(30,12),
8025 INVOKE S0$+" -print|wc -l"
8040 O0$=FNS$(A$(16,50)); IF B2=525 THEN O0$="/dev/rmt0.4" ELSE IF B2=1200 THEN O0$="/dev/rmt0" ELSE IF B2=9999 THEN O0$="/usr/lib/pvx/tape.out" ELSE IF B2=4 THEN O0$="/dev/rmt1"
8041 IF B2=60 OR B2=30 THEN O0$="/dev/rct0"
8042 IF B2<>150 THEN GOTO 8045 ELSE O0$="/dev/rmt0.4"; INVOKE "chdev -l rmt0 -a density_set_2=15"
8045 IF O0$="" THEN CALL "ZZPROM","4",X3$,0,"No output device / file specified","","",0; GOTO 1800
8050 REM PRINT S0$,'LF',S1$
8060 CALL "ZZPROM","Y",X3$,S3,"Do you wish to make this tape/file?","","",0; ON S3 GOTO 8061,6700
8075 REM LET B0$=S1$(50)
8080 PRINT 'WINDOW'(10,12,60,7,2,"Creating tape/file",OPT="cCx"),
8101 PRINT @(1,1),"Reset tape device:",
8105 IF POS("/dev"=O0$)=0 THEN O0=1
8110 IF O0=-999 THEN PRINT @(1,1),; INVOKE "tape reset"; PRINT @(1,1),"*Completed*" ELSE PRINT @(1,1),"N/A"
8115 PRINT @(1,1),"Create tape:",
8120 IF B2$(18,1)="Y" THEN S0$=S3$+"tar cvf "+O0$+" "+S4$ ELSE S0$=S0$+" -print | cpio -ovcB >"+O0$
8160 IF B2$(18,1)="Y" THEN RET_SYS=SYS(S0$) ELSE INVOKE S0$,ERR=*NEXT
8165 PRINT 'WD'(2),
8170 EXTRACT RECORD (Z[2],KEY=B1$(1,10))B1$
8175 REM "LET X$=DAY, B1$(551,6)=FNE$(NUM(X$(7,2)))+X$(1,2)+X$(4,2)
8176 X$=FN%NTD$(CDN,"YYYYMMDD"),X$=CHR(NUM(X$(1,3))-125)+X$(4),B1$(551,6)=X$
8180 WRITE RECORD (Z[2])B1$
8182 EXTRACT RECORD (Z[8],KEY=B1$(1,10))X$
8184 I=NUM(X$(16,2),ERR=8188)-1; IF I<0 THEN I=0
8186 X$(16,2)=STR(I:"00")
8188 WRITE RECORD (Z[8])X$
8190 PRINT @(0,0),'LD','LD','LD',; CALL "ZZPROM","4",X3$,0,"Tape has been created","","",0
8195 GOTO 6700
8200 REM "Client (Remote) Support
8205 H0$=S0$,H1$=S1$,H2$=S2$,H3$=S3$,H4$=S4$
8210 READ (Z[9],KEY=B1$(1,10),DOM=8211)
8220 H$=KEY(Z[9],END=8280); IF H$(1,10)<>B1$(1,10) THEN GOTO 8280 ELSE READ (Z[9])
8230 Q$=H$(11); GOSUB 7500
8240 H1$=H1$+"[CLIENT]"+S1$
8250 GOTO 8220
8280 S0$=H0$,S1$=H1$,S2$=H2$,S3$=H3$,S4$=H4$
8290 RETURN 
8500 REM "Sort Applications from ZWZ
8510 E0$=""
8520 FOR X=0 TO 41
8530 X$=V1$(181+X*8,8); IF POS(" "<>X$)=0 THEN GOTO 8580
8540 READ (Z[5],KEY=X$,DOM=8580)IOL=0350
8545 FOR I=0 TO 9
8550 IF E$(44+I*2,2)="  " THEN GOTO 8575 ELSE E1$=E$(44+I*2,2)+E$(66+I*3,3)
8555 P0=POS(E1$=E0$,5); IF P0>0 THEN GOTO 8575 ELSE P0=POS(E1$<E0$,5); IF P0=0 THEN P0=1
8560 E0$=E0$(1,P0-1)+E1$+E0$(P0)
8575 NEXT I
8580 NEXT X
8590 RETURN 
8800 REM "Messages
8802 PRINT @(0,12),'CE',
8804 IF B2<>4 AND B2<>30 AND B2<>60 AND B2<>150 AND B2<>525 AND B2<>1200 AND B2<>9999 THEN PRINT @(0,12),"SORRY! Tape drive does not support this size tape"; INPUT @(10,13),"PRESS Return to Continue",*; RUN "ZMENU"
8805 IF B2=9999 THEN PRINT @(0,12),"File /usr/lib/pvx/tape.out will contain release software",
8807 IF B2=4 THEN PRINT @(0,12),"Mount a 4mm tape cartridge on rmt1"
8810 IF B2=30 THEN PRINT @(0,12),"Mount a 300ft (30 Meg) Tape Cartridge on tfjtb"
8820 IF B2=60 THEN PRINT @(0,12),"Mount a 600ft (60 Meg) Tape Cartridge on tfjtb"
8830 IF B2=150 THEN PRINT @(0,12),"Mount a 6150 Tape Cartridge"
8840 IF B2=525 THEN PRINT @(0,12),"Mount a 6525 Tape Cartridge"
8850 IF NUM(B2$(16,2))>0 THEN PRINT @(0,14),"Use customer supplied tape cartridge. Qty @ CSI: ",B2$(16,2),
8860 IF B2$(18,1)="Y" THEN PRINT @(0,15),"Tape will be made using tar format"
8880 IF B1$(223,1)="Y" THEN PRINT @(0,16),'BB',"Customer is on Credit Hold.  Check with accounting prior to shipping tape",'EB',
8890 RETURN 
8905 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8910 DEF FNS$(Z$)=Z$(1,POS(S$=Z$+S$)-1)
8915 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
8920 DEF FNB$(Z9$)=X3$(214-6*NUM(Z9$),1)
8940 DEF FNE$(Z9)=CHR(ASC("A")+INT(Z9/10))+STR(MOD(Z9,10))
9000 REM "ERROR PROCESSING
9001 ESCAPE 
9005 PRINT (0,ERR=9006)'WD'(2)
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 Y8=2
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9945 IF B2=150 THEN INVOKE "chdev -l -a density_set_2=17"
9950 RUN "ZMENU"
9999 END 
