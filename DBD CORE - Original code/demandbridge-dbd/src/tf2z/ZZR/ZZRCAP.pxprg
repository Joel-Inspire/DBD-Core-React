0010 REM "<ZZRCAP> Hold Recap Information
0020 SETESC 9300; SETERR 9000
0035 REM "5.7 - 04/12/19 - 12.751388 - tma - SSP# 307152
0037 REM "307152-DBSPT-60944 Error 42 updating sales journal SmartSource GA  
0040 REM "Copyright 2019 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0050 REM "Generalized call program to hold information for later retrieval to write records or print recap, done originally for ssp#90808. Initialize will dim the arrays etc.  You can add a new record to the arrays, add to the buckets of an existing record, or put new data in the buckets of an existing record.  You can retrieve the records by the key or by the index.  We start by dimming arrays to 50, if we need more we use the INSERT ARRAY command and increase by 50.
0051 REM "If call/enter do not match exactly you will get an error, be careful
0055 REM "COMMAND_LIST$ will always have the command in the first char, any other stuff will be separated by commas
0056 REM "I=Initialize, A=Add, G=Get(based on key), P=Put, R=Retrieve(based on index), NOTE:index is 0 based, first record is 0, second is 1, etc)
0060 REM "KEY_SIZE will be max key size, NUM_BUCKETS will be number of buckets that will be passed in
0065 REM "With an Add or Put, the KEY$, STRING$, DATA[] will be sent in from the calling program, with a Get, KEY$ comes from the calling program, STRING$, DATA[] will be sent back, with a Retrieve and index number, KEY$, STRING$, DATA[] will be sent back
0067 REM "KEY_LIST$,X$[],X[] will be accessed only by this program, never by the calling program
0070 REM "PRIVATE$[] will hold info needed within this program, calling program should not change anything, [0] will be incremented each time we write a new one (COUNT), [1] will be the current size of the array (ARRAY_SIZE)
0080 REM "RETURN_CODE will be 0 if command performed ok, -1 if problem
0090 CLEAR ; SETERR 9000; ENTER X3$,X4$,COMMAND_LIST$,KEY_SIZE,NUM_BUCKETS,KEY$,STRING$,DATAA{ALL},KEY_LIST$,X${ALL},X{ALL},PRIVATE${ALL},RETURN_CODE
0110 X0$="ZZRCAP",X1$="Hold Recap Information"
0120 DIM Z0$(80,"-")
0130 K0=20,K1=1
0135 C9=-1
0200 REM "
0245 ! IF X3$(66,1)>"2" THEN PRECISION NUM(X3$(66,1),ERR=0246)
0295 ! DIM Z0$(80,X3$(235,1)); Z0$=MNM('GS')+Z0$+MNM('GE')
0600 COMMAND$=COMMAND_LIST$(1,1),RETURN_CODE=0
1000 REM "GOSUB BASED ON COMMAND PASSED IN
1010 ON POS(COMMAND$="IAGPR") GOSUB 1100,1500,2000,2500,2000,3000
1090 GOTO 9900
1100 REM "Unknown command sent in
1110 RETURN_CODE=-1
1190 RETURN 
1500 REM "Initialize arrays etc.
1510 KEY_LIST$=""
1520 DIM PRIVATE$[10]
1530 PRIVATE$[0]="0",PRIVATE$[1]="100" ! SSP#307152/DBDSPT-60944
1540 DIM X$[NUM(PRIVATE$[1])],X[NUM(PRIVATE$[1]),NUM_BUCKETS]
1580 RETURN_CODE=0
1590 RETURN 
2000 REM "Add a record in the next available index if key is not in KEY_LIST$, add to buckets if COMMAND$ is A else set buckets if COMMAND$ is P
2010 P=POS(KEY$=KEY_LIST$,KEY_SIZE); IF P>0 THEN GOTO 2100; REM "Add to existing one
2020 KEY_LIST$=KEY_LIST$+KEY$
2030 COUNT=NUM(PRIVATE$[0]),ARRAY_SIZE=NUM(PRIVATE$[1])
2040 INDEX=COUNT,PRIVATE$[0]=STR(COUNT+1)
2050 IF INDEX>ARRAY_SIZE THEN CALL "INSERT_ARRAY;NUMERIC",X{ALL},ARRAY_SIZE+1,50; CALL "INSERT_ARRAY;STRING",X${ALL},ARRAY_SIZE+1,50; ARRAY_SIZE=ARRAY_SIZE+50,PRIVATE$[1]=STR(ARRAY_SIZE)
2080 X$[INDEX]=STRING$
2100 IF P<>0 THEN INDEX=INT(P/KEY_SIZE)
2140 FOR I=0 TO NUM_BUCKETS
2145 IF COMMAND$="A" THEN X[INDEX,I]=X[INDEX,I]+DATAA[I] ELSE X[INDEX,I]=DATAA[I]
2150 NEXT I
2190 RETURN 
2500 REM "Get a record based on the key sent in KEY$
2510 P=POS(KEY$=KEY_LIST$)
2515 IF P=0 THEN RETURN_CODE=-1; RETURN 
2520 INDEX=INT(P/KEY_SIZE)
2530 STRING$=X$[INDEX]
2540 FOR I=0 TO NUM_BUCKETS
2545 DATAA[I]=X[INDEX,I]
2550 NEXT I
2590 RETURN 
3000 REM "Retrieve a record based on an index sent in
3010 C=POS(","=COMMAND_LIST$)
3015 IF C=0 THEN RETURN_CODE=-1; RETURN 
3020 INDEX$=COMMAND_LIST$(C+1)
3025 D=POS(","=INDEX$)
3030 IF D=0 THEN INDEX=NUM(INDEX$,ERR=3031); GOTO 3032 ELSE INDEX=NUM(INDEX$(1,D-1),ERR=3031); GOTO 3032
3031 RETURN_CODE=-1; RETURN 
3040 IF INDEX>=NUM(PRIVATE$[0]) THEN RETURN_CODE=1; RETURN 
3050 KEY$=KEY_LIST$(INDEX*KEY_SIZE+1,KEY_SIZE)
3055 STRING$=X$[INDEX]
3060 FOR I=0 TO NUM_BUCKETS
3065 DATAA[I]=X[INDEX,I]
3070 NEXT I
3090 RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6020 PRINT @(0,4),"This CSI utility program will ... "
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
8950 DEF FNS$(Z9$)=Z9$(1,POS("     "=Z9$+"     ")-1)
9000 REM "ERROR PROCESSING
9005 IF ERR=69 THEN GOTO 9500
9010 Y5=ERR,Y6=TCB(5)
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)="N" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9900 REM "END PROGRAM
9910 REM CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0;REM"ssp122512, we didn't open any files so we don't need to close any
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
