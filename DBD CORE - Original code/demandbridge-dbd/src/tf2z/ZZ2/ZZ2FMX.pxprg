0010 REM "Output Print information & options <ZZ2FMX>
0015 REM "Prog Type: IP-3.1.2   
0020 SETESC 9300; SETERR 9000
0035 REM "5.0 - 03/06/02 - 10.038611 - dmm - SSP# 146548
0040 REM "Copyright 2002 TopForm Software Inc.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0070 REM "P$ is print array
0071 REM "O$ is options/field data array
0072 REM "W9 is file slot of printer
0073 REM "P0$ is printer record (if ="", then we'll read the record & set P0$)
0074 REM "Q0$ is for future use
0075 REM "Q(all) is for future use
0076 REM "A$ and A(all) are Flex Format Doc print Type header info (ZF5)
0077 REM "Z0 is return code, code of 1 = exit
0078 REM "F9 is file slot of ZZPARM
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,P$,O$,W9,F9,A$,A{ALL},P0$,Q0$,Q{ALL},Z0
0100 SETERR 9000
0110 X0$="ZZ2FMX",X1$="Output Print information and fill in options"
0115 IF X3$="?" THEN GOTO 8950
0120 DIM S$(40)
0300 REM "IOLISTS
0500 REM "FILES
0505 REM DIM Z(NUM(X3$(60,3)))
0510 REM LET Z$="01O ZF6...  13O ZZPARM  "
0520 REM GOSUB 09750; ON Z0 GOTO 00521,09900
0600 REM "If P0$="" then read in parameters
0605 IF P0$>"" THEN GOTO 0650
0610 DIM P0$(391)
0620 READ (F9,KEY="PRINTERS")P8$,P9$
0630 P=POS(FID(W9)=P9$); IF P=0 THEN GOTO 0650
0640 READ (F9,KEY="ptr"+P8$(INT(P/2)*8+9,8),DOM=0650)P0$
0650 REM "Set P0 to 1 if printer option package is found
0655 IF POS(" "<>P0$(384,8))<>0 THEN P0=1,P2$=FNS$(P0$(384,8)) ELSE P0=0,P2$=""
1000 REM "Send P$ to device W9 a line at a time (width of line in A(2))
1010 FOR L=0 TO INT(LEN(P$)/A[2])-1
1015 P1$=P$(L*A[2]+1,A[2]); REM "seperate current line out
1020 IF POS($7E$=P1$)<>0 THEN GOSUB 7500; REM "Expand any options if found and printer package found
1074 REM "Print out P1$, handling $1B$ as needed. P1$ may be consumed during this process
1075 PRINT (W9)'BO',P1$,'EO',
1080 IF FID(W9)=FID(0) THEN IF L<>0 AND MOD(L,19)=0 THEN CALL "ZZPROM",".5",X3$,Z0,"","","",0; IF Z0=1 THEN GOTO 9900
1090 NEXT L
1100 REM "Prepare for next form
1105 DIM P$(LEN(P$))
1110 O$=""
1195 GOTO 9900
7500 REM "Expand options found in string P1$
7505 O=POS($7E$=P1$); IF O=0 OR LEN(P1$)<O+2 THEN GOTO 7595; REM "Len <O+2 ensures string is long enough to have the index to options in it. If not, the field is probably too close to the edge of the form.
7510 I0=POS("<"+P1$(O+1,2)+">"=O$); IF I0=0 THEN P1$(O,3)="???"; GOTO 7505; REM "If not found, put in question marks & go on to next field.
7515 I2$=O$(I0,POS("}"=O$(I0))); REM "Get options & data for this field
7520 I1=POS("{"=I2$)
7525 O0$=I2$(5,I1-5); REM "Get options+parameters string
7530 D0$=I2$(I1+1,LEN(I2$)-I1-1),D1$=D0$,L0$="",L1$=""; REM "Get data before (D0$) and final printstring D1$, inited to D0$
7550 IF P0=1 THEN CALL P2$,ERR=7551,X3$,X4$,P0$,D0$,O0$,"",D1$,L0$,L1$
7572 REM "Remove space that would have been taken by the data (D0$) and add in string of codes + data
7574 IF LEN(D0$)<3 THEN D0$=D0$+S$(1,3-LEN(D0$)); REM "PAD d0$ so that it at least erases the field marker information which is 3 chars long
7576 IF O=1 THEN P1$=D1$+P1$(O+LEN(D0$)) ELSE P1$=P1$(1,O-1)+D1$+P1$(O+LEN(D0$))
7580 P1$=L0$+P1$+L1$
7590 GOTO 7505
7595 RETURN 
8905 DEF FNS$(Z9$)=Z9$(1,POS(S$=Z9$+S$)-1)
8950 REM "Module Hellp
8955 PRINT 'LF','LF'; LIST 0010; LIST 0035,0049; PRINT 'LF'
8960 J$=LST(PGM(90)); IF POS("ENTER"=J$)=0 THEN GOTO 8961 ELSE J$="CALL "+QUO+X0$+QUO+J$(POS("ENTER"=J$)+5); PRINT J$
8962 PRINT "X3$    = System Parameters."
8963 PRINT "X4$    = Format Infomation."
8965 PRINT "P$     = Print array of characters with print image."
8967 PRINT "O$     = Options array for print fields with options, stores the data",'LF',"          and options."
8969 PRINT "W9     = File slot that printer is open on."
8971 PRINT "F9     = File slot that ZZPARM is open on."
8973 PRINT "A$     = Flex Format Document Header string (ZF5) returned by ZZ2FMZ."
8975 PRINT "A(ALL) = Flex Format Document Header numerics (ZF5) returned by ZZ2FMZ."
8977 PRINT "P0$    = Printer hex codes record ('ptr'+Printer type in ZZPARM)."
8979 PRINT "         RETURNS: If passed in as '', this routine will read it for you."
8981 PRINT "Q0$    = Reserved for future use."
8983 PRINT "Q(ALL) = Reserved for future use."
8985 PRINT "Z0     = RETURNS: Control Code, if Z0=1, means goto end of report."
8995 GOTO 9930
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2040
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10744 REM "7600 routine prints strings containing an escape, but it USES UP P1$ so be careful
