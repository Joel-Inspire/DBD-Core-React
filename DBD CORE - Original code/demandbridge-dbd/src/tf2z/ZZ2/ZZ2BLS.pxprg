0010 REM "BASIC ls, create list of files from basic DIRectory <ZZ2BLS>
0035 REM "5.7 - 04/03/13 - 23.363888 - crg - SSP# 260723
0037 REM "260723-Import Module/Cash Receipts GW/CIG Plus; Allow selection of 
0040 REM "Copyright 2013 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0080 REM LET O$="",T$="D7:SS2*"; GOTO 00111
0090 CLEAR 
0095 REM "O$= zero or more options,
0096 ! S=create string output instead of display to screen,
0101 ! L=Long string option, return R$, but with variable length file names only delimited by "|"s
0105 REM "T$=target in form [ D+disk# ]:search_string. Disk number is optional, D0 is assumed. One wildcard character (the '*') is allowed in the search stringand can be beginning, middle, or end of string. A 'D*:' as the disk specifier means search all disks. T$='' Means all files on D0
0106 REM "R$=optional return string if the "S" option is used, each entry is 12 bytes long, of the form "DN:XXXXXXXX "where n is the disk number, X's are the file name, including spaces, and the last char is blank if file name <= 8 chars, and a '+' if file name was longer
0108 SETERR 0120
0109 C9$="N"; REM "C9$=was called?
0110 ENTER T$,O$,R$
0120 SETERR 9000
0125 IF T$="" AND O$="" AND R$="" THEN C9$="N" ELSE C9$="Y"
0130 SEARCH_SD$="Y" ! DEFAULT SUB DIRECTORY SEARCH TO YES
0140 EXACT_CASE$="Y" ! DEFAULT CASE TO EXACT FOR T'BRED CODE
0200 REM "If no T$, prompt for it
0205 IF C9$="N" THEN PRINT @(0,0),'CS',
0210 IF T$="" THEN PRINT "Disk#:filename pattern ex: D1:AR2UT*",'LF',"Search string: ",; INPUT T$
0400 IF POS("|"=T$)=0 THEN GOTO 0800
0410 FILE_PATH$=T$(POS("|"=T$)+1)
0420 T$=T$(1,POS("|"=T$)-1)
0800 ! SET OPTIONS FLAGS
0820 IF POS("S"=O$)<>0 THEN RET_STR_FLAG$="Y" ELSE RET_STR_FLAG$="N"
0825 IF POS("L"=O$)<>0 THEN DELIMITED_STR_FLAG$="Y" ELSE DELIMITED_STR_FLAG$="N"
0900 REM 'PRE PROCESS T$
0905 REM "If T$ = '' then that means search for all files on D0, so to make downstream processing easier, make T$ say that
0910 IF T$="" THEN T$="D0:*"
0930 IF LEN(T$)<3 THEN D$="0"; T$="D0:"+T$; REM "If length is less than 'Dn:' then can't have a drive specification, so add one
0940 IF T$(1,1)<>"D" OR T$(3,1)<>":" THEN T$="D0:"+T$; REM IF 1ST 3 CHARS NOT IN FORM 'DN:' THEN NOT A DRIVE SPEC SO ADD ONE
0980 REM 'WE KNOW FROM ABOVE T$ IS OF THE FORM "Dn:tttt" SO SPLIT OUT T2$ AS THE FILENAME PART, GOSUB PARSE_WILDCARD TO SETUP T0$ & T1$ FOR MATCHING
0984 T2$=T$(4)
1000 REM "Build D$, the string of disks to look at
1030 D0$=T$(1,3); IF LEN(T$)>3 THEN T$=T$(4) ELSE T$="*"; REM " if length < 4 then we had T$="DN:" which means all files on that disk, so set it to "*" for easier downstream processing
1050 SWITCH D0$(2,1)
1051 CASE ="*"
1060 FILE_PATH$=HWD
1061 SEARCH_SD$="Y"
1062 BREAK
1070 CASE "0"
1091 DEFAULT 
1100 IF FILE_PATH$="" THEN FILE_PATH$=%DATAPATH$
1101 SEARCH_SD$="N" ! 60 X speed increase as each file is not opened.
1110 END SWITCH 
1500 ! ^ 1500
1510 MAIN:REM " Process Disks
1515 IF POS("*"=T2$)=0 THEN R$=D0$+T2$; GOTO 1990
1520 R$=FN%GET_FILES$(FILE_PATH$,T2$,"|",EXACT_CASE$,SEARCH_SD$)
1530 IF DELIMITED_STR_FLAG$="Y" THEN {
1532 GOTO 1990
1533  }
1540 DCNT=POS("|"=R$,1,0)
1545 IF DCNT=0 THEN GOTO 1990
1550 R$=D0$+R$
1560 FOR X=1 TO DCNT-1
1570 P=POS("|"=R$,1,1)
1571 PRE_DLM$=R$(1,P-1)
1572 PST_DLM$=R$(P+1)
1580 IF PST_DLM$<>"" THEN R$=PRE_DLM$+D0$+PST_DLM$ ELSE R$=PRE_DLM$
1590 NEXT X
1600 IF MID(R$,LEN(R$),1)="|" THEN R$=MID(R$,1,LEN(R$)-1)
1990 GOTO 9900
9000 REM "ERROR PROCESSING
9005 IF ERR=36 THEN GOTO 0111
9020 EXIT ERR
9900 REM "END PROGRAM
9915 SETERR 9930
9919 IF C9$="Y" THEN GOTO 9930
9920 RUN "ZMENU"
9930 EXIT 
9999 END 
10000 REM "GUI interface to allow user to select from available files
10010 SELECT_FILES:
10050 ENTER FLIST$,PFX$,SFX$,ERR=*NEXT
10052 IF NUL(%WDX$) THEN MSGBOX MSG("WARN_WINDX"),MSG("ERROR"),"OK,STOP"; GOTO 10075
10060 PROCESS "ZZGBLS","../ZZG/ZZ.EN",FLIST$,PFX$,SFX$
10075 EXIT 
10090 ! 
10100 ! 100 - Initialization
10110 INIT:
10154 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,-1,X1,X2; DIM Z[NUM(X3$(60,3))]
10160 GOSUB SET_INIT_VARS
10190 RETURN 
10199 ! 
10200 ! 200 - Main panel post_display logic
10210 MAIN_POST_DISPLAY:
10290 RETURN 
10299 ! 
10500 ! 500 - Initialize panel variables
10510 SET_INIT_VARS:
10540 FLIST$=ARG_1$,PFX$=ARG_2$,SFX$=ARG_3$
10550 OPEN (HFN)"*MEMORY*"; MEMCHN=LFO
10570 RETURN 
10599 ! 
10900 ! 900 - Wrapup
10910 WRAPUP:
10915 FLIST$=""
10920 READ (MEMCHN,KEY="",DOM=*NEXT)
10930 K$=KEY(MEMCHN,END=*NEXT); READ (MEMCHN,KEY=K$)F$; FLIST$+=F$; GOTO *SAME
10990 ARG_1$=FLIST$
10994 CLOSE (MEMCHN)
10995 RETURN 
10999 ! 
11000 ! 
11010 REM "Loads given control with the files present in providex.ddf
11015 REM "FILE_LIST - NOMADS Grid Control to be loaded with list of files
11020 REM "FLIST$ - List of files returned in ZZ2BLS format eg: "D0:ABCXXXXXXD0:DEFXXXXXX"
11025 REM "PFX$ - Prefix to file names, eg: Disk num specification - "D0:"
11027 REM "SFX$ - Suffix to file names, eg: "|"
11030 LOAD_FILE_LIST:
11032 SETERR ERR_CATCH
11040 ENTER FILE_LIST,FLIST$,PFX$,SFX$,ERR=*NEXT
11050 F$=FLIST$
11100 CLEAR_GRID: GRID LOAD FILE_LIST,0,0,""
11110 IF NUL(SFX$) THEN IF NOT(NUL(PFX$)) THEN NUMFILES=POS(PFX$=F$,1,0),SEP$=PFX$ END_IF ELSE NUMFILES=POS(SFX$=F$,1,0),SEP$=SFX$; IF NOT(NUL(PFX$)) THEN F$=SUB(F$,PFX$,"")
11115 IF NOT(NUMFILES) THEN GOTO LFL_END ELSE DIM F1$[NUMFILES+1]; F$=SUB(F$,SEP$,SEP)
11120 READ DATA FROM F$ TO F1${ALL}:[STR(SEP)]
11150 FOR X=0 TO NUMFILES+1
11190 IF NOT(NUL(F1$[X])) THEN GRID LOAD FILE_LIST,1,0,SEP+PFX$+SEP+F1$[X]+SEP+SFX$+SEP
11250 NEXT X
11270 LFL_END:
11290 EXIT 
11300 ! 
11320 ERR_CATCH:
11325 XX=ERR; YY=TCB(5); ERRMSG$="Error "+STR(XX)+" at line "+STR(YY)+": Stack:"+FN%GET_STACK$; GOTO LFL_END
11330 GOTO LFL_END
11339 ! 
11399 ! 
11400 REM "Event handler - OnSelect
11405 SELECT_FILE:
11410 READ DATA FROM FILE_GRID.CTL'ROWDATA$ TO IOL=FILE_GRID.CTL'LOADIOLIST$
11420 IF C_SEL$="1" THEN {
11430 WRITE (MEMCHN,KEY=PAD(STP(C_FILENAME$,2),60),ERR=*NEXT)C_PFX$+C_FILENAME$+C_SFX$
11440  } ELSE {
11450 REMOVE (MEMCHN,KEY=PAD(STP(C_FILENAME$,2),60),ERR=*NEXT)
11460  }
11495 RETURN 
11499 ! 
11999 ! 
56002 REM "260723-Import Module/Cash Receipts GW/CIG Plus; Allow selection of 
