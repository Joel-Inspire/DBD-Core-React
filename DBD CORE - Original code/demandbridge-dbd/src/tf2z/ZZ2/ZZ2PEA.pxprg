0010 REM "UNIX/XENIX BASIC Device Setup <ZZ2PEA>
0015 REM "Prog Type: I -1.1A
0020 SETESC 9300; SETERR 9000
0025 REM "3.0
0030 REM "Produced under licence from Basic Ideas, Inc; Norcross, Ga.
0035 REM "5.7 - 11/23/21 - 16.544408 - crg - SSP# 307384
0037 REM "307384-DBSPT-127145: Expand queue path in Device Setup             
0040 REM "Copyright 2021 Demand Bridge, LLC.; Norcross, Georgia
0041 REM "        Licensed Software - All Rights Reserved.
0044 ! ********************************************************************    
0045 ! THIS PROGRAM WILL NO LONGER BE MODIFIED. THE GUI PANEL WILL BE PROCESSED FROM HERE. ALL FUTURE CHANGES NEED TO BE MADE IN ZZGPEA PANEL AND PROGRAM. (DBSPT-127145)
0046 ! ********************************************************************
0050 IF TCB(13)=1 THEN BEGIN 
0052 IF NUL(%WDX$) THEN MSGBOX MSG("WARN_WINDX"); GOTO 0075
0055 IF NOT(%GUI) THEN CHUI_MODE=1; %GUI=1
0060 PROCESS "ZZGPEA","../ZZG/ZZ.EN"
0065 IF CHUI_MODE THEN %GUI=0; RUN "ZMENU"
0075 IF TCB(13)=1 THEN RUN "ZMENU" ELSE EXIT 
0090 CLEAR ; SETERR 0100; ENTER X3$,X4$,Q0$,Q1$
0100 SETERR 9000; SETESC 9300
0110 X0$="ZZ2PEA",X1$="Device Setup",K9$="",K9=0
0115 X1$=""
0120 DIM S$(20),LNK_REC$(256),LINE$(80,$C4$)
0130 K0=2,K1=1
0135 C9=-1,V9=-2
0200 REM "
0240 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,M9$,X0,X1,X2; IF X1>0 THEN GOTO 9920
0245 IF X3$(65,1)>"2" THEN PRECISION NUM(X3$(65,1),ERR=0246)
0250 ! IF X3$(77,1)="D" THEN WIN_FLAG=1 ELSE WIN_FLAG=0
0300 REM "IOLISTS
0310 IOLIST A$(1)
0430 IOLIST P$
0500 REM "FILES
0505 DIM Z[NUM(X3$(60,3))]
0510 Z$="01X ZZ9...  13O ZZPARM  "
0520 GOSUB 9750; ON Z0 GOTO 0521,9900
0590 READ (Z[1],KEY=K9$,DOM=0591)
0600 REM "
0680 GOSUB 6000
1000 REM "
1010 Y8=1; CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,X2
1035 DIM A$(255)
1040 IF V9<>-1 THEN GOSUB 6900
1045 A$(1,LEN(A1$))=A1$; IF A1$="" THEN A$(1,LEN(K9$))=K9$
1060 PRINT (0,ERR=1070)'CF',; GOSUB 6450; GOTO 1100
1070 GOSUB 6000; GOSUB 6450
1100 REM "KEY SEQ
1110 X0=-1,C0=0,X1=0,C9=0,Z9=0
1120 SETERR 9000; C0=ABS(C0),X$=""; IF C0=2 AND X0>0 THEN X0=X0-1 ELSE IF C0<>2 THEN X0=X0+1; IF C0=4 THEN GOTO 9900
1140 ON X0 GOTO 1200,1500
1200 REM "Device name
1210 CALL "ZZENTR","SXUX",A{ALL},A$,X4$,X3$,18,3,1,2,C0,"","{1"+X$,K9$,"ZZ2PEA00","ZZ9","",""; IF C0=6 THEN GOSUB 6400; C0=1
1240 IF INT(ABS(C0))=3 THEN C0=-ABS(C0); READ (Z[1],KEY=A$(1,2),DOM=1241)
1250 IF C0<0 THEN ON INT(ABS(C0)-2) GOTO 1210,6800,9800,6970
1260 GOTO 1120
1500 REM "
1505 Z9=-1,C9=0,A2$="",A3$="",A4$="",A5$=""
1510 A1$=A$(1,2)
1520 READ (Z[1],ERR=7200,KEY=A1$,DOM=1600)IOL=0310
1525 Z9=0,V7$=""; GOSUB 5800
1590 GOTO 1700
1600 REM "
1620 CALL "ZZPROM","2",X3$,Z,"","","",0; ON Z GOTO 1650,1630
1630 GOTO 1000
1660 IF V9>=0 THEN GOSUB 6200
1680 GOSUB 7450
1690 GOTO 2000
1700 REM "
1790 GOSUB 6200
1800 REM "
1810 IF V9=-2 THEN IF ABS(C0)=4 THEN PRINT 'CF',; GOTO 6980 ELSE GOTO 2000
1820 CALL "ZZPROM",STR(6+C9),X3$,Z,"","","V",X0; ON Z GOTO 1850,6500,1630,6700,1821
1825 GOTO 6700
1840 GOTO 2000
1850 REM "MODIFY
1855 X0=X0-1; IF Z9=1 THEN GOTO 1880 ELSE IF Z9=0 THEN Z9=1
1860 GOSUB 7400
1870 GOSUB 6200
1890 IF Z<0 THEN GOTO 2040 ELSE GOTO 2000
2000 REM "DATA SEQ
2010 C0=0,X0=-1,X1=1
2020 SETERR 9000; X$="",Q$="",C0=ABS(C0),X0=X0+1; IF C0=2 THEN IF X0>0 THEN X0=X0-2
2030 IF C0>3 OR X0<0 THEN GOTO 1800
2040 IF V9<>-2 THEN IF 6*(X0+K1)+5<LEN(V9$) THEN IF V9$((X0+K1)*6+5,1)="3" THEN GOTO 2020 ELSE IF V9$((X0+K1)*6+5,1)="2" AND C0<>2 THEN GOTO 2020
2050 IF X0<LEN(V7$) THEN V7$(X0+1,1)=""
2060 ON X0 GOTO 2100,2150,2300,2350,2400,2500,2600,2650,1800
2100 ! ^ 50 "Device Description
2110 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,37,3,3,40,C0,"","{3"+X$,"","ZZ2PEA02","","",""
2120 GOTO 2020
2150 ! ^ 50 "Device type
2160 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,18,5,43,1,C0,"","{3"+X$,"","ZZ2PEA04","","",""
2170 GOSUB CHECK_LINK_NAME_7600
2180 IF IS_LNK=0 THEN {
2181 X$="Warning: "+A$(1,2)+" file is not a link file! Continue will replace it!"
2182 CALL "ZZPROM","5",X3$,Z,X$,"","SC",0
2183 ON Z GOTO *NEXT,1000
2184 ERASE A$(1,2),ERR=*NEXT; GOTO *SAME
2185 IS_LNK=-1
2186  }
2190 IF IS_LNK=-1 THEN GOSUB CREATE_SERIAL ! SERIAL A1$,ERR=*NEXT ! this line of code added because device files must reside on the server.  If a file system is on an external disk, pvx will lock up
2200 H_LNK=HFN; OPEN (H_LNK,ISZ=256)A1$
2210 IF IS_LNK=1 THEN {
2220 READ RECORD (H_LNK)LNK_REC$
2230  } ELSE {
2240 LNK_REC$(1,4)=TSK(-1)
2250 LNK_REC$(5,4)="dev]"
2260  }
2270 GOTO 2020
2300 ! ^ 50 "Device Setup Key
2310 CALL "ZZENTR","SU",A{ALL},A$,X4$,X3$,18,7,44,8,C0,"","{3"+X$,"ptr","ZZ2PEA06","ZZPA","",""
2320 IF A$(44,8)<>S$(1,8) THEN READ (Z[13],KEY="ptr"+A$(44,8),DOM=2310)IOL=0430; PRINT @(29,7),P$(12,40), ELSE PRINT @(27,7),'CL',
2330 GOTO 2020
2350 ! ^ 50 "Device name (win) or Command (unix)
2360 X$="Unix: Cmd line output pipe to ptr/queue  Win: UNC Network Description"
2370 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,18,9,173,60,C0,"","{3"+X$,"","ZZ2PEA12","","",""
2380 LNK_REC$(9,60)=A$(173,60)
2385 SLAVE$=""; IF A$(173,1)="[" THEN INPUT (0,ERR=2385)@(18,10),"Is this a slave printer? (Y/N): ",SLAVE$:("Y"=2386,"N"=2386)
2386 IF SLAVE$="Y" THEN LNK_REC$(5,4)="apr]" ELSE LNK_REC$(5,4)="dev]"
2389 PRINT @(18,10),'CL',
2390 GOTO 2020
2400 ! ^ 50 "Device driver
2410 X$="Device Driver File"
2420 IF POS(" "<MID(A$,233,22))=0 THEN A$(233,22)="tf_generic"
2430 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,18,11,233,12,C0,"","{3"+X$,"","ZZ2PEA12","","",""
2440 LNK_REC$(69,12)=A$(233,12)
2450 GOTO 2020
2500 ! ^ 50 "Printer Samba Flag
2510 IF WIN_FLAG=1 THEN GOTO 1800
2520 X$="Set if Samba Device "
2530 CALL "ZZENTR","SUY",A{ALL},A$,X4$,X3$,21,14,52,1,C0,"","{3"+X$,"","ZZ2PEA08","","",""
2540 IF A$(52,1)="N" THEN GOTO 1800
2550 GOTO 2020
2600 ! ^ 50 "Samba Queue File
2610 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,18,16,53,60,C0,"","{3"+X$,"","ZZ2PEA10","","",""
2620 GOTO 2020
2650 ! ^ 50 "Unix Printer Command line output pipe
2660 CALL "ZZENTR","S",A{ALL},A$,X4$,X3$,18,18,113,60,C0,"","{3"+X$,"","ZZ2PEA12","","",""
2670 GOTO 2020
5800 REM "Alt sort keys
5890 RETURN 
6000 REM "BACKGROUND
6005 PRINT (0,ERR=6016)'SB',
6055 CALL "ZZDISP","-","04","",X3$,"","",X0,L0,X4$
6060 CALL "ZZVDTP",X3$,X0$,X1$,"",0
6070 PRINT @(1,9),"Device name/Cmd:",@(3,11),"Device driver:",
6071 IF WIN_FLAG=0 THEN {
6072 ! PRINT 'FRAME'(@X(1),@Y(13),@X(79),@Y(20),0,"SAMBA/HTML ONLY"),
6073 LT$=" SAMBA/HTML Only "; MIDLINE=INT((80-LEN(LT$))/2)
6074 PRINT 'GS',@(0,13),LINE$,'GE',@(MIDLINE,13),LT$,
6075 PRINT @(0,14),"Samba/HTML Printer?:",@(6,16),"Queue Path:",@(2,18),"Output Command:"
6080  }
6165 PRINT (0,ERR=6166)'SF',
6190 RETURN 
6200 REM "DISPLAY DATA
6215 GOSUB 6450
6220 PRINT @(37,3),MID(A$,3,40),@(18,5),MID(A$,43,1),@(18,7),MID(A$,44,8),
6225 PRINT @(18,9),MID(A$,173,60),@(18,11),MID(A$,233,22)
6227 IF WIN_FLAG=0 THEN PRINT @(21,14),MID(A$,52,1),@(18,16),MID(A$,53,60),@(18,18),MID(A$,113,60)
6230 PRINT @(29,7),P$(12,40),
6390 RETURN 
6400 REM "WHOLE SCREEN
6402 IF C9=0 THEN IF ABS(C0)=17 THEN GOTO 6970
6405 CALL "ZZCOMP",X0$,X1$,X2$,X3$,X4$,X5$,X0,X1,0
6420 GOSUB 6000
6430 IF C9>0 THEN GOSUB 6200 ELSE GOSUB 6450
6440 IF ABS(C0)>4 THEN C0=ABS(C0)-5
6445 RETURN 
6450 REM "DISPLAY KEYS
6455 IF C9<0 THEN GOTO 6445
6460 PRINT @(18,3),A$(1,2),
6465 GOSUB 6600
6490 RETURN 
6500 REM "DELETE
6510 REMOVE (Z[1],KEY=A1$,DOM=6511)
6520 CLOSE (H_LNK,ERR=*NEXT)
6530 IF A$(43,1)="2" THEN ERASE "*dev"+DLM+A1$,ERR=*NEXT; GOTO *SAME
6590 GOTO 1630
6600 REM "ALT KEY DATA READS
6620 DIM P$(120); FIND (Z[13],KEY="ptr"+A$(44,8),DOM=6621)IOL=0430
6690 RETURN 
6700 REM "ADD ENTRY
6705 IF Z9=0 THEN GOTO 6790 ELSE IF V7$>"" THEN X0=POS(" "<>V7$); IF X0>0 THEN X0=X0-1; GOTO 2050
6710 WRITE (Z[1],KEY=A1$)IOL=0310
6711 WRITE RECORD (H_LNK,IND=0)PAD(LNK_REC$,256)
6720 GOSUB 7500
6790 C9=0; IF Z=6 OR K1=0 THEN GOTO 9900 ELSE IF Z<4 THEN GOTO 1000 ELSE C0=-(3.1+(Z-4)/10); GOTO 6800
6800 REM "NEXT ENTRY IN FILE
6805 ON 10*FPT(C0)+2 GOTO 6850,6806
6810 A1$=KEY(Z[1],END=6895)
6820 IF A1$="" THEN GOTO 6800 ELSE IF A1$(1,LEN(K9$))<>K9$ THEN GOTO 6895
6825 A$(1,LEN(A1$))=A1$
6830 GOSUB 6600
6835 GOSUB 6450
6840 GOTO 1515
6850 REM "PRIOR ENTRY
6855 CALL "ZZKEYP",ERR=6856,Z[1],A1$; GOTO 6820
6860 PRINT 'RB',; CALL "ZZKEYL",ERR=6861,Z[1],A1$; GOTO 6820
6865 GOTO 1100
6870 GOTO 6895
6890 GOTO 1515
6895 IF A1$="" THEN GOTO 6860 ELSE PRINT 'RB',; READ (Z[1],KEY=K9$,DOM=6896)
6898 ON S9 GOTO 6810,1100
6900 REM "GET DEFAULTS
6902 V9$="1803  3703  1805  1807  "
6910 IF V9>=0 THEN READ (Z[13],IND=V9)V9$,IOL=0310; GOTO 6930 ELSE V9=-1
6920 EXTRACT (Z[13],KEY=X0$+"DFLT",DOM=6921)V9$,IOL=0310; V9=IND(Z[13]); READ (Z[13])
6930 RETURN 
6940 V9=-1; REMOVE (Z[13],KEY=X0$+"DFLT",DOM=1000); GOTO 1000
6950 REM "WRITE DEFAULT
6955 WRITE (Z[13],KEY=X0$+"DFLT")V9$,IOL=0310
6960 GOSUB 6920; GOTO 1630
6970 REM "ENTER DEFAULT VALUES AND SETTINGS
6975 A$(1,K0+K9)=""; GOSUB 6200; V9=-2,Q$=""; GOTO 2000
6980 FOR X=1+K1*6 TO LEN(V9$) STEP 6
6982 PRINT @(NUM(V9$(X,2)),NUM(V9$(X+2,2))),; IF V9=-2 THEN PRINT V9$(X+4,1), ELSE READ RECORD (0,SIZ=1)Q$; IF POS(Q$="1234+-"+$0D$)=0 THEN PRINT 'RB'; GOTO 6982
6990 IF Q$="+" THEN EXITTO 6950 ELSE IF Q$="-" THEN GOTO 6940 ELSE IF Q$<>$0D$ THEN V9$(X+4,LEN(Q$))=Q$
6992 NEXT X
6995 V9=0; GOTO 6980
7200 REM "Forced read
7210 IF ERR<>0 THEN GOTO 9000
7220 CALL "ZZREAD",Z[1],A1$,A$,A{ALL},S8; ON S8 GOTO 7221,1630
7230 GOSUB 6200
7240 CALL "ZZPROM","E0",X3$,0,"","","",0; GOTO 7290
7250 CALL "ZZPROM","E0A",X3$,0,"","","",0; GOTO 7290
7290 GOTO 1630
7400 REM "EXTRACT
7410 EXTRACT (Z[1],ERR=7200,KEY=A1$,DOM=7440)IOL=0310
7420 C9=1,Z9=1; GOSUB 5800
7440 RETURN 
7450 REM "EXTRACT NEW ENTRY
7460 WRITE (Z[1],KEY=A1$,DOM=7250)IOL=0310; GOTO 7400
7490 RETURN 
7500 REM "Create PRINTERS record
7505 P0$="PRINTERS",P1$="",P2$="",P3$=""
7510 READ (Z[1],KEY="",DOM=7511)
7520 READ (Z[1],END=7570)IOL=0310
7525 P0$=P0$+A$(44,8),P1$=P1$+A$(1,2),P2$=P2$+"  ",P3$=P3$+A$(43,1)
7560 GOTO 7520
7580 WRITE (Z[13],KEY=P0$(1,8))P0$,P1$,P2$,P3$
7590 RETURN 
7600 ! ^ 7600 Test if file exists and if so if a link file
7610 CHECK_LINK_NAME_7600:
7620 LNK_FLE=HFN; OPEN (LNK_FLE,ISZ=256,ERR=NOLINK,BSY=LOCK_COLLISION_7800)A$(1,2)
7630 READ RECORD (LNK_FLE,IND=0,ERR=BADLINK)LNK_REC$
7640 IF LEN(LNK_REC$)<>256 THEN GOTO BADLINK
7650 IF POS(LNK_REC$(1,1)+LNK_REC$(5,4)="[lnk]"+"[dev]"+"[apr]",5)=0 THEN GOTO BADLINK
7660 CLOSE (LNK_FLE); IS_LNK=1
7670 GOTO CHECK_LINK_NAME_EXIT
7680 NOLINK:
7692 IF ERR=12 THEN IS_LNK=-1 ELSE IS_LNK=0
7710 GOTO CHECK_LINK_NAME_EXIT
7720 BADLINK:
7730 IS_LNK=0
7740 CHECK_LINK_NAME_EXIT:
7741 CLOSE (LNK_FLE,ERR=*NEXT)
7742 RETURN 
7750 ! 
7800 ! ^ 100
7810 LOCK_COLLISION_7800:
7820 X$="Link File is in use by other user, try again later."
7830 CALL "ZZPROM","5",X3$,Z,X$,"","SC",0
7840 ON Z GOTO 1000,9900
7841 GOTO 1000
7850 ! 
8000 DEF FNP$(Z9$)="("+Z9$(1,3)+") "+Z9$(4,3)+"-"+Z9$(7,4)+" Ext: "+Z9$(11,4)
8010 DEF FND$(Z9$)=Z9$(3,2)+"/"+Z9$(5,2)+"/"+STR((ASC(Z9$(1,1))-65)*10+1900+NUM(Z9$(2,1))-1570*POS("  "=Z9$(1,2)):"####")
8020 DEF FNT$(Z9$)=STR(NUM(Z9$(1,2))-12*POS("13"<=Z9$(1,2),2)+12*POS("00"=Z9$(1,2)):"00")+":"+STR(NUM(Z9$(3,2))*.6:"00")+" "+CHR(65+15*POS("12"<=Z9$(1,2),2))+"M"
9000 REM "ERROR PROCESSING
9010 Y5=ERR,Y6=TCB(5); IF Y5=68 OR Y5=69 THEN GOTO 9500
9015 SETERR 9016; Y8$=LST(PGM(Y6))
9016 SETERR 9000
9040 CALL "ZZERRM",Y8$,X0$,Y7$,X3$,Y5,Y6,Y7,Y8,0
9045 REM 
9050 ON Y7 GOTO 9060,9100,9800,9070,9090
9055 REM 
9060 RETRY 
9070 SETERR 9080
9075 EXECUTE Y7$
9080 SETERR 9000; RETRY 
9090 SETERR 0000; RETRY 
9100 REM " TRANSFER CONTROL
9120 ON Y8 GOTO 9900,0990,9920
9180 GOTO 0990
9190 GOTO 9800
9300 SETESC 9350
9310 SETERR 9350
9315 IF X3$(47,1)<>"1" THEN RETURN ELSE SETESC 0000; RETURN 
9350 SETERR 9000; SETESC 9300; RETURN 
9500 REM "CTRL LOGIC
9510 SETERR 9000; GOSUB 6400
9520 ON C9 GOTO 1140,2060
9740 RETURN 
9750 REM "FILES
9760 CALL "ZZFLES",X3$,Y1$,Y0$,Z$,Z{ALL},Z0,Z1
9790 RETURN 
9800 REM "EXIT PROGRAM
9900 REM "END PROGRAM
9905 Y8=2; GOSUB 7500
9910 CALL "ZZFLES",X3$,Y1$,Y0$,"END",Z{ALL},0,0
9920 CLOSE (H_LNK,ERR=*NEXT)
9930 SETERR 9940; Q1$=A1$; EXIT 
9940 SETESC 9350
9950 RUN "ZMENU"
9999 END 
10000 CREATE_SERIAL:
10010 IF %C$="107" AND POS("mnt/gfs"=%DATAPATH$)<>0 THEN SERIAL "/usr/lib/pvx/tf2d/"+A1$,ERR=*NEXT; GOTO *RETURN
10050 SERIAL A1$,ERR=*NEXT
10090 RETURN 
56000 REM "202989-Maintaining printer setup ZZX,C4 on new server locks        
56001 REM "307384-DBSPT-127145: Expand queue path in Device Setup             
